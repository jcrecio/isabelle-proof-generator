{"file_name": "/home/qj213/afp-2021-10-22/thys/Ergodic_Theory/Recurrence.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ergodic_Theory", "problem_names": ["lemma conservativeI:\n  assumes \"qmpt M T\"\n    \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M A > 0 \\<Longrightarrow> \\<exists>n>0. emeasure M ((T^^n)-`A \\<inter> A) >0\"\n  shows \"conservative M T\"", "lemma conservativeI2:\n  assumes \"qmpt M T\"\n    \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M A > 0 \\<Longrightarrow> \\<exists>n>0. (T^^n)-`A \\<inter> A \\<noteq> {}\"\n  shows \"conservative M T\"", "lemma conservativeI3:\n  assumes \"qmpt M T\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> (\\<forall>n>0. (T^^n)-`A \\<inter> A = {}) \\<Longrightarrow> A \\<in> null_sets M\"\n  shows \"conservative M T\"", "lemma (in conservative) conservative_Tinv:\n  assumes \"invertible_qmpt\"\n  shows \"conservative M Tinv\"", "lemma conservative_mptI:\n  assumes \"mpt M T\"\n    \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M A > 0 \\<Longrightarrow> \\<exists>n>0. (T^^n)-`A \\<inter> A \\<noteq> {}\"\n  shows \"conservative_mpt M T\"", "lemma (in conservative) ae_disjoint_then_null:\n  assumes \"A \\<in> sets M\"\n          \"\\<And>n. n > 0 \\<Longrightarrow> A \\<inter> (T^^n)-`A \\<in> null_sets M\"\n  shows \"A \\<in> null_sets M\"", "lemma (in conservative) disjoint_then_null:\n  assumes \"A \\<in> sets M\"\n          \"\\<And>n. n > 0 \\<Longrightarrow> A \\<inter> (T^^n)-`A = {}\"\n  shows \"A \\<in> null_sets M\"", "lemma (in conservative) conservative_density:\n  assumes [measurable]: \"h \\<in> borel_measurable M\"\n      and \"AE x in M. h x \\<noteq> 0\" \"AE x in M. h x \\<noteq> \\<infinity>\"\n  shows \"conservative (density M h) T\"", "lemma recurrent_subset_infty_inf_returns:\n  \"x \\<in> recurrent_subset_infty A \\<longleftrightarrow> (x \\<in> A \\<and> infinite {n. (T^^n) x \\<in> A})\"", "lemma recurrent_subset_infty_series_infinite:\n  assumes \"x \\<in> recurrent_subset_infty A\"\n  shows \"(\\<Sum>n. indicator A ((T^^n) x)) = (\\<infinity>::ennreal)\"", "lemma recurrent_subset_infty_def':\n  \"recurrent_subset_infty A = (\\<Inter>m. (\\<Union>n\\<in>{m..}. A \\<inter> (T^^n)-`A))\"", "lemma recurrent_subset_incl:\n  \"recurrent_subset A \\<subseteq> A\"\n  \"recurrent_subset_infty A \\<subseteq> A\"\n  \"recurrent_subset_infty A \\<subseteq> recurrent_subset A\"", "lemma recurrent_subset_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"recurrent_subset A \\<in> sets M\"\n        \"recurrent_subset_infty A \\<in> sets M\"", "lemma recurrent_subset_rel_incl:\n  assumes \"A \\<subseteq> B\"\n  shows \"recurrent_subset A \\<subseteq> recurrent_subset B\"\n        \"recurrent_subset_infty A \\<subseteq> recurrent_subset_infty B\"", "lemma recurrent_subset_infty_returns:\n  assumes \"x \\<in> recurrent_subset_infty A\" \"(T^^n) x \\<in> A\"\n  shows \"(T^^n) x \\<in> recurrent_subset_infty A\"", "lemma recurrent_subset_of_recurrent_subset:\n  \"recurrent_subset_infty(recurrent_subset_infty A) = recurrent_subset_infty A\"", "theorem (in conservative) Poincare_recurrence_thm:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"A - recurrent_subset A \\<in> null_sets M\"\n        \"A - recurrent_subset_infty A \\<in> null_sets M\"\n        \"A \\<Delta> recurrent_subset A \\<in> null_sets M\"\n        \"A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\"\n        \"emeasure M (recurrent_subset A) = emeasure M A\"\n        \"emeasure M (recurrent_subset_infty A) = emeasure M A\"\n        \"AE x \\<in> A in M. x \\<in> recurrent_subset_infty A\"", "theorem (in conservative) recurrence_series_infinite:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\"\n  shows \"AE x in M. f x > 0 \\<longrightarrow> (\\<Sum>n. f ((T^^n) x)) = \\<infinity>\"", "lemma return_partition_basics:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n  shows [measurable]: \"return_partition A n \\<in> sets M\"\n    and \"disjoint_family (\\<lambda>n. return_partition A (n+1))\"\n        \"(\\<Union>n. return_partition A (n+1)) = recurrent_subset A\"", "lemma return_time0:\n  \"(return_time_function A)-`{0} = UNIV - recurrent_subset A\"", "lemma return_time_n:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"(return_time_function A)-`{Suc n} = return_partition A (Suc n)\"", "lemma return_time_function_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"return_time_function A \\<in> measurable M (count_space UNIV)\"\n        \"return_time_function A \\<in> borel_measurable M\"", "lemma first_entrance_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n    shows \"first_entrance_set A n \\<in> sets M\"", "lemma first_entrance_disjoint:\n  \"disjoint_family (first_entrance_set A)\"", "lemma first_entrance_rec:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"first_entrance_set A (Suc n) = T--`(first_entrance_set A n) - A\"", "lemma return_time_rec:\n  assumes \"A \\<in> sets M\"\n  shows \"(return_time_function A)-`{Suc n} = T--`(first_entrance_set A n) \\<inter> A\"", "lemma local_time_birkhoff:\n  \"local_time A n x = birkhoff_sum (indicator A) n x\"", "lemma local_time_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"local_time A n \\<in> borel_measurable M\"", "lemma local_time_cocycle:\n  \"local_time A n x + local_time A m ((T^^n)x) = local_time A (n+m) x\"", "lemma local_time_incseq:\n  \"incseq (\\<lambda>n. local_time A n x)\"", "lemma local_time_Suc:\n  \"local_time A (n+1) x = local_time A n x + indicator A ((T^^n)x)\"", "lemma local_time_bound:\n  \"local_time A n x \\<le> n\"", "lemma (in conservative_mpt) local_time_unbounded1:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n    and fin: \"emeasure M A < \\<infinity>\"\n  shows \"(\\<lambda>n. emeasure M {x \\<in> (T^^n)--`A. local_time A n x < k}) \\<longlonglongrightarrow> 0\"", "lemma (in conservative_mpt) local_time_unbounded2:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and fin: \"emeasure M A < \\<infinity>\"\n      and incl: \"A \\<subseteq> (T^^i)--`B\"\n  shows \"(\\<lambda>n. emeasure M {x \\<in> (T^^n)--`A. local_time B n x < k}) \\<longlonglongrightarrow> 0\"", "lemma (in conservative_mpt) local_time_unbounded3:\n  assumes A_meas[measurable]: \"A \\<in> sets M\"\n      and B_meas[measurable]: \"B \\<in> sets M\"\n      and fin: \"emeasure M A < \\<infinity>\"\n      and incl: \"A - (\\<Union>i. (T^^i)--`B) \\<in> null_sets M\"\n  shows \"(\\<lambda>n. emeasure M {x \\<in> (T^^n)--`A. local_time B n x < k}) \\<longlonglongrightarrow> 0\"", "lemma induced_map_stabilizes_A:\n  \"x \\<in> A \\<longleftrightarrow> induced_map A x \\<in> A\"", "lemma induced_map_iterates_stabilize_A:\n  assumes \"x \\<in> A\"\n  shows \"((induced_map A)^^n) x \\<in> A\"", "lemma induced_map_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n    shows \"induced_map A \\<in> measurable M M\"", "lemma induced_map_iterates:\n  \"((induced_map A)^^n) x = (T^^(\\<Sum>i < n. return_time_function A ((induced_map A ^^i) x))) x\"", "lemma induced_map_stabilizes_recurrent_infty:\n  assumes \"x \\<in> recurrent_subset_infty A\"\n  shows \"((induced_map A)^^n) x \\<in> recurrent_subset_infty A\"", "lemma induced_map_returns:\n  assumes \"x \\<in> A\"\n  shows \"((T^^n) x \\<in> A) \\<longleftrightarrow> (\\<exists>N\\<le>n. n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x)))\"", "lemma (in conservative_mpt) induced_map_measure_preserving_aux:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and W_meas [measurable]: \"W \\<in> sets M\"\n      and incl: \"W \\<subseteq> A\"\n      and fin: \"emeasure M W < \\<infinity>\"\n  shows \"emeasure M ((induced_map A)--`W) = emeasure M W\"", "lemma (in conservative_mpt) induced_map_measure_preserving:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and W_meas [measurable]: \"W \\<in> sets M\"\n  shows \"emeasure M ((induced_map A)--`W) = emeasure M W\"", "theorem (in conservative_mpt) induced_map_conservative_mpt:\n  assumes \"A \\<in> sets M\"\n  shows \"conservative_mpt (restrict_space M A) (induced_map A)\"", "theorem (in fmpt) induced_map_fmpt:\n  assumes \"A \\<in> sets M\"\n  shows \"fmpt (restrict_space M A) (induced_map A)\"", "lemma (in conservative) induced_map_recurrent_typical:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n  shows \"AE z in (restrict_space M A). z \\<in> recurrent_subset A\"\n        \"AE z in (restrict_space M A). z \\<in> recurrent_subset_infty A\"", "lemma induced_function_support:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  shows \"induced_function A f y = induced_function A f y * indicator ((return_time_function A)-`{1..}) y\"", "lemma induced_function_meas_ennreal [measurable]:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\" \"A \\<in> sets M\"\n  shows \"induced_function A f \\<in> borel_measurable M\"", "lemma induced_function_meas_real [measurable]:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\" \"A \\<in> sets M\"\n  shows \"induced_function A f \\<in> borel_measurable M\"", "lemma (in conservative) induced_function_birkhoff_sum:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes \"A \\<in> sets M\"\n  shows \"birkhoff_sum f (qmpt.birkhoff_sum (induced_map A) (return_time_function A) n x) x\n          = qmpt.birkhoff_sum (induced_map A) (induced_function A f) n x\"", "lemma kac_series_aux:\n  fixes d:: \"nat \\<Rightarrow> nat \\<Rightarrow> ennreal\"\n  shows \"(\\<Sum>n. (\\<Sum>i\\<le>n. d i n)) = (\\<Sum>n. d 0 n) + (\\<Sum>n. (\\<Sum>i. d (i+1) (n+1+i)))\"\n    (is \"_ = ?R\")", "lemma induced_function_nn_integral_aux:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and f_meas [measurable]: \"f \\<in> borel_measurable M\"\n      and f_bound: \"\\<And>x. f x \\<le> ennreal C\" \"0 \\<le> C\"\n      and f_supp: \"emeasure M {x \\<in> space M. f x > 0} < \\<infinity>\"\n  shows \"(\\<integral>\\<^sup>+y. induced_function A f y \\<partial>M) = (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\"", "theorem induced_function_nn_integral:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and f_meas [measurable]: \"f \\<in> borel_measurable M\"\n  shows \"(\\<integral>\\<^sup>+y. induced_function A f y \\<partial>M) = (\\<integral>\\<^sup>+x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\"", "theorem kac_formula_nonergodic:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n  shows \"(\\<integral>\\<^sup>+y. return_time_function A y \\<partial>M) = emeasure M (\\<Union>n. (T^^n)--`A)\"", "lemma (in fmpt) return_time_integrable:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n  shows \"integrable M (return_time_function A)\"", "lemma induced_function_integral_aux:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and f_int [measurable]: \"integrable M f\"\n      and f_pos: \"\\<And>x. f x \\<ge> 0\"\n  shows \"integrable M (induced_function A f)\"\n        \"(\\<integral>y. induced_function A f y \\<partial>M) = (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\"", "theorem induced_function_integral_nonergodic:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes [measurable]: \"A \\<in> sets M\" \"integrable M f\"\n  shows \"integrable M (induced_function A f)\"\n        \"(\\<integral>y. induced_function A f y \\<partial>M) = (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\"", "lemma induced_function_integral_restr_nonergodic:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes [measurable]: \"A \\<in> sets M\" \"integrable M f\"\n  shows \"integrable (restrict_space M A) (induced_function A f)\"\n        \"(\\<integral>y. induced_function A f y \\<partial>(restrict_space M A)) = (\\<integral> x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], "translations": [["", "lemma conservativeI:\n  assumes \"qmpt M T\"\n    \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M A > 0 \\<Longrightarrow> \\<exists>n>0. emeasure M ((T^^n)-`A \\<inter> A) >0\"\n  shows \"conservative M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative M T", "unfolding conservative_def conservative_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M T \\<and>\n    (\\<forall>A.\n        A \\<in> sets M \\<longrightarrow>\n        0 < emeasure M A \\<longrightarrow>\n        (\\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A)))", "using assms"], ["proof (prove)\nusing this:\n  qmpt M T\n  \\<lbrakk>?A \\<in> sets M; 0 < emeasure M ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n>0.\n                       0 < emeasure M ((T ^^ n) -` ?A \\<inter> ?A)\n\ngoal (1 subgoal):\n 1. qmpt M T \\<and>\n    (\\<forall>A.\n        A \\<in> sets M \\<longrightarrow>\n        0 < emeasure M A \\<longrightarrow>\n        (\\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A)))", "by auto"], ["", "text \\<open>To prove conservativity, it is in fact sufficient to show that the preimages of a set\nof positive measure intersect it, without any measure control. Indeed, in a non-conservative\nsystem, one can construct a set which does not satisfy this property.\\<close>"], ["", "lemma conservativeI2:\n  assumes \"qmpt M T\"\n    \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M A > 0 \\<Longrightarrow> \\<exists>n>0. (T^^n)-`A \\<inter> A \\<noteq> {}\"\n  shows \"conservative M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative M T", "unfolding conservative_def conservative_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M T \\<and>\n    (\\<forall>A.\n        A \\<in> sets M \\<longrightarrow>\n        0 < emeasure M A \\<longrightarrow>\n        (\\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A)))", "proof (auto simp add: assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure M ((T ^^ n) -` A \\<inter> A)", "interpret qmpt M T"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M T", "using assms"], ["proof (prove)\nusing this:\n  qmpt M T\n  \\<lbrakk>?A \\<in> sets M; 0 < emeasure M ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` ?A \\<inter> ?A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. qmpt M T", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure M ((T ^^ n) -` A \\<inter> A)", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure M ((T ^^ n) -` A \\<inter> A)", "assume A_meas [measurable]: \"A \\<in> sets M\" and \"emeasure M A > 0\""], ["proof (state)\nthis:\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure M ((T ^^ n) -` A \\<inter> A)", "show \"\\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A))\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A))", "have meas_0: \"emeasure M ((T ^^ n) -` A \\<inter> A) = 0\" if \"n>0\" for n"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A))\n\ngoal (1 subgoal):\n 1. emeasure M ((T ^^ n) -` A \\<inter> A) = 0", "by (metis zero_less_iff_neq_zero that)"], ["proof (state)\nthis:\n  0 < ?n1 \\<Longrightarrow> emeasure M ((T ^^ ?n1) -` A \\<inter> A) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "define C where \"C = (\\<Union>n. (T^^(Suc n))-`A \\<inter> A)\""], ["proof (state)\nthis:\n  C = (\\<Union>n. (T ^^ Suc n) -` A \\<inter> A)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "have C_meas [measurable]: \"C \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> sets M", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ Suc n) -` A \\<inter> A) \\<in> sets M", "by measurable"], ["proof (state)\nthis:\n  C \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "have \"emeasure M C = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M C = 0", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (\\<Union>n. (T ^^ Suc n) -` A \\<inter> A) = 0", "by (intro emeasure_UN_eq_0[of M, of \"\\<lambda>n. (T^^(Suc n))-`A \\<inter> A\", OF meas_0], auto)"], ["proof (state)\nthis:\n  emeasure M C = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "define A2 where \"A2 = A-C\""], ["proof (state)\nthis:\n  A2 = A - C\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  A2 = A - C", "have A2_meas [measurable]: \"A2 \\<in> sets M\""], ["proof (prove)\nusing this:\n  A2 = A - C\n\ngoal (1 subgoal):\n 1. A2 \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  A2 \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "have \"\\<not>(\\<exists>n>0. (T^^n)-`A2 \\<inter> A2 \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {})", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {} \\<Longrightarrow>\n    False", "assume \"\\<exists>n>0. (T^^n)-`A2 \\<inter> A2 \\<noteq> {}\""], ["proof (state)\nthis:\n  \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {}", "obtain n where n: \"n > 0\" \"(T^^n)-`A2 \\<inter> A2 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < n\n  (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {} \\<Longrightarrow>\n    False", "define m where \"m = n-1\""], ["proof (state)\nthis:\n  m = n - 1\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {} \\<Longrightarrow>\n    False", "have \"(T^^(m+1))-`A2 \\<inter> A2 \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ (m + 1)) -` A2 \\<inter> A2 \\<noteq> {}", "unfolding m_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ (n - 1 + 1)) -` A2 \\<inter> A2 \\<noteq> {}", "using n"], ["proof (prove)\nusing this:\n  0 < n\n  (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (T ^^ (n - 1 + 1)) -` A2 \\<inter> A2 \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  (T ^^ (m + 1)) -` A2 \\<inter> A2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (T ^^ (m + 1)) -` A2 \\<inter> A2 \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  (T ^^ (m + 1)) -` A2 \\<inter> A2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "using C_def A2_def"], ["proof (prove)\nusing this:\n  (T ^^ (m + 1)) -` A2 \\<inter> A2 \\<noteq> {}\n  C = (\\<Union>n. (T ^^ Suc n) -` A \\<inter> A)\n  A2 = A - C\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {})", "have \"emeasure M A2 = 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {})\n\ngoal (1 subgoal):\n 1. emeasure M A2 = 0", "using assms(2)[OF A2_meas]"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {})\n  0 < emeasure M A2 \\<Longrightarrow>\n  \\<exists>n>0. (T ^^ n) -` A2 \\<inter> A2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. emeasure M A2 = 0", "by (meson zero_less_iff_neq_zero)"], ["proof (state)\nthis:\n  emeasure M A2 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  emeasure M A2 = 0", "have \"emeasure M (C \\<union> A2) = 0\""], ["proof (prove)\nusing this:\n  emeasure M A2 = 0\n\ngoal (1 subgoal):\n 1. emeasure M (C \\<union> A2) = 0", "using \\<open>emeasure M C = 0\\<close>"], ["proof (prove)\nusing this:\n  emeasure M A2 = 0\n  emeasure M C = 0\n\ngoal (1 subgoal):\n 1. emeasure M (C \\<union> A2) = 0", "by (simp add: emeasure_Un_null_set null_setsI)"], ["proof (state)\nthis:\n  emeasure M (C \\<union> A2) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  emeasure M (C \\<union> A2) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "have \"A \\<subseteq> C \\<union> A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> C \\<union> A2", "unfolding A2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> C \\<union> (A - C)", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> C \\<union> A2\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M (C \\<union> A2) = 0\n  A \\<subseteq> C \\<union> A2", "have \"emeasure M A = 0\""], ["proof (prove)\nusing this:\n  emeasure M (C \\<union> A2) = 0\n  A \\<subseteq> C \\<union> A2\n\ngoal (1 subgoal):\n 1. emeasure M A = 0", "by (meson A2_meas C_meas emeasure_eq_0 sets.Un)"], ["proof (state)\nthis:\n  emeasure M A = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               0 < emeasure M ((T ^^ n) -` A \\<inter> A)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  emeasure M A = 0", "show False"], ["proof (prove)\nusing this:\n  emeasure M A = 0\n\ngoal (1 subgoal):\n 1. False", "using \\<open>emeasure M A > 0\\<close>"], ["proof (prove)\nusing this:\n  emeasure M A = 0\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>There is also a dual formulation, saying that conservativity follows from the fact\nthat a set disjoint from all its preimages has to be null.\\<close>"], ["", "lemma conservativeI3:\n  assumes \"qmpt M T\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> (\\<forall>n>0. (T^^n)-`A \\<inter> A = {}) \\<Longrightarrow> A \\<in> null_sets M\"\n  shows \"conservative M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative M T", "proof (rule conservativeI2[OF assms(1)])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "assume \"A \\<in> sets M\" \"0 < emeasure M A\""], ["proof (state)\nthis:\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  A \\<in> sets M\n  0 < emeasure M A", "have \"\\<not>(A \\<in> null_sets M)\""], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. A \\<notin> null_sets M", "unfolding null_sets_def"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. A \\<notin> {N \\<in> sets M. emeasure M N = 0}", "by auto"], ["proof (state)\nthis:\n  A \\<notin> null_sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  A \\<notin> null_sets M", "show \"\\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  A \\<notin> null_sets M\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "using assms(2)[OF \\<open>A \\<in> sets M\\<close>]"], ["proof (prove)\nusing this:\n  A \\<notin> null_sets M\n  \\<forall>n>0. (T ^^ n) -` A \\<inter> A = {} \\<Longrightarrow>\n  A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The inverse of a conservative map is still conservative\\<close>"], ["", "lemma (in conservative) conservative_Tinv:\n  assumes \"invertible_qmpt\"\n  shows \"conservative M Tinv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative M Tinv", "proof (rule conservativeI2)"], ["proof (state)\ngoal (2 subgoals):\n 1. qmpt M Tinv\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "show \"qmpt M Tinv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M Tinv", "using Tinv_qmpt[OF assms]"], ["proof (prove)\nusing this:\n  qmpt M Tinv\n\ngoal (1 subgoal):\n 1. qmpt M Tinv", "."], ["proof (state)\nthis:\n  qmpt M Tinv\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "have \"bij T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij T", "using assms"], ["proof (prove)\nusing this:\n  invertible_qmpt\n\ngoal (1 subgoal):\n 1. bij T", "unfolding invertible_qmpt_def"], ["proof (prove)\nusing this:\n  bij T \\<and> inv T \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. bij T", "by auto"], ["proof (state)\nthis:\n  bij T\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "assume [measurable]: \"A \\<in> sets M\" and \"emeasure M A > 0\""], ["proof (state)\nthis:\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  A \\<in> sets M\n  0 < emeasure M A", "obtain n where *: \"n>0\" \"emeasure M ((T^^n)-`A \\<inter> A) > 0\""], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; 0 < emeasure M ((T ^^ n) -` A \\<inter> A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using conservative[OF \\<open>A \\<in> sets M\\<close> \\<open>emeasure M A > 0\\<close>]"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  0 < emeasure M A\n  \\<exists>n>0. 0 < emeasure M ((T ^^ n) -` A \\<inter> A)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; 0 < emeasure M ((T ^^ n) -` A \\<inter> A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < n\n  0 < emeasure M ((T ^^ n) -` A \\<inter> A)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "have \"bij (T^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij (T ^^ n)", "using bij_fn[OF \\<open>bij T\\<close>]"], ["proof (prove)\nusing this:\n  bij (T ^^ ?n)\n\ngoal (1 subgoal):\n 1. bij (T ^^ n)", "by auto"], ["proof (state)\nthis:\n  bij (T ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  bij (T ^^ n)", "have \"bij(inv (T^^n))\""], ["proof (prove)\nusing this:\n  bij (T ^^ n)\n\ngoal (1 subgoal):\n 1. bij (inv (T ^^ n))", "using bij_imp_bij_inv"], ["proof (prove)\nusing this:\n  bij (T ^^ n)\n  bij ?f \\<Longrightarrow> bij (inv ?f)\n\ngoal (1 subgoal):\n 1. bij (inv (T ^^ n))", "by auto"], ["proof (state)\nthis:\n  bij (inv (T ^^ n))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  bij (inv (T ^^ n))", "have \"bij (Tinv^^n)\""], ["proof (prove)\nusing this:\n  bij (inv (T ^^ n))\n\ngoal (1 subgoal):\n 1. bij (Tinv ^^ n)", "unfolding Tinv_def"], ["proof (prove)\nusing this:\n  bij (inv (T ^^ n))\n\ngoal (1 subgoal):\n 1. bij (inv T ^^ n)", "using inv_fn[OF \\<open>bij T\\<close>, of n]"], ["proof (prove)\nusing this:\n  bij (inv (T ^^ n))\n  inv (T ^^ n) = inv T ^^ n\n\ngoal (1 subgoal):\n 1. bij (inv T ^^ n)", "by auto"], ["proof (state)\nthis:\n  bij (Tinv ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "have \"(T^^n)-`A \\<inter> A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "using *"], ["proof (prove)\nusing this:\n  0 < n\n  0 < emeasure M ((T ^^ n) -` A \\<inter> A)\n\ngoal (1 subgoal):\n 1. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  (T ^^ n) -` A \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  (T ^^ n) -` A \\<inter> A \\<noteq> {}", "have \"(Tinv^^n)-`((T^^n)-`A \\<inter> A) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  (T ^^ n) -` A \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (Tinv ^^ n) -` ((T ^^ n) -` A \\<inter> A) \\<noteq> {}", "using surj_vimage_empty[OF bij_is_surj[OF \\<open>bij (Tinv^^n)\\<close>]]"], ["proof (prove)\nusing this:\n  (T ^^ n) -` A \\<inter> A \\<noteq> {}\n  ((Tinv ^^ n) -` ?A = {}) = (?A = {})\n\ngoal (1 subgoal):\n 1. (Tinv ^^ n) -` ((T ^^ n) -` A \\<inter> A) \\<noteq> {}", "by meson"], ["proof (state)\nthis:\n  (Tinv ^^ n) -` ((T ^^ n) -` A \\<inter> A) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  (Tinv ^^ n) -` ((T ^^ n) -` A \\<inter> A) \\<noteq> {}", "have **: \"(Tinv^^n)-`((T^^n)-`A) \\<inter> (Tinv^^n)-` A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  (Tinv ^^ n) -` ((T ^^ n) -` A \\<inter> A) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (Tinv ^^ n) -` (T ^^ n) -` A \\<inter> (Tinv ^^ n) -` A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  (Tinv ^^ n) -` (T ^^ n) -` A \\<inter> (Tinv ^^ n) -` A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "have \"(Tinv^^n)-`((T^^n)-`A) = ((T^^n) o (Tinv^^n))-`A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Tinv ^^ n) -` (T ^^ n) -` A = (T ^^ n \\<circ> Tinv ^^ n) -` A", "by auto"], ["proof (state)\nthis:\n  (Tinv ^^ n) -` (T ^^ n) -` A = (T ^^ n \\<circ> Tinv ^^ n) -` A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "moreover"], ["proof (state)\nthis:\n  (Tinv ^^ n) -` (T ^^ n) -` A = (T ^^ n \\<circ> Tinv ^^ n) -` A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "have \"(T^^n) o (Tinv^^n) = (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ^^ n \\<circ> Tinv ^^ n = (\\<lambda>x. x)", "unfolding Tinv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. T ^^ n \\<circ> inv T ^^ n = (\\<lambda>x. x)", "using \\<open>bij T\\<close> fn_o_inv_fn_is_id"], ["proof (prove)\nusing this:\n  bij T\n  bij ?f \\<Longrightarrow> ?f ^^ ?n \\<circ> inv ?f ^^ ?n = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. T ^^ n \\<circ> inv T ^^ n = (\\<lambda>x. x)", "by blast"], ["proof (state)\nthis:\n  T ^^ n \\<circ> Tinv ^^ n = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "ultimately"], ["proof (chain)\npicking this:\n  (Tinv ^^ n) -` (T ^^ n) -` A = (T ^^ n \\<circ> Tinv ^^ n) -` A\n  T ^^ n \\<circ> Tinv ^^ n = (\\<lambda>x. x)", "have \"(Tinv^^n)-`((T^^n)-`A) = A\""], ["proof (prove)\nusing this:\n  (Tinv ^^ n) -` (T ^^ n) -` A = (T ^^ n \\<circ> Tinv ^^ n) -` A\n  T ^^ n \\<circ> Tinv ^^ n = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (Tinv ^^ n) -` (T ^^ n) -` A = A", "by auto"], ["proof (state)\nthis:\n  (Tinv ^^ n) -` (T ^^ n) -` A = A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  (Tinv ^^ n) -` (T ^^ n) -` A = A", "have \"(Tinv^^n)-` A \\<inter> A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  (Tinv ^^ n) -` (T ^^ n) -` A = A\n\ngoal (1 subgoal):\n 1. (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "using **"], ["proof (prove)\nusing this:\n  (Tinv ^^ n) -` (T ^^ n) -` A = A\n  (Tinv ^^ n) -` (T ^^ n) -` A \\<inter> (Tinv ^^ n) -` A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "show \"\\<exists>n>0. (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "using \\<open>n>0\\<close>"], ["proof (prove)\nusing this:\n  (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  \\<exists>n>0. (Tinv ^^ n) -` A \\<inter> A \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We introduce the locale of a conservative measure preserving map.\\<close>"], ["", "locale conservative_mpt = mpt + conservative"], ["", "lemma conservative_mptI:\n  assumes \"mpt M T\"\n    \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M A > 0 \\<Longrightarrow> \\<exists>n>0. (T^^n)-`A \\<inter> A \\<noteq> {}\"\n  shows \"conservative_mpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative_mpt M T", "unfolding conservative_mpt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M T \\<and> conservative M T", "apply (auto simp add: assms(1), rule conservativeI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. qmpt M T\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "using assms(1)"], ["proof (prove)\nusing this:\n  mpt M T\n\ngoal (2 subgoals):\n 1. qmpt M T\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "by (auto simp add: mpt_def assms(2))"], ["", "text \\<open>The fact that finite measure preserving transformations are conservative, albeit easy,\nis extremely important. This result is known as Poincar? recurrence theorem.\\<close>"], ["", "sublocale fmpt \\<subseteq> conservative_mpt"], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative_mpt M T", "proof (rule conservative_mptI)"], ["proof (state)\ngoal (2 subgoals):\n 1. mpt M T\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "show \"mpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M T", "by (simp add: mpt_axioms)"], ["proof (state)\nthis:\n  mpt M T\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "assume A_meas [measurable]: \"A \\<in> sets M\" and \"emeasure M A > 0\""], ["proof (state)\nthis:\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "show \"\\<exists>n>0. (T^^n)-`A \\<inter> A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "assume \"\\<not>(\\<exists>n>0. (T^^n)-`A \\<inter> A \\<noteq> {})\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {})", "have disj: \"(T^^(Suc n))--`A \\<inter> A = {}\" for n"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {})\n\ngoal (1 subgoal):\n 1. (T ^^ Suc n) --` A \\<inter> A = {}", "unfolding vimage_restr_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {})\n\ngoal (1 subgoal):\n 1. (T ^^ Suc n) -` (A \\<inter> space M) \\<inter> space M \\<inter> A = {}", "using zero_less_one"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {})\n  (0::?'a) < (1::?'a)\n\ngoal (1 subgoal):\n 1. (T ^^ Suc n) -` (A \\<inter> space M) \\<inter> space M \\<inter> A = {}", "by blast"], ["proof (state)\nthis:\n  (T ^^ Suc ?n3) --` A \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "define B where \"B = (\\<lambda> n. (T^^n)--`A)\""], ["proof (state)\nthis:\n  B = (\\<lambda>n. (T ^^ n) --` A)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  B = (\\<lambda>n. (T ^^ n) --` A)", "have B_meas [measurable]: \"B n \\<in> sets M\" for n"], ["proof (prove)\nusing this:\n  B = (\\<lambda>n. (T ^^ n) --` A)\n\ngoal (1 subgoal):\n 1. B n \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  B ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "have same: \"measure M (B n) = measure M A\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (B n) = Sigma_Algebra.measure M A", "by (simp add: B_def A_meas T_vrestr_same_measure(2))"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M (B ?n3) = Sigma_Algebra.measure M A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "have \"B n \\<inter> B m = {}\" if \"n > m\" for m n"], ["proof (prove)\ngoal (1 subgoal):\n 1. B n \\<inter> B m = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B n \\<inter> B m = {}", "have \"B n \\<inter> B m = (T^^m)--` (B (n-m) \\<inter> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B n \\<inter> B m = (T ^^ m) --` (B (n - m) \\<inter> A)", "using B_def \\<open>m < n\\<close> A_meas vrestr_intersec T_vrestr_composed(1)"], ["proof (prove)\nusing this:\n  B = (\\<lambda>n. (T ^^ n) --` A)\n  m < n\n  A \\<in> sets M\n  ?f --` (?A \\<inter> ?B) = ?f --` ?A \\<inter> ?f --` ?B\n  ?A \\<in> sets M \\<Longrightarrow>\n  (T ^^ ?n) --` (T ^^ ?m) --` ?A = (T ^^ (?n + ?m)) --` ?A\n\ngoal (1 subgoal):\n 1. B n \\<inter> B m = (T ^^ m) --` (B (n - m) \\<inter> A)", "by auto"], ["proof (state)\nthis:\n  B n \\<inter> B m = (T ^^ m) --` (B (n - m) \\<inter> A)\n\ngoal (1 subgoal):\n 1. B n \\<inter> B m = {}", "moreover"], ["proof (state)\nthis:\n  B n \\<inter> B m = (T ^^ m) --` (B (n - m) \\<inter> A)\n\ngoal (1 subgoal):\n 1. B n \\<inter> B m = {}", "have \"B (n-m) \\<inter> A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B (n - m) \\<inter> A = {}", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ (n - m)) --` A \\<inter> A = {}", "by (metis disj \\<open>m < n\\<close> Suc_diff_Suc)"], ["proof (state)\nthis:\n  B (n - m) \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. B n \\<inter> B m = {}", "ultimately"], ["proof (chain)\npicking this:\n  B n \\<inter> B m = (T ^^ m) --` (B (n - m) \\<inter> A)\n  B (n - m) \\<inter> A = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  B n \\<inter> B m = (T ^^ m) --` (B (n - m) \\<inter> A)\n  B (n - m) \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. B n \\<inter> B m = {}", "by simp"], ["proof (state)\nthis:\n  B n \\<inter> B m = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?m3 < ?n3 \\<Longrightarrow> B ?n3 \\<inter> B ?m3 = {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  ?m3 < ?n3 \\<Longrightarrow> B ?n3 \\<inter> B ?m3 = {}", "have \"disjoint_family B\""], ["proof (prove)\nusing this:\n  ?m3 < ?n3 \\<Longrightarrow> B ?n3 \\<inter> B ?m3 = {}\n\ngoal (1 subgoal):\n 1. disjoint_family B", "by (metis disjoint_family_on_def inf_sup_aci(1) less_linear)"], ["proof (state)\nthis:\n  disjoint_family B\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "have \"measure M A < e\" if \"e>0\" for e::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "obtain N::nat where \"N>0\" \"(measure M (space M))/e<N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>0 < N;\n         Sigma_Algebra.measure M (space M) / e < real N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>0 < N;\n         Sigma_Algebra.measure M (space M) / e < real N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis divide_less_0_iff reals_Archimedean2 less_eq_real_def measure_nonneg not_gr0 not_le of_nat_0)"], ["proof (state)\nthis:\n  0 < N\n  Sigma_Algebra.measure M (space M) / e < real N\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "then"], ["proof (chain)\npicking this:\n  0 < N\n  Sigma_Algebra.measure M (space M) / e < real N", "have \"(measure M (space M))/N < e\""], ["proof (prove)\nusing this:\n  0 < N\n  Sigma_Algebra.measure M (space M) / e < real N\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (space M) / real N < e", "using \\<open>0 < e\\<close> \\<open>N>0\\<close>"], ["proof (prove)\nusing this:\n  0 < N\n  Sigma_Algebra.measure M (space M) / e < real N\n  0 < e\n  0 < N\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (space M) / real N < e", "by (metis bounded_measure div_0 le_less_trans measure_empty mult.commute pos_divide_less_eq)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M (space M) / real N < e\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "have *: \"disjoint_family_on B {..<N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on B {..<N}", "by (meson UNIV_I \\<open>disjoint_family B\\<close> disjoint_family_on_mono subsetI)"], ["proof (state)\nthis:\n  disjoint_family_on B {..<N}\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "then"], ["proof (chain)\npicking this:\n  disjoint_family_on B {..<N}", "have \"(\\<Sum>i\\<in>{..<N}. measure M (B i)) \\<le> measure M (space M)\""], ["proof (prove)\nusing this:\n  disjoint_family_on B {..<N}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<N. Sigma_Algebra.measure M (B i))\n    \\<le> Sigma_Algebra.measure M (space M)", "by (metis bounded_measure \\<open>\\<And>n. B n \\<in> sets M\\<close>\n            image_subset_iff finite_lessThan finite_measure_finite_Union)"], ["proof (state)\nthis:\n  (\\<Sum>i<N. Sigma_Algebra.measure M (B i))\n  \\<le> Sigma_Algebra.measure M (space M)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<N. Sigma_Algebra.measure M (B i))\n  \\<le> Sigma_Algebra.measure M (space M)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "have \"(\\<Sum>i\\<in>{..<N}. measure M (B i)) = (\\<Sum>i\\<in>{..<N}. measure M A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<N. Sigma_Algebra.measure M (B i)) =\n    (\\<Sum>i<N. Sigma_Algebra.measure M A)", "using same"], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M (B ?n3) = Sigma_Algebra.measure M A\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<N. Sigma_Algebra.measure M (B i)) =\n    (\\<Sum>i<N. Sigma_Algebra.measure M A)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<N. Sigma_Algebra.measure M (B i)) =\n  (\\<Sum>i<N. Sigma_Algebra.measure M A)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<N. Sigma_Algebra.measure M (B i)) =\n  (\\<Sum>i<N. Sigma_Algebra.measure M A)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "have \"... = N * (measure M A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<N. Sigma_Algebra.measure M A) =\n    real N * Sigma_Algebra.measure M A", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<N. Sigma_Algebra.measure M A) =\n  real N * Sigma_Algebra.measure M A\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "finally"], ["proof (chain)\npicking this:\n  real N * Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M)", "have \"N * (measure M A) \\<le> measure M (space M)\""], ["proof (prove)\nusing this:\n  real N * Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M)\n\ngoal (1 subgoal):\n 1. real N * Sigma_Algebra.measure M A\n    \\<le> Sigma_Algebra.measure M (space M)", "by simp"], ["proof (state)\nthis:\n  real N * Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "then"], ["proof (chain)\npicking this:\n  real N * Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M)", "have \"measure M A \\<le> (measure M (space M))/N\""], ["proof (prove)\nusing this:\n  real N * Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A\n    \\<le> Sigma_Algebra.measure M (space M) / real N", "using \\<open>N>0\\<close>"], ["proof (prove)\nusing this:\n  real N * Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M)\n  0 < N\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A\n    \\<le> Sigma_Algebra.measure M (space M) / real N", "by (simp add: mult.commute mult_imp_le_div_pos)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M) / real N\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "then"], ["proof (chain)\npicking this:\n  Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M) / real N", "show \"measure M A < e\""], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M) / real N\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "using \\<open>(measure M (space M))/N<e\\<close>"], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M A \\<le> Sigma_Algebra.measure M (space M) / real N\n  Sigma_Algebra.measure M (space M) / real N < e\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A < e", "by simp"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?e3 \\<Longrightarrow> Sigma_Algebra.measure M A < ?e3\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  0 < ?e3 \\<Longrightarrow> Sigma_Algebra.measure M A < ?e3", "have \"measure M A \\<le> 0\""], ["proof (prove)\nusing this:\n  0 < ?e3 \\<Longrightarrow> Sigma_Algebra.measure M A < ?e3\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A \\<le> 0", "using not_less"], ["proof (prove)\nusing this:\n  0 < ?e3 \\<Longrightarrow> Sigma_Algebra.measure M A < ?e3\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A \\<le> 0", "by blast"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Sigma_Algebra.measure M A \\<le> 0", "have \"measure M A = 0\""], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M A \\<le> 0\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M A = 0", "by (simp add: measure_le_0_iff)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M A = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Sigma_Algebra.measure M A = 0", "have \"emeasure M A = 0\""], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M A = 0\n\ngoal (1 subgoal):\n 1. emeasure M A = 0", "using emeasure_eq_measure"], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M A = 0\n  emeasure M ?A = ennreal (Sigma_Algebra.measure M ?A)\n\ngoal (1 subgoal):\n 1. emeasure M A = 0", "by simp"], ["proof (state)\nthis:\n  emeasure M A = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n>0.\n               (T ^^ n) -` A \\<inter> A \\<noteq> {}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  emeasure M A = 0", "show False"], ["proof (prove)\nusing this:\n  emeasure M A = 0\n\ngoal (1 subgoal):\n 1. False", "using \\<open>emeasure M A > 0\\<close>"], ["proof (prove)\nusing this:\n  emeasure M A = 0\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n>0. (T ^^ n) -` A \\<inter> A \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The following fact that powers of conservative maps are also conservative is true,\nbut nontrivial. It is proved as follows: consider a set $A$ with positive measure,\ntake a time $n_1$ such that $A_1 = T^{-n_1} A \\cap A$ has positive measure, then a time\n$n_2$ such that $A_2 = T^{-n_2} A_1 \\cap A$ has positive measure, and so on. It follows\nthat $T^{-(n_i+n_{i+1}+\\dots+n_j)}A \\cap A$ has positive measure for all $i<j$. Then, one\ncan find $i<j$ such that $n_i+\\dots+n_j$ is a multiple of $N$.\\<close>"], ["", "proposition (in conservative) conservative_power:\n  \"conservative M (T^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative M (T ^^ n)", "proof (unfold_locales)"], ["proof (state)\ngoal (2 subgoals):\n 1. T ^^ n \\<in> quasi_measure_preserving M M\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "show \"T ^^ n \\<in> quasi_measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ^^ n \\<in> quasi_measure_preserving M M", "by (auto simp add: Tn_quasi_measure_preserving)"], ["proof (state)\nthis:\n  T ^^ n \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "assume [measurable]: \"A \\<in> sets M\" \"0 < emeasure M A\""], ["proof (state)\nthis:\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "define good_time where \"good_time = (\\<lambda>K. Inf{(i::nat). i > 0 \\<and> emeasure M ((T^^i)-`K \\<inter> A) > 0})\""], ["proof (state)\nthis:\n  good_time =\n  (\\<lambda>K.\n      \\<Sqinter> {i. 0 < i \\<and>\n                     0 < emeasure M ((T ^^ i) -` K \\<inter> A)})\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "define next_good_set where \"next_good_set = (\\<lambda>K. (T^^(good_time K))-`K \\<inter> A)\""], ["proof (state)\nthis:\n  next_good_set = (\\<lambda>K. (T ^^ good_time K) -` K \\<inter> A)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "have good_rec: \"((good_time K > 0) \\<and> (next_good_set K \\<subseteq> A) \\<and>\n          (next_good_set K \\<in> sets M) \\<and> (emeasure M (next_good_set K) > 0))\"\n        if [measurable]: \"K \\<in> sets M\" and \"K \\<subseteq> A\" \"emeasure M K > 0\" for K"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "have a: \"next_good_set K \\<in> sets M\" \"next_good_set K \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_good_set K \\<in> sets M &&& next_good_set K \\<subseteq> A", "using next_good_set_def"], ["proof (prove)\nusing this:\n  next_good_set = (\\<lambda>K. (T ^^ good_time K) -` K \\<inter> A)\n\ngoal (1 subgoal):\n 1. next_good_set K \\<in> sets M &&& next_good_set K \\<subseteq> A", "by simp_all"], ["proof (state)\nthis:\n  next_good_set K \\<in> sets M\n  next_good_set K \\<subseteq> A\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "obtain k where \"k > 0\" and posK: \"emeasure M ((T^^k)-`K \\<inter> K) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k; 0 < emeasure M ((T ^^ k) -` K \\<inter> K)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using conservative[OF \\<open>K \\<in> sets M\\<close>, OF \\<open>emeasure M K > 0\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>n>0. 0 < emeasure M ((T ^^ n) -` K \\<inter> K)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k; 0 < emeasure M ((T ^^ k) -` K \\<inter> K)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  0 < emeasure M ((T ^^ k) -` K \\<inter> K)\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "have *:\"(T^^k)-`K \\<inter> K \\<subseteq> (T^^k)-`K \\<inter> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ k) -` K \\<inter> K \\<subseteq> (T ^^ k) -` K \\<inter> A", "using \\<open>K \\<subseteq> A\\<close>"], ["proof (prove)\nusing this:\n  K \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (T ^^ k) -` K \\<inter> K \\<subseteq> (T ^^ k) -` K \\<inter> A", "by auto"], ["proof (state)\nthis:\n  (T ^^ k) -` K \\<inter> K \\<subseteq> (T ^^ k) -` K \\<inter> A\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "have posKA: \"emeasure M ((T^^k)-`K \\<inter> A) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < emeasure M ((T ^^ k) -` K \\<inter> A)", "using emeasure_mono[OF *, of M] posK"], ["proof (prove)\nusing this:\n  (T ^^ k) -` K \\<inter> A \\<in> sets M \\<Longrightarrow>\n  emeasure M ((T ^^ k) -` K \\<inter> K)\n  \\<le> emeasure M ((T ^^ k) -` K \\<inter> A)\n  0 < emeasure M ((T ^^ k) -` K \\<inter> K)\n\ngoal (1 subgoal):\n 1. 0 < emeasure M ((T ^^ k) -` K \\<inter> A)", "by simp"], ["proof (state)\nthis:\n  0 < emeasure M ((T ^^ k) -` K \\<inter> A)\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "let ?S = \"{(i::nat). i>0 \\<and> emeasure M ((T^^i)-`K \\<inter> A) > 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "have \"k \\<in> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "using \\<open>k>0\\<close> posKA"], ["proof (prove)\nusing this:\n  0 < k\n  0 < emeasure M ((T ^^ k) -` K \\<inter> A)\n\ngoal (1 subgoal):\n 1. k \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "by simp"], ["proof (state)\nthis:\n  k \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "then"], ["proof (chain)\npicking this:\n  k \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "have \"?S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  k \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n\ngoal (1 subgoal):\n 1. {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "then"], ["proof (chain)\npicking this:\n  {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)} \\<noteq> {}", "have \"Inf ?S \\<in> ?S\""], ["proof (prove)\nusing this:\n  {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n    \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "using Inf_nat_def1[of ?S]"], ["proof (prove)\nusing this:\n  {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)} \\<noteq> {}\n  {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)} \\<noteq>\n  {} \\<Longrightarrow>\n  \\<Sqinter> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n\ngoal (1 subgoal):\n 1. \\<Sqinter> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n    \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "by simp"], ["proof (state)\nthis:\n  \\<Sqinter> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "then"], ["proof (chain)\npicking this:\n  \\<Sqinter> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "have \"good_time K \\<in> ?S\""], ["proof (prove)\nusing this:\n  \\<Sqinter> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n\ngoal (1 subgoal):\n 1. good_time K\n    \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "using good_time_def"], ["proof (prove)\nusing this:\n  \\<Sqinter> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n  good_time =\n  (\\<lambda>K.\n      \\<Sqinter> {i. 0 < i \\<and>\n                     0 < emeasure M ((T ^^ i) -` K \\<inter> A)})\n\ngoal (1 subgoal):\n 1. good_time K\n    \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "by simp"], ["proof (state)\nthis:\n  good_time K\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "then"], ["proof (chain)\npicking this:\n  good_time K\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}", "show \"(good_time K > 0) \\<and> (next_good_set K \\<subseteq> A) \\<and>\n          (next_good_set K \\<in> sets M) \\<and> (emeasure M (next_good_set K) > 0)\""], ["proof (prove)\nusing this:\n  good_time K\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "using a next_good_set_def"], ["proof (prove)\nusing this:\n  good_time K\n  \\<in> {i. 0 < i \\<and> 0 < emeasure M ((T ^^ i) -` K \\<inter> A)}\n  next_good_set K \\<in> sets M\n  next_good_set K \\<subseteq> A\n  next_good_set = (\\<lambda>K. (T ^^ good_time K) -` K \\<inter> A)\n\ngoal (1 subgoal):\n 1. 0 < good_time K \\<and>\n    next_good_set K \\<subseteq> A \\<and>\n    next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)", "by auto"], ["proof (state)\nthis:\n  0 < good_time K \\<and>\n  next_good_set K \\<subseteq> A \\<and>\n  next_good_set K \\<in> sets M \\<and> 0 < emeasure M (next_good_set K)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?K2 \\<in> sets M; ?K2 \\<subseteq> A; 0 < emeasure M ?K2\\<rbrakk>\n  \\<Longrightarrow> 0 < good_time ?K2 \\<and>\n                    next_good_set ?K2 \\<subseteq> A \\<and>\n                    next_good_set ?K2 \\<in> sets M \\<and>\n                    0 < emeasure M (next_good_set ?K2)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "define B where \"B = (\\<lambda>i. (next_good_set^^i) A)\""], ["proof (state)\nthis:\n  B = (\\<lambda>i. (next_good_set ^^ i) A)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "define t where \"t = (\\<lambda>i. good_time (B i))\""], ["proof (state)\nthis:\n  t = (\\<lambda>i. good_time (B i))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "have good_B: \"(B i \\<subseteq> A) \\<and> (B i \\<in> sets M) \\<and> (emeasure M (B i) > 0)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. B i \\<subseteq> A \\<and> B i \\<in> sets M \\<and> 0 < emeasure M (B i)", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. B 0 \\<subseteq> A \\<and> B 0 \\<in> sets M \\<and> 0 < emeasure M (B 0)\n 2. \\<And>i.\n       B i \\<subseteq> A \\<and>\n       B i \\<in> sets M \\<and> 0 < emeasure M (B i) \\<Longrightarrow>\n       B (Suc i) \\<subseteq> A \\<and>\n       B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. B 0 \\<subseteq> A \\<and> B 0 \\<in> sets M \\<and> 0 < emeasure M (B 0)\n 2. \\<And>i.\n       B i \\<subseteq> A \\<and>\n       B i \\<in> sets M \\<and> 0 < emeasure M (B i) \\<Longrightarrow>\n       B (Suc i) \\<subseteq> A \\<and>\n       B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "have \"B 0 = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B 0 = A", "using B_def"], ["proof (prove)\nusing this:\n  B = (\\<lambda>i. (next_good_set ^^ i) A)\n\ngoal (1 subgoal):\n 1. B 0 = A", "by simp"], ["proof (state)\nthis:\n  B 0 = A\n\ngoal (2 subgoals):\n 1. B 0 \\<subseteq> A \\<and> B 0 \\<in> sets M \\<and> 0 < emeasure M (B 0)\n 2. \\<And>i.\n       B i \\<subseteq> A \\<and>\n       B i \\<in> sets M \\<and> 0 < emeasure M (B i) \\<Longrightarrow>\n       B (Suc i) \\<subseteq> A \\<and>\n       B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "then"], ["proof (chain)\npicking this:\n  B 0 = A", "show ?case"], ["proof (prove)\nusing this:\n  B 0 = A\n\ngoal (1 subgoal):\n 1. B 0 \\<subseteq> A \\<and> B 0 \\<in> sets M \\<and> 0 < emeasure M (B 0)", "using \\<open>B 0 = A\\<close> \\<open>A \\<in> sets M\\<close> \\<open>emeasure M A > 0\\<close>"], ["proof (prove)\nusing this:\n  B 0 = A\n  B 0 = A\n  A \\<in> sets M\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. B 0 \\<subseteq> A \\<and> B 0 \\<in> sets M \\<and> 0 < emeasure M (B 0)", "by simp"], ["proof (state)\nthis:\n  B 0 \\<subseteq> A \\<and> B 0 \\<in> sets M \\<and> 0 < emeasure M (B 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       B i \\<subseteq> A \\<and>\n       B i \\<in> sets M \\<and> 0 < emeasure M (B i) \\<Longrightarrow>\n       B (Suc i) \\<subseteq> A \\<and>\n       B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       B i \\<subseteq> A \\<and>\n       B i \\<in> sets M \\<and> 0 < emeasure M (B i) \\<Longrightarrow>\n       B (Suc i) \\<subseteq> A \\<and>\n       B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "case (Suc i)"], ["proof (state)\nthis:\n  B i \\<subseteq> A \\<and> B i \\<in> sets M \\<and> 0 < emeasure M (B i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       B i \\<subseteq> A \\<and>\n       B i \\<in> sets M \\<and> 0 < emeasure M (B i) \\<Longrightarrow>\n       B (Suc i) \\<subseteq> A \\<and>\n       B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "moreover"], ["proof (state)\nthis:\n  B i \\<subseteq> A \\<and> B i \\<in> sets M \\<and> 0 < emeasure M (B i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       B i \\<subseteq> A \\<and>\n       B i \\<in> sets M \\<and> 0 < emeasure M (B i) \\<Longrightarrow>\n       B (Suc i) \\<subseteq> A \\<and>\n       B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "have \"B (i+1) = next_good_set (B i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B (i + 1) = next_good_set (B i)", "using B_def"], ["proof (prove)\nusing this:\n  B = (\\<lambda>i. (next_good_set ^^ i) A)\n\ngoal (1 subgoal):\n 1. B (i + 1) = next_good_set (B i)", "by simp"], ["proof (state)\nthis:\n  B (i + 1) = next_good_set (B i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       B i \\<subseteq> A \\<and>\n       B i \\<in> sets M \\<and> 0 < emeasure M (B i) \\<Longrightarrow>\n       B (Suc i) \\<subseteq> A \\<and>\n       B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "ultimately"], ["proof (chain)\npicking this:\n  B i \\<subseteq> A \\<and> B i \\<in> sets M \\<and> 0 < emeasure M (B i)\n  B (i + 1) = next_good_set (B i)", "show ?case"], ["proof (prove)\nusing this:\n  B i \\<subseteq> A \\<and> B i \\<in> sets M \\<and> 0 < emeasure M (B i)\n  B (i + 1) = next_good_set (B i)\n\ngoal (1 subgoal):\n 1. B (Suc i) \\<subseteq> A \\<and>\n    B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "using good_rec[of \"B i\"]"], ["proof (prove)\nusing this:\n  B i \\<subseteq> A \\<and> B i \\<in> sets M \\<and> 0 < emeasure M (B i)\n  B (i + 1) = next_good_set (B i)\n  \\<lbrakk>B i \\<in> sets M; B i \\<subseteq> A;\n   0 < emeasure M (B i)\\<rbrakk>\n  \\<Longrightarrow> 0 < good_time (B i) \\<and>\n                    next_good_set (B i) \\<subseteq> A \\<and>\n                    next_good_set (B i) \\<in> sets M \\<and>\n                    0 < emeasure M (next_good_set (B i))\n\ngoal (1 subgoal):\n 1. B (Suc i) \\<subseteq> A \\<and>\n    B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))", "by auto"], ["proof (state)\nthis:\n  B (Suc i) \\<subseteq> A \\<and>\n  B (Suc i) \\<in> sets M \\<and> 0 < emeasure M (B (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B ?i2 \\<subseteq> A \\<and>\n  B ?i2 \\<in> sets M \\<and> 0 < emeasure M (B ?i2)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "have t_pos: \"\\<And>i. t i > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. 0 < t i", "using t_def"], ["proof (prove)\nusing this:\n  t = (\\<lambda>i. good_time (B i))\n\ngoal (1 subgoal):\n 1. \\<And>i. 0 < t i", "by (simp add: good_B good_rec)"], ["proof (state)\nthis:\n  0 < t ?i2\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "define s where \"s = (\\<lambda>i k. (\\<Sum>n \\<in> {i..<i+k}. t n))\""], ["proof (state)\nthis:\n  s = (\\<lambda>i k. sum t {i..<i + k})\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "have \"B (i+k) \\<subseteq> (T^^(s i k))-`A \\<inter> A\" for i k"], ["proof (prove)\ngoal (1 subgoal):\n 1. B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. B (i + 0) \\<subseteq> (T ^^ s i 0) -` A \\<inter> A\n 2. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. B (i + 0) \\<subseteq> (T ^^ s i 0) -` A \\<inter> A\n 2. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. B (i + 0) \\<subseteq> (T ^^ s i 0) -` A \\<inter> A", "using s_def good_B[of i]"], ["proof (prove)\nusing this:\n  s = (\\<lambda>i k. sum t {i..<i + k})\n  B i \\<subseteq> A \\<and> B i \\<in> sets M \\<and> 0 < emeasure M (B i)\n\ngoal (1 subgoal):\n 1. B (i + 0) \\<subseteq> (T ^^ s i 0) -` A \\<inter> A", "by simp"], ["proof (state)\nthis:\n  B (i + 0) \\<subseteq> (T ^^ s i 0) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "case (Suc k)"], ["proof (state)\nthis:\n  B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "have \"B(i+k+1) = (T^^(t (i+k)))-`(B (i+k)) \\<inter> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B (i + k + 1) = (T ^^ t (i + k)) -` B (i + k) \\<inter> A", "using t_def B_def next_good_set_def"], ["proof (prove)\nusing this:\n  t = (\\<lambda>i. good_time (B i))\n  B = (\\<lambda>i. (next_good_set ^^ i) A)\n  next_good_set = (\\<lambda>K. (T ^^ good_time K) -` K \\<inter> A)\n\ngoal (1 subgoal):\n 1. B (i + k + 1) = (T ^^ t (i + k)) -` B (i + k) \\<inter> A", "by simp"], ["proof (state)\nthis:\n  B (i + k + 1) = (T ^^ t (i + k)) -` B (i + k) \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "moreover"], ["proof (state)\nthis:\n  B (i + k + 1) = (T ^^ t (i + k)) -` B (i + k) \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "have \"B(i+k) \\<subseteq> (T^^(s i k))-`A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B (i + k) \\<subseteq> (T ^^ s i k) -` A", "using Suc.IH"], ["proof (prove)\nusing this:\n  B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. B (i + k) \\<subseteq> (T ^^ s i k) -` A", "by simp"], ["proof (state)\nthis:\n  B (i + k) \\<subseteq> (T ^^ s i k) -` A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "ultimately"], ["proof (chain)\npicking this:\n  B (i + k + 1) = (T ^^ t (i + k)) -` B (i + k) \\<inter> A\n  B (i + k) \\<subseteq> (T ^^ s i k) -` A", "have \"B(i+k+1) \\<subseteq> (T^^(t (i+k)))-` (T^^(s i k))-`A \\<inter> A\""], ["proof (prove)\nusing this:\n  B (i + k + 1) = (T ^^ t (i + k)) -` B (i + k) \\<inter> A\n  B (i + k) \\<subseteq> (T ^^ s i k) -` A\n\ngoal (1 subgoal):\n 1. B (i + k + 1)\n    \\<subseteq> (T ^^ t (i + k)) -` (T ^^ s i k) -` A \\<inter> A", "by auto"], ["proof (state)\nthis:\n  B (i + k + 1) \\<subseteq> (T ^^ t (i + k)) -` (T ^^ s i k) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "then"], ["proof (chain)\npicking this:\n  B (i + k + 1) \\<subseteq> (T ^^ t (i + k)) -` (T ^^ s i k) -` A \\<inter> A", "have \"B(i+k+1) \\<subseteq> (T^^(t(i+k) + s i k))-`A \\<inter> A\""], ["proof (prove)\nusing this:\n  B (i + k + 1) \\<subseteq> (T ^^ t (i + k)) -` (T ^^ s i k) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. B (i + k + 1) \\<subseteq> (T ^^ (t (i + k) + s i k)) -` A \\<inter> A", "by (simp add: add.commute funpow_add vimage_comp)"], ["proof (state)\nthis:\n  B (i + k + 1) \\<subseteq> (T ^^ (t (i + k) + s i k)) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "moreover"], ["proof (state)\nthis:\n  B (i + k + 1) \\<subseteq> (T ^^ (t (i + k) + s i k)) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "have \"t(i+k) + s i k = s i (k+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t (i + k) + s i k = s i (k + 1)", "using s_def"], ["proof (prove)\nusing this:\n  s = (\\<lambda>i k. sum t {i..<i + k})\n\ngoal (1 subgoal):\n 1. t (i + k) + s i k = s i (k + 1)", "by simp"], ["proof (state)\nthis:\n  t (i + k) + s i k = s i (k + 1)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       B (i + k) \\<subseteq> (T ^^ s i k) -` A \\<inter> A \\<Longrightarrow>\n       B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "ultimately"], ["proof (chain)\npicking this:\n  B (i + k + 1) \\<subseteq> (T ^^ (t (i + k) + s i k)) -` A \\<inter> A\n  t (i + k) + s i k = s i (k + 1)", "show ?case"], ["proof (prove)\nusing this:\n  B (i + k + 1) \\<subseteq> (T ^^ (t (i + k) + s i k)) -` A \\<inter> A\n  t (i + k) + s i k = s i (k + 1)\n\ngoal (1 subgoal):\n 1. B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A", "by simp"], ["proof (state)\nthis:\n  B (i + Suc k) \\<subseteq> (T ^^ s i (Suc k)) -` A \\<inter> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B (?i2 + ?k2) \\<subseteq> (T ^^ s ?i2 ?k2) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "moreover"], ["proof (state)\nthis:\n  B (?i2 + ?k2) \\<subseteq> (T ^^ s ?i2 ?k2) -` A \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "have \"(T^^j)-`A \\<inter> A \\<in> sets M\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ j) -` A \\<inter> A \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  (T ^^ ?j2) -` A \\<inter> A \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "ultimately"], ["proof (chain)\npicking this:\n  B (?i2 + ?k2) \\<subseteq> (T ^^ s ?i2 ?k2) -` A \\<inter> A\n  (T ^^ ?j2) -` A \\<inter> A \\<in> sets M", "have *: \"emeasure M ((T^^(s i k))-`A \\<inter> A) > 0\" for i k"], ["proof (prove)\nusing this:\n  B (?i2 + ?k2) \\<subseteq> (T ^^ s ?i2 ?k2) -` A \\<inter> A\n  (T ^^ ?j2) -` A \\<inter> A \\<in> sets M\n\ngoal (1 subgoal):\n 1. 0 < emeasure M ((T ^^ s i k) -` A \\<inter> A)", "by (metis inf.orderE inf.strict_boundedE good_B emeasure_mono)"], ["proof (state)\nthis:\n  0 < emeasure M ((T ^^ s ?i2 ?k2) -` A \\<inter> A)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; 0 < emeasure M A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na>0.\n                            0 < emeasure M\n                                 (((T ^^ n) ^^ na) -` A \\<inter> A)", "show \"\\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "assume \"n = 0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "then"], ["proof (chain)\npicking this:\n  n = 0", "have \"((T ^^ n) ^^ 1) -` A = A\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. ((T ^^ n) ^^ 1) -` A = A", "by simp"], ["proof (state)\nthis:\n  ((T ^^ n) ^^ 1) -` A = A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "then"], ["proof (chain)\npicking this:\n  ((T ^^ n) ^^ 1) -` A = A", "show ?thesis"], ["proof (prove)\nusing this:\n  ((T ^^ n) ^^ 1) -` A = A\n\ngoal (1 subgoal):\n 1. \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "using \\<open>emeasure M A > 0\\<close>"], ["proof (prove)\nusing this:\n  ((T ^^ n) ^^ 1) -` A = A\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "by auto"], ["proof (state)\nthis:\n  \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "assume \"\\<not>(n = 0)\""], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have \"n > 0\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < n", "by simp"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "define u where \"u = (\\<lambda>i. s 0 i mod n)\""], ["proof (state)\nthis:\n  u = (\\<lambda>i. s 0 i mod n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "have \"range u \\<subseteq> {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range u \\<subseteq> {..<n}", "by (simp add: \\<open>0 < n\\<close> image_subset_iff u_def)"], ["proof (state)\nthis:\n  range u \\<subseteq> {..<n}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "then"], ["proof (chain)\npicking this:\n  range u \\<subseteq> {..<n}", "have \"finite (range u)\""], ["proof (prove)\nusing this:\n  range u \\<subseteq> {..<n}\n\ngoal (1 subgoal):\n 1. finite (range u)", "using finite_nat_iff_bounded"], ["proof (prove)\nusing this:\n  range u \\<subseteq> {..<n}\n  finite ?S = (\\<exists>k. ?S \\<subseteq> {..<k})\n\ngoal (1 subgoal):\n 1. finite (range u)", "by auto"], ["proof (state)\nthis:\n  finite (range u)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "then"], ["proof (chain)\npicking this:\n  finite (range u)", "have \"\\<exists>i j. (i<j) \\<and> (u i = u j)\""], ["proof (prove)\nusing this:\n  finite (range u)\n\ngoal (1 subgoal):\n 1. \\<exists>i j. i < j \\<and> u i = u j", "by (metis finite_imageD infinite_UNIV_nat injI less_linear)"], ["proof (state)\nthis:\n  \\<exists>i j. i < j \\<and> u i = u j\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "then"], ["proof (chain)\npicking this:\n  \\<exists>i j. i < j \\<and> u i = u j", "obtain i k where \"k>0\" \"u i = u (i+k)\""], ["proof (prove)\nusing this:\n  \\<exists>i j. i < j \\<and> u i = u j\n\ngoal (1 subgoal):\n 1. (\\<And>k i.\n        \\<lbrakk>0 < k; u i = u (i + k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using less_imp_add_positive"], ["proof (prove)\nusing this:\n  \\<exists>i j. i < j \\<and> u i = u j\n  ?i < ?j \\<Longrightarrow> \\<exists>k>0. ?i + k = ?j\n\ngoal (1 subgoal):\n 1. (\\<And>k i.\n        \\<lbrakk>0 < k; u i = u (i + k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < k\n  u i = u (i + k)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "moreover"], ["proof (state)\nthis:\n  0 < k\n  u i = u (i + k)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "have \"s 0 (i+k) = s 0 i + s i k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s 0 (i + k) = s 0 i + s i k", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum t {0..<0 + (i + k)} = sum t {0..<0 + i} + sum t {i..<i + k}", "by (simp add: sum.atLeastLessThan_concat)"], ["proof (state)\nthis:\n  s 0 (i + k) = s 0 i + s i k\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "ultimately"], ["proof (chain)\npicking this:\n  0 < k\n  u i = u (i + k)\n  s 0 (i + k) = s 0 i + s i k", "have \"(s i k) mod n = 0\""], ["proof (prove)\nusing this:\n  0 < k\n  u i = u (i + k)\n  s 0 (i + k) = s 0 i + s i k\n\ngoal (1 subgoal):\n 1. s i k mod n = 0", "using u_def nat_mod_cong"], ["proof (prove)\nusing this:\n  0 < k\n  u i = u (i + k)\n  s 0 (i + k) = s 0 i + s i k\n  u = (\\<lambda>i. s 0 i mod n)\n  \\<lbrakk>?a = ?b + ?c; ?a mod ?n = ?b mod ?n\\<rbrakk>\n  \\<Longrightarrow> ?c mod ?n = 0\n\ngoal (1 subgoal):\n 1. s i k mod n = 0", "by metis"], ["proof (state)\nthis:\n  s i k mod n = 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "then"], ["proof (chain)\npicking this:\n  s i k mod n = 0", "obtain r where \"s i k = n * r\""], ["proof (prove)\nusing this:\n  s i k mod n = 0\n\ngoal (1 subgoal):\n 1. (\\<And>r. s i k = n * r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s i k = n * r\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "moreover"], ["proof (state)\nthis:\n  s i k = n * r\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "have \"s i k > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < s i k", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sum t {i..<i + k}", "using \\<open>k > 0\\<close> t_pos sum_strict_mono[of \"{i..<i+k}\", of \"\\<lambda>x. 0\", of \"\\<lambda>x. t x\"]"], ["proof (prove)\nusing this:\n  0 < k\n  0 < t ?i2\n  \\<lbrakk>finite {i..<i + k}; {i..<i + k} \\<noteq> {};\n   \\<And>x. x \\<in> {i..<i + k} \\<Longrightarrow> 0 < t x\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x = i..<i + k. 0) < sum t {i..<i + k}\n\ngoal (1 subgoal):\n 1. 0 < sum t {i..<i + k}", "by simp"], ["proof (state)\nthis:\n  0 < s i k\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "ultimately"], ["proof (chain)\npicking this:\n  s i k = n * r\n  0 < s i k", "have \"r > 0\""], ["proof (prove)\nusing this:\n  s i k = n * r\n  0 < s i k\n\ngoal (1 subgoal):\n 1. 0 < r", "by simp"], ["proof (state)\nthis:\n  0 < r\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "moreover"], ["proof (state)\nthis:\n  0 < r\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "have \"emeasure M ((T^^(n * r))-`A \\<inter> A) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < emeasure M ((T ^^ (n * r)) -` A \\<inter> A)", "using * \\<open>s i k = n * r\\<close>"], ["proof (prove)\nusing this:\n  0 < emeasure M ((T ^^ s ?i2 ?k2) -` A \\<inter> A)\n  s i k = n * r\n\ngoal (1 subgoal):\n 1. 0 < emeasure M ((T ^^ (n * r)) -` A \\<inter> A)", "by metis"], ["proof (state)\nthis:\n  0 < emeasure M ((T ^^ (n * r)) -` A \\<inter> A)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "ultimately"], ["proof (chain)\npicking this:\n  0 < r\n  0 < emeasure M ((T ^^ (n * r)) -` A \\<inter> A)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < r\n  0 < emeasure M ((T ^^ (n * r)) -` A \\<inter> A)\n\ngoal (1 subgoal):\n 1. \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)", "by (metis funpow_mult)"], ["proof (state)\nthis:\n  \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k>0. 0 < emeasure M (((T ^^ n) ^^ k) -` A \\<inter> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition (in conservative_mpt) conservative_mpt_power:\n  \"conservative_mpt M (T^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative_mpt M (T ^^ n)", "using conservative_power mpt_power"], ["proof (prove)\nusing this:\n  conservative M (T ^^ ?n)\n  mpt M (T ^^ ?n)\n\ngoal (1 subgoal):\n 1. conservative_mpt M (T ^^ n)", "unfolding conservative_mpt_def"], ["proof (prove)\nusing this:\n  conservative M (T ^^ ?n)\n  mpt M (T ^^ ?n)\n\ngoal (1 subgoal):\n 1. mpt M (T ^^ n) \\<and> conservative M (T ^^ n)", "by auto"], ["", "text \\<open>The standard way to use conservativity is as follows: if a set is almost disjoint from\nall its preimages, then it is null:\\<close>"], ["", "lemma (in conservative) ae_disjoint_then_null:\n  assumes \"A \\<in> sets M\"\n          \"\\<And>n. n > 0 \\<Longrightarrow> A \\<inter> (T^^n)-`A \\<in> null_sets M\"\n  shows \"A \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> null_sets M", "by (metis Int_commute assms(1) assms(2) conservative zero_less_iff_neq_zero null_setsD1 null_setsI)"], ["", "lemma (in conservative) disjoint_then_null:\n  assumes \"A \\<in> sets M\"\n          \"\\<And>n. n > 0 \\<Longrightarrow> A \\<inter> (T^^n)-`A = {}\"\n  shows \"A \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> null_sets M", "by (rule ae_disjoint_then_null, auto simp add: assms)"], ["", "text \\<open>Conservativity is preserved by replacing the measure by an equivalent one.\\<close>"], ["", "lemma (in conservative) conservative_density:\n  assumes [measurable]: \"h \\<in> borel_measurable M\"\n      and \"AE x in M. h x \\<noteq> 0\" \"AE x in M. h x \\<noteq> \\<infinity>\"\n  shows \"conservative (density M h) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative (density M h) T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. conservative (density M h) T", "interpret A: qmpt \"density M h\" T"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt (density M h) T", "by (rule qmpt_density[OF assms])"], ["proof (state)\ngoal (1 subgoal):\n 1. conservative (density M h) T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative (density M h) T", "apply (rule conservativeI3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. qmpt (density M h) T\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets (density M h);\n        \\<forall>n>0. (T ^^ n) -` A \\<inter> A = {}\\<rbrakk>\n       \\<Longrightarrow> A \\<in> null_sets (density M h)", "apply (simp add: A.qmpt_axioms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets (density M h);\n        \\<forall>n>0. (T ^^ n) -` A \\<inter> A = {}\\<rbrakk>\n       \\<Longrightarrow> A \\<in> null_sets (density M h)", "unfolding sets_density null_sets_density[OF assms(1) assms(2)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M;\n        \\<forall>n>0. (T ^^ n) -` A \\<inter> A = {}\\<rbrakk>\n       \\<Longrightarrow> A \\<in> null_sets M", "by (metis conservative emeasure_empty not_gr_zero null_setsI)"], ["proof (state)\nthis:\n  conservative (density M h) T\n\ngoal:\nNo subgoals!", "qed"], ["", "context qmpt begin"], ["", "text \\<open>We introduce the recurrent subset of $A$, i.e., the set of points of $A$ that return to\n$A$, and the infinitely recurrent subset, i.e., the set of points of $A$ that return\ninfinitely often to $A$. In conservative systems, both coincide with $A$ almost everywhere.\\<close>"], ["", "definition recurrent_subset::\"'a set \\<Rightarrow> 'a set\"\n  where \"recurrent_subset A = (\\<Union>n \\<in> {1..}. A \\<inter> (T^^n)-`A)\""], ["", "definition recurrent_subset_infty::\"'a set \\<Rightarrow> 'a set\"\n  where \"recurrent_subset_infty A = A - (\\<Union>n. (T^^n)-` (A - recurrent_subset A))\""], ["", "lemma recurrent_subset_infty_inf_returns:\n  \"x \\<in> recurrent_subset_infty A \\<longleftrightarrow> (x \\<in> A \\<and> infinite {n. (T^^n) x \\<in> A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> recurrent_subset_infty A) =\n    (x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n    x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n 2. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "assume *: \"x \\<in> recurrent_subset_infty A\""], ["proof (state)\nthis:\n  x \\<in> recurrent_subset_infty A\n\ngoal (2 subgoals):\n 1. x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n    x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n 2. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "have \"infinite {n. (T^^n) x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {n. (T ^^ n) x \\<in> A}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "assume \"\\<not>(infinite {n. (T^^n) x \\<in> A})\""], ["proof (state)\nthis:\n  \\<not> infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> infinite {n. (T ^^ n) x \\<in> A}", "have F: \"finite {n. (T^^n) x \\<in> A}\""], ["proof (prove)\nusing this:\n  \\<not> infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. finite {n. (T ^^ n) x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  finite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "have \"0 \\<in> {n. (T^^n) x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {n. (T ^^ n) x \\<in> A}", "using * recurrent_subset_infty_def"], ["proof (prove)\nusing this:\n  x \\<in> recurrent_subset_infty A\n  recurrent_subset_infty ?A =\n  ?A - (\\<Union>n. (T ^^ n) -` (?A - recurrent_subset ?A))\n\ngoal (1 subgoal):\n 1. 0 \\<in> {n. (T ^^ n) x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  0 \\<in> {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 \\<in> {n. (T ^^ n) x \\<in> A}", "have NE: \"{n. (T^^n) x \\<in> A} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  0 \\<in> {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. {n. (T ^^ n) x \\<in> A} \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  {n. (T ^^ n) x \\<in> A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "define N where \"N = Max {n. (T^^n) x \\<in> A}\""], ["proof (state)\nthis:\n  N = Max {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "have \"N \\<in> {n. (T^^n) x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<in> {n. (T ^^ n) x \\<in> A}", "unfolding N_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {n. (T ^^ n) x \\<in> A} \\<in> {n. (T ^^ n) x \\<in> A}", "using F NE"], ["proof (prove)\nusing this:\n  finite {n. (T ^^ n) x \\<in> A}\n  {n. (T ^^ n) x \\<in> A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max {n. (T ^^ n) x \\<in> A} \\<in> {n. (T ^^ n) x \\<in> A}", "using Max_in"], ["proof (prove)\nusing this:\n  finite {n. (T ^^ n) x \\<in> A}\n  {n. (T ^^ n) x \\<in> A} \\<noteq> {}\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. Max {n. (T ^^ n) x \\<in> A} \\<in> {n. (T ^^ n) x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  N \\<in> {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  N \\<in> {n. (T ^^ n) x \\<in> A}", "have \"(T^^N) x \\<in> A\""], ["proof (prove)\nusing this:\n  N \\<in> {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. (T ^^ N) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  (T ^^ N) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (T ^^ N) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "have \"x \\<notin> (T^^N)-` (A - recurrent_subset A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ N) -` (A - recurrent_subset A)", "using *"], ["proof (prove)\nusing this:\n  x \\<in> recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ N) -` (A - recurrent_subset A)", "unfolding recurrent_subset_infty_def"], ["proof (prove)\nusing this:\n  x \\<in> A - (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A))\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ N) -` (A - recurrent_subset A)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> (T ^^ N) -` (A - recurrent_subset A)\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (T ^^ N) x \\<in> A\n  x \\<notin> (T ^^ N) -` (A - recurrent_subset A)", "have \"(T^^N) x \\<in> recurrent_subset A\""], ["proof (prove)\nusing this:\n  (T ^^ N) x \\<in> A\n  x \\<notin> (T ^^ N) -` (A - recurrent_subset A)\n\ngoal (1 subgoal):\n 1. (T ^^ N) x \\<in> recurrent_subset A", "by auto"], ["proof (state)\nthis:\n  (T ^^ N) x \\<in> recurrent_subset A\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (T ^^ N) x \\<in> recurrent_subset A", "have \"(T ^^ N) x \\<in> A \\<and> (\\<exists>n. n \\<in> {1..} \\<and> (T ^^ n) ((T ^^ N) x) \\<in> A)\""], ["proof (prove)\nusing this:\n  (T ^^ N) x \\<in> recurrent_subset A\n\ngoal (1 subgoal):\n 1. (T ^^ N) x \\<in> A \\<and>\n    (\\<exists>n. n \\<in> {1..} \\<and> (T ^^ n) ((T ^^ N) x) \\<in> A)", "unfolding recurrent_subset_def"], ["proof (prove)\nusing this:\n  (T ^^ N) x \\<in> (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A)\n\ngoal (1 subgoal):\n 1. (T ^^ N) x \\<in> A \\<and>\n    (\\<exists>n. n \\<in> {1..} \\<and> (T ^^ n) ((T ^^ N) x) \\<in> A)", "by blast"], ["proof (state)\nthis:\n  (T ^^ N) x \\<in> A \\<and>\n  (\\<exists>n. n \\<in> {1..} \\<and> (T ^^ n) ((T ^^ N) x) \\<in> A)\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (T ^^ N) x \\<in> A \\<and>\n  (\\<exists>n. n \\<in> {1..} \\<and> (T ^^ n) ((T ^^ N) x) \\<in> A)", "obtain n where \"n>0\" \"(T^^n) ((T^^N) x) \\<in> A\""], ["proof (prove)\nusing this:\n  (T ^^ N) x \\<in> A \\<and>\n  (\\<exists>n. n \\<in> {1..} \\<and> (T ^^ n) ((T ^^ N) x) \\<in> A)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; (T ^^ n) ((T ^^ N) x) \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis atLeast_iff gr0I not_one_le_zero)"], ["proof (state)\nthis:\n  0 < n\n  (T ^^ n) ((T ^^ N) x) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 < n\n  (T ^^ n) ((T ^^ N) x) \\<in> A", "have \"n+N \\<in> {n. (T^^n) x \\<in> A}\""], ["proof (prove)\nusing this:\n  0 < n\n  (T ^^ n) ((T ^^ N) x) \\<in> A\n\ngoal (1 subgoal):\n 1. n + N \\<in> {n. (T ^^ n) x \\<in> A}", "by (simp add: funpow_add)"], ["proof (state)\nthis:\n  n + N \\<in> {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  n + N \\<in> {n. (T ^^ n) x \\<in> A}", "show False"], ["proof (prove)\nusing this:\n  n + N \\<in> {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. False", "unfolding N_def"], ["proof (prove)\nusing this:\n  n + Max {n. (T ^^ n) x \\<in> A} \\<in> {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. False", "using \\<open>n>0\\<close> F NE"], ["proof (prove)\nusing this:\n  n + Max {n. (T ^^ n) x \\<in> A} \\<in> {n. (T ^^ n) x \\<in> A}\n  0 < n\n  finite {n. (T ^^ n) x \\<in> A}\n  {n. (T ^^ n) x \\<in> A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by (metis Max_ge Nat.add_0_right add.commute nat_add_left_cancel_less not_le)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (2 subgoals):\n 1. x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n    x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n 2. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  infinite {n. (T ^^ n) x \\<in> A}", "show \"x \\<in> A \\<and> infinite {n. (T^^n) x \\<in> A}\""], ["proof (prove)\nusing this:\n  infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}", "using * recurrent_subset_infty_def"], ["proof (prove)\nusing this:\n  infinite {n. (T ^^ n) x \\<in> A}\n  x \\<in> recurrent_subset_infty A\n  recurrent_subset_infty ?A =\n  ?A - (\\<Union>n. (T ^^ n) -` (?A - recurrent_subset ?A))\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "assume *: \"(x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A})\""], ["proof (state)\nthis:\n  x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "{"], ["proof (state)\nthis:\n  x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "obtain N where \"N>n\" \"(T^^N) x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>n < N; (T ^^ N) x \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using *"], ["proof (prove)\nusing this:\n  x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>n < N; (T ^^ N) x \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using infinite_nat_iff_unbounded"], ["proof (prove)\nusing this:\n  x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n  infinite ?S = (\\<forall>m. \\<exists>n>m. n \\<in> ?S)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>n < N; (T ^^ N) x \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  n < N\n  (T ^^ N) x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "define k where \"k = N-n\""], ["proof (state)\nthis:\n  k = N - n\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  k = N - n", "have \"k>0\" \"N = n+k\""], ["proof (prove)\nusing this:\n  k = N - n\n\ngoal (1 subgoal):\n 1. 0 < k &&& N = n + k", "using \\<open>N>n\\<close>"], ["proof (prove)\nusing this:\n  k = N - n\n  n < N\n\ngoal (1 subgoal):\n 1. 0 < k &&& N = n + k", "by auto"], ["proof (state)\nthis:\n  0 < k\n  N = n + k\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  0 < k\n  N = n + k", "have \"(T^^k) ((T^^n) x) \\<in> A\""], ["proof (prove)\nusing this:\n  0 < k\n  N = n + k\n\ngoal (1 subgoal):\n 1. (T ^^ k) ((T ^^ n) x) \\<in> A", "by (metis \\<open>(T ^^ N) x \\<in> A\\<close> \\<open>N = n + k\\<close> add.commute comp_def funpow_add)"], ["proof (state)\nthis:\n  (T ^^ k) ((T ^^ n) x) \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  (T ^^ k) ((T ^^ n) x) \\<in> A", "have \"(T^^ n) x \\<notin> A - recurrent_subset A\""], ["proof (prove)\nusing this:\n  (T ^^ k) ((T ^^ n) x) \\<in> A\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A - recurrent_subset A", "unfolding recurrent_subset_def"], ["proof (prove)\nusing this:\n  (T ^^ k) ((T ^^ n) x) \\<in> A\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A - (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A)", "using \\<open>k>0\\<close>"], ["proof (prove)\nusing this:\n  (T ^^ k) ((T ^^ n) x) \\<in> A\n  0 < k\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A - (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A)", "by auto"], ["proof (state)\nthis:\n  (T ^^ n) x \\<notin> A - recurrent_subset A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "}"], ["proof (state)\nthis:\n  (T ^^ ?n4) x \\<notin> A - recurrent_subset A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A} \\<Longrightarrow>\n    x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  (T ^^ ?n4) x \\<notin> A - recurrent_subset A", "show \"x \\<in> recurrent_subset_infty A\""], ["proof (prove)\nusing this:\n  (T ^^ ?n4) x \\<notin> A - recurrent_subset A\n\ngoal (1 subgoal):\n 1. x \\<in> recurrent_subset_infty A", "unfolding recurrent_subset_infty_def"], ["proof (prove)\nusing this:\n  (T ^^ ?n4) x \\<notin> A - recurrent_subset A\n\ngoal (1 subgoal):\n 1. x \\<in> A - (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A))", "using *"], ["proof (prove)\nusing this:\n  (T ^^ ?n4) x \\<notin> A - recurrent_subset A\n  x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<in> A - (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A))", "by auto"], ["proof (state)\nthis:\n  x \\<in> recurrent_subset_infty A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma recurrent_subset_infty_series_infinite:\n  assumes \"x \\<in> recurrent_subset_infty A\"\n  shows \"(\\<Sum>n. indicator A ((T^^n) x)) = (\\<infinity>::ennreal)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. indicator A ((T ^^ n) x)) = \\<infinity>", "proof (rule ennreal_ge_nat_imp_PInf)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "have *: \"\\<not> finite {n. (T^^n) x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {n. (T ^^ n) x \\<in> A}", "using recurrent_subset_infty_inf_returns assms"], ["proof (prove)\nusing this:\n  (?x \\<in> recurrent_subset_infty ?A) =\n  (?x \\<in> ?A \\<and> infinite {n. (T ^^ n) ?x \\<in> ?A})\n  x \\<in> recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. infinite {n. (T ^^ n) x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  infinite {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "fix N::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "obtain F where F: \"finite F\" \"F \\<subseteq> {n. (T^^n) x \\<in> A}\" \"card F = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>finite F; F \\<subseteq> {n. (T ^^ n) x \\<in> A};\n         card F = N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using infinite_arbitrarily_large[OF *]"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     finite B \\<and>\n     card B = ?n \\<and> B \\<subseteq> {n. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>finite F; F \\<subseteq> {n. (T ^^ n) x \\<in> A};\n         card F = N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  finite F\n  F \\<subseteq> {n. (T ^^ n) x \\<in> A}\n  card F = N\n\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "have \"N = (\\<Sum>n \\<in> F. 1::ennreal)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat N = (\\<Sum>n\\<in>F. 1)", "using F(3)"], ["proof (prove)\nusing this:\n  card F = N\n\ngoal (1 subgoal):\n 1. of_nat N = (\\<Sum>n\\<in>F. 1)", "by auto"], ["proof (state)\nthis:\n  of_nat N = (\\<Sum>n\\<in>F. 1)\n\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "also"], ["proof (state)\nthis:\n  of_nat N = (\\<Sum>n\\<in>F. 1)\n\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "have \"... = (\\<Sum>n \\<in> F. (indicator A ((T^^n) x))::ennreal)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>F. 1) = (\\<Sum>n\\<in>F. indicator A ((T ^^ n) x))", "apply (rule sum.cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. F = F\n 2. \\<And>xa. xa \\<in> F \\<Longrightarrow> 1 = indicator A ((T ^^ xa) x)", "using F(2) indicator_def"], ["proof (prove)\nusing this:\n  F \\<subseteq> {n. (T ^^ n) x \\<in> A}\n  indicator ?S ?x = (if ?x \\<in> ?S then 1::?'a else (0::?'a))\n\ngoal (2 subgoals):\n 1. F = F\n 2. \\<And>xa. xa \\<in> F \\<Longrightarrow> 1 = indicator A ((T ^^ xa) x)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>F. 1) = (\\<Sum>n\\<in>F. indicator A ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>F. 1) = (\\<Sum>n\\<in>F. indicator A ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "have \"... \\<le> (\\<Sum>n. indicator A ((T^^n) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>F. indicator A ((T ^^ n) x))\n    \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "by (rule sum_le_suminf, auto simp add: F)"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>F. indicator A ((T ^^ n) x))\n  \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. \\<And>N. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "finally"], ["proof (chain)\npicking this:\n  of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "show \"N \\<le> (\\<Sum>n. (indicator A ((T^^n) x))::ennreal)\""], ["proof (prove)\nusing this:\n  of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))", "by auto"], ["proof (state)\nthis:\n  of_nat N \\<le> (\\<Sum>n. indicator A ((T ^^ n) x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma recurrent_subset_infty_def':\n  \"recurrent_subset_infty A = (\\<Inter>m. (\\<Union>n\\<in>{m..}. A \\<inter> (T^^n)-`A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset_infty A =\n    (\\<Inter>m. \\<Union>n\\<in>{m..}. A \\<inter> (T ^^ n) -` A)", "proof (auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> recurrent_subset_infty A \\<Longrightarrow> x \\<in> A\n 2. \\<And>x xa.\n       x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n       \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> recurrent_subset_infty A \\<Longrightarrow> x \\<in> A\n 2. \\<And>x xa.\n       x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n       \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "assume x: \"x \\<in> recurrent_subset_infty A\""], ["proof (state)\nthis:\n  x \\<in> recurrent_subset_infty A\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> recurrent_subset_infty A \\<Longrightarrow> x \\<in> A\n 2. \\<And>x xa.\n       x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n       \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  x \\<in> recurrent_subset_infty A", "show \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "unfolding recurrent_subset_infty_def"], ["proof (prove)\nusing this:\n  x \\<in> A - (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A))\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n       \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "fix N::nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n       \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "show \"\\<exists>n\\<in>{N..}. (T^^n) x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A", "using recurrent_subset_infty_inf_returns x"], ["proof (prove)\nusing this:\n  (?x \\<in> recurrent_subset_infty ?A) =\n  (?x \\<in> ?A \\<and> infinite {n. (T ^^ n) ?x \\<in> ?A})\n  x \\<in> recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A", "using infinite_nat_iff_unbounded_le"], ["proof (prove)\nusing this:\n  (?x \\<in> recurrent_subset_infty ?A) =\n  (?x \\<in> ?A \\<and> infinite {n. (T ^^ n) ?x \\<in> ?A})\n  x \\<in> recurrent_subset_infty A\n  infinite ?S = (\\<forall>m. \\<exists>n\\<ge>m. n \\<in> ?S)\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "assume \"x \\<in> A\" \"\\<forall>N. \\<exists>n\\<in>{N..}. (T^^n) x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n  \\<forall>N. \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>xa. \\<exists>xa\\<in>{xa..}. (T ^^ xa) x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  x \\<in> A\n  \\<forall>N. \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A", "show \"x \\<in> recurrent_subset_infty A\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<forall>N. \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> recurrent_subset_infty A", "unfolding recurrent_subset_infty_inf_returns"], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<forall>N. \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}", "using infinite_nat_iff_unbounded_le"], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<forall>N. \\<exists>n\\<in>{N..}. (T ^^ n) x \\<in> A\n  infinite ?S = (\\<forall>m. \\<exists>n\\<ge>m. n \\<in> ?S)\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<and> infinite {n. (T ^^ n) x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  x \\<in> recurrent_subset_infty A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma recurrent_subset_incl:\n  \"recurrent_subset A \\<subseteq> A\"\n  \"recurrent_subset_infty A \\<subseteq> A\"\n  \"recurrent_subset_infty A \\<subseteq> recurrent_subset A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset A \\<subseteq> A &&&\n    recurrent_subset_infty A \\<subseteq> A &&&\n    recurrent_subset_infty A \\<subseteq> recurrent_subset A", "unfolding recurrent_subset_def recurrent_subset_infty_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A) \\<subseteq> A &&&\n    (\\<Inter>m. \\<Union>n\\<in>{m..}. A \\<inter> (T ^^ n) -` A)\n    \\<subseteq> A &&&\n    (\\<Inter>m. \\<Union>n\\<in>{m..}. A \\<inter> (T ^^ n) -` A)\n    \\<subseteq> (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A)", "by (simp, simp, fast)"], ["", "lemma recurrent_subset_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"recurrent_subset A \\<in> sets M\"\n        \"recurrent_subset_infty A \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset A \\<in> sets M &&&\n    recurrent_subset_infty A \\<in> sets M", "unfolding recurrent_subset_def recurrent_subset_infty_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A) \\<in> sets M &&&\n    (\\<Inter>m. \\<Union>n\\<in>{m..}. A \\<inter> (T ^^ n) -` A) \\<in> sets M", "by measurable"], ["", "lemma recurrent_subset_rel_incl:\n  assumes \"A \\<subseteq> B\"\n  shows \"recurrent_subset A \\<subseteq> recurrent_subset B\"\n        \"recurrent_subset_infty A \\<subseteq> recurrent_subset_infty B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset A \\<subseteq> recurrent_subset B &&&\n    recurrent_subset_infty A \\<subseteq> recurrent_subset_infty B", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. recurrent_subset A \\<subseteq> recurrent_subset B\n 2. recurrent_subset_infty A \\<subseteq> recurrent_subset_infty B", "show \"recurrent_subset A \\<subseteq> recurrent_subset B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset A \\<subseteq> recurrent_subset B", "unfolding recurrent_subset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A)\n    \\<subseteq> (\\<Union>n\\<in>{1..}. B \\<inter> (T ^^ n) -` B)", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A)\n    \\<subseteq> (\\<Union>n\\<in>{1..}. B \\<inter> (T ^^ n) -` B)", "by auto"], ["proof (state)\nthis:\n  recurrent_subset A \\<subseteq> recurrent_subset B\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty A \\<subseteq> recurrent_subset_infty B", "show \"recurrent_subset_infty A \\<subseteq> recurrent_subset_infty B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset_infty A \\<subseteq> recurrent_subset_infty B", "apply (auto, subst recurrent_subset_infty_inf_returns)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n       x \\<in> B \\<and> infinite {n. (T ^^ n) x \\<in> B}", "using assms recurrent_subset_incl(2) infinite_nat_iff_unbounded_le recurrent_subset_infty_inf_returns"], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n  recurrent_subset_infty ?A \\<subseteq> ?A\n  infinite ?S = (\\<forall>m. \\<exists>n\\<ge>m. n \\<in> ?S)\n  (?x \\<in> recurrent_subset_infty ?A) =\n  (?x \\<in> ?A \\<and> infinite {n. (T ^^ n) ?x \\<in> ?A})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> recurrent_subset_infty A \\<Longrightarrow>\n       x \\<in> B \\<and> infinite {n. (T ^^ n) x \\<in> B}", "by fastforce"], ["proof (state)\nthis:\n  recurrent_subset_infty A \\<subseteq> recurrent_subset_infty B\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If a point belongs to the infinitely recurrent subset of $A$, then when they return to $A$\nits iterates also belong to the infinitely recurrent subset.\\<close>"], ["", "lemma recurrent_subset_infty_returns:\n  assumes \"x \\<in> recurrent_subset_infty A\" \"(T^^n) x \\<in> A\"\n  shows \"(T^^n) x \\<in> recurrent_subset_infty A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<in> recurrent_subset_infty A", "proof (subst recurrent_subset_infty_inf_returns, rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "assume \"\\<not> ((T ^^ n) x \\<in> A \\<and> infinite {k. (T ^^ k) ((T ^^ n) x) \\<in> A})\""], ["proof (state)\nthis:\n  \\<not> ((T ^^ n) x \\<in> A \\<and>\n          infinite {k. (T ^^ k) ((T ^^ n) x) \\<in> A})\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> ((T ^^ n) x \\<in> A \\<and>\n          infinite {k. (T ^^ k) ((T ^^ n) x) \\<in> A})", "have 1: \"finite {k. (T^^k) ((T^^n) x) \\<in> A}\""], ["proof (prove)\nusing this:\n  \\<not> ((T ^^ n) x \\<in> A \\<and>\n          infinite {k. (T ^^ k) ((T ^^ n) x) \\<in> A})\n\ngoal (1 subgoal):\n 1. finite {k. (T ^^ k) ((T ^^ n) x) \\<in> A}", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<not> ((T ^^ n) x \\<in> A \\<and>\n          infinite {k. (T ^^ k) ((T ^^ n) x) \\<in> A})\n  (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. finite {k. (T ^^ k) ((T ^^ n) x) \\<in> A}", "by auto"], ["proof (state)\nthis:\n  finite {k. (T ^^ k) ((T ^^ n) x) \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "have \"0 \\<in> {k. (T^^k) ((T^^n) x) \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {k. (T ^^ k) ((T ^^ n) x) \\<in> A}", "using assms(2)"], ["proof (prove)\nusing this:\n  (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. 0 \\<in> {k. (T ^^ k) ((T ^^ n) x) \\<in> A}", "by auto"], ["proof (state)\nthis:\n  0 \\<in> {k. (T ^^ k) ((T ^^ n) x) \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  0 \\<in> {k. (T ^^ k) ((T ^^ n) x) \\<in> A}", "have 2: \"{k. (T^^k) ((T^^n) x) \\<in> A} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  0 \\<in> {k. (T ^^ k) ((T ^^ n) x) \\<in> A}\n\ngoal (1 subgoal):\n 1. {k. (T ^^ k) ((T ^^ n) x) \\<in> A} \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  {k. (T ^^ k) ((T ^^ n) x) \\<in> A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "define M where \"M = Max {k. (T^^k) ((T^^n) x) \\<in> A}\""], ["proof (state)\nthis:\n  M = Max {k. (T ^^ k) ((T ^^ n) x) \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "have M_prop: \"\\<And>k. k > M \\<Longrightarrow> (T^^k) ((T^^n) x) \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. M < k \\<Longrightarrow> (T ^^ k) ((T ^^ n) x) \\<notin> A", "unfolding M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       Max {k. (T ^^ k) ((T ^^ n) x) \\<in> A} < k \\<Longrightarrow>\n       (T ^^ k) ((T ^^ n) x) \\<notin> A", "using 1 2"], ["proof (prove)\nusing this:\n  finite {k. (T ^^ k) ((T ^^ n) x) \\<in> A}\n  {k. (T ^^ k) ((T ^^ n) x) \\<in> A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       Max {k. (T ^^ k) ((T ^^ n) x) \\<in> A} < k \\<Longrightarrow>\n       (T ^^ k) ((T ^^ n) x) \\<notin> A", "by auto"], ["proof (state)\nthis:\n  M < ?k2 \\<Longrightarrow> (T ^^ ?k2) ((T ^^ n) x) \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  M < ?k2 \\<Longrightarrow> (T ^^ ?k2) ((T ^^ n) x) \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "fix N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "assume *: \"(T^^N) x \\<in> A\""], ["proof (state)\nthis:\n  (T ^^ N) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "have \"N \\<le> n+M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<le> n + M", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> N \\<le> n + M\n 2. \\<not> ?P \\<Longrightarrow> N \\<le> n + M", "assume \"N \\<le> n\""], ["proof (state)\nthis:\n  N \\<le> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> N \\<le> n + M\n 2. \\<not> ?P \\<Longrightarrow> N \\<le> n + M", "then"], ["proof (chain)\npicking this:\n  N \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  N \\<le> n\n\ngoal (1 subgoal):\n 1. N \\<le> n + M", "by auto"], ["proof (state)\nthis:\n  N \\<le> n + M\n\ngoal (1 subgoal):\n 1. \\<not> N \\<le> n \\<Longrightarrow> N \\<le> n + M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> N \\<le> n \\<Longrightarrow> N \\<le> n + M", "assume \"\\<not>(N \\<le> n)\""], ["proof (state)\nthis:\n  \\<not> N \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> N \\<le> n \\<Longrightarrow> N \\<le> n + M", "then"], ["proof (chain)\npicking this:\n  \\<not> N \\<le> n", "have \"N > n\""], ["proof (prove)\nusing this:\n  \\<not> N \\<le> n\n\ngoal (1 subgoal):\n 1. n < N", "by simp"], ["proof (state)\nthis:\n  n < N\n\ngoal (1 subgoal):\n 1. \\<not> N \\<le> n \\<Longrightarrow> N \\<le> n + M", "define k where \"k = N-n\""], ["proof (state)\nthis:\n  k = N - n\n\ngoal (1 subgoal):\n 1. \\<not> N \\<le> n \\<Longrightarrow> N \\<le> n + M", "have \"N = n + k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = n + k", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. N = n + (N - n)", "using \\<open>N > n\\<close>"], ["proof (prove)\nusing this:\n  n < N\n\ngoal (1 subgoal):\n 1. N = n + (N - n)", "by auto"], ["proof (state)\nthis:\n  N = n + k\n\ngoal (1 subgoal):\n 1. \\<not> N \\<le> n \\<Longrightarrow> N \\<le> n + M", "then"], ["proof (chain)\npicking this:\n  N = n + k", "have \"(T^^k) ((T^^n)x) \\<in> A\""], ["proof (prove)\nusing this:\n  N = n + k\n\ngoal (1 subgoal):\n 1. (T ^^ k) ((T ^^ n) x) \\<in> A", "using *"], ["proof (prove)\nusing this:\n  N = n + k\n  (T ^^ N) x \\<in> A\n\ngoal (1 subgoal):\n 1. (T ^^ k) ((T ^^ n) x) \\<in> A", "by (simp add: add.commute funpow_add)"], ["proof (state)\nthis:\n  (T ^^ k) ((T ^^ n) x) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> N \\<le> n \\<Longrightarrow> N \\<le> n + M", "then"], ["proof (chain)\npicking this:\n  (T ^^ k) ((T ^^ n) x) \\<in> A", "have \"k \\<le> M\""], ["proof (prove)\nusing this:\n  (T ^^ k) ((T ^^ n) x) \\<in> A\n\ngoal (1 subgoal):\n 1. k \\<le> M", "using M_prop"], ["proof (prove)\nusing this:\n  (T ^^ k) ((T ^^ n) x) \\<in> A\n  M < ?k2 \\<Longrightarrow> (T ^^ ?k2) ((T ^^ n) x) \\<notin> A\n\ngoal (1 subgoal):\n 1. k \\<le> M", "using not_le"], ["proof (prove)\nusing this:\n  (T ^^ k) ((T ^^ n) x) \\<in> A\n  M < ?k2 \\<Longrightarrow> (T ^^ ?k2) ((T ^^ n) x) \\<notin> A\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. k \\<le> M", "by blast"], ["proof (state)\nthis:\n  k \\<le> M\n\ngoal (1 subgoal):\n 1. \\<not> N \\<le> n \\<Longrightarrow> N \\<le> n + M", "then"], ["proof (chain)\npicking this:\n  k \\<le> M", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> M\n\ngoal (1 subgoal):\n 1. N \\<le> n + M", "unfolding k_def"], ["proof (prove)\nusing this:\n  N - n \\<le> M\n\ngoal (1 subgoal):\n 1. N \\<le> n + M", "by auto"], ["proof (state)\nthis:\n  N \\<le> n + M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N \\<le> n + M\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  (T ^^ ?N4) x \\<in> A \\<Longrightarrow> ?N4 \\<le> n + M\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (T ^^ ?N4) x \\<in> A \\<Longrightarrow> ?N4 \\<le> n + M", "have \"finite {N. (T^^N) x \\<in> A}\""], ["proof (prove)\nusing this:\n  (T ^^ ?N4) x \\<in> A \\<Longrightarrow> ?N4 \\<le> n + M\n\ngoal (1 subgoal):\n 1. finite {N. (T ^^ N) x \\<in> A}", "by (metis (no_types, lifting) infinite_nat_iff_unbounded mem_Collect_eq not_less)"], ["proof (state)\nthis:\n  finite {N. (T ^^ N) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  finite {N. (T ^^ N) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "have \"infinite {N. (T^^N) x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {N. (T ^^ N) x \\<in> A}", "using recurrent_subset_infty_inf_returns assms(1)"], ["proof (prove)\nusing this:\n  (?x \\<in> recurrent_subset_infty ?A) =\n  (?x \\<in> ?A \\<and> infinite {n. (T ^^ n) ?x \\<in> ?A})\n  x \\<in> recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. infinite {N. (T ^^ N) x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  infinite {N. (T ^^ N) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> ((T ^^ n) x \\<in> A \\<and>\n            infinite {na. (T ^^ na) ((T ^^ n) x) \\<in> A}) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  finite {N. (T ^^ N) x \\<in> A}\n  infinite {N. (T ^^ N) x \\<in> A}", "show False"], ["proof (prove)\nusing this:\n  finite {N. (T ^^ N) x \\<in> A}\n  infinite {N. (T ^^ N) x \\<in> A}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma recurrent_subset_of_recurrent_subset:\n  \"recurrent_subset_infty(recurrent_subset_infty A) = recurrent_subset_infty A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset_infty (recurrent_subset_infty A) =\n    recurrent_subset_infty A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. recurrent_subset_infty (recurrent_subset_infty A)\n    \\<subseteq> recurrent_subset_infty A\n 2. recurrent_subset_infty A\n    \\<subseteq> recurrent_subset_infty (recurrent_subset_infty A)", "show \"recurrent_subset_infty (recurrent_subset_infty A) \\<subseteq> recurrent_subset_infty A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset_infty (recurrent_subset_infty A)\n    \\<subseteq> recurrent_subset_infty A", "using recurrent_subset_incl(2)[of A] recurrent_subset_rel_incl(2)"], ["proof (prove)\nusing this:\n  recurrent_subset_infty A \\<subseteq> A\n  ?A \\<subseteq> ?B \\<Longrightarrow>\n  recurrent_subset_infty ?A \\<subseteq> recurrent_subset_infty ?B\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty (recurrent_subset_infty A)\n    \\<subseteq> recurrent_subset_infty A", "by auto"], ["proof (state)\nthis:\n  recurrent_subset_infty (recurrent_subset_infty A)\n  \\<subseteq> recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty A\n    \\<subseteq> recurrent_subset_infty (recurrent_subset_infty A)", "show \"recurrent_subset_infty A \\<subseteq> recurrent_subset_infty (recurrent_subset_infty A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset_infty A\n    \\<subseteq> recurrent_subset_infty (recurrent_subset_infty A)", "using recurrent_subset_infty_returns recurrent_subset_infty_inf_returns"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> recurrent_subset_infty ?A;\n   (T ^^ ?n) ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (T ^^ ?n) ?x \\<in> recurrent_subset_infty ?A\n  (?x \\<in> recurrent_subset_infty ?A) =\n  (?x \\<in> ?A \\<and> infinite {n. (T ^^ n) ?x \\<in> ?A})\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty A\n    \\<subseteq> recurrent_subset_infty (recurrent_subset_infty A)", "by (metis (no_types, lifting) Collect_cong subsetI)"], ["proof (state)\nthis:\n  recurrent_subset_infty A\n  \\<subseteq> recurrent_subset_infty (recurrent_subset_infty A)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The Poincare recurrence theorem states that almost every point of $A$ returns\n(infinitely often) to $A$, i.e., the recurrent and infinitely recurrent subsets of $A$\ncoincide almost everywhere with $A$. This is essentially trivial in conservative systems,\nas it is a reformulation of the definition of conservativity. (What is not trivial, and has been\nproved above, is that it is true in finite measure preserving systems, i.e., finite measure\npreserving systems are automatically conservative.)\\<close>"], ["", "theorem (in conservative) Poincare_recurrence_thm:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"A - recurrent_subset A \\<in> null_sets M\"\n        \"A - recurrent_subset_infty A \\<in> null_sets M\"\n        \"A \\<Delta> recurrent_subset A \\<in> null_sets M\"\n        \"A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\"\n        \"emeasure M (recurrent_subset A) = emeasure M A\"\n        \"emeasure M (recurrent_subset_infty A) = emeasure M A\"\n        \"AE x \\<in> A in M. x \\<in> recurrent_subset_infty A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A - recurrent_subset A \\<in> null_sets M &&&\n     A - recurrent_subset_infty A \\<in> null_sets M &&&\n     A \\<Delta> recurrent_subset A \\<in> null_sets M) &&&\n    (A \\<Delta> recurrent_subset_infty A \\<in> null_sets M &&&\n     emeasure M (recurrent_subset A) = emeasure M A) &&&\n    emeasure M (recurrent_subset_infty A) = emeasure M A &&&\n    AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "proof -"], ["proof (state)\ngoal (7 subgoals):\n 1. A - recurrent_subset A \\<in> null_sets M\n 2. A - recurrent_subset_infty A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 4. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 5. emeasure M (recurrent_subset A) = emeasure M A\n 6. emeasure M (recurrent_subset_infty A) = emeasure M A\n 7. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "define B where \"B = {x \\<in> A. \\<forall> n\\<in>{1..}. (T^^n) x \\<in> (space M - A)}\""], ["proof (state)\nthis:\n  B = {x \\<in> A. \\<forall>n\\<in>{1..}. (T ^^ n) x \\<in> space M - A}\n\ngoal (7 subgoals):\n 1. A - recurrent_subset A \\<in> null_sets M\n 2. A - recurrent_subset_infty A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 4. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 5. emeasure M (recurrent_subset A) = emeasure M A\n 6. emeasure M (recurrent_subset_infty A) = emeasure M A\n 7. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "have rs: \"recurrent_subset A = A - B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset A = A - B", "by (auto simp add: B_def recurrent_subset_def)\n       (meson Tn_meas assms measurable_space sets.sets_into_space subsetCE)"], ["proof (state)\nthis:\n  recurrent_subset A = A - B\n\ngoal (7 subgoals):\n 1. A - recurrent_subset A \\<in> null_sets M\n 2. A - recurrent_subset_infty A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 4. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 5. emeasure M (recurrent_subset A) = emeasure M A\n 6. emeasure M (recurrent_subset_infty A) = emeasure M A\n 7. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  recurrent_subset A = A - B", "have *: \"A - recurrent_subset A = B\""], ["proof (prove)\nusing this:\n  recurrent_subset A = A - B\n\ngoal (1 subgoal):\n 1. A - recurrent_subset A = B", "using B_def"], ["proof (prove)\nusing this:\n  recurrent_subset A = A - B\n  B = {x \\<in> A. \\<forall>n\\<in>{1..}. (T ^^ n) x \\<in> space M - A}\n\ngoal (1 subgoal):\n 1. A - recurrent_subset A = B", "by blast"], ["proof (state)\nthis:\n  A - recurrent_subset A = B\n\ngoal (7 subgoals):\n 1. A - recurrent_subset A \\<in> null_sets M\n 2. A - recurrent_subset_infty A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 4. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 5. emeasure M (recurrent_subset A) = emeasure M A\n 6. emeasure M (recurrent_subset_infty A) = emeasure M A\n 7. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "have \"B \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "by (rule disjoint_then_null, auto simp add: B_def)"], ["proof (state)\nthis:\n  B \\<in> null_sets M\n\ngoal (7 subgoals):\n 1. A - recurrent_subset A \\<in> null_sets M\n 2. A - recurrent_subset_infty A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 4. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 5. emeasure M (recurrent_subset A) = emeasure M A\n 6. emeasure M (recurrent_subset_infty A) = emeasure M A\n 7. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  B \\<in> null_sets M", "show \"A - recurrent_subset A \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. A - recurrent_subset A \\<in> null_sets M", "using *"], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n  A - recurrent_subset A = B\n\ngoal (1 subgoal):\n 1. A - recurrent_subset A \\<in> null_sets M", "by simp"], ["proof (state)\nthis:\n  A - recurrent_subset A \\<in> null_sets M\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  A - recurrent_subset A \\<in> null_sets M", "have *: \"(\\<Union>n. (T^^n)--`(A-recurrent_subset A)) \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  A - recurrent_subset A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A)) \\<in> null_sets M", "using T_quasi_preserves_null2(2)"], ["proof (prove)\nusing this:\n  A - recurrent_subset A \\<in> null_sets M\n  ?A \\<in> null_sets M \\<Longrightarrow> (T ^^ ?n) --` ?A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A)) \\<in> null_sets M", "by blast"], ["proof (state)\nthis:\n  (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A)) \\<in> null_sets M\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "have \"recurrent_subset_infty A = recurrent_subset_infty A \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset_infty A = recurrent_subset_infty A \\<inter> space M", "using sets.sets_into_space"], ["proof (prove)\nusing this:\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty A = recurrent_subset_infty A \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  recurrent_subset_infty A = recurrent_subset_infty A \\<inter> space M\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "also"], ["proof (state)\nthis:\n  recurrent_subset_infty A = recurrent_subset_infty A \\<inter> space M\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "have \"... = A \\<inter> space M - (\\<Union>n. (T^^n)-`(A-recurrent_subset A) \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset_infty A \\<inter> space M =\n    A \\<inter> space M -\n    (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A) \\<inter> space M)", "unfolding recurrent_subset_infty_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A - (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A))) \\<inter>\n    space M =\n    A \\<inter> space M -\n    (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A) \\<inter> space M)", "by blast"], ["proof (state)\nthis:\n  recurrent_subset_infty A \\<inter> space M =\n  A \\<inter> space M -\n  (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A) \\<inter> space M)\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "also"], ["proof (state)\nthis:\n  recurrent_subset_infty A \\<inter> space M =\n  A \\<inter> space M -\n  (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A) \\<inter> space M)\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "have \"... = A - (\\<Union>n. (T^^n)--`(A-recurrent_subset A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> space M -\n    (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A) \\<inter> space M) =\n    A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))", "unfolding vimage_restr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> space M -\n    (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A) \\<inter> space M) =\n    A -\n    (\\<Union>n.\n        (T ^^ n) -` ((A - recurrent_subset A) \\<inter> space M) \\<inter>\n        space M)", "using sets.sets_into_space"], ["proof (prove)\nusing this:\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. A \\<inter> space M -\n    (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A) \\<inter> space M) =\n    A -\n    (\\<Union>n.\n        (T ^^ n) -` ((A - recurrent_subset A) \\<inter> space M) \\<inter>\n        space M)", "by auto"], ["proof (state)\nthis:\n  A \\<inter> space M -\n  (\\<Union>n. (T ^^ n) -` (A - recurrent_subset A) \\<inter> space M) =\n  A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "finally"], ["proof (chain)\npicking this:\n  recurrent_subset_infty A =\n  A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))", "have **: \"recurrent_subset_infty A = A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\""], ["proof (prove)\nusing this:\n  recurrent_subset_infty A =\n  A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty A =\n    A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))", "."], ["proof (state)\nthis:\n  recurrent_subset_infty A =\n  A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  recurrent_subset_infty A =\n  A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))", "have \"A - recurrent_subset_infty A \\<subseteq> (\\<Union>n. (T^^n)--`(A-recurrent_subset A))\""], ["proof (prove)\nusing this:\n  recurrent_subset_infty A =\n  A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\n\ngoal (1 subgoal):\n 1. A - recurrent_subset_infty A\n    \\<subseteq> (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))", "by auto"], ["proof (state)\nthis:\n  A - recurrent_subset_infty A\n  \\<subseteq> (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\n\ngoal (6 subgoals):\n 1. A - recurrent_subset_infty A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 3. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 4. emeasure M (recurrent_subset A) = emeasure M A\n 5. emeasure M (recurrent_subset_infty A) = emeasure M A\n 6. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "with * **"], ["proof (chain)\npicking this:\n  (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A)) \\<in> null_sets M\n  recurrent_subset_infty A =\n  A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\n  A - recurrent_subset_infty A\n  \\<subseteq> (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))", "show \"A - recurrent_subset_infty A \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A)) \\<in> null_sets M\n  recurrent_subset_infty A =\n  A - (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\n  A - recurrent_subset_infty A\n  \\<subseteq> (\\<Union>n. (T ^^ n) --` (A - recurrent_subset A))\n\ngoal (1 subgoal):\n 1. A - recurrent_subset_infty A \\<in> null_sets M", "by (simp add: Diff_Diff_Int null_set_Int1)"], ["proof (state)\nthis:\n  A - recurrent_subset_infty A \\<in> null_sets M\n\ngoal (5 subgoals):\n 1. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 3. emeasure M (recurrent_subset A) = emeasure M A\n 4. emeasure M (recurrent_subset_infty A) = emeasure M A\n 5. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "have \"A \\<Delta> recurrent_subset A = A - recurrent_subset A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Delta> recurrent_subset A = A - recurrent_subset A", "using recurrent_subset_incl(1)[of A]"], ["proof (prove)\nusing this:\n  recurrent_subset A \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A \\<Delta> recurrent_subset A = A - recurrent_subset A", "by blast"], ["proof (state)\nthis:\n  A \\<Delta> recurrent_subset A = A - recurrent_subset A\n\ngoal (5 subgoals):\n 1. A \\<Delta> recurrent_subset A \\<in> null_sets M\n 2. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 3. emeasure M (recurrent_subset A) = emeasure M A\n 4. emeasure M (recurrent_subset_infty A) = emeasure M A\n 5. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  A \\<Delta> recurrent_subset A = A - recurrent_subset A", "show \"A \\<Delta> recurrent_subset A \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  A \\<Delta> recurrent_subset A = A - recurrent_subset A\n\ngoal (1 subgoal):\n 1. A \\<Delta> recurrent_subset A \\<in> null_sets M", "using \\<open>A - recurrent_subset A \\<in> null_sets M\\<close>"], ["proof (prove)\nusing this:\n  A \\<Delta> recurrent_subset A = A - recurrent_subset A\n  A - recurrent_subset A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. A \\<Delta> recurrent_subset A \\<in> null_sets M", "by auto"], ["proof (state)\nthis:\n  A \\<Delta> recurrent_subset A \\<in> null_sets M\n\ngoal (4 subgoals):\n 1. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 2. emeasure M (recurrent_subset A) = emeasure M A\n 3. emeasure M (recurrent_subset_infty A) = emeasure M A\n 4. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  A \\<Delta> recurrent_subset A \\<in> null_sets M", "show \"emeasure M (recurrent_subset A) = emeasure M A\""], ["proof (prove)\nusing this:\n  A \\<Delta> recurrent_subset A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. emeasure M (recurrent_subset A) = emeasure M A", "by (rule Delta_null_same_emeasure[symmetric], auto)"], ["proof (state)\nthis:\n  emeasure M (recurrent_subset A) = emeasure M A\n\ngoal (3 subgoals):\n 1. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 2. emeasure M (recurrent_subset_infty A) = emeasure M A\n 3. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "have \"A \\<Delta> recurrent_subset_infty A = A - recurrent_subset_infty A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Delta> recurrent_subset_infty A = A - recurrent_subset_infty A", "using recurrent_subset_incl(2)[of A]"], ["proof (prove)\nusing this:\n  recurrent_subset_infty A \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A \\<Delta> recurrent_subset_infty A = A - recurrent_subset_infty A", "by blast"], ["proof (state)\nthis:\n  A \\<Delta> recurrent_subset_infty A = A - recurrent_subset_infty A\n\ngoal (3 subgoals):\n 1. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n 2. emeasure M (recurrent_subset_infty A) = emeasure M A\n 3. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  A \\<Delta> recurrent_subset_infty A = A - recurrent_subset_infty A", "show \"A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  A \\<Delta> recurrent_subset_infty A = A - recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M", "using \\<open>A - recurrent_subset_infty A \\<in> null_sets M\\<close>"], ["proof (prove)\nusing this:\n  A \\<Delta> recurrent_subset_infty A = A - recurrent_subset_infty A\n  A - recurrent_subset_infty A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. A \\<Delta> recurrent_subset_infty A \\<in> null_sets M", "by auto"], ["proof (state)\nthis:\n  A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n\ngoal (2 subgoals):\n 1. emeasure M (recurrent_subset_infty A) = emeasure M A\n 2. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  A \\<Delta> recurrent_subset_infty A \\<in> null_sets M", "show \"emeasure M (recurrent_subset_infty A) = emeasure M A\""], ["proof (prove)\nusing this:\n  A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. emeasure M (recurrent_subset_infty A) = emeasure M A", "by (rule Delta_null_same_emeasure[symmetric], auto)"], ["proof (state)\nthis:\n  emeasure M (recurrent_subset_infty A) = emeasure M A\n\ngoal (1 subgoal):\n 1. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "show \"AE x\\<in>A in M. x \\<in> recurrent_subset_infty A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x\\<in>A in M. x \\<in> recurrent_subset_infty A", "unfolding eventually_ae_filter"], ["proof (prove)\ngoal (1 subgoal):\n 1. Bex (null_sets M)\n     ((\\<subseteq>)\n       {x \\<in> space M.\n        \\<not> (x \\<in> A \\<longrightarrow>\n                x \\<in> recurrent_subset_infty A)})", "by (metis (no_types, lifting) DiffI \\<open>A - recurrent_subset_infty A \\<in> null_sets M\\<close> mem_Collect_eq subsetI)"], ["proof (state)\nthis:\n  AE x\\<in>A in M. x \\<in> recurrent_subset_infty A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A convenient way to use conservativity is given in the following theorem: if $T$ is\nconservative, then the series $\\sum_n f(T^n x)$ is infinite for almost every $x$ with $f x > 0$.\nWhen $f$ is an indicator function, this is the fact that, starting from $B$, one returns\ninfinitely many times to $B$ almost surely. The general case follows by approximating $f$ from\nbelow by constants time indicators.\\<close>"], ["", "theorem (in conservative) recurrence_series_infinite:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\"\n  shows \"AE x in M. f x > 0 \\<longrightarrow> (\\<Sum>n. f ((T^^n) x)) = \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "have *: \"AE x in M. f x > epsilon \\<longrightarrow> (\\<Sum>n. f ((T^^n) x)) = \\<top>\" if \"epsilon > 0\" for epsilon"], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "define B where \"B = {x \\<in> space M. f x > epsilon}\""], ["proof (state)\nthis:\n  B = {x \\<in> space M. epsilon < f x}\n\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "have [measurable]: \"B \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> sets M", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> space M. epsilon < f x} \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  B \\<in> sets M\n\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "have \"(\\<Sum>n. f ((T^^n) x)) = \\<infinity>\" if \"x \\<in> recurrent_subset_infty B\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "have \"\\<infinity> = epsilon * \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity> = epsilon * \\<infinity>", "using \\<open>epsilon > 0\\<close> ennreal_mult_top"], ["proof (prove)\nusing this:\n  0 < epsilon\n  ?a * \\<top> = (if ?a = 0 then 0 else \\<top>)\n\ngoal (1 subgoal):\n 1. \\<infinity> = epsilon * \\<infinity>", "by auto"], ["proof (state)\nthis:\n  \\<infinity> = epsilon * \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "also"], ["proof (state)\nthis:\n  \\<infinity> = epsilon * \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "have \"... = epsilon * (\\<Sum>n. indicator B ((T^^n) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epsilon * \\<infinity> = epsilon * (\\<Sum>n. indicator B ((T ^^ n) x))", "using recurrent_subset_infty_series_infinite[OF that]"], ["proof (prove)\nusing this:\n  (\\<Sum>n. indicator B ((T ^^ n) x)) = \\<infinity>\n\ngoal (1 subgoal):\n 1. epsilon * \\<infinity> = epsilon * (\\<Sum>n. indicator B ((T ^^ n) x))", "by simp"], ["proof (state)\nthis:\n  epsilon * \\<infinity> = epsilon * (\\<Sum>n. indicator B ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "also"], ["proof (state)\nthis:\n  epsilon * \\<infinity> = epsilon * (\\<Sum>n. indicator B ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "have \"... = (\\<Sum>n. epsilon * indicator B ((T^^n) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epsilon * (\\<Sum>n. indicator B ((T ^^ n) x)) =\n    (\\<Sum>n. epsilon * indicator B ((T ^^ n) x))", "by auto"], ["proof (state)\nthis:\n  epsilon * (\\<Sum>n. indicator B ((T ^^ n) x)) =\n  (\\<Sum>n. epsilon * indicator B ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "also"], ["proof (state)\nthis:\n  epsilon * (\\<Sum>n. indicator B ((T ^^ n) x)) =\n  (\\<Sum>n. epsilon * indicator B ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "have \"... \\<le> (\\<Sum>n. f ((T^^n) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. epsilon * indicator B ((T ^^ n) x))\n    \\<le> (\\<Sum>n. f ((T ^^ n) x))", "apply (rule suminf_le)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n. epsilon * indicator B ((T ^^ n) x) \\<le> f ((T ^^ n) x)\n 2. summable (\\<lambda>n. epsilon * indicator B ((T ^^ n) x))\n 3. summable (\\<lambda>n. f ((T ^^ n) x))", "unfolding indicator_def B_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       epsilon *\n       (if (T ^^ n) x \\<in> {x \\<in> space M. epsilon < f x} then 1 else 0)\n       \\<le> f ((T ^^ n) x)\n 2. summable\n     (\\<lambda>n.\n         epsilon *\n         (if (T ^^ n) x \\<in> {x \\<in> space M. epsilon < f x} then 1\n          else 0))\n 3. summable (\\<lambda>n. f ((T ^^ n) x))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n. epsilon * indicator B ((T ^^ n) x))\n  \\<le> (\\<Sum>n. f ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "finally"], ["proof (chain)\npicking this:\n  \\<infinity> \\<le> (\\<Sum>n. f ((T ^^ n) x))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<infinity> \\<le> (\\<Sum>n. f ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "by (simp add: dual_order.antisym)"], ["proof (state)\nthis:\n  (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x2 \\<in> recurrent_subset_infty B \\<Longrightarrow>\n  (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<infinity>\n\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "moreover"], ["proof (state)\nthis:\n  ?x2 \\<in> recurrent_subset_infty B \\<Longrightarrow>\n  (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<infinity>\n\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "have \"AE x in M. f x > epsilon \\<longrightarrow> x \\<in> recurrent_subset_infty B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               x \\<in> recurrent_subset_infty B", "using Poincare_recurrence_thm(7)[OF \\<open>B \\<in> sets M\\<close>]"], ["proof (prove)\nusing this:\n  AE x\\<in>B in M. x \\<in> recurrent_subset_infty B\n\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               x \\<in> recurrent_subset_infty B", "unfolding B_def"], ["proof (prove)\nusing this:\n  AE x\\<in>{x \\<in> space M. epsilon < f x} in M.\n  x \\<in> recurrent_subset_infty {x \\<in> space M. epsilon < f x}\n\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               x \\<in> recurrent_subset_infty\n                        {x \\<in> space M. epsilon < f x}", "by auto"], ["proof (state)\nthis:\n  AE x in M. epsilon < f x \\<longrightarrow>\n             x \\<in> recurrent_subset_infty B\n\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  ?x2 \\<in> recurrent_subset_infty B \\<Longrightarrow>\n  (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<infinity>\n  AE x in M. epsilon < f x \\<longrightarrow>\n             x \\<in> recurrent_subset_infty B", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x2 \\<in> recurrent_subset_infty B \\<Longrightarrow>\n  (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<infinity>\n  AE x in M. epsilon < f x \\<longrightarrow>\n             x \\<in> recurrent_subset_infty B\n\ngoal (1 subgoal):\n 1. AE x in M. epsilon < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "by auto"], ["proof (state)\nthis:\n  AE x in M. epsilon < f x \\<longrightarrow>\n             (\\<Sum>n. f ((T ^^ n) x)) = \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?epsilon2 \\<Longrightarrow>\n  AE x in M. ?epsilon2 < f x \\<longrightarrow>\n             (\\<Sum>n. f ((T ^^ n) x)) = \\<top>\n\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "have \"\\<exists>u::(nat \\<Rightarrow> ennreal). (\\<forall>n. u n > 0) \\<and> u \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u. (\\<forall>n. 0 < u n) \\<and> u \\<longlonglongrightarrow> 0", "by (meson approx_from_above_dense_linorder ex_gt_or_lt gr_implies_not_zero)"], ["proof (state)\nthis:\n  \\<exists>u. (\\<forall>n. 0 < u n) \\<and> u \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "then"], ["proof (chain)\npicking this:\n  \\<exists>u. (\\<forall>n. 0 < u n) \\<and> u \\<longlonglongrightarrow> 0", "obtain u::\"nat \\<Rightarrow> ennreal\" where u: \"\\<And>n. u n > 0\" \"u \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  \\<exists>u. (\\<forall>n. 0 < u n) \\<and> u \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>\\<And>n. 0 < u n; u \\<longlonglongrightarrow> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < u ?n2\n  u \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "have \"AE x in M. (\\<forall>n::nat. (f x > u n \\<longrightarrow> (\\<Sum>n. f ((T^^n) x)) = \\<top>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n.\n                  u n < f x \\<longrightarrow>\n                  (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "unfolding AE_all_countable"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       AE x in M. u n < f x \\<longrightarrow>\n                  (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "using u"], ["proof (prove)\nusing this:\n  0 < u ?n2\n  u \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       AE x in M. u n < f x \\<longrightarrow>\n                  (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "by (auto intro!: *)"], ["proof (state)\nthis:\n  AE x in M. \\<forall>n.\n                u n < f x \\<longrightarrow>\n                (\\<Sum>n. f ((T ^^ n) x)) = \\<top>\n\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "moreover"], ["proof (state)\nthis:\n  AE x in M. \\<forall>n.\n                u n < f x \\<longrightarrow>\n                (\\<Sum>n. f ((T ^^ n) x)) = \\<top>\n\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "have \"f x > 0 \\<longrightarrow> (\\<Sum>n. f ((T^^n) x)) = \\<infinity>\" if \"(\\<forall>n::nat. (f x > u n \\<longrightarrow> (\\<Sum>n. f ((T^^n) x)) = \\<top>))\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < f x \\<longrightarrow> (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < f x \\<Longrightarrow> (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "assume \"f x > 0\""], ["proof (state)\nthis:\n  0 < f x\n\ngoal (1 subgoal):\n 1. 0 < f x \\<Longrightarrow> (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "obtain n where \"u n < f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. u n < f x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using order_tendstoD(2)[OF u(2) \\<open>f x > 0\\<close>] eventually_False_sequentially eventually_mono"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in sequentially. u xa < f x\n  \\<not> (\\<forall>\\<^sub>F n in sequentially. False)\n  \\<lbrakk>eventually ?P ?F; \\<And>x. ?P x \\<Longrightarrow> ?Q x\\<rbrakk>\n  \\<Longrightarrow> eventually ?Q ?F\n\ngoal (1 subgoal):\n 1. (\\<And>n. u n < f x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  u n < f x\n\ngoal (1 subgoal):\n 1. 0 < f x \\<Longrightarrow> (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "then"], ["proof (chain)\npicking this:\n  u n < f x", "show \"(\\<Sum>n. f ((T^^n) x)) = \\<top>\""], ["proof (prove)\nusing this:\n  u n < f x\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "using that"], ["proof (prove)\nusing this:\n  u n < f x\n  \\<forall>n. u n < f x \\<longrightarrow> (\\<Sum>n. f ((T ^^ n) x)) = \\<top>\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. f ((T ^^ n) x)) = \\<top>", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n. f ((T ^^ n) x)) = \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n.\n     u n < f ?x2 \\<longrightarrow>\n     (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<top> \\<Longrightarrow>\n  0 < f ?x2 \\<longrightarrow> (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<infinity>\n\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "ultimately"], ["proof (chain)\npicking this:\n  AE x in M. \\<forall>n.\n                u n < f x \\<longrightarrow>\n                (\\<Sum>n. f ((T ^^ n) x)) = \\<top>\n  \\<forall>n.\n     u n < f ?x2 \\<longrightarrow>\n     (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<top> \\<Longrightarrow>\n  0 < f ?x2 \\<longrightarrow> (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  AE x in M. \\<forall>n.\n                u n < f x \\<longrightarrow>\n                (\\<Sum>n. f ((T ^^ n) x)) = \\<top>\n  \\<forall>n.\n     u n < f ?x2 \\<longrightarrow>\n     (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<top> \\<Longrightarrow>\n  0 < f ?x2 \\<longrightarrow> (\\<Sum>n. f ((T ^^ n) ?x2)) = \\<infinity>\n\ngoal (1 subgoal):\n 1. AE x in M. 0 < f x \\<longrightarrow>\n               (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>", "by auto"], ["proof (state)\nthis:\n  AE x in M. 0 < f x \\<longrightarrow>\n             (\\<Sum>n. f ((T ^^ n) x)) = \\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The first return time\\<close>"], ["", "text \\<open>The first return time to a set $A$ under the dynamics $T$ is the smallest integer $n$ such\nthat $T^n(x) \\in A$. The first return time is only well defined\non the recurrent subset of $A$, elsewhere we set it to $0$ for definiteness.\nWe can partition $A$ according to the value of the return time on it, thus defining\nthe return partition of $A$.\\<close>"], ["", "definition return_time_function::\"'a set \\<Rightarrow> ('a \\<Rightarrow> nat)\"\n  where \"return_time_function A x = (\n    if (x \\<in> recurrent_subset A) then (Inf {n::nat\\<in>{1..}. (T^^n) x \\<in> A})\n    else 0)\""], ["", "definition return_partition::\"'a set \\<Rightarrow> nat \\<Rightarrow> 'a set\"\n  where \"return_partition A k = A \\<inter> (T^^k)--`A - (\\<Union>i\\<in>{0<..<k}. (T^^i)--`A)\""], ["", "text \\<open>Basic properties of the return partition.\\<close>"], ["", "lemma return_partition_basics:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n  shows [measurable]: \"return_partition A n \\<in> sets M\"\n    and \"disjoint_family (\\<lambda>n. return_partition A (n+1))\"\n        \"(\\<Union>n. return_partition A (n+1)) = recurrent_subset A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_partition A n \\<in> sets M &&&\n    disjoint_family (\\<lambda>n. return_partition A (n + 1)) &&&\n    (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. return_partition A n \\<in> sets M\n 2. disjoint_family (\\<lambda>n. return_partition A (n + 1))\n 3. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "show \"return_partition A n \\<in> sets M\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. return_partition A n \\<in> sets M", "unfolding return_partition_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> (T ^^ n) --` A - (\\<Union>i\\<in>{0<..<n}. (T ^^ i) --` A)\n    \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  return_partition A ?n2 \\<in> sets M\n\ngoal (2 subgoals):\n 1. disjoint_family (\\<lambda>n. return_partition A (n + 1))\n 2. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "define B where \"B = (\\<lambda>n. A \\<inter> (T^^(n+1))--`A)\""], ["proof (state)\nthis:\n  B = (\\<lambda>n. A \\<inter> (T ^^ (n + 1)) --` A)\n\ngoal (2 subgoals):\n 1. disjoint_family (\\<lambda>n. return_partition A (n + 1))\n 2. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "have \"return_partition A (n+1) = B n -(\\<Union>i\\<in>{0..<n}. B i)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. return_partition A (n + 1) = B n - \\<Union> (B ` {0..<n})", "unfolding return_partition_def B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> (T ^^ (n + 1)) --` A -\n    (\\<Union>i\\<in>{0<..<n + 1}. (T ^^ i) --` A) =\n    A \\<inter> (T ^^ (n + 1)) --` A -\n    (\\<Union>i\\<in>{0..<n}. A \\<inter> (T ^^ (i + 1)) --` A)", "by (auto) (auto simp add: less_Suc_eq_0_disj)"], ["proof (state)\nthis:\n  return_partition A (?n2 + 1) = B ?n2 - \\<Union> (B ` {0..<?n2})\n\ngoal (2 subgoals):\n 1. disjoint_family (\\<lambda>n. return_partition A (n + 1))\n 2. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "then"], ["proof (chain)\npicking this:\n  return_partition A (?n2 + 1) = B ?n2 - \\<Union> (B ` {0..<?n2})", "have *: \"\\<And>n. return_partition A (n+1) = disjointed B n\""], ["proof (prove)\nusing this:\n  return_partition A (?n2 + 1) = B ?n2 - \\<Union> (B ` {0..<?n2})\n\ngoal (1 subgoal):\n 1. \\<And>n. return_partition A (n + 1) = disjointed B n", "using disjointed_def[of B]"], ["proof (prove)\nusing this:\n  return_partition A (?n2 + 1) = B ?n2 - \\<Union> (B ` {0..<?n2})\n  disjointed B ?n = B ?n - \\<Union> (B ` {0..<?n})\n\ngoal (1 subgoal):\n 1. \\<And>n. return_partition A (n + 1) = disjointed B n", "by simp"], ["proof (state)\nthis:\n  return_partition A (?n2 + 1) = disjointed B ?n2\n\ngoal (2 subgoals):\n 1. disjoint_family (\\<lambda>n. return_partition A (n + 1))\n 2. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "then"], ["proof (chain)\npicking this:\n  return_partition A (?n2 + 1) = disjointed B ?n2", "show \"disjoint_family (\\<lambda>n. return_partition A (n+1))\""], ["proof (prove)\nusing this:\n  return_partition A (?n2 + 1) = disjointed B ?n2\n\ngoal (1 subgoal):\n 1. disjoint_family (\\<lambda>n. return_partition A (n + 1))", "using disjoint_family_disjointed"], ["proof (prove)\nusing this:\n  return_partition A (?n2 + 1) = disjointed B ?n2\n  disjoint_family (disjointed ?A)\n\ngoal (1 subgoal):\n 1. disjoint_family (\\<lambda>n. return_partition A (n + 1))", "by simp"], ["proof (state)\nthis:\n  disjoint_family (\\<lambda>n. return_partition A (n + 1))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "have \"A \\<inter> (T^^n)-`A = A \\<inter> (T^^n)--`A\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> (T ^^ n) -` A = A \\<inter> (T ^^ n) --` A", "using sets.sets_into_space[OF A_meas]"], ["proof (prove)\nusing this:\n  A \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. A \\<inter> (T ^^ n) -` A = A \\<inter> (T ^^ n) --` A", "by auto"], ["proof (state)\nthis:\n  A \\<inter> (T ^^ ?n2) -` A = A \\<inter> (T ^^ ?n2) --` A\n\ngoal (1 subgoal):\n 1. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "then"], ["proof (chain)\npicking this:\n  A \\<inter> (T ^^ ?n2) -` A = A \\<inter> (T ^^ ?n2) --` A", "have \"recurrent_subset A = (\\<Union>n\\<in> {1..}. A \\<inter> (T^^n)--`A)\""], ["proof (prove)\nusing this:\n  A \\<inter> (T ^^ ?n2) -` A = A \\<inter> (T ^^ ?n2) --` A\n\ngoal (1 subgoal):\n 1. recurrent_subset A = (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) --` A)", "unfolding recurrent_subset_def"], ["proof (prove)\nusing this:\n  A \\<inter> (T ^^ ?n2) -` A = A \\<inter> (T ^^ ?n2) --` A\n\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) -` A) =\n    (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) --` A)", "by simp"], ["proof (state)\nthis:\n  recurrent_subset A = (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) --` A)\n\ngoal (1 subgoal):\n 1. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "also"], ["proof (state)\nthis:\n  recurrent_subset A = (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) --` A)\n\ngoal (1 subgoal):\n 1. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "have \"... = (\\<Union>n. B n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) --` A) = \\<Union> (range B)", "by (simp add: B_def atLeast_Suc_greaterThan greaterThan_0)"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) --` A) = \\<Union> (range B)\n\ngoal (1 subgoal):\n 1. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "also"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>{1..}. A \\<inter> (T ^^ n) --` A) = \\<Union> (range B)\n\ngoal (1 subgoal):\n 1. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "have \"... = (\\<Union>n. return_partition A (n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range B) = (\\<Union>n. return_partition A (n + 1))", "using * UN_disjointed_eq[of B]"], ["proof (prove)\nusing this:\n  return_partition A (?n2 + 1) = disjointed B ?n2\n  \\<Union> (range (disjointed B)) = \\<Union> (range B)\n\ngoal (1 subgoal):\n 1. \\<Union> (range B) = (\\<Union>n. return_partition A (n + 1))", "by simp"], ["proof (state)\nthis:\n  \\<Union> (range B) = (\\<Union>n. return_partition A (n + 1))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "finally"], ["proof (chain)\npicking this:\n  recurrent_subset A = (\\<Union>n. return_partition A (n + 1))", "show \"(\\<Union>n. return_partition A (n+1)) = recurrent_subset A\""], ["proof (prove)\nusing this:\n  recurrent_subset A = (\\<Union>n. return_partition A (n + 1))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A", "by simp"], ["proof (state)\nthis:\n  (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Basic properties of the return time, relationship with the return partition.\\<close>"], ["", "lemma return_time0:\n  \"(return_time_function A)-`{0} = UNIV - recurrent_subset A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {0} = UNIV - recurrent_subset A", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "assume *: \"x \\<in> recurrent_subset A\" \"return_time_function A x = 0\""], ["proof (state)\nthis:\n  x \\<in> recurrent_subset A\n  return_time_function A x = 0\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "define K where \"K = {n::nat\\<in>{1..}. (T^^n) x \\<in> A}\""], ["proof (state)\nthis:\n  K = {n \\<in> {1..}. (T ^^ n) x \\<in> A}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "have **: \"return_time_function A x = Inf K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A x = \\<Sqinter> K", "using K_def return_time_function_def *"], ["proof (prove)\nusing this:\n  K = {n \\<in> {1..}. (T ^^ n) x \\<in> A}\n  return_time_function ?A ?x =\n  (if ?x \\<in> recurrent_subset ?A\n   then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) ?x \\<in> ?A} else 0)\n  x \\<in> recurrent_subset A\n  return_time_function A x = 0\n\ngoal (1 subgoal):\n 1. return_time_function A x = \\<Sqinter> K", "by simp"], ["proof (state)\nthis:\n  return_time_function A x = \\<Sqinter> K\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "have \"K \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<noteq> {}", "using K_def recurrent_subset_def *"], ["proof (prove)\nusing this:\n  K = {n \\<in> {1..}. (T ^^ n) x \\<in> A}\n  recurrent_subset ?A = (\\<Union>n\\<in>{1..}. ?A \\<inter> (T ^^ n) -` ?A)\n  x \\<in> recurrent_subset A\n  return_time_function A x = 0\n\ngoal (1 subgoal):\n 1. K \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  K \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "moreover"], ["proof (state)\nthis:\n  K \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "have \"0 \\<notin> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin> K", "using K_def"], ["proof (prove)\nusing this:\n  K = {n \\<in> {1..}. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. 0 \\<notin> K", "by auto"], ["proof (state)\nthis:\n  0 \\<notin> K\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "ultimately"], ["proof (chain)\npicking this:\n  K \\<noteq> {}\n  0 \\<notin> K", "have \"Inf K >0\""], ["proof (prove)\nusing this:\n  K \\<noteq> {}\n  0 \\<notin> K\n\ngoal (1 subgoal):\n 1. 0 < \\<Sqinter> K", "by (metis (no_types, lifting) K_def One_nat_def atLeast_iff cInf_lessD mem_Collect_eq neq0_conv not_le zero_less_Suc)"], ["proof (state)\nthis:\n  0 < \\<Sqinter> K\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "then"], ["proof (chain)\npicking this:\n  0 < \\<Sqinter> K", "have \"return_time_function A x > 0\""], ["proof (prove)\nusing this:\n  0 < \\<Sqinter> K\n\ngoal (1 subgoal):\n 1. 0 < return_time_function A x", "using **"], ["proof (prove)\nusing this:\n  0 < \\<Sqinter> K\n  return_time_function A x = \\<Sqinter> K\n\ngoal (1 subgoal):\n 1. 0 < return_time_function A x", "by simp"], ["proof (state)\nthis:\n  0 < return_time_function A x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>return_time_function A x = 0;\n        x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "then"], ["proof (chain)\npicking this:\n  0 < return_time_function A x", "show \"False\""], ["proof (prove)\nusing this:\n  0 < return_time_function A x\n\ngoal (1 subgoal):\n 1. False", "using *"], ["proof (prove)\nusing this:\n  0 < return_time_function A x\n  x \\<in> recurrent_subset A\n  return_time_function A x = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> recurrent_subset A \\<Longrightarrow>\n       return_time_function A x = 0", "qed (auto simp add: return_time_function_def)"], ["", "lemma return_time_n:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"(return_time_function A)-`{Suc n} = return_partition A (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {Suc n} = return_partition A (Suc n)", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "assume *: \"return_time_function A x = Suc n\""], ["proof (state)\nthis:\n  return_time_function A x = Suc n\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  return_time_function A x = Suc n", "have rx: \"x \\<in> recurrent_subset A\""], ["proof (prove)\nusing this:\n  return_time_function A x = Suc n\n\ngoal (1 subgoal):\n 1. x \\<in> recurrent_subset A", "using return_time_function_def"], ["proof (prove)\nusing this:\n  return_time_function A x = Suc n\n  return_time_function ?A ?x =\n  (if ?x \\<in> recurrent_subset ?A\n   then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) ?x \\<in> ?A} else 0)\n\ngoal (1 subgoal):\n 1. x \\<in> recurrent_subset A", "by (auto, meson Zero_not_Suc)"], ["proof (state)\nthis:\n  x \\<in> recurrent_subset A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "define K where \"K = {i\\<in>{1..}. (T^^i) x \\<in> A}\""], ["proof (state)\nthis:\n  K = {i \\<in> {1..}. (T ^^ i) x \\<in> A}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "have \"return_time_function A x = Inf K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A x = \\<Sqinter> K", "using return_time_function_def rx K_def"], ["proof (prove)\nusing this:\n  return_time_function ?A ?x =\n  (if ?x \\<in> recurrent_subset ?A\n   then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) ?x \\<in> ?A} else 0)\n  x \\<in> recurrent_subset A\n  K = {i \\<in> {1..}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. return_time_function A x = \\<Sqinter> K", "by auto"], ["proof (state)\nthis:\n  return_time_function A x = \\<Sqinter> K\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  return_time_function A x = \\<Sqinter> K", "have \"Inf K = Suc n\""], ["proof (prove)\nusing this:\n  return_time_function A x = \\<Sqinter> K\n\ngoal (1 subgoal):\n 1. \\<Sqinter> K = Suc n", "using *"], ["proof (prove)\nusing this:\n  return_time_function A x = \\<Sqinter> K\n  return_time_function A x = Suc n\n\ngoal (1 subgoal):\n 1. \\<Sqinter> K = Suc n", "by simp"], ["proof (state)\nthis:\n  \\<Sqinter> K = Suc n\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "moreover"], ["proof (state)\nthis:\n  \\<Sqinter> K = Suc n\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "have \"K \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<noteq> {}", "using rx recurrent_subset_def K_def"], ["proof (prove)\nusing this:\n  x \\<in> recurrent_subset A\n  recurrent_subset ?A = (\\<Union>n\\<in>{1..}. ?A \\<inter> (T ^^ n) -` ?A)\n  K = {i \\<in> {1..}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. K \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  K \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "ultimately"], ["proof (chain)\npicking this:\n  \\<Sqinter> K = Suc n\n  K \\<noteq> {}", "have \"Suc n \\<in> K\""], ["proof (prove)\nusing this:\n  \\<Sqinter> K = Suc n\n  K \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Suc n \\<in> K", "using Inf_nat_def1[of K]"], ["proof (prove)\nusing this:\n  \\<Sqinter> K = Suc n\n  K \\<noteq> {}\n  K \\<noteq> {} \\<Longrightarrow> \\<Sqinter> K \\<in> K\n\ngoal (1 subgoal):\n 1. Suc n \\<in> K", "by simp"], ["proof (state)\nthis:\n  Suc n \\<in> K\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  Suc n \\<in> K", "have \"(T^^(Suc n))x \\<in> A\""], ["proof (prove)\nusing this:\n  Suc n \\<in> K\n\ngoal (1 subgoal):\n 1. (T ^^ Suc n) x \\<in> A", "using K_def"], ["proof (prove)\nusing this:\n  Suc n \\<in> K\n  K = {i \\<in> {1..}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. (T ^^ Suc n) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  (T ^^ Suc n) x \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  (T ^^ Suc n) x \\<in> A", "have a: \"x \\<in> A \\<inter> (T^^(Suc n))--`A\""], ["proof (prove)\nusing this:\n  (T ^^ Suc n) x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<inter> (T ^^ Suc n) --` A", "using rx recurrent_subset_incl[of A] sets.sets_into_space[OF assms]"], ["proof (prove)\nusing this:\n  (T ^^ Suc n) x \\<in> A\n  x \\<in> recurrent_subset A\n  recurrent_subset A \\<subseteq> A\n  recurrent_subset_infty A \\<subseteq> A\n  recurrent_subset_infty A \\<subseteq> recurrent_subset A\n  A \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<inter> (T ^^ Suc n) --` A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A \\<inter> (T ^^ Suc n) --` A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "have \"\\<And>i. i\\<in>{1..<Suc n} \\<Longrightarrow> i \\<notin> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {1..<Suc n} \\<Longrightarrow> i \\<notin> K", "using cInf_lower \\<open>Inf K = Suc n\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> ?X; bdd_below ?X\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter> ?X \\<le> ?x\n  \\<Sqinter> K = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {1..<Suc n} \\<Longrightarrow> i \\<notin> K", "by force"], ["proof (state)\nthis:\n  ?i2 \\<in> {1..<Suc n} \\<Longrightarrow> ?i2 \\<notin> K\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  ?i2 \\<in> {1..<Suc n} \\<Longrightarrow> ?i2 \\<notin> K", "have \"\\<And>i. i\\<in>{1..<Suc n} \\<Longrightarrow> x \\<notin> (T^^i)--`A\""], ["proof (prove)\nusing this:\n  ?i2 \\<in> {1..<Suc n} \\<Longrightarrow> ?i2 \\<notin> K\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {1..<Suc n} \\<Longrightarrow> x \\<notin> (T ^^ i) --` A", "using K_def"], ["proof (prove)\nusing this:\n  ?i2 \\<in> {1..<Suc n} \\<Longrightarrow> ?i2 \\<notin> K\n  K = {i \\<in> {1..}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {1..<Suc n} \\<Longrightarrow> x \\<notin> (T ^^ i) --` A", "by auto"], ["proof (state)\nthis:\n  ?i2 \\<in> {1..<Suc n} \\<Longrightarrow> x \\<notin> (T ^^ ?i2) --` A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  ?i2 \\<in> {1..<Suc n} \\<Longrightarrow> x \\<notin> (T ^^ ?i2) --` A", "have \"x \\<notin> (\\<Union>i\\<in>{1..<Suc n}. (T^^i)--`A)\""], ["proof (prove)\nusing this:\n  ?i2 \\<in> {1..<Suc n} \\<Longrightarrow> x \\<notin> (T ^^ ?i2) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> (\\<Union>i\\<in>{1..<Suc n}. (T ^^ i) --` A)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> (\\<Union>i\\<in>{1..<Suc n}. (T ^^ i) --` A)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       return_time_function A x = Suc n \\<Longrightarrow>\n       x \\<in> return_partition A (Suc n)\n 2. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  x \\<notin> (\\<Union>i\\<in>{1..<Suc n}. (T ^^ i) --` A)", "show \"x \\<in> return_partition A (Suc n)\""], ["proof (prove)\nusing this:\n  x \\<notin> (\\<Union>i\\<in>{1..<Suc n}. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. x \\<in> return_partition A (Suc n)", "using a return_partition_def"], ["proof (prove)\nusing this:\n  x \\<notin> (\\<Union>i\\<in>{1..<Suc n}. (T ^^ i) --` A)\n  x \\<in> A \\<inter> (T ^^ Suc n) --` A\n  return_partition ?A ?k =\n  ?A \\<inter> (T ^^ ?k) --` ?A - (\\<Union>i\\<in>{0<..<?k}. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. x \\<in> return_partition A (Suc n)", "by simp"], ["proof (state)\nthis:\n  x \\<in> return_partition A (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "assume *: \"x \\<in> return_partition A (Suc n)\""], ["proof (state)\nthis:\n  x \\<in> return_partition A (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  x \\<in> return_partition A (Suc n)", "have a: \"x \\<in> space M\""], ["proof (prove)\nusing this:\n  x \\<in> return_partition A (Suc n)\n\ngoal (1 subgoal):\n 1. x \\<in> space M", "unfolding return_partition_def"], ["proof (prove)\nusing this:\n  x \\<in> A \\<inter> (T ^^ Suc n) --` A -\n          (\\<Union>i\\<in>{0<..<Suc n}. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. x \\<in> space M", "using vimage_restr_def"], ["proof (prove)\nusing this:\n  x \\<in> A \\<inter> (T ^^ Suc n) --` A -\n          (\\<Union>i\\<in>{0<..<Suc n}. (T ^^ i) --` A)\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. x \\<in> space M", "by blast"], ["proof (state)\nthis:\n  x \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "define K where \"K = {i::nat\\<in>{1..}. (T^^i) x \\<in> A}\""], ["proof (state)\nthis:\n  K = {i \\<in> {1..}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "have \"Inf K = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> K = Suc n", "apply (rule cInf_eq_minimum)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Suc n \\<in> K\n 2. \\<And>x. x \\<in> K \\<Longrightarrow> Suc n \\<le> x", "using *"], ["proof (prove)\nusing this:\n  x \\<in> return_partition A (Suc n)\n\ngoal (2 subgoals):\n 1. Suc n \\<in> K\n 2. \\<And>x. x \\<in> K \\<Longrightarrow> Suc n \\<le> x", "by (auto simp add: a assms K_def return_partition_def)"], ["proof (state)\nthis:\n  \\<Sqinter> K = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "have \"x \\<in> recurrent_subset A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> recurrent_subset A", "using * return_partition_basics(3)[OF assms]"], ["proof (prove)\nusing this:\n  x \\<in> return_partition A (Suc n)\n  (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A\n\ngoal (1 subgoal):\n 1. x \\<in> recurrent_subset A", "by auto"], ["proof (state)\nthis:\n  x \\<in> recurrent_subset A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> return_partition A (Suc n) \\<Longrightarrow>\n       return_time_function A x = Suc n", "then"], ["proof (chain)\npicking this:\n  x \\<in> recurrent_subset A", "show \"return_time_function A x = Suc n\""], ["proof (prove)\nusing this:\n  x \\<in> recurrent_subset A\n\ngoal (1 subgoal):\n 1. return_time_function A x = Suc n", "using return_time_function_def K_def \\<open>Inf K = Suc n\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> recurrent_subset A\n  return_time_function ?A ?x =\n  (if ?x \\<in> recurrent_subset ?A\n   then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) ?x \\<in> ?A} else 0)\n  K = {i \\<in> {1..}. (T ^^ i) x \\<in> A}\n  \\<Sqinter> K = Suc n\n\ngoal (1 subgoal):\n 1. return_time_function A x = Suc n", "by auto"], ["proof (state)\nthis:\n  return_time_function A x = Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The return time is measurable.\\<close>"], ["", "lemma return_time_function_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"return_time_function A \\<in> measurable M (count_space UNIV)\"\n        \"return_time_function A \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A\n    \\<in> M \\<rightarrow>\\<^sub>M count_space UNIV &&&\n    return_time_function A \\<in> borel_measurable M", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. return_time_function A \\<in> M \\<rightarrow>\\<^sub>M count_space UNIV\n 2. return_time_function A \\<in> borel_measurable M", "have \"(return_time_function A)-`{n} \\<inter> space M \\<in> sets M\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {n} \\<inter> space M \\<in> sets M", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    return_time_function A -` {n} \\<inter> space M \\<in> sets M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    return_time_function A -` {n} \\<inter> space M \\<in> sets M", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    return_time_function A -` {n} \\<inter> space M \\<in> sets M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    return_time_function A -` {n} \\<inter> space M \\<in> sets M", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. return_time_function A -` {n} \\<inter> space M \\<in> sets M", "using return_time0 recurrent_subset_meas[OF assms]"], ["proof (prove)\nusing this:\n  n = 0\n  return_time_function ?A -` {0} = UNIV - recurrent_subset ?A\n  recurrent_subset A \\<in> sets M\n  recurrent_subset_infty A \\<in> sets M\n\ngoal (1 subgoal):\n 1. return_time_function A -` {n} \\<inter> space M \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  return_time_function A -` {n} \\<inter> space M \\<in> sets M\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    return_time_function A -` {n} \\<inter> space M \\<in> sets M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    return_time_function A -` {n} \\<inter> space M \\<in> sets M", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    return_time_function A -` {n} \\<inter> space M \\<in> sets M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {n} \\<inter> space M \\<in> sets M", "using return_time_n return_partition_basics(1)[OF assms] not0_implies_Suc[OF False]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow>\n  return_time_function ?A -` {Suc ?n} = return_partition ?A (Suc ?n)\n  return_partition A ?n \\<in> sets M\n  \\<exists>m. n = Suc m\n\ngoal (1 subgoal):\n 1. return_time_function A -` {n} \\<inter> space M \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  return_time_function A -` {n} \\<inter> space M \\<in> sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  return_time_function A -` {?n2} \\<inter> space M \\<in> sets M\n\ngoal (2 subgoals):\n 1. return_time_function A \\<in> M \\<rightarrow>\\<^sub>M count_space UNIV\n 2. return_time_function A \\<in> borel_measurable M", "then"], ["proof (chain)\npicking this:\n  return_time_function A -` {?n2} \\<inter> space M \\<in> sets M", "show \"return_time_function A \\<in> measurable M (count_space UNIV)\""], ["proof (prove)\nusing this:\n  return_time_function A -` {?n2} \\<inter> space M \\<in> sets M\n\ngoal (1 subgoal):\n 1. return_time_function A \\<in> M \\<rightarrow>\\<^sub>M count_space UNIV", "by (simp add: measurable_count_space_eq2_countable assms)"], ["proof (state)\nthis:\n  return_time_function A \\<in> M \\<rightarrow>\\<^sub>M count_space UNIV\n\ngoal (1 subgoal):\n 1. return_time_function A \\<in> borel_measurable M", "then"], ["proof (chain)\npicking this:\n  return_time_function A \\<in> M \\<rightarrow>\\<^sub>M count_space UNIV", "show \"return_time_function A \\<in> borel_measurable M\""], ["proof (prove)\nusing this:\n  return_time_function A \\<in> M \\<rightarrow>\\<^sub>M count_space UNIV\n\ngoal (1 subgoal):\n 1. return_time_function A \\<in> borel_measurable M", "using measurable_cong_sets sets_borel_eq_count_space"], ["proof (prove)\nusing this:\n  return_time_function A \\<in> M \\<rightarrow>\\<^sub>M count_space UNIV\n  \\<lbrakk>sets ?M = sets ?M'; sets ?N = sets ?N'\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<^sub>M ?N =\n                    ?M' \\<rightarrow>\\<^sub>M ?N'\n  sets borel = sets (count_space UNIV)\n\ngoal (1 subgoal):\n 1. return_time_function A \\<in> borel_measurable M", "by blast"], ["proof (state)\nthis:\n  return_time_function A \\<in> borel_measurable M\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A close cousin of the return time and the return partition is the first entrance set:\nwe partition the space according to the first positive time where a point enters $A$.\\<close>"], ["", "definition first_entrance_set::\"'a set \\<Rightarrow> nat \\<Rightarrow> 'a set\"\n  where \"first_entrance_set A n = (T^^n) --` A - (\\<Union> i<n. (T^^i)--`A)\""], ["", "lemma first_entrance_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n    shows \"first_entrance_set A n \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first_entrance_set A n \\<in> sets M", "unfolding first_entrance_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) --` A - (\\<Union>i<n. (T ^^ i) --` A) \\<in> sets M", "by measurable"], ["", "lemma first_entrance_disjoint:\n  \"disjoint_family (first_entrance_set A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family (first_entrance_set A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. disjoint_family (first_entrance_set A)", "have \"first_entrance_set A = disjointed (\\<lambda>i. (T^^i)--`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first_entrance_set A = disjointed (\\<lambda>i. (T ^^ i) --` A)", "by (auto simp add: disjointed_def first_entrance_set_def)"], ["proof (state)\nthis:\n  first_entrance_set A = disjointed (\\<lambda>i. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. disjoint_family (first_entrance_set A)", "then"], ["proof (chain)\npicking this:\n  first_entrance_set A = disjointed (\\<lambda>i. (T ^^ i) --` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  first_entrance_set A = disjointed (\\<lambda>i. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. disjoint_family (first_entrance_set A)", "by (simp add: disjoint_family_disjointed)"], ["proof (state)\nthis:\n  disjoint_family (first_entrance_set A)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>There is an important dynamical phenomenon: if a point has first entrance time equal to\n$n$, then their preimages either have first entrance time equal to $n+1$ (these are the preimages\nnot in $A$) or they belong to $A$ and have first return time equal to $n+1$. When $T$ preserves the\nmeasure, this gives an inductive control on the measure of the first entrance set, that will be\nused again and again in the proof of Kac's Formula. We formulate these (simple but extremely useful)\nfacts now.\\<close>"], ["", "lemma first_entrance_rec:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"first_entrance_set A (Suc n) = T--`(first_entrance_set A n) - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "have A0: \"A = (T^^0)--`A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = (T ^^ 0) --` A", "by auto"], ["proof (state)\nthis:\n  A = (T ^^ 0) --` A\n\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "have \"first_entrance_set A n = (T^^n) --` A - (\\<Union> i<n. (T^^i)--`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. first_entrance_set A n = (T ^^ n) --` A - (\\<Union>i<n. (T ^^ i) --` A)", "using first_entrance_set_def"], ["proof (prove)\nusing this:\n  first_entrance_set ?A ?n =\n  (T ^^ ?n) --` ?A - (\\<Union>i<?n. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. first_entrance_set A n = (T ^^ n) --` A - (\\<Union>i<n. (T ^^ i) --` A)", "by simp"], ["proof (state)\nthis:\n  first_entrance_set A n = (T ^^ n) --` A - (\\<Union>i<n. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "then"], ["proof (chain)\npicking this:\n  first_entrance_set A n = (T ^^ n) --` A - (\\<Union>i<n. (T ^^ i) --` A)", "have \"T--`(first_entrance_set A n) = (T^^(n+1))--`A - (\\<Union> i<n. (T^^(i+1))--`A)\""], ["proof (prove)\nusing this:\n  first_entrance_set A n = (T ^^ n) --` A - (\\<Union>i<n. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. T --` first_entrance_set A n =\n    (T ^^ (n + 1)) --` A - (\\<Union>i<n. (T ^^ (i + 1)) --` A)", "using T_vrestr_composed(2) \\<open>A \\<in> sets M\\<close>"], ["proof (prove)\nusing this:\n  first_entrance_set A n = (T ^^ n) --` A - (\\<Union>i<n. (T ^^ i) --` A)\n  ?A \\<in> sets M \\<Longrightarrow>\n  T --` (T ^^ ?m) --` ?A = (T ^^ (?m + 1)) --` ?A\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. T --` first_entrance_set A n =\n    (T ^^ (n + 1)) --` A - (\\<Union>i<n. (T ^^ (i + 1)) --` A)", "by simp"], ["proof (state)\nthis:\n  T --` first_entrance_set A n =\n  (T ^^ (n + 1)) --` A - (\\<Union>i<n. (T ^^ (i + 1)) --` A)\n\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "then"], ["proof (chain)\npicking this:\n  T --` first_entrance_set A n =\n  (T ^^ (n + 1)) --` A - (\\<Union>i<n. (T ^^ (i + 1)) --` A)", "have *: \"T--`(first_entrance_set A n) - A = (T^^(n+1))--`A - (A \\<union> (\\<Union> i<n. (T^^(i+1))--`A))\""], ["proof (prove)\nusing this:\n  T --` first_entrance_set A n =\n  (T ^^ (n + 1)) --` A - (\\<Union>i<n. (T ^^ (i + 1)) --` A)\n\ngoal (1 subgoal):\n 1. T --` first_entrance_set A n - A =\n    (T ^^ (n + 1)) --` A - (A \\<union> (\\<Union>i<n. (T ^^ (i + 1)) --` A))", "by blast"], ["proof (state)\nthis:\n  T --` first_entrance_set A n - A =\n  (T ^^ (n + 1)) --` A - (A \\<union> (\\<Union>i<n. (T ^^ (i + 1)) --` A))\n\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "have \"(\\<Union> i<n. (T^^(i+1))--`A) = (\\<Union> j\\<in>{1..<n+1}. (T^^j)--`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n    (\\<Union>j\\<in>{1..<n + 1}. (T ^^ j) --` A)", "by (rule UN_le_add_shift_strict)"], ["proof (state)\nthis:\n  (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n  (\\<Union>j\\<in>{1..<n + 1}. (T ^^ j) --` A)\n\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "then"], ["proof (chain)\npicking this:\n  (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n  (\\<Union>j\\<in>{1..<n + 1}. (T ^^ j) --` A)", "have \"A \\<union> (\\<Union> i<n. (T^^(i+1))--`A) = (\\<Union> j\\<in>{0..<n+1}. (T^^j)--`A)\""], ["proof (prove)\nusing this:\n  (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n  (\\<Union>j\\<in>{1..<n + 1}. (T ^^ j) --` A)\n\ngoal (1 subgoal):\n 1. A \\<union> (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n    (\\<Union>j\\<in>{0..<n + 1}. (T ^^ j) --` A)", "by (metis A0 Un_commute atLeast0LessThan UN_le_eq_Un0_strict)"], ["proof (state)\nthis:\n  A \\<union> (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n  (\\<Union>j\\<in>{0..<n + 1}. (T ^^ j) --` A)\n\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "then"], ["proof (chain)\npicking this:\n  A \\<union> (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n  (\\<Union>j\\<in>{0..<n + 1}. (T ^^ j) --` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<union> (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n  (\\<Union>j\\<in>{0..<n + 1}. (T ^^ j) --` A)\n\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "using * first_entrance_set_def"], ["proof (prove)\nusing this:\n  A \\<union> (\\<Union>i<n. (T ^^ (i + 1)) --` A) =\n  (\\<Union>j\\<in>{0..<n + 1}. (T ^^ j) --` A)\n  T --` first_entrance_set A n - A =\n  (T ^^ (n + 1)) --` A - (A \\<union> (\\<Union>i<n. (T ^^ (i + 1)) --` A))\n  first_entrance_set ?A ?n =\n  (T ^^ ?n) --` ?A - (\\<Union>i<?n. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. first_entrance_set A (Suc n) = T --` first_entrance_set A n - A", "by auto"], ["proof (state)\nthis:\n  first_entrance_set A (Suc n) = T --` first_entrance_set A n - A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma return_time_rec:\n  assumes \"A \\<in> sets M\"\n  shows \"(return_time_function A)-`{Suc n} = T--`(first_entrance_set A n) \\<inter> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {Suc n} =\n    T --` first_entrance_set A n \\<inter> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. return_time_function A -` {Suc n} =\n    T --` first_entrance_set A n \\<inter> A", "have \"return_partition A (Suc n) = T--`(first_entrance_set A n) \\<inter> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_partition A (Suc n) = T --` first_entrance_set A n \\<inter> A", "unfolding return_partition_def first_entrance_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> (T ^^ Suc n) --` A -\n    (\\<Union>i\\<in>{0<..<Suc n}. (T ^^ i) --` A) =\n    T --` ((T ^^ n) --` A - (\\<Union>i<n. (T ^^ i) --` A)) \\<inter> A", "by (auto simp add: T_vrestr_composed[OF assms]) (auto simp add: less_Suc_eq_0_disj)"], ["proof (state)\nthis:\n  return_partition A (Suc n) = T --` first_entrance_set A n \\<inter> A\n\ngoal (1 subgoal):\n 1. return_time_function A -` {Suc n} =\n    T --` first_entrance_set A n \\<inter> A", "then"], ["proof (chain)\npicking this:\n  return_partition A (Suc n) = T --` first_entrance_set A n \\<inter> A", "show ?thesis"], ["proof (prove)\nusing this:\n  return_partition A (Suc n) = T --` first_entrance_set A n \\<inter> A\n\ngoal (1 subgoal):\n 1. return_time_function A -` {Suc n} =\n    T --` first_entrance_set A n \\<inter> A", "using return_time_n[OF assms]"], ["proof (prove)\nusing this:\n  return_partition A (Suc n) = T --` first_entrance_set A n \\<inter> A\n  return_time_function A -` {Suc ?n} = return_partition A (Suc ?n)\n\ngoal (1 subgoal):\n 1. return_time_function A -` {Suc n} =\n    T --` first_entrance_set A n \\<inter> A", "by simp"], ["proof (state)\nthis:\n  return_time_function A -` {Suc n} =\n  T --` first_entrance_set A n \\<inter> A\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Local time controls\\<close>"], ["", "text \\<open>The local time is the time that an orbit spends in a given set. Local time controls\nare basic to all the forthcoming developments.\\<close>"], ["", "definition local_time::\"'a set \\<Rightarrow> nat \\<Rightarrow> 'a \\<Rightarrow> nat\"\nwhere \"local_time A n x = card {i\\<in>{..<n}. (T^^i) x \\<in> A}\""], ["", "lemma local_time_birkhoff:\n  \"local_time A n x = birkhoff_sum (indicator A) n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A n x = birkhoff_sum (indicator A) n x", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. local_time A 0 x = birkhoff_sum (indicator A) 0 x\n 2. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. local_time A 0 x = birkhoff_sum (indicator A) 0 x\n 2. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A 0 x = birkhoff_sum (indicator A) 0 x", "unfolding local_time_def birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i \\<in> {..<0}. (T ^^ i) x \\<in> A} =\n    (\\<Sum>i<0. indicator A ((T ^^ i) x))", "by simp"], ["proof (state)\nthis:\n  local_time A 0 x = birkhoff_sum (indicator A) 0 x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "case (Suc n)"], ["proof (state)\nthis:\n  local_time A n x = birkhoff_sum (indicator A) n x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "have \"local_time A (n+1) x = local_time A n x + indicator A ((T^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n 2. \\<not> ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "assume *: \"(T^^n) x \\<in> A\""], ["proof (state)\nthis:\n  (T ^^ n) x \\<in> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n 2. \\<not> ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "then"], ["proof (chain)\npicking this:\n  (T ^^ n) x \\<in> A", "have \"{i\\<in>{..<Suc n}. (T^^i) x \\<in> A} = {i\\<in>{..<n}. (T^^i) x \\<in> A} \\<union> {n}\""], ["proof (prove)\nusing this:\n  (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n    {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<union> {n}", "by auto"], ["proof (state)\nthis:\n  {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<union> {n}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n 2. \\<not> ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "then"], ["proof (chain)\npicking this:\n  {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<union> {n}", "have \"card {i\\<in>{..<Suc n}. (T^^i) x \\<in> A} = card {i\\<in>{..<n}. (T^^i) x \\<in> A} + card {n}\""], ["proof (prove)\nusing this:\n  {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<union> {n}\n\ngoal (1 subgoal):\n 1. card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n    card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} + card {n}", "using card_Un_disjoint"], ["proof (prove)\nusing this:\n  {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<union> {n}\n  \\<lbrakk>finite ?A; finite ?B; ?A \\<inter> ?B = {}\\<rbrakk>\n  \\<Longrightarrow> card (?A \\<union> ?B) = card ?A + card ?B\n\ngoal (1 subgoal):\n 1. card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n    card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} + card {n}", "by auto"], ["proof (state)\nthis:\n  card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} + card {n}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n 2. \\<not> ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "then"], ["proof (chain)\npicking this:\n  card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} + card {n}", "have \"local_time A (n+1) x = local_time A n x + 1\""], ["proof (prove)\nusing this:\n  card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} + card {n}\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = local_time A n x + 1", "using local_time_def"], ["proof (prove)\nusing this:\n  card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} + card {n}\n  local_time ?A ?n ?x = card {i \\<in> {..<?n}. (T ^^ i) ?x \\<in> ?A}\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = local_time A n x + 1", "by simp"], ["proof (state)\nthis:\n  local_time A (n + 1) x = local_time A n x + 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n 2. \\<not> ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "moreover"], ["proof (state)\nthis:\n  local_time A (n + 1) x = local_time A n x + 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n 2. \\<not> ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "have \"indicator A ((T^^n)x) = (1::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indicator A ((T ^^ n) x) = 1", "using * indicator_def"], ["proof (prove)\nusing this:\n  (T ^^ n) x \\<in> A\n  indicator ?S ?x = (if ?x \\<in> ?S then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. indicator A ((T ^^ n) x) = 1", "by auto"], ["proof (state)\nthis:\n  indicator A ((T ^^ n) x) = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n 2. \\<not> ?P \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "ultimately"], ["proof (chain)\npicking this:\n  local_time A (n + 1) x = local_time A n x + 1\n  indicator A ((T ^^ n) x) = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  local_time A (n + 1) x = local_time A n x + 1\n  indicator A ((T ^^ n) x) = 1\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "by simp"], ["proof (state)\nthis:\n  local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "assume *: \"\\<not>((T^^n) x \\<in> A)\""], ["proof (state)\nthis:\n  (T ^^ n) x \\<notin> A\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "then"], ["proof (chain)\npicking this:\n  (T ^^ n) x \\<notin> A", "have \"{i\\<in>{..<Suc n}. (T^^i) x \\<in> A} = {i\\<in>{..<n}. (T^^i) x \\<in> A}\""], ["proof (prove)\nusing this:\n  (T ^^ n) x \\<notin> A\n\ngoal (1 subgoal):\n 1. {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n    {i \\<in> {..<n}. (T ^^ i) x \\<in> A}", "using less_Suc_eq"], ["proof (prove)\nusing this:\n  (T ^^ n) x \\<notin> A\n  (?m < Suc ?n) = (?m < ?n \\<or> ?m = ?n)\n\ngoal (1 subgoal):\n 1. {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n    {i \\<in> {..<n}. (T ^^ i) x \\<in> A}", "by force"], ["proof (state)\nthis:\n  {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  {i \\<in> {..<n}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "then"], ["proof (chain)\npicking this:\n  {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  {i \\<in> {..<n}. (T ^^ i) x \\<in> A}", "have \"card {i\\<in>{..<Suc n}. (T^^i) x \\<in> A} = card {i\\<in>{..<n}. (T^^i) x \\<in> A}\""], ["proof (prove)\nusing this:\n  {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  {i \\<in> {..<n}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n    card {i \\<in> {..<n}. (T ^^ i) x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "then"], ["proof (chain)\npicking this:\n  card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A}", "have \"local_time A (n+1) x = local_time A n x\""], ["proof (prove)\nusing this:\n  card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A}\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = local_time A n x", "using local_time_def"], ["proof (prove)\nusing this:\n  card {i \\<in> {..<Suc n}. (T ^^ i) x \\<in> A} =\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A}\n  local_time ?A ?n ?x = card {i \\<in> {..<?n}. (T ^^ i) ?x \\<in> ?A}\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = local_time A n x", "by simp"], ["proof (state)\nthis:\n  local_time A (n + 1) x = local_time A n x\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "moreover"], ["proof (state)\nthis:\n  local_time A (n + 1) x = local_time A n x\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "have \"indicator A ((T^^n)x) = (0::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indicator A ((T ^^ n) x) = 0", "using * indicator_def"], ["proof (prove)\nusing this:\n  (T ^^ n) x \\<notin> A\n  indicator ?S ?x = (if ?x \\<in> ?S then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. indicator A ((T ^^ n) x) = 0", "by auto"], ["proof (state)\nthis:\n  indicator A ((T ^^ n) x) = 0\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<notin> A \\<Longrightarrow>\n    local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "ultimately"], ["proof (chain)\npicking this:\n  local_time A (n + 1) x = local_time A n x\n  indicator A ((T ^^ n) x) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  local_time A (n + 1) x = local_time A n x\n  indicator A ((T ^^ n) x) = 0\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "by simp"], ["proof (state)\nthis:\n  local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "then"], ["proof (chain)\npicking this:\n  local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "have \"local_time A (n+1) x = birkhoff_sum (indicator A) n x + indicator A ((T^^n) x)\""], ["proof (prove)\nusing this:\n  local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x =\n    birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)", "using Suc.IH"], ["proof (prove)\nusing this:\n  local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)\n  local_time A n x = birkhoff_sum (indicator A) n x\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x =\n    birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)", "by auto"], ["proof (state)\nthis:\n  local_time A (n + 1) x =\n  birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "moreover"], ["proof (state)\nthis:\n  local_time A (n + 1) x =\n  birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "have \"birkhoff_sum (indicator A) (n+1) x = birkhoff_sum (indicator A) n x + indicator A ((T^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum (indicator A) (n + 1) x =\n    birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)", "by (metis birkhoff_sum_cocycle[where ?n = \"n\" and ?m = \"1\"] birkhoff_sum_1(2))"], ["proof (state)\nthis:\n  birkhoff_sum (indicator A) (n + 1) x =\n  birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "ultimately"], ["proof (chain)\npicking this:\n  local_time A (n + 1) x =\n  birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)\n  birkhoff_sum (indicator A) (n + 1) x =\n  birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)", "have \"local_time A (n+1) x = birkhoff_sum (indicator A) (n+1) x\""], ["proof (prove)\nusing this:\n  local_time A (n + 1) x =\n  birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)\n  birkhoff_sum (indicator A) (n + 1) x =\n  birkhoff_sum (indicator A) n x + indicator A ((T ^^ n) x)\n\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = birkhoff_sum (indicator A) (n + 1) x", "by metis"], ["proof (state)\nthis:\n  local_time A (n + 1) x = birkhoff_sum (indicator A) (n + 1) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       local_time A n x = birkhoff_sum (indicator A) n x \\<Longrightarrow>\n       local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "then"], ["proof (chain)\npicking this:\n  local_time A (n + 1) x = birkhoff_sum (indicator A) (n + 1) x", "show ?case"], ["proof (prove)\nusing this:\n  local_time A (n + 1) x = birkhoff_sum (indicator A) (n + 1) x\n\ngoal (1 subgoal):\n 1. local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x", "by (metis Suc_eq_plus1)"], ["proof (state)\nthis:\n  local_time A (Suc n) x = birkhoff_sum (indicator A) (Suc n) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma local_time_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n  shows \"local_time A n \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A n \\<in> borel_measurable M", "unfolding local_time_birkhoff"], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum (indicator A) n \\<in> borel_measurable M", "by auto"], ["", "lemma local_time_cocycle:\n  \"local_time A n x + local_time A m ((T^^n)x) = local_time A (n+m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A n x + local_time A m ((T ^^ n) x) = local_time A (n + m) x", "by (metis local_time_birkhoff birkhoff_sum_cocycle)"], ["", "lemma local_time_incseq:\n  \"incseq (\\<lambda>n. local_time A n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n. local_time A n x)", "using local_time_cocycle incseq_def"], ["proof (prove)\nusing this:\n  local_time ?A ?n ?x + local_time ?A ?m ((T ^^ ?n) ?x) =\n  local_time ?A (?n + ?m) ?x\n  incseq ?X = (\\<forall>m n. m \\<le> n \\<longrightarrow> ?X m \\<le> ?X n)\n\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n. local_time A n x)", "by (metis le_iff_add)"], ["", "lemma local_time_Suc:\n  \"local_time A (n+1) x = local_time A n x + indicator A ((T^^n)x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A (n + 1) x = local_time A n x + indicator A ((T ^^ n) x)", "by (metis local_time_birkhoff birkhoff_sum_cocycle birkhoff_sum_1(2))"], ["", "text \\<open>The local time is bounded by $n$: at most, one returns to $A$ all the time!\\<close>"], ["", "lemma local_time_bound:\n  \"local_time A n x \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A n x \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local_time A n x \\<le> n", "have \"card {i\\<in>{..<n}. (T^^i) x \\<in> A} \\<le> card {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<le> card {..<n}", "by (rule card_mono, auto)"], ["proof (state)\nthis:\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<le> card {..<n}\n\ngoal (1 subgoal):\n 1. local_time A n x \\<le> n", "then"], ["proof (chain)\npicking this:\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<le> card {..<n}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<le> card {..<n}\n\ngoal (1 subgoal):\n 1. local_time A n x \\<le> n", "unfolding local_time_def"], ["proof (prove)\nusing this:\n  card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<le> card {..<n}\n\ngoal (1 subgoal):\n 1. card {i \\<in> {..<n}. (T ^^ i) x \\<in> A} \\<le> n", "by auto"], ["proof (state)\nthis:\n  local_time A n x \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The fact that local times are unbounded will be the main technical tool in the proof\nof recurrence results or Kac formula below. In this direction, we prove more and more general\nresults in the lemmas below.\n\nWe show that, in $T^{-n}(A)$, the number of visits to $A$ tends to infinity in\nmeasure, when $A$ has finite measure. In other words, the points in $T^{-n}(A)$ with\nlocal time $<k$ have a measure tending to $0$ with $k$. The argument, by induction on $k$, goes\nas follows.\n\nConsider the last return to $A$ before time $n$, say at time $n-i$. It lands in the set $S_i$ with\nretun time $i$. We get $T^{-n} A \\subseteq \\bigcup_{n<N} T^{-(n-i)}S_i \\cup R$, where the union\nis disjoint and $R$ is a set of measure $\\mu(T^{-n}A) - \\sum_{n<N} \\mu(T^{-(n-i)}S_i)\n= \\mu(A) -\\sum_{n<N} \\mu(S_i)$, which tends to $0$ with $N$ and that we may therefore discard.\nA point with local time $<k$ at time $n$ in $T^{-n}A$ is then a point with local time $<k-1$\nat time $n-i$ in $T^{-(n-i)}S_i \\subseteq T^{-(n-i)}A$. Hence, we may conclude by the induction\nassumption that this has small measure.\\<close>"], ["", "lemma (in conservative_mpt) local_time_unbounded1:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n    and fin: \"emeasure M A < \\<infinity>\"\n  shows \"(\\<lambda>n. emeasure M {x \\<in> (T^^n)--`A. local_time A n x < k}) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n    \\<longlonglongrightarrow> 0", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < 0})\n    \\<longlonglongrightarrow> 0\n 2. \\<And>k.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n       \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n       \\<longlonglongrightarrow> 0", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < 0})\n    \\<longlonglongrightarrow> 0\n 2. \\<And>k.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n       \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n       \\<longlonglongrightarrow> 0", "have \"{x \\<in> (T^^n)--`A. local_time A n x < 0} = {}\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> (T ^^ n) --` A. local_time A n x < 0} = {}", "by simp"], ["proof (state)\nthis:\n  {x \\<in> (T ^^ ?n3) --` A. local_time A ?n3 x < 0} = {}\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < 0})\n    \\<longlonglongrightarrow> 0\n 2. \\<And>k.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n       \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n       \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  {x \\<in> (T ^^ ?n3) --` A. local_time A ?n3 x < 0} = {}", "show ?case"], ["proof (prove)\nusing this:\n  {x \\<in> (T ^^ ?n3) --` A. local_time A ?n3 x < 0} = {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < 0})\n    \\<longlonglongrightarrow> 0", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < 0})\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n       \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n       \\<longlonglongrightarrow> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n       \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n       \\<longlonglongrightarrow> 0", "case (Suc k)"], ["proof (state)\nthis:\n  (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n       \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n       \\<longlonglongrightarrow> 0", "define K where \"K = (\\<lambda>p n. {x \\<in> (T^^n)--`A. local_time A n x < p})\""], ["proof (state)\nthis:\n  K = (\\<lambda>p n. {x \\<in> (T ^^ n) --` A. local_time A n x < p})\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n       \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n       \\<longlonglongrightarrow> 0", "have K_meas [measurable]: \"K p n \\<in> sets M\" for n p"], ["proof (prove)\ngoal (1 subgoal):\n 1. K p n \\<in> sets M", "unfolding K_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> (T ^^ n) --` A. local_time A n x < p} \\<in> sets M", "by measurable"], ["proof (state)\nthis:\n  K ?p3 ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n       \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n       \\<longlonglongrightarrow> 0", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n    \\<longlonglongrightarrow> 0", "proof (rule tendsto_zero_ennreal)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "fix e :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "assume \"0 < e\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "define e2 where \"e2 = e/3\""], ["proof (state)\nthis:\n  e2 = e / 3\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have \"e2 > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e2", "using e2_def \\<open>e>0\\<close>"], ["proof (prove)\nusing this:\n  e2 = e / 3\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < e2", "by simp"], ["proof (state)\nthis:\n  0 < e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have \"(\\<Sum>n. emeasure M (return_partition A (n+1))) = emeasure M ((\\<Union>n. return_partition A (n + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. emeasure M (return_partition A (n + 1))) =\n    emeasure M (\\<Union>n. return_partition A (n + 1))", "apply (rule suminf_emeasure)"], ["proof (prove)\ngoal (2 subgoals):\n 1. range (\\<lambda>i. return_partition A (i + 1)) \\<subseteq> sets M\n 2. disjoint_family (\\<lambda>i. return_partition A (i + 1))", "using return_partition_basics[OF A_meas]"], ["proof (prove)\nusing this:\n  return_partition A ?n \\<in> sets M\n  disjoint_family (\\<lambda>n. return_partition A (n + 1))\n  (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A\n\ngoal (2 subgoals):\n 1. range (\\<lambda>i. return_partition A (i + 1)) \\<subseteq> sets M\n 2. disjoint_family (\\<lambda>i. return_partition A (i + 1))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) =\n  emeasure M (\\<Union>n. return_partition A (n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) =\n  emeasure M (\\<Union>n. return_partition A (n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have \"... = emeasure M (recurrent_subset A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (\\<Union>n. return_partition A (n + 1)) =\n    emeasure M (recurrent_subset A)", "using return_partition_basics(3)[OF A_meas]"], ["proof (prove)\nusing this:\n  (\\<Union>n. return_partition A (n + 1)) = recurrent_subset A\n\ngoal (1 subgoal):\n 1. emeasure M (\\<Union>n. return_partition A (n + 1)) =\n    emeasure M (recurrent_subset A)", "by simp"], ["proof (state)\nthis:\n  emeasure M (\\<Union>n. return_partition A (n + 1)) =\n  emeasure M (recurrent_subset A)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "also"], ["proof (state)\nthis:\n  emeasure M (\\<Union>n. return_partition A (n + 1)) =\n  emeasure M (recurrent_subset A)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have \"... = emeasure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (recurrent_subset A) = emeasure M A", "by (metis A_meas double_diff emeasure_Diff_null_set order_refl Poincare_recurrence_thm(1)[OF A_meas] recurrent_subset_incl(1))"], ["proof (state)\nthis:\n  emeasure M (recurrent_subset A) = emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A", "have \"(\\<Sum>n. emeasure M (return_partition A (n+1))) = emeasure M A\""], ["proof (prove)\nusing this:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have \"summable (\\<lambda>n. emeasure M (return_partition A (n+1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. emeasure M (return_partition A (n + 1)))", "by simp"], ["proof (state)\nthis:\n  summable (\\<lambda>n. emeasure M (return_partition A (n + 1)))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A\n  summable (\\<lambda>n. emeasure M (return_partition A (n + 1)))", "have \"(\\<lambda>N. (\\<Sum>n<N. emeasure M (return_partition A (n+1)))) \\<longlonglongrightarrow> emeasure M A\""], ["proof (prove)\nusing this:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A\n  summable (\\<lambda>n. emeasure M (return_partition A (n + 1)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. \\<Sum>n<N. emeasure M (return_partition A (n + 1)))\n    \\<longlonglongrightarrow> emeasure M A", "unfolding sums_def[symmetric] sums_iff"], ["proof (prove)\nusing this:\n  (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A\n  summable (\\<lambda>n. emeasure M (return_partition A (n + 1)))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. emeasure M (return_partition A (n + 1))) \\<and>\n    (\\<Sum>n. emeasure M (return_partition A (n + 1))) = emeasure M A", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>N. \\<Sum>n<N. emeasure M (return_partition A (n + 1)))\n  \\<longlonglongrightarrow> emeasure M A\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>N. \\<Sum>n<N. emeasure M (return_partition A (n + 1)))\n  \\<longlonglongrightarrow> emeasure M A", "have \"(\\<lambda>N. (\\<Sum>n<N. emeasure M (return_partition A (n+1))) + e2) \\<longlonglongrightarrow> emeasure M A + e2\""], ["proof (prove)\nusing this:\n  (\\<lambda>N. \\<Sum>n<N. emeasure M (return_partition A (n + 1)))\n  \\<longlonglongrightarrow> emeasure M A\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2)\n    \\<longlonglongrightarrow> emeasure M A + ennreal e2", "by (intro tendsto_add) auto"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2)\n  \\<longlonglongrightarrow> emeasure M A + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2)\n  \\<longlonglongrightarrow> emeasure M A + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have \"emeasure M A < emeasure M A + e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M A < emeasure M A + ennreal e2", "using \\<open>emeasure M A < \\<infinity>\\<close> \\<open>0 < e2\\<close>"], ["proof (prove)\nusing this:\n  emeasure M A < \\<infinity>\n  0 < e2\n\ngoal (1 subgoal):\n 1. emeasure M A < emeasure M A + ennreal e2", "by auto"], ["proof (state)\nthis:\n  emeasure M A < emeasure M A + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>N.\n      (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2)\n  \\<longlonglongrightarrow> emeasure M A + ennreal e2\n  emeasure M A < emeasure M A + ennreal e2", "have \"eventually (\\<lambda>N. (\\<Sum>n<N. emeasure M (return_partition A (n+1))) + e2 > emeasure M A) sequentially\""], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2)\n  \\<longlonglongrightarrow> emeasure M A + ennreal e2\n  emeasure M A < emeasure M A + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F N in sequentially.\n       emeasure M A\n       < (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2", "by (simp add: order_tendsto_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F N in sequentially.\n     emeasure M A\n     < (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F N in sequentially.\n     emeasure M A\n     < (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2", "obtain N where \"N>0\" and largeM: \"(\\<Sum>n<N. emeasure M (return_partition A (n+1))) + e2 > emeasure M A\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F N in sequentially.\n     emeasure M A\n     < (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>0 < N;\n         emeasure M A\n         < (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) +\n           ennreal e2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) add.commute add_Suc_right eventually_at_top_linorder le_add2 zero_less_Suc)"], ["proof (state)\nthis:\n  0 < N\n  emeasure M A\n  < (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have upper: \"emeasure M (K (Suc k) n) \\<le> e2 + (\\<Sum>i<N. emeasure M (K k (n-i-1)))\" if \"n>N\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "define B where \"B = (\\<lambda>i. (T^^(n-i-1))--`(return_partition A (i+1)))\""], ["proof (state)\nthis:\n  B = (\\<lambda>i. (T ^^ (n - i - 1)) --` return_partition A (i + 1))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have B_meas [measurable]: \"B i \\<in> sets M\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. B i \\<in> sets M", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ (n - i - 1)) --` return_partition A (i + 1) \\<in> sets M", "by measurable"], ["proof (state)\nthis:\n  B ?i3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have disj_B: \"disjoint_family_on B {..<N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on B {..<N}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. disjoint_family_on B {..<N}", "have \"B i \\<inter> B j = {}\" if \"i\\<in>{..<N}\" \"j\\<in>{..<N}\" \"i < j\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. B i \\<inter> B j = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B i \\<inter> B j = {}", "have \"n > i\" \"n>j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < n &&& j < n", "using \\<open>n>N\\<close> that"], ["proof (prove)\nusing this:\n  N < n\n  i \\<in> {..<N}\n  j \\<in> {..<N}\n  i < j\n\ngoal (1 subgoal):\n 1. i < n &&& j < n", "by auto"], ["proof (state)\nthis:\n  i < n\n  j < n\n\ngoal (1 subgoal):\n 1. B i \\<inter> B j = {}", "let ?k = \"j-i\""], ["proof (state)\ngoal (1 subgoal):\n 1. B i \\<inter> B j = {}", "have \"x \\<notin> B i\" if \"x \\<in> B j\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> B i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> B i", "have \"(T^^(n-j-1)) x \\<in> return_partition A (j+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ (n - j - 1)) x \\<in> return_partition A (j + 1)", "using B_def that"], ["proof (prove)\nusing this:\n  B = (\\<lambda>i. (T ^^ (n - i - 1)) --` return_partition A (i + 1))\n  x \\<in> B j\n\ngoal (1 subgoal):\n 1. (T ^^ (n - j - 1)) x \\<in> return_partition A (j + 1)", "by auto"], ["proof (state)\nthis:\n  (T ^^ (n - j - 1)) x \\<in> return_partition A (j + 1)\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "moreover"], ["proof (state)\nthis:\n  (T ^^ (n - j - 1)) x \\<in> return_partition A (j + 1)\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "have \"?k>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < j - i", "using \\<open>i < j\\<close>"], ["proof (prove)\nusing this:\n  i < j\n\ngoal (1 subgoal):\n 1. 0 < j - i", "by simp"], ["proof (state)\nthis:\n  0 < j - i\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "moreover"], ["proof (state)\nthis:\n  0 < j - i\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "have \"?k < j+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j - i < j + 1", "by simp"], ["proof (state)\nthis:\n  j - i < j + 1\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "ultimately"], ["proof (chain)\npicking this:\n  (T ^^ (n - j - 1)) x \\<in> return_partition A (j + 1)\n  0 < j - i\n  j - i < j + 1", "have \"(T^^(n-j-1)) x \\<notin> (T^^?k)--`A\""], ["proof (prove)\nusing this:\n  (T ^^ (n - j - 1)) x \\<in> return_partition A (j + 1)\n  0 < j - i\n  j - i < j + 1\n\ngoal (1 subgoal):\n 1. (T ^^ (n - j - 1)) x \\<notin> (T ^^ (j - i)) --` A", "using return_partition_def"], ["proof (prove)\nusing this:\n  (T ^^ (n - j - 1)) x \\<in> return_partition A (j + 1)\n  0 < j - i\n  j - i < j + 1\n  return_partition ?A ?k =\n  ?A \\<inter> (T ^^ ?k) --` ?A - (\\<Union>i\\<in>{0<..<?k}. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. (T ^^ (n - j - 1)) x \\<notin> (T ^^ (j - i)) --` A", "by auto"], ["proof (state)\nthis:\n  (T ^^ (n - j - 1)) x \\<notin> (T ^^ (j - i)) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "then"], ["proof (chain)\npicking this:\n  (T ^^ (n - j - 1)) x \\<notin> (T ^^ (j - i)) --` A", "have \"x \\<notin> (T^^(n-j-1))--` (T^^?k)--`A\""], ["proof (prove)\nusing this:\n  (T ^^ (n - j - 1)) x \\<notin> (T ^^ (j - i)) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ (n - j - 1)) --` (T ^^ (j - i)) --` A", "by auto"], ["proof (state)\nthis:\n  x \\<notin> (T ^^ (n - j - 1)) --` (T ^^ (j - i)) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "then"], ["proof (chain)\npicking this:\n  x \\<notin> (T ^^ (n - j - 1)) --` (T ^^ (j - i)) --` A", "have \"x \\<notin> (T^^(n-j-1 + ?k))--`A\""], ["proof (prove)\nusing this:\n  x \\<notin> (T ^^ (n - j - 1)) --` (T ^^ (j - i)) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ (n - j - 1 + (j - i))) --` A", "using T_vrestr_composed[OF A_meas]"], ["proof (prove)\nusing this:\n  x \\<notin> (T ^^ (n - j - 1)) --` (T ^^ (j - i)) --` A\n  (T ^^ ?n) --` (T ^^ ?m) --` A = (T ^^ (?n + ?m)) --` A\n  T --` (T ^^ ?m) --` A = (T ^^ (?m + 1)) --` A\n  (T ^^ ?m) --` T --` A = (T ^^ (?m + 1)) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ (n - j - 1 + (j - i))) --` A", "by simp"], ["proof (state)\nthis:\n  x \\<notin> (T ^^ (n - j - 1 + (j - i))) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "then"], ["proof (chain)\npicking this:\n  x \\<notin> (T ^^ (n - j - 1 + (j - i))) --` A", "have \"x \\<notin> (T^^(n-i-1))--`A\""], ["proof (prove)\nusing this:\n  x \\<notin> (T ^^ (n - j - 1 + (j - i))) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ (n - i - 1)) --` A", "using \\<open>i<j\\<close> \\<open>n>j\\<close>"], ["proof (prove)\nusing this:\n  x \\<notin> (T ^^ (n - j - 1 + (j - i))) --` A\n  i < j\n  j < n\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ (n - i - 1)) --` A", "by auto"], ["proof (state)\nthis:\n  x \\<notin> (T ^^ (n - i - 1)) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "then"], ["proof (chain)\npicking this:\n  x \\<notin> (T ^^ (n - i - 1)) --` A", "have \"x \\<notin> (T^^(n-i-1))--` (return_partition A (i+1))\""], ["proof (prove)\nusing this:\n  x \\<notin> (T ^^ (n - i - 1)) --` A\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ (n - i - 1)) --` return_partition A (i + 1)", "using return_partition_def"], ["proof (prove)\nusing this:\n  x \\<notin> (T ^^ (n - i - 1)) --` A\n  return_partition ?A ?k =\n  ?A \\<inter> (T ^^ ?k) --` ?A - (\\<Union>i\\<in>{0<..<?k}. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. x \\<notin> (T ^^ (n - i - 1)) --` return_partition A (i + 1)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> (T ^^ (n - i - 1)) --` return_partition A (i + 1)\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "then"], ["proof (chain)\npicking this:\n  x \\<notin> (T ^^ (n - i - 1)) --` return_partition A (i + 1)", "show \"x \\<notin> B i\""], ["proof (prove)\nusing this:\n  x \\<notin> (T ^^ (n - i - 1)) --` return_partition A (i + 1)\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "using B_def"], ["proof (prove)\nusing this:\n  x \\<notin> (T ^^ (n - i - 1)) --` return_partition A (i + 1)\n  B = (\\<lambda>i. (T ^^ (n - i - 1)) --` return_partition A (i + 1))\n\ngoal (1 subgoal):\n 1. x \\<notin> B i", "by auto"], ["proof (state)\nthis:\n  x \\<notin> B i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x3 \\<in> B j \\<Longrightarrow> ?x3 \\<notin> B i\n\ngoal (1 subgoal):\n 1. B i \\<inter> B j = {}", "then"], ["proof (chain)\npicking this:\n  ?x3 \\<in> B j \\<Longrightarrow> ?x3 \\<notin> B i", "show \"B i \\<inter> B j = {}\""], ["proof (prove)\nusing this:\n  ?x3 \\<in> B j \\<Longrightarrow> ?x3 \\<notin> B i\n\ngoal (1 subgoal):\n 1. B i \\<inter> B j = {}", "by auto"], ["proof (state)\nthis:\n  B i \\<inter> B j = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i3 \\<in> {..<N}; ?j3 \\<in> {..<N}; ?i3 < ?j3\\<rbrakk>\n  \\<Longrightarrow> B ?i3 \\<inter> B ?j3 = {}\n\ngoal (1 subgoal):\n 1. disjoint_family_on B {..<N}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i3 \\<in> {..<N}; ?j3 \\<in> {..<N}; ?i3 < ?j3\\<rbrakk>\n  \\<Longrightarrow> B ?i3 \\<inter> B ?j3 = {}", "have \"\\<And>i j. i\\<in>{..<N} \\<Longrightarrow> j\\<in>{..<N} \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> B i \\<inter> B j = {}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i3 \\<in> {..<N}; ?j3 \\<in> {..<N}; ?i3 < ?j3\\<rbrakk>\n  \\<Longrightarrow> B ?i3 \\<inter> B ?j3 = {}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> {..<N}; j \\<in> {..<N}; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> B i \\<inter> B j = {}", "by (metis Int_commute linorder_neqE_nat)"], ["proof (state)\nthis:\n  \\<lbrakk>?i3 \\<in> {..<N}; ?j3 \\<in> {..<N}; ?i3 \\<noteq> ?j3\\<rbrakk>\n  \\<Longrightarrow> B ?i3 \\<inter> B ?j3 = {}\n\ngoal (1 subgoal):\n 1. disjoint_family_on B {..<N}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i3 \\<in> {..<N}; ?j3 \\<in> {..<N}; ?i3 \\<noteq> ?j3\\<rbrakk>\n  \\<Longrightarrow> B ?i3 \\<inter> B ?j3 = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i3 \\<in> {..<N}; ?j3 \\<in> {..<N}; ?i3 \\<noteq> ?j3\\<rbrakk>\n  \\<Longrightarrow> B ?i3 \\<inter> B ?j3 = {}\n\ngoal (1 subgoal):\n 1. disjoint_family_on B {..<N}", "unfolding disjoint_family_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i3 \\<in> {..<N}; ?j3 \\<in> {..<N}; ?i3 \\<noteq> ?j3\\<rbrakk>\n  \\<Longrightarrow> B ?i3 \\<inter> B ?j3 = {}\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>{..<N}.\n       \\<forall>n\\<in>{..<N}.\n          m \\<noteq> n \\<longrightarrow> B m \\<inter> B n = {}", "by auto"], ["proof (state)\nthis:\n  disjoint_family_on B {..<N}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disjoint_family_on B {..<N}\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have incl_B: \"B i \\<subseteq> (T^^n)--`A\" if \"i \\<in> {..<N}\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. B i \\<subseteq> (T ^^ n) --` A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B i \\<subseteq> (T ^^ n) --` A", "have \"n > i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < n", "using \\<open>n>N\\<close> that"], ["proof (prove)\nusing this:\n  N < n\n  i \\<in> {..<N}\n\ngoal (1 subgoal):\n 1. i < n", "by auto"], ["proof (state)\nthis:\n  i < n\n\ngoal (1 subgoal):\n 1. B i \\<subseteq> (T ^^ n) --` A", "have \"B i \\<subseteq> (T^^(n-i-1))--` (T^^(i+1))--` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B i \\<subseteq> (T ^^ (n - i - 1)) --` (T ^^ (i + 1)) --` A", "using B_def return_partition_def"], ["proof (prove)\nusing this:\n  B = (\\<lambda>i. (T ^^ (n - i - 1)) --` return_partition A (i + 1))\n  return_partition ?A ?k =\n  ?A \\<inter> (T ^^ ?k) --` ?A - (\\<Union>i\\<in>{0<..<?k}. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. B i \\<subseteq> (T ^^ (n - i - 1)) --` (T ^^ (i + 1)) --` A", "by auto"], ["proof (state)\nthis:\n  B i \\<subseteq> (T ^^ (n - i - 1)) --` (T ^^ (i + 1)) --` A\n\ngoal (1 subgoal):\n 1. B i \\<subseteq> (T ^^ n) --` A", "then"], ["proof (chain)\npicking this:\n  B i \\<subseteq> (T ^^ (n - i - 1)) --` (T ^^ (i + 1)) --` A", "show \"B i \\<subseteq> (T^^n)--`A\""], ["proof (prove)\nusing this:\n  B i \\<subseteq> (T ^^ (n - i - 1)) --` (T ^^ (i + 1)) --` A\n\ngoal (1 subgoal):\n 1. B i \\<subseteq> (T ^^ n) --` A", "using T_vrestr_composed(1)[OF A_meas, of \"n-i-1\", of \"i+1\"] \\<open>n>i\\<close>"], ["proof (prove)\nusing this:\n  B i \\<subseteq> (T ^^ (n - i - 1)) --` (T ^^ (i + 1)) --` A\n  (T ^^ (n - i - 1)) --` (T ^^ (i + 1)) --` A =\n  (T ^^ (n - i - 1 + (i + 1))) --` A\n  i < n\n\ngoal (1 subgoal):\n 1. B i \\<subseteq> (T ^^ n) --` A", "by auto"], ["proof (state)\nthis:\n  B i \\<subseteq> (T ^^ n) --` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i3 \\<in> {..<N} \\<Longrightarrow> B ?i3 \\<subseteq> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "define R where \"R = (T^^n)--`A - (\\<Union>i \\<in> {..<N}. B i)\""], ["proof (state)\nthis:\n  R = (T ^^ n) --` A - \\<Union> (B ` {..<N})\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have [measurable]: \"R \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> sets M", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) --` A - \\<Union> (B ` {..<N}) \\<in> sets M", "by measurable"], ["proof (state)\nthis:\n  R \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have dec_n: \"(T^^n)--`A = R \\<union> (\\<Union>i \\<in> {..<N}. B i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) --` A = R \\<union> \\<Union> (B ` {..<N})", "using R_def incl_B"], ["proof (prove)\nusing this:\n  R = (T ^^ n) --` A - \\<Union> (B ` {..<N})\n  ?i3 \\<in> {..<N} \\<Longrightarrow> B ?i3 \\<subseteq> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. (T ^^ n) --` A = R \\<union> \\<Union> (B ` {..<N})", "by blast"], ["proof (state)\nthis:\n  (T ^^ n) --` A = R \\<union> \\<Union> (B ` {..<N})\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have small_R: \"emeasure M R < e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "have \"R \\<inter> (\\<Union>i \\<in> {..<N}. B i) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<inter> \\<Union> (B ` {..<N}) = {}", "using R_def"], ["proof (prove)\nusing this:\n  R = (T ^^ n) --` A - \\<Union> (B ` {..<N})\n\ngoal (1 subgoal):\n 1. R \\<inter> \\<Union> (B ` {..<N}) = {}", "by blast"], ["proof (state)\nthis:\n  R \\<inter> \\<Union> (B ` {..<N}) = {}\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "then"], ["proof (chain)\npicking this:\n  R \\<inter> \\<Union> (B ` {..<N}) = {}", "have \"emeasure M ((T^^n)--`A) = emeasure M R + emeasure M (\\<Union>i \\<in> {..<N}. B i)\""], ["proof (prove)\nusing this:\n  R \\<inter> \\<Union> (B ` {..<N}) = {}\n\ngoal (1 subgoal):\n 1. emeasure M ((T ^^ n) --` A) =\n    emeasure M R + emeasure M (\\<Union> (B ` {..<N}))", "using plus_emeasure[of R, of M, of \"\\<Union>i \\<in> {..<N}. B i\"] dec_n"], ["proof (prove)\nusing this:\n  R \\<inter> \\<Union> (B ` {..<N}) = {}\n  \\<lbrakk>R \\<in> sets M; \\<Union> (B ` {..<N}) \\<in> sets M;\n   R \\<inter> \\<Union> (B ` {..<N}) = {}\\<rbrakk>\n  \\<Longrightarrow> emeasure M R + emeasure M (\\<Union> (B ` {..<N})) =\n                    emeasure M (R \\<union> \\<Union> (B ` {..<N}))\n  (T ^^ n) --` A = R \\<union> \\<Union> (B ` {..<N})\n\ngoal (1 subgoal):\n 1. emeasure M ((T ^^ n) --` A) =\n    emeasure M R + emeasure M (\\<Union> (B ` {..<N}))", "by auto"], ["proof (state)\nthis:\n  emeasure M ((T ^^ n) --` A) =\n  emeasure M R + emeasure M (\\<Union> (B ` {..<N}))\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "moreover"], ["proof (state)\nthis:\n  emeasure M ((T ^^ n) --` A) =\n  emeasure M R + emeasure M (\\<Union> (B ` {..<N}))\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "have \"emeasure M (\\<Union>i \\<in> {..<N}. B i) = (\\<Sum>i \\<in> {..<N}. emeasure M (B i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (\\<Union> (B ` {..<N})) = (\\<Sum>i<N. emeasure M (B i))", "by (intro disj_B sum_emeasure[symmetric], auto)"], ["proof (state)\nthis:\n  emeasure M (\\<Union> (B ` {..<N})) = (\\<Sum>i<N. emeasure M (B i))\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M ((T ^^ n) --` A) =\n  emeasure M R + emeasure M (\\<Union> (B ` {..<N}))\n  emeasure M (\\<Union> (B ` {..<N})) = (\\<Sum>i<N. emeasure M (B i))", "have \"emeasure M ((T^^n)--`A) = emeasure M R + (\\<Sum>i \\<in> {..<N}. emeasure M (B i))\""], ["proof (prove)\nusing this:\n  emeasure M ((T ^^ n) --` A) =\n  emeasure M R + emeasure M (\\<Union> (B ` {..<N}))\n  emeasure M (\\<Union> (B ` {..<N})) = (\\<Sum>i<N. emeasure M (B i))\n\ngoal (1 subgoal):\n 1. emeasure M ((T ^^ n) --` A) =\n    emeasure M R + (\\<Sum>i<N. emeasure M (B i))", "by simp"], ["proof (state)\nthis:\n  emeasure M ((T ^^ n) --` A) = emeasure M R + (\\<Sum>i<N. emeasure M (B i))\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "moreover"], ["proof (state)\nthis:\n  emeasure M ((T ^^ n) --` A) = emeasure M R + (\\<Sum>i<N. emeasure M (B i))\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "have \"emeasure M ((T^^n)--`A) = emeasure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M ((T ^^ n) --` A) = emeasure M A", "using T_vrestr_same_emeasure(2)[OF A_meas]"], ["proof (prove)\nusing this:\n  emeasure M ((T ^^ ?n) --` A) = emeasure M A\n\ngoal (1 subgoal):\n 1. emeasure M ((T ^^ n) --` A) = emeasure M A", "by simp"], ["proof (state)\nthis:\n  emeasure M ((T ^^ n) --` A) = emeasure M A\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "moreover"], ["proof (state)\nthis:\n  emeasure M ((T ^^ n) --` A) = emeasure M A\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "have \"\\<And>i. emeasure M (B i) = emeasure M (return_partition A (i+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. emeasure M (B i) = emeasure M (return_partition A (i + 1))", "using T_vrestr_same_emeasure(2) B_def return_partition_basics(1)[OF A_meas]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow>\n  emeasure M ((T ^^ ?n) --` ?A) = emeasure M ?A\n  B = (\\<lambda>i. (T ^^ (n - i - 1)) --` return_partition A (i + 1))\n  return_partition A ?n \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>i. emeasure M (B i) = emeasure M (return_partition A (i + 1))", "by simp"], ["proof (state)\nthis:\n  emeasure M (B ?i3) = emeasure M (return_partition A (?i3 + 1))\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M ((T ^^ n) --` A) = emeasure M R + (\\<Sum>i<N. emeasure M (B i))\n  emeasure M ((T ^^ n) --` A) = emeasure M A\n  emeasure M (B ?i3) = emeasure M (return_partition A (?i3 + 1))", "have a: \"emeasure M A = emeasure M R + (\\<Sum>i \\<in> {..<N}. emeasure M (return_partition A (i+1)))\""], ["proof (prove)\nusing this:\n  emeasure M ((T ^^ n) --` A) = emeasure M R + (\\<Sum>i<N. emeasure M (B i))\n  emeasure M ((T ^^ n) --` A) = emeasure M A\n  emeasure M (B ?i3) = emeasure M (return_partition A (?i3 + 1))\n\ngoal (1 subgoal):\n 1. emeasure M A =\n    emeasure M R + (\\<Sum>i<N. emeasure M (return_partition A (i + 1)))", "by simp"], ["proof (state)\nthis:\n  emeasure M A =\n  emeasure M R + (\\<Sum>i<N. emeasure M (return_partition A (i + 1)))\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "moreover"], ["proof (state)\nthis:\n  emeasure M A =\n  emeasure M R + (\\<Sum>i<N. emeasure M (return_partition A (i + 1)))\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "have b: \"(\\<Sum>i \\<in> {..<N}. emeasure M (return_partition A (i+1))) \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<N. emeasure M (return_partition A (i + 1))) \\<noteq>\n    \\<infinity>", "using fin"], ["proof (prove)\nusing this:\n  emeasure M A < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<N. emeasure M (return_partition A (i + 1))) \\<noteq>\n    \\<infinity>", "by (simp add: a less_top)"], ["proof (state)\nthis:\n  (\\<Sum>i<N. emeasure M (return_partition A (i + 1))) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M A =\n  emeasure M R + (\\<Sum>i<N. emeasure M (return_partition A (i + 1)))\n  (\\<Sum>i<N. emeasure M (return_partition A (i + 1))) \\<noteq> \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure M A =\n  emeasure M R + (\\<Sum>i<N. emeasure M (return_partition A (i + 1)))\n  (\\<Sum>i<N. emeasure M (return_partition A (i + 1))) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "using largeM fin b"], ["proof (prove)\nusing this:\n  emeasure M A =\n  emeasure M R + (\\<Sum>i<N. emeasure M (return_partition A (i + 1)))\n  (\\<Sum>i<N. emeasure M (return_partition A (i + 1))) \\<noteq> \\<infinity>\n  emeasure M A\n  < (\\<Sum>n<N. emeasure M (return_partition A (n + 1))) + ennreal e2\n  emeasure M A < \\<infinity>\n  (\\<Sum>i<N. emeasure M (return_partition A (i + 1))) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M R < ennreal e2", "by simp"], ["proof (state)\nthis:\n  emeasure M R < ennreal e2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure M R < ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have \"K (Suc k) n \\<subseteq> R \\<union> (\\<Union>i<N. K k (n-i-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K (Suc k) n \\<subseteq> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> K (Suc k) n \\<Longrightarrow>\n       x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> K (Suc k) n \\<Longrightarrow>\n       x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "assume a: \"x \\<in> K (Suc k) n\""], ["proof (state)\nthis:\n  x \\<in> K (Suc k) n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> K (Suc k) n \\<Longrightarrow>\n       x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "show \"x \\<in> R \\<union> (\\<Union>i<N. K k (n-i-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "assume \"\\<not>(x \\<in> R)\""], ["proof (state)\nthis:\n  x \\<notin> R\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "have \"x \\<in> (T^^n)--`A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (T ^^ n) --` A", "using a K_def"], ["proof (prove)\nusing this:\n  x \\<in> K (Suc k) n\n  K = (\\<lambda>p n. {x \\<in> (T ^^ n) --` A. local_time A n x < p})\n\ngoal (1 subgoal):\n 1. x \\<in> (T ^^ n) --` A", "by simp"], ["proof (state)\nthis:\n  x \\<in> (T ^^ n) --` A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  x \\<in> (T ^^ n) --` A", "have \"x\\<in> (\\<Union>i \\<in> {..<N}. B i)\""], ["proof (prove)\nusing this:\n  x \\<in> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union> (B ` {..<N})", "using dec_n \\<open>\\<not>(x \\<in> R)\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> (T ^^ n) --` A\n  (T ^^ n) --` A = R \\<union> \\<Union> (B ` {..<N})\n  x \\<notin> R\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union> (B ` {..<N})", "by simp"], ["proof (state)\nthis:\n  x \\<in> \\<Union> (B ` {..<N})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union> (B ` {..<N})", "obtain i where \"i\\<in>{..<N}\" \"x \\<in> B i\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> (B ` {..<N})\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> {..<N}; x \\<in> B i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> {..<N}\n  x \\<in> B i\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  i \\<in> {..<N}\n  x \\<in> B i", "have \"n>i\""], ["proof (prove)\nusing this:\n  i \\<in> {..<N}\n  x \\<in> B i\n\ngoal (1 subgoal):\n 1. i < n", "using \\<open>n>N\\<close>"], ["proof (prove)\nusing this:\n  i \\<in> {..<N}\n  x \\<in> B i\n  N < n\n\ngoal (1 subgoal):\n 1. i < n", "by auto"], ["proof (state)\nthis:\n  i < n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  i < n", "have \"(T^^(n-i-1)) x \\<in> return_partition A (i+1)\""], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. (T ^^ (n - i - 1)) x \\<in> return_partition A (i + 1)", "using B_def \\<open>x \\<in> B i\\<close>"], ["proof (prove)\nusing this:\n  i < n\n  B = (\\<lambda>i. (T ^^ (n - i - 1)) --` return_partition A (i + 1))\n  x \\<in> B i\n\ngoal (1 subgoal):\n 1. (T ^^ (n - i - 1)) x \\<in> return_partition A (i + 1)", "by auto"], ["proof (state)\nthis:\n  (T ^^ (n - i - 1)) x \\<in> return_partition A (i + 1)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  (T ^^ (n - i - 1)) x \\<in> return_partition A (i + 1)", "have i: \"(T^^(n-i-1)) x \\<in> A\""], ["proof (prove)\nusing this:\n  (T ^^ (n - i - 1)) x \\<in> return_partition A (i + 1)\n\ngoal (1 subgoal):\n 1. (T ^^ (n - i - 1)) x \\<in> A", "using return_partition_def"], ["proof (prove)\nusing this:\n  (T ^^ (n - i - 1)) x \\<in> return_partition A (i + 1)\n  return_partition ?A ?k =\n  ?A \\<inter> (T ^^ ?k) --` ?A - (\\<Union>i\\<in>{0<..<?k}. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. (T ^^ (n - i - 1)) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  (T ^^ (n - i - 1)) x \\<in> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  (T ^^ (n - i - 1)) x \\<in> A", "have \"indicator A ((T^^(n-i-1)) x) = (1::nat)\""], ["proof (prove)\nusing this:\n  (T ^^ (n - i - 1)) x \\<in> A\n\ngoal (1 subgoal):\n 1. indicator A ((T ^^ (n - i - 1)) x) = 1", "by auto"], ["proof (state)\nthis:\n  indicator A ((T ^^ (n - i - 1)) x) = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  indicator A ((T ^^ (n - i - 1)) x) = 1", "have \"local_time A (n-i) x = local_time A (n-i-1) x + 1\""], ["proof (prove)\nusing this:\n  indicator A ((T ^^ (n - i - 1)) x) = 1\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x = local_time A (n - i - 1) x + 1", "by (metis Suc_diff_Suc Suc_eq_plus1 diff_diff_add local_time_Suc[of A, of \"n-i-1\"] \\<open>n>i\\<close>)"], ["proof (state)\nthis:\n  local_time A (n - i) x = local_time A (n - i - 1) x + 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  local_time A (n - i) x = local_time A (n - i - 1) x + 1", "have \"local_time A (n-i) x > local_time A (n-i-1) x\""], ["proof (prove)\nusing this:\n  local_time A (n - i) x = local_time A (n - i - 1) x + 1\n\ngoal (1 subgoal):\n 1. local_time A (n - i - 1) x < local_time A (n - i) x", "by simp"], ["proof (state)\nthis:\n  local_time A (n - i - 1) x < local_time A (n - i) x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "moreover"], ["proof (state)\nthis:\n  local_time A (n - i - 1) x < local_time A (n - i) x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "have \"local_time A n x \\<ge> local_time A (n-i) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time A n x", "using local_time_incseq"], ["proof (prove)\nusing this:\n  incseq (\\<lambda>n. local_time ?A n ?x)\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time A n x", "by (metis \\<open>i < n\\<close> le_add_diff_inverse2 less_or_eq_imp_le local_time_cocycle le_iff_add)"], ["proof (state)\nthis:\n  local_time A (n - i) x \\<le> local_time A n x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "ultimately"], ["proof (chain)\npicking this:\n  local_time A (n - i - 1) x < local_time A (n - i) x\n  local_time A (n - i) x \\<le> local_time A n x", "have \"local_time A n x > local_time A (n-i-1) x\""], ["proof (prove)\nusing this:\n  local_time A (n - i - 1) x < local_time A (n - i) x\n  local_time A (n - i) x \\<le> local_time A n x\n\ngoal (1 subgoal):\n 1. local_time A (n - i - 1) x < local_time A n x", "by simp"], ["proof (state)\nthis:\n  local_time A (n - i - 1) x < local_time A n x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "moreover"], ["proof (state)\nthis:\n  local_time A (n - i - 1) x < local_time A n x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "have \"local_time A n x < Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A n x < Suc k", "using a K_def"], ["proof (prove)\nusing this:\n  x \\<in> K (Suc k) n\n  K = (\\<lambda>p n. {x \\<in> (T ^^ n) --` A. local_time A n x < p})\n\ngoal (1 subgoal):\n 1. local_time A n x < Suc k", "by simp"], ["proof (state)\nthis:\n  local_time A n x < Suc k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "ultimately"], ["proof (chain)\npicking this:\n  local_time A (n - i - 1) x < local_time A n x\n  local_time A n x < Suc k", "have *: \"local_time A (n-i-1) x < k\""], ["proof (prove)\nusing this:\n  local_time A (n - i - 1) x < local_time A n x\n  local_time A n x < Suc k\n\ngoal (1 subgoal):\n 1. local_time A (n - i - 1) x < k", "by simp"], ["proof (state)\nthis:\n  local_time A (n - i - 1) x < k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "have \"x \\<in> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> space M", "using \\<open>x \\<in> (T^^n)--`A\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. x \\<in> space M", "by auto"], ["proof (state)\nthis:\n  x \\<in> space M\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  x \\<in> space M", "have \"x \\<in> (T^^(n-i-1))--`A\""], ["proof (prove)\nusing this:\n  x \\<in> space M\n\ngoal (1 subgoal):\n 1. x \\<in> (T ^^ (n - i - 1)) --` A", "using i A_meas vimage_restr_def"], ["proof (prove)\nusing this:\n  x \\<in> space M\n  (T ^^ (n - i - 1)) x \\<in> A\n  A \\<in> sets M\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. x \\<in> (T ^^ (n - i - 1)) --` A", "by (metis IntI sets.Int_space_eq2 vimageI)"], ["proof (state)\nthis:\n  x \\<in> (T ^^ (n - i - 1)) --` A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  x \\<in> (T ^^ (n - i - 1)) --` A", "have \"x \\<in> K k (n-i-1)\""], ["proof (prove)\nusing this:\n  x \\<in> (T ^^ (n - i - 1)) --` A\n\ngoal (1 subgoal):\n 1. x \\<in> K k (n - i - 1)", "using * K_def"], ["proof (prove)\nusing this:\n  x \\<in> (T ^^ (n - i - 1)) --` A\n  local_time A (n - i - 1) x < k\n  K = (\\<lambda>p n. {x \\<in> (T ^^ n) --` A. local_time A n x < p})\n\ngoal (1 subgoal):\n 1. x \\<in> K k (n - i - 1)", "by blast"], ["proof (state)\nthis:\n  x \\<in> K k (n - i - 1)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "then"], ["proof (chain)\npicking this:\n  x \\<in> K k (n - i - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> K k (n - i - 1)\n\ngoal (1 subgoal):\n 1. x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "using \\<open>i\\<in>{..<N}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> K k (n - i - 1)\n  i \\<in> {..<N}\n\ngoal (1 subgoal):\n 1. x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "by auto"], ["proof (state)\nthis:\n  x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> R \\<Longrightarrow>\n    x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "qed (simp)"], ["proof (state)\nthis:\n  x \\<in> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  K (Suc k) n \\<subseteq> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "then"], ["proof (chain)\npicking this:\n  K (Suc k) n \\<subseteq> R \\<union> (\\<Union>i<N. K k (n - i - 1))", "have \"emeasure M (K (Suc k) n) \\<le> emeasure M (R \\<union> (\\<Union>i<N. K k (n-i-1)))\""], ["proof (prove)\nusing this:\n  K (Suc k) n \\<subseteq> R \\<union> (\\<Union>i<N. K k (n - i - 1))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> emeasure M (R \\<union> (\\<Union>i<N. K k (n - i - 1)))", "by (intro emeasure_mono, auto)"], ["proof (state)\nthis:\n  emeasure M (K (Suc k) n)\n  \\<le> emeasure M (R \\<union> (\\<Union>i<N. K k (n - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "also"], ["proof (state)\nthis:\n  emeasure M (K (Suc k) n)\n  \\<le> emeasure M (R \\<union> (\\<Union>i<N. K k (n - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have \"... \\<le> emeasure M R + emeasure M (\\<Union>i<N. K k (n-i-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (R \\<union> (\\<Union>i<N. K k (n - i - 1)))\n    \\<le> emeasure M R + emeasure M (\\<Union>i<N. K k (n - i - 1))", "by (rule emeasure_subadditive, auto)"], ["proof (state)\nthis:\n  emeasure M (R \\<union> (\\<Union>i<N. K k (n - i - 1)))\n  \\<le> emeasure M R + emeasure M (\\<Union>i<N. K k (n - i - 1))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "also"], ["proof (state)\nthis:\n  emeasure M (R \\<union> (\\<Union>i<N. K k (n - i - 1)))\n  \\<le> emeasure M R + emeasure M (\\<Union>i<N. K k (n - i - 1))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have \"... \\<le> emeasure M R + (\\<Sum>i<N. emeasure M (K k (n-i-1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M R + emeasure M (\\<Union>i<N. K k (n - i - 1))\n    \\<le> emeasure M R + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "by (metis add_left_mono image_subset_iff emeasure_subadditive_finite[where ?A = \"\\<lambda>i. K k (n-i-1)\" and ?I = \"{..<N}\", OF finite_lessThan[of N]] K_meas)"], ["proof (state)\nthis:\n  emeasure M R + emeasure M (\\<Union>i<N. K k (n - i - 1))\n  \\<le> emeasure M R + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "also"], ["proof (state)\nthis:\n  emeasure M R + emeasure M (\\<Union>i<N. K k (n - i - 1))\n  \\<le> emeasure M R + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "have \"... \\<le> e2 + (\\<Sum>i<N. emeasure M (K k (n-i-1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M R + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "using small_R"], ["proof (prove)\nusing this:\n  emeasure M R < ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M R + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "by (auto intro!: add_right_mono)"], ["proof (state)\nthis:\n  emeasure M R + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n  \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "finally"], ["proof (chain)\npicking this:\n  emeasure M (K (Suc k) n)\n  \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "show \"emeasure M (K (Suc k) n) \\<le> e2 + (\\<Sum>i<N. emeasure M (K k (n-i-1)))\""], ["proof (prove)\nusing this:\n  emeasure M (K (Suc k) n)\n  \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "."], ["proof (state)\nthis:\n  emeasure M (K (Suc k) n)\n  \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N < ?n3 \\<Longrightarrow>\n  emeasure M (K (Suc k) ?n3)\n  \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (?n3 - i - 1)))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have \"(\\<lambda>n. (\\<Sum>i\\<in>{..<N}. emeasure M (K k (n-i-1)))) \\<longlonglongrightarrow> (\\<Sum>i\\<in>{..<N}. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<N. emeasure M (K k (n - i - 1)))\n    \\<longlonglongrightarrow> (\\<Sum>i<N. 0)", "apply (intro tendsto_intros seq_offset_neg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<N} \\<Longrightarrow>\n       (\\<lambda>a. emeasure M (K k a)) \\<longlonglongrightarrow> 0", "using Suc.IH K_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k})\n  \\<longlonglongrightarrow> 0\n  K = (\\<lambda>p n. {x \\<in> (T ^^ n) --` A. local_time A n x < p})\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..<N} \\<Longrightarrow>\n       (\\<lambda>a. emeasure M (K k a)) \\<longlonglongrightarrow> 0", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<N. emeasure M (K k (n - i - 1)))\n  \\<longlonglongrightarrow> (\\<Sum>i<N. 0)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<Sum>i<N. emeasure M (K k (n - i - 1)))\n  \\<longlonglongrightarrow> (\\<Sum>i<N. 0)", "have \"eventually (\\<lambda>n. (\\<Sum>i\\<in>{..<N}. emeasure M (K k (n-i-1))) < e2) sequentially\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>i<N. emeasure M (K k (n - i - 1)))\n  \\<longlonglongrightarrow> (\\<Sum>i<N. 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>i<N. emeasure M (K k (n - i - 1))) < ennreal e2", "using \\<open>e2 > 0\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>i<N. emeasure M (K k (n - i - 1)))\n  \\<longlonglongrightarrow> (\\<Sum>i<N. 0)\n  0 < e2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>i<N. emeasure M (K k (n - i - 1))) < ennreal e2", "by (simp add: order_tendsto_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>i<N. emeasure M (K k (n - i - 1))) < ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>i<N. emeasure M (K k (n - i - 1))) < ennreal e2", "obtain N2 where N2bound: \"\\<And>n. n > N2 \\<Longrightarrow> (\\<Sum>i\\<in>{..<N}. emeasure M (K k (n-i-1))) < e2\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>i<N. emeasure M (K k (n - i - 1))) < ennreal e2\n\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        (\\<And>n.\n            N2 < n \\<Longrightarrow>\n            (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n            < ennreal e2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson eventually_at_top_dense)"], ["proof (state)\nthis:\n  N2 < ?n3 \\<Longrightarrow>\n  (\\<Sum>i<N. emeasure M (K k (?n3 - i - 1))) < ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "define N3 where \"N3 = max N N2\""], ["proof (state)\nthis:\n  N3 = max N N2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "have \"emeasure M (K (Suc k) n) < e\" if \"n > N3\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "have \"n>N2\" \"n > N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N2 < n &&& N < n", "using N3_def that"], ["proof (prove)\nusing this:\n  N3 = max N N2\n  N3 < n\n\ngoal (1 subgoal):\n 1. N2 < n &&& N < n", "by auto"], ["proof (state)\nthis:\n  N2 < n\n  N < n\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "then"], ["proof (chain)\npicking this:\n  N2 < n\n  N < n", "have \"emeasure M (K (Suc k) n) \\<le> ennreal e2 + (\\<Sum>i\\<in>{..<N}. emeasure M (K k (n-i-1)))\""], ["proof (prove)\nusing this:\n  N2 < n\n  N < n\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "using upper"], ["proof (prove)\nusing this:\n  N2 < n\n  N < n\n  N < ?n3 \\<Longrightarrow>\n  emeasure M (K (Suc k) ?n3)\n  \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (?n3 - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n)\n    \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))", "by simp"], ["proof (state)\nthis:\n  emeasure M (K (Suc k) n)\n  \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "also"], ["proof (state)\nthis:\n  emeasure M (K (Suc k) n)\n  \\<le> ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "have \"... \\<le> ennreal e2 + ennreal e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n    \\<le> ennreal e2 + ennreal e2", "using N2bound[OF \\<open>n > N2\\<close>] less_imp_le"], ["proof (prove)\nusing this:\n  (\\<Sum>i<N. emeasure M (K k (n - i - 1))) < ennreal e2\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n    \\<le> ennreal e2 + ennreal e2", "by auto"], ["proof (state)\nthis:\n  ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n  \\<le> ennreal e2 + ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "also"], ["proof (state)\nthis:\n  ennreal e2 + (\\<Sum>i<N. emeasure M (K k (n - i - 1)))\n  \\<le> ennreal e2 + ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "have \"... < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal e2 + ennreal e2 < ennreal e", "using e2_def \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  e2 = e / 3\n  0 < e\n\ngoal (1 subgoal):\n 1. ennreal e2 + ennreal e2 < ennreal e", "by (auto simp add: ennreal_plus[symmetric] simp del: ennreal_plus intro!: ennreal_lessI)"], ["proof (state)\nthis:\n  ennreal e2 + ennreal e2 < ennreal e\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M (K (Suc k) n) \\<le> ennreal e2 + ennreal e2\n  ennreal e2 + ennreal e2 < ennreal e", "show \"emeasure M (K (Suc k) n) < e\""], ["proof (prove)\nusing this:\n  emeasure M (K (Suc k) n) \\<le> ennreal e2 + ennreal e2\n  ennreal e2 + ennreal e2 < ennreal e\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "using le_less_trans"], ["proof (prove)\nusing this:\n  emeasure M (K (Suc k) n) \\<le> ennreal e2 + ennreal e2\n  ennreal e2 + ennreal e2 < ennreal e\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. emeasure M (K (Suc k) n) < ennreal e", "by blast"], ["proof (state)\nthis:\n  emeasure M (K (Suc k) n) < ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N3 < ?n3 \\<Longrightarrow> emeasure M (K (Suc k) ?n3) < ennreal e\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  N3 < ?n3 \\<Longrightarrow> emeasure M (K (Suc k) ?n3) < ennreal e", "show \"\\<forall>\\<^sub>F x in sequentially. emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k} < ennreal e\""], ["proof (prove)\nusing this:\n  N3 < ?n3 \\<Longrightarrow> emeasure M (K (Suc k) ?n3) < ennreal e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n       < ennreal e", "unfolding K_def"], ["proof (prove)\nusing this:\n  N3 < ?n3 \\<Longrightarrow>\n  emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time A ?n3 x < Suc k}\n  < ennreal e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n       < ennreal e", "by (auto simp: eventually_at_top_dense intro!: exI[of _ N3])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     emeasure M {xa \\<in> (T ^^ x) --` A. local_time A x xa < Suc k}\n     < ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < Suc k})\n  \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We deduce that local times to a set $B$ also tend to infinity on $T^{-n}A$ if $B$ is related\nto $A$, i.e., if points in $A$ have some iterate in $B$.\nThis is clearly a necessary condition for the lemmas to hold: otherwise, points of $A$\nthat never visit $B$ have a local time equal to $B$ equal to $0$, and so do all their preimages.\n\nThe lemmas are readily reduced to the previous one on the local time to $A$, since if one visits\n$A$ then one visits $B$ in finite time by assumption (uniformly bounded in the first lemma,\nuniformly bounded on a set of large measure in the second lemma).\\<close>"], ["", "lemma (in conservative_mpt) local_time_unbounded2:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and fin: \"emeasure M A < \\<infinity>\"\n      and incl: \"A \\<subseteq> (T^^i)--`B\"\n  shows \"(\\<lambda>n. emeasure M {x \\<in> (T^^n)--`A. local_time B n x < k}) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have \"emeasure M {x \\<in> (T^^n)--`A. local_time B n x < k} \\<le> emeasure M {x \\<in> (T^^n)--`A. local_time A n x < k + i}\"\n    if \"n > i\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n    \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n    \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}", "have \"local_time A n x \\<le> local_time B n x + i\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A n x \\<le> local_time B n x + i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local_time A n x \\<le> local_time B n x + i", "have \"local_time B n x \\<ge> local_time A (n-i) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "define KA where \"KA = {t \\<in> {0..<n-i}. (T^^t) x \\<in> A}\""], ["proof (state)\nthis:\n  KA = {t \\<in> {0..<n - i}. (T ^^ t) x \\<in> A}\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "define KB where \"KB = {t \\<in> {0..<n}. (T^^t) x \\<in> B}\""], ["proof (state)\nthis:\n  KB = {t \\<in> {0..<n}. (T ^^ t) x \\<in> B}\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "then"], ["proof (chain)\npicking this:\n  KB = {t \\<in> {0..<n}. (T ^^ t) x \\<in> B}", "have \"KB \\<subseteq> {0..<n}\""], ["proof (prove)\nusing this:\n  KB = {t \\<in> {0..<n}. (T ^^ t) x \\<in> B}\n\ngoal (1 subgoal):\n 1. KB \\<subseteq> {0..<n}", "by auto"], ["proof (state)\nthis:\n  KB \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "then"], ["proof (chain)\npicking this:\n  KB \\<subseteq> {0..<n}", "have \"finite KB\""], ["proof (prove)\nusing this:\n  KB \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. finite KB", "using finite_lessThan[of n] finite_subset"], ["proof (prove)\nusing this:\n  KB \\<subseteq> {0..<n}\n  finite {..<n}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite KB", "by auto"], ["proof (state)\nthis:\n  finite KB\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "let ?g = \"\\<lambda>t. t + i\""], ["proof (state)\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "have \"\\<And>t. t \\<in> KA \\<Longrightarrow> ?g t \\<in> KB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "assume \"t \\<in> KA\""], ["proof (state)\nthis:\n  t \\<in> KA\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "then"], ["proof (chain)\npicking this:\n  t \\<in> KA", "have \"(T^^t) x \\<in> A\""], ["proof (prove)\nusing this:\n  t \\<in> KA\n\ngoal (1 subgoal):\n 1. (T ^^ t) x \\<in> A", "using KA_def"], ["proof (prove)\nusing this:\n  t \\<in> KA\n  KA = {t \\<in> {0..<n - i}. (T ^^ t) x \\<in> A}\n\ngoal (1 subgoal):\n 1. (T ^^ t) x \\<in> A", "by simp"], ["proof (state)\nthis:\n  (T ^^ t) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "then"], ["proof (chain)\npicking this:\n  (T ^^ t) x \\<in> A", "have \"(T^^i) ((T^^t) x) \\<in> B\""], ["proof (prove)\nusing this:\n  (T ^^ t) x \\<in> A\n\ngoal (1 subgoal):\n 1. (T ^^ i) ((T ^^ t) x) \\<in> B", "using incl"], ["proof (prove)\nusing this:\n  (T ^^ t) x \\<in> A\n  A \\<subseteq> (T ^^ i) --` B\n\ngoal (1 subgoal):\n 1. (T ^^ i) ((T ^^ t) x) \\<in> B", "by auto"], ["proof (state)\nthis:\n  (T ^^ i) ((T ^^ t) x) \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "then"], ["proof (chain)\npicking this:\n  (T ^^ i) ((T ^^ t) x) \\<in> B", "have \"(T^^(t+i)) x \\<in> B\""], ["proof (prove)\nusing this:\n  (T ^^ i) ((T ^^ t) x) \\<in> B\n\ngoal (1 subgoal):\n 1. (T ^^ (t + i)) x \\<in> B", "by (simp add: funpow_add add.commute)"], ["proof (state)\nthis:\n  (T ^^ (t + i)) x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "moreover"], ["proof (state)\nthis:\n  (T ^^ (t + i)) x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "have \"t+i < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t + i < n", "using \\<open>t \\<in> KA\\<close> KA_def \\<open>n > i\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> KA\n  KA = {t \\<in> {0..<n - i}. (T ^^ t) x \\<in> A}\n  i < n\n\ngoal (1 subgoal):\n 1. t + i < n", "by auto"], ["proof (state)\nthis:\n  t + i < n\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> KA \\<Longrightarrow> t + i \\<in> KB", "ultimately"], ["proof (chain)\npicking this:\n  (T ^^ (t + i)) x \\<in> B\n  t + i < n", "show \"?g t \\<in> KB\""], ["proof (prove)\nusing this:\n  (T ^^ (t + i)) x \\<in> B\n  t + i < n\n\ngoal (1 subgoal):\n 1. t + i \\<in> KB", "unfolding KB_def"], ["proof (prove)\nusing this:\n  (T ^^ (t + i)) x \\<in> B\n  t + i < n\n\ngoal (1 subgoal):\n 1. t + i \\<in> {t \\<in> {0..<n}. (T ^^ t) x \\<in> B}", "by simp"], ["proof (state)\nthis:\n  t + i \\<in> KB\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?t3 \\<in> KA \\<Longrightarrow> ?t3 + i \\<in> KB\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "then"], ["proof (chain)\npicking this:\n  ?t3 \\<in> KA \\<Longrightarrow> ?t3 + i \\<in> KB", "have \"?g`KA \\<subseteq> KB\""], ["proof (prove)\nusing this:\n  ?t3 \\<in> KA \\<Longrightarrow> ?t3 + i \\<in> KB\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. t + i) ` KA \\<subseteq> KB", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>t. t + i) ` KA \\<subseteq> KB\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>t. t + i) ` KA \\<subseteq> KB\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "have \"inj_on ?g KA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>t. t + i) KA", "by simp"], ["proof (state)\nthis:\n  inj_on (\\<lambda>t. t + i) KA\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>t. t + i) ` KA \\<subseteq> KB\n  inj_on (\\<lambda>t. t + i) KA", "have \"card KB \\<ge> card KA\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. t + i) ` KA \\<subseteq> KB\n  inj_on (\\<lambda>t. t + i) KA\n\ngoal (1 subgoal):\n 1. card KA \\<le> card KB", "using card_inj_on_le[where ?f = \"?g\" and ?A = KA and ?B = KB] \\<open>finite KB\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>t. t + i) ` KA \\<subseteq> KB\n  inj_on (\\<lambda>t. t + i) KA\n  \\<lbrakk>inj_on (\\<lambda>t. t + i) KA;\n   (\\<lambda>t. t + i) ` KA \\<subseteq> KB; finite KB\\<rbrakk>\n  \\<Longrightarrow> card KA \\<le> card KB\n  finite KB\n\ngoal (1 subgoal):\n 1. card KA \\<le> card KB", "by simp"], ["proof (state)\nthis:\n  card KA \\<le> card KB\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "then"], ["proof (chain)\npicking this:\n  card KA \\<le> card KB", "show ?thesis"], ["proof (prove)\nusing this:\n  card KA \\<le> card KB\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "using KA_def KB_def local_time_def"], ["proof (prove)\nusing this:\n  card KA \\<le> card KB\n  KA = {t \\<in> {0..<n - i}. (T ^^ t) x \\<in> A}\n  KB = {t \\<in> {0..<n}. (T ^^ t) x \\<in> B}\n  local_time ?A ?n ?x = card {i \\<in> {..<?n}. (T ^^ i) ?x \\<in> ?A}\n\ngoal (1 subgoal):\n 1. local_time A (n - i) x \\<le> local_time B n x", "by simp"], ["proof (state)\nthis:\n  local_time A (n - i) x \\<le> local_time B n x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local_time A (n - i) x \\<le> local_time B n x\n\ngoal (1 subgoal):\n 1. local_time A n x \\<le> local_time B n x + i", "moreover"], ["proof (state)\nthis:\n  local_time A (n - i) x \\<le> local_time B n x\n\ngoal (1 subgoal):\n 1. local_time A n x \\<le> local_time B n x + i", "have \"i \\<ge> local_time A i ((T^^(n-i))x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_time A i ((T ^^ (n - i)) x) \\<le> i", "using local_time_bound"], ["proof (prove)\nusing this:\n  local_time ?A ?n ?x \\<le> ?n\n\ngoal (1 subgoal):\n 1. local_time A i ((T ^^ (n - i)) x) \\<le> i", "by auto"], ["proof (state)\nthis:\n  local_time A i ((T ^^ (n - i)) x) \\<le> i\n\ngoal (1 subgoal):\n 1. local_time A n x \\<le> local_time B n x + i", "ultimately"], ["proof (chain)\npicking this:\n  local_time A (n - i) x \\<le> local_time B n x\n  local_time A i ((T ^^ (n - i)) x) \\<le> i", "show \"local_time B n x + i \\<ge> local_time A n x\""], ["proof (prove)\nusing this:\n  local_time A (n - i) x \\<le> local_time B n x\n  local_time A i ((T ^^ (n - i)) x) \\<le> i\n\ngoal (1 subgoal):\n 1. local_time A n x \\<le> local_time B n x + i", "using local_time_cocycle[where ?n = \"n-i\" and ?m = i and ?x = x and ?A = A] \\<open>n>i\\<close>"], ["proof (prove)\nusing this:\n  local_time A (n - i) x \\<le> local_time B n x\n  local_time A i ((T ^^ (n - i)) x) \\<le> i\n  local_time A (n - i) x + local_time A i ((T ^^ (n - i)) x) =\n  local_time A (n - i + i) x\n  i < n\n\ngoal (1 subgoal):\n 1. local_time A n x \\<le> local_time B n x + i", "by auto"], ["proof (state)\nthis:\n  local_time A n x \\<le> local_time B n x + i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local_time A n ?x3 \\<le> local_time B n ?x3 + i\n\ngoal (1 subgoal):\n 1. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n    \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}", "then"], ["proof (chain)\npicking this:\n  local_time A n ?x3 \\<le> local_time B n ?x3 + i", "have \"local_time B n x < k \\<Longrightarrow> local_time A n x < k + i\" for x"], ["proof (prove)\nusing this:\n  local_time A n ?x3 \\<le> local_time B n ?x3 + i\n\ngoal (1 subgoal):\n 1. local_time B n x < k \\<Longrightarrow> local_time A n x < k + i", "by (meson add_le_cancel_right le_trans not_less)"], ["proof (state)\nthis:\n  local_time B n ?x3 < k \\<Longrightarrow> local_time A n ?x3 < k + i\n\ngoal (1 subgoal):\n 1. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n    \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}", "then"], ["proof (chain)\npicking this:\n  local_time B n ?x3 < k \\<Longrightarrow> local_time A n ?x3 < k + i", "show ?thesis"], ["proof (prove)\nusing this:\n  local_time B n ?x3 < k \\<Longrightarrow> local_time A n ?x3 < k + i\n\ngoal (1 subgoal):\n 1. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n    \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}", "by (intro emeasure_mono, auto)"], ["proof (state)\nthis:\n  emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n  \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i < ?n3 \\<Longrightarrow>\n  emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time B ?n3 x < k}\n  \\<le> emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time A ?n3 x < k + i}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  i < ?n3 \\<Longrightarrow>\n  emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time B ?n3 x < k}\n  \\<le> emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time A ?n3 x < k + i}", "have \"eventually (\\<lambda>n. emeasure M {x \\<in> (T^^n)--`A. local_time B n x < k}\n                \\<le> emeasure M {x \\<in> (T^^n)--`A. local_time A n x < k + i}) sequentially\""], ["proof (prove)\nusing this:\n  i < ?n3 \\<Longrightarrow>\n  emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time B ?n3 x < k}\n  \\<le> emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time A ?n3 x < k + i}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n       \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}", "using eventually_at_top_dense"], ["proof (prove)\nusing this:\n  i < ?n3 \\<Longrightarrow>\n  emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time B ?n3 x < k}\n  \\<le> emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time A ?n3 x < k + i}\n  eventually ?P at_top = (\\<exists>N. \\<forall>n>N. ?P n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n       \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k}\n     \\<le> emeasure M {x \\<in> (T ^^ n) --` A. local_time A n x < k + i}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "from tendsto_sandwich[OF _ this tendsto_const local_time_unbounded1[OF A_meas fin, of \"k+i\"]]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     0 \\<le> emeasure M\n              {x \\<in> (T ^^ n) --` A.\n               local_time B n x < k} \\<Longrightarrow>\n  (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n  \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     0 \\<le> emeasure M\n              {x \\<in> (T ^^ n) --` A.\n               local_time B n x < k} \\<Longrightarrow>\n  (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n  \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in conservative_mpt) local_time_unbounded3:\n  assumes A_meas[measurable]: \"A \\<in> sets M\"\n      and B_meas[measurable]: \"B \\<in> sets M\"\n      and fin: \"emeasure M A < \\<infinity>\"\n      and incl: \"A - (\\<Union>i. (T^^i)--`B) \\<in> null_sets M\"\n  shows \"(\\<lambda>n. emeasure M {x \\<in> (T^^n)--`A. local_time B n x < k}) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "define R where \"R = A - (\\<Union>i. (T^^i)--`B)\""], ["proof (state)\nthis:\n  R = A - (\\<Union>i. (T ^^ i) --` B)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have R_meas[measurable]: \"R \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> sets M", "by (simp add: A_meas B_meas T_vrestr_meas(2)[OF B_meas] R_def countable_Un_Int(1) sets.Diff)"], ["proof (state)\nthis:\n  R \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have \"emeasure M R = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M R = 0", "using incl R_def"], ["proof (prove)\nusing this:\n  A - (\\<Union>i. (T ^^ i) --` B) \\<in> null_sets M\n  R = A - (\\<Union>i. (T ^^ i) --` B)\n\ngoal (1 subgoal):\n 1. emeasure M R = 0", "by auto"], ["proof (state)\nthis:\n  emeasure M R = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "define A2 where \"A2 = A - R\""], ["proof (state)\nthis:\n  A2 = A - R\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have A2_meas [measurable]: \"A2 \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A2 \\<in> sets M", "unfolding A2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A - R \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  A2 \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have meq: \"emeasure M A2 = emeasure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M A2 = emeasure M A", "using \\<open>emeasure M R = 0\\<close>"], ["proof (prove)\nusing this:\n  emeasure M R = 0\n\ngoal (1 subgoal):\n 1. emeasure M A2 = emeasure M A", "unfolding A2_def"], ["proof (prove)\nusing this:\n  emeasure M R = 0\n\ngoal (1 subgoal):\n 1. emeasure M (A - R) = emeasure M A", "by (subst emeasure_Diff) (auto simp: R_def)"], ["proof (state)\nthis:\n  emeasure M A2 = emeasure M A\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  emeasure M A2 = emeasure M A", "have A2_fin: \"emeasure M A2 < \\<infinity>\""], ["proof (prove)\nusing this:\n  emeasure M A2 = emeasure M A\n\ngoal (1 subgoal):\n 1. emeasure M A2 < \\<infinity>", "using fin"], ["proof (prove)\nusing this:\n  emeasure M A2 = emeasure M A\n  emeasure M A < \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M A2 < \\<infinity>", "by auto"], ["proof (state)\nthis:\n  emeasure M A2 < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "define K where \"K = (\\<lambda>N. A2 \\<inter> (\\<Union>i<N. (T^^i)--`B))\""], ["proof (state)\nthis:\n  K = (\\<lambda>N. A2 \\<inter> (\\<Union>i<N. (T ^^ i) --` B))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have K_meas [measurable]: \"K N \\<in> sets M\" for N"], ["proof (prove)\ngoal (1 subgoal):\n 1. K N \\<in> sets M", "unfolding K_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A2 \\<inter> (\\<Union>i<N. (T ^^ i) --` B) \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  K ?N3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have K_incl: \"\\<And>N. K N \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N. K N \\<subseteq> A", "using K_def A2_def"], ["proof (prove)\nusing this:\n  K = (\\<lambda>N. A2 \\<inter> (\\<Union>i<N. (T ^^ i) --` B))\n  A2 = A - R\n\ngoal (1 subgoal):\n 1. \\<And>N. K N \\<subseteq> A", "by blast"], ["proof (state)\nthis:\n  K ?N3 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have \"(\\<Union>N. K N) = A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range K) = A2", "using A2_def R_def K_def"], ["proof (prove)\nusing this:\n  A2 = A - R\n  R = A - (\\<Union>i. (T ^^ i) --` B)\n  K = (\\<lambda>N. A2 \\<inter> (\\<Union>i<N. (T ^^ i) --` B))\n\ngoal (1 subgoal):\n 1. \\<Union> (range K) = A2", "by blast"], ["proof (state)\nthis:\n  \\<Union> (range K) = A2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "moreover"], ["proof (state)\nthis:\n  \\<Union> (range K) = A2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have \"incseq K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. incseq K", "unfolding K_def incseq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m n.\n       m \\<le> n \\<longrightarrow>\n       A2 \\<inter> (\\<Union>i<m. (T ^^ i) --` B)\n       \\<subseteq> A2 \\<inter> (\\<Union>i<n. (T ^^ i) --` B)", "by fastforce"], ["proof (state)\nthis:\n  incseq K\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "ultimately"], ["proof (chain)\npicking this:\n  \\<Union> (range K) = A2\n  incseq K", "have \"(\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A2\""], ["proof (prove)\nusing this:\n  \\<Union> (range K) = A2\n  incseq K\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A2", "by (auto intro: Lim_emeasure_incseq)"], ["proof (state)\nthis:\n  (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A2", "have conv: \"(\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A\""], ["proof (prove)\nusing this:\n  (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A2\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A", "using meq"], ["proof (prove)\nusing this:\n  (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A2\n  emeasure M A2 = emeasure M A\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "define Bad where \"Bad = (\\<lambda>U n. {x \\<in> (T^^n)--`U. local_time B n x < k})\""], ["proof (state)\nthis:\n  Bad = (\\<lambda>U n. {x \\<in> (T ^^ n) --` U. local_time B n x < k})\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "define Bad0 where \"Bad0 = (\\<lambda>n. {x \\<in> space M. local_time B n x < k})\""], ["proof (state)\nthis:\n  Bad0 = (\\<lambda>n. {x \\<in> space M. local_time B n x < k})\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have Bad0_meas [measurable]: \"Bad0 n \\<in> sets M\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Bad0 n \\<in> sets M", "unfolding Bad0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> space M. local_time B n x < k} \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  Bad0 ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have Bad_inter: \"\\<And>U n. Bad U n = (T^^n)--`U \\<inter> Bad0 n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U n. Bad U n = (T ^^ n) --` U \\<inter> Bad0 n", "unfolding Bad_def Bad0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U n.\n       {x \\<in> (T ^^ n) --` U. local_time B n x < k} =\n       (T ^^ n) --` U \\<inter> {x \\<in> space M. local_time B n x < k}", "by auto"], ["proof (state)\nthis:\n  Bad ?U3 ?n3 = (T ^^ ?n3) --` ?U3 \\<inter> Bad0 ?n3\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "have Bad_meas [measurable]: \"\\<And>U n. U \\<in> sets M \\<Longrightarrow> Bad U n \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U n. U \\<in> sets M \\<Longrightarrow> Bad U n \\<in> sets M", "unfolding Bad_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U n.\n       U \\<in> sets M \\<Longrightarrow>\n       {x \\<in> (T ^^ n) --` U. local_time B n x < k} \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  ?U3 \\<in> sets M \\<Longrightarrow> Bad ?U3 ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n    \\<longlonglongrightarrow> 0", "proof (rule tendsto_zero_ennreal)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "fix e::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "assume \"e > 0\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "define e2 where \"e2 = e/3\""], ["proof (state)\nthis:\n  e2 = e / 3\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  e2 = e / 3", "have \"e2 > 0\""], ["proof (prove)\nusing this:\n  e2 = e / 3\n\ngoal (1 subgoal):\n 1. 0 < e2", "using \\<open>e>0\\<close>"], ["proof (prove)\nusing this:\n  e2 = e / 3\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < e2", "by simp"], ["proof (state)\nthis:\n  0 < e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  0 < e2", "have \"ennreal e2 > 0\""], ["proof (prove)\nusing this:\n  0 < e2\n\ngoal (1 subgoal):\n 1. 0 < ennreal e2", "by simp"], ["proof (state)\nthis:\n  0 < ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have \"(\\<lambda>N. emeasure M (K N) + e2) \\<longlonglongrightarrow> emeasure M A + e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. emeasure M (K N) + ennreal e2)\n    \\<longlonglongrightarrow> emeasure M A + ennreal e2", "using conv"], ["proof (prove)\nusing this:\n  (\\<lambda>N. emeasure M (K N)) \\<longlonglongrightarrow> emeasure M A\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. emeasure M (K N) + ennreal e2)\n    \\<longlonglongrightarrow> emeasure M A + ennreal e2", "by (intro tendsto_add) auto"], ["proof (state)\nthis:\n  (\\<lambda>N. emeasure M (K N) + ennreal e2)\n  \\<longlonglongrightarrow> emeasure M A + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>N. emeasure M (K N) + ennreal e2)\n  \\<longlonglongrightarrow> emeasure M A + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have \"emeasure M A < emeasure M A + e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M A < emeasure M A + ennreal e2", "using fin \\<open>e2 > 0\\<close>"], ["proof (prove)\nusing this:\n  emeasure M A < \\<infinity>\n  0 < e2\n\ngoal (1 subgoal):\n 1. emeasure M A < emeasure M A + ennreal e2", "by simp"], ["proof (state)\nthis:\n  emeasure M A < emeasure M A + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>N. emeasure M (K N) + ennreal e2)\n  \\<longlonglongrightarrow> emeasure M A + ennreal e2\n  emeasure M A < emeasure M A + ennreal e2", "have \"eventually (\\<lambda>N. emeasure M (K N) + e2 > emeasure M A) sequentially\""], ["proof (prove)\nusing this:\n  (\\<lambda>N. emeasure M (K N) + ennreal e2)\n  \\<longlonglongrightarrow> emeasure M A + ennreal e2\n  emeasure M A < emeasure M A + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F N in sequentially.\n       emeasure M A < emeasure M (K N) + ennreal e2", "by (simp add: order_tendsto_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F N in sequentially.\n     emeasure M A < emeasure M (K N) + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F N in sequentially.\n     emeasure M A < emeasure M (K N) + ennreal e2", "obtain N where \"N>0\" and largeK: \"emeasure M (K N) + e2 > emeasure M A\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F N in sequentially.\n     emeasure M A < emeasure M (K N) + ennreal e2\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>0 < N;\n         emeasure M A < emeasure M (K N) + ennreal e2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) add.commute add_Suc_right eventually_at_top_linorder le_add2 zero_less_Suc)"], ["proof (state)\nthis:\n  0 < N\n  emeasure M A < emeasure M (K N) + ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "define S where \"S = A - (K N)\""], ["proof (state)\nthis:\n  S = A - K N\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have S_meas [measurable]: \"S \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets M", "using A_meas K_meas S_def"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  K ?N3 \\<in> sets M\n  S = A - K N\n\ngoal (1 subgoal):\n 1. S \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  S \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have \"emeasure M A = emeasure M (K N) + emeasure M S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M A = emeasure M (K N) + emeasure M S", "by (metis Diff_disjoint Diff_partition plus_emeasure[OF K_meas[of N], OF S_meas] S_def K_incl[of N])"], ["proof (state)\nthis:\n  emeasure M A = emeasure M (K N) + emeasure M S\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  emeasure M A = emeasure M (K N) + emeasure M S", "have S_small: \"emeasure M S < e2\""], ["proof (prove)\nusing this:\n  emeasure M A = emeasure M (K N) + emeasure M S\n\ngoal (1 subgoal):\n 1. emeasure M S < ennreal e2", "using largeK fin"], ["proof (prove)\nusing this:\n  emeasure M A = emeasure M (K N) + emeasure M S\n  emeasure M A < emeasure M (K N) + ennreal e2\n  emeasure M A < \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M S < ennreal e2", "by simp"], ["proof (state)\nthis:\n  emeasure M S < ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have A_incl: \"A \\<subseteq> S \\<union> (\\<Union>i<N. A2 \\<inter> (T^^i)--`B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> S \\<union> (\\<Union>i<N. A2 \\<inter> (T ^^ i) --` B)", "using S_def K_def"], ["proof (prove)\nusing this:\n  S = A - K N\n  K = (\\<lambda>N. A2 \\<inter> (\\<Union>i<N. (T ^^ i) --` B))\n\ngoal (1 subgoal):\n 1. A \\<subseteq> S \\<union> (\\<Union>i<N. A2 \\<inter> (T ^^ i) --` B)", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> S \\<union> (\\<Union>i<N. A2 \\<inter> (T ^^ i) --` B)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "define L where \"L = (\\<lambda>i. A2 \\<inter> (T^^i)--`B)\""], ["proof (state)\nthis:\n  L = (\\<lambda>i. A2 \\<inter> (T ^^ i) --` B)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have L_meas [measurable]: \"L i \\<in> sets M\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. L i \\<in> sets M", "unfolding L_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A2 \\<inter> (T ^^ i) --` B \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  L ?i3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have \"\\<And>i. L i \\<subseteq> A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. L i \\<subseteq> A2", "using L_def"], ["proof (prove)\nusing this:\n  L = (\\<lambda>i. A2 \\<inter> (T ^^ i) --` B)\n\ngoal (1 subgoal):\n 1. \\<And>i. L i \\<subseteq> A2", "by simp"], ["proof (state)\nthis:\n  L ?i3 \\<subseteq> A2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  L ?i3 \\<subseteq> A2", "have L_fin: \"emeasure M (L i) < \\<infinity>\" for i"], ["proof (prove)\nusing this:\n  L ?i3 \\<subseteq> A2\n\ngoal (1 subgoal):\n 1. emeasure M (L i) < \\<infinity>", "using emeasure_mono[of \"L i\" A2 M] A2_meas A2_fin"], ["proof (prove)\nusing this:\n  L ?i3 \\<subseteq> A2\n  \\<lbrakk>L i \\<subseteq> A2; A2 \\<in> sets M\\<rbrakk>\n  \\<Longrightarrow> emeasure M (L i) \\<le> emeasure M A2\n  A2 \\<in> sets M\n  emeasure M A2 < \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M (L i) < \\<infinity>", "by simp"], ["proof (state)\nthis:\n  emeasure M (L ?i3) < \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have \"\\<And>i. L i \\<subseteq> (T^^i)--`B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. L i \\<subseteq> (T ^^ i) --` B", "using L_def"], ["proof (prove)\nusing this:\n  L = (\\<lambda>i. A2 \\<inter> (T ^^ i) --` B)\n\ngoal (1 subgoal):\n 1. \\<And>i. L i \\<subseteq> (T ^^ i) --` B", "by auto"], ["proof (state)\nthis:\n  L ?i3 \\<subseteq> (T ^^ ?i3) --` B\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  L ?i3 \\<subseteq> (T ^^ ?i3) --` B", "have a: \"\\<And>i. (\\<lambda>n. emeasure M (Bad (L i) n)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  L ?i3 \\<subseteq> (T ^^ ?i3) --` B\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<lambda>n. emeasure M (Bad (L i) n)) \\<longlonglongrightarrow> 0", "unfolding Bad_def"], ["proof (prove)\nusing this:\n  L ?i3 \\<subseteq> (T ^^ ?i3) --` B\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` L i. local_time B n x < k})\n       \\<longlonglongrightarrow> 0", "using local_time_unbounded2[OF L_meas, OF L_fin]"], ["proof (prove)\nusing this:\n  L ?i3 \\<subseteq> (T ^^ ?i3) --` B\n  L ?i4 \\<subseteq> (T ^^ ?i) --` ?B \\<Longrightarrow>\n  (\\<lambda>n.\n      emeasure M {x \\<in> (T ^^ n) --` L ?i4. local_time ?B n x < ?k})\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<lambda>n.\n           emeasure M {x \\<in> (T ^^ n) --` L i. local_time B n x < k})\n       \\<longlonglongrightarrow> 0", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>n. emeasure M (Bad (L ?i3) n)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have \"(\\<lambda>n. (\\<Sum>i<N. emeasure M (Bad (L i) n))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<N. emeasure M (Bad (L i) n))\n    \\<longlonglongrightarrow> 0", "using tendsto_sum[OF a]"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>i\\<in>?I. emeasure M (Bad (L (?i4 i)) x))\n  \\<longlonglongrightarrow> (\\<Sum>i\\<in>?I. 0)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<N. emeasure M (Bad (L i) n))\n    \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<N. emeasure M (Bad (L i) n))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<Sum>i<N. emeasure M (Bad (L i) n))\n  \\<longlonglongrightarrow> 0", "have \"eventually (\\<lambda>n. (\\<Sum>i<N. emeasure M (Bad (L i) n)) < e2) sequentially\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>i<N. emeasure M (Bad (L i) n))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>i<N. emeasure M (Bad (L i) n)) < ennreal e2", "using \\<open>ennreal e2 > 0\\<close> order_tendsto_iff"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>i<N. emeasure M (Bad (L i) n))\n  \\<longlonglongrightarrow> 0\n  0 < ennreal e2\n  (?f \\<longlongrightarrow> ?x) ?F =\n  ((\\<forall>l<?x. \\<forall>\\<^sub>F x in ?F. l < ?f x) \\<and>\n   (\\<forall>u>?x. \\<forall>\\<^sub>F x in ?F. ?f x < u))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>i<N. emeasure M (Bad (L i) n)) < ennreal e2", "by metis"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>i<N. emeasure M (Bad (L i) n)) < ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>i<N. emeasure M (Bad (L i) n)) < ennreal e2", "obtain N2 where *: \"\\<And>n. n > N2 \\<Longrightarrow> (\\<Sum>i<N. emeasure M (Bad (L i) n)) < e2\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>i<N. emeasure M (Bad (L i) n)) < ennreal e2\n\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        (\\<And>n.\n            N2 < n \\<Longrightarrow>\n            (\\<Sum>i<N. emeasure M (Bad (L i) n))\n            < ennreal e2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: eventually_at_top_dense)"], ["proof (state)\nthis:\n  N2 < ?n3 \\<Longrightarrow>\n  (\\<Sum>i<N. emeasure M (Bad (L i) ?n3)) < ennreal e2\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "have \"emeasure M (Bad A n) < e\" if \"n > N2\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"emeasure M (Bad S n) \\<le> emeasure M ((T^^n)--`S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (Bad S n) \\<le> emeasure M ((T ^^ n) --` S)", "apply (rule emeasure_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Bad S n \\<subseteq> (T ^^ n) --` S\n 2. (T ^^ n) --` S \\<in> sets M", "unfolding Bad_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. {x \\<in> (T ^^ n) --` S. local_time B n x < k}\n    \\<subseteq> (T ^^ n) --` S\n 2. (T ^^ n) --` S \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  emeasure M (Bad S n) \\<le> emeasure M ((T ^^ n) --` S)\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "also"], ["proof (state)\nthis:\n  emeasure M (Bad S n) \\<le> emeasure M ((T ^^ n) --` S)\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"... = emeasure M S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M ((T ^^ n) --` S) = emeasure M S", "using T_vrestr_same_emeasure(2)"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow>\n  emeasure M ((T ^^ ?n) --` ?A) = emeasure M ?A\n\ngoal (1 subgoal):\n 1. emeasure M ((T ^^ n) --` S) = emeasure M S", "by simp"], ["proof (state)\nthis:\n  emeasure M ((T ^^ n) --` S) = emeasure M S\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "also"], ["proof (state)\nthis:\n  emeasure M ((T ^^ n) --` S) = emeasure M S\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"... \\<le> e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M S \\<le> ennreal e2", "using S_small"], ["proof (prove)\nusing this:\n  emeasure M S < ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M S \\<le> ennreal e2", "by simp"], ["proof (state)\nthis:\n  emeasure M S \\<le> ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "finally"], ["proof (chain)\npicking this:\n  emeasure M (Bad S n) \\<le> ennreal e2", "have SBad_small: \"emeasure M (Bad S n) \\<le> e2\""], ["proof (prove)\nusing this:\n  emeasure M (Bad S n) \\<le> ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (Bad S n) \\<le> ennreal e2", "by simp"], ["proof (state)\nthis:\n  emeasure M (Bad S n) \\<le> ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"(T^^n)--`A \\<subseteq> (T^^n)--`S \\<union> (\\<Union>i<N. (T^^n)--`(L i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) --` A\n    \\<subseteq> (T ^^ n) --` S \\<union> (\\<Union>i<N. (T ^^ n) --` L i)", "using A_incl"], ["proof (prove)\nusing this:\n  A \\<subseteq> S \\<union> (\\<Union>i<N. A2 \\<inter> (T ^^ i) --` B)\n\ngoal (1 subgoal):\n 1. (T ^^ n) --` A\n    \\<subseteq> (T ^^ n) --` S \\<union> (\\<Union>i<N. (T ^^ n) --` L i)", "unfolding L_def"], ["proof (prove)\nusing this:\n  A \\<subseteq> S \\<union> (\\<Union>i<N. A2 \\<inter> (T ^^ i) --` B)\n\ngoal (1 subgoal):\n 1. (T ^^ n) --` A\n    \\<subseteq> (T ^^ n) --` S \\<union>\n                (\\<Union>i<N. (T ^^ n) --` (A2 \\<inter> (T ^^ i) --` B))", "by fastforce"], ["proof (state)\nthis:\n  (T ^^ n) --` A\n  \\<subseteq> (T ^^ n) --` S \\<union> (\\<Union>i<N. (T ^^ n) --` L i)\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "then"], ["proof (chain)\npicking this:\n  (T ^^ n) --` A\n  \\<subseteq> (T ^^ n) --` S \\<union> (\\<Union>i<N. (T ^^ n) --` L i)", "have I: \"Bad A n \\<subseteq> Bad S n \\<union> (\\<Union>i<N. Bad (L i) n)\""], ["proof (prove)\nusing this:\n  (T ^^ n) --` A\n  \\<subseteq> (T ^^ n) --` S \\<union> (\\<Union>i<N. (T ^^ n) --` L i)\n\ngoal (1 subgoal):\n 1. Bad A n \\<subseteq> Bad S n \\<union> (\\<Union>i<N. Bad (L i) n)", "using Bad_inter"], ["proof (prove)\nusing this:\n  (T ^^ n) --` A\n  \\<subseteq> (T ^^ n) --` S \\<union> (\\<Union>i<N. (T ^^ n) --` L i)\n  Bad ?U3 ?n3 = (T ^^ ?n3) --` ?U3 \\<inter> Bad0 ?n3\n\ngoal (1 subgoal):\n 1. Bad A n \\<subseteq> Bad S n \\<union> (\\<Union>i<N. Bad (L i) n)", "by force"], ["proof (state)\nthis:\n  Bad A n \\<subseteq> Bad S n \\<union> (\\<Union>i<N. Bad (L i) n)\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"emeasure M (Bad A n) \\<le> emeasure M (Bad S n \\<union> (\\<Union>i<N. Bad (L i) n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (Bad A n)\n    \\<le> emeasure M (Bad S n \\<union> (\\<Union>i<N. Bad (L i) n))", "by (rule emeasure_mono[OF I], measurable)"], ["proof (state)\nthis:\n  emeasure M (Bad A n)\n  \\<le> emeasure M (Bad S n \\<union> (\\<Union>i<N. Bad (L i) n))\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "also"], ["proof (state)\nthis:\n  emeasure M (Bad A n)\n  \\<le> emeasure M (Bad S n \\<union> (\\<Union>i<N. Bad (L i) n))\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"... \\<le> emeasure M (Bad S n) + emeasure M (\\<Union>i<N. Bad (L i) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (Bad S n \\<union> (\\<Union>i<N. Bad (L i) n))\n    \\<le> emeasure M (Bad S n) + emeasure M (\\<Union>i<N. Bad (L i) n)", "by (intro emeasure_subadditive countable_Un_Int(1), auto)"], ["proof (state)\nthis:\n  emeasure M (Bad S n \\<union> (\\<Union>i<N. Bad (L i) n))\n  \\<le> emeasure M (Bad S n) + emeasure M (\\<Union>i<N. Bad (L i) n)\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "also"], ["proof (state)\nthis:\n  emeasure M (Bad S n \\<union> (\\<Union>i<N. Bad (L i) n))\n  \\<le> emeasure M (Bad S n) + emeasure M (\\<Union>i<N. Bad (L i) n)\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"... \\<le> emeasure M (Bad S n) + (\\<Sum>i<N. emeasure M (Bad (L i) n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (Bad S n) + emeasure M (\\<Union>i<N. Bad (L i) n)\n    \\<le> emeasure M (Bad S n) + (\\<Sum>i<N. emeasure M (Bad (L i) n))", "by (simp add: add_left_mono image_subset_iff Bad_meas[OF L_meas]\n            emeasure_subadditive_finite[OF finite_lessThan[of N], where ?A = \"\\<lambda>i. Bad (L i) n\"])"], ["proof (state)\nthis:\n  emeasure M (Bad S n) + emeasure M (\\<Union>i<N. Bad (L i) n)\n  \\<le> emeasure M (Bad S n) + (\\<Sum>i<N. emeasure M (Bad (L i) n))\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "also"], ["proof (state)\nthis:\n  emeasure M (Bad S n) + emeasure M (\\<Union>i<N. Bad (L i) n)\n  \\<le> emeasure M (Bad S n) + (\\<Sum>i<N. emeasure M (Bad (L i) n))\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"... \\<le> ennreal e2 + ennreal e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (Bad S n) + (\\<Sum>i<N. emeasure M (Bad (L i) n))\n    \\<le> ennreal e2 + ennreal e2", "using SBad_small less_imp_le[OF *[OF \\<open>n > N2\\<close>]]"], ["proof (prove)\nusing this:\n  emeasure M (Bad S n) \\<le> ennreal e2\n  (\\<Sum>i<N. emeasure M (Bad (L i) n)) \\<le> ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (Bad S n) + (\\<Sum>i<N. emeasure M (Bad (L i) n))\n    \\<le> ennreal e2 + ennreal e2", "by (rule add_mono)"], ["proof (state)\nthis:\n  emeasure M (Bad S n) + (\\<Sum>i<N. emeasure M (Bad (L i) n))\n  \\<le> ennreal e2 + ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "also"], ["proof (state)\nthis:\n  emeasure M (Bad S n) + (\\<Sum>i<N. emeasure M (Bad (L i) n))\n  \\<le> ennreal e2 + ennreal e2\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "have \"... < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal e2 + ennreal e2 < ennreal e", "using e2_def \\<open>e>0\\<close>"], ["proof (prove)\nusing this:\n  e2 = e / 3\n  0 < e\n\ngoal (1 subgoal):\n 1. ennreal e2 + ennreal e2 < ennreal e", "by (simp del: ennreal_plus add: ennreal_plus[symmetric] ennreal_lessI)"], ["proof (state)\nthis:\n  ennreal e2 + ennreal e2 < ennreal e\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "finally"], ["proof (chain)\npicking this:\n  emeasure M (Bad A n) < ennreal e", "show \"emeasure M (Bad A n) < e\""], ["proof (prove)\nusing this:\n  emeasure M (Bad A n) < ennreal e\n\ngoal (1 subgoal):\n 1. emeasure M (Bad A n) < ennreal e", "by simp"], ["proof (state)\nthis:\n  emeasure M (Bad A n) < ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N2 < ?n3 \\<Longrightarrow> emeasure M (Bad A ?n3) < ennreal e\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n          < ennreal r", "then"], ["proof (chain)\npicking this:\n  N2 < ?n3 \\<Longrightarrow> emeasure M (Bad A ?n3) < ennreal e", "show \"\\<forall>\\<^sub>F x in sequentially. emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k} < e\""], ["proof (prove)\nusing this:\n  N2 < ?n3 \\<Longrightarrow> emeasure M (Bad A ?n3) < ennreal e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k}\n       < ennreal e", "unfolding eventually_at_top_dense Bad_def"], ["proof (prove)\nusing this:\n  N2 < ?n3 \\<Longrightarrow>\n  emeasure M {x \\<in> (T ^^ ?n3) --` A. local_time B ?n3 x < k} < ennreal e\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n>N.\n          emeasure M {xa \\<in> (T ^^ n) --` A. local_time B n xa < k}\n          < ennreal e", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     emeasure M {xa \\<in> (T ^^ x) --` A. local_time B x xa < k} < ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` A. local_time B n x < k})\n  \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The induced map\\<close>"], ["", "text \\<open>The map induced by $T$ on a set $A$ is obtained by iterating $T$ until one lands again\nin $A$. (Outside of $A$, we take the identity for definiteness.) It has very nice properties:\nif $T$ is conservative, then the induced map $T_A$ also is. If $T$ is measure preserving, then\nso is $T_A$. (In particular, even if $T$ preserves an infinite measure, $T_A$ is a probability\npreserving map if $A$ has measure $1$ -- this makes it possible to prove some statements in\ninfinite measure by using results in finite measure systems). If $T$ is invertible, then so is\n$T_A$. We prove all these properties in this paragraph.\\<close>"], ["", "definition induced_map::\"'a set \\<Rightarrow> ('a \\<Rightarrow> 'a)\"\n  where \"induced_map A = (\\<lambda> x. (T^^(return_time_function A x)) x)\""], ["", "text \\<open>The set $A$ is stabilized by the induced map.\\<close>"], ["", "lemma induced_map_stabilizes_A:\n  \"x \\<in> A \\<longleftrightarrow> induced_map A x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> A) = (induced_map A x \\<in> A)", "proof (rule equiv_neg)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> A \\<Longrightarrow> induced_map A x \\<in> A\n 2. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> A \\<Longrightarrow> induced_map A x \\<in> A\n 2. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. x \\<in> A \\<Longrightarrow> induced_map A x \\<in> A\n 2. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "show \"induced_map A x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A x \\<in> A", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> induced_map A x \\<in> A\n 2. \\<not> ?P \\<Longrightarrow> induced_map A x \\<in> A", "assume \"x \\<notin> recurrent_subset A\""], ["proof (state)\nthis:\n  x \\<notin> recurrent_subset A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> induced_map A x \\<in> A\n 2. \\<not> ?P \\<Longrightarrow> induced_map A x \\<in> A", "then"], ["proof (chain)\npicking this:\n  x \\<notin> recurrent_subset A", "have \"induced_map A x = x\""], ["proof (prove)\nusing this:\n  x \\<notin> recurrent_subset A\n\ngoal (1 subgoal):\n 1. induced_map A x = x", "using induced_map_def return_time_function_def"], ["proof (prove)\nusing this:\n  x \\<notin> recurrent_subset A\n  induced_map ?A = (\\<lambda>x. (T ^^ return_time_function ?A x) x)\n  return_time_function ?A ?x =\n  (if ?x \\<in> recurrent_subset ?A\n   then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) ?x \\<in> ?A} else 0)\n\ngoal (1 subgoal):\n 1. induced_map A x = x", "by simp"], ["proof (state)\nthis:\n  induced_map A x = x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> induced_map A x \\<in> A\n 2. \\<not> ?P \\<Longrightarrow> induced_map A x \\<in> A", "then"], ["proof (chain)\npicking this:\n  induced_map A x = x", "show ?thesis"], ["proof (prove)\nusing this:\n  induced_map A x = x\n\ngoal (1 subgoal):\n 1. induced_map A x \\<in> A", "using \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  induced_map A x = x\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. induced_map A x \\<in> A", "by simp"], ["proof (state)\nthis:\n  induced_map A x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> recurrent_subset A \\<Longrightarrow>\n    induced_map A x \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> recurrent_subset A \\<Longrightarrow>\n    induced_map A x \\<in> A", "assume H: \"\\<not>(x \\<notin> recurrent_subset A)\""], ["proof (state)\nthis:\n  \\<not> x \\<notin> recurrent_subset A\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> recurrent_subset A \\<Longrightarrow>\n    induced_map A x \\<in> A", "define K where \"K = {n\\<in>{1..}. (T^^n) x \\<in> A}\""], ["proof (state)\nthis:\n  K = {n \\<in> {1..}. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> recurrent_subset A \\<Longrightarrow>\n    induced_map A x \\<in> A", "have \"K \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<noteq> {}", "using H recurrent_subset_def K_def"], ["proof (prove)\nusing this:\n  \\<not> x \\<notin> recurrent_subset A\n  recurrent_subset ?A = (\\<Union>n\\<in>{1..}. ?A \\<inter> (T ^^ n) -` ?A)\n  K = {n \\<in> {1..}. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. K \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  K \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> recurrent_subset A \\<Longrightarrow>\n    induced_map A x \\<in> A", "moreover"], ["proof (state)\nthis:\n  K \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> recurrent_subset A \\<Longrightarrow>\n    induced_map A x \\<in> A", "have \"return_time_function A x = Inf K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A x = \\<Sqinter> K", "using return_time_function_def K_def H"], ["proof (prove)\nusing this:\n  return_time_function ?A ?x =\n  (if ?x \\<in> recurrent_subset ?A\n   then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) ?x \\<in> ?A} else 0)\n  K = {n \\<in> {1..}. (T ^^ n) x \\<in> A}\n  \\<not> x \\<notin> recurrent_subset A\n\ngoal (1 subgoal):\n 1. return_time_function A x = \\<Sqinter> K", "by simp"], ["proof (state)\nthis:\n  return_time_function A x = \\<Sqinter> K\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> recurrent_subset A \\<Longrightarrow>\n    induced_map A x \\<in> A", "ultimately"], ["proof (chain)\npicking this:\n  K \\<noteq> {}\n  return_time_function A x = \\<Sqinter> K", "have \"return_time_function A x \\<in> K\""], ["proof (prove)\nusing this:\n  K \\<noteq> {}\n  return_time_function A x = \\<Sqinter> K\n\ngoal (1 subgoal):\n 1. return_time_function A x \\<in> K", "using Inf_nat_def1"], ["proof (prove)\nusing this:\n  K \\<noteq> {}\n  return_time_function A x = \\<Sqinter> K\n  ?K \\<noteq> {} \\<Longrightarrow> \\<Sqinter> ?K \\<in> ?K\n\ngoal (1 subgoal):\n 1. return_time_function A x \\<in> K", "by simp"], ["proof (state)\nthis:\n  return_time_function A x \\<in> K\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> recurrent_subset A \\<Longrightarrow>\n    induced_map A x \\<in> A", "then"], ["proof (chain)\npicking this:\n  return_time_function A x \\<in> K", "show ?thesis"], ["proof (prove)\nusing this:\n  return_time_function A x \\<in> K\n\ngoal (1 subgoal):\n 1. induced_map A x \\<in> A", "unfolding induced_map_def K_def"], ["proof (prove)\nusing this:\n  return_time_function A x \\<in> {n \\<in> {1..}. (T ^^ n) x \\<in> A}\n\ngoal (1 subgoal):\n 1. (T ^^ return_time_function A x) x \\<in> A", "by blast"], ["proof (state)\nthis:\n  induced_map A x \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  induced_map A x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "assume \"x \\<notin> A\""], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "then"], ["proof (chain)\npicking this:\n  x \\<notin> A", "have \"x \\<notin> recurrent_subset A\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. x \\<notin> recurrent_subset A", "using recurrent_subset_def"], ["proof (prove)\nusing this:\n  x \\<notin> A\n  recurrent_subset ?A = (\\<Union>n\\<in>{1..}. ?A \\<inter> (T ^^ n) -` ?A)\n\ngoal (1 subgoal):\n 1. x \\<notin> recurrent_subset A", "by simp"], ["proof (state)\nthis:\n  x \\<notin> recurrent_subset A\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "then"], ["proof (chain)\npicking this:\n  x \\<notin> recurrent_subset A", "have \"induced_map A x = x\""], ["proof (prove)\nusing this:\n  x \\<notin> recurrent_subset A\n\ngoal (1 subgoal):\n 1. induced_map A x = x", "using induced_map_def return_time_function_def"], ["proof (prove)\nusing this:\n  x \\<notin> recurrent_subset A\n  induced_map ?A = (\\<lambda>x. (T ^^ return_time_function ?A x) x)\n  return_time_function ?A ?x =\n  (if ?x \\<in> recurrent_subset ?A\n   then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) ?x \\<in> ?A} else 0)\n\ngoal (1 subgoal):\n 1. induced_map A x = x", "by simp"], ["proof (state)\nthis:\n  induced_map A x = x\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> induced_map A x \\<notin> A", "then"], ["proof (chain)\npicking this:\n  induced_map A x = x", "show \"induced_map A x \\<notin> A\""], ["proof (prove)\nusing this:\n  induced_map A x = x\n\ngoal (1 subgoal):\n 1. induced_map A x \\<notin> A", "using \\<open>x \\<notin> A\\<close>"], ["proof (prove)\nusing this:\n  induced_map A x = x\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. induced_map A x \\<notin> A", "by simp"], ["proof (state)\nthis:\n  induced_map A x \\<notin> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma induced_map_iterates_stabilize_A:\n  assumes \"x \\<in> A\"\n  shows \"((induced_map A)^^n) x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> A", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. (induced_map A ^^ 0) x \\<in> A\n 2. \\<And>n.\n       (induced_map A ^^ n) x \\<in> A \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x \\<in> A", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (induced_map A ^^ 0) x \\<in> A\n 2. \\<And>n.\n       (induced_map A ^^ n) x \\<in> A \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x \\<in> A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ 0) x \\<in> A", "using \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ 0) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  (induced_map A ^^ 0) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x \\<in> A \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x \\<in> A \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x \\<in> A", "case (Suc n)"], ["proof (state)\nthis:\n  (induced_map A ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x \\<in> A \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x \\<in> A", "have \"((induced_map A)^^(Suc n)) x = (induced_map A) (((induced_map A)^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ Suc n) x = induced_map A ((induced_map A ^^ n) x)", "by auto"], ["proof (state)\nthis:\n  (induced_map A ^^ Suc n) x = induced_map A ((induced_map A ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x \\<in> A \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x \\<in> A", "then"], ["proof (chain)\npicking this:\n  (induced_map A ^^ Suc n) x = induced_map A ((induced_map A ^^ n) x)", "show ?case"], ["proof (prove)\nusing this:\n  (induced_map A ^^ Suc n) x = induced_map A ((induced_map A ^^ n) x)\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ Suc n) x \\<in> A", "using Suc.IH induced_map_stabilizes_A"], ["proof (prove)\nusing this:\n  (induced_map A ^^ Suc n) x = induced_map A ((induced_map A ^^ n) x)\n  (induced_map A ^^ n) x \\<in> A\n  (?x \\<in> ?A) = (induced_map ?A ?x \\<in> ?A)\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ Suc n) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  (induced_map A ^^ Suc n) x \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma induced_map_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\"\n    shows \"induced_map A \\<in> measurable M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A \\<in> M \\<rightarrow>\\<^sub>M M", "unfolding induced_map_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (T ^^ return_time_function A x) x)\n    \\<in> M \\<rightarrow>\\<^sub>M M", "by auto"], ["", "text \\<open>The iterates of the induced map are given by a power of the original map, where the power\nis the Birkhoff sum (for the induced map) of the first return time. This is obvious, but useful.\\<close>"], ["", "lemma induced_map_iterates:\n  \"((induced_map A)^^n) x = (T^^(\\<Sum>i < n. return_time_function A ((induced_map A ^^i) x))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x =\n    (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. (induced_map A ^^ 0) x =\n    (T ^^ (\\<Sum>i<0. return_time_function A ((induced_map A ^^ i) x))) x\n 2. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (induced_map A ^^ 0) x =\n    (T ^^ (\\<Sum>i<0. return_time_function A ((induced_map A ^^ i) x))) x\n 2. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ 0) x =\n    (T ^^ (\\<Sum>i<0. return_time_function A ((induced_map A ^^ i) x))) x", "by auto"], ["proof (state)\nthis:\n  (induced_map A ^^ 0) x =\n  (T ^^ (\\<Sum>i<0. return_time_function A ((induced_map A ^^ i) x))) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "case (Suc n)"], ["proof (state)\nthis:\n  (induced_map A ^^ n) x =\n  (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "have \"((induced_map A)^^(n+1)) x = induced_map A (((induced_map A)^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ (n + 1)) x = induced_map A ((induced_map A ^^ n) x)", "by (simp add: funpow_add)"], ["proof (state)\nthis:\n  (induced_map A ^^ (n + 1)) x = induced_map A ((induced_map A ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "also"], ["proof (state)\nthis:\n  (induced_map A ^^ (n + 1)) x = induced_map A ((induced_map A ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "have \"... = (T^^(return_time_function A (((induced_map A)^^n) x))) (((induced_map A)^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A ((induced_map A ^^ n) x) =\n    (T ^^ return_time_function A ((induced_map A ^^ n) x))\n     ((induced_map A ^^ n) x)", "using induced_map_def"], ["proof (prove)\nusing this:\n  induced_map ?A = (\\<lambda>x. (T ^^ return_time_function ?A x) x)\n\ngoal (1 subgoal):\n 1. induced_map A ((induced_map A ^^ n) x) =\n    (T ^^ return_time_function A ((induced_map A ^^ n) x))\n     ((induced_map A ^^ n) x)", "by auto"], ["proof (state)\nthis:\n  induced_map A ((induced_map A ^^ n) x) =\n  (T ^^ return_time_function A ((induced_map A ^^ n) x))\n   ((induced_map A ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "also"], ["proof (state)\nthis:\n  induced_map A ((induced_map A ^^ n) x) =\n  (T ^^ return_time_function A ((induced_map A ^^ n) x))\n   ((induced_map A ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "have \"... = (T^^(return_time_function A (((induced_map A)^^n) x))) ((T^^(\\<Sum>i < n. return_time_function A ((induced_map A ^^i) x))) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ return_time_function A ((induced_map A ^^ n) x))\n     ((induced_map A ^^ n) x) =\n    (T ^^ return_time_function A ((induced_map A ^^ n) x))\n     ((T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x)", "using Suc.IH"], ["proof (prove)\nusing this:\n  (induced_map A ^^ n) x =\n  (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x\n\ngoal (1 subgoal):\n 1. (T ^^ return_time_function A ((induced_map A ^^ n) x))\n     ((induced_map A ^^ n) x) =\n    (T ^^ return_time_function A ((induced_map A ^^ n) x))\n     ((T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x)", "by auto"], ["proof (state)\nthis:\n  (T ^^ return_time_function A ((induced_map A ^^ n) x))\n   ((induced_map A ^^ n) x) =\n  (T ^^ return_time_function A ((induced_map A ^^ n) x))\n   ((T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "also"], ["proof (state)\nthis:\n  (T ^^ return_time_function A ((induced_map A ^^ n) x))\n   ((induced_map A ^^ n) x) =\n  (T ^^ return_time_function A ((induced_map A ^^ n) x))\n   ((T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "have \"... = (T^^(return_time_function A (((induced_map A)^^n) x) + (\\<Sum>i < n. return_time_function A ((induced_map A ^^i) x)))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ return_time_function A ((induced_map A ^^ n) x))\n     ((T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n       x) =\n    (T ^^\n     (return_time_function A ((induced_map A ^^ n) x) +\n      (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))))\n     x", "by (simp add: funpow_add)"], ["proof (state)\nthis:\n  (T ^^ return_time_function A ((induced_map A ^^ n) x))\n   ((T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x) =\n  (T ^^\n   (return_time_function A ((induced_map A ^^ n) x) +\n    (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))))\n   x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "also"], ["proof (state)\nthis:\n  (T ^^ return_time_function A ((induced_map A ^^ n) x))\n   ((T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x) =\n  (T ^^\n   (return_time_function A ((induced_map A ^^ n) x) +\n    (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))))\n   x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "have \"... = (T^^(\\<Sum>i < Suc n. return_time_function A ((induced_map A ^^i) x))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^\n     (return_time_function A ((induced_map A ^^ n) x) +\n      (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))))\n     x =\n    (T ^^ (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n     x", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  (T ^^\n   (return_time_function A ((induced_map A ^^ n) x) +\n    (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))))\n   x =\n  (T ^^ (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x))) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (induced_map A ^^ n) x =\n       (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x)))\n        x \\<Longrightarrow>\n       (induced_map A ^^ Suc n) x =\n       (T ^^\n        (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n        x", "finally"], ["proof (chain)\npicking this:\n  (induced_map A ^^ (n + 1)) x =\n  (T ^^ (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x))) x", "show ?case"], ["proof (prove)\nusing this:\n  (induced_map A ^^ (n + 1)) x =\n  (T ^^ (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x))) x\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ Suc n) x =\n    (T ^^ (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x)))\n     x", "by simp"], ["proof (state)\nthis:\n  (induced_map A ^^ Suc n) x =\n  (T ^^ (\\<Sum>i<Suc n. return_time_function A ((induced_map A ^^ i) x))) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma induced_map_stabilizes_recurrent_infty:\n  assumes \"x \\<in> recurrent_subset_infty A\"\n  shows \"((induced_map A)^^n) x \\<in> recurrent_subset_infty A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "have \"x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A", "using assms(1) recurrent_subset_incl(2)"], ["proof (prove)\nusing this:\n  x \\<in> recurrent_subset_infty A\n  recurrent_subset_infty ?A \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "define R where \"R = (\\<Sum>i < n. return_time_function A ((induced_map A ^^i) x))\""], ["proof (state)\nthis:\n  R = (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "have *: \"((induced_map A)^^n) x = (T^^R) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x = (T ^^ R) x", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x =\n    (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x", "by (rule induced_map_iterates)"], ["proof (state)\nthis:\n  (induced_map A ^^ n) x = (T ^^ R) x\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "moreover"], ["proof (state)\nthis:\n  (induced_map A ^^ n) x = (T ^^ R) x\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "have \"((induced_map A)^^n) x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> A", "by (rule induced_map_iterates_stabilize_A, simp add: \\<open>x \\<in> A\\<close>)"], ["proof (state)\nthis:\n  (induced_map A ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "ultimately"], ["proof (chain)\npicking this:\n  (induced_map A ^^ n) x = (T ^^ R) x\n  (induced_map A ^^ n) x \\<in> A", "have \"(T^^R) x \\<in> A\""], ["proof (prove)\nusing this:\n  (induced_map A ^^ n) x = (T ^^ R) x\n  (induced_map A ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. (T ^^ R) x \\<in> A", "by simp"], ["proof (state)\nthis:\n  (T ^^ R) x \\<in> A\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  (T ^^ R) x \\<in> A", "show ?thesis"], ["proof (prove)\nusing this:\n  (T ^^ R) x \\<in> A\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "using recurrent_subset_infty_returns[OF assms] *"], ["proof (prove)\nusing this:\n  (T ^^ R) x \\<in> A\n  (T ^^ ?n) x \\<in> A \\<Longrightarrow>\n  (T ^^ ?n) x \\<in> recurrent_subset_infty A\n  (induced_map A ^^ n) x = (T ^^ R) x\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) x \\<in> recurrent_subset_infty A", "by auto"], ["proof (state)\nthis:\n  (induced_map A ^^ n) x \\<in> recurrent_subset_infty A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $x \\in A$, then its successive returns to $A$ are exactly given by the iterations\nof the induced map.\\<close>"], ["", "lemma induced_map_returns:\n  assumes \"x \\<in> A\"\n  shows \"((T^^n) x \\<in> A) \\<longleftrightarrow> (\\<exists>N\\<le>n. n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((T ^^ n) x \\<in> A) =\n    (\\<exists>N\\<le>n.\n        n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x)))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (T ^^ n) x \\<in> A \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n 2. \\<exists>N\\<le>n.\n       n =\n       (\\<Sum>i<N.\n           return_time_function A\n            ((induced_map A ^^ i) x)) \\<Longrightarrow>\n    (T ^^ n) x \\<in> A", "assume \"(T^^n) x \\<in> A\""], ["proof (state)\nthis:\n  (T ^^ n) x \\<in> A\n\ngoal (2 subgoals):\n 1. (T ^^ n) x \\<in> A \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n 2. \\<exists>N\\<le>n.\n       n =\n       (\\<Sum>i<N.\n           return_time_function A\n            ((induced_map A ^^ i) x)) \\<Longrightarrow>\n    (T ^^ n) x \\<in> A", "have \"\\<And>y. y \\<in> A \\<Longrightarrow> (T^^n)y \\<in> A \\<Longrightarrow> \\<exists>N\\<le>n. n = (\\<Sum>i<N. return_time_function A (((induced_map A)^^i) y))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> A; (T ^^ n) y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N\\<le>n.\n                            n =\n                            (\\<Sum>i<N.\n                                return_time_function A\n                                 ((induced_map A ^^ i) y))", "proof (induction n rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n y.\n       \\<lbrakk>\\<forall>m<n.\n                   \\<forall>x.\n                      x \\<in> A \\<longrightarrow>\n                      (T ^^ m) x \\<in> A \\<longrightarrow>\n                      (\\<exists>N\\<le>m.\n                          m =\n                          (\\<Sum>i<N.\n                              return_time_function A\n                               ((induced_map A ^^ i) x)));\n        y \\<in> A; (T ^^ n) y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N\\<le>n.\n                            n =\n                            (\\<Sum>i<N.\n                                return_time_function A\n                                 ((induced_map A ^^ i) y))", "case (1 n)"], ["proof (state)\nthis:\n  \\<forall>m<n.\n     \\<forall>x.\n        x \\<in> A \\<longrightarrow>\n        (T ^^ m) x \\<in> A \\<longrightarrow>\n        (\\<exists>N\\<le>m.\n            m =\n            (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x)))\n  y \\<in> A\n  (T ^^ n) y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>n y.\n       \\<lbrakk>\\<forall>m<n.\n                   \\<forall>x.\n                      x \\<in> A \\<longrightarrow>\n                      (T ^^ m) x \\<in> A \\<longrightarrow>\n                      (\\<exists>N\\<le>m.\n                          m =\n                          (\\<Sum>i<N.\n                              return_time_function A\n                               ((induced_map A ^^ i) x)));\n        y \\<in> A; (T ^^ n) y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N\\<le>n.\n                            n =\n                            (\\<Sum>i<N.\n                                return_time_function A\n                                 ((induced_map A ^^ i) y))", "show \"\\<exists>N\\<le>n. n = (\\<Sum>i<N. return_time_function A (((induced_map A)^^i) y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "assume \"n = 0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "by auto"], ["proof (state)\nthis:\n  \\<exists>N\\<le>n.\n     n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "assume \"\\<not>(n = 0)\""], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have \"n > 0\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < n", "by simp"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  0 < n", "have y_rec: \"y \\<in> recurrent_subset A\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. y \\<in> recurrent_subset A", "using \\<open>y \\<in> A\\<close> \\<open>(T^^n) y \\<in> A\\<close> recurrent_subset_def"], ["proof (prove)\nusing this:\n  0 < n\n  y \\<in> A\n  (T ^^ n) y \\<in> A\n  recurrent_subset ?A = (\\<Union>n\\<in>{1..}. ?A \\<inter> (T ^^ n) -` ?A)\n\ngoal (1 subgoal):\n 1. y \\<in> recurrent_subset A", "by auto"], ["proof (state)\nthis:\n  y \\<in> recurrent_subset A\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  y \\<in> recurrent_subset A", "have *: \"return_time_function A y > 0\""], ["proof (prove)\nusing this:\n  y \\<in> recurrent_subset A\n\ngoal (1 subgoal):\n 1. 0 < return_time_function A y", "by (metis DiffE insert_iff neq0_conv vimage_eq return_time0)"], ["proof (state)\nthis:\n  0 < return_time_function A y\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "define m where \"m = return_time_function A y\""], ["proof (state)\nthis:\n  m = return_time_function A y\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"m > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m", "using * m_def"], ["proof (prove)\nusing this:\n  0 < return_time_function A y\n  m = return_time_function A y\n\ngoal (1 subgoal):\n 1. 0 < m", "by simp"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "define K where \"K = {t \\<in> {1..}. (T ^^ t) y \\<in> A}\""], ["proof (state)\nthis:\n  K = {t \\<in> {1..}. (T ^^ t) y \\<in> A}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"n \\<in> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> K", "unfolding K_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> {t \\<in> {1..}. (T ^^ t) y \\<in> A}", "using \\<open>n > 0\\<close> \\<open>(T^^n)y \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n  (T ^^ n) y \\<in> A\n\ngoal (1 subgoal):\n 1. n \\<in> {t \\<in> {1..}. (T ^^ t) y \\<in> A}", "by simp"], ["proof (state)\nthis:\n  n \\<in> K\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  n \\<in> K", "have \"n \\<ge> Inf K\""], ["proof (prove)\nusing this:\n  n \\<in> K\n\ngoal (1 subgoal):\n 1. \\<Sqinter> K \\<le> n", "by (simp add: cInf_lower)"], ["proof (state)\nthis:\n  \\<Sqinter> K \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "moreover"], ["proof (state)\nthis:\n  \\<Sqinter> K \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"m = Inf K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = \\<Sqinter> K", "unfolding m_def K_def return_time_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if y \\<in> recurrent_subset A\n     then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) y \\<in> A} else 0) =\n    \\<Sqinter> {t \\<in> {1..}. (T ^^ t) y \\<in> A}", "using y_rec"], ["proof (prove)\nusing this:\n  y \\<in> recurrent_subset A\n\ngoal (1 subgoal):\n 1. (if y \\<in> recurrent_subset A\n     then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) y \\<in> A} else 0) =\n    \\<Sqinter> {t \\<in> {1..}. (T ^^ t) y \\<in> A}", "by simp"], ["proof (state)\nthis:\n  m = \\<Sqinter> K\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "ultimately"], ["proof (chain)\npicking this:\n  \\<Sqinter> K \\<le> n\n  m = \\<Sqinter> K", "have \"n \\<ge> m\""], ["proof (prove)\nusing this:\n  \\<Sqinter> K \\<le> n\n  m = \\<Sqinter> K\n\ngoal (1 subgoal):\n 1. m \\<le> n", "by simp"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "define z where \"z = induced_map A y\""], ["proof (state)\nthis:\n  z = induced_map A y\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"z \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> A", "using \\<open>y \\<in> A\\<close> induced_map_stabilizes_A z_def"], ["proof (prove)\nusing this:\n  y \\<in> A\n  (?x \\<in> ?A) = (induced_map ?A ?x \\<in> ?A)\n  z = induced_map A y\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by simp"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"z = (T^^m) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = (T ^^ m) y", "using induced_map_def y_rec z_def m_def"], ["proof (prove)\nusing this:\n  induced_map ?A = (\\<lambda>x. (T ^^ return_time_function ?A x) x)\n  y \\<in> recurrent_subset A\n  z = induced_map A y\n  m = return_time_function A y\n\ngoal (1 subgoal):\n 1. z = (T ^^ m) y", "by auto"], ["proof (state)\nthis:\n  z = (T ^^ m) y\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  z = (T ^^ m) y", "have \"(T^^(n-m)) z = (T^^n) y\""], ["proof (prove)\nusing this:\n  z = (T ^^ m) y\n\ngoal (1 subgoal):\n 1. (T ^^ (n - m)) z = (T ^^ n) y", "using \\<open>n \\<ge> m\\<close> funpow_add[of \"n-m\" m T, symmetric]"], ["proof (prove)\nusing this:\n  z = (T ^^ m) y\n  m \\<le> n\n  T ^^ (n - m) \\<circ> T ^^ m = T ^^ (n - m + m)\n\ngoal (1 subgoal):\n 1. (T ^^ (n - m)) z = (T ^^ n) y", "by (metis comp_apply le_add_diff_inverse2)"], ["proof (state)\nthis:\n  (T ^^ (n - m)) z = (T ^^ n) y\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  (T ^^ (n - m)) z = (T ^^ n) y", "have \"(T^^(n-m)) z \\<in> A\""], ["proof (prove)\nusing this:\n  (T ^^ (n - m)) z = (T ^^ n) y\n\ngoal (1 subgoal):\n 1. (T ^^ (n - m)) z \\<in> A", "using \\<open>(T^^n) y \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  (T ^^ (n - m)) z = (T ^^ n) y\n  (T ^^ n) y \\<in> A\n\ngoal (1 subgoal):\n 1. (T ^^ (n - m)) z \\<in> A", "by simp"], ["proof (state)\nthis:\n  (T ^^ (n - m)) z \\<in> A\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "moreover"], ["proof (state)\nthis:\n  (T ^^ (n - m)) z \\<in> A\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"n-m < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n - m < n", "using \\<open>m > 0\\<close> \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < m\n  0 < n\n\ngoal (1 subgoal):\n 1. n - m < n", "by simp"], ["proof (state)\nthis:\n  n - m < n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "ultimately"], ["proof (chain)\npicking this:\n  (T ^^ (n - m)) z \\<in> A\n  n - m < n", "obtain N0 where \"N0 \\<le> n-m\" \"n-m = (\\<Sum>i<N0. return_time_function A (((induced_map A)^^i) z))\""], ["proof (prove)\nusing this:\n  (T ^^ (n - m)) z \\<in> A\n  n - m < n\n\ngoal (1 subgoal):\n 1. (\\<And>N0.\n        \\<lbrakk>N0 \\<le> n - m;\n         n - m =\n         (\\<Sum>i<N0.\n             return_time_function A ((induced_map A ^^ i) z))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>z \\<in> A\\<close> \"1.IH\""], ["proof (prove)\nusing this:\n  (T ^^ (n - m)) z \\<in> A\n  n - m < n\n  z \\<in> A\n  \\<forall>m<n.\n     \\<forall>x.\n        x \\<in> A \\<longrightarrow>\n        (T ^^ m) x \\<in> A \\<longrightarrow>\n        (\\<exists>N\\<le>m.\n            m =\n            (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x)))\n\ngoal (1 subgoal):\n 1. (\\<And>N0.\n        \\<lbrakk>N0 \\<le> n - m;\n         n - m =\n         (\\<Sum>i<N0.\n             return_time_function A ((induced_map A ^^ i) z))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  N0 \\<le> n - m\n  n - m = (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ i) z))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  N0 \\<le> n - m\n  n - m = (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ i) z))", "have \"n-m = (\\<Sum>i<N0. return_time_function A (((induced_map A)^^i) (induced_map A y)))\""], ["proof (prove)\nusing this:\n  N0 \\<le> n - m\n  n - m = (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ i) z))\n\ngoal (1 subgoal):\n 1. n - m =\n    (\\<Sum>i<N0.\n        return_time_function A ((induced_map A ^^ i) (induced_map A y)))", "using z_def"], ["proof (prove)\nusing this:\n  N0 \\<le> n - m\n  n - m = (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ i) z))\n  z = induced_map A y\n\ngoal (1 subgoal):\n 1. n - m =\n    (\\<Sum>i<N0.\n        return_time_function A ((induced_map A ^^ i) (induced_map A y)))", "by auto"], ["proof (state)\nthis:\n  n - m =\n  (\\<Sum>i<N0.\n      return_time_function A ((induced_map A ^^ i) (induced_map A y)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "moreover"], ["proof (state)\nthis:\n  n - m =\n  (\\<Sum>i<N0.\n      return_time_function A ((induced_map A ^^ i) (induced_map A y)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"\\<And>i. ((induced_map A)^^i) (induced_map A y) = ((induced_map A)^^(i+1)) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (induced_map A ^^ i) (induced_map A y) = (induced_map A ^^ (i + 1)) y", "by (metis Suc_eq_plus1 comp_apply funpow_Suc_right)"], ["proof (state)\nthis:\n  (induced_map A ^^ ?i2) (induced_map A y) = (induced_map A ^^ (?i2 + 1)) y\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "ultimately"], ["proof (chain)\npicking this:\n  n - m =\n  (\\<Sum>i<N0.\n      return_time_function A ((induced_map A ^^ i) (induced_map A y)))\n  (induced_map A ^^ ?i2) (induced_map A y) = (induced_map A ^^ (?i2 + 1)) y", "have \"n-m = (\\<Sum>i<N0. return_time_function A (((induced_map A)^^(i+1)) y))\""], ["proof (prove)\nusing this:\n  n - m =\n  (\\<Sum>i<N0.\n      return_time_function A ((induced_map A ^^ i) (induced_map A y)))\n  (induced_map A ^^ ?i2) (induced_map A y) = (induced_map A ^^ (?i2 + 1)) y\n\ngoal (1 subgoal):\n 1. n - m =\n    (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ (i + 1)) y))", "by simp"], ["proof (state)\nthis:\n  n - m =\n  (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ (i + 1)) y))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  n - m =\n  (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ (i + 1)) y))", "have \"n-m = (\\<Sum>i \\<in> {1..<N0+1}. return_time_function A (((induced_map A)^^i) y))\""], ["proof (prove)\nusing this:\n  n - m =\n  (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ (i + 1)) y))\n\ngoal (1 subgoal):\n 1. n - m =\n    (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))", "using sum.shift_bounds_nat_ivl[of \"\\<lambda>i. return_time_function A (((induced_map A)^^i) y)\", of 0, of 1, of N0, symmetric]\n              atLeast0LessThan"], ["proof (prove)\nusing this:\n  n - m =\n  (\\<Sum>i<N0. return_time_function A ((induced_map A ^^ (i + 1)) y))\n  (\\<Sum>i = 0..<N0.\n      return_time_function A ((induced_map A ^^ (i + 1)) y)) =\n  (\\<Sum>i = 0 + 1..<N0 + 1.\n      return_time_function A ((induced_map A ^^ i) y))\n  {0..<?n} = {..<?n}\n\ngoal (1 subgoal):\n 1. n - m =\n    (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))", "by auto"], ["proof (state)\nthis:\n  n - m =\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "moreover"], ["proof (state)\nthis:\n  n - m =\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"m = (\\<Sum>i\\<in>{0..<1}. return_time_function A (((induced_map A)^^i) y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y))", "using m_def"], ["proof (prove)\nusing this:\n  m = return_time_function A y\n\ngoal (1 subgoal):\n 1. m = (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y))", "by simp"], ["proof (state)\nthis:\n  m = (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "ultimately"], ["proof (chain)\npicking this:\n  n - m =\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n  m = (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y))", "have \"n = (\\<Sum>i\\<in>{0..<1}. return_time_function A (((induced_map A)^^i) y))\n        + (\\<Sum>i \\<in> {1..<N0+1}. return_time_function A (((induced_map A)^^i) y))\""], ["proof (prove)\nusing this:\n  n - m =\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n  m = (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n =\n    (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y)) +\n    (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))", "using \\<open>n \\<ge> m\\<close>"], ["proof (prove)\nusing this:\n  n - m =\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n  m = (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y))\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. n =\n    (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y)) +\n    (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))", "by simp"], ["proof (state)\nthis:\n  n =\n  (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y)) +\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "then"], ["proof (chain)\npicking this:\n  n =\n  (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y)) +\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))", "have \"n = (\\<Sum>i\\<in>{0..<N0+1}. return_time_function A (((induced_map A)^^i) y))\""], ["proof (prove)\nusing this:\n  n =\n  (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y)) +\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n =\n    (\\<Sum>i = 0..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))", "using le_add2 sum.atLeastLessThan_concat"], ["proof (prove)\nusing this:\n  n =\n  (\\<Sum>i = 0..<1. return_time_function A ((induced_map A ^^ i) y)) +\n  (\\<Sum>i = 1..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n  ?n \\<le> ?m + ?n\n  \\<lbrakk>?m \\<le> ?n; ?n \\<le> ?p\\<rbrakk>\n  \\<Longrightarrow> sum ?g {?m..<?n} + sum ?g {?n..<?p} = sum ?g {?m..<?p}\n\ngoal (1 subgoal):\n 1. n =\n    (\\<Sum>i = 0..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))", "by blast"], ["proof (state)\nthis:\n  n =\n  (\\<Sum>i = 0..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "moreover"], ["proof (state)\nthis:\n  n =\n  (\\<Sum>i = 0..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "have \"N0 + 1 \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N0 + 1 \\<le> n", "using \\<open>N0 \\<le> n-m\\<close> \\<open>n - m < n\\<close>"], ["proof (prove)\nusing this:\n  N0 \\<le> n - m\n  n - m < n\n\ngoal (1 subgoal):\n 1. N0 + 1 \\<le> n", "by linarith"], ["proof (state)\nthis:\n  N0 + 1 \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "ultimately"], ["proof (chain)\npicking this:\n  n =\n  (\\<Sum>i = 0..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n  N0 + 1 \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  n =\n  (\\<Sum>i = 0..<N0 + 1. return_time_function A ((induced_map A ^^ i) y))\n  N0 + 1 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))", "by (metis atLeast0LessThan)"], ["proof (state)\nthis:\n  \\<exists>N\\<le>n.\n     n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>N\\<le>n.\n     n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?y2 \\<in> A; (T ^^ ?n3) ?y2 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>N\\<le>?n3.\n                       ?n3 =\n                       (\\<Sum>i<N.\n                           return_time_function A\n                            ((induced_map A ^^ i) ?y2))\n\ngoal (2 subgoals):\n 1. (T ^^ n) x \\<in> A \\<Longrightarrow>\n    \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n 2. \\<exists>N\\<le>n.\n       n =\n       (\\<Sum>i<N.\n           return_time_function A\n            ((induced_map A ^^ i) x)) \\<Longrightarrow>\n    (T ^^ n) x \\<in> A", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?y2 \\<in> A; (T ^^ ?n3) ?y2 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>N\\<le>?n3.\n                       ?n3 =\n                       (\\<Sum>i<N.\n                           return_time_function A\n                            ((induced_map A ^^ i) ?y2))", "show \"\\<exists>N\\<le>n. n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?y2 \\<in> A; (T ^^ ?n3) ?y2 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>N\\<le>?n3.\n                       ?n3 =\n                       (\\<Sum>i<N.\n                           return_time_function A\n                            ((induced_map A ^^ i) ?y2))\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))", "using \\<open>x \\<in> A\\<close> \\<open>(T^^n) x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y2 \\<in> A; (T ^^ ?n3) ?y2 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>N\\<le>?n3.\n                       ?n3 =\n                       (\\<Sum>i<N.\n                           return_time_function A\n                            ((induced_map A ^^ i) ?y2))\n  x \\<in> A\n  (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))", "by simp"], ["proof (state)\nthis:\n  \\<exists>N\\<le>n.\n     n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n =\n       (\\<Sum>i<N.\n           return_time_function A\n            ((induced_map A ^^ i) x)) \\<Longrightarrow>\n    (T ^^ n) x \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n =\n       (\\<Sum>i<N.\n           return_time_function A\n            ((induced_map A ^^ i) x)) \\<Longrightarrow>\n    (T ^^ n) x \\<in> A", "assume \"\\<exists>N\\<le>n. n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\""], ["proof (state)\nthis:\n  \\<exists>N\\<le>n.\n     n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n =\n       (\\<Sum>i<N.\n           return_time_function A\n            ((induced_map A ^^ i) x)) \\<Longrightarrow>\n    (T ^^ n) x \\<in> A", "then"], ["proof (chain)\npicking this:\n  \\<exists>N\\<le>n.\n     n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))", "obtain N where \"n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\""], ["proof (prove)\nusing this:\n  \\<exists>N\\<le>n.\n     n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        n =\n        (\\<Sum>i<N.\n            return_time_function A\n             ((induced_map A ^^ i) x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n =\n       (\\<Sum>i<N.\n           return_time_function A\n            ((induced_map A ^^ i) x)) \\<Longrightarrow>\n    (T ^^ n) x \\<in> A", "then"], ["proof (chain)\npicking this:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))", "have \"(T^^n) x = ((induced_map A)^^N) x\""], ["proof (prove)\nusing this:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n\ngoal (1 subgoal):\n 1. (T ^^ n) x = (induced_map A ^^ N) x", "using induced_map_iterates[of N, of A, of x]"], ["proof (prove)\nusing this:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n  (induced_map A ^^ N) x =\n  (T ^^ (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))) x\n\ngoal (1 subgoal):\n 1. (T ^^ n) x = (induced_map A ^^ N) x", "by simp"], ["proof (state)\nthis:\n  (T ^^ n) x = (induced_map A ^^ N) x\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<le>n.\n       n =\n       (\\<Sum>i<N.\n           return_time_function A\n            ((induced_map A ^^ i) x)) \\<Longrightarrow>\n    (T ^^ n) x \\<in> A", "then"], ["proof (chain)\npicking this:\n  (T ^^ n) x = (induced_map A ^^ N) x", "show \"(T^^n) x \\<in> A\""], ["proof (prove)\nusing this:\n  (T ^^ n) x = (induced_map A ^^ N) x\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<in> A", "using \\<open>x \\<in> A\\<close> induced_map_iterates_stabilize_A"], ["proof (prove)\nusing this:\n  (T ^^ n) x = (induced_map A ^^ N) x\n  x \\<in> A\n  ?x \\<in> ?A \\<Longrightarrow> (induced_map ?A ^^ ?n) ?x \\<in> ?A\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  (T ^^ n) x \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If a map is conservative, then the induced map is still conservative.\nNote that this statement is not true if one replaces the word \"conservative\" with \"qmpt\":\ninducion only works well in conservative settings.\n\nFor instance, the right translation\non $\\mathbb{Z}$ is qmpt, but the induced map on $\\mathbb{N}$ (again the right translation) is not,\nsince the measure of $\\{0\\}$ is nonzero, while its preimage, the empty set, has zero measure.\n\nTo prove conservativity, given a subset $B$ of $A$, there exists some time $n$ such that\n$T^{-n} B \\cap B$ has positive measure. But this time $n$ corresponds to some returns to $A$ for\nthe induced map, so $T^{-n} B \\cap B$ is included in $\\bigcup_m T_A^{-m} B \\cap B$, hence\none of these sets must have positive measure.\n\nThe fact that the map is qmpt is then deduced from the conservativity.\n\\<close>"], ["", "proposition (in conservative) induced_map_conservative:\n  assumes A_meas: \"A \\<in> sets M\"\n  shows \"conservative (restrict_space M A) (induced_map A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative (restrict_space M A) (induced_map A)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<exists>Aa.\n       countable Aa \\<and>\n       Aa \\<subseteq> sets (restrict_space M A) \\<and>\n       \\<Union> Aa = space (restrict_space M A) \\<and>\n       (\\<forall>a\\<in>Aa.\n           emeasure (restrict_space M A) a \\<noteq> \\<infinity>)\n 2. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 3. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "have \"sigma_finite_measure M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure M", "by unfold_locales"], ["proof (state)\nthis:\n  sigma_finite_measure M\n\ngoal (3 subgoals):\n 1. \\<exists>Aa.\n       countable Aa \\<and>\n       Aa \\<subseteq> sets (restrict_space M A) \\<and>\n       \\<Union> Aa = space (restrict_space M A) \\<and>\n       (\\<forall>a\\<in>Aa.\n           emeasure (restrict_space M A) a \\<noteq> \\<infinity>)\n 2. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 3. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "then"], ["proof (chain)\npicking this:\n  sigma_finite_measure M", "have \"sigma_finite_measure (restrict_space M A)\""], ["proof (prove)\nusing this:\n  sigma_finite_measure M\n\ngoal (1 subgoal):\n 1. sigma_finite_measure (restrict_space M A)", "using sigma_finite_measure_restrict_space assms"], ["proof (prove)\nusing this:\n  sigma_finite_measure M\n  \\<lbrakk>sigma_finite_measure ?M; ?A \\<in> sets ?M\\<rbrakk>\n  \\<Longrightarrow> sigma_finite_measure (restrict_space ?M ?A)\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. sigma_finite_measure (restrict_space M A)", "by auto"], ["proof (state)\nthis:\n  sigma_finite_measure (restrict_space M A)\n\ngoal (3 subgoals):\n 1. \\<exists>Aa.\n       countable Aa \\<and>\n       Aa \\<subseteq> sets (restrict_space M A) \\<and>\n       \\<Union> Aa = space (restrict_space M A) \\<and>\n       (\\<forall>a\\<in>Aa.\n           emeasure (restrict_space M A) a \\<noteq> \\<infinity>)\n 2. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 3. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "then"], ["proof (chain)\npicking this:\n  sigma_finite_measure (restrict_space M A)", "show \"\\<exists>Aa. countable Aa \\<and> Aa \\<subseteq> sets (restrict_space M A) \\<and> \\<Union>Aa = space (restrict_space M A)\n    \\<and> (\\<forall>a\\<in>Aa. emeasure (restrict_space M A) a \\<noteq> \\<infinity>)\""], ["proof (prove)\nusing this:\n  sigma_finite_measure (restrict_space M A)\n\ngoal (1 subgoal):\n 1. \\<exists>Aa.\n       countable Aa \\<and>\n       Aa \\<subseteq> sets (restrict_space M A) \\<and>\n       \\<Union> Aa = space (restrict_space M A) \\<and>\n       (\\<forall>a\\<in>Aa.\n           emeasure (restrict_space M A) a \\<noteq> \\<infinity>)", "using sigma_finite_measure_def"], ["proof (prove)\nusing this:\n  sigma_finite_measure (restrict_space M A)\n  sigma_finite_measure ?M \\<equiv>\n  \\<exists>A.\n     countable A \\<and>\n     A \\<subseteq> sets ?M \\<and>\n     \\<Union> A = space ?M \\<and>\n     (\\<forall>a\\<in>A. emeasure ?M a \\<noteq> \\<infinity>)\n\ngoal (1 subgoal):\n 1. \\<exists>Aa.\n       countable Aa \\<and>\n       Aa \\<subseteq> sets (restrict_space M A) \\<and>\n       \\<Union> Aa = space (restrict_space M A) \\<and>\n       (\\<forall>a\\<in>Aa.\n           emeasure (restrict_space M A) a \\<noteq> \\<infinity>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>Aa.\n     countable Aa \\<and>\n     Aa \\<subseteq> sets (restrict_space M A) \\<and>\n     \\<Union> Aa = space (restrict_space M A) \\<and>\n     (\\<forall>a\\<in>Aa.\n         emeasure (restrict_space M A) a \\<noteq> \\<infinity>)\n\ngoal (2 subgoals):\n 1. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "have imp: \"\\<And>B. (B \\<in> sets M \\<and> B \\<subseteq> A \\<and> emeasure M B > 0) \\<Longrightarrow> (\\<exists>N>0. emeasure M (((induced_map A)^^N)-`B \\<inter> B) > 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "assume assm: \"B \\<in> sets M \\<and> B \\<subseteq> A \\<and> emeasure M B > 0\""], ["proof (state)\nthis:\n  B \\<in> sets M \\<and> B \\<subseteq> A \\<and> 0 < emeasure M B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  B \\<in> sets M \\<and> B \\<subseteq> A \\<and> 0 < emeasure M B", "have \"B \\<subseteq> A\""], ["proof (prove)\nusing this:\n  B \\<in> sets M \\<and> B \\<subseteq> A \\<and> 0 < emeasure M B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "have inc: \"(\\<Union>n\\<in>{1..}. (T^^n)-`B \\<inter> B) \\<subseteq> (\\<Union>N\\<in>{1..}. ((induced_map A)^^N)-` B \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. (T ^^ n) -` B \\<inter> B)\n    \\<subseteq> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "assume \"x \\<in> (\\<Union>n\\<in>{1..}. (T^^n)-`B \\<inter> B)\""], ["proof (state)\nthis:\n  x \\<in> (\\<Union>n\\<in>{1..}. (T ^^ n) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<Union>n\\<in>{1..}. (T ^^ n) -` B \\<inter> B)", "obtain n where \"n\\<in>{1..}\" and *: \"x \\<in> (T^^n)-`B \\<inter> B\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<Union>n\\<in>{1..}. (T ^^ n) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> {1..}; x \\<in> (T ^^ n) -` B \\<inter> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<in> {1..}\n  x \\<in> (T ^^ n) -` B \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  n \\<in> {1..}\n  x \\<in> (T ^^ n) -` B \\<inter> B", "have \"n > 0\""], ["proof (prove)\nusing this:\n  n \\<in> {1..}\n  x \\<in> (T ^^ n) -` B \\<inter> B\n\ngoal (1 subgoal):\n 1. 0 < n", "by auto"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "have \"x \\<in> A\" \"(T^^n) x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A &&& (T ^^ n) x \\<in> A", "using * \\<open>B \\<subseteq> A\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> (T ^^ n) -` B \\<inter> B\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. x \\<in> A &&& (T ^^ n) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n  (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> A\n  (T ^^ n) x \\<in> A", "obtain N where **: \"n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  (T ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        n =\n        (\\<Sum>i<N.\n            return_time_function A\n             ((induced_map A ^^ i) x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using induced_map_returns"], ["proof (prove)\nusing this:\n  x \\<in> A\n  (T ^^ n) x \\<in> A\n  ?x \\<in> ?A \\<Longrightarrow>\n  ((T ^^ ?n) ?x \\<in> ?A) =\n  (\\<exists>N\\<le>?n.\n      ?n = (\\<Sum>i<N. return_time_function ?A ((induced_map ?A ^^ i) ?x)))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        n =\n        (\\<Sum>i<N.\n            return_time_function A\n             ((induced_map A ^^ i) x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))", "have \"((induced_map A)^^N) x = (T^^n) x\""], ["proof (prove)\nusing this:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ N) x = (T ^^ n) x", "using induced_map_iterates[of N, of A, of x]"], ["proof (prove)\nusing this:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n  (induced_map A ^^ N) x =\n  (T ^^ (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))) x\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ N) x = (T ^^ n) x", "by simp"], ["proof (state)\nthis:\n  (induced_map A ^^ N) x = (T ^^ n) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  (induced_map A ^^ N) x = (T ^^ n) x", "have \"((induced_map A)^^N) x \\<in> B\""], ["proof (prove)\nusing this:\n  (induced_map A ^^ N) x = (T ^^ n) x\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ N) x \\<in> B", "using *"], ["proof (prove)\nusing this:\n  (induced_map A ^^ N) x = (T ^^ n) x\n  x \\<in> (T ^^ n) -` B \\<inter> B\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ N) x \\<in> B", "by simp"], ["proof (state)\nthis:\n  (induced_map A ^^ N) x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  (induced_map A ^^ N) x \\<in> B", "have \"x \\<in> ((induced_map A)^^N)-` B \\<inter> B\""], ["proof (prove)\nusing this:\n  (induced_map A ^^ N) x \\<in> B\n\ngoal (1 subgoal):\n 1. x \\<in> (induced_map A ^^ N) -` B \\<inter> B", "using *"], ["proof (prove)\nusing this:\n  (induced_map A ^^ N) x \\<in> B\n  x \\<in> (T ^^ n) -` B \\<inter> B\n\ngoal (1 subgoal):\n 1. x \\<in> (induced_map A ^^ N) -` B \\<inter> B", "by simp"], ["proof (state)\nthis:\n  x \\<in> (induced_map A ^^ N) -` B \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "moreover"], ["proof (state)\nthis:\n  x \\<in> (induced_map A ^^ N) -` B \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "have \"N > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < N", "using ** \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  n = (\\<Sum>i<N. return_time_function A ((induced_map A ^^ i) x))\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < N", "by (metis leD lessThan_iff less_nat_zero_code neq0_conv sum.neutral_const sum_mono)"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..}.\n                   (T ^^ n) -` B \\<inter> B) \\<Longrightarrow>\n       x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> (induced_map A ^^ N) -` B \\<inter> B\n  0 < N", "show \"x \\<in> (\\<Union>N\\<in>{1..}. ((induced_map A)^^N)-` B \\<inter> B)\""], ["proof (prove)\nusing this:\n  x \\<in> (induced_map A ^^ N) -` B \\<inter> B\n  0 < N\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>{1..}. (T ^^ n) -` B \\<inter> B)\n  \\<subseteq> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "have B_meas [measurable]: \"B \\<in> sets M\" and B_pos: \"emeasure M B > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& 0 < emeasure M B", "using assm"], ["proof (prove)\nusing this:\n  B \\<in> sets M \\<and> B \\<subseteq> A \\<and> 0 < emeasure M B\n\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& 0 < emeasure M B", "by auto"], ["proof (state)\nthis:\n  B \\<in> sets M\n  0 < emeasure M B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "obtain n where \"n > 0\" and pos: \"emeasure M ((T^^n)-`B \\<inter> B) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; 0 < emeasure M ((T ^^ n) -` B \\<inter> B)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using conservative[OF B_meas, OF B_pos]"], ["proof (prove)\nusing this:\n  \\<exists>n>0. 0 < emeasure M ((T ^^ n) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; 0 < emeasure M ((T ^^ n) -` B \\<inter> B)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < n\n  0 < emeasure M ((T ^^ n) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  0 < n\n  0 < emeasure M ((T ^^ n) -` B \\<inter> B)", "have \"n \\<in> {1..}\""], ["proof (prove)\nusing this:\n  0 < n\n  0 < emeasure M ((T ^^ n) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. n \\<in> {1..}", "by auto"], ["proof (state)\nthis:\n  n \\<in> {1..}\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "have itB_meas: \"\\<And>i. ((induced_map A)^^i)-` B \\<inter> B \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. (induced_map A ^^ i) -` B \\<inter> B \\<in> sets M", "using B_meas measurable_compose_n[OF induced_map_meas[OF A_meas]]"], ["proof (prove)\nusing this:\n  B \\<in> sets M\n  induced_map A ^^ ?n \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. \\<And>i. (induced_map A ^^ i) -` B \\<inter> B \\<in> sets M", "by (metis Int_assoc measurable_sets sets.Int sets.Int_space_eq1)"], ["proof (state)\nthis:\n  (induced_map A ^^ ?i2) -` B \\<inter> B \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  (induced_map A ^^ ?i2) -` B \\<inter> B \\<in> sets M", "have \"(\\<Union>i\\<in>{1..}. ((induced_map A)^^i)-` B \\<inter> B) \\<in> sets M\""], ["proof (prove)\nusing this:\n  (induced_map A ^^ ?i2) -` B \\<inter> B \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B) \\<in> sets M", "by measurable"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B) \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "moreover"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B) \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "have \"(T^^n)-`B \\<inter> B \\<subseteq> (\\<Union>i\\<in>{1..}. ((induced_map A)^^i)-` B \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) -` B \\<inter> B\n    \\<subseteq> (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)", "using inc \\<open>n \\<in> {1..}\\<close>"], ["proof (prove)\nusing this:\n  (\\<Union>n\\<in>{1..}. (T ^^ n) -` B \\<inter> B)\n  \\<subseteq> (\\<Union>N\\<in>{1..}. (induced_map A ^^ N) -` B \\<inter> B)\n  n \\<in> {1..}\n\ngoal (1 subgoal):\n 1. (T ^^ n) -` B \\<inter> B\n    \\<subseteq> (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)", "by force"], ["proof (state)\nthis:\n  (T ^^ n) -` B \\<inter> B\n  \\<subseteq> (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B) \\<in> sets M\n  (T ^^ n) -` B \\<inter> B\n  \\<subseteq> (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)", "have \"emeasure M (\\<Union>i\\<in>{1..}. ((induced_map A)^^i)-` B \\<inter> B) > 0\""], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B) \\<in> sets M\n  (T ^^ n) -` B \\<inter> B\n  \\<subseteq> (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. 0 < emeasure M\n         (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)", "by (metis (no_types, lifting) emeasure_eq_0 zero_less_iff_neq_zero pos)"], ["proof (state)\nthis:\n  0 < emeasure M (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  0 < emeasure M (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)", "have \"emeasure M (\\<Union>i\\<in>{1..}. ((induced_map A)^^i)-` B \\<inter> B) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < emeasure M (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. emeasure M\n     (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B) \\<noteq>\n    0", "by simp"], ["proof (state)\nthis:\n  emeasure M\n   (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "have \"\\<exists>i\\<in>{1..}. emeasure M (((induced_map A)^^i)-` B \\<inter> B) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>{1..}.\n       emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq> 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>{1..}.\n               emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq>\n               0) \\<Longrightarrow>\n    False", "assume \"\\<not>(\\<exists>i\\<in>{1..}. emeasure M (((induced_map A)^^i)-` B \\<inter> B) \\<noteq> 0)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>i\\<in>{1..}.\n             emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>{1..}.\n               emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq>\n               0) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>i\\<in>{1..}.\n             emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq> 0)", "have a: \"\\<And>i. i \\<in> {1..} \\<Longrightarrow> ((induced_map A)^^i)-` B \\<inter> B \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i\\<in>{1..}.\n             emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {1..} \\<Longrightarrow>\n       (induced_map A ^^ i) -` B \\<inter> B \\<in> null_sets M", "using itB_meas"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i\\<in>{1..}.\n             emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq> 0)\n  (induced_map A ^^ ?i2) -` B \\<inter> B \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {1..} \\<Longrightarrow>\n       (induced_map A ^^ i) -` B \\<inter> B \\<in> null_sets M", "by auto"], ["proof (state)\nthis:\n  ?i2 \\<in> {1..} \\<Longrightarrow>\n  (induced_map A ^^ ?i2) -` B \\<inter> B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>{1..}.\n               emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq>\n               0) \\<Longrightarrow>\n    False", "have \"(\\<Union>i\\<in>{1..}. ((induced_map A)^^i)-` B \\<inter> B) \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n    \\<in> null_sets M", "by (rule null_sets_UN', simp_all add: a)"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n  \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>{1..}.\n               emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq>\n               0) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n  \\<in> null_sets M", "show \"False\""], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n  \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. False", "using \\<open>emeasure M (\\<Union>i\\<in>{1..}. ((induced_map A)^^i)-` B \\<inter> B) > 0\\<close>"], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n  \\<in> null_sets M\n  0 < emeasure M (\\<Union>i\\<in>{1..}. (induced_map A ^^ i) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<in>{1..}.\n     emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets M \\<and>\n       B \\<subseteq> A \\<and> 0 < emeasure M B \\<Longrightarrow>\n       \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>{1..}.\n     emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq> 0", "show \"\\<exists>N>0. emeasure M (((induced_map A)^^N)-` B \\<inter> B) > 0\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>{1..}.\n     emeasure M ((induced_map A ^^ i) -` B \\<inter> B) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "by (simp add: Bex_def less_eq_Suc_le zero_less_iff_neq_zero)"], ["proof (state)\nthis:\n  \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?B2 \\<in> sets M \\<and>\n  ?B2 \\<subseteq> A \\<and> 0 < emeasure M ?B2 \\<Longrightarrow>\n  \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` ?B2 \\<inter> ?B2)\n\ngoal (2 subgoals):\n 1. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "define K where \"K = {B. B \\<in> sets M \\<and> B \\<subseteq> A}\""], ["proof (state)\nthis:\n  K = {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (2 subgoals):\n 1. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "have K_stable: \"(induced_map A)-`B \\<in> K\" if \"B \\<in> K\" for B"], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "have B_meas: \"B \\<in> sets M\" and \"B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& B \\<subseteq> A", "using that"], ["proof (prove)\nusing this:\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& B \\<subseteq> A", "unfolding K_def"], ["proof (prove)\nusing this:\n  B \\<in> {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& B \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  B \\<in> sets M\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "then"], ["proof (chain)\npicking this:\n  B \\<in> sets M\n  B \\<subseteq> A", "have a: \"(induced_map A)-`B \\<subseteq> A\""], ["proof (prove)\nusing this:\n  B \\<in> sets M\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A", "using induced_map_stabilizes_A"], ["proof (prove)\nusing this:\n  B \\<in> sets M\n  B \\<subseteq> A\n  (?x \\<in> ?A) = (induced_map ?A ?x \\<in> ?A)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<subseteq> A", "have \"(induced_map A)-`B = (induced_map A)-`B \\<inter> space M\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B = induced_map A -` B \\<inter> space M", "using assms sets.sets_into_space"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> A\n  A \\<in> sets M\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. induced_map A -` B = induced_map A -` B \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B = induced_map A -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B = induced_map A -` B \\<inter> space M", "have \"(induced_map A)-`B \\<in> sets M\""], ["proof (prove)\nusing this:\n  induced_map A -` B = induced_map A -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> sets M", "using induced_map_meas[OF assms] B_meas"], ["proof (prove)\nusing this:\n  induced_map A -` B = induced_map A -` B \\<inter> space M\n  induced_map A \\<in> M \\<rightarrow>\\<^sub>M M\n  B \\<in> sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> sets M", "by (metis vrestr_meas vrestr_of_set)"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<in> sets M", "show \"(induced_map A)-`B \\<in> K\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "unfolding K_def"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> {B \\<in> sets M. B \\<subseteq> A}", "using a"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> sets M\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> {B \\<in> sets M. B \\<subseteq> A}", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> K\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?B2 \\<in> K \\<Longrightarrow> induced_map A -` ?B2 \\<in> K\n\ngoal (2 subgoals):\n 1. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "define K0 where \"K0 = K \\<inter> (null_sets M)\""], ["proof (state)\nthis:\n  K0 = K \\<inter> null_sets M\n\ngoal (2 subgoals):\n 1. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "have K0_stable: \"(induced_map A)-`B \\<in> K0\" if \"B \\<in> K0\" for B"], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "have \"B \\<in> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> K", "using that"], ["proof (prove)\nusing this:\n  B \\<in> K0\n\ngoal (1 subgoal):\n 1. B \\<in> K", "unfolding K0_def"], ["proof (prove)\nusing this:\n  B \\<in> K \\<inter> null_sets M\n\ngoal (1 subgoal):\n 1. B \\<in> K", "by simp"], ["proof (state)\nthis:\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "then"], ["proof (chain)\npicking this:\n  B \\<in> K", "have a: \"(induced_map A)-`B \\<subseteq> A\" and b: \"(induced_map A)-`B \\<in> sets M\""], ["proof (prove)\nusing this:\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A &&& induced_map A -` B \\<in> sets M", "using K_stable"], ["proof (prove)\nusing this:\n  B \\<in> K\n  ?B2 \\<in> K \\<Longrightarrow> induced_map A -` ?B2 \\<in> K\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A &&& induced_map A -` B \\<in> sets M", "unfolding K_def"], ["proof (prove)\nusing this:\n  B \\<in> {B \\<in> sets M. B \\<subseteq> A}\n  ?B2 \\<in> {B \\<in> sets M. B \\<subseteq> A} \\<Longrightarrow>\n  induced_map A -` ?B2 \\<in> {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A &&& induced_map A -` B \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<subseteq> A\n  induced_map A -` B \\<in> sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "have B_meas [measurable]: \"B \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> sets M", "using \\<open>B \\<in> K\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<in> sets M", "unfolding K_def"], ["proof (prove)\nusing this:\n  B \\<in> {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. B \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  B \\<in> sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "have B0: \"B \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "using \\<open>B \\<in> K0\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> K0\n\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "unfolding K0_def"], ["proof (prove)\nusing this:\n  B \\<in> K \\<inter> null_sets M\n\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "by simp"], ["proof (state)\nthis:\n  B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "have \"(induced_map A)-`B \\<subseteq> (\\<Union>n. (T^^n)-`B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B)", "unfolding induced_map_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (T ^^ return_time_function A x) x) -` B\n    \\<subseteq> (\\<Union>n. (T ^^ n) -` B)", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B)", "have \"(induced_map A)-`B \\<subseteq> (\\<Union>n. (T^^n)-`B \\<inter> space M)\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B)\n\ngoal (1 subgoal):\n 1. induced_map A -` B\n    \\<subseteq> (\\<Union>n. (T ^^ n) -` B \\<inter> space M)", "using b sets.sets_into_space"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B)\n  induced_map A -` B \\<in> sets M\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. induced_map A -` B\n    \\<subseteq> (\\<Union>n. (T ^^ n) -` B \\<inter> space M)", "by simp blast"], ["proof (state)\nthis:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B \\<inter> space M)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B \\<inter> space M)", "have inc: \"(induced_map A)-`B \\<subseteq> (\\<Union>n. (T^^n)--`B)\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B \\<inter> space M)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) --` B)", "unfolding vimage_restr_def"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B \\<inter> space M)\n\ngoal (1 subgoal):\n 1. induced_map A -` B\n    \\<subseteq> (\\<Union>n.\n                    (T ^^ n) -` (B \\<inter> space M) \\<inter> space M)", "using sets.sets_into_space [OF B_meas]"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) -` B \\<inter> space M)\n  B \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. induced_map A -` B\n    \\<subseteq> (\\<Union>n.\n                    (T ^^ n) -` (B \\<inter> space M) \\<inter> space M)", "by simp"], ["proof (state)\nthis:\n  induced_map A -` B \\<subseteq> (\\<Union>n. (T ^^ n) --` B)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "have \"(T^^n)--`B \\<in> null_sets M\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) --` B \\<in> null_sets M", "using B0 T_quasi_preserves_null(2)[OF B_meas]"], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n  (B \\<in> null_sets M) = ((T ^^ ?n) --` B \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T ^^ n) --` B \\<in> null_sets M", "by simp"], ["proof (state)\nthis:\n  (T ^^ ?n2) --` B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "then"], ["proof (chain)\npicking this:\n  (T ^^ ?n2) --` B \\<in> null_sets M", "have \"(\\<Union>n. (T^^n)--`B) \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  (T ^^ ?n2) --` B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` B) \\<in> null_sets M", "using null_sets_UN"], ["proof (prove)\nusing this:\n  (T ^^ ?n2) --` B \\<in> null_sets M\n  (\\<And>i. ?N i \\<in> null_sets ?M) \\<Longrightarrow>\n  \\<Union> (range ?N) \\<in> null_sets ?M\n\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` B) \\<in> null_sets M", "by auto"], ["proof (state)\nthis:\n  (\\<Union>n. (T ^^ n) --` B) \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "then"], ["proof (chain)\npicking this:\n  (\\<Union>n. (T ^^ n) --` B) \\<in> null_sets M", "have \"(induced_map A)-`B \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  (\\<Union>n. (T ^^ n) --` B) \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> null_sets M", "using null_sets_subset[OF _ b inc]"], ["proof (prove)\nusing this:\n  (\\<Union>n. (T ^^ n) --` B) \\<in> null_sets M\n  (\\<Union>n. (T ^^ n) --` B) \\<in> null_sets M \\<Longrightarrow>\n  induced_map A -` B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> null_sets M", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<in> null_sets M", "show \"(induced_map A)-`B \\<in> K0\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "unfolding K0_def K_def"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B\n    \\<in> {B \\<in> sets M. B \\<subseteq> A} \\<inter> null_sets M", "by (simp add: a b)"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> K0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?B2 \\<in> K0 \\<Longrightarrow> induced_map A -` ?B2 \\<in> K0\n\ngoal (2 subgoals):\n 1. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "have *: \"D \\<in> null_sets M \\<longleftrightarrow> D \\<in> null_sets (restrict_space M A)\" if \"D\\<in>K\" for D"], ["proof (prove)\ngoal (1 subgoal):\n 1. (D \\<in> null_sets M) = (D \\<in> null_sets (restrict_space M A))", "using that"], ["proof (prove)\nusing this:\n  D \\<in> K\n\ngoal (1 subgoal):\n 1. (D \\<in> null_sets M) = (D \\<in> null_sets (restrict_space M A))", "unfolding K_def"], ["proof (prove)\nusing this:\n  D \\<in> {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. (D \\<in> null_sets M) = (D \\<in> null_sets (restrict_space M A))", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>D \\<in> sets M; D \\<subseteq> A; D \\<in> null_sets M\\<rbrakk>\n    \\<Longrightarrow> D \\<in> null_sets (restrict_space M A)\n 2. \\<lbrakk>D \\<in> sets M; D \\<subseteq> A;\n     D \\<in> null_sets (restrict_space M A)\\<rbrakk>\n    \\<Longrightarrow> D \\<in> null_sets M", "apply (metis assms emeasure_restrict_space null_setsD1 null_setsI sets.Int_space_eq2 sets_restrict_space_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D \\<in> sets M; D \\<subseteq> A;\n     D \\<in> null_sets (restrict_space M A)\\<rbrakk>\n    \\<Longrightarrow> D \\<in> null_sets M", "by (metis assms emeasure_restrict_space null_setsD1 null_setsI sets.Int_space_eq2)"], ["proof (state)\nthis:\n  ?D2 \\<in> K \\<Longrightarrow>\n  (?D2 \\<in> null_sets M) = (?D2 \\<in> null_sets (restrict_space M A))\n\ngoal (2 subgoals):\n 1. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "show \"induced_map A \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)", "unfolding quasi_measure_preserving_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> {f \\<in> restrict_space M A \\<rightarrow>\\<^sub>M\n                   restrict_space M A.\n           \\<forall>Aa\\<in>sets (restrict_space M A).\n              (f -` Aa \\<inter> space (restrict_space M A)\n               \\<in> null_sets (restrict_space M A)) =\n              (Aa \\<in> null_sets (restrict_space M A))}", "proof (auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. induced_map A\n    \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 3. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "have \"induced_map A \\<in> A \\<rightarrow> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A \\<in> A \\<rightarrow> A", "using induced_map_stabilizes_A"], ["proof (prove)\nusing this:\n  (?x \\<in> ?A) = (induced_map ?A ?x \\<in> ?A)\n\ngoal (1 subgoal):\n 1. induced_map A \\<in> A \\<rightarrow> A", "by auto"], ["proof (state)\nthis:\n  induced_map A \\<in> A \\<rightarrow> A\n\ngoal (3 subgoals):\n 1. induced_map A\n    \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 3. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  induced_map A \\<in> A \\<rightarrow> A", "show a: \"induced_map A \\<in> measurable (restrict_space M A) (restrict_space M A)\""], ["proof (prove)\nusing this:\n  induced_map A \\<in> A \\<rightarrow> A\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A", "using measurable_restrict_space3[where ?A = A and ?B = A and ?M = M and ?N = M] induced_map_meas[OF A_meas]"], ["proof (prove)\nusing this:\n  induced_map A \\<in> A \\<rightarrow> A\n  \\<lbrakk>?f \\<in> M \\<rightarrow>\\<^sub>M M;\n   ?f \\<in> A \\<rightarrow> A\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> restrict_space M A \\<rightarrow>\\<^sub>M\n                             restrict_space M A\n  induced_map A \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A", "by auto"], ["proof (state)\nthis:\n  induced_map A\n  \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "fix B"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "assume H: \"B \\<in> sets (restrict_space M A)\"\n                    \"induced_map A -`B \\<inter> space (restrict_space M A) \\<in> null_sets (restrict_space M A)\""], ["proof (state)\nthis:\n  B \\<in> sets (restrict_space M A)\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  \\<in> null_sets (restrict_space M A)\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  B \\<in> sets (restrict_space M A)\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  \\<in> null_sets (restrict_space M A)", "have \"B \\<in> K\""], ["proof (prove)\nusing this:\n  B \\<in> sets (restrict_space M A)\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. B \\<in> K", "unfolding K_def"], ["proof (prove)\nusing this:\n  B \\<in> sets (restrict_space M A)\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. B \\<in> {B \\<in> sets M. B \\<subseteq> A}", "by (metis assms mem_Collect_eq sets.Int_space_eq2 sets_restrict_space_iff)"], ["proof (state)\nthis:\n  B \\<in> K\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  B \\<in> K", "have B_meas [measurable]: \"B \\<in> sets M\" and B_incl: \"B \\<subseteq> A\""], ["proof (prove)\nusing this:\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& B \\<subseteq> A", "unfolding K_def"], ["proof (prove)\nusing this:\n  B \\<in> {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& B \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  B \\<in> sets M\n  B \\<subseteq> A\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "have \"induced_map A -`B \\<in> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "using K_stable \\<open>B \\<in> K\\<close>"], ["proof (prove)\nusing this:\n  ?B2 \\<in> K \\<Longrightarrow> induced_map A -` ?B2 \\<in> K\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> K\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<in> K", "have B2_meas: \"induced_map A -`B \\<in> sets M\" and B2_incl: \"induced_map A -`B \\<subseteq> A\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> K\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> sets M &&& induced_map A -` B \\<subseteq> A", "unfolding K_def"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> sets M &&& induced_map A -` B \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> sets M\n  induced_map A -` B \\<subseteq> A\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "have \"induced_map A -` B = induced_map A -`B \\<inter> space (restrict_space M A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A -` B =\n    induced_map A -` B \\<inter> space (restrict_space M A)", "using B2_incl"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B =\n    induced_map A -` B \\<inter> space (restrict_space M A)", "by (simp add: Int_absorb2 assms space_restrict_space)"], ["proof (state)\nthis:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)", "have \"induced_map A -` B \\<in> null_sets (restrict_space M A)\""], ["proof (prove)\nusing this:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> null_sets (restrict_space M A)", "using H(2)"], ["proof (prove)\nusing this:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> null_sets (restrict_space M A)", "by simp"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> null_sets (restrict_space M A)\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<in> null_sets (restrict_space M A)", "have \"induced_map A -` B \\<in> K0\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "unfolding K0_def"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K \\<inter> null_sets M", "using \\<open>induced_map A -`B \\<in> K\\<close> *"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> null_sets (restrict_space M A)\n  induced_map A -` B \\<in> K\n  ?D2 \\<in> K \\<Longrightarrow>\n  (?D2 \\<in> null_sets M) = (?D2 \\<in> null_sets (restrict_space M A))\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K \\<inter> null_sets M", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> K0\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "{"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> K0\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "have *: \"((induced_map A)^^(n+1))-`B \\<in> K0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ (n + 1)) -` B \\<in> K0", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. (induced_map A ^^ (0 + 1)) -` B \\<in> K0\n 2. \\<And>n.\n       (induced_map A ^^ (n + 1)) -` B \\<in> K0 \\<Longrightarrow>\n       (induced_map A ^^ (Suc n + 1)) -` B \\<in> K0", "case (Suc n)"], ["proof (state)\nthis:\n  (induced_map A ^^ (n + 1)) -` B \\<in> K0\n\ngoal (2 subgoals):\n 1. (induced_map A ^^ (0 + 1)) -` B \\<in> K0\n 2. \\<And>n.\n       (induced_map A ^^ (n + 1)) -` B \\<in> K0 \\<Longrightarrow>\n       (induced_map A ^^ (Suc n + 1)) -` B \\<in> K0", "have \"((induced_map A)^^(Suc n+1))-`B = (induced_map A)-`(((induced_map A)^^(n+1))-` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ (Suc n + 1)) -` B =\n    induced_map A -` (induced_map A ^^ (n + 1)) -` B", "by (metis Suc_eq_plus1 funpow_Suc_right vimage_comp)"], ["proof (state)\nthis:\n  (induced_map A ^^ (Suc n + 1)) -` B =\n  induced_map A -` (induced_map A ^^ (n + 1)) -` B\n\ngoal (2 subgoals):\n 1. (induced_map A ^^ (0 + 1)) -` B \\<in> K0\n 2. \\<And>n.\n       (induced_map A ^^ (n + 1)) -` B \\<in> K0 \\<Longrightarrow>\n       (induced_map A ^^ (Suc n + 1)) -` B \\<in> K0", "then"], ["proof (chain)\npicking this:\n  (induced_map A ^^ (Suc n + 1)) -` B =\n  induced_map A -` (induced_map A ^^ (n + 1)) -` B", "show ?case"], ["proof (prove)\nusing this:\n  (induced_map A ^^ (Suc n + 1)) -` B =\n  induced_map A -` (induced_map A ^^ (n + 1)) -` B\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ (Suc n + 1)) -` B \\<in> K0", "by (metis Suc.IH K0_stable)"], ["proof (state)\nthis:\n  (induced_map A ^^ (Suc n + 1)) -` B \\<in> K0\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ (0 + 1)) -` B \\<in> K0", "qed (auto simp add: \\<open>induced_map A -` B \\<in> K0\\<close>)"], ["proof (state)\nthis:\n  (induced_map A ^^ (n + 1)) -` B \\<in> K0\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "have **: \"((induced_map A)^^(n+1))-` B \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ (n + 1)) -` B \\<in> sets M", "using * K0_def K_def"], ["proof (prove)\nusing this:\n  (induced_map A ^^ (n + 1)) -` B \\<in> K0\n  K0 = K \\<inter> null_sets M\n  K = {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ (n + 1)) -` B \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  (induced_map A ^^ (n + 1)) -` B \\<in> sets M\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "have \"((induced_map A)^^(n+1))-` B \\<inter> B \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (induced_map A ^^ (n + 1)) -` B \\<inter> B \\<in> null_sets M", "apply (rule null_sets_subset[of \"((induced_map A)^^(n+1))-`B\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. (induced_map A ^^ (n + 1)) -` B \\<in> null_sets M\n 2. (induced_map A ^^ (n + 1)) -` B \\<inter> B \\<in> sets M\n 3. (induced_map A ^^ (n + 1)) -` B \\<inter> B\n    \\<subseteq> (induced_map A ^^ (n + 1)) -` B", "using *"], ["proof (prove)\nusing this:\n  (induced_map A ^^ (n + 1)) -` B \\<in> K0\n\ngoal (3 subgoals):\n 1. (induced_map A ^^ (n + 1)) -` B \\<in> null_sets M\n 2. (induced_map A ^^ (n + 1)) -` B \\<inter> B \\<in> sets M\n 3. (induced_map A ^^ (n + 1)) -` B \\<inter> B\n    \\<subseteq> (induced_map A ^^ (n + 1)) -` B", "unfolding K0_def"], ["proof (prove)\nusing this:\n  (induced_map A ^^ (n + 1)) -` B \\<in> K \\<inter> null_sets M\n\ngoal (3 subgoals):\n 1. (induced_map A ^^ (n + 1)) -` B \\<in> null_sets M\n 2. (induced_map A ^^ (n + 1)) -` B \\<inter> B \\<in> sets M\n 3. (induced_map A ^^ (n + 1)) -` B \\<inter> B\n    \\<subseteq> (induced_map A ^^ (n + 1)) -` B", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (induced_map A ^^ (n + 1)) -` B \\<inter> B \\<in> sets M\n 2. (induced_map A ^^ (n + 1)) -` B \\<inter> B\n    \\<subseteq> (induced_map A ^^ (n + 1)) -` B", "using **"], ["proof (prove)\nusing this:\n  (induced_map A ^^ (n + 1)) -` B \\<in> sets M\n\ngoal (2 subgoals):\n 1. (induced_map A ^^ (n + 1)) -` B \\<inter> B \\<in> sets M\n 2. (induced_map A ^^ (n + 1)) -` B \\<inter> B\n    \\<subseteq> (induced_map A ^^ (n + 1)) -` B", "by auto"], ["proof (state)\nthis:\n  (induced_map A ^^ (n + 1)) -` B \\<inter> B \\<in> null_sets M\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "}"], ["proof (state)\nthis:\n  (induced_map A ^^ (?n4 + 1)) -` B \\<inter> B \\<in> null_sets M\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  (induced_map A ^^ (?n4 + 1)) -` B \\<inter> B \\<in> null_sets M", "have \"((induced_map A)^^n)-` B \\<inter> B \\<in> null_sets M\" if \"n>0\" for n"], ["proof (prove)\nusing this:\n  (induced_map A ^^ (?n4 + 1)) -` B \\<inter> B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) -` B \\<inter> B \\<in> null_sets M", "using that"], ["proof (prove)\nusing this:\n  (induced_map A ^^ (?n4 + 1)) -` B \\<inter> B \\<in> null_sets M\n  0 < n\n\ngoal (1 subgoal):\n 1. (induced_map A ^^ n) -` B \\<inter> B \\<in> null_sets M", "by (metis Suc_eq_plus1 neq0_conv not0_implies_Suc)"], ["proof (state)\nthis:\n  0 < ?n2 \\<Longrightarrow>\n  (induced_map A ^^ ?n2) -` B \\<inter> B \\<in> null_sets M\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  0 < ?n2 \\<Longrightarrow>\n  (induced_map A ^^ ?n2) -` B \\<inter> B \\<in> null_sets M", "have \"B \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  0 < ?n2 \\<Longrightarrow>\n  (induced_map A ^^ ?n2) -` B \\<inter> B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "using imp B_incl B_meas zero_less_iff_neq_zero inf.strict_order_iff"], ["proof (prove)\nusing this:\n  0 < ?n2 \\<Longrightarrow>\n  (induced_map A ^^ ?n2) -` B \\<inter> B \\<in> null_sets M\n  ?B2 \\<in> sets M \\<and>\n  ?B2 \\<subseteq> A \\<and> 0 < emeasure M ?B2 \\<Longrightarrow>\n  \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` ?B2 \\<inter> ?B2)\n  B \\<subseteq> A\n  B \\<in> sets M\n  ((0::?'a) < ?n) = (?n \\<noteq> (0::?'a))\n  (?a < ?b) = (?a = ?a \\<sqinter> ?b \\<and> ?a \\<noteq> ?b)\n\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "by (metis null_setsD1 null_setsI)"], ["proof (state)\nthis:\n  B \\<in> null_sets M\n\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        induced_map A -` Aa \\<inter> space (restrict_space M A)\n        \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> Aa \\<in> null_sets (restrict_space M A)\n 2. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  B \\<in> null_sets M", "show \"B \\<in> null_sets (restrict_space M A)\""], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. B \\<in> null_sets (restrict_space M A)", "using * \\<open>B \\<in> K\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n  ?D2 \\<in> K \\<Longrightarrow>\n  (?D2 \\<in> null_sets M) = (?D2 \\<in> null_sets (restrict_space M A))\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<in> null_sets (restrict_space M A)", "by auto"], ["proof (state)\nthis:\n  B \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "assume H: \"B \\<in> sets (restrict_space M A)\"\n                    \"B \\<in> null_sets (restrict_space M A)\""], ["proof (state)\nthis:\n  B \\<in> sets (restrict_space M A)\n  B \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  B \\<in> sets (restrict_space M A)\n  B \\<in> null_sets (restrict_space M A)", "have \"B \\<in> K\""], ["proof (prove)\nusing this:\n  B \\<in> sets (restrict_space M A)\n  B \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. B \\<in> K", "unfolding K_def"], ["proof (prove)\nusing this:\n  B \\<in> sets (restrict_space M A)\n  B \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. B \\<in> {B \\<in> sets M. B \\<subseteq> A}", "by (metis assms mem_Collect_eq sets.Int_space_eq2 sets_restrict_space_iff)"], ["proof (state)\nthis:\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  B \\<in> K", "have B_meas [measurable]: \"B \\<in> sets M\" and B_incl: \"B \\<subseteq> A\""], ["proof (prove)\nusing this:\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& B \\<subseteq> A", "unfolding K_def"], ["proof (prove)\nusing this:\n  B \\<in> {B \\<in> sets M. B \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. B \\<in> sets M &&& B \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  B \\<in> sets M\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "have \"B \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "using * H(2) \\<open>B \\<in> K\\<close>"], ["proof (prove)\nusing this:\n  ?D2 \\<in> K \\<Longrightarrow>\n  (?D2 \\<in> null_sets M) = (?D2 \\<in> null_sets (restrict_space M A))\n  B \\<in> null_sets (restrict_space M A)\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "by simp"], ["proof (state)\nthis:\n  B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  B \\<in> null_sets M", "have \"B \\<in> K0\""], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. B \\<in> K0", "unfolding K0_def"], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. B \\<in> K \\<inter> null_sets M", "using \\<open>B \\<in> K\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n  B \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<in> K \\<inter> null_sets M", "by simp"], ["proof (state)\nthis:\n  B \\<in> K0\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  B \\<in> K0", "have inK: \"(induced_map A)-`B \\<in> K0\""], ["proof (prove)\nusing this:\n  B \\<in> K0\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "using K0_stable"], ["proof (prove)\nusing this:\n  B \\<in> K0\n  ?B2 \\<in> K0 \\<Longrightarrow> induced_map A -` ?B2 \\<in> K0\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<in> K0", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<in> K0\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<in> K0", "have inA: \"(induced_map A)-`B \\<subseteq> A\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<in> K0\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A", "unfolding K0_def K_def"], ["proof (prove)\nusing this:\n  induced_map A -` B\n  \\<in> {B \\<in> sets M. B \\<subseteq> A} \\<inter> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<subseteq> A", "have \"(induced_map A)-`B = (induced_map A)-`B \\<inter> space (restrict_space M A)\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B =\n    induced_map A -` B \\<inter> space (restrict_space M A)", "by (simp add: Int_absorb2 assms space_restrict_space2)"], ["proof (state)\nthis:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        Aa \\<in> null_sets (restrict_space M A)\\<rbrakk>\n       \\<Longrightarrow> induced_map A -` Aa \\<inter>\n                         space (restrict_space M A)\n                         \\<in> null_sets (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)", "show \"induced_map A -` B \\<inter> space (restrict_space M A) \\<in> null_sets (restrict_space M A)\""], ["proof (prove)\nusing this:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<inter> space (restrict_space M A)\n    \\<in> null_sets (restrict_space M A)", "using * inK"], ["proof (prove)\nusing this:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  ?D2 \\<in> K \\<Longrightarrow>\n  (?D2 \\<in> null_sets M) = (?D2 \\<in> null_sets (restrict_space M A))\n  induced_map A -` B \\<in> K0\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<inter> space (restrict_space M A)\n    \\<in> null_sets (restrict_space M A)", "unfolding K0_def"], ["proof (prove)\nusing this:\n  induced_map A -` B =\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  ?D2 \\<in> K \\<Longrightarrow>\n  (?D2 \\<in> null_sets M) = (?D2 \\<in> null_sets (restrict_space M A))\n  induced_map A -` B \\<in> K \\<inter> null_sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<inter> space (restrict_space M A)\n    \\<in> null_sets (restrict_space M A)", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<inter> space (restrict_space M A)\n  \\<in> null_sets (restrict_space M A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  induced_map A\n  \\<in> quasi_measure_preserving (restrict_space M A) (restrict_space M A)\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "assume B_measA: \"B \\<in> sets (restrict_space M A)\" and B_posA: \"0 < emeasure (restrict_space M A) B\""], ["proof (state)\nthis:\n  B \\<in> sets (restrict_space M A)\n  0 < emeasure (restrict_space M A) B\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "then"], ["proof (chain)\npicking this:\n  B \\<in> sets (restrict_space M A)\n  0 < emeasure (restrict_space M A) B", "have B_meas: \"B \\<in> sets M\""], ["proof (prove)\nusing this:\n  B \\<in> sets (restrict_space M A)\n  0 < emeasure (restrict_space M A) B\n\ngoal (1 subgoal):\n 1. B \\<in> sets M", "by (metis assms sets.Int_space_eq2 sets_restrict_space_iff)"], ["proof (state)\nthis:\n  B \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "have B_incl: \"B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> A", "by (metis B_measA assms sets.Int_space_eq2 sets_restrict_space_iff)"], ["proof (state)\nthis:\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "then"], ["proof (chain)\npicking this:\n  B \\<subseteq> A", "have B_pos: \"0 < emeasure M B\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. 0 < emeasure M B", "using B_posA"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  0 < emeasure (restrict_space M A) B\n\ngoal (1 subgoal):\n 1. 0 < emeasure M B", "by (simp add: assms emeasure_restrict_space)"], ["proof (state)\nthis:\n  0 < emeasure M B\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "obtain N where \"N>0\" \"emeasure M (((induced_map A)^^N)-`B \\<inter> B) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>0 < N;\n         0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using imp B_meas B_incl B_pos"], ["proof (prove)\nusing this:\n  ?B2 \\<in> sets M \\<and>\n  ?B2 \\<subseteq> A \\<and> 0 < emeasure M ?B2 \\<Longrightarrow>\n  \\<exists>N>0. 0 < emeasure M ((induced_map A ^^ N) -` ?B2 \\<inter> ?B2)\n  B \\<in> sets M\n  B \\<subseteq> A\n  0 < emeasure M B\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>0 < N;\n         0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < N\n  0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "then"], ["proof (chain)\npicking this:\n  0 < N\n  0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)", "have \"emeasure (restrict_space M A) ((induced_map A ^^ N) -` B \\<inter> B) > 0\""], ["proof (prove)\nusing this:\n  0 < N\n  0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. 0 < emeasure (restrict_space M A) ((induced_map A ^^ N) -` B \\<inter> B)", "using assms emeasure_restrict_space"], ["proof (prove)\nusing this:\n  0 < N\n  0 < emeasure M ((induced_map A ^^ N) -` B \\<inter> B)\n  A \\<in> sets M\n  \\<lbrakk>?\\<Omega> \\<inter> space ?M \\<in> sets ?M;\n   ?A \\<subseteq> ?\\<Omega>\\<rbrakk>\n  \\<Longrightarrow> emeasure (restrict_space ?M ?\\<Omega>) ?A =\n                    emeasure ?M ?A\n\ngoal (1 subgoal):\n 1. 0 < emeasure (restrict_space M A) ((induced_map A ^^ N) -` B \\<inter> B)", "by (metis B_incl Int_lower2 sets.Int_space_eq2 subset_trans)"], ["proof (state)\nthis:\n  0 < emeasure (restrict_space M A) ((induced_map A ^^ N) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>Aa \\<in> sets (restrict_space M A);\n        0 < emeasure (restrict_space M A) Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n>0.\n                            0 < emeasure (restrict_space M A)\n                                 ((induced_map A ^^ n) -` Aa \\<inter> Aa)", "then"], ["proof (chain)\npicking this:\n  0 < emeasure (restrict_space M A) ((induced_map A ^^ N) -` B \\<inter> B)", "show \"\\<exists>n>0. 0 < emeasure (restrict_space M A) ((induced_map A ^^ n) -` B \\<inter> B)\""], ["proof (prove)\nusing this:\n  0 < emeasure (restrict_space M A) ((induced_map A ^^ N) -` B \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<exists>n>0.\n       0 < emeasure (restrict_space M A)\n            ((induced_map A ^^ n) -` B \\<inter> B)", "using \\<open>N > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < emeasure (restrict_space M A) ((induced_map A ^^ N) -` B \\<inter> B)\n  0 < N\n\ngoal (1 subgoal):\n 1. \\<exists>n>0.\n       0 < emeasure (restrict_space M A)\n            ((induced_map A ^^ n) -` B \\<inter> B)", "by auto"], ["proof (state)\nthis:\n  \\<exists>n>0.\n     0 < emeasure (restrict_space M A)\n          ((induced_map A ^^ n) -` B \\<inter> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now, we want to prove that, if a map is conservative and measure preserving, then\nthe induced map is also measure preserving. We first prove it for subsets $W$ of $A$ of finite\nmeasure, the general case will readily follow.\n\nThe argument uses the fact that the preimage of the set of points with first entrance time $n$\nis the union of the set of points with first entrance time $n+1$, and the points of $A$ with\nfirst return $n+1$. Following the preimage of $W$ under this process, we will get the intersection\nof $T_A^{-1} W$ with the different elements of the return partition, and the points in $T^{-n}W$\nwhose first $n-1$ iterates do not meet $A$ (and the measures of these sets add up to $\\mu(W)$).\nTo conclude, it suffices to show that the measure of points in $T^{-n}W$\nwhose first $n-1$ iterates do not meet $A$ tends to $0$. This follows from our local times\nestimates above.\\<close>"], ["", "lemma (in conservative_mpt) induced_map_measure_preserving_aux:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and W_meas [measurable]: \"W \\<in> sets M\"\n      and incl: \"W \\<subseteq> A\"\n      and fin: \"emeasure M W < \\<infinity>\"\n  shows \"emeasure M ((induced_map A)--`W) = emeasure M W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"W \\<subseteq> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W \\<subseteq> space M", "using W_meas"], ["proof (prove)\nusing this:\n  W \\<in> sets M\n\ngoal (1 subgoal):\n 1. W \\<subseteq> space M", "using sets.sets_into_space"], ["proof (prove)\nusing this:\n  W \\<in> sets M\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. W \\<subseteq> space M", "by blast"], ["proof (state)\nthis:\n  W \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "define BW where \"BW = (\\<lambda>n. (first_entrance_set A n) \\<inter> (T^^n)--`W)\""], ["proof (state)\nthis:\n  BW = (\\<lambda>n. first_entrance_set A n \\<inter> (T ^^ n) --` W)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "define DW where \"DW = (\\<lambda>n. (return_time_function A)-` {n} \\<inter> (induced_map A)--`W)\""], ["proof (state)\nthis:\n  DW =\n  (\\<lambda>n. return_time_function A -` {n} \\<inter> induced_map A --` W)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"\\<And>n. DW n = (return_time_function A)-` {n} \\<inter> space M \\<inter> (induced_map A)--`W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       DW n =\n       return_time_function A -` {n} \\<inter> space M \\<inter>\n       induced_map A --` W", "using DW_def"], ["proof (prove)\nusing this:\n  DW =\n  (\\<lambda>n. return_time_function A -` {n} \\<inter> induced_map A --` W)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       DW n =\n       return_time_function A -` {n} \\<inter> space M \\<inter>\n       induced_map A --` W", "by auto"], ["proof (state)\nthis:\n  DW ?n3 =\n  return_time_function A -` {?n3} \\<inter> space M \\<inter>\n  induced_map A --` W\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "then"], ["proof (chain)\npicking this:\n  DW ?n3 =\n  return_time_function A -` {?n3} \\<inter> space M \\<inter>\n  induced_map A --` W", "have DW_meas [measurable]: \"\\<And>n. DW n \\<in> sets M\""], ["proof (prove)\nusing this:\n  DW ?n3 =\n  return_time_function A -` {?n3} \\<inter> space M \\<inter>\n  induced_map A --` W\n\ngoal (1 subgoal):\n 1. \\<And>n. DW n \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  DW ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have disj_DW: \"disjoint_family (\\<lambda>n. DW n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family DW", "using DW_def disjoint_family_on_def"], ["proof (prove)\nusing this:\n  DW =\n  (\\<lambda>n. return_time_function A -` {n} \\<inter> induced_map A --` W)\n  disjoint_family_on ?A ?S =\n  (\\<forall>m\\<in>?S.\n      \\<forall>n\\<in>?S.\n         m \\<noteq> n \\<longrightarrow> ?A m \\<inter> ?A n = {})\n\ngoal (1 subgoal):\n 1. disjoint_family DW", "by blast"], ["proof (state)\nthis:\n  disjoint_family DW\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "then"], ["proof (chain)\npicking this:\n  disjoint_family DW", "have disj_DW2: \"disjoint_family (\\<lambda>n. DW (n+1))\""], ["proof (prove)\nusing this:\n  disjoint_family DW\n\ngoal (1 subgoal):\n 1. disjoint_family (\\<lambda>n. DW (n + 1))", "by (simp add: disjoint_family_on_def)"], ["proof (state)\nthis:\n  disjoint_family (\\<lambda>n. DW (n + 1))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"(\\<Union>n. DW n) = DW 0 \\<union> (\\<Union>n. DW (n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range DW) = DW 0 \\<union> (\\<Union>n. DW (n + 1))", "by (auto) (metis not0_implies_Suc)"], ["proof (state)\nthis:\n  \\<Union> (range DW) = DW 0 \\<union> (\\<Union>n. DW (n + 1))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "moreover"], ["proof (state)\nthis:\n  \\<Union> (range DW) = DW 0 \\<union> (\\<Union>n. DW (n + 1))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"(DW 0) \\<inter> (\\<Union>n. DW (n+1)) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DW 0 \\<inter> (\\<Union>n. DW (n + 1)) = {}", "by (auto) (metis IntI Suc_neq_Zero UNIV_I empty_iff disj_DW disjoint_family_on_def)"], ["proof (state)\nthis:\n  DW 0 \\<inter> (\\<Union>n. DW (n + 1)) = {}\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "ultimately"], ["proof (chain)\npicking this:\n  \\<Union> (range DW) = DW 0 \\<union> (\\<Union>n. DW (n + 1))\n  DW 0 \\<inter> (\\<Union>n. DW (n + 1)) = {}", "have *: \"emeasure M (\\<Union>n. DW n) = emeasure M (DW 0) + emeasure M (\\<Union>n. DW (n+1))\""], ["proof (prove)\nusing this:\n  \\<Union> (range DW) = DW 0 \\<union> (\\<Union>n. DW (n + 1))\n  DW 0 \\<inter> (\\<Union>n. DW (n + 1)) = {}\n\ngoal (1 subgoal):\n 1. emeasure M (\\<Union> (range DW)) =\n    emeasure M (DW 0) + emeasure M (\\<Union>n. DW (n + 1))", "by (simp add: countable_Un_Int(1) plus_emeasure)"], ["proof (state)\nthis:\n  emeasure M (\\<Union> (range DW)) =\n  emeasure M (DW 0) + emeasure M (\\<Union>n. DW (n + 1))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"DW 0 = (return_time_function A)-` {0} \\<inter> W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DW 0 = return_time_function A -` {0} \\<inter> W", "unfolding DW_def induced_map_def return_time_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        if x \\<in> recurrent_subset A\n        then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) x \\<in> A} else 0) -`\n    {0} \\<inter>\n    (\\<lambda>x.\n        (T ^^\n         (if x \\<in> recurrent_subset A\n          then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) x \\<in> A} else 0))\n         x) --`\n    W =\n    (\\<lambda>x.\n        if x \\<in> recurrent_subset A\n        then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) x \\<in> A} else 0) -`\n    {0} \\<inter>\n    W", "apply (auto simp add: return_time0[of A])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> W;\n        (if x \\<in> recurrent_subset A\n         then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) x \\<in> A} else 0) =\n        0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> space M", "using sets.sets_into_space[OF W_meas]"], ["proof (prove)\nusing this:\n  W \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> W;\n        (if x \\<in> recurrent_subset A\n         then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) x \\<in> A} else 0) =\n        0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> space M", "by auto"], ["proof (state)\nthis:\n  DW 0 = return_time_function A -` {0} \\<inter> W\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "also"], ["proof (state)\nthis:\n  DW 0 = return_time_function A -` {0} \\<inter> W\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"... = W - recurrent_subset A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {0} \\<inter> W = W - recurrent_subset A", "using return_time0"], ["proof (prove)\nusing this:\n  return_time_function ?A -` {0} = UNIV - recurrent_subset ?A\n\ngoal (1 subgoal):\n 1. return_time_function A -` {0} \\<inter> W = W - recurrent_subset A", "by blast"], ["proof (state)\nthis:\n  return_time_function A -` {0} \\<inter> W = W - recurrent_subset A\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "also"], ["proof (state)\nthis:\n  return_time_function A -` {0} \\<inter> W = W - recurrent_subset A\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"... \\<subseteq> A - recurrent_subset A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W - recurrent_subset A \\<subseteq> A - recurrent_subset A", "using incl"], ["proof (prove)\nusing this:\n  W \\<subseteq> A\n\ngoal (1 subgoal):\n 1. W - recurrent_subset A \\<subseteq> A - recurrent_subset A", "by blast"], ["proof (state)\nthis:\n  W - recurrent_subset A \\<subseteq> A - recurrent_subset A\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "finally"], ["proof (chain)\npicking this:\n  DW 0 \\<subseteq> A - recurrent_subset A", "have \"DW 0 \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  DW 0 \\<subseteq> A - recurrent_subset A\n\ngoal (1 subgoal):\n 1. DW 0 \\<in> null_sets M", "by (metis A_meas DW_meas null_sets_subset Poincare_recurrence_thm(1))"], ["proof (state)\nthis:\n  DW 0 \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "then"], ["proof (chain)\npicking this:\n  DW 0 \\<in> null_sets M", "have \"emeasure M (DW 0) = 0\""], ["proof (prove)\nusing this:\n  DW 0 \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. emeasure M (DW 0) = 0", "by auto"], ["proof (state)\nthis:\n  emeasure M (DW 0) = 0\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"(induced_map A)--`W = (\\<Union>n. DW n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A --` W = \\<Union> (range DW)", "using DW_def"], ["proof (prove)\nusing this:\n  DW =\n  (\\<lambda>n. return_time_function A -` {n} \\<inter> induced_map A --` W)\n\ngoal (1 subgoal):\n 1. induced_map A --` W = \\<Union> (range DW)", "by blast"], ["proof (state)\nthis:\n  induced_map A --` W = \\<Union> (range DW)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "then"], ["proof (chain)\npicking this:\n  induced_map A --` W = \\<Union> (range DW)", "have \"emeasure M ((induced_map A)--`W) = emeasure M (\\<Union>n. DW n)\""], ["proof (prove)\nusing this:\n  induced_map A --` W = \\<Union> (range DW)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M (\\<Union> (range DW))", "by simp"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` W) = emeasure M (\\<Union> (range DW))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "also"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` W) = emeasure M (\\<Union> (range DW))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"... = emeasure M (\\<Union>n. DW (n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (\\<Union> (range DW)) = emeasure M (\\<Union>n. DW (n + 1))", "using * \\<open>emeasure M (DW 0) = 0\\<close>"], ["proof (prove)\nusing this:\n  emeasure M (\\<Union> (range DW)) =\n  emeasure M (DW 0) + emeasure M (\\<Union>n. DW (n + 1))\n  emeasure M (DW 0) = 0\n\ngoal (1 subgoal):\n 1. emeasure M (\\<Union> (range DW)) = emeasure M (\\<Union>n. DW (n + 1))", "by simp"], ["proof (state)\nthis:\n  emeasure M (\\<Union> (range DW)) = emeasure M (\\<Union>n. DW (n + 1))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "also"], ["proof (state)\nthis:\n  emeasure M (\\<Union> (range DW)) = emeasure M (\\<Union>n. DW (n + 1))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"... = (\\<Sum>n. emeasure M (DW (n+1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (\\<Union>n. DW (n + 1)) = (\\<Sum>n. emeasure M (DW (n + 1)))", "apply (rule suminf_emeasure[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. range (\\<lambda>i. DW (i + 1)) \\<subseteq> sets M\n 2. disjoint_family (\\<lambda>i. DW (i + 1))", "using disj_DW2"], ["proof (prove)\nusing this:\n  disjoint_family (\\<lambda>n. DW (n + 1))\n\ngoal (2 subgoals):\n 1. range (\\<lambda>i. DW (i + 1)) \\<subseteq> sets M\n 2. disjoint_family (\\<lambda>i. DW (i + 1))", "by auto"], ["proof (state)\nthis:\n  emeasure M (\\<Union>n. DW (n + 1)) = (\\<Sum>n. emeasure M (DW (n + 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "finally"], ["proof (chain)\npicking this:\n  emeasure M (induced_map A --` W) = (\\<Sum>n. emeasure M (DW (n + 1)))", "have m: \"emeasure M ((induced_map A)--`W) = (\\<Sum>n. emeasure M (DW (n+1)))\""], ["proof (prove)\nusing this:\n  emeasure M (induced_map A --` W) = (\\<Sum>n. emeasure M (DW (n + 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = (\\<Sum>n. emeasure M (DW (n + 1)))", "by simp"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` W) = (\\<Sum>n. emeasure M (DW (n + 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "moreover"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` W) = (\\<Sum>n. emeasure M (DW (n + 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"summable (\\<lambda>n. emeasure M (DW (n+1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. emeasure M (DW (n + 1)))", "by simp"], ["proof (state)\nthis:\n  summable (\\<lambda>n. emeasure M (DW (n + 1)))\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M (induced_map A --` W) = (\\<Sum>n. emeasure M (DW (n + 1)))\n  summable (\\<lambda>n. emeasure M (DW (n + 1)))", "have lim: \"(\\<lambda>N. (\\<Sum> n\\<in>{..<N}. emeasure M (DW (n+1)))) \\<longlonglongrightarrow> emeasure M ((induced_map A)--`W)\""], ["proof (prove)\nusing this:\n  emeasure M (induced_map A --` W) = (\\<Sum>n. emeasure M (DW (n + 1)))\n  summable (\\<lambda>n. emeasure M (DW (n + 1)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. \\<Sum>n<N. emeasure M (DW (n + 1)))\n    \\<longlonglongrightarrow> emeasure M (induced_map A --` W)", "by (simp add: summable_LIMSEQ)"], ["proof (state)\nthis:\n  (\\<lambda>N. \\<Sum>n<N. emeasure M (DW (n + 1)))\n  \\<longlonglongrightarrow> emeasure M (induced_map A --` W)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have BW_meas [measurable]: \"\\<And>n. BW n \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. BW n \\<in> sets M", "unfolding BW_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. first_entrance_set A n \\<inter> (T ^^ n) --` W \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  BW ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have *: \"\\<And>n. T--`(BW n) - A = BW (n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. T --` BW n - A = BW (n + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. T --` BW n - A = BW (n + 1)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. T --` BW n - A = BW (n + 1)", "have \"T--`(BW n) = T--`(first_entrance_set A n) \\<inter> (T^^(n+1))--`W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` BW n = T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W", "unfolding BW_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` (first_entrance_set A n \\<inter> (T ^^ n) --` W) =\n    T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W", "by (simp add: assms(2) T_vrestr_composed(2))"], ["proof (state)\nthis:\n  T --` BW n = T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. \\<And>n. T --` BW n - A = BW (n + 1)", "then"], ["proof (chain)\npicking this:\n  T --` BW n = T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W", "have \"T--`(BW n) - A = (T--`(first_entrance_set A n) - A) \\<inter> (T^^(n+1))--`W\""], ["proof (prove)\nusing this:\n  T --` BW n = T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. T --` BW n - A =\n    (T --` first_entrance_set A n - A) \\<inter> (T ^^ (n + 1)) --` W", "by blast"], ["proof (state)\nthis:\n  T --` BW n - A =\n  (T --` first_entrance_set A n - A) \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. \\<And>n. T --` BW n - A = BW (n + 1)", "then"], ["proof (chain)\npicking this:\n  T --` BW n - A =\n  (T --` first_entrance_set A n - A) \\<inter> (T ^^ (n + 1)) --` W", "have \"T--`(BW n) - A = first_entrance_set A (n+1) \\<inter> (T^^(n+1))--`W\""], ["proof (prove)\nusing this:\n  T --` BW n - A =\n  (T --` first_entrance_set A n - A) \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. T --` BW n - A =\n    first_entrance_set A (n + 1) \\<inter> (T ^^ (n + 1)) --` W", "using first_entrance_rec[OF A_meas]"], ["proof (prove)\nusing this:\n  T --` BW n - A =\n  (T --` first_entrance_set A n - A) \\<inter> (T ^^ (n + 1)) --` W\n  first_entrance_set A (Suc ?n) = T --` first_entrance_set A ?n - A\n\ngoal (1 subgoal):\n 1. T --` BW n - A =\n    first_entrance_set A (n + 1) \\<inter> (T ^^ (n + 1)) --` W", "by simp"], ["proof (state)\nthis:\n  T --` BW n - A =\n  first_entrance_set A (n + 1) \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. \\<And>n. T --` BW n - A = BW (n + 1)", "then"], ["proof (chain)\npicking this:\n  T --` BW n - A =\n  first_entrance_set A (n + 1) \\<inter> (T ^^ (n + 1)) --` W", "show \"T--`(BW n) - A = BW (n+1)\""], ["proof (prove)\nusing this:\n  T --` BW n - A =\n  first_entrance_set A (n + 1) \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. T --` BW n - A = BW (n + 1)", "using BW_def"], ["proof (prove)\nusing this:\n  T --` BW n - A =\n  first_entrance_set A (n + 1) \\<inter> (T ^^ (n + 1)) --` W\n  BW = (\\<lambda>n. first_entrance_set A n \\<inter> (T ^^ n) --` W)\n\ngoal (1 subgoal):\n 1. T --` BW n - A = BW (n + 1)", "by simp"], ["proof (state)\nthis:\n  T --` BW n - A = BW (n + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T --` BW ?n3 - A = BW (?n3 + 1)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have **: \"DW (n+1) = T--`(BW n) \\<inter> A\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "have \"T--`(BW n) = T--`(first_entrance_set A n) \\<inter> (T^^(n+1))--`W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` BW n = T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W", "unfolding BW_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` (first_entrance_set A n \\<inter> (T ^^ n) --` W) =\n    T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W", "by (simp add: assms(2) T_vrestr_composed(2))"], ["proof (state)\nthis:\n  T --` BW n = T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "then"], ["proof (chain)\npicking this:\n  T --` BW n = T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W", "have \"T--`(BW n) \\<inter> A = (T--`(first_entrance_set A n) \\<inter> A) \\<inter> (T^^(n+1))--`W\""], ["proof (prove)\nusing this:\n  T --` BW n = T --` first_entrance_set A n \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. T --` BW n \\<inter> A =\n    T --` first_entrance_set A n \\<inter> A \\<inter> (T ^^ (n + 1)) --` W", "by blast"], ["proof (state)\nthis:\n  T --` BW n \\<inter> A =\n  T --` first_entrance_set A n \\<inter> A \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "then"], ["proof (chain)\npicking this:\n  T --` BW n \\<inter> A =\n  T --` first_entrance_set A n \\<inter> A \\<inter> (T ^^ (n + 1)) --` W", "have *: \"T--`(BW n) \\<inter> A = (return_time_function A)-`{n+1} \\<inter> (T^^(n+1))--`W\""], ["proof (prove)\nusing this:\n  T --` BW n \\<inter> A =\n  T --` first_entrance_set A n \\<inter> A \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. T --` BW n \\<inter> A =\n    return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W", "using return_time_rec[OF A_meas]"], ["proof (prove)\nusing this:\n  T --` BW n \\<inter> A =\n  T --` first_entrance_set A n \\<inter> A \\<inter> (T ^^ (n + 1)) --` W\n  return_time_function A -` {Suc ?n} =\n  T --` first_entrance_set A ?n \\<inter> A\n\ngoal (1 subgoal):\n 1. T --` BW n \\<inter> A =\n    return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W", "by simp"], ["proof (state)\nthis:\n  T --` BW n \\<inter> A =\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "have \"DW (n+1) = (return_time_function A)-`{n+1} \\<inter> (induced_map A)-`W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DW (n + 1) =\n    return_time_function A -` {n + 1} \\<inter> induced_map A -` W", "using DW_def \\<open>W \\<subseteq> space M\\<close> return_time_rec"], ["proof (prove)\nusing this:\n  DW =\n  (\\<lambda>n. return_time_function A -` {n} \\<inter> induced_map A --` W)\n  W \\<subseteq> space M\n  ?A \\<in> sets M \\<Longrightarrow>\n  return_time_function ?A -` {Suc ?n} =\n  T --` first_entrance_set ?A ?n \\<inter> ?A\n\ngoal (1 subgoal):\n 1. DW (n + 1) =\n    return_time_function A -` {n + 1} \\<inter> induced_map A -` W", "by auto"], ["proof (state)\nthis:\n  DW (n + 1) = return_time_function A -` {n + 1} \\<inter> induced_map A -` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "also"], ["proof (state)\nthis:\n  DW (n + 1) = return_time_function A -` {n + 1} \\<inter> induced_map A -` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "have \"... = (return_time_function A)-`{n+1} \\<inter> (T^^(n+1))-`W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {n + 1} \\<inter> induced_map A -` W =\n    return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) -` W", "by (auto simp add: induced_map_def)"], ["proof (state)\nthis:\n  return_time_function A -` {n + 1} \\<inter> induced_map A -` W =\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) -` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "also"], ["proof (state)\nthis:\n  return_time_function A -` {n + 1} \\<inter> induced_map A -` W =\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) -` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "have \"... = (return_time_function A)-`{n+1} \\<inter> (T^^(n+1))--`W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) -` W =\n    return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W", "using \\<open>W \\<subseteq> space M\\<close> return_time_rec"], ["proof (prove)\nusing this:\n  W \\<subseteq> space M\n  ?A \\<in> sets M \\<Longrightarrow>\n  return_time_function ?A -` {Suc ?n} =\n  T --` first_entrance_set ?A ?n \\<inter> ?A\n\ngoal (1 subgoal):\n 1. return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) -` W =\n    return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W", "by auto"], ["proof (state)\nthis:\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) -` W =\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "finally"], ["proof (chain)\npicking this:\n  DW (n + 1) =\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W", "show \"DW (n+1) = T--`(BW n) \\<inter> A\""], ["proof (prove)\nusing this:\n  DW (n + 1) =\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "using *"], ["proof (prove)\nusing this:\n  DW (n + 1) =\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W\n  T --` BW n \\<inter> A =\n  return_time_function A -` {n + 1} \\<inter> (T ^^ (n + 1)) --` W\n\ngoal (1 subgoal):\n 1. DW (n + 1) = T --` BW n \\<inter> A", "by simp"], ["proof (state)\nthis:\n  DW (n + 1) = T --` BW n \\<inter> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  DW (?n3 + 1) = T --` BW ?n3 \\<inter> A\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"emeasure M W = (\\<Sum> n\\<in>{..<N}. emeasure M (DW (n+1))) + emeasure M (BW N)\" for N"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M W = (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N)", "proof (induction N)"], ["proof (state)\ngoal (2 subgoals):\n 1. emeasure M W = (\\<Sum>n<0. emeasure M (DW (n + 1))) + emeasure M (BW 0)\n 2. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. emeasure M W = (\\<Sum>n<0. emeasure M (DW (n + 1))) + emeasure M (BW 0)\n 2. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "have \"BW 0 = W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BW 0 = W", "unfolding BW_def first_entrance_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((T ^^ 0) --` A - (\\<Union>i<0. (T ^^ i) --` A)) \\<inter>\n    (T ^^ 0) --` W =\n    W", "using incl"], ["proof (prove)\nusing this:\n  W \\<subseteq> A\n\ngoal (1 subgoal):\n 1. ((T ^^ 0) --` A - (\\<Union>i<0. (T ^^ i) --` A)) \\<inter>\n    (T ^^ 0) --` W =\n    W", "by auto"], ["proof (state)\nthis:\n  BW 0 = W\n\ngoal (2 subgoals):\n 1. emeasure M W = (\\<Sum>n<0. emeasure M (DW (n + 1))) + emeasure M (BW 0)\n 2. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "then"], ["proof (chain)\npicking this:\n  BW 0 = W", "show ?case"], ["proof (prove)\nusing this:\n  BW 0 = W\n\ngoal (1 subgoal):\n 1. emeasure M W = (\\<Sum>n<0. emeasure M (DW (n + 1))) + emeasure M (BW 0)", "by simp"], ["proof (state)\nthis:\n  emeasure M W = (\\<Sum>n<0. emeasure M (DW (n + 1))) + emeasure M (BW 0)\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "case (Suc N)"], ["proof (state)\nthis:\n  emeasure M W = (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N)\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "have \"T--`(BW N) = BW (N+1) \\<union> DW (N+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` BW N = BW (N + 1) \\<union> DW (N + 1)", "using * **"], ["proof (prove)\nusing this:\n  T --` BW ?n3 - A = BW (?n3 + 1)\n  DW (?n3 + 1) = T --` BW ?n3 \\<inter> A\n\ngoal (1 subgoal):\n 1. T --` BW N = BW (N + 1) \\<union> DW (N + 1)", "by blast"], ["proof (state)\nthis:\n  T --` BW N = BW (N + 1) \\<union> DW (N + 1)\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "moreover"], ["proof (state)\nthis:\n  T --` BW N = BW (N + 1) \\<union> DW (N + 1)\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "have \"BW (N+1) \\<inter> DW (N+1) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BW (N + 1) \\<inter> DW (N + 1) = {}", "using * **"], ["proof (prove)\nusing this:\n  T --` BW ?n3 - A = BW (?n3 + 1)\n  DW (?n3 + 1) = T --` BW ?n3 \\<inter> A\n\ngoal (1 subgoal):\n 1. BW (N + 1) \\<inter> DW (N + 1) = {}", "by blast"], ["proof (state)\nthis:\n  BW (N + 1) \\<inter> DW (N + 1) = {}\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "ultimately"], ["proof (chain)\npicking this:\n  T --` BW N = BW (N + 1) \\<union> DW (N + 1)\n  BW (N + 1) \\<inter> DW (N + 1) = {}", "have \"emeasure M (T--`(BW N)) = emeasure M (BW (N+1)) + emeasure M (DW (N+1))\""], ["proof (prove)\nusing this:\n  T --` BW N = BW (N + 1) \\<union> DW (N + 1)\n  BW (N + 1) \\<inter> DW (N + 1) = {}\n\ngoal (1 subgoal):\n 1. emeasure M (T --` BW N) =\n    emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))", "using DW_meas BW_meas plus_emeasure[of \"BW (N+1)\"]"], ["proof (prove)\nusing this:\n  T --` BW N = BW (N + 1) \\<union> DW (N + 1)\n  BW (N + 1) \\<inter> DW (N + 1) = {}\n  DW ?n3 \\<in> sets M\n  BW ?n3 \\<in> sets M\n  \\<lbrakk>BW (N + 1) \\<in> sets ?M; ?b \\<in> sets ?M;\n   BW (N + 1) \\<inter> ?b = {}\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M (BW (N + 1)) + emeasure ?M ?b =\n                    emeasure ?M (BW (N + 1) \\<union> ?b)\n\ngoal (1 subgoal):\n 1. emeasure M (T --` BW N) =\n    emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))", "by simp"], ["proof (state)\nthis:\n  emeasure M (T --` BW N) =\n  emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "then"], ["proof (chain)\npicking this:\n  emeasure M (T --` BW N) =\n  emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))", "have \"emeasure M (BW N) = emeasure M (BW (N+1)) + emeasure M (DW (N+1))\""], ["proof (prove)\nusing this:\n  emeasure M (T --` BW N) =\n  emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))\n\ngoal (1 subgoal):\n 1. emeasure M (BW N) = emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))", "using T_vrestr_same_emeasure(1) BW_meas"], ["proof (prove)\nusing this:\n  emeasure M (T --` BW N) =\n  emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))\n  ?A \\<in> sets M \\<Longrightarrow> emeasure M (T --` ?A) = emeasure M ?A\n  BW ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M (BW N) = emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))", "by auto"], ["proof (state)\nthis:\n  emeasure M (BW N) = emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "then"], ["proof (chain)\npicking this:\n  emeasure M (BW N) = emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))", "have \"(\\<Sum> n\\<in>{..<N}. emeasure M (DW (n+1))) + emeasure M (BW N)\n                = (\\<Sum> n\\<in>{..<N+1}. emeasure M (DW (n+1))) + emeasure M (BW (N+1))\""], ["proof (prove)\nusing this:\n  emeasure M (BW N) = emeasure M (BW (N + 1)) + emeasure M (DW (N + 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N) =\n    (\\<Sum>n<N + 1. emeasure M (DW (n + 1))) + emeasure M (BW (N + 1))", "by (simp add: add.commute add.left_commute)"], ["proof (state)\nthis:\n  (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N) =\n  (\\<Sum>n<N + 1. emeasure M (DW (n + 1))) + emeasure M (BW (N + 1))\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       emeasure M W =\n       (\\<Sum>n<N. emeasure M (DW (n + 1))) +\n       emeasure M (BW N) \\<Longrightarrow>\n       emeasure M W =\n       (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N) =\n  (\\<Sum>n<N + 1. emeasure M (DW (n + 1))) + emeasure M (BW (N + 1))", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N) =\n  (\\<Sum>n<N + 1. emeasure M (DW (n + 1))) + emeasure M (BW (N + 1))\n\ngoal (1 subgoal):\n 1. emeasure M W =\n    (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "using Suc.IH"], ["proof (prove)\nusing this:\n  (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N) =\n  (\\<Sum>n<N + 1. emeasure M (DW (n + 1))) + emeasure M (BW (N + 1))\n  emeasure M W = (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N)\n\ngoal (1 subgoal):\n 1. emeasure M W =\n    (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))", "by simp"], ["proof (state)\nthis:\n  emeasure M W =\n  (\\<Sum>n<Suc N. emeasure M (DW (n + 1))) + emeasure M (BW (Suc N))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure M W =\n  (\\<Sum>n<?N3. emeasure M (DW (n + 1))) + emeasure M (BW ?N3)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "moreover"], ["proof (state)\nthis:\n  emeasure M W =\n  (\\<Sum>n<?N3. emeasure M (DW (n + 1))) + emeasure M (BW ?N3)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"(\\<lambda>N. emeasure M (BW N)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. emeasure M (BW N)) \\<longlonglongrightarrow> 0", "proof (rule tendsto_sandwich[of \"\\<lambda>_. 0\"_ _ \"\\<lambda>N. emeasure M {x \\<in> (T^^N)--`W. local_time A N x < 1}\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. 0 \\<le> emeasure M (BW n)\n 2. \\<forall>\\<^sub>F n in sequentially.\n       emeasure M (BW n)\n       \\<le> emeasure M {x \\<in> (T ^^ n) --` W. local_time A n x < 1}\n 3. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0\n 4. (\\<lambda>N. emeasure M {x \\<in> (T ^^ N) --` W. local_time A N x < 1})\n    \\<longlonglongrightarrow> 0", "have \"emeasure M (BW N) \\<le> emeasure M {x \\<in> (T^^N)--`W. local_time A N x < 1}\" for N"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (BW N)\n    \\<le> emeasure M {x \\<in> (T ^^ N) --` W. local_time A N x < 1}", "apply (rule emeasure_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. BW N \\<subseteq> {x \\<in> (T ^^ N) --` W. local_time A N x < 1}\n 2. {x \\<in> (T ^^ N) --` W. local_time A N x < 1} \\<in> sets M", "unfolding BW_def local_time_def first_entrance_set_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((T ^^ N) --` A - (\\<Union>i<N. (T ^^ i) --` A)) \\<inter> (T ^^ N) --` W\n    \\<subseteq> {x \\<in> (T ^^ N) --` W.\n                 card {i \\<in> {..<N}. (T ^^ i) x \\<in> A} < 1}\n 2. {x \\<in> (T ^^ N) --` W. card {i \\<in> {..<N}. (T ^^ i) x \\<in> A} < 1}\n    \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  emeasure M (BW ?N3)\n  \\<le> emeasure M {x \\<in> (T ^^ ?N3) --` W. local_time A ?N3 x < 1}\n\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. 0 \\<le> emeasure M (BW n)\n 2. \\<forall>\\<^sub>F n in sequentially.\n       emeasure M (BW n)\n       \\<le> emeasure M {x \\<in> (T ^^ n) --` W. local_time A n x < 1}\n 3. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0\n 4. (\\<lambda>N. emeasure M {x \\<in> (T ^^ N) --` W. local_time A N x < 1})\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  emeasure M (BW ?N3)\n  \\<le> emeasure M {x \\<in> (T ^^ ?N3) --` W. local_time A ?N3 x < 1}", "show \"\\<forall>\\<^sub>F n in sequentially. emeasure M (BW n) \\<le> emeasure M {x \\<in> (T ^^ n) --` W. local_time A n x < 1}\""], ["proof (prove)\nusing this:\n  emeasure M (BW ?N3)\n  \\<le> emeasure M {x \\<in> (T ^^ ?N3) --` W. local_time A ?N3 x < 1}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       emeasure M (BW n)\n       \\<le> emeasure M {x \\<in> (T ^^ n) --` W. local_time A n x < 1}", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     emeasure M (BW n)\n     \\<le> emeasure M {x \\<in> (T ^^ n) --` W. local_time A n x < 1}\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. 0 \\<le> emeasure M (BW n)\n 2. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0\n 3. (\\<lambda>N. emeasure M {x \\<in> (T ^^ N) --` W. local_time A N x < 1})\n    \\<longlonglongrightarrow> 0", "have i: \"W \\<subseteq> (T^^0)--`A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W \\<subseteq> (T ^^ 0) --` A", "using incl"], ["proof (prove)\nusing this:\n  W \\<subseteq> A\n\ngoal (1 subgoal):\n 1. W \\<subseteq> (T ^^ 0) --` A", "by auto"], ["proof (state)\nthis:\n  W \\<subseteq> (T ^^ 0) --` A\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. 0 \\<le> emeasure M (BW n)\n 2. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0\n 3. (\\<lambda>N. emeasure M {x \\<in> (T ^^ N) --` W. local_time A N x < 1})\n    \\<longlonglongrightarrow> 0", "show \"(\\<lambda>N. emeasure M {x \\<in> (T ^^ N) --` W. local_time A N x < 1}) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. emeasure M {x \\<in> (T ^^ N) --` W. local_time A N x < 1})\n    \\<longlonglongrightarrow> 0", "apply (rule local_time_unbounded2[OF _ _ i])"], ["proof (prove)\ngoal (2 subgoals):\n 1. W \\<in> sets M\n 2. emeasure M W < \\<infinity>", "using fin"], ["proof (prove)\nusing this:\n  emeasure M W < \\<infinity>\n\ngoal (2 subgoals):\n 1. W \\<in> sets M\n 2. emeasure M W < \\<infinity>", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>N. emeasure M {x \\<in> (T ^^ N) --` W. local_time A N x < 1})\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. 0 \\<le> emeasure M (BW n)\n 2. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0", "qed (auto)"], ["proof (state)\nthis:\n  (\\<lambda>N. emeasure M (BW N)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>N. emeasure M (BW N)) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>N. (\\<Sum> n\\<in>{..<N}. emeasure M (DW (n+1))) + emeasure M (BW N)) \\<longlonglongrightarrow> emeasure M (induced_map A --` W) + 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>N. emeasure M (BW N)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N))\n    \\<longlonglongrightarrow> emeasure M (induced_map A --` W) + 0", "using lim"], ["proof (prove)\nusing this:\n  (\\<lambda>N. emeasure M (BW N)) \\<longlonglongrightarrow> 0\n  (\\<lambda>N. \\<Sum>n<N. emeasure M (DW (n + 1)))\n  \\<longlonglongrightarrow> emeasure M (induced_map A --` W)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N))\n    \\<longlonglongrightarrow> emeasure M (induced_map A --` W) + 0", "by (intro tendsto_add) auto"], ["proof (state)\nthis:\n  (\\<lambda>N. (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N))\n  \\<longlonglongrightarrow> emeasure M (induced_map A --` W) + 0\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M W =\n  (\\<Sum>n<?N3. emeasure M (DW (n + 1))) + emeasure M (BW ?N3)\n  (\\<lambda>N. (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N))\n  \\<longlonglongrightarrow> emeasure M (induced_map A --` W) + 0", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure M W =\n  (\\<Sum>n<?N3. emeasure M (DW (n + 1))) + emeasure M (BW ?N3)\n  (\\<lambda>N. (\\<Sum>n<N. emeasure M (DW (n + 1))) + emeasure M (BW N))\n  \\<longlonglongrightarrow> emeasure M (induced_map A --` W) + 0\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "by (auto intro: LIMSEQ_unique LIMSEQ_const_iff)"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` W) = emeasure M W\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in conservative_mpt) induced_map_measure_preserving:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and W_meas [measurable]: \"W \\<in> sets M\"\n  shows \"emeasure M ((induced_map A)--`W) = emeasure M W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "define WA where \"WA = W \\<inter> A\""], ["proof (state)\nthis:\n  WA = W \\<inter> A\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have WA_meas [measurable]: \"WA \\<in> sets M\" \"WA \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WA \\<in> sets M &&& WA \\<subseteq> A", "using WA_def"], ["proof (prove)\nusing this:\n  WA = W \\<inter> A\n\ngoal (1 subgoal):\n 1. WA \\<in> sets M &&& WA \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  WA \\<in> sets M\n  WA \\<subseteq> A\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have WAi_meas [measurable]: \"(induced_map A)--`WA \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A --` WA \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  induced_map A --` WA \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have a: \"emeasure M WA = emeasure M ((induced_map A)--`WA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M WA = emeasure M (induced_map A --` WA)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> emeasure M WA = emeasure M (induced_map A --` WA)\n 2. \\<not> ?P \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "assume \"emeasure M WA < \\<infinity>\""], ["proof (state)\nthis:\n  emeasure M WA < \\<infinity>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> emeasure M WA = emeasure M (induced_map A --` WA)\n 2. \\<not> ?P \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "then"], ["proof (chain)\npicking this:\n  emeasure M WA < \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure M WA < \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M WA = emeasure M (induced_map A --` WA)", "using induced_map_measure_preserving_aux[OF A_meas, OF \\<open>WA \\<in> sets M\\<close>, OF \\<open>WA \\<subseteq> A\\<close>]"], ["proof (prove)\nusing this:\n  emeasure M WA < \\<infinity>\n  emeasure M WA < \\<infinity> \\<Longrightarrow>\n  emeasure M (induced_map A --` WA) = emeasure M WA\n\ngoal (1 subgoal):\n 1. emeasure M WA = emeasure M (induced_map A --` WA)", "by simp"], ["proof (state)\nthis:\n  emeasure M WA = emeasure M (induced_map A --` WA)\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "assume \"\\<not>(emeasure M WA < \\<infinity>)\""], ["proof (state)\nthis:\n  \\<not> emeasure M WA < \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "then"], ["proof (chain)\npicking this:\n  \\<not> emeasure M WA < \\<infinity>", "have \"emeasure M WA = \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<not> emeasure M WA < \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M WA = \\<infinity>", "by (simp add: less_top[symmetric])"], ["proof (state)\nthis:\n  emeasure M WA = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "{"], ["proof (state)\nthis:\n  emeasure M WA = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "fix C::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "obtain Z where \"Z \\<in> sets M\" \"Z \\<subseteq> WA\" \"emeasure M Z < \\<infinity>\" \"emeasure M Z > C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Z.\n        \\<lbrakk>Z \\<in> sets M; Z \\<subseteq> WA;\n         emeasure M Z < \\<infinity>; ennreal C < emeasure M Z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast intro: \\<open>emeasure M WA = \\<infinity>\\<close> WA_meas approx_PInf_emeasure_with_finite)"], ["proof (state)\nthis:\n  Z \\<in> sets M\n  Z \\<subseteq> WA\n  emeasure M Z < \\<infinity>\n  ennreal C < emeasure M Z\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "have \"Z \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z \\<subseteq> A", "using \\<open>Z \\<subseteq> WA\\<close> WA_def"], ["proof (prove)\nusing this:\n  Z \\<subseteq> WA\n  WA = W \\<inter> A\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  Z \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "have \"C < emeasure M Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal C < emeasure M Z", "using \\<open>emeasure M Z > C\\<close>"], ["proof (prove)\nusing this:\n  ennreal C < emeasure M Z\n\ngoal (1 subgoal):\n 1. ennreal C < emeasure M Z", "by simp"], ["proof (state)\nthis:\n  ennreal C < emeasure M Z\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "also"], ["proof (state)\nthis:\n  ennreal C < emeasure M Z\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "have \"... = emeasure M ((induced_map A)--`Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M Z = emeasure M (induced_map A --` Z)", "using induced_map_measure_preserving_aux[OF A_meas, OF \\<open>Z \\<in> sets M\\<close>, OF \\<open>Z \\<subseteq> A\\<close>] \\<open>emeasure M Z < \\<infinity>\\<close>"], ["proof (prove)\nusing this:\n  emeasure M Z < \\<infinity> \\<Longrightarrow>\n  emeasure M (induced_map A --` Z) = emeasure M Z\n  emeasure M Z < \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M Z = emeasure M (induced_map A --` Z)", "by simp"], ["proof (state)\nthis:\n  emeasure M Z = emeasure M (induced_map A --` Z)\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "also"], ["proof (state)\nthis:\n  emeasure M Z = emeasure M (induced_map A --` Z)\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "have \"... \\<le> emeasure M ((induced_map A)--`WA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` Z) \\<le> emeasure M (induced_map A --` WA)", "apply(rule emeasure_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. induced_map A --` Z \\<subseteq> induced_map A --` WA\n 2. induced_map A --` WA \\<in> sets M", "using \\<open>Z \\<subseteq> WA\\<close> vrestr_inclusion"], ["proof (prove)\nusing this:\n  Z \\<subseteq> WA\n  ?A \\<subseteq> ?B \\<Longrightarrow> ?f --` ?A \\<subseteq> ?f --` ?B\n\ngoal (2 subgoals):\n 1. induced_map A --` Z \\<subseteq> induced_map A --` WA\n 2. induced_map A --` WA \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` Z) \\<le> emeasure M (induced_map A --` WA)\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "finally"], ["proof (chain)\npicking this:\n  ennreal C < emeasure M (induced_map A --` WA)", "have \"emeasure M ((induced_map A)--`WA) > C\""], ["proof (prove)\nusing this:\n  ennreal C < emeasure M (induced_map A --` WA)\n\ngoal (1 subgoal):\n 1. ennreal C < emeasure M (induced_map A --` WA)", "by simp"], ["proof (state)\nthis:\n  ennreal C < emeasure M (induced_map A --` WA)\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "}"], ["proof (state)\nthis:\n  ennreal ?C5 < emeasure M (induced_map A --` WA)\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "then"], ["proof (chain)\npicking this:\n  ennreal ?C5 < emeasure M (induced_map A --` WA)", "have \"emeasure M ((induced_map A)--`WA) = \\<infinity>\""], ["proof (prove)\nusing this:\n  ennreal ?C5 < emeasure M (induced_map A --` WA)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` WA) = \\<infinity>", "by (cases \"emeasure M ((induced_map A)--`WA)\") auto"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` WA) = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> emeasure M WA < \\<infinity> \\<Longrightarrow>\n    emeasure M WA = emeasure M (induced_map A --` WA)", "then"], ["proof (chain)\npicking this:\n  emeasure M (induced_map A --` WA) = \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure M (induced_map A --` WA) = \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M WA = emeasure M (induced_map A --` WA)", "using \\<open>emeasure M WA = \\<infinity>\\<close>"], ["proof (prove)\nusing this:\n  emeasure M (induced_map A --` WA) = \\<infinity>\n  emeasure M WA = \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M WA = emeasure M (induced_map A --` WA)", "by simp"], ["proof (state)\nthis:\n  emeasure M WA = emeasure M (induced_map A --` WA)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure M WA = emeasure M (induced_map A --` WA)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "define WB where \"WB = W - WA\""], ["proof (state)\nthis:\n  WB = W - WA\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have WB_meas [measurable]: \"WB \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WB \\<in> sets M", "unfolding WB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. W - WA \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  WB \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have WBi_meas [measurable]: \"(induced_map A)--`WB \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A --` WB \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  induced_map A --` WB \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"WB \\<inter> A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WB \\<inter> A = {}", "unfolding WB_def WA_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (W - W \\<inter> A) \\<inter> A = {}", "by auto"], ["proof (state)\nthis:\n  WB \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "moreover"], ["proof (state)\nthis:\n  WB \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have id: \"\\<And>x. x \\<notin> A \\<Longrightarrow> (induced_map A x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> A \\<Longrightarrow> induced_map A x = x", "unfolding induced_map_def return_time_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> A \\<Longrightarrow>\n       (T ^^\n        (if x \\<in> recurrent_subset A\n         then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) x \\<in> A} else 0))\n        x =\n       x", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<notin> A; x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> (T ^^\n                          \\<Sqinter> {n.\nSuc 0 \\<le> n \\<and> (T ^^ n) x \\<in> A})\n                          x =\n                         x", "using recurrent_subset_incl"], ["proof (prove)\nusing this:\n  recurrent_subset ?A \\<subseteq> ?A\n  recurrent_subset_infty ?A \\<subseteq> ?A\n  recurrent_subset_infty ?A \\<subseteq> recurrent_subset ?A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<notin> A; x \\<in> recurrent_subset A\\<rbrakk>\n       \\<Longrightarrow> (T ^^\n                          \\<Sqinter> {n.\nSuc 0 \\<le> n \\<and> (T ^^ n) x \\<in> A})\n                          x =\n                         x", "by auto"], ["proof (state)\nthis:\n  ?x3 \\<notin> A \\<Longrightarrow> induced_map A ?x3 = ?x3\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "ultimately"], ["proof (chain)\npicking this:\n  WB \\<inter> A = {}\n  ?x3 \\<notin> A \\<Longrightarrow> induced_map A ?x3 = ?x3", "have \"(induced_map A)--`WB = WB\""], ["proof (prove)\nusing this:\n  WB \\<inter> A = {}\n  ?x3 \\<notin> A \\<Longrightarrow> induced_map A ?x3 = ?x3\n\ngoal (1 subgoal):\n 1. induced_map A --` WB = WB", "using induced_map_stabilizes_A sets.sets_into_space[OF WB_meas]"], ["proof (prove)\nusing this:\n  WB \\<inter> A = {}\n  ?x3 \\<notin> A \\<Longrightarrow> induced_map A ?x3 = ?x3\n  (?x \\<in> ?A) = (induced_map ?A ?x \\<in> ?A)\n  WB \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. induced_map A --` WB = WB", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>WB \\<inter> A = {};\n        \\<And>x. x \\<notin> A \\<Longrightarrow> induced_map A x = x;\n        \\<And>x A. (x \\<in> A) = (induced_map A x \\<in> A);\n        WB \\<subseteq> space M; x \\<in> space M;\n        induced_map A x \\<in> WB\\<rbrakk>\n       \\<Longrightarrow> x \\<in> WB\n 2. \\<And>x.\n       \\<lbrakk>WB \\<inter> A = {};\n        \\<And>x. x \\<notin> A \\<Longrightarrow> induced_map A x = x;\n        \\<And>x A. (x \\<in> A) = (induced_map A x \\<in> A);\n        WB \\<subseteq> space M; x \\<in> WB\\<rbrakk>\n       \\<Longrightarrow> x \\<in> space M\n 3. \\<And>x.\n       \\<lbrakk>WB \\<inter> A = {};\n        \\<And>x. x \\<notin> A \\<Longrightarrow> induced_map A x = x;\n        \\<And>x A. (x \\<in> A) = (induced_map A x \\<in> A);\n        WB \\<subseteq> space M; x \\<in> WB\\<rbrakk>\n       \\<Longrightarrow> induced_map A x \\<in> WB", "by (metis disjoint_iff_not_equal) fastforce+"], ["proof (state)\nthis:\n  induced_map A --` WB = WB\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "then"], ["proof (chain)\npicking this:\n  induced_map A --` WB = WB", "have b: \"emeasure M ((induced_map A)--`WB) = emeasure M WB\""], ["proof (prove)\nusing this:\n  induced_map A --` WB = WB\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` WB) = emeasure M WB", "by simp"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` WB) = emeasure M WB\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"W = WA \\<union> WB\" \"WA \\<inter> WB = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W = WA \\<union> WB &&& WA \\<inter> WB = {}", "using WA_def WB_def"], ["proof (prove)\nusing this:\n  WA = W \\<inter> A\n  WB = W - WA\n\ngoal (1 subgoal):\n 1. W = WA \\<union> WB &&& WA \\<inter> WB = {}", "by auto"], ["proof (state)\nthis:\n  W = WA \\<union> WB\n  WA \\<inter> WB = {}\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have *: \"emeasure M W = emeasure M WA + emeasure M WB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M W = emeasure M WA + emeasure M WB", "by (subst \\<open>W = WA \\<union> WB\\<close>, rule plus_emeasure[symmetric], auto simp add: \\<open>WA \\<inter> WB = {}\\<close>)"], ["proof (state)\nthis:\n  emeasure M W = emeasure M WA + emeasure M WB\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have W_AUB: \"(induced_map A)--`W = (induced_map A)--`WA \\<union> (induced_map A)--`WB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A --` W = induced_map A --` WA \\<union> induced_map A --` WB", "using \\<open>W = WA \\<union> WB\\<close>"], ["proof (prove)\nusing this:\n  W = WA \\<union> WB\n\ngoal (1 subgoal):\n 1. induced_map A --` W = induced_map A --` WA \\<union> induced_map A --` WB", "by auto"], ["proof (state)\nthis:\n  induced_map A --` W = induced_map A --` WA \\<union> induced_map A --` WB\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have W_AIB: \"(induced_map A)--`WA \\<inter> (induced_map A)--`WB = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A --` WA \\<inter> induced_map A --` WB = {}", "by (metis \\<open>WA \\<inter> WB = {}\\<close> vrestr_empty vrestr_intersec)"], ["proof (state)\nthis:\n  induced_map A --` WA \\<inter> induced_map A --` WB = {}\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "have \"emeasure M ((induced_map A)--`W) = emeasure M ((induced_map A)--`WA) + emeasure M ((induced_map A)--`WB)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) =\n    emeasure M (induced_map A --` WA) + emeasure M (induced_map A --` WB)", "unfolding W_AUB"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` WA \\<union> induced_map A --` WB) =\n    emeasure M (induced_map A --` WA) + emeasure M (induced_map A --` WB)", "by (rule plus_emeasure[symmetric]) (auto simp add: W_AIB)"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` W) =\n  emeasure M (induced_map A --` WA) + emeasure M (induced_map A --` WB)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "then"], ["proof (chain)\npicking this:\n  emeasure M (induced_map A --` W) =\n  emeasure M (induced_map A --` WA) + emeasure M (induced_map A --` WB)", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure M (induced_map A --` W) =\n  emeasure M (induced_map A --` WA) + emeasure M (induced_map A --` WB)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "using a b *"], ["proof (prove)\nusing this:\n  emeasure M (induced_map A --` W) =\n  emeasure M (induced_map A --` WA) + emeasure M (induced_map A --` WB)\n  emeasure M WA = emeasure M (induced_map A --` WA)\n  emeasure M (induced_map A --` WB) = emeasure M WB\n  emeasure M W = emeasure M WA + emeasure M WB\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A --` W) = emeasure M W", "by simp"], ["proof (state)\nthis:\n  emeasure M (induced_map A --` W) = emeasure M W\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We can now express the fact that induced maps preserve the measure.\\<close>"], ["", "theorem (in conservative_mpt) induced_map_conservative_mpt:\n  assumes \"A \\<in> sets M\"\n  shows \"conservative_mpt (restrict_space M A) (induced_map A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative_mpt (restrict_space M A) (induced_map A)", "unfolding conservative_mpt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A) \\<and>\n    conservative (restrict_space M A) (induced_map A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. mpt (restrict_space M A) (induced_map A)\n 2. conservative (restrict_space M A) (induced_map A)", "show *: \"conservative (restrict_space M A) (induced_map A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative (restrict_space M A) (induced_map A)", "using induced_map_conservative[OF assms]"], ["proof (prove)\nusing this:\n  conservative (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. conservative (restrict_space M A) (induced_map A)", "by auto"], ["proof (state)\nthis:\n  conservative (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A)", "show \"mpt (restrict_space M A) (induced_map A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A)", "unfolding mpt_def mpt_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt (restrict_space M A) (induced_map A) \\<and>\n    induced_map A\n    \\<in> measure_preserving (restrict_space M A) (restrict_space M A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. qmpt (restrict_space M A) (induced_map A)\n 2. induced_map A\n    \\<in> measure_preserving (restrict_space M A) (restrict_space M A)", "show \"qmpt (restrict_space M A) (induced_map A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt (restrict_space M A) (induced_map A)", "using * conservative_def"], ["proof (prove)\nusing this:\n  conservative (restrict_space M A) (induced_map A)\n  conservative ?M ?T \\<equiv> qmpt ?M ?T \\<and> conservative_axioms ?M ?T\n\ngoal (1 subgoal):\n 1. qmpt (restrict_space M A) (induced_map A)", "by auto"], ["proof (state)\nthis:\n  qmpt (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> measure_preserving (restrict_space M A) (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  qmpt (restrict_space M A) (induced_map A)", "have meas: \"(induced_map A) \\<in> measurable (restrict_space M A) (restrict_space M A)\""], ["proof (prove)\nusing this:\n  qmpt (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A", "unfolding qmpt_def qmpt_axioms_def quasi_measure_preserving_def"], ["proof (prove)\nusing this:\n  sigma_finite_measure (restrict_space M A) \\<and>\n  induced_map A\n  \\<in> {f \\<in> restrict_space M A \\<rightarrow>\\<^sub>M\n                 restrict_space M A.\n         \\<forall>Aa\\<in>sets (restrict_space M A).\n            (f -` Aa \\<inter> space (restrict_space M A)\n             \\<in> null_sets (restrict_space M A)) =\n            (Aa \\<in> null_sets (restrict_space M A))}\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A", "by auto"], ["proof (state)\nthis:\n  induced_map A\n  \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> measure_preserving (restrict_space M A) (restrict_space M A)", "moreover"], ["proof (state)\nthis:\n  induced_map A\n  \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> measure_preserving (restrict_space M A) (restrict_space M A)", "have \"\\<And>B. B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n        emeasure (restrict_space M A) ((induced_map A) -`B \\<inter> space (restrict_space M A)) = emeasure (restrict_space M A) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "have s: \"space (restrict_space M A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (restrict_space M A) = A", "using assms space_restrict_space2"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  ?\\<Omega> \\<in> sets ?M \\<Longrightarrow>\n  space (restrict_space ?M ?\\<Omega>) = ?\\<Omega>\n\ngoal (1 subgoal):\n 1. space (restrict_space M A) = A", "by auto"], ["proof (state)\nthis:\n  space (restrict_space M A) = A\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "have i: \"\\<And>D. D \\<in> sets M \\<and> D \\<subseteq> A \\<Longrightarrow> emeasure (restrict_space M A) D = emeasure M D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> sets M \\<and> D \\<subseteq> A \\<Longrightarrow>\n       emeasure (restrict_space M A) D = emeasure M D", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> sets M \\<and> D \\<subseteq> A \\<Longrightarrow>\n       emeasure (restrict_space M A) D = emeasure M D", "by (simp add: emeasure_restrict_space)"], ["proof (state)\nthis:\n  ?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A \\<Longrightarrow>\n  emeasure (restrict_space M A) ?D3 = emeasure M ?D3\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "have j: \"\\<And>D. D \\<in> sets (restrict_space M A) \\<longleftrightarrow> (D \\<in> sets M \\<and> D \\<subseteq> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>D.\n       (D \\<in> sets (restrict_space M A)) =\n       (D \\<in> sets M \\<and> D \\<subseteq> A)", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>D.\n       (D \\<in> sets (restrict_space M A)) =\n       (D \\<in> sets M \\<and> D \\<subseteq> A)", "by (metis sets.Int_space_eq2 sets_restrict_space_iff)"], ["proof (state)\nthis:\n  (?D3 \\<in> sets (restrict_space M A)) =\n  (?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "assume a: \"B \\<in> sets (restrict_space M A)\""], ["proof (state)\nthis:\n  B \\<in> sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "then"], ["proof (chain)\npicking this:\n  B \\<in> sets (restrict_space M A)", "have B_meas: \"B \\<in> sets M\""], ["proof (prove)\nusing this:\n  B \\<in> sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. B \\<in> sets M", "using j"], ["proof (prove)\nusing this:\n  B \\<in> sets (restrict_space M A)\n  (?D3 \\<in> sets (restrict_space M A)) =\n  (?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A)\n\ngoal (1 subgoal):\n 1. B \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  B \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "then"], ["proof (chain)\npicking this:\n  B \\<in> sets M", "have first: \"emeasure (restrict_space M A) B = emeasure M B\""], ["proof (prove)\nusing this:\n  B \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure (restrict_space M A) B = emeasure M B", "using i j a"], ["proof (prove)\nusing this:\n  B \\<in> sets M\n  ?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A \\<Longrightarrow>\n  emeasure (restrict_space M A) ?D3 = emeasure M ?D3\n  (?D3 \\<in> sets (restrict_space M A)) =\n  (?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A)\n  B \\<in> sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. emeasure (restrict_space M A) B = emeasure M B", "by auto"], ["proof (state)\nthis:\n  emeasure (restrict_space M A) B = emeasure M B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "have incl: \"(induced_map A) -`B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A", "using j a induced_map_stabilizes_A assms"], ["proof (prove)\nusing this:\n  (?D3 \\<in> sets (restrict_space M A)) =\n  (?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A)\n  B \\<in> sets (restrict_space M A)\n  (?x \\<in> ?A) = (induced_map ?A ?x \\<in> ?A)\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<subseteq> A", "have eq: \"(induced_map A) -`B \\<inter> space (restrict_space M A) = (induced_map A) --`B\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<inter> space (restrict_space M A) =\n    induced_map A --` B", "unfolding vimage_restr_def s"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<inter> A =\n    induced_map A -` (B \\<inter> space M) \\<inter> space M", "using assms sets.sets_into_space"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> A\n  A \\<in> sets M\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. induced_map A -` B \\<inter> A =\n    induced_map A -` (B \\<inter> space M) \\<inter> space M", "by (metis a inf.orderE j meas measurable_sets s)"], ["proof (state)\nthis:\n  induced_map A -` B \\<inter> space (restrict_space M A) =\n  induced_map A --` B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "then"], ["proof (chain)\npicking this:\n  induced_map A -` B \\<inter> space (restrict_space M A) =\n  induced_map A --` B", "have \"emeasure M B = emeasure M ((induced_map A) -`B \\<inter> space (restrict_space M A))\""], ["proof (prove)\nusing this:\n  induced_map A -` B \\<inter> space (restrict_space M A) =\n  induced_map A --` B\n\ngoal (1 subgoal):\n 1. emeasure M B =\n    emeasure M (induced_map A -` B \\<inter> space (restrict_space M A))", "using induced_map_measure_preserving a j assms"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<inter> space (restrict_space M A) =\n  induced_map A --` B\n  \\<lbrakk>?A \\<in> sets M; ?W \\<in> sets M\\<rbrakk>\n  \\<Longrightarrow> emeasure M (induced_map ?A --` ?W) = emeasure M ?W\n  B \\<in> sets (restrict_space M A)\n  (?D3 \\<in> sets (restrict_space M A)) =\n  (?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A)\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M B =\n    emeasure M (induced_map A -` B \\<inter> space (restrict_space M A))", "by auto"], ["proof (state)\nthis:\n  emeasure M B =\n  emeasure M (induced_map A -` B \\<inter> space (restrict_space M A))\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "also"], ["proof (state)\nthis:\n  emeasure M B =\n  emeasure M (induced_map A -` B \\<inter> space (restrict_space M A))\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "have \"... = emeasure (restrict_space M A) ((induced_map A) -`B \\<inter> space (restrict_space M A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (induced_map A -` B \\<inter> space (restrict_space M A)) =\n    emeasure (restrict_space M A)\n     (induced_map A -` B \\<inter> space (restrict_space M A))", "using incl eq B_meas induced_map_meas[OF assms] assms i j"], ["proof (prove)\nusing this:\n  induced_map A -` B \\<subseteq> A\n  induced_map A -` B \\<inter> space (restrict_space M A) =\n  induced_map A --` B\n  B \\<in> sets M\n  induced_map A \\<in> M \\<rightarrow>\\<^sub>M M\n  A \\<in> sets M\n  ?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A \\<Longrightarrow>\n  emeasure (restrict_space M A) ?D3 = emeasure M ?D3\n  (?D3 \\<in> sets (restrict_space M A)) =\n  (?D3 \\<in> sets M \\<and> ?D3 \\<subseteq> A)\n\ngoal (1 subgoal):\n 1. emeasure M (induced_map A -` B \\<inter> space (restrict_space M A)) =\n    emeasure (restrict_space M A)\n     (induced_map A -` B \\<inter> space (restrict_space M A))", "by (metis emeasure_restrict_space inf.orderE s space_restrict_space)"], ["proof (state)\nthis:\n  emeasure M (induced_map A -` B \\<inter> space (restrict_space M A)) =\n  emeasure (restrict_space M A)\n   (induced_map A -` B \\<inter> space (restrict_space M A))\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (restrict_space M A) \\<Longrightarrow>\n       emeasure (restrict_space M A)\n        (induced_map A -` B \\<inter> space (restrict_space M A)) =\n       emeasure (restrict_space M A) B", "finally"], ["proof (chain)\npicking this:\n  emeasure M B =\n  emeasure (restrict_space M A)\n   (induced_map A -` B \\<inter> space (restrict_space M A))", "show \"emeasure (restrict_space M A) ((induced_map A) -`B \\<inter> space (restrict_space M A))\n                    = emeasure (restrict_space M A) B\""], ["proof (prove)\nusing this:\n  emeasure M B =\n  emeasure (restrict_space M A)\n   (induced_map A -` B \\<inter> space (restrict_space M A))\n\ngoal (1 subgoal):\n 1. emeasure (restrict_space M A)\n     (induced_map A -` B \\<inter> space (restrict_space M A)) =\n    emeasure (restrict_space M A) B", "using first"], ["proof (prove)\nusing this:\n  emeasure M B =\n  emeasure (restrict_space M A)\n   (induced_map A -` B \\<inter> space (restrict_space M A))\n  emeasure (restrict_space M A) B = emeasure M B\n\ngoal (1 subgoal):\n 1. emeasure (restrict_space M A)\n     (induced_map A -` B \\<inter> space (restrict_space M A)) =\n    emeasure (restrict_space M A) B", "by auto"], ["proof (state)\nthis:\n  emeasure (restrict_space M A)\n   (induced_map A -` B \\<inter> space (restrict_space M A)) =\n  emeasure (restrict_space M A) B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?B3 \\<in> sets (restrict_space M A) \\<Longrightarrow>\n  emeasure (restrict_space M A)\n   (induced_map A -` ?B3 \\<inter> space (restrict_space M A)) =\n  emeasure (restrict_space M A) ?B3\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> measure_preserving (restrict_space M A) (restrict_space M A)", "ultimately"], ["proof (chain)\npicking this:\n  induced_map A\n  \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A\n  ?B3 \\<in> sets (restrict_space M A) \\<Longrightarrow>\n  emeasure (restrict_space M A)\n   (induced_map A -` ?B3 \\<inter> space (restrict_space M A)) =\n  emeasure (restrict_space M A) ?B3", "show \"induced_map A \\<in> measure_preserving (restrict_space M A) (restrict_space M A)\""], ["proof (prove)\nusing this:\n  induced_map A\n  \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A\n  ?B3 \\<in> sets (restrict_space M A) \\<Longrightarrow>\n  emeasure (restrict_space M A)\n   (induced_map A -` ?B3 \\<inter> space (restrict_space M A)) =\n  emeasure (restrict_space M A) ?B3\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> measure_preserving (restrict_space M A) (restrict_space M A)", "unfolding measure_preserving_def"], ["proof (prove)\nusing this:\n  induced_map A\n  \\<in> restrict_space M A \\<rightarrow>\\<^sub>M restrict_space M A\n  ?B3 \\<in> sets (restrict_space M A) \\<Longrightarrow>\n  emeasure (restrict_space M A)\n   (induced_map A -` ?B3 \\<inter> space (restrict_space M A)) =\n  emeasure (restrict_space M A) ?B3\n\ngoal (1 subgoal):\n 1. induced_map A\n    \\<in> {f \\<in> restrict_space M A \\<rightarrow>\\<^sub>M\n                   restrict_space M A.\n           \\<forall>Aa\\<in>sets (restrict_space M A).\n              emeasure (restrict_space M A)\n               (f -` Aa \\<inter> space (restrict_space M A)) =\n              emeasure (restrict_space M A) Aa}", "by auto"], ["proof (state)\nthis:\n  induced_map A\n  \\<in> measure_preserving (restrict_space M A) (restrict_space M A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mpt (restrict_space M A) (induced_map A)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem (in fmpt) induced_map_fmpt:\n  assumes \"A \\<in> sets M\"\n  shows \"fmpt (restrict_space M A) (induced_map A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt (restrict_space M A) (induced_map A)", "unfolding fmpt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A) \\<and>\n    finite_measure (restrict_space M A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A) \\<and>\n    finite_measure (restrict_space M A)", "have \"conservative_mpt (restrict_space M A) (induced_map A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative_mpt (restrict_space M A) (induced_map A)", "using induced_map_conservative_mpt[OF assms]"], ["proof (prove)\nusing this:\n  conservative_mpt (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. conservative_mpt (restrict_space M A) (induced_map A)", "by simp"], ["proof (state)\nthis:\n  conservative_mpt (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A) \\<and>\n    finite_measure (restrict_space M A)", "then"], ["proof (chain)\npicking this:\n  conservative_mpt (restrict_space M A) (induced_map A)", "have \"mpt (restrict_space M A) (induced_map A)\""], ["proof (prove)\nusing this:\n  conservative_mpt (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A)", "using conservative_mpt_def"], ["proof (prove)\nusing this:\n  conservative_mpt (restrict_space M A) (induced_map A)\n  conservative_mpt ?M ?T \\<equiv> mpt ?M ?T \\<and> conservative ?M ?T\n\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A)", "by auto"], ["proof (state)\nthis:\n  mpt (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A) \\<and>\n    finite_measure (restrict_space M A)", "moreover"], ["proof (state)\nthis:\n  mpt (restrict_space M A) (induced_map A)\n\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A) \\<and>\n    finite_measure (restrict_space M A)", "have \"finite_measure (restrict_space M A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_measure (restrict_space M A)", "by (simp add: assms finite_measureI finite_measure_restrict_space)"], ["proof (state)\nthis:\n  finite_measure (restrict_space M A)\n\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A) \\<and>\n    finite_measure (restrict_space M A)", "ultimately"], ["proof (chain)\npicking this:\n  mpt (restrict_space M A) (induced_map A)\n  finite_measure (restrict_space M A)", "show \"mpt (restrict_space M A) (induced_map A) \\<and> finite_measure (restrict_space M A)\""], ["proof (prove)\nusing this:\n  mpt (restrict_space M A) (induced_map A)\n  finite_measure (restrict_space M A)\n\ngoal (1 subgoal):\n 1. mpt (restrict_space M A) (induced_map A) \\<and>\n    finite_measure (restrict_space M A)", "by simp"], ["proof (state)\nthis:\n  mpt (restrict_space M A) (induced_map A) \\<and>\n  finite_measure (restrict_space M A)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>It will be useful to reformulate the fact that the recurrent subset has full measure\nin terms of the induced measure, to simplify the use of the induced map later on.\\<close>"], ["", "lemma (in conservative) induced_map_recurrent_typical:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n  shows \"AE z in (restrict_space M A). z \\<in> recurrent_subset A\"\n        \"AE z in (restrict_space M A). z \\<in> recurrent_subset_infty A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A &&&\n    AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "have \"recurrent_subset A \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset A \\<in> sets M", "using recurrent_subset_meas[OF A_meas]"], ["proof (prove)\nusing this:\n  recurrent_subset A \\<in> sets M\n  recurrent_subset_infty A \\<in> sets M\n\ngoal (1 subgoal):\n 1. recurrent_subset A \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  recurrent_subset A \\<in> sets M\n\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  recurrent_subset A \\<in> sets M", "have rsA: \"recurrent_subset A \\<in> sets (restrict_space M A)\""], ["proof (prove)\nusing this:\n  recurrent_subset A \\<in> sets M\n\ngoal (1 subgoal):\n 1. recurrent_subset A \\<in> sets (restrict_space M A)", "using recurrent_subset_incl(1)[of A]"], ["proof (prove)\nusing this:\n  recurrent_subset A \\<in> sets M\n  recurrent_subset A \\<subseteq> A\n\ngoal (1 subgoal):\n 1. recurrent_subset A \\<in> sets (restrict_space M A)", "by (metis (no_types, lifting) A_meas sets_restrict_space_iff space_restrict_space space_restrict_space2)"], ["proof (state)\nthis:\n  recurrent_subset A \\<in> sets (restrict_space M A)\n\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "have \"emeasure (restrict_space M A) (space (restrict_space M A) - recurrent_subset A) = emeasure (restrict_space M A) (A - recurrent_subset A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (restrict_space M A)\n     (space (restrict_space M A) - recurrent_subset A) =\n    emeasure (restrict_space M A) (A - recurrent_subset A)", "by (metis (no_types, lifting) A_meas space_restrict_space2)"], ["proof (state)\nthis:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset A) =\n  emeasure (restrict_space M A) (A - recurrent_subset A)\n\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "also"], ["proof (state)\nthis:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset A) =\n  emeasure (restrict_space M A) (A - recurrent_subset A)\n\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "have \"... = emeasure M (A - recurrent_subset A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (restrict_space M A) (A - recurrent_subset A) =\n    emeasure M (A - recurrent_subset A)", "by (simp add: emeasure_restrict_space)"], ["proof (state)\nthis:\n  emeasure (restrict_space M A) (A - recurrent_subset A) =\n  emeasure M (A - recurrent_subset A)\n\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "also"], ["proof (state)\nthis:\n  emeasure (restrict_space M A) (A - recurrent_subset A) =\n  emeasure M (A - recurrent_subset A)\n\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (A - recurrent_subset A) = 0", "using Poincare_recurrence_thm[OF A_meas]"], ["proof (prove)\nusing this:\n  A - recurrent_subset A \\<in> null_sets M\n  A - recurrent_subset_infty A \\<in> null_sets M\n  A \\<Delta> recurrent_subset A \\<in> null_sets M\n  A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n  emeasure M (recurrent_subset A) = emeasure M A\n  emeasure M (recurrent_subset_infty A) = emeasure M A\n  AE x\\<in>A in M. x \\<in> recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. emeasure M (A - recurrent_subset A) = 0", "by auto"], ["proof (state)\nthis:\n  emeasure M (A - recurrent_subset A) = 0\n\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "finally"], ["proof (chain)\npicking this:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset A) =\n  0", "have \"space (restrict_space M A) - recurrent_subset A \\<in> null_sets (restrict_space M A)\""], ["proof (prove)\nusing this:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset A) =\n  0\n\ngoal (1 subgoal):\n 1. space (restrict_space M A) - recurrent_subset A\n    \\<in> null_sets (restrict_space M A)", "using rsA"], ["proof (prove)\nusing this:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset A) =\n  0\n  recurrent_subset A \\<in> sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. space (restrict_space M A) - recurrent_subset A\n    \\<in> null_sets (restrict_space M A)", "by blast"], ["proof (state)\nthis:\n  space (restrict_space M A) - recurrent_subset A\n  \\<in> null_sets (restrict_space M A)\n\ngoal (2 subgoals):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A\n 2. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  space (restrict_space M A) - recurrent_subset A\n  \\<in> null_sets (restrict_space M A)", "show \"AE z in (restrict_space M A). z \\<in> recurrent_subset A\""], ["proof (prove)\nusing this:\n  space (restrict_space M A) - recurrent_subset A\n  \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset A", "by (metis (no_types, lifting) DiffI eventually_ae_filter mem_Collect_eq subsetI)"], ["proof (state)\nthis:\n  AE z in restrict_space M A. z \\<in> recurrent_subset A\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "have \"recurrent_subset_infty A \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recurrent_subset_infty A \\<in> sets M", "using recurrent_subset_meas[OF A_meas]"], ["proof (prove)\nusing this:\n  recurrent_subset A \\<in> sets M\n  recurrent_subset_infty A \\<in> sets M\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty A \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  recurrent_subset_infty A \\<in> sets M\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  recurrent_subset_infty A \\<in> sets M", "have rsiA: \"recurrent_subset_infty A \\<in> sets (restrict_space M A)\""], ["proof (prove)\nusing this:\n  recurrent_subset_infty A \\<in> sets M\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty A \\<in> sets (restrict_space M A)", "using recurrent_subset_incl(2)[of A]"], ["proof (prove)\nusing this:\n  recurrent_subset_infty A \\<in> sets M\n  recurrent_subset_infty A \\<subseteq> A\n\ngoal (1 subgoal):\n 1. recurrent_subset_infty A \\<in> sets (restrict_space M A)", "by (metis (no_types, lifting) A_meas sets_restrict_space_iff space_restrict_space space_restrict_space2)"], ["proof (state)\nthis:\n  recurrent_subset_infty A \\<in> sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "have \"emeasure (restrict_space M A) (space (restrict_space M A) - recurrent_subset_infty A) = emeasure (restrict_space M A) (A - recurrent_subset_infty A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (restrict_space M A)\n     (space (restrict_space M A) - recurrent_subset_infty A) =\n    emeasure (restrict_space M A) (A - recurrent_subset_infty A)", "by (metis (no_types, lifting) A_meas space_restrict_space2)"], ["proof (state)\nthis:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset_infty A) =\n  emeasure (restrict_space M A) (A - recurrent_subset_infty A)\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "also"], ["proof (state)\nthis:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset_infty A) =\n  emeasure (restrict_space M A) (A - recurrent_subset_infty A)\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "have \"... = emeasure M (A - recurrent_subset_infty A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (restrict_space M A) (A - recurrent_subset_infty A) =\n    emeasure M (A - recurrent_subset_infty A)", "apply (rule emeasure_restrict_space)"], ["proof (prove)\ngoal (2 subgoals):\n 1. A \\<inter> space M \\<in> sets M\n 2. A - recurrent_subset_infty A \\<subseteq> A", "using A_meas"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n\ngoal (2 subgoals):\n 1. A \\<inter> space M \\<in> sets M\n 2. A - recurrent_subset_infty A \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  emeasure (restrict_space M A) (A - recurrent_subset_infty A) =\n  emeasure M (A - recurrent_subset_infty A)\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "also"], ["proof (state)\nthis:\n  emeasure (restrict_space M A) (A - recurrent_subset_infty A) =\n  emeasure M (A - recurrent_subset_infty A)\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (A - recurrent_subset_infty A) = 0", "using Poincare_recurrence_thm[OF A_meas]"], ["proof (prove)\nusing this:\n  A - recurrent_subset A \\<in> null_sets M\n  A - recurrent_subset_infty A \\<in> null_sets M\n  A \\<Delta> recurrent_subset A \\<in> null_sets M\n  A \\<Delta> recurrent_subset_infty A \\<in> null_sets M\n  emeasure M (recurrent_subset A) = emeasure M A\n  emeasure M (recurrent_subset_infty A) = emeasure M A\n  AE x\\<in>A in M. x \\<in> recurrent_subset_infty A\n\ngoal (1 subgoal):\n 1. emeasure M (A - recurrent_subset_infty A) = 0", "by auto"], ["proof (state)\nthis:\n  emeasure M (A - recurrent_subset_infty A) = 0\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "finally"], ["proof (chain)\npicking this:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset_infty A) =\n  0", "have \"space (restrict_space M A) - recurrent_subset_infty A \\<in> null_sets (restrict_space M A)\""], ["proof (prove)\nusing this:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset_infty A) =\n  0\n\ngoal (1 subgoal):\n 1. space (restrict_space M A) - recurrent_subset_infty A\n    \\<in> null_sets (restrict_space M A)", "using rsiA"], ["proof (prove)\nusing this:\n  emeasure (restrict_space M A)\n   (space (restrict_space M A) - recurrent_subset_infty A) =\n  0\n  recurrent_subset_infty A \\<in> sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. space (restrict_space M A) - recurrent_subset_infty A\n    \\<in> null_sets (restrict_space M A)", "by blast"], ["proof (state)\nthis:\n  space (restrict_space M A) - recurrent_subset_infty A\n  \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "then"], ["proof (chain)\npicking this:\n  space (restrict_space M A) - recurrent_subset_infty A\n  \\<in> null_sets (restrict_space M A)", "show \"AE z in (restrict_space M A). z \\<in> recurrent_subset_infty A\""], ["proof (prove)\nusing this:\n  space (restrict_space M A) - recurrent_subset_infty A\n  \\<in> null_sets (restrict_space M A)\n\ngoal (1 subgoal):\n 1. AE z in restrict_space M A. z \\<in> recurrent_subset_infty A", "by (metis (no_types, lifting) DiffI eventually_ae_filter mem_Collect_eq subsetI)"], ["proof (state)\nthis:\n  AE z in restrict_space M A. z \\<in> recurrent_subset_infty A\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Kac's theorem, and variants\\<close>"], ["", "text \\<open>Kac's theorem states that, for conservative maps, the integral of the return time\nto a subset $A$ is equal to the measure of the space if the dynamics is ergodic, or of the\nspace seen by $A$ in the general case.\n\nThis result generalizes to any induced function, not just the return time, that we define now.\\<close>"], ["", "definition induced_function::\"'a set \\<Rightarrow> ('a \\<Rightarrow> 'b::comm_monoid_add) \\<Rightarrow> ('a \\<Rightarrow> 'b)\"\n  where \"induced_function A f = (\\<lambda>x. (\\<Sum>i\\<in>{..< return_time_function A x}. f((T^^i) x)))\""], ["", "text \\<open>By definition, the induced function is supported on the recurrent subset of $A$.\\<close>"], ["", "lemma induced_function_support:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  shows \"induced_function A f y = induced_function A f y * indicator ((return_time_function A)-`{1..}) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_function A f y =\n    induced_function A f y * indicator (return_time_function A -` {1..}) y", "by (auto simp add: induced_function_def indicator_def not_less_eq_eq)"], ["", "text \\<open>Basic measurability statements.\\<close>"], ["", "lemma induced_function_meas_ennreal [measurable]:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\" \"A \\<in> sets M\"\n  shows \"induced_function A f \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_function A f \\<in> borel_measurable M", "unfolding induced_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>i<return_time_function A x. f ((T ^^ i) x))\n    \\<in> borel_measurable M", "by simp"], ["", "lemma induced_function_meas_real [measurable]:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\" \"A \\<in> sets M\"\n  shows \"induced_function A f \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_function A f \\<in> borel_measurable M", "unfolding induced_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>i<return_time_function A x. f ((T ^^ i) x))\n    \\<in> borel_measurable M", "by simp"], ["", "text \\<open>The Birkhoff sums of the induced function for the induced map form a subsequence of the original\nBirkhoff sums for the original map, corresponding to the return times to $A$.\\<close>"], ["", "lemma (in conservative) induced_function_birkhoff_sum:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes \"A \\<in> sets M\"\n  shows \"birkhoff_sum f (qmpt.birkhoff_sum (induced_map A) (return_time_function A) n x) x\n          = qmpt.birkhoff_sum (induced_map A) (induced_function A f) n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f\n     (qmpt.birkhoff_sum (induced_map A) (return_time_function A) n x) x =\n    qmpt.birkhoff_sum (induced_map A) (induced_function A f) n x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. birkhoff_sum f\n     (qmpt.birkhoff_sum (induced_map A) (return_time_function A) n x) x =\n    qmpt.birkhoff_sum (induced_map A) (induced_function A f) n x", "interpret A: conservative \"restrict_space M A\" \"induced_map A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conservative (restrict_space M A) (induced_map A)", "by (rule induced_map_conservative[OF assms])"], ["proof (state)\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n    A.birkhoff_sum (induced_function A f) n x", "define TA where \"TA = induced_map A\""], ["proof (state)\nthis:\n  TA = induced_map A\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n    A.birkhoff_sum (induced_function A f) n x", "define phiA where \"phiA = return_time_function A\""], ["proof (state)\nthis:\n  phiA = return_time_function A\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n    A.birkhoff_sum (induced_function A f) n x", "define R where \"R = (\\<lambda>n. A.birkhoff_sum phiA n x)\""], ["proof (state)\nthis:\n  R = (\\<lambda>n. A.birkhoff_sum phiA n x)\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n    A.birkhoff_sum (induced_function A f) n x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n    A.birkhoff_sum (induced_function A f) n x", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) 0 x) x =\n    A.birkhoff_sum (induced_function A f) 0 x\n 2. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) 0 x) x =\n    A.birkhoff_sum (induced_function A f) 0 x\n 2. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) 0 x) x =\n    A.birkhoff_sum (induced_function A f) 0 x", "using birkhoff_sum_1(1) A.birkhoff_sum_1(1)"], ["proof (prove)\nusing this:\n  birkhoff_sum ?f 0 ?x = (0::?'b)\n  A.birkhoff_sum ?f 0 ?x = (0::?'b)\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) 0 x) x =\n    A.birkhoff_sum (induced_function A f) 0 x", "by auto"], ["proof (state)\nthis:\n  birkhoff_sum f (A.birkhoff_sum (return_time_function A) 0 x) x =\n  A.birkhoff_sum (induced_function A f) 0 x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "case (Suc n)"], ["proof (state)\nthis:\n  birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n  A.birkhoff_sum (induced_function A f) n x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "have \"(T^^(R n)) x = (TA^^n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ R n) x = (TA ^^ n) x", "unfolding TA_def R_def A.birkhoff_sum_def phiA_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ (\\<Sum>i<n. return_time_function A ((induced_map A ^^ i) x))) x =\n    (induced_map A ^^ n) x", "by (rule induced_map_iterates[symmetric])"], ["proof (state)\nthis:\n  (T ^^ R n) x = (TA ^^ n) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "have \"R(n+1) = R n + phiA ((TA^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R (n + 1) = R n + phiA ((TA ^^ n) x)", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A.birkhoff_sum phiA (n + 1) x =\n    A.birkhoff_sum phiA n x + phiA ((TA ^^ n) x)", "using A.birkhoff_sum_cocycle[where ?n = n and ?m = 1 and ?f = phiA] A.birkhoff_sum_1(2) TA_def"], ["proof (prove)\nusing this:\n  A.birkhoff_sum phiA (n + 1) ?x =\n  A.birkhoff_sum phiA n ?x + A.birkhoff_sum phiA 1 ((induced_map A ^^ n) ?x)\n  A.birkhoff_sum ?f 1 ?x = ?f ?x\n  TA = induced_map A\n\ngoal (1 subgoal):\n 1. A.birkhoff_sum phiA (n + 1) x =\n    A.birkhoff_sum phiA n x + phiA ((TA ^^ n) x)", "by auto"], ["proof (state)\nthis:\n  R (n + 1) = R n + phiA ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "then"], ["proof (chain)\npicking this:\n  R (n + 1) = R n + phiA ((TA ^^ n) x)", "have \"birkhoff_sum f (R (n+1)) x = birkhoff_sum f (R n) x + birkhoff_sum f (phiA ((TA^^n) x)) ((T^^(R n)) x)\""], ["proof (prove)\nusing this:\n  R (n + 1) = R n + phiA ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (R (n + 1)) x =\n    birkhoff_sum f (R n) x +\n    birkhoff_sum f (phiA ((TA ^^ n) x)) ((T ^^ R n) x)", "using birkhoff_sum_cocycle[where ?n = \"R n\" and ?f = f]"], ["proof (prove)\nusing this:\n  R (n + 1) = R n + phiA ((TA ^^ n) x)\n  birkhoff_sum f (R n + ?m) ?x =\n  birkhoff_sum f (R n) ?x + birkhoff_sum f ?m ((T ^^ R n) ?x)\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (R (n + 1)) x =\n    birkhoff_sum f (R n) x +\n    birkhoff_sum f (phiA ((TA ^^ n) x)) ((T ^^ R n) x)", "by auto"], ["proof (state)\nthis:\n  birkhoff_sum f (R (n + 1)) x =\n  birkhoff_sum f (R n) x +\n  birkhoff_sum f (phiA ((TA ^^ n) x)) ((T ^^ R n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "also"], ["proof (state)\nthis:\n  birkhoff_sum f (R (n + 1)) x =\n  birkhoff_sum f (R n) x +\n  birkhoff_sum f (phiA ((TA ^^ n) x)) ((T ^^ R n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "have \"... = birkhoff_sum f (R n) x + birkhoff_sum f (phiA ((TA^^n) x)) ((TA^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f (R n) x +\n    birkhoff_sum f (phiA ((TA ^^ n) x)) ((T ^^ R n) x) =\n    birkhoff_sum f (R n) x +\n    birkhoff_sum f (phiA ((TA ^^ n) x)) ((TA ^^ n) x)", "using \\<open>(T^^(R n)) x = (TA^^n) x\\<close>"], ["proof (prove)\nusing this:\n  (T ^^ R n) x = (TA ^^ n) x\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (R n) x +\n    birkhoff_sum f (phiA ((TA ^^ n) x)) ((T ^^ R n) x) =\n    birkhoff_sum f (R n) x +\n    birkhoff_sum f (phiA ((TA ^^ n) x)) ((TA ^^ n) x)", "by simp"], ["proof (state)\nthis:\n  birkhoff_sum f (R n) x +\n  birkhoff_sum f (phiA ((TA ^^ n) x)) ((T ^^ R n) x) =\n  birkhoff_sum f (R n) x + birkhoff_sum f (phiA ((TA ^^ n) x)) ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "also"], ["proof (state)\nthis:\n  birkhoff_sum f (R n) x +\n  birkhoff_sum f (phiA ((TA ^^ n) x)) ((T ^^ R n) x) =\n  birkhoff_sum f (R n) x + birkhoff_sum f (phiA ((TA ^^ n) x)) ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "have \"... = birkhoff_sum f (R n) x + (induced_function A f) ((TA^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f (R n) x +\n    birkhoff_sum f (phiA ((TA ^^ n) x)) ((TA ^^ n) x) =\n    birkhoff_sum f (R n) x + induced_function A f ((TA ^^ n) x)", "unfolding induced_function_def birkhoff_sum_def phiA_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<R n. f ((T ^^ i) x)) +\n    (\\<Sum>i<return_time_function A ((TA ^^ n) x).\n        f ((T ^^ i) ((TA ^^ n) x))) =\n    (\\<Sum>i<R n. f ((T ^^ i) x)) +\n    (\\<Sum>i<return_time_function A ((TA ^^ n) x).\n        f ((T ^^ i) ((TA ^^ n) x)))", "by simp"], ["proof (state)\nthis:\n  birkhoff_sum f (R n) x +\n  birkhoff_sum f (phiA ((TA ^^ n) x)) ((TA ^^ n) x) =\n  birkhoff_sum f (R n) x + induced_function A f ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "also"], ["proof (state)\nthis:\n  birkhoff_sum f (R n) x +\n  birkhoff_sum f (phiA ((TA ^^ n) x)) ((TA ^^ n) x) =\n  birkhoff_sum f (R n) x + induced_function A f ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "have \"... = A.birkhoff_sum (induced_function A f) n x + (induced_function A f) ((TA^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f (R n) x + induced_function A f ((TA ^^ n) x) =\n    A.birkhoff_sum (induced_function A f) n x +\n    induced_function A f ((TA ^^ n) x)", "using Suc.IH R_def phiA_def"], ["proof (prove)\nusing this:\n  birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n  A.birkhoff_sum (induced_function A f) n x\n  R = (\\<lambda>n. A.birkhoff_sum phiA n x)\n  phiA = return_time_function A\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (R n) x + induced_function A f ((TA ^^ n) x) =\n    A.birkhoff_sum (induced_function A f) n x +\n    induced_function A f ((TA ^^ n) x)", "by auto"], ["proof (state)\nthis:\n  birkhoff_sum f (R n) x + induced_function A f ((TA ^^ n) x) =\n  A.birkhoff_sum (induced_function A f) n x +\n  induced_function A f ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "also"], ["proof (state)\nthis:\n  birkhoff_sum f (R n) x + induced_function A f ((TA ^^ n) x) =\n  A.birkhoff_sum (induced_function A f) n x +\n  induced_function A f ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "have \"... = A.birkhoff_sum (induced_function A f) (n+1) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A.birkhoff_sum (induced_function A f) n x +\n    induced_function A f ((TA ^^ n) x) =\n    A.birkhoff_sum (induced_function A f) (n + 1) x", "using A.birkhoff_sum_cocycle[where ?n = n and ?m = 1 and ?f = \"induced_function A f\" and ?x = x, symmetric]\n      A.birkhoff_sum_1(2)[where ?f = \"induced_function A f\" and ?x = \"(TA^^n) x\"]"], ["proof (prove)\nusing this:\n  A.birkhoff_sum (induced_function A f) n x +\n  A.birkhoff_sum (induced_function A f) 1 ((induced_map A ^^ n) x) =\n  A.birkhoff_sum (induced_function A f) (n + 1) x\n  A.birkhoff_sum (induced_function A f) 1 ((TA ^^ n) x) =\n  induced_function A f ((TA ^^ n) x)\n\ngoal (1 subgoal):\n 1. A.birkhoff_sum (induced_function A f) n x +\n    induced_function A f ((TA ^^ n) x) =\n    A.birkhoff_sum (induced_function A f) (n + 1) x", "unfolding TA_def"], ["proof (prove)\nusing this:\n  A.birkhoff_sum (induced_function A f) n x +\n  A.birkhoff_sum (induced_function A f) 1 ((induced_map A ^^ n) x) =\n  A.birkhoff_sum (induced_function A f) (n + 1) x\n  A.birkhoff_sum (induced_function A f) 1 ((induced_map A ^^ n) x) =\n  induced_function A f ((induced_map A ^^ n) x)\n\ngoal (1 subgoal):\n 1. A.birkhoff_sum (induced_function A f) n x +\n    induced_function A f ((induced_map A ^^ n) x) =\n    A.birkhoff_sum (induced_function A f) (n + 1) x", "by auto"], ["proof (state)\nthis:\n  A.birkhoff_sum (induced_function A f) n x +\n  induced_function A f ((TA ^^ n) x) =\n  A.birkhoff_sum (induced_function A f) (n + 1) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n       A.birkhoff_sum (induced_function A f) n x \\<Longrightarrow>\n       birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x)\n        x =\n       A.birkhoff_sum (induced_function A f) (Suc n) x", "finally"], ["proof (chain)\npicking this:\n  birkhoff_sum f (R (n + 1)) x =\n  A.birkhoff_sum (induced_function A f) (n + 1) x", "show ?case"], ["proof (prove)\nusing this:\n  birkhoff_sum f (R (n + 1)) x =\n  A.birkhoff_sum (induced_function A f) (n + 1) x\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x) x =\n    A.birkhoff_sum (induced_function A f) (Suc n) x", "unfolding R_def phiA_def"], ["proof (prove)\nusing this:\n  birkhoff_sum f (A.birkhoff_sum (return_time_function A) (n + 1) x) x =\n  A.birkhoff_sum (induced_function A f) (n + 1) x\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x) x =\n    A.birkhoff_sum (induced_function A f) (Suc n) x", "by simp"], ["proof (state)\nthis:\n  birkhoff_sum f (A.birkhoff_sum (return_time_function A) (Suc n) x) x =\n  A.birkhoff_sum (induced_function A f) (Suc n) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  birkhoff_sum f (A.birkhoff_sum (return_time_function A) n x) x =\n  A.birkhoff_sum (induced_function A f) n x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next lemma is very simple (just a change of variables to reorder\nthe indices in the double sum). However, the proof I give is very tedious:\ninfinite sums on proper subsets are not handled well, hence I use integrals\non products of discrete spaces instead, and go back and forth between the two\nnotions -- maybe there are better suited tools in the library, but I could\nnot locate them...\n\nThis is the main combinatorial tool used in the proof of Kac's Formula.\\<close>"], ["", "lemma kac_series_aux:\n  fixes d:: \"nat \\<Rightarrow> nat \\<Rightarrow> ennreal\"\n  shows \"(\\<Sum>n. (\\<Sum>i\\<le>n. d i n)) = (\\<Sum>n. d 0 n) + (\\<Sum>n. (\\<Sum>i. d (i+1) (n+1+i)))\"\n    (is \"_ = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "define g where \"g = (\\<lambda>(i,n). (i+(1::nat), n+1+i))\""], ["proof (state)\nthis:\n  g = (\\<lambda>(i, n). (i + 1, n + 1 + i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "define U where \"U = {(i,n). (i>(0::nat)) \\<and> (n\\<ge>i)}\""], ["proof (state)\nthis:\n  U = {(i, n). 0 < i \\<and> i \\<le> n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have bij: \"bij_betw g UNIV U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw g UNIV U", "by (rule bij_betw_byWitness[where ?f' = \"\\<lambda>(i, n). (i-1, n-i)\"], auto simp add: g_def U_def)"], ["proof (state)\nthis:\n  bij_betw g UNIV U\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "define e where \"e = (\\<lambda> (i,j). d i j)\""], ["proof (state)\nthis:\n  e = (\\<lambda>(i, j). d i j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have pos: \"\\<And>x. e x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> e x", "using e_def"], ["proof (prove)\nusing this:\n  e = (\\<lambda>(i, j). d i j)\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> e x", "by auto"], ["proof (state)\nthis:\n  0 \\<le> e ?x3\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"(\\<Sum>n. (\\<Sum>i. d (i+1) (n+1+i))) = (\\<Sum>n. (\\<Sum>i. e(i+1, n+1+i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n i. d (i + 1) (n + 1 + i)) = (\\<Sum>n i. e (i + 1, n + 1 + i))", "using e_def"], ["proof (prove)\nusing this:\n  e = (\\<lambda>(i, j). d i j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n i. d (i + 1) (n + 1 + i)) = (\\<Sum>n i. e (i + 1, n + 1 + i))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n i. d (i + 1) (n + 1 + i)) = (\\<Sum>n i. e (i + 1, n + 1 + i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n i. d (i + 1) (n + 1 + i)) = (\\<Sum>n i. e (i + 1, n + 1 + i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = \\<integral>\\<^sup>+n. \\<integral>\\<^sup>+i. e (i+1, n+1+i) \\<partial>count_space UNIV \\<partial>count_space UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n i. e (i + 1, n + 1 + i)) =\n    \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n        \\<partial>count_space UNIV\n                       \\<partial>count_space UNIV", "using pos nn_integral_count_space_nat suminf_0_le"], ["proof (prove)\nusing this:\n  0 \\<le> e ?x3\n  integral\\<^sup>N (count_space UNIV) ?f = (\\<Sum>i. ?f i)\n  (\\<And>n. 0 \\<le> ?f n) \\<Longrightarrow> 0 \\<le> (\\<Sum>n. ?f n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n i. e (i + 1, n + 1 + i)) =\n    \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n        \\<partial>count_space UNIV\n                       \\<partial>count_space UNIV", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n i. e (i + 1, n + 1 + i)) =\n  \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n      \\<partial>count_space UNIV\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n i. e (i + 1, n + 1 + i)) =\n  \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n      \\<partial>count_space UNIV\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<integral>\\<^sup>+x. e (g x) \\<partial>count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n        \\<partial>count_space UNIV\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ x. e (g x) \\<partial>count_space UNIV", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n        \\<partial>count_space UNIV\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ x. e (case x of\n                              (i, n) \\<Rightarrow> (i + 1, n + 1 + i))\n                       \\<partial>count_space UNIV", "using nn_integral_snd_count_space[of \"\\<lambda>(i,n). e(i+1, n+1+i)\"]"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n        (case (x, y) of (i, n) \\<Rightarrow> e (i + 1, n + 1 + i))\n      \\<partial>count_space UNIV\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ (i, n). e (i + 1, n + 1 + i)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n        \\<partial>count_space UNIV\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ x. e (case x of\n                              (i, n) \\<Rightarrow> (i + 1, n + 1 + i))\n                       \\<partial>count_space UNIV", "by (auto simp add: prod.case_distrib)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n      \\<partial>count_space UNIV\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ x. e (g x) \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ n. \\<integral>\\<^sup>+ i. e (i + 1, n + 1 + i)\n      \\<partial>count_space UNIV\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ x. e (g x) \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<integral>\\<^sup>+y \\<in> U. e y \\<partial>count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. e (g x) \\<partial>count_space UNIV =\n    set_nn_integral (count_space UNIV) U e", "using nn_integral_count_compose_bij[OF bij]"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>UNIV. ?f (g x)\\<partial>count_space UNIV =\n  set_nn_integral (count_space UNIV) U ?f\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. e (g x) \\<partial>count_space UNIV =\n    set_nn_integral (count_space UNIV) U e", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. e (g x) \\<partial>count_space UNIV =\n  set_nn_integral (count_space UNIV) U e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  set_nn_integral (count_space UNIV) U e", "have *: \"(\\<Sum>n. (\\<Sum>i. d (i+1) (n+1+i))) = (\\<integral>\\<^sup>+y \\<in> U. e y \\<partial>count_space UNIV)\""], ["proof (prove)\nusing this:\n  (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  set_nn_integral (count_space UNIV) U e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n    set_nn_integral (count_space UNIV) U e", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  set_nn_integral (count_space UNIV) U e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "define V where \"V = {((i::nat),(n::nat)). i = 0}\""], ["proof (state)\nthis:\n  V = {(i, n). i = 0}\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have i: \"e (i, n) * indicator {0} i = e (i, n) * indicator V (i, n)\" for i n"], ["proof (prove)\ngoal (1 subgoal):\n 1. e (i, n) * indicator {0} i = e (i, n) * indicator V (i, n)", "by (auto simp add: indicator_def V_def)"], ["proof (state)\nthis:\n  e (?i3, ?n3) * indicator {0} ?i3 = e (?i3, ?n3) * indicator V (?i3, ?n3)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"d 0 n = (\\<integral>\\<^sup>+i \\<in> {0}. e (i, n) \\<partial>count_space UNIV)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. d 0 n = \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d 0 n = \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV", "have \"(\\<integral>\\<^sup>+i \\<in> {0}. e (i, n) \\<partial>count_space UNIV) = (\\<integral>\\<^sup>+i. e (i, n) \\<partial>count_space {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ i. e (i, n) \\<partial>count_space {0}", "using nn_integral_count_space_indicator[of _ \"\\<lambda>i. e(i, n)\"]"], ["proof (prove)\nusing this:\n  NO_MATCH UNIV ?X \\<Longrightarrow>\n  \\<integral>\\<^sup>+ x. e (x, n) \\<partial>count_space ?X =\n  \\<integral>\\<^sup>+x\\<in>?X. e (x, n)\\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ i. e (i, n) \\<partial>count_space {0}", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ i. e (i, n) \\<partial>count_space {0}\n\ngoal (1 subgoal):\n 1. d 0 n = \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ i. e (i, n) \\<partial>count_space {0}\n\ngoal (1 subgoal):\n 1. d 0 n = \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV", "have \"... = e (0, n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ i. e (i, n) \\<partial>count_space {0} = e (0, n)", "using nn_integral_count_space_finite[where ?f = \"\\<lambda>i. e (i, n)\"]"], ["proof (prove)\nusing this:\n  finite ?A \\<Longrightarrow>\n  \\<integral>\\<^sup>+ x. e (x, n) \\<partial>count_space ?A =\n  (\\<Sum>a\\<in>?A. e (a, n))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ i. e (i, n) \\<partial>count_space {0} = e (0, n)", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ i. e (i, n) \\<partial>count_space {0} = e (0, n)\n\ngoal (1 subgoal):\n 1. d 0 n = \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV =\n  e (0, n)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV =\n  e (0, n)\n\ngoal (1 subgoal):\n 1. d 0 n = \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV", "using e_def"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV =\n  e (0, n)\n  e = (\\<lambda>(i, j). d i j)\n\ngoal (1 subgoal):\n 1. d 0 n = \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV", "by simp"], ["proof (state)\nthis:\n  d 0 n = \\<integral>\\<^sup>+x\\<in>{0}. e (x, n)\\<partial>count_space UNIV\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d 0 ?n3 =\n  \\<integral>\\<^sup>+x\\<in>{0}. e (x, ?n3)\\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "then"], ["proof (chain)\npicking this:\n  d 0 ?n3 =\n  \\<integral>\\<^sup>+x\\<in>{0}. e (x, ?n3)\\<partial>count_space UNIV", "have \"(\\<Sum>n. d 0 n) = (\\<Sum>n. (\\<integral>\\<^sup>+i. e (i, n) * indicator {0} i \\<partial>count_space UNIV))\""], ["proof (prove)\nusing this:\n  d 0 ?n3 =\n  \\<integral>\\<^sup>+x\\<in>{0}. e (x, ?n3)\\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. d 0 n) =\n    (\\<Sum>n.\n        \\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\\<partial>count_space UNIV)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n. d 0 n) =\n  (\\<Sum>n.\n      \\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\\<partial>count_space UNIV)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. d 0 n) =\n  (\\<Sum>n.\n      \\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\\<partial>count_space UNIV)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<integral>\\<^sup>+n. (\\<integral>\\<^sup>+i. e (i, n) * indicator {0} i \\<partial>count_space UNIV) \\<partial>count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n.\n        \\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\\<partial>count_space UNIV) =\n    \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\n                            \\<partial>count_space UNIV)\n                       \\<partial>count_space UNIV", "by (simp add: nn_integral_count_space_nat)"], ["proof (state)\nthis:\n  (\\<Sum>n.\n      \\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\\<partial>count_space UNIV) =\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n.\n      \\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\\<partial>count_space UNIV) =\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<integral>\\<^sup>+(i,n). e (i, n) * indicator {0} i \\<partial>count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\n                            \\<partial>count_space UNIV)\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {0} i\n                       \\<partial>count_space UNIV", "using nn_integral_snd_count_space[of \"\\<lambda> (i,n). e(i,n) * indicator {0} i\"]"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n        (case (x, y) of (i, n) \\<Rightarrow> e (i, n) * indicator {0} i)\n      \\<partial>count_space UNIV\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {0} i\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\n                            \\<partial>count_space UNIV)\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {0} i\n                       \\<partial>count_space UNIV", "by auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {0} i\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{0}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {0} i\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<integral>\\<^sup>+(i,n). e (i, n) * indicator V (i,n) \\<partial>count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {0} i\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator V (i, n)\n                       \\<partial>count_space UNIV", "by (metis i)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {0} i\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator V (i, n)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>n. d 0 n) =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator V (i, n)\n                     \\<partial>count_space UNIV", "have \"(\\<Sum>n. d 0 n) = (\\<integral>\\<^sup>+y \\<in> V. e y \\<partial>count_space UNIV)\""], ["proof (prove)\nusing this:\n  (\\<Sum>n. d 0 n) =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator V (i, n)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. d 0 n) = set_nn_integral (count_space UNIV) V e", "by (simp add: split_def)"], ["proof (state)\nthis:\n  (\\<Sum>n. d 0 n) = set_nn_integral (count_space UNIV) V e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>n. d 0 n) = set_nn_integral (count_space UNIV) V e", "have \"?R = (\\<integral>\\<^sup>+y \\<in> V. e y \\<partial>count_space UNIV) + (\\<integral>\\<^sup>+y \\<in> U. e y \\<partial>count_space UNIV)\""], ["proof (prove)\nusing this:\n  (\\<Sum>n. d 0 n) = set_nn_integral (count_space UNIV) V e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n    set_nn_integral (count_space UNIV) V e +\n    set_nn_integral (count_space UNIV) U e", "using *"], ["proof (prove)\nusing this:\n  (\\<Sum>n. d 0 n) = set_nn_integral (count_space UNIV) V e\n  (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  set_nn_integral (count_space UNIV) U e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n    set_nn_integral (count_space UNIV) V e +\n    set_nn_integral (count_space UNIV) U e", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  set_nn_integral (count_space UNIV) V e +\n  set_nn_integral (count_space UNIV) U e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  set_nn_integral (count_space UNIV) V e +\n  set_nn_integral (count_space UNIV) U e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<integral>\\<^sup>+y \\<in> V \\<union> U. e y \\<partial>count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral (count_space UNIV) V e +\n    set_nn_integral (count_space UNIV) U e =\n    set_nn_integral (count_space UNIV) (V \\<union> U) e", "by (rule nn_integral_disjoint_pair_countspace[symmetric], auto simp add: U_def V_def)"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) V e +\n  set_nn_integral (count_space UNIV) U e =\n  set_nn_integral (count_space UNIV) (V \\<union> U) e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) V e +\n  set_nn_integral (count_space UNIV) U e =\n  set_nn_integral (count_space UNIV) (V \\<union> U) e\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<integral>\\<^sup>+(i, n). e (i, n) * indicator {..n} i \\<partial>count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral (count_space UNIV) (V \\<union> U) e =\n    \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {..n} i\n                       \\<partial>count_space UNIV", "by (rule nn_integral_cong, auto simp add: indicator_def V_def U_def pos, meson)"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) (V \\<union> U) e =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {..n} i\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) (V \\<union> U) e =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {..n} i\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<integral>\\<^sup>+n. (\\<integral>\\<^sup>+i. e (i, n) * indicator {..n} i \\<partial>count_space UNIV)\\<partial>count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {..n} i\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                            \\<partial>count_space UNIV)\n                       \\<partial>count_space UNIV", "using nn_integral_snd_count_space[of \"\\<lambda>(i,n). e(i,n) * indicator {..n} i\"]"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ y. \\<integral>\\<^sup>+ x.\n        (case (x, y) of (i, n) \\<Rightarrow> e (i, n) * indicator {..n} i)\n      \\<partial>count_space UNIV\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {..n} i\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {..n} i\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                            \\<partial>count_space UNIV)\n                       \\<partial>count_space UNIV", "by auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {..n} i\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ (i, n). e (i, n) * indicator {..n} i\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"... = (\\<Sum>n. (\\<Sum>i. e (i, n) * indicator {..n} i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                            \\<partial>count_space UNIV)\n                       \\<partial>count_space UNIV =\n    (\\<Sum>n i. e (i, n) * indicator {..n} i)", "using pos nn_integral_count_space_nat suminf_0_le"], ["proof (prove)\nusing this:\n  0 \\<le> e ?x3\n  integral\\<^sup>N (count_space UNIV) ?f = (\\<Sum>i. ?f i)\n  (\\<And>n. 0 \\<le> ?f n) \\<Longrightarrow> 0 \\<le> (\\<Sum>n. ?f n)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                            \\<partial>count_space UNIV)\n                       \\<partial>count_space UNIV =\n    (\\<Sum>n i. e (i, n) * indicator {..n} i)", "by auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV =\n  (\\<Sum>n i. e (i, n) * indicator {..n} i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "moreover"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV =\n  (\\<Sum>n i. e (i, n) * indicator {..n} i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"(\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "have \"finite {..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..n}", "by simp"], ["proof (state)\nthis:\n  finite {..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "moreover"], ["proof (state)\nthis:\n  finite {..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "have \"\\<And>i. i \\<notin> {..n} \\<Longrightarrow> e (i,n) * indicator {..n} i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<notin> {..n} \\<Longrightarrow> e (i, n) * indicator {..n} i = 0", "using indicator_def"], ["proof (prove)\nusing this:\n  indicator ?S ?x = (if ?x \\<in> ?S then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<notin> {..n} \\<Longrightarrow> e (i, n) * indicator {..n} i = 0", "by simp"], ["proof (state)\nthis:\n  ?i3 \\<notin> {..n} \\<Longrightarrow> e (?i3, n) * indicator {..n} ?i3 = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "then"], ["proof (chain)\npicking this:\n  ?i3 \\<notin> {..n} \\<Longrightarrow> e (?i3, n) * indicator {..n} ?i3 = 0", "have \"(\\<Sum>i. e (i,n) * indicator {..n} i) = (\\<Sum>i \\<in> {..n} . e (i, n) * indicator {..n} i)\""], ["proof (prove)\nusing this:\n  ?i3 \\<notin> {..n} \\<Longrightarrow> e (?i3, n) * indicator {..n} ?i3 = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) =\n    (\\<Sum>i\\<le>n. e (i, n) * indicator {..n} i)", "by (meson calculation suminf_finite)"], ["proof (state)\nthis:\n  (\\<Sum>i. e (i, n) * indicator {..n} i) =\n  (\\<Sum>i\\<le>n. e (i, n) * indicator {..n} i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i. e (i, n) * indicator {..n} i) =\n  (\\<Sum>i\\<le>n. e (i, n) * indicator {..n} i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "have \"\\<And>i. i \\<in> {..n} \\<Longrightarrow> e (i, n) * indicator {..n} i = e (i, n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..n} \\<Longrightarrow>\n       e (i, n) * indicator {..n} i = e (i, n)", "using indicator_def"], ["proof (prove)\nusing this:\n  indicator ?S ?x = (if ?x \\<in> ?S then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..n} \\<Longrightarrow>\n       e (i, n) * indicator {..n} i = e (i, n)", "by auto"], ["proof (state)\nthis:\n  ?i3 \\<in> {..n} \\<Longrightarrow>\n  e (?i3, n) * indicator {..n} ?i3 = e (?i3, n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "ultimately"], ["proof (chain)\npicking this:\n  finite {..n}\n  (\\<Sum>i. e (i, n) * indicator {..n} i) =\n  (\\<Sum>i\\<le>n. e (i, n) * indicator {..n} i)\n  ?i3 \\<in> {..n} \\<Longrightarrow>\n  e (?i3, n) * indicator {..n} ?i3 = e (?i3, n)", "show \"(\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))\""], ["proof (prove)\nusing this:\n  finite {..n}\n  (\\<Sum>i. e (i, n) * indicator {..n} i) =\n  (\\<Sum>i\\<le>n. e (i, n) * indicator {..n} i)\n  ?i3 \\<in> {..n} \\<Longrightarrow>\n  e (?i3, n) * indicator {..n} ?i3 = e (?i3, n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i. e (i, n) * indicator {..n} i) = (\\<Sum>i\\<le>n. e (i, n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i. e (i, ?n3) * indicator {..?n3} i) =\n  (\\<Sum>i\\<le>?n3. e (i, ?n3))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV =\n  (\\<Sum>n i. e (i, n) * indicator {..n} i)\n  (\\<Sum>i. e (i, ?n3) * indicator {..?n3} i) =\n  (\\<Sum>i\\<le>?n3. e (i, ?n3))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV =\n  (\\<Sum>n i. e (i, n) * indicator {..n} i)\n  (\\<Sum>i. e (i, ?n3) * indicator {..?n3} i) =\n  (\\<Sum>i\\<le>?n3. e (i, ?n3))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "using e_def"], ["proof (prove)\nusing this:\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i)) =\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV\n  \\<integral>\\<^sup>+ n. (\\<integral>\\<^sup>+i\\<in>{..n}. e (i, n)\n                          \\<partial>count_space UNIV)\n                     \\<partial>count_space UNIV =\n  (\\<Sum>n i. e (i, n) * indicator {..n} i)\n  (\\<Sum>i. e (i, ?n3) * indicator {..?n3} i) =\n  (\\<Sum>i\\<le>?n3. e (i, ?n3))\n  e = (\\<lambda>(i, j). d i j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n. \\<Sum>i\\<le>n. d i n) =\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context conservative_mpt begin"], ["", "text \\<open>We prove Kac's Formula (in the general form for induced functions) first for\nfunctions taking values in ennreal (to avoid all summabilities issues). The result for\nreal functions will follow by domination. First, we assume additionally that $f$ is bounded\nand has a support of finite measure, the general case will follow readily by truncation.\n\nThe proof is again an instance of the fact that the preimage of the set of points\nwith first entrance time $n$ is the union of the set of points with first entrance time $n+1$,\nand the points of $A$ with first return $n+1$. Keeping track of the integral of $f$ on the\ndifferent parts that appear in this argument, we will see that the integral of the induced\nfunction on the set of points with return time at most $n$ is equal to the integral of the function,\nup to an error controlled by the measure of points in $T^{-n}(supp(f))$ with local time $0$.\nLocal time controls ensure that this contribution vanishes asymptotically.\n\\<close>"], ["", "lemma induced_function_nn_integral_aux:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and f_meas [measurable]: \"f \\<in> borel_measurable M\"\n      and f_bound: \"\\<And>x. f x \\<le> ennreal C\" \"0 \\<le> C\"\n      and f_supp: \"emeasure M {x \\<in> space M. f x > 0} < \\<infinity>\"\n  shows \"(\\<integral>\\<^sup>+y. induced_function A f y \\<partial>M) = (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "define B where \"B = (\\<lambda>n. first_entrance_set A n)\""], ["proof (state)\nthis:\n  B = first_entrance_set A\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have B_meas [measurable]: \"\\<And>n. B n \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. B n \\<in> sets M", "by (simp add: B_def)"], ["proof (state)\nthis:\n  B ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  B ?n3 \\<in> sets M", "have B2 [measurable]: \"(\\<Union>n. B (n+1)) \\<in> sets M\""], ["proof (prove)\nusing this:\n  B ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>n. B (n + 1)) \\<in> sets M", "by measurable"], ["proof (state)\nthis:\n  (\\<Union>n. B (n + 1)) \\<in> sets M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have *: \"B = disjointed (\\<lambda>i. (T^^i)--`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B = disjointed (\\<lambda>i. (T ^^ i) --` A)", "by (auto simp add: B_def disjointed_def first_entrance_set_def)"], ["proof (state)\nthis:\n  B = disjointed (\\<lambda>i. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  B = disjointed (\\<lambda>i. (T ^^ i) --` A)", "have \"disjoint_family B\""], ["proof (prove)\nusing this:\n  B = disjointed (\\<lambda>i. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. disjoint_family B", "by (simp add: disjoint_family_disjointed)"], ["proof (state)\nthis:\n  disjoint_family B\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<Union>n. (T^^n)--`A) = (\\<Union>n. disjointed (\\<lambda>i. (T^^i)--`A) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` A) =\n    \\<Union> (range (disjointed (\\<lambda>i. (T ^^ i) --` A)))", "by (simp add: UN_disjointed_eq)"], ["proof (state)\nthis:\n  (\\<Union>n. (T ^^ n) --` A) =\n  \\<Union> (range (disjointed (\\<lambda>i. (T ^^ i) --` A)))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  (\\<Union>n. (T ^^ n) --` A) =\n  \\<Union> (range (disjointed (\\<lambda>i. (T ^^ i) --` A)))", "have \"(\\<Union>n. (T^^n)--`A) = (\\<Union>n. B n)\""], ["proof (prove)\nusing this:\n  (\\<Union>n. (T ^^ n) --` A) =\n  \\<Union> (range (disjointed (\\<lambda>i. (T ^^ i) --` A)))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` A) = \\<Union> (range B)", "using *"], ["proof (prove)\nusing this:\n  (\\<Union>n. (T ^^ n) --` A) =\n  \\<Union> (range (disjointed (\\<lambda>i. (T ^^ i) --` A)))\n  B = disjointed (\\<lambda>i. (T ^^ i) --` A)\n\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` A) = \\<Union> (range B)", "by simp"], ["proof (state)\nthis:\n  (\\<Union>n. (T ^^ n) --` A) = \\<Union> (range B)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  (\\<Union>n. (T ^^ n) --` A) = \\<Union> (range B)", "have \"(\\<Union>n. (T^^n)--`A) = B 0 \\<union> (\\<Union>n. B (n+1))\""], ["proof (prove)\nusing this:\n  (\\<Union>n. (T ^^ n) --` A) = \\<Union> (range B)\n\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` A) = B 0 \\<union> (\\<Union>n. B (n + 1))", "by (auto) (metis not0_implies_Suc)"], ["proof (state)\nthis:\n  (\\<Union>n. (T ^^ n) --` A) = B 0 \\<union> (\\<Union>n. B (n + 1))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  (\\<Union>n. (T ^^ n) --` A) = B 0 \\<union> (\\<Union>n. B (n + 1))", "have \"(\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M) = (\\<integral>\\<^sup>+ x \\<in> (B 0 \\<union> (\\<Union>n. B (n+1))). f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  (\\<Union>n. (T ^^ n) --` A) = B 0 \\<union> (\\<Union>n. B (n + 1))\n\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n    set_nn_integral M (B 0 \\<union> (\\<Union>n. B (n + 1))) f", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0 \\<union> (\\<Union>n. B (n + 1))) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0 \\<union> (\\<Union>n. B (n + 1))) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral>\\<^sup>+ x \\<in> B 0. f x \\<partial>M) + (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. B (n+1)). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M (B 0 \\<union> (\\<Union>n. B (n + 1))) f =\n    set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f", "proof (rule nn_integral_disjoint_pair)"], ["proof (state)\ngoal (4 subgoals):\n 1. f \\<in> borel_measurable M\n 2. B 0 \\<in> sets M\n 3. (\\<Union>n. B (n + 1)) \\<in> sets M\n 4. B 0 \\<inter> (\\<Union>n. B (n + 1)) = {}", "show \"B 0 \\<inter> (\\<Union>n. B (n+1)) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B 0 \\<inter> (\\<Union>n. B (n + 1)) = {}", "by (auto) (metis IntI Suc_neq_Zero UNIV_I empty_iff \\<open>disjoint_family B\\<close> disjoint_family_on_def)"], ["proof (state)\nthis:\n  B 0 \\<inter> (\\<Union>n. B (n + 1)) = {}\n\ngoal (3 subgoals):\n 1. f \\<in> borel_measurable M\n 2. B 0 \\<in> sets M\n 3. (\\<Union>n. B (n + 1)) \\<in> sets M", "qed auto"], ["proof (state)\nthis:\n  set_nn_integral M (B 0 \\<union> (\\<Union>n. B (n + 1))) f =\n  set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "finally"], ["proof (chain)\npicking this:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f", "have \"(\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M) = (\\<integral>\\<^sup>+ x \\<in> B 0. f x \\<partial>M) + (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. B (n+1)). f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f\n\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n    set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "moreover"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. B (n+1)). f x \\<partial>M) = (\\<Sum>n. (\\<integral>\\<^sup>+ x \\<in> B (n+1). f x \\<partial>M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union>n. B (n + 1)) f =\n    (\\<Sum>n. set_nn_integral M (B (n + 1)) f)", "apply (rule nn_integral_disjoint_family)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f \\<in> borel_measurable M\n 2. \\<And>n. B (n + 1) \\<in> sets M\n 3. disjoint_family (\\<lambda>n. B (n + 1))", "using \\<open>disjoint_family B\\<close>"], ["proof (prove)\nusing this:\n  disjoint_family B\n\ngoal (3 subgoals):\n 1. f \\<in> borel_measurable M\n 2. \\<And>n. B (n + 1) \\<in> sets M\n 3. disjoint_family (\\<lambda>n. B (n + 1))", "by (auto simp add: disjoint_family_on_def)"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union>n. B (n + 1)) f =\n  (\\<Sum>n. set_nn_integral M (B (n + 1)) f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "ultimately"], ["proof (chain)\npicking this:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f\n  set_nn_integral M (\\<Union>n. B (n + 1)) f =\n  (\\<Sum>n. set_nn_integral M (B (n + 1)) f)", "have Bdec: \"(\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M) = (\\<integral>\\<^sup>+ x \\<in> B 0. f x \\<partial>M) + (\\<Sum>n. \\<integral>\\<^sup>+ x \\<in> B (n+1). f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0) f + set_nn_integral M (\\<Union>n. B (n + 1)) f\n  set_nn_integral M (\\<Union>n. B (n + 1)) f =\n  (\\<Sum>n. set_nn_integral M (B (n + 1)) f)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n    set_nn_integral M (B 0) f + (\\<Sum>n. set_nn_integral M (B (n + 1)) f)", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0) f + (\\<Sum>n. set_nn_integral M (B (n + 1)) f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "define D where \"D = (\\<lambda>n. (return_time_function A)-` {n+1})\""], ["proof (state)\nthis:\n  D = (\\<lambda>n. return_time_function A -` {n + 1})\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  D = (\\<lambda>n. return_time_function A -` {n + 1})", "have \"disjoint_family D\""], ["proof (prove)\nusing this:\n  D = (\\<lambda>n. return_time_function A -` {n + 1})\n\ngoal (1 subgoal):\n 1. disjoint_family D", "by (auto simp add: disjoint_family_on_def)"], ["proof (state)\nthis:\n  disjoint_family D\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have *: \"\\<And>n. D n = T--`(B n) \\<inter> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. D n = T --` B n \\<inter> A", "using D_def B_def return_time_rec[OF assms(1)]"], ["proof (prove)\nusing this:\n  D = (\\<lambda>n. return_time_function A -` {n + 1})\n  B = first_entrance_set A\n  return_time_function A -` {Suc ?n} =\n  T --` first_entrance_set A ?n \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>n. D n = T --` B n \\<inter> A", "by simp"], ["proof (state)\nthis:\n  D ?n3 = T --` B ?n3 \\<inter> A\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  D ?n3 = T --` B ?n3 \\<inter> A", "have [measurable]: \"\\<And>n. D n \\<in> sets M\""], ["proof (prove)\nusing this:\n  D ?n3 = T --` B ?n3 \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>n. D n \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  D ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have **: \"\\<And>n. B (n+1) = T--`(B n) - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. B (n + 1) = T --` B n - A", "using first_entrance_rec[OF assms(1)] B_def"], ["proof (prove)\nusing this:\n  first_entrance_set A (Suc ?n) = T --` first_entrance_set A ?n - A\n  B = first_entrance_set A\n\ngoal (1 subgoal):\n 1. \\<And>n. B (n + 1) = T --` B n - A", "by simp"], ["proof (state)\nthis:\n  B (?n3 + 1) = T --` B ?n3 - A\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have pos0: \"\\<And>i x. f((T^^i)x) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i x. 0 \\<le> f ((T ^^ i) x)", "using assms(3)"], ["proof (prove)\nusing this:\n  f ?x3 \\<le> ennreal C\n\ngoal (1 subgoal):\n 1. \\<And>i x. 0 \\<le> f ((T ^^ i) x)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> f ((T ^^ ?i3) ?x3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have pos:\"\\<And> i C x. f((T^^i)x) * indicator (C) x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i C x. 0 \\<le> f ((T ^^ i) x) * indicator C x", "using assms(3)"], ["proof (prove)\nusing this:\n  f ?x3 \\<le> ennreal C\n\ngoal (1 subgoal):\n 1. \\<And>i C x. 0 \\<le> f ((T ^^ i) x) * indicator C x", "by simp"], ["proof (state)\nthis:\n  0 \\<le> f ((T ^^ ?i3) ?x3) * indicator ?C3 ?x3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have mes0 [measurable]: \"\\<And> i. (\\<lambda>x. f((T^^i)x)) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. (\\<lambda>x. f ((T ^^ i) x)) \\<in> borel_measurable M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. f ((T ^^ ?i3) x)) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f ((T ^^ ?i3) x)) \\<in> borel_measurable M", "have [measurable]: \"\\<And> i C. C \\<in> sets M \\<Longrightarrow> (\\<lambda>x. f((T^^i)x) * indicator C x) \\<in> borel_measurable M\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f ((T ^^ ?i3) x)) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. \\<And>i C.\n       C \\<in> sets M \\<Longrightarrow>\n       (\\<lambda>x. f ((T ^^ i) x) * indicator C x) \\<in> borel_measurable M", "by simp"], ["proof (state)\nthis:\n  ?C3 \\<in> sets M \\<Longrightarrow>\n  (\\<lambda>x. f ((T ^^ ?i3) x) * indicator ?C3 x) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"\\<And>y. induced_function A f y = induced_function A f y * indicator ((return_time_function A)-`{1..}) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       induced_function A f y =\n       induced_function A f y *\n       indicator (return_time_function A -` {1..}) y", "by (rule induced_function_support)"], ["proof (state)\nthis:\n  induced_function A f ?y3 =\n  induced_function A f ?y3 * indicator (return_time_function A -` {1..}) ?y3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "moreover"], ["proof (state)\nthis:\n  induced_function A f ?y3 =\n  induced_function A f ?y3 * indicator (return_time_function A -` {1..}) ?y3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(return_time_function A)-`{(1::nat)..} = (\\<Union>n. D n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time_function A -` {1..} = \\<Union> (range D)", "by (auto simp add: D_def Suc_le_D)"], ["proof (state)\nthis:\n  return_time_function A -` {1..} = \\<Union> (range D)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "ultimately"], ["proof (chain)\npicking this:\n  induced_function A f ?y3 =\n  induced_function A f ?y3 * indicator (return_time_function A -` {1..}) ?y3\n  return_time_function A -` {1..} = \\<Union> (range D)", "have \"\\<And>y. induced_function A f y = induced_function A f y * indicator (\\<Union>n. D n) y\""], ["proof (prove)\nusing this:\n  induced_function A f ?y3 =\n  induced_function A f ?y3 * indicator (return_time_function A -` {1..}) ?y3\n  return_time_function A -` {1..} = \\<Union> (range D)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       induced_function A f y =\n       induced_function A f y * indicator (\\<Union> (range D)) y", "by simp"], ["proof (state)\nthis:\n  induced_function A f ?y3 =\n  induced_function A f ?y3 * indicator (\\<Union> (range D)) ?y3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  induced_function A f ?y3 =\n  induced_function A f ?y3 * indicator (\\<Union> (range D)) ?y3", "have \"(\\<integral>\\<^sup>+y. induced_function A f y \\<partial>M) = (\\<integral>\\<^sup>+y \\<in> (\\<Union>n. D n). induced_function A f y \\<partial>M)\""], ["proof (prove)\nusing this:\n  induced_function A f ?y3 =\n  induced_function A f ?y3 * indicator (\\<Union> (range D)) ?y3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union> (range D)) (induced_function A f)", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A f) =\n  set_nn_integral M (\\<Union> (range D)) (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A f) =\n  set_nn_integral M (\\<Union> (range D)) (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<Sum>n. (\\<integral>\\<^sup>+y \\<in> D n. induced_function A f y \\<partial>M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union> (range D)) (induced_function A f) =\n    (\\<Sum>n. set_nn_integral M (D n) (induced_function A f))", "apply (rule nn_integral_disjoint_family)"], ["proof (prove)\ngoal (3 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<And>n. D n \\<in> sets M\n 3. disjoint_family D", "unfolding induced_function_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>x. \\<Sum>i<return_time_function A x. f ((T ^^ i) x))\n    \\<in> borel_measurable M\n 2. \\<And>n. D n \\<in> sets M\n 3. disjoint_family D", "by (auto simp add: pos0 sum_nonneg \\<open>disjoint_family D\\<close>)"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union> (range D)) (induced_function A f) =\n  (\\<Sum>n. set_nn_integral M (D n) (induced_function A f))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "finally"], ["proof (chain)\npicking this:\n  integral\\<^sup>N M (induced_function A f) =\n  (\\<Sum>n. set_nn_integral M (D n) (induced_function A f))", "have a: \"(\\<integral>\\<^sup>+y. induced_function A f y \\<partial>M) = (\\<Sum>n. (\\<integral>\\<^sup>+y \\<in> D n. induced_function A f y \\<partial>M))\""], ["proof (prove)\nusing this:\n  integral\\<^sup>N M (induced_function A f) =\n  (\\<Sum>n. set_nn_integral M (D n) (induced_function A f))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    (\\<Sum>n. set_nn_integral M (D n) (induced_function A f))", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A f) =\n  (\\<Sum>n. set_nn_integral M (D n) (induced_function A f))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "define d where \"d = (\\<lambda>i n. (\\<integral>\\<^sup>+y \\<in> D n. f((T^^i)y) \\<partial>M))\""], ["proof (state)\nthis:\n  d =\n  (\\<lambda>i n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<integral>\\<^sup>+y \\<in> D n. induced_function A f y \\<partial>M) = (\\<Sum>i\\<in>{..n}. d i n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)", "have \"induced_function A f y * indicator (D n) y = (\\<Sum>i\\<in>{..<n+1}. f((T^^i)y) * indicator (D n) y)\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_function A f y * indicator (D n) y =\n    (\\<Sum>i<n + 1. f ((T ^^ i) y) * indicator (D n) y)", "by (auto simp add: induced_function_def D_def indicator_def)"], ["proof (state)\nthis:\n  induced_function A f ?y3 * indicator (D n) ?y3 =\n  (\\<Sum>i<n + 1. f ((T ^^ i) ?y3) * indicator (D n) ?y3)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)", "then"], ["proof (chain)\npicking this:\n  induced_function A f ?y3 * indicator (D n) ?y3 =\n  (\\<Sum>i<n + 1. f ((T ^^ i) ?y3) * indicator (D n) ?y3)", "have \"(\\<integral>\\<^sup>+y \\<in> D n. induced_function A f y \\<partial>M) = (\\<Sum>i\\<in>{..<n+1}. (\\<integral>\\<^sup>+y \\<in> D n. f((T^^i)y) \\<partial>M))\""], ["proof (prove)\nusing this:\n  induced_function A f ?y3 * indicator (D n) ?y3 =\n  (\\<Sum>i<n + 1. f ((T ^^ i) ?y3) * indicator (D n) ?y3)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) =\n    (\\<Sum>i<n + 1. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)", "using pos nn_integral_sum[of \"{..<n+1}\", of \"\\<lambda>i y. f((T^^i)y) * indicator (D n) y\"]"], ["proof (prove)\nusing this:\n  induced_function A f ?y3 * indicator (D n) ?y3 =\n  (\\<Sum>i<n + 1. f ((T ^^ i) ?y3) * indicator (D n) ?y3)\n  0 \\<le> f ((T ^^ ?i3) ?x3) * indicator ?C3 ?x3\n  (\\<And>i.\n      i \\<in> {..<n + 1} \\<Longrightarrow>\n      (\\<lambda>y. f ((T ^^ i) y) * indicator (D n) y)\n      \\<in> borel_measurable ?M) \\<Longrightarrow>\n  \\<integral>\\<^sup>+ x. (\\<Sum>i<n + 1. f ((T ^^ i) x) * indicator (D n) x)\n                     \\<partial>?M =\n  (\\<Sum>i<n + 1. \\<integral>\\<^sup>+y\\<in>D n. f ((T ^^ i) y)\\<partial>?M)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) =\n    (\\<Sum>i<n + 1. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (D n) (induced_function A f) =\n  (\\<Sum>i<n + 1. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)", "also"], ["proof (state)\nthis:\n  set_nn_integral M (D n) (induced_function A f) =\n  (\\<Sum>i<n + 1. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)", "have \"... = (\\<Sum>i\\<in>{..n}. (\\<integral>\\<^sup>+y \\<in> D n. f((T^^i)y) \\<partial>M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n + 1.\n        \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M) =\n    (\\<Sum>i\\<le>n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)", "using lessThan_Suc_atMost"], ["proof (prove)\nusing this:\n  {..<Suc ?k} = {..?k}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n + 1.\n        \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M) =\n    (\\<Sum>i\\<le>n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i<n + 1. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M) =\n  (\\<Sum>i\\<le>n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)", "finally"], ["proof (chain)\npicking this:\n  set_nn_integral M (D n) (induced_function A f) =\n  (\\<Sum>i\\<le>n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)", "show ?thesis"], ["proof (prove)\nusing this:\n  set_nn_integral M (D n) (induced_function A f) =\n  (\\<Sum>i\\<le>n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)", "using d_def"], ["proof (prove)\nusing this:\n  set_nn_integral M (D n) (induced_function A f) =\n  (\\<Sum>i\\<le>n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n  d =\n  (\\<lambda>i n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (D n) (induced_function A f) = (\\<Sum>i\\<le>n. d i n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_nn_integral M (D ?n3) (induced_function A f) =\n  (\\<Sum>i\\<le>?n3. d i ?n3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  set_nn_integral M (D ?n3) (induced_function A f) =\n  (\\<Sum>i\\<le>?n3. d i ?n3)", "have induced_dec: \"(\\<integral>\\<^sup>+y. induced_function A f y \\<partial>M) = (\\<Sum>n. (\\<Sum>i\\<in>{..n}. d i n))\""], ["proof (prove)\nusing this:\n  set_nn_integral M (D ?n3) (induced_function A f) =\n  (\\<Sum>i\\<le>?n3. d i ?n3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    (\\<Sum>n. \\<Sum>i\\<le>n. d i n)", "using a"], ["proof (prove)\nusing this:\n  set_nn_integral M (D ?n3) (induced_function A f) =\n  (\\<Sum>i\\<le>?n3. d i ?n3)\n  integral\\<^sup>N M (induced_function A f) =\n  (\\<Sum>n. set_nn_integral M (D n) (induced_function A f))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    (\\<Sum>n. \\<Sum>i\\<le>n. d i n)", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A f) =\n  (\\<Sum>n. \\<Sum>i\\<le>n. d i n)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<Union>n\\<in>{1..}. (return_time_function A)-` {n}) = UNIV - (return_time_function A)-` {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) =\n    UNIV - return_time_function A -` {0}", "by auto"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) =\n  UNIV - return_time_function A -` {0}\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) =\n  UNIV - return_time_function A -` {0}", "have \"(\\<Union>n\\<in>{1..}. (return_time_function A)-` {n}) = recurrent_subset A\""], ["proof (prove)\nusing this:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) =\n  UNIV - return_time_function A -` {0}\n\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) =\n    recurrent_subset A", "using return_time0"], ["proof (prove)\nusing this:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) =\n  UNIV - return_time_function A -` {0}\n  return_time_function ?A -` {0} = UNIV - recurrent_subset ?A\n\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) =\n    recurrent_subset A", "by auto"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) = recurrent_subset A\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "moreover"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) = recurrent_subset A\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<Union>n. (return_time_function A)-` {n+1}) = (\\<Union>n\\<in>{1..}. (return_time_function A)-` {n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n. return_time_function A -` {n + 1}) =\n    (\\<Union>n\\<in>{1..}. return_time_function A -` {n})", "by (auto simp add: Suc_le_D)"], ["proof (state)\nthis:\n  (\\<Union>n. return_time_function A -` {n + 1}) =\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n})\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) = recurrent_subset A\n  (\\<Union>n. return_time_function A -` {n + 1}) =\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n})", "have \"(\\<Union>n. D n) = recurrent_subset A\""], ["proof (prove)\nusing this:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) = recurrent_subset A\n  (\\<Union>n. return_time_function A -` {n + 1}) =\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n})\n\ngoal (1 subgoal):\n 1. \\<Union> (range D) = recurrent_subset A", "using D_def"], ["proof (prove)\nusing this:\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n}) = recurrent_subset A\n  (\\<Union>n. return_time_function A -` {n + 1}) =\n  (\\<Union>n\\<in>{1..}. return_time_function A -` {n})\n  D = (\\<lambda>n. return_time_function A -` {n + 1})\n\ngoal (1 subgoal):\n 1. \\<Union> (range D) = recurrent_subset A", "by simp"], ["proof (state)\nthis:\n  \\<Union> (range D) = recurrent_subset A\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "moreover"], ["proof (state)\nthis:\n  \\<Union> (range D) = recurrent_subset A\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<integral>\\<^sup>+x \\<in> A. f x \\<partial>M) = (\\<integral>\\<^sup>+x \\<in> recurrent_subset A. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M A f = set_nn_integral M (recurrent_subset A) f", "by (rule nn_integral_null_delta, auto simp add: Diff_mono Un_absorb2 recurrent_subset_incl(1)[of A] Poincare_recurrence_thm(1)[OF assms(1)])"], ["proof (state)\nthis:\n  set_nn_integral M A f = set_nn_integral M (recurrent_subset A) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "moreover"], ["proof (state)\nthis:\n  set_nn_integral M A f = set_nn_integral M (recurrent_subset A) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"B 0 = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B 0 = A", "using B_def first_entrance_set_def"], ["proof (prove)\nusing this:\n  B = first_entrance_set A\n  first_entrance_set ?A ?n =\n  (T ^^ ?n) --` ?A - (\\<Union>i<?n. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. B 0 = A", "by simp"], ["proof (state)\nthis:\n  B 0 = A\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "ultimately"], ["proof (chain)\npicking this:\n  \\<Union> (range D) = recurrent_subset A\n  set_nn_integral M A f = set_nn_integral M (recurrent_subset A) f\n  B 0 = A", "have \"(\\<integral>\\<^sup>+x \\<in> B 0. f x \\<partial>M) = (\\<integral>\\<^sup>+x \\<in> (\\<Union>n. D n). f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  \\<Union> (range D) = recurrent_subset A\n  set_nn_integral M A f = set_nn_integral M (recurrent_subset A) f\n  B 0 = A\n\ngoal (1 subgoal):\n 1. set_nn_integral M (B 0) f = set_nn_integral M (\\<Union> (range D)) f", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (B 0) f = set_nn_integral M (\\<Union> (range D)) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  set_nn_integral M (B 0) f = set_nn_integral M (\\<Union> (range D)) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<Sum>n. (\\<integral>\\<^sup>+x \\<in> D n. f x \\<partial>M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union> (range D)) f =\n    (\\<Sum>n. set_nn_integral M (D n) f)", "by (rule nn_integral_disjoint_family, auto simp add: \\<open>disjoint_family D\\<close>)"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union> (range D)) f =\n  (\\<Sum>n. set_nn_integral M (D n) f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "finally"], ["proof (chain)\npicking this:\n  set_nn_integral M (B 0) f = (\\<Sum>n. set_nn_integral M (D n) f)", "have B0dec: \"(\\<integral>\\<^sup>+x \\<in> B 0. f x \\<partial>M) = (\\<Sum>n. d 0 n)\""], ["proof (prove)\nusing this:\n  set_nn_integral M (B 0) f = (\\<Sum>n. set_nn_integral M (D n) f)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (B 0) f = (\\<Sum>n. d 0 n)", "using d_def"], ["proof (prove)\nusing this:\n  set_nn_integral M (B 0) f = (\\<Sum>n. set_nn_integral M (D n) f)\n  d =\n  (\\<lambda>i n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (B 0) f = (\\<Sum>n. d 0 n)", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (B 0) f = (\\<Sum>n. d 0 n)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have *: \"(\\<integral>\\<^sup>+x \\<in> B n. f x \\<partial>M) = (\\<Sum>i<k. (\\<integral>\\<^sup>+x \\<in> D(n+i). f((T^^(i+1))x) \\<partial>M)) + (\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M)\" for n k"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M (B n) f =\n    (\\<Sum>i<k.\n        \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n        \\<partial>M) +\n    (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. set_nn_integral M (B n) f =\n    (\\<Sum>i<0.\n        \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n        \\<partial>M) +\n    (\\<integral>\\<^sup>+x\\<in>B (n + 0). f ((T ^^ 0) x)\\<partial>M)\n 2. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. set_nn_integral M (B n) f =\n    (\\<Sum>i<0.\n        \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n        \\<partial>M) +\n    (\\<integral>\\<^sup>+x\\<in>B (n + 0). f ((T ^^ 0) x)\\<partial>M)\n 2. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M (B n) f =\n    (\\<Sum>i<0.\n        \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n        \\<partial>M) +\n    (\\<integral>\\<^sup>+x\\<in>B (n + 0). f ((T ^^ 0) x)\\<partial>M)", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (B n) f =\n  (\\<Sum>i<0.\n      \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>B (n + 0). f ((T ^^ 0) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "case (Suc k)"], ["proof (state)\nthis:\n  set_nn_integral M (B n) f =\n  (\\<Sum>i<k.\n      \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "have \"T--`(B(n+k)) = B(n+k+1) \\<union> D(n+k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` B (n + k) = B (n + k + 1) \\<union> D (n + k)", "using * **"], ["proof (prove)\nusing this:\n  D ?n3 = T --` B ?n3 \\<inter> A\n  B (?n3 + 1) = T --` B ?n3 - A\n\ngoal (1 subgoal):\n 1. T --` B (n + k) = B (n + k + 1) \\<union> D (n + k)", "by blast"], ["proof (state)\nthis:\n  T --` B (n + k) = B (n + k + 1) \\<union> D (n + k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "have \"(\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M) = (\\<integral>\\<^sup>+x. (\\<lambda>x. f((T^^k)x) * indicator (B (n+k)) x)(T x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n    \\<integral>\\<^sup>+ x. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x)\n                       \\<partial>M", "by (rule measure_preserving_preserves_nn_integral[OF Tm], auto simp add: pos)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  \\<integral>\\<^sup>+ x. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x)\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  \\<integral>\\<^sup>+ x. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x)\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "have \"... = (\\<integral>\\<^sup>+x. f((T^^(k+1))x) * indicator (T--`(B (n+k))) x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x)\n                       \\<partial>M =\n    \\<integral>\\<^sup>+x\\<in>T --` B (n + k). f ((T ^^ (k + 1)) x)\n    \\<partial>M", "proof (rule nn_integral_cong_AE)"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n               f ((T ^^ (k + 1)) x) * indicator (T --` B (n + k)) x", "have \"(T^^k)(T x) = (T^^(k+1))x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ k) (T x) = (T ^^ (k + 1)) x", "using comp_eq_dest_lhs"], ["proof (prove)\nusing this:\n  ?a \\<circ> ?b = ?c \\<Longrightarrow> ?a (?b ?v) = ?c ?v\n\ngoal (1 subgoal):\n 1. (T ^^ k) (T x) = (T ^^ (k + 1)) x", "by (metis Suc_eq_plus1 funpow.simps(2) funpow_swap1)"], ["proof (state)\nthis:\n  (T ^^ k) (T ?x3) = (T ^^ (k + 1)) ?x3\n\ngoal (1 subgoal):\n 1. AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n               f ((T ^^ (k + 1)) x) * indicator (T --` B (n + k)) x", "moreover"], ["proof (state)\nthis:\n  (T ^^ k) (T ?x3) = (T ^^ (k + 1)) ?x3\n\ngoal (1 subgoal):\n 1. AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n               f ((T ^^ (k + 1)) x) * indicator (T --` B (n + k)) x", "have \"AE x in M. f((T^^k)(T x)) * indicator (B (n+k)) (T x) = f((T^^k)(T x)) * indicator (T--`(B (n+k))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n               f ((T ^^ k) (T x)) * indicator (T --` B (n + k)) x", "by (simp add: indicator_def \\<open>\\<And>n. B n \\<in> sets M\\<close>)"], ["proof (state)\nthis:\n  AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n             f ((T ^^ k) (T x)) * indicator (T --` B (n + k)) x\n\ngoal (1 subgoal):\n 1. AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n               f ((T ^^ (k + 1)) x) * indicator (T --` B (n + k)) x", "ultimately"], ["proof (chain)\npicking this:\n  (T ^^ k) (T ?x3) = (T ^^ (k + 1)) ?x3\n  AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n             f ((T ^^ k) (T x)) * indicator (T --` B (n + k)) x", "show \"AE x in M. f((T^^k)(T x)) * indicator (B (n+k)) (T x) = f((T^^(k+1))x) * indicator (T--`(B (n+k))) x\""], ["proof (prove)\nusing this:\n  (T ^^ k) (T ?x3) = (T ^^ (k + 1)) ?x3\n  AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n             f ((T ^^ k) (T x)) * indicator (T --` B (n + k)) x\n\ngoal (1 subgoal):\n 1. AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n               f ((T ^^ (k + 1)) x) * indicator (T --` B (n + k)) x", "by simp"], ["proof (state)\nthis:\n  AE x in M. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x) =\n             f ((T ^^ (k + 1)) x) * indicator (T --` B (n + k)) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+x\\<in>T --` B (n + k). f ((T ^^ (k + 1)) x)\\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f ((T ^^ k) (T x)) * indicator (B (n + k)) (T x)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+x\\<in>T --` B (n + k). f ((T ^^ (k + 1)) x)\\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "have \"... = (\\<integral>\\<^sup>+x \\<in> B(n+k+1) \\<union> D(n+k). f((T^^(k+1))x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>T --` B (n + k). f ((T ^^ (k + 1)) x)\n    \\<partial>M =\n    \\<integral>\\<^sup>+x\\<in>B (n + k + 1) \\<union> D (n + k).\n                       f ((T ^^ (k + 1)) x)\n    \\<partial>M", "using \\<open>T--`(B(n+k)) = B(n+k+1) \\<union> D(n+k)\\<close>"], ["proof (prove)\nusing this:\n  T --` B (n + k) = B (n + k + 1) \\<union> D (n + k)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>T --` B (n + k). f ((T ^^ (k + 1)) x)\n    \\<partial>M =\n    \\<integral>\\<^sup>+x\\<in>B (n + k + 1) \\<union> D (n + k).\n                       f ((T ^^ (k + 1)) x)\n    \\<partial>M", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>T --` B (n + k). f ((T ^^ (k + 1)) x)\n  \\<partial>M =\n  \\<integral>\\<^sup>+x\\<in>B (n + k + 1) \\<union> D (n + k).\n                     f ((T ^^ (k + 1)) x)\n  \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>T --` B (n + k). f ((T ^^ (k + 1)) x)\n  \\<partial>M =\n  \\<integral>\\<^sup>+x\\<in>B (n + k + 1) \\<union> D (n + k).\n                     f ((T ^^ (k + 1)) x)\n  \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "have \"... = (\\<integral>\\<^sup>+x \\<in> B(n+k+1). f((T^^(k+1))x) \\<partial>M) + (\\<integral>\\<^sup>+x \\<in> D(n+k). f((T^^(k+1))x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k + 1) \\<union> D (n + k).\n                       f ((T ^^ (k + 1)) x)\n    \\<partial>M =\n    (\\<integral>\\<^sup>+x\\<in>B (n + k + 1). f ((T ^^ (k + 1)) x)\n     \\<partial>M) +\n    (\\<integral>\\<^sup>+x\\<in>D (n + k). f ((T ^^ (k + 1)) x)\\<partial>M)", "proof (rule nn_integral_disjoint_pair[OF mes0[of \"k+1\"]])"], ["proof (state)\ngoal (3 subgoals):\n 1. B (n + k + 1) \\<in> sets M\n 2. D (n + k) \\<in> sets M\n 3. B (n + k + 1) \\<inter> D (n + k) = {}", "show \"B(n+k+1) \\<inter> D(n+k) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B (n + k + 1) \\<inter> D (n + k) = {}", "using * **"], ["proof (prove)\nusing this:\n  D ?n3 = T --` B ?n3 \\<inter> A\n  B (?n3 + 1) = T --` B ?n3 - A\n\ngoal (1 subgoal):\n 1. B (n + k + 1) \\<inter> D (n + k) = {}", "by blast"], ["proof (state)\nthis:\n  B (n + k + 1) \\<inter> D (n + k) = {}\n\ngoal (2 subgoals):\n 1. B (n + k + 1) \\<in> sets M\n 2. D (n + k) \\<in> sets M", "qed (auto)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + k + 1) \\<union> D (n + k).\n                     f ((T ^^ (k + 1)) x)\n  \\<partial>M =\n  (\\<integral>\\<^sup>+x\\<in>B (n + k + 1). f ((T ^^ (k + 1)) x)\n   \\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>D (n + k). f ((T ^^ (k + 1)) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  (\\<integral>\\<^sup>+x\\<in>B (n + k + 1). f ((T ^^ (k + 1)) x)\n   \\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>D (n + k). f ((T ^^ (k + 1)) x)\\<partial>M)", "have \"(\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M) = (\\<integral>\\<^sup>+x \\<in> B(n+k+1). f((T^^(k+1))x) \\<partial>M) + (\\<integral>\\<^sup>+x \\<in> D(n+k). f((T^^(k+1))x) \\<partial>M)\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  (\\<integral>\\<^sup>+x\\<in>B (n + k + 1). f ((T ^^ (k + 1)) x)\n   \\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>D (n + k). f ((T ^^ (k + 1)) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n    (\\<integral>\\<^sup>+x\\<in>B (n + k + 1). f ((T ^^ (k + 1)) x)\n     \\<partial>M) +\n    (\\<integral>\\<^sup>+x\\<in>D (n + k). f ((T ^^ (k + 1)) x)\\<partial>M)", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  (\\<integral>\\<^sup>+x\\<in>B (n + k + 1). f ((T ^^ (k + 1)) x)\n   \\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>D (n + k). f ((T ^^ (k + 1)) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\n        \\<partial>M) \\<Longrightarrow>\n       set_nn_integral M (B n) f =\n       (\\<Sum>i<Suc k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M) +\n       (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\n        \\<partial>M)", "then"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  (\\<integral>\\<^sup>+x\\<in>B (n + k + 1). f ((T ^^ (k + 1)) x)\n   \\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>D (n + k). f ((T ^^ (k + 1)) x)\\<partial>M)", "show ?case"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  (\\<integral>\\<^sup>+x\\<in>B (n + k + 1). f ((T ^^ (k + 1)) x)\n   \\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>D (n + k). f ((T ^^ (k + 1)) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (B n) f =\n    (\\<Sum>i<Suc k.\n        \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n        \\<partial>M) +\n    (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\\<partial>M)", "by (simp add: Suc.IH add.commute add.left_commute)"], ["proof (state)\nthis:\n  set_nn_integral M (B n) f =\n  (\\<Sum>i<Suc k.\n      \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>B (n + Suc k). f ((T ^^ Suc k) x)\\<partial>M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_nn_integral M (B ?n3) f =\n  (\\<Sum>i<?k3.\n      \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n      \\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>B (?n3 + ?k3). f ((T ^^ ?k3) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have a: \"(\\<lambda>k. (\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M)) \\<longlonglongrightarrow> 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "define W where \"W = {x \\<in> space M. f x > 0} \\<inter> (T^^n)--`A\""], ["proof (state)\nthis:\n  W = {x \\<in> space M. 0 < f x} \\<inter> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "have \"emeasure M W \\<le> emeasure M {x \\<in> space M. f x > 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M W \\<le> emeasure M {x \\<in> space M. 0 < f x}", "by (intro emeasure_mono, auto simp add: W_def)"], ["proof (state)\nthis:\n  emeasure M W \\<le> emeasure M {x \\<in> space M. 0 < f x}\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  emeasure M W \\<le> emeasure M {x \\<in> space M. 0 < f x}", "have W_fin: \"emeasure M W < \\<infinity>\""], ["proof (prove)\nusing this:\n  emeasure M W \\<le> emeasure M {x \\<in> space M. 0 < f x}\n\ngoal (1 subgoal):\n 1. emeasure M W < \\<infinity>", "using f_supp"], ["proof (prove)\nusing this:\n  emeasure M W \\<le> emeasure M {x \\<in> space M. 0 < f x}\n  emeasure M {x \\<in> space M. 0 < f x} < \\<infinity>\n\ngoal (1 subgoal):\n 1. emeasure M W < \\<infinity>", "by auto"], ["proof (state)\nthis:\n  emeasure M W < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "have W_meas [measurable]: \"W \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W \\<in> sets M", "unfolding W_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> space M. 0 < f x} \\<inter> (T ^^ n) --` A \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  W \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "have W_incl: \"W \\<subseteq> (T^^n)--`A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W \\<subseteq> (T ^^ n) --` A", "unfolding W_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> space M. 0 < f x} \\<inter> (T ^^ n) --` A\n    \\<subseteq> (T ^^ n) --` A", "by simp"], ["proof (state)\nthis:\n  W \\<subseteq> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "define V where \"V = (\\<lambda>k. {x \\<in> (T^^k)--`W. local_time A k x = 0})\""], ["proof (state)\nthis:\n  V = (\\<lambda>k. {x \\<in> (T ^^ k) --` W. local_time A k x = 0})\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "have V_meas [measurable]: \"V k \\<in> sets M\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. V k \\<in> sets M", "unfolding V_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> (T ^^ k) --` W. local_time A k x = 0} \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  V ?k3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "have a: \"(\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M) \\<le> C * emeasure M (V k)\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "have \"f((T^^k)x) * indicator (B(n+k)) x = f((T^^k)x) * indicator (B(n+k) \\<inter> (T^^k)--`W) x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x\n 2. \\<not> ?P \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "assume \"f((T^^k)x) * indicator (B(n+k)) x = 0\""], ["proof (state)\nthis:\n  f ((T ^^ k) x) * indicator (B (n + k)) x = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x\n 2. \\<not> ?P \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x = 0\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "by (simp add: indicator_def)"], ["proof (state)\nthis:\n  f ((T ^^ k) x) * indicator (B (n + k)) x =\n  f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "assume \"\\<not>(f((T^^k)x) * indicator (B(n+k)) x = 0)\""], ["proof (state)\nthis:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0", "have H: \"f((T^^k)x) * indicator (B(n+k)) x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0", "have inB: \"x \\<in> B(n+k)\""], ["proof (prove)\nusing this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<in> B (n + k)", "using H"], ["proof (prove)\nusing this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<in> B (n + k)", "using indicator_simps(2)"], ["proof (prove)\nusing this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n  ?x \\<notin> ?S \\<Longrightarrow> indicator ?S ?x = (0::?'c)\n\ngoal (1 subgoal):\n 1. x \\<in> B (n + k)", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> B (n + k)\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  x \\<in> B (n + k)", "have s: \"x \\<in> space M\""], ["proof (prove)\nusing this:\n  x \\<in> B (n + k)\n\ngoal (1 subgoal):\n 1. x \\<in> space M", "using B_meas[of \"n+k\"] sets.sets_into_space"], ["proof (prove)\nusing this:\n  x \\<in> B (n + k)\n  B (n + k) \\<in> sets M\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. x \\<in> space M", "by blast"], ["proof (state)\nthis:\n  x \\<in> space M\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  x \\<in> space M", "have a: \"(T^^k)x \\<in> space M\""], ["proof (prove)\nusing this:\n  x \\<in> space M\n\ngoal (1 subgoal):\n 1. (T ^^ k) x \\<in> space M", "by (metis measurable_space Tn_meas[of k])"], ["proof (state)\nthis:\n  (T ^^ k) x \\<in> space M\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "have \"f((T^^k)x) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < f ((T ^^ k) x)", "using H"], ["proof (prove)\nusing this:\n  f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < f ((T ^^ k) x)", "by (simp add: le_neq_trans)"], ["proof (state)\nthis:\n  0 < f ((T ^^ k) x)\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  0 < f ((T ^^ k) x)", "have *: \"(T^^k)x \\<in> {y \\<in> space M. f y > 0}\""], ["proof (prove)\nusing this:\n  0 < f ((T ^^ k) x)\n\ngoal (1 subgoal):\n 1. (T ^^ k) x \\<in> {y \\<in> space M. 0 < f y}", "using a"], ["proof (prove)\nusing this:\n  0 < f ((T ^^ k) x)\n  (T ^^ k) x \\<in> space M\n\ngoal (1 subgoal):\n 1. (T ^^ k) x \\<in> {y \\<in> space M. 0 < f y}", "by simp"], ["proof (state)\nthis:\n  (T ^^ k) x \\<in> {y \\<in> space M. 0 < f y}\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "have \"(T^^(n+k))x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ (n + k)) x \\<in> A", "using inB B_def first_entrance_set_def"], ["proof (prove)\nusing this:\n  x \\<in> B (n + k)\n  B = first_entrance_set A\n  first_entrance_set ?A ?n =\n  (T ^^ ?n) --` ?A - (\\<Union>i<?n. (T ^^ i) --` ?A)\n\ngoal (1 subgoal):\n 1. (T ^^ (n + k)) x \\<in> A", "by auto"], ["proof (state)\nthis:\n  (T ^^ (n + k)) x \\<in> A\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  (T ^^ (n + k)) x \\<in> A", "have \"(T^^n)((T^^k)x) \\<in> A\""], ["proof (prove)\nusing this:\n  (T ^^ (n + k)) x \\<in> A\n\ngoal (1 subgoal):\n 1. (T ^^ n) ((T ^^ k) x) \\<in> A", "by (simp add: funpow_add)"], ["proof (state)\nthis:\n  (T ^^ n) ((T ^^ k) x) \\<in> A\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  (T ^^ n) ((T ^^ k) x) \\<in> A", "have \"(T^^k)x \\<in> (T^^n)--`A\""], ["proof (prove)\nusing this:\n  (T ^^ n) ((T ^^ k) x) \\<in> A\n\ngoal (1 subgoal):\n 1. (T ^^ k) x \\<in> (T ^^ n) --` A", "using a"], ["proof (prove)\nusing this:\n  (T ^^ n) ((T ^^ k) x) \\<in> A\n  (T ^^ k) x \\<in> space M\n\ngoal (1 subgoal):\n 1. (T ^^ k) x \\<in> (T ^^ n) --` A", "by auto"], ["proof (state)\nthis:\n  (T ^^ k) x \\<in> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  (T ^^ k) x \\<in> (T ^^ n) --` A", "have \"(T^^k)x \\<in> W\""], ["proof (prove)\nusing this:\n  (T ^^ k) x \\<in> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. (T ^^ k) x \\<in> W", "using * W_def"], ["proof (prove)\nusing this:\n  (T ^^ k) x \\<in> (T ^^ n) --` A\n  (T ^^ k) x \\<in> {y \\<in> space M. 0 < f y}\n  W = {x \\<in> space M. 0 < f x} \\<inter> (T ^^ n) --` A\n\ngoal (1 subgoal):\n 1. (T ^^ k) x \\<in> W", "by simp"], ["proof (state)\nthis:\n  (T ^^ k) x \\<in> W\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  (T ^^ k) x \\<in> W", "have \"x \\<in> (T^^k)--`W\""], ["proof (prove)\nusing this:\n  (T ^^ k) x \\<in> W\n\ngoal (1 subgoal):\n 1. x \\<in> (T ^^ k) --` W", "using s a"], ["proof (prove)\nusing this:\n  (T ^^ k) x \\<in> W\n  x \\<in> space M\n  (T ^^ k) x \\<in> space M\n\ngoal (1 subgoal):\n 1. x \\<in> (T ^^ k) --` W", "by simp"], ["proof (state)\nthis:\n  x \\<in> (T ^^ k) --` W\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  x \\<in> (T ^^ k) --` W", "have \"x \\<in> (B(n+k) \\<inter> (T^^k)--`W)\""], ["proof (prove)\nusing this:\n  x \\<in> (T ^^ k) --` W\n\ngoal (1 subgoal):\n 1. x \\<in> B (n + k) \\<inter> (T ^^ k) --` W", "using inB"], ["proof (prove)\nusing this:\n  x \\<in> (T ^^ k) --` W\n  x \\<in> B (n + k)\n\ngoal (1 subgoal):\n 1. x \\<in> B (n + k) \\<inter> (T ^^ k) --` W", "by simp"], ["proof (state)\nthis:\n  x \\<in> B (n + k) \\<inter> (T ^^ k) --` W\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x \\<noteq> 0 \\<Longrightarrow>\n    f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "then"], ["proof (chain)\npicking this:\n  x \\<in> B (n + k) \\<inter> (T ^^ k) --` W", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> B (n + k) \\<inter> (T ^^ k) --` W\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k)) x =\n    f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x", "by auto"], ["proof (state)\nthis:\n  f ((T ^^ k) x) * indicator (B (n + k)) x =\n  f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ((T ^^ k) ?x3) * indicator (B (n + k)) ?x3 =\n  f ((T ^^ k) ?x3) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) ?x3\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "then"], ["proof (chain)\npicking this:\n  f ((T ^^ k) ?x3) * indicator (B (n + k)) ?x3 =\n  f ((T ^^ k) ?x3) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) ?x3", "have *: \"(\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M) = (\\<integral>\\<^sup>+x \\<in> B(n+k) \\<inter> (T^^k)--`W. f((T^^k)x) \\<partial>M)\""], ["proof (prove)\nusing this:\n  f ((T ^^ k) ?x3) * indicator (B (n + k)) ?x3 =\n  f ((T ^^ k) ?x3) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) ?x3\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n    \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W.\n                       f ((T ^^ k) x)\n    \\<partial>M", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W. f ((T ^^ k) x)\n  \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "have \"B(n+k) \\<subseteq> {x \\<in> space M. local_time A k x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B (n + k) \\<subseteq> {x \\<in> space M. local_time A k x = 0}", "unfolding local_time_def B_def first_entrance_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ (n + k)) --` A - (\\<Union>i<n + k. (T ^^ i) --` A)\n    \\<subseteq> {x \\<in> space M.\n                 card {i \\<in> {..<k}. (T ^^ i) x \\<in> A} = 0}", "by auto"], ["proof (state)\nthis:\n  B (n + k) \\<subseteq> {x \\<in> space M. local_time A k x = 0}\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "then"], ["proof (chain)\npicking this:\n  B (n + k) \\<subseteq> {x \\<in> space M. local_time A k x = 0}", "have \"B(n+k) \\<inter> (T^^k)--`W \\<subseteq> V k\""], ["proof (prove)\nusing this:\n  B (n + k) \\<subseteq> {x \\<in> space M. local_time A k x = 0}\n\ngoal (1 subgoal):\n 1. B (n + k) \\<inter> (T ^^ k) --` W \\<subseteq> V k", "unfolding V_def"], ["proof (prove)\nusing this:\n  B (n + k) \\<subseteq> {x \\<in> space M. local_time A k x = 0}\n\ngoal (1 subgoal):\n 1. B (n + k) \\<inter> (T ^^ k) --` W\n    \\<subseteq> {x \\<in> (T ^^ k) --` W. local_time A k x = 0}", "by blast"], ["proof (state)\nthis:\n  B (n + k) \\<inter> (T ^^ k) --` W \\<subseteq> V k\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "then"], ["proof (chain)\npicking this:\n  B (n + k) \\<inter> (T ^^ k) --` W \\<subseteq> V k", "have \"f((T^^k)x) * indicator (B(n+k) \\<inter> (T^^k)--`W) x \\<le> ennreal C * indicator (V k) x\" for x"], ["proof (prove)\nusing this:\n  B (n + k) \\<inter> (T ^^ k) --` W \\<subseteq> V k\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x\n    \\<le> ennreal C * indicator (V k) x", "using f_bound"], ["proof (prove)\nusing this:\n  B (n + k) \\<inter> (T ^^ k) --` W \\<subseteq> V k\n  f ?x3 \\<le> ennreal C\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. f ((T ^^ k) x) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) x\n    \\<le> ennreal C * indicator (V k) x", "by (auto split: split_indicator)"], ["proof (state)\nthis:\n  f ((T ^^ k) ?x3) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) ?x3\n  \\<le> ennreal C * indicator (V k) ?x3\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "then"], ["proof (chain)\npicking this:\n  f ((T ^^ k) ?x3) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) ?x3\n  \\<le> ennreal C * indicator (V k) ?x3", "have \"(\\<integral>\\<^sup>+x \\<in> B(n+k) \\<inter> (T^^k)--`W. f((T^^k)x) \\<partial>M) \\<le> (\\<integral>\\<^sup>+x. ennreal C * indicator (V k) x \\<partial>M)\""], ["proof (prove)\nusing this:\n  f ((T ^^ k) ?x3) * indicator (B (n + k) \\<inter> (T ^^ k) --` W) ?x3\n  \\<le> ennreal C * indicator (V k) ?x3\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W.\n                       f ((T ^^ k) x)\n    \\<partial>M\n    \\<le> \\<integral>\\<^sup>+x\\<in>V k. ennreal C\\<partial>M", "by (simp add: nn_integral_mono)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W. f ((T ^^ k) x)\n  \\<partial>M\n  \\<le> \\<integral>\\<^sup>+x\\<in>V k. ennreal C\\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W. f ((T ^^ k) x)\n  \\<partial>M\n  \\<le> \\<integral>\\<^sup>+x\\<in>V k. ennreal C\\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "have \"... = ennreal C * emeasure M (V k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>V k. ennreal C\\<partial>M =\n    ennreal C * emeasure M (V k)", "by (simp add: \\<open>0 \\<le> C\\<close> nn_integral_cmult)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>V k. ennreal C\\<partial>M =\n  ennreal C * emeasure M (V k)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W. f ((T ^^ k) x)\n  \\<partial>M\n  \\<le> ennreal C * emeasure M (V k)", "show \"(\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M) \\<le> C * emeasure M (V k)\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W. f ((T ^^ k) x)\n  \\<partial>M\n  \\<le> ennreal C * emeasure M (V k)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "using *"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W. f ((T ^^ k) x)\n  \\<partial>M\n  \\<le> ennreal C * emeasure M (V k)\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M =\n  \\<integral>\\<^sup>+x\\<in>B (n + k) \\<inter> (T ^^ k) --` W. f ((T ^^ k) x)\n  \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n    \\<le> ennreal C * emeasure M (V k)", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M\n  \\<le> ennreal C * emeasure M (V k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>B (n + ?k3). f ((T ^^ ?k3) x)\\<partial>M\n  \\<le> ennreal C * emeasure M (V ?k3)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "have \"(\\<lambda>k. emeasure M (V k)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k. emeasure M (V k)) \\<longlonglongrightarrow> 0", "unfolding V_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k. emeasure M {x \\<in> (T ^^ k) --` W. local_time A k x = 0})\n    \\<longlonglongrightarrow> 0", "using local_time_unbounded2[OF W_meas, OF W_fin, OF W_incl, of 1]"], ["proof (prove)\nusing this:\n  (\\<lambda>n. emeasure M {x \\<in> (T ^^ n) --` W. local_time A n x < 1})\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. emeasure M {x \\<in> (T ^^ k) --` W. local_time A k x = 0})\n    \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>k. emeasure M (V k)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "from ennreal_tendsto_cmult[OF _ this, of C]"], ["proof (chain)\npicking this:\n  ennreal C < \\<top> \\<Longrightarrow>\n  (\\<lambda>x. ennreal C * emeasure M (V x))\n  \\<longlonglongrightarrow> ennreal C * 0", "have t0: \"(\\<lambda>k. C * emeasure M (V k)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  ennreal C < \\<top> \\<Longrightarrow>\n  (\\<lambda>x. ennreal C * emeasure M (V x))\n  \\<longlonglongrightarrow> ennreal C * 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. ennreal C * emeasure M (V k)) \\<longlonglongrightarrow> 0", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>k. ennreal C * emeasure M (V k)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "from a"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+x\\<in>B (n + ?k3). f ((T ^^ ?k3) x)\\<partial>M\n  \\<le> ennreal C * emeasure M (V ?k3)", "show \"(\\<lambda>k. (\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>B (n + ?k3). f ((T ^^ ?k3) x)\\<partial>M\n  \\<le> ennreal C * emeasure M (V ?k3)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n    \\<longlonglongrightarrow> 0", "by (intro tendsto_sandwich[OF _ _ tendsto_const t0]) auto"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      \\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M)\n  \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      \\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have b: \"(\\<lambda>k. (\\<Sum>i<k.(\\<integral>\\<^sup>+x \\<in> D(n+i). f((T^^(i+1))x) \\<partial>M))) \\<longlonglongrightarrow> (\\<Sum>i. d (i+1) (n+i))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M)\n    \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M)\n    \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))", "define e where \"e = (\\<lambda>i. d (i+1) (n+i))\""], ["proof (state)\nthis:\n  e = (\\<lambda>i. d (i + 1) (n + i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M)\n    \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))", "then"], ["proof (chain)\npicking this:\n  e = (\\<lambda>i. d (i + 1) (n + i))", "have \"(\\<lambda>k. (\\<Sum>i<k. e i)) \\<longlonglongrightarrow> (\\<Sum>i. e i)\""], ["proof (prove)\nusing this:\n  e = (\\<lambda>i. d (i + 1) (n + i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. sum e {..<k}) \\<longlonglongrightarrow> (\\<Sum>i. e i)", "by (intro summable_LIMSEQ) simp"], ["proof (state)\nthis:\n  (\\<lambda>k. sum e {..<k}) \\<longlonglongrightarrow> (\\<Sum>i. e i)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M)\n    \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>k. sum e {..<k}) \\<longlonglongrightarrow> (\\<Sum>i. e i)", "show \"(\\<lambda>k. (\\<Sum>i<k.(\\<integral>\\<^sup>+x \\<in> D(n+i). f((T^^(i+1))x) \\<partial>M))) \\<longlonglongrightarrow> (\\<Sum>i. d (i+1) (n+i))\""], ["proof (prove)\nusing this:\n  (\\<lambda>k. sum e {..<k}) \\<longlonglongrightarrow> (\\<Sum>i. e i)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M)\n    \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))", "using e_def d_def"], ["proof (prove)\nusing this:\n  (\\<lambda>k. sum e {..<k}) \\<longlonglongrightarrow> (\\<Sum>i. e i)\n  e = (\\<lambda>i. d (i + 1) (n + i))\n  d =\n  (\\<lambda>i n. \\<integral>\\<^sup>+x\\<in>D n. f ((T ^^ i) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        \\<Sum>i<k.\n           \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n           \\<partial>M)\n    \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      \\<Sum>i<k.\n         \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n         \\<partial>M)\n  \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      \\<Sum>i<k.\n         \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n         \\<partial>M)\n  \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (?n3 + i))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<lambda>k. (\\<Sum>i<k. (\\<integral>\\<^sup>+x \\<in> D(n+i). f((T^^(i+1))x) \\<partial>M)) + (\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M))\n                \\<longlonglongrightarrow> (\\<Sum>i. d (i+1) (n+i))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        (\\<Sum>i<k.\n            \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n            \\<partial>M) +\n        (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M))\n    \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))", "using tendsto_add[OF b a]"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (\\<Sum>i<x.\n          \\<integral>\\<^sup>+x\\<in>D (?n8 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+xa\\<in>B (?n4 + x). f ((T ^^ x) xa)\\<partial>M))\n  \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (?n8 + i)) + 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        (\\<Sum>i<k.\n            \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n            \\<partial>M) +\n        (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M))\n    \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (n + i))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (?n3 + i))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (?n3 + i))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<lambda>k. (\\<Sum>i<k. (\\<integral>\\<^sup>+x \\<in> D(n+i). f((T^^(i+1))x) \\<partial>M)) + (\\<integral>\\<^sup>+x \\<in> B(n+k). f((T^^k)x) \\<partial>M))\n                \\<longlonglongrightarrow> (\\<integral>\\<^sup>+x \\<in> B n. f x \\<partial>M)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        (\\<Sum>i<k.\n            \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n            \\<partial>M) +\n        (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M))\n    \\<longlonglongrightarrow> set_nn_integral M (B n) f", "using *"], ["proof (prove)\nusing this:\n  set_nn_integral M (B ?n3) f =\n  (\\<Sum>i<?k3.\n      \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n      \\<partial>M) +\n  (\\<integral>\\<^sup>+x\\<in>B (?n3 + ?k3). f ((T ^^ ?k3) x)\\<partial>M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        (\\<Sum>i<k.\n            \\<integral>\\<^sup>+x\\<in>D (n + i). f ((T ^^ (i + 1)) x)\n            \\<partial>M) +\n        (\\<integral>\\<^sup>+x\\<in>B (n + k). f ((T ^^ k) x)\\<partial>M))\n    \\<longlonglongrightarrow> set_nn_integral M (B n) f", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> set_nn_integral M (B ?n3) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (?n3 + i))\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> set_nn_integral M (B ?n3) f", "have \"(\\<integral>\\<^sup>+x \\<in> B n. f x \\<partial>M) = (\\<Sum>i. d (i+1) (n+i))\" for n"], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (?n3 + i))\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> set_nn_integral M (B ?n3) f\n\ngoal (1 subgoal):\n 1. set_nn_integral M (B n) f = (\\<Sum>i. d (i + 1) (n + i))", "using LIMSEQ_unique"], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> (\\<Sum>i. d (i + 1) (?n3 + i))\n  (\\<lambda>k.\n      (\\<Sum>i<k.\n          \\<integral>\\<^sup>+x\\<in>D (?n3 + i). f ((T ^^ (i + 1)) x)\n          \\<partial>M) +\n      (\\<integral>\\<^sup>+x\\<in>B (?n3 + k). f ((T ^^ k) x)\\<partial>M))\n  \\<longlonglongrightarrow> set_nn_integral M (B ?n3) f\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. set_nn_integral M (B n) f = (\\<Sum>i. d (i + 1) (n + i))", "by blast"], ["proof (state)\nthis:\n  set_nn_integral M (B ?n3) f = (\\<Sum>i. d (i + 1) (?n3 + i))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  set_nn_integral M (B ?n3) f = (\\<Sum>i. d (i + 1) (?n3 + i))", "have \"(\\<Sum>n. (\\<integral>\\<^sup>+x \\<in> B (n+1). f x \\<partial>M)) = (\\<Sum>n. (\\<Sum>i. d (i+1) (n+1+i)))\""], ["proof (prove)\nusing this:\n  set_nn_integral M (B ?n3) f = (\\<Sum>i. d (i + 1) (?n3 + i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. set_nn_integral M (B (n + 1)) f) =\n    (\\<Sum>n i. d (i + 1) (n + 1 + i))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n. set_nn_integral M (B (n + 1)) f) =\n  (\\<Sum>n i. d (i + 1) (n + 1 + i))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>n. set_nn_integral M (B (n + 1)) f) =\n  (\\<Sum>n i. d (i + 1) (n + 1 + i))", "have \"(\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M) = (\\<Sum>n. d 0 n) + (\\<Sum>n. (\\<Sum>i. d (i+1) (n+1+i)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>n. set_nn_integral M (B (n + 1)) f) =\n  (\\<Sum>n i. d (i + 1) (n + 1 + i))\n\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "using Bdec B0dec"], ["proof (prove)\nusing this:\n  (\\<Sum>n. set_nn_integral M (B (n + 1)) f) =\n  (\\<Sum>n i. d (i + 1) (n + 1 + i))\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  set_nn_integral M (B 0) f + (\\<Sum>n. set_nn_integral M (B (n + 1)) f)\n  set_nn_integral M (B 0) f = (\\<Sum>n. d 0 n)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n    (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "by simp"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))", "show ?thesis"], ["proof (prove)\nusing this:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "using induced_dec kac_series_aux"], ["proof (prove)\nusing this:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  (\\<Sum>n. d 0 n) + (\\<Sum>n i. d (i + 1) (n + 1 + i))\n  integral\\<^sup>N M (induced_function A f) =\n  (\\<Sum>n. \\<Sum>i\\<le>n. d i n)\n  (\\<Sum>n. \\<Sum>i\\<le>n. ?d i n) =\n  (\\<Sum>n. ?d 0 n) + (\\<Sum>n i. ?d (i + 1) (n + 1 + i))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A f) =\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We remove the boundedness assumption on $f$ and the finiteness assumption on its support\nby truncation (both in space and on the values of $f$).\\<close>"], ["", "theorem induced_function_nn_integral:\n  fixes f::\"'a \\<Rightarrow> ennreal\"\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and f_meas [measurable]: \"f \\<in> borel_measurable M\"\n  shows \"(\\<integral>\\<^sup>+y. induced_function A f y \\<partial>M) = (\\<integral>\\<^sup>+x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "obtain Y::\"nat \\<Rightarrow> 'a set\" where Y_meas: \"\\<And> n. Y n \\<in> sets M\" and Y_fin: \"\\<And>n. emeasure M (Y n) \\<noteq> \\<infinity>\"\n        and Y_full: \"(\\<Union>n. Y n) = space M\" and Y_inc: \"incseq Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        \\<lbrakk>\\<And>n. Y n \\<in> sets M;\n         \\<And>n. emeasure M (Y n) \\<noteq> \\<infinity>;\n         \\<Union> (range Y) = space M; incseq Y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson range_subsetD sigma_finite_incseq)"], ["proof (state)\nthis:\n  Y ?n3 \\<in> sets M\n  emeasure M (Y ?n3) \\<noteq> \\<infinity>\n  \\<Union> (range Y) = space M\n  incseq Y\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "define F where \"F = (\\<lambda>(n::nat) x. min (f x) n * indicator (Y n) x)\""], ["proof (state)\nthis:\n  F = (\\<lambda>n x. min (f x) (of_nat n) * indicator (Y n) x)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have mes [measurable]: \"\\<And>n. (F n) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. F n \\<in> borel_measurable M", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<lambda>x. min (f x) (of_nat n) * indicator (Y n) x)\n       \\<in> borel_measurable M", "using assms(2) Y_meas"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable M\n  Y ?n3 \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<lambda>x. min (f x) (of_nat n) * indicator (Y n) x)\n       \\<in> borel_measurable M", "by measurable"], ["proof (state)\nthis:\n  F ?n3 \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  F ?n3 \\<in> borel_measurable M", "have mes_rel [measurable]: \"(\\<lambda>x. F n x * indicator (\\<Union>n. (T^^n)--`A) x) \\<in> borel_measurable M\" for n"], ["proof (prove)\nusing this:\n  F ?n3 \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. F n x * indicator (\\<Union>n. (T ^^ n) --` A) x)\n    \\<in> borel_measurable M", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>x. F ?n3 x * indicator (\\<Union>n. (T ^^ n) --` A) x)\n  \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have bound: \"\\<And>n x. F n x \\<le> ennreal n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x. F n x \\<le> ennreal (real n)", "by (simp add: F_def indicator_def ennreal_of_nat_eq_real_of_nat)"], ["proof (state)\nthis:\n  F ?n3 ?x3 \\<le> ennreal (real ?n3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"\\<And>n. {x \\<in> space M. F n x > 0} \\<subseteq> Y n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. {x \\<in> space M. 0 < F n x} \\<subseteq> Y n", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       {x \\<in> space M. 0 < min (f x) (of_nat n) * indicator (Y n) x}\n       \\<subseteq> Y n", "using not_le"], ["proof (prove)\nusing this:\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       {x \\<in> space M. 0 < min (f x) (of_nat n) * indicator (Y n) x}\n       \\<subseteq> Y n", "by fastforce"], ["proof (state)\nthis:\n  {x \\<in> space M. 0 < F ?n3 x} \\<subseteq> Y ?n3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  {x \\<in> space M. 0 < F ?n3 x} \\<subseteq> Y ?n3", "have le: \"emeasure M {x \\<in> space M. F n x > 0} \\<le> emeasure M (Y n)\" for n"], ["proof (prove)\nusing this:\n  {x \\<in> space M. 0 < F ?n3 x} \\<subseteq> Y ?n3\n\ngoal (1 subgoal):\n 1. emeasure M {x \\<in> space M. 0 < F n x} \\<le> emeasure M (Y n)", "by (metis emeasure_mono Y_meas)"], ["proof (state)\nthis:\n  emeasure M {x \\<in> space M. 0 < F ?n3 x} \\<le> emeasure M (Y ?n3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have fin: \"emeasure M {x \\<in> space M. F n x > 0} < \\<infinity>\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {x \\<in> space M. 0 < F n x} < \\<infinity>", "using Y_fin[of n] le[of n]"], ["proof (prove)\nusing this:\n  emeasure M (Y n) \\<noteq> \\<infinity>\n  emeasure M {x \\<in> space M. 0 < F n x} \\<le> emeasure M (Y n)\n\ngoal (1 subgoal):\n 1. emeasure M {x \\<in> space M. 0 < F n x} < \\<infinity>", "by (simp add: less_top)"], ["proof (state)\nthis:\n  emeasure M {x \\<in> space M. 0 < F ?n3 x} < \\<infinity>\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have *: \"(\\<integral>\\<^sup>+y. induced_function A (F n) y \\<partial>M) = (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). (F n) x \\<partial>M)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A (F n)) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F n)", "by (rule induced_function_nn_integral_aux[OF A_meas mes bound _ fin]) simp"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A (F ?n3)) =\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F ?n3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have inc_Fx: \"\\<And>x. incseq (\\<lambda>n. F n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. incseq (\\<lambda>n. F n x)", "unfolding F_def incseq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>m n.\n          m \\<le> n \\<longrightarrow>\n          min (f x) (of_nat m) * indicator (Y m) x\n          \\<le> min (f x) (of_nat n) * indicator (Y n) x", "proof (auto simp add: incseq_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x m n.\n       m \\<le> n \\<Longrightarrow>\n       min (f x) (of_nat m) * indicator (Y m) x\n       \\<le> min (f x) (of_nat n) * indicator (Y n) x", "fix x::\"'a\" and m n::\"nat\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x m n.\n       m \\<le> n \\<Longrightarrow>\n       min (f x) (of_nat m) * indicator (Y m) x\n       \\<le> min (f x) (of_nat n) * indicator (Y n) x", "assume \"m \\<le> n\""], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x m n.\n       m \\<le> n \\<Longrightarrow>\n       min (f x) (of_nat m) * indicator (Y m) x\n       \\<le> min (f x) (of_nat n) * indicator (Y n) x", "then"], ["proof (chain)\npicking this:\n  m \\<le> n", "have \"min (f x) m \\<le> min (f x) n\""], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. min (f x) (of_nat m) \\<le> min (f x) (of_nat n)", "using linear"], ["proof (prove)\nusing this:\n  m \\<le> n\n  ?x \\<le> ?y \\<or> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. min (f x) (of_nat m) \\<le> min (f x) (of_nat n)", "by fastforce"], ["proof (state)\nthis:\n  min (f x) (of_nat m) \\<le> min (f x) (of_nat n)\n\ngoal (1 subgoal):\n 1. \\<And>x m n.\n       m \\<le> n \\<Longrightarrow>\n       min (f x) (of_nat m) * indicator (Y m) x\n       \\<le> min (f x) (of_nat n) * indicator (Y n) x", "moreover"], ["proof (state)\nthis:\n  min (f x) (of_nat m) \\<le> min (f x) (of_nat n)\n\ngoal (1 subgoal):\n 1. \\<And>x m n.\n       m \\<le> n \\<Longrightarrow>\n       min (f x) (of_nat m) * indicator (Y m) x\n       \\<le> min (f x) (of_nat n) * indicator (Y n) x", "have \"(indicator (Y m) x::ennreal) \\<le> (indicator (Y n) x::ennreal)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indicator (Y m) x \\<le> indicator (Y n) x", "using Y_inc"], ["proof (prove)\nusing this:\n  incseq Y\n\ngoal (1 subgoal):\n 1. indicator (Y m) x \\<le> indicator (Y n) x", "apply (auto simp add: incseq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m n. m \\<le> n \\<longrightarrow> Y m \\<subseteq> Y n;\n     x \\<in> Y m\\<rbrakk>\n    \\<Longrightarrow> x \\<in> Y n", "using \\<open>m \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m n. m \\<le> n \\<longrightarrow> Y m \\<subseteq> Y n;\n     x \\<in> Y m\\<rbrakk>\n    \\<Longrightarrow> x \\<in> Y n", "by blast"], ["proof (state)\nthis:\n  indicator (Y m) x \\<le> indicator (Y n) x\n\ngoal (1 subgoal):\n 1. \\<And>x m n.\n       m \\<le> n \\<Longrightarrow>\n       min (f x) (of_nat m) * indicator (Y m) x\n       \\<le> min (f x) (of_nat n) * indicator (Y n) x", "ultimately"], ["proof (chain)\npicking this:\n  min (f x) (of_nat m) \\<le> min (f x) (of_nat n)\n  indicator (Y m) x \\<le> indicator (Y n) x", "show \"min (f x) m * (indicator (Y m) x::ennreal) \\<le> min (f x) n * (indicator (Y n) x::ennreal)\""], ["proof (prove)\nusing this:\n  min (f x) (of_nat m) \\<le> min (f x) (of_nat n)\n  indicator (Y m) x \\<le> indicator (Y n) x\n\ngoal (1 subgoal):\n 1. min (f x) (of_nat m) * indicator (Y m) x\n    \\<le> min (f x) (of_nat n) * indicator (Y n) x", "by (auto split: split_indicator)"], ["proof (state)\nthis:\n  min (f x) (of_nat m) * indicator (Y m) x\n  \\<le> min (f x) (of_nat n) * indicator (Y n) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  incseq (\\<lambda>n. F n ?x3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  incseq (\\<lambda>n. F n ?x3)", "have \"incseq (\\<lambda>n. F n x * indicator (\\<Union>n. (T^^n)--`A) x)\" for x"], ["proof (prove)\nusing this:\n  incseq (\\<lambda>n. F n ?x3)\n\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n. F n x * indicator (\\<Union>n. (T ^^ n) --` A) x)", "by (auto simp add: indicator_def incseq_def)"], ["proof (state)\nthis:\n  incseq (\\<lambda>n. F n ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  incseq (\\<lambda>n. F n ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3)", "have inc_rel: \"incseq (\\<lambda>n x. F n x * indicator (\\<Union>n. (T^^n)--`A) x)\""], ["proof (prove)\nusing this:\n  incseq (\\<lambda>n. F n ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3)\n\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n x. F n x * indicator (\\<Union>n. (T ^^ n) --` A) x)", "by (auto simp add: incseq_def le_fun_def)"], ["proof (state)\nthis:\n  incseq (\\<lambda>n x. F n x * indicator (\\<Union>n. (T ^^ n) --` A) x)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  incseq (\\<lambda>n x. F n x * indicator (\\<Union>n. (T ^^ n) --` A) x)", "have a: \"(SUP n. (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). F n x \\<partial>M))\n              = (\\<integral>\\<^sup>+ x. (SUP n. F n x * indicator (\\<Union>n. (T^^n)--`A) x) \\<partial>M)\""], ["proof (prove)\nusing this:\n  incseq (\\<lambda>n x. F n x * indicator (\\<Union>n. (T ^^ n) --` A) x)\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F n)) =\n    \\<integral>\\<^sup>+ x. (\\<Squnion>n.\n                               F n x *\n                               indicator (\\<Union>n. (T ^^ n) --` A) x)\n                       \\<partial>M", "using nn_integral_monotone_convergence_SUP[OF inc_rel, OF mes_rel]"], ["proof (prove)\nusing this:\n  incseq (\\<lambda>n x. F n x * indicator (\\<Union>n. (T ^^ n) --` A) x)\n  \\<integral>\\<^sup>+ x. (\\<Squnion>i.\n                             F i x *\n                             indicator (\\<Union>n. (T ^^ n) --` A) x)\n                     \\<partial>M =\n  (\\<Squnion>i. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F i))\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F n)) =\n    \\<integral>\\<^sup>+ x. (\\<Squnion>n.\n                               F n x *\n                               indicator (\\<Union>n. (T ^^ n) --` A) x)\n                       \\<partial>M", "by simp"], ["proof (state)\nthis:\n  (\\<Squnion>n. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F n)) =\n  \\<integral>\\<^sup>+ x. (\\<Squnion>n.\n                             F n x *\n                             indicator (\\<Union>n. (T ^^ n) --` A) x)\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have SUP_Fx: \"(SUP n. F n x) = f x\" if \"x \\<in> space M\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>n. F n x) = f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Squnion>n. F n x) = f x", "obtain N where \"x \\<in> Y N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N. x \\<in> Y N \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using Y_full \\<open>x \\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  \\<Union> (range Y) = space M\n  x \\<in> space M\n\ngoal (1 subgoal):\n 1. (\\<And>N. x \\<in> Y N \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> Y N\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. F n x) = f x", "have \"(SUP n. F n x) = (SUP n. inf (f x) (of_nat n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>n. F n x) = (\\<Squnion>n. f x \\<sqinter> of_nat n)", "proof (rule SUP_eq)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> UNIV \\<Longrightarrow>\n       \\<exists>j\\<in>UNIV. F i x \\<le> f x \\<sqinter> of_nat j\n 2. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       \\<exists>i\\<in>UNIV. f x \\<sqinter> of_nat j \\<le> F i x", "show \"\\<exists>j\\<in>UNIV. F i x \\<le> inf (f x) (of_nat j)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j\\<in>UNIV. F i x \\<le> f x \\<sqinter> of_nat j", "by (auto simp: F_def intro!: exI[of _ i] split: split_indicator)"], ["proof (state)\nthis:\n  \\<exists>j\\<in>UNIV. F ?i3 x \\<le> f x \\<sqinter> of_nat j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       \\<exists>i\\<in>UNIV. f x \\<sqinter> of_nat j \\<le> F i x", "show \"\\<exists>i\\<in>UNIV. inf (f x) (of_nat j) \\<le> F i x\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>UNIV. f x \\<sqinter> of_nat j \\<le> F i x", "using \\<open>x \\<in> Y N\\<close> \\<open>incseq Y\\<close>[THEN monoD, of N \"max N j\"]"], ["proof (prove)\nusing this:\n  x \\<in> Y N\n  N \\<le> max N j \\<Longrightarrow> Y N \\<subseteq> Y (max N j)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>UNIV. f x \\<sqinter> of_nat j \\<le> F i x", "by (intro bexI[of _ \"max N j\"])\n           (auto simp: F_def subset_eq not_le inf_min intro: min.coboundedI2 less_imp_le split: split_indicator split_max)"], ["proof (state)\nthis:\n  \\<exists>i\\<in>UNIV. f x \\<sqinter> of_nat ?j3 \\<le> F i x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Squnion>n. F n x) = (\\<Squnion>n. f x \\<sqinter> of_nat n)\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. F n x) = f x", "then"], ["proof (chain)\npicking this:\n  (\\<Squnion>n. F n x) = (\\<Squnion>n. f x \\<sqinter> of_nat n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Squnion>n. F n x) = (\\<Squnion>n. f x \\<sqinter> of_nat n)\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. F n x) = f x", "by (simp add: inf_SUP[symmetric] ennreal_SUP_of_nat_eq_top)"], ["proof (state)\nthis:\n  (\\<Squnion>n. F n x) = f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x3 \\<in> space M \\<Longrightarrow> (\\<Squnion>n. F n ?x3) = f ?x3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  ?x3 \\<in> space M \\<Longrightarrow> (\\<Squnion>n. F n ?x3) = f ?x3", "have \"(SUP n. F n x * indicator (\\<Union>n. (T^^n)--`A) x) = f x * indicator (\\<Union>n. (T^^n)--`A) x\"\n    if \"x \\<in> space M\" for x"], ["proof (prove)\nusing this:\n  ?x3 \\<in> space M \\<Longrightarrow> (\\<Squnion>n. F n ?x3) = f ?x3\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. F n x * indicator (\\<Union>n. (T ^^ n) --` A) x) =\n    f x * indicator (\\<Union>n. (T ^^ n) --` A) x", "by (auto simp add: indicator_def SUP_Fx that)"], ["proof (state)\nthis:\n  ?x3 \\<in> space M \\<Longrightarrow>\n  (\\<Squnion>n. F n ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3) =\n  f ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  ?x3 \\<in> space M \\<Longrightarrow>\n  (\\<Squnion>n. F n ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3) =\n  f ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3", "have **: \"(SUP n. (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). F n x \\<partial>M)) = (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  ?x3 \\<in> space M \\<Longrightarrow>\n  (\\<Squnion>n. F n ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3) =\n  f ?x3 * indicator (\\<Union>n. (T ^^ n) --` A) ?x3\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F n)) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "by (simp add: a cong: nn_integral_cong)"], ["proof (state)\nthis:\n  (\\<Squnion>n. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F n)) =\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"incseq (\\<lambda>n. induced_function A (F n) x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n. induced_function A (F n) x)", "unfolding induced_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n. \\<Sum>i<return_time_function A x. F n ((T ^^ i) x))", "using incseq_sumI2[of \"{..<return_time_function A x}\", of \"\\<lambda>i n. F n ((T^^i)x)\"] inc_Fx"], ["proof (prove)\nusing this:\n  (\\<And>n.\n      n \\<in> {..<return_time_function A x} \\<Longrightarrow>\n      incseq (\\<lambda>na. F na ((T ^^ n) x))) \\<Longrightarrow>\n  incseq (\\<lambda>i. \\<Sum>n<return_time_function A x. F i ((T ^^ n) x))\n  incseq (\\<lambda>n. F n ?x3)\n\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n. \\<Sum>i<return_time_function A x. F n ((T ^^ i) x))", "by simp"], ["proof (state)\nthis:\n  incseq (\\<lambda>n. induced_function A (F n) ?x3)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  incseq (\\<lambda>n. induced_function A (F n) ?x3)", "have \"incseq (\\<lambda>n. induced_function A (F n))\""], ["proof (prove)\nusing this:\n  incseq (\\<lambda>n. induced_function A (F n) ?x3)\n\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n. induced_function A (F n))", "by (auto simp add: incseq_def le_fun_def)"], ["proof (state)\nthis:\n  incseq (\\<lambda>n. induced_function A (F n))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  incseq (\\<lambda>n. induced_function A (F n))", "have b: \"(SUP n. (\\<integral>\\<^sup>+ x. induced_function A (F n) x \\<partial>M)) = (\\<integral>\\<^sup>+ x. (SUP n. induced_function A (F n) x) \\<partial>M)\""], ["proof (prove)\nusing this:\n  incseq (\\<lambda>n. induced_function A (F n))\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. integral\\<^sup>N M (induced_function A (F n))) =\n    \\<integral>\\<^sup>+ x. (\\<Squnion>n. induced_function A (F n) x)\n                       \\<partial>M", "by (rule nn_integral_monotone_convergence_SUP[symmetric]) (measurable)"], ["proof (state)\nthis:\n  (\\<Squnion>n. integral\\<^sup>N M (induced_function A (F n))) =\n  \\<integral>\\<^sup>+ x. (\\<Squnion>n. induced_function A (F n) x)\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(SUP n. induced_function A (F n) x) = induced_function A f x\" if [simp]: \"x \\<in> space M\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>n. induced_function A (F n) x) = induced_function A f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Squnion>n. induced_function A (F n) x) = induced_function A f x", "have \"(SUP n. (\\<Sum> i \\<in>{..<return_time_function A x}. F n ((T^^i)x)))\n              = (\\<Sum> i \\<in> {..<return_time_function A x}. f ((T^^i)x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>n. \\<Sum>i<return_time_function A x. F n ((T ^^ i) x)) =\n    (\\<Sum>i<return_time_function A x. f ((T ^^ i) x))", "using ennreal_SUP_sum[OF inc_Fx, where ?I = \"{..<return_time_function A x}\"] SUP_Fx"], ["proof (prove)\nusing this:\n  (\\<Squnion>n. \\<Sum>i<return_time_function A x. F n (?x4 i)) =\n  (\\<Sum>i<return_time_function A x. \\<Squnion>n. F n (?x4 i))\n  ?x3 \\<in> space M \\<Longrightarrow> (\\<Squnion>n. F n ?x3) = f ?x3\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. \\<Sum>i<return_time_function A x. F n ((T ^^ i) x)) =\n    (\\<Sum>i<return_time_function A x. f ((T ^^ i) x))", "by simp"], ["proof (state)\nthis:\n  (\\<Squnion>n. \\<Sum>i<return_time_function A x. F n ((T ^^ i) x)) =\n  (\\<Sum>i<return_time_function A x. f ((T ^^ i) x))\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. induced_function A (F n) x) = induced_function A f x", "then"], ["proof (chain)\npicking this:\n  (\\<Squnion>n. \\<Sum>i<return_time_function A x. F n ((T ^^ i) x)) =\n  (\\<Sum>i<return_time_function A x. f ((T ^^ i) x))", "show \"(SUP n. induced_function A (F n) x) = induced_function A f x\""], ["proof (prove)\nusing this:\n  (\\<Squnion>n. \\<Sum>i<return_time_function A x. F n ((T ^^ i) x)) =\n  (\\<Sum>i<return_time_function A x. f ((T ^^ i) x))\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. induced_function A (F n) x) = induced_function A f x", "by (auto simp add: induced_function_def)"], ["proof (state)\nthis:\n  (\\<Squnion>n. induced_function A (F n) x) = induced_function A f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x3 \\<in> space M \\<Longrightarrow>\n  (\\<Squnion>n. induced_function A (F n) ?x3) = induced_function A f ?x3\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  ?x3 \\<in> space M \\<Longrightarrow>\n  (\\<Squnion>n. induced_function A (F n) ?x3) = induced_function A f ?x3", "have \"(SUP n. (\\<integral>\\<^sup>+ x. induced_function A (F n) x \\<partial>M)) = (\\<integral>\\<^sup>+ x. induced_function A f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  ?x3 \\<in> space M \\<Longrightarrow>\n  (\\<Squnion>n. induced_function A (F n) ?x3) = induced_function A f ?x3\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. integral\\<^sup>N M (induced_function A (F n))) =\n    integral\\<^sup>N M (induced_function A f)", "by (simp add: b cong: nn_integral_cong)"], ["proof (state)\nthis:\n  (\\<Squnion>n. integral\\<^sup>N M (induced_function A (F n))) =\n  integral\\<^sup>N M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  (\\<Squnion>n. integral\\<^sup>N M (induced_function A (F n))) =\n  integral\\<^sup>N M (induced_function A f)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Squnion>n. integral\\<^sup>N M (induced_function A (F n))) =\n  integral\\<^sup>N M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "using * **"], ["proof (prove)\nusing this:\n  (\\<Squnion>n. integral\\<^sup>N M (induced_function A (F n))) =\n  integral\\<^sup>N M (induced_function A f)\n  integral\\<^sup>N M (induced_function A (F ?n3)) =\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F ?n3)\n  (\\<Squnion>n. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) (F n)) =\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A f) =\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Taking the constant function equal to $1$ in the previous statement, we obtain the usual\nKac Formula.\\<close>"], ["", "theorem kac_formula_nonergodic:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n  shows \"(\\<integral>\\<^sup>+y. return_time_function A y \\<partial>M) = emeasure M (\\<Union>n. (T^^n)--`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "define f where \"f = (\\<lambda>(x::'a). 1::ennreal)\""], ["proof (state)\nthis:\n  f = (\\<lambda>x. 1)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "have \"\\<And>x. induced_function A f x = return_time_function A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. induced_function A f x = of_nat (return_time_function A x)", "unfolding induced_function_def f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<Sum>i<return_time_function A x. 1) =\n       of_nat (return_time_function A x)", "by (simp add:)"], ["proof (state)\nthis:\n  induced_function A f ?x3 = of_nat (return_time_function A ?x3)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "then"], ["proof (chain)\npicking this:\n  induced_function A f ?x3 = of_nat (return_time_function A ?x3)", "have \"(\\<integral>\\<^sup>+y. return_time_function A y \\<partial>M) = (\\<integral>\\<^sup>+y. induced_function A f y \\<partial>M)\""], ["proof (prove)\nusing this:\n  induced_function A f ?x3 = of_nat (return_time_function A ?x3)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    integral\\<^sup>N M (induced_function A f)", "by auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n  integral\\<^sup>N M (induced_function A f)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n  integral\\<^sup>N M (induced_function A f)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "have \"... = (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A f) =\n    set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f", "by (rule induced_function_nn_integral) (auto simp add: f_def)"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A f) =\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A f) =\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "have \"... = emeasure M (\\<Union>n. (T^^n)--`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "using f_def"], ["proof (prove)\nusing this:\n  f = (\\<lambda>x. 1)\n\ngoal (1 subgoal):\n 1. set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "by auto"], ["proof (state)\nthis:\n  set_nn_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  emeasure M (\\<Union>n. (T ^^ n) --` A)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n  emeasure M (\\<Union>n. (T ^^ n) --` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n  emeasure M (\\<Union>n. (T ^^ n) --` A)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n    emeasure M (\\<Union>n. (T ^^ n) --` A)", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. of_nat (return_time_function A x) \\<partial>M =\n  emeasure M (\\<Union>n. (T ^^ n) --` A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in fmpt) return_time_integrable:\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n  shows \"integrable M (return_time_function A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. real (return_time_function A x))", "by (rule integrableI_nonneg)\n     (auto simp add: kac_formula_nonergodic[OF assms] ennreal_of_nat_eq_real_of_nat[symmetric] less_top[symmetric])"], ["", "text \\<open>Now, we want to prove the same result but for real-valued integrable function. We first\nprove the statement for nonnegative functions by reducing to the nonnegative extended reals,\nand then for general functions by difference.\\<close>"], ["", "lemma induced_function_integral_aux:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes A_meas [measurable]: \"A \\<in> sets M\"\n      and f_int [measurable]: \"integrable M f\"\n      and f_pos: \"\\<And>x. f x \\<ge> 0\"\n  shows \"integrable M (induced_function A f)\"\n        \"(\\<integral>y. induced_function A f y \\<partial>M) = (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (induced_function A f) &&&\n    integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "show \"integrable M (induced_function A f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (induced_function A f)", "proof (rule integrableI_nonneg)"], ["proof (state)\ngoal (3 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. AE x in M. 0 \\<le> induced_function A f x\n 3. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "show \"AE x in M. induced_function A f x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> induced_function A f x", "unfolding induced_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> (\\<Sum>i<return_time_function A x. f ((T ^^ i) x))", "by (simp add: f_pos sum_nonneg)"], ["proof (state)\nthis:\n  AE x in M. 0 \\<le> induced_function A f x\n\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "have \"(\\<integral>\\<^sup>+x. ennreal (induced_function A f x) \\<partial>M) = (\\<integral>\\<^sup>+ x. induced_function A (\\<lambda>x. ennreal(f x)) x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M =\n    integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x)))", "unfolding induced_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (\\<Sum>i<return_time_function A x.\n                                f ((T ^^ i) x))\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. (\\<Sum>i<return_time_function A x.\n                               ennreal (f ((T ^^ i) x)))\n                       \\<partial>M", "by (auto simp: f_pos)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M =\n  integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x)))\n\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M =\n  integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x)))\n\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "have \"... = (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x))) =\n    \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n    \\<partial>M", "by (rule induced_function_nn_integral, auto simp add: assms)"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x))) =\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>M\n\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x))) =\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>M\n\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "have \"... \\<le> (\\<integral>\\<^sup>+ x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n    \\<partial>M\n    \\<le> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M", "using nn_set_integral_set_mono[where ?A = \"(\\<Union>n. (T^^n)--`A)\" and ?B = UNIV and ?f = \"\\<lambda>x. ennreal(f x)\"]"], ["proof (prove)\nusing this:\n  (\\<Union>n. (T ^^ n) --` A) \\<subseteq> UNIV \\<Longrightarrow>\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>?M\n  \\<le> \\<integral>\\<^sup>+x\\<in>UNIV. ennreal (f x)\\<partial>?M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n    \\<partial>M\n    \\<le> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M", "by auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>M\n  \\<le> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M\n\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>M\n  \\<le> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M\n\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "have \"... < \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M < \\<infinity>", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  integrable M f\n  0 \\<le> f ?x3\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M < \\<infinity>", "by (auto simp: less_top)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M < \\<infinity>\n\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n  < \\<infinity>", "show \"(\\<integral>\\<^sup>+ x. induced_function A f x \\<partial>M) < \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n  < \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n    < \\<infinity>", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n  < \\<infinity>\n\ngoal (1 subgoal):\n 1. induced_function A f \\<in> borel_measurable M", "qed (simp)"], ["proof (state)\nthis:\n  integrable M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<integral>\\<^sup>+ x. (f x * indicator (\\<Union>n. (T^^n)--`A) x) \\<partial>M) = (\\<integral>\\<^sup>+ x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (f x *\n                             indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                       \\<partial>M =\n    \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n    \\<partial>M", "by (auto split: split_indicator intro!: nn_integral_cong)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral>\\<^sup>+ x. induced_function A (\\<lambda>x. ennreal(f x)) x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n    \\<partial>M =\n    integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x)))", "by (rule induced_function_nn_integral[symmetric], auto simp add: assms)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>M =\n  integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x)))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>(\\<Union>n. (T ^^ n) --` A). ennreal (f x)\n  \\<partial>M =\n  integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x)))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral>\\<^sup>+x. ennreal (induced_function A f x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x))) =\n    \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M", "unfolding induced_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (\\<Sum>i<return_time_function A x.\n                               ennreal (f ((T ^^ i) x)))\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. ennreal\n                            (\\<Sum>i<return_time_function A x.\n                                f ((T ^^ i) x))\n                       \\<partial>M", "by (auto simp: f_pos)"], ["proof (state)\nthis:\n  integral\\<^sup>N M (induced_function A (\\<lambda>x. ennreal (f x))) =\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M", "have *: \"(\\<integral>\\<^sup>+ x. (f x * indicator (\\<Union>n. (T^^n)--`A) x) \\<partial>M) = (\\<integral>\\<^sup>+x. ennreal (induced_function A f x) \\<partial>M)\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (f x *\n                             indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<integral> x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M) = (\\<integral> x. f x * indicator (\\<Union>n. (T^^n)--`A) x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f =\n    LINT x|M. f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x", "by (simp add: mult.commute set_lebesgue_integral_def)"], ["proof (state)\nthis:\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  LINT x|M. f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  LINT x|M. f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = enn2real (\\<integral>\\<^sup>+ x. (f x * indicator (\\<Union>n. (T^^n)--`A) x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|M. f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x =\n    enn2real\n     (\\<integral>\\<^sup>+ x. ennreal\n                              (f x *\n                               indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                         \\<partial>M)", "by (rule integral_eq_nn_integral, auto simp add: f_pos)"], ["proof (state)\nthis:\n  LINT x|M. f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x =\n  enn2real\n   (\\<integral>\\<^sup>+ x. ennreal\n                            (f x *\n                             indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                       \\<partial>M)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  LINT x|M. f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x =\n  enn2real\n   (\\<integral>\\<^sup>+ x. ennreal\n                            (f x *\n                             indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                       \\<partial>M)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = enn2real (\\<integral>\\<^sup>+x. ennreal (induced_function A f x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real\n     (\\<integral>\\<^sup>+ x. ennreal\n                              (f x *\n                               indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                         \\<partial>M) =\n    enn2real\n     (\\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M)", "using *"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (f x * indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M\n\ngoal (1 subgoal):\n 1. enn2real\n     (\\<integral>\\<^sup>+ x. ennreal\n                              (f x *\n                               indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                         \\<partial>M) =\n    enn2real\n     (\\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M)", "by simp"], ["proof (state)\nthis:\n  enn2real\n   (\\<integral>\\<^sup>+ x. ennreal\n                            (f x *\n                             indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                       \\<partial>M) =\n  enn2real\n   (\\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  enn2real\n   (\\<integral>\\<^sup>+ x. ennreal\n                            (f x *\n                             indicat_real (\\<Union>n. (T ^^ n) --` A) x)\n                       \\<partial>M) =\n  enn2real\n   (\\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral> x. induced_function A f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real\n     (\\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M) =\n    integral\\<^sup>L M (induced_function A f)", "apply (rule integral_eq_nn_integral[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. induced_function A f \\<in> borel_measurable M\n 2. AE x in M. 0 \\<le> induced_function A f x", "unfolding induced_function_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<Sum>i<return_time_function A x. f ((T ^^ i) x))\n    \\<in> borel_measurable M\n 2. AE x in M. 0 \\<le> (\\<Sum>i<return_time_function A x. f ((T ^^ i) x))", "by (auto simp add: f_pos sum_nonneg)"], ["proof (state)\nthis:\n  enn2real\n   (\\<integral>\\<^sup>+ x. ennreal (induced_function A f x) \\<partial>M) =\n  integral\\<^sup>L M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "finally"], ["proof (chain)\npicking this:\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  integral\\<^sup>L M (induced_function A f)", "show \"(\\<integral> x. induced_function A f x \\<partial>M) = (\\<integral> x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f =\n  integral\\<^sup>L M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>L M (induced_function A f) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Here is the general version of Kac's Formula (for a general induced function, starting\nfrom a real-valued integrable function).\\<close>"], ["", "theorem induced_function_integral_nonergodic:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes [measurable]: \"A \\<in> sets M\" \"integrable M f\"\n  shows \"integrable M (induced_function A f)\"\n        \"(\\<integral>y. induced_function A f y \\<partial>M) = (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (induced_function A f) &&&\n    integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have U_meas [measurable]: \"(\\<Union>n. (T^^n)--`A) \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n. (T ^^ n) --` A) \\<in> sets M", "by measurable"], ["proof (state)\nthis:\n  (\\<Union>n. (T ^^ n) --` A) \\<in> sets M\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "define g where \"g = (\\<lambda>x. max (f x) 0)\""], ["proof (state)\nthis:\n  g = (\\<lambda>x. max (f x) 0)\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have g_int [measurable]: \"integrable M g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M g", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. max (f x) 0)", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  integrable M f\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. max (f x) 0)", "by auto"], ["proof (state)\nthis:\n  integrable M g\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  integrable M g", "have g_int2: \"integrable M (induced_function A g)\""], ["proof (prove)\nusing this:\n  integrable M g\n\ngoal (1 subgoal):\n 1. integrable M (induced_function A g)", "using induced_function_integral_aux(1) g_def"], ["proof (prove)\nusing this:\n  integrable M g\n  \\<lbrakk>?A \\<in> sets M; integrable M ?f; \\<And>x. 0 \\<le> ?f x\\<rbrakk>\n  \\<Longrightarrow> integrable M (induced_function ?A ?f)\n  g = (\\<lambda>x. max (f x) 0)\n\ngoal (1 subgoal):\n 1. integrable M (induced_function A g)", "by auto"], ["proof (state)\nthis:\n  integrable M (induced_function A g)\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "define h where \"h = (\\<lambda>x. max (-f x) 0)\""], ["proof (state)\nthis:\n  h = (\\<lambda>x. max (- f x) 0)\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have h_int [measurable]: \"integrable M h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M h", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. max (- f x) 0)", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  integrable M f\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. max (- f x) 0)", "by auto"], ["proof (state)\nthis:\n  integrable M h\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  integrable M h", "have h_int2: \"integrable M (induced_function A h)\""], ["proof (prove)\nusing this:\n  integrable M h\n\ngoal (1 subgoal):\n 1. integrable M (induced_function A h)", "using induced_function_integral_aux(1) h_def"], ["proof (prove)\nusing this:\n  integrable M h\n  \\<lbrakk>?A \\<in> sets M; integrable M ?f; \\<And>x. 0 \\<le> ?f x\\<rbrakk>\n  \\<Longrightarrow> integrable M (induced_function ?A ?f)\n  h = (\\<lambda>x. max (- f x) 0)\n\ngoal (1 subgoal):\n 1. integrable M (induced_function A h)", "by auto"], ["proof (state)\nthis:\n  integrable M (induced_function A h)\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have D1: \"f = (\\<lambda>x. g x - h x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = (\\<lambda>x. g x - h x)", "unfolding g_def h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = (\\<lambda>x. max (f x) 0 - max (- f x) 0)", "by auto"], ["proof (state)\nthis:\n  f = (\\<lambda>x. g x - h x)\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have D2: \"induced_function A f = (\\<lambda>x. induced_function A g x - induced_function A h x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_function A f =\n    (\\<lambda>x. induced_function A g x - induced_function A h x)", "unfolding induced_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>i<return_time_function A x. f ((T ^^ i) x)) =\n    (\\<lambda>x.\n        (\\<Sum>i<return_time_function A x. g ((T ^^ i) x)) -\n        (\\<Sum>i<return_time_function A x. h ((T ^^ i) x)))", "using D1"], ["proof (prove)\nusing this:\n  f = (\\<lambda>x. g x - h x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>i<return_time_function A x. f ((T ^^ i) x)) =\n    (\\<lambda>x.\n        (\\<Sum>i<return_time_function A x. g ((T ^^ i) x)) -\n        (\\<Sum>i<return_time_function A x. h ((T ^^ i) x)))", "by (simp add: sum_subtractf)"], ["proof (state)\nthis:\n  induced_function A f =\n  (\\<lambda>x. induced_function A g x - induced_function A h x)\n\ngoal (2 subgoals):\n 1. integrable M (induced_function A f)\n 2. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  induced_function A f =\n  (\\<lambda>x. induced_function A g x - induced_function A h x)", "show \"integrable M (induced_function A f)\""], ["proof (prove)\nusing this:\n  induced_function A f =\n  (\\<lambda>x. induced_function A g x - induced_function A h x)\n\ngoal (1 subgoal):\n 1. integrable M (induced_function A f)", "using g_int2 h_int2"], ["proof (prove)\nusing this:\n  induced_function A f =\n  (\\<lambda>x. induced_function A g x - induced_function A h x)\n  integrable M (induced_function A g)\n  integrable M (induced_function A h)\n\ngoal (1 subgoal):\n 1. integrable M (induced_function A f)", "by auto"], ["proof (state)\nthis:\n  integrable M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<integral>x. induced_function A f x \\<partial>M) = (\\<integral>x. induced_function A g x - induced_function A h x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    LINT x|M. induced_function A g x - induced_function A h x", "using D2"], ["proof (prove)\nusing this:\n  induced_function A f =\n  (\\<lambda>x. induced_function A g x - induced_function A h x)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    LINT x|M. induced_function A g x - induced_function A h x", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>L M (induced_function A f) =\n  LINT x|M. induced_function A g x - induced_function A h x\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  integral\\<^sup>L M (induced_function A f) =\n  LINT x|M. induced_function A g x - induced_function A h x\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral>x. induced_function A g x \\<partial>M) - (\\<integral>x. induced_function A h x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|M. induced_function A g x - induced_function A h x =\n    integral\\<^sup>L M (induced_function A g) -\n    integral\\<^sup>L M (induced_function A h)", "using g_int2 h_int2"], ["proof (prove)\nusing this:\n  integrable M (induced_function A g)\n  integrable M (induced_function A h)\n\ngoal (1 subgoal):\n 1. LINT x|M. induced_function A g x - induced_function A h x =\n    integral\\<^sup>L M (induced_function A g) -\n    integral\\<^sup>L M (induced_function A h)", "by auto"], ["proof (state)\nthis:\n  LINT x|M. induced_function A g x - induced_function A h x =\n  integral\\<^sup>L M (induced_function A g) -\n  integral\\<^sup>L M (induced_function A h)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  LINT x|M. induced_function A g x - induced_function A h x =\n  integral\\<^sup>L M (induced_function A g) -\n  integral\\<^sup>L M (induced_function A h)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). g x \\<partial>M) - (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). h x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A g) -\n    integral\\<^sup>L M (induced_function A h) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) g -\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) h", "using induced_function_integral_aux(2) g_def h_def g_int h_int"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> sets M; integrable M ?f; \\<And>x. 0 \\<le> ?f x\\<rbrakk>\n  \\<Longrightarrow> integral\\<^sup>L M (induced_function ?A ?f) =\n                    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` ?A) ?f\n  g = (\\<lambda>x. max (f x) 0)\n  h = (\\<lambda>x. max (- f x) 0)\n  integrable M g\n  integrable M h\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A g) -\n    integral\\<^sup>L M (induced_function A h) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) g -\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) h", "by auto"], ["proof (state)\nthis:\n  integral\\<^sup>L M (induced_function A g) -\n  integral\\<^sup>L M (induced_function A h) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) g -\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) h\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  integral\\<^sup>L M (induced_function A g) -\n  integral\\<^sup>L M (induced_function A h) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) g -\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) h\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). (g x - h x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) g -\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) h =\n    \\<integral>x\\<in>(\\<Union>n. (T ^^ n) --` A). (g x - h x)\\<partial>M", "apply (rule set_integral_diff(2)[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. set_integrable M (\\<Union>n. (T ^^ n) --` A) g\n 2. set_integrable M (\\<Union>n. (T ^^ n) --` A) h", "unfolding set_integrable_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. integrable M\n     (\\<lambda>x. indicat_real (\\<Union>n. (T ^^ n) --` A) x *\\<^sub>R g x)\n 2. integrable M\n     (\\<lambda>x. indicat_real (\\<Union>n. (T ^^ n) --` A) x *\\<^sub>R h x)", "using g_int h_int integrable_mult_indicator[OF U_meas]"], ["proof (prove)\nusing this:\n  integrable M g\n  integrable M h\n  integrable M ?f \\<Longrightarrow>\n  integrable M\n   (\\<lambda>x. indicat_real (\\<Union>n. (T ^^ n) --` A) x *\\<^sub>R ?f x)\n\ngoal (2 subgoals):\n 1. integrable M\n     (\\<lambda>x. indicat_real (\\<Union>n. (T ^^ n) --` A) x *\\<^sub>R g x)\n 2. integrable M\n     (\\<lambda>x. indicat_real (\\<Union>n. (T ^^ n) --` A) x *\\<^sub>R h x)", "by blast+"], ["proof (state)\nthis:\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) g -\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) h =\n  \\<integral>x\\<in>(\\<Union>n. (T ^^ n) --` A). (g x - h x)\\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) g -\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) h =\n  \\<integral>x\\<in>(\\<Union>n. (T ^^ n) --` A). (g x - h x)\\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>x\\<in>(\\<Union>n. (T ^^ n) --` A). (g x - h x)\\<partial>M =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "using D1"], ["proof (prove)\nusing this:\n  f = (\\<lambda>x. g x - h x)\n\ngoal (1 subgoal):\n 1. \\<integral>x\\<in>(\\<Union>n. (T ^^ n) --` A). (g x - h x)\\<partial>M =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "by simp"], ["proof (state)\nthis:\n  \\<integral>x\\<in>(\\<Union>n. (T ^^ n) --` A). (g x - h x)\\<partial>M =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "finally"], ["proof (chain)\npicking this:\n  integral\\<^sup>L M (induced_function A f) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "show \"(\\<integral>x. induced_function A f x \\<partial>M) = (\\<integral>x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  integral\\<^sup>L M (induced_function A f) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>L M (induced_function A f) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We can reformulate the previous statement in terms of induced measure.\\<close>"], ["", "lemma induced_function_integral_restr_nonergodic:\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes [measurable]: \"A \\<in> sets M\" \"integrable M f\"\n  shows \"integrable (restrict_space M A) (induced_function A f)\"\n        \"(\\<integral>y. induced_function A f y \\<partial>(restrict_space M A)) = (\\<integral> x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (restrict_space M A) (induced_function A f) &&&\n    integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable (restrict_space M A) (induced_function A f)\n 2. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have [measurable]: \"integrable M (induced_function A f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (induced_function A f)", "by (rule induced_function_integral_nonergodic(1)[OF assms])"], ["proof (state)\nthis:\n  integrable M (induced_function A f)\n\ngoal (2 subgoals):\n 1. integrable (restrict_space M A) (induced_function A f)\n 2. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "then"], ["proof (chain)\npicking this:\n  integrable M (induced_function A f)", "show \"integrable (restrict_space M A) (induced_function A f)\""], ["proof (prove)\nusing this:\n  integrable M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integrable (restrict_space M A) (induced_function A f)", "by (metis assms(1) integrable_mult_indicator integrable_restrict_space sets.Int_space_eq2)"], ["proof (state)\nthis:\n  integrable (restrict_space M A) (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"(\\<integral>y. induced_function A f y \\<partial>(restrict_space M A)) = (\\<integral>y \\<in> A. induced_function A f y \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M A (induced_function A f)", "by (simp add: integral_restrict_space set_lebesgue_integral_def)"], ["proof (state)\nthis:\n  integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n  set_lebesgue_integral M A (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n  set_lebesgue_integral M A (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral>y. induced_function A f y \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_lebesgue_integral M A (induced_function A f) =\n    integral\\<^sup>L M (induced_function A f)", "unfolding real_scaleR_def set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|M. indicat_real A x * induced_function A f x =\n    integral\\<^sup>L M (induced_function A f)", "proof (rule Bochner_Integration.integral_cong [OF refl])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space M \\<Longrightarrow>\n       indicat_real A x * induced_function A f x = induced_function A f x", "have \"induced_function A f y = 0\" if \"y \\<notin> A\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_function A f y = 0", "unfolding induced_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<return_time_function A y. f ((T ^^ i) y)) = 0", "using that return_time0[of A] recurrent_subset_incl(1)[of A] return_time_function_def"], ["proof (prove)\nusing this:\n  y \\<notin> A\n  return_time_function A -` {0} = UNIV - recurrent_subset A\n  recurrent_subset A \\<subseteq> A\n  return_time_function ?A ?x =\n  (if ?x \\<in> recurrent_subset ?A\n   then \\<Sqinter> {n \\<in> {1..}. (T ^^ n) ?x \\<in> ?A} else 0)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<return_time_function A y. f ((T ^^ i) y)) = 0", "by auto"], ["proof (state)\nthis:\n  ?y3 \\<notin> A \\<Longrightarrow> induced_function A f ?y3 = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space M \\<Longrightarrow>\n       indicat_real A x * induced_function A f x = induced_function A f x", "then"], ["proof (chain)\npicking this:\n  ?y3 \\<notin> A \\<Longrightarrow> induced_function A f ?y3 = 0", "show \"\\<And>x. indicator A x * induced_function A f x = induced_function A f x\""], ["proof (prove)\nusing this:\n  ?y3 \\<notin> A \\<Longrightarrow> induced_function A f ?y3 = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       indicat_real A x * induced_function A f x = induced_function A f x", "unfolding indicator_def"], ["proof (prove)\nusing this:\n  ?y3 \\<notin> A \\<Longrightarrow> induced_function A f ?y3 = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (if x \\<in> A then 1 else 0) * induced_function A f x =\n       induced_function A f x", "by auto"], ["proof (state)\nthis:\n  indicat_real A ?x3 * induced_function A f ?x3 = induced_function A f ?x3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_lebesgue_integral M A (induced_function A f) =\n  integral\\<^sup>L M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "also"], ["proof (state)\nthis:\n  set_lebesgue_integral M A (induced_function A f) =\n  integral\\<^sup>L M (induced_function A f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "have \"... = (\\<integral> x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "by (rule induced_function_integral_nonergodic(2)[OF assms])"], ["proof (state)\nthis:\n  integral\\<^sup>L M (induced_function A f) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "finally"], ["proof (chain)\npicking this:\n  integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "show \"(\\<integral>y. induced_function A f y \\<partial>(restrict_space M A)) = (\\<integral> x \\<in> (\\<Union>n. (T^^n)--`A). f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n    set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>L (restrict_space M A) (induced_function A f) =\n  set_lebesgue_integral M (\\<Union>n. (T ^^ n) --` A) f\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "(*of Recurrence.thy*)"]]}