{"file_name": "/home/qj213/afp-2021-10-22/thys/Ergodic_Theory/Measure_Preserving_Transformations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ergodic_Theory", "problem_names": ["lemma quasi_measure_preservingI [intro]:\n  assumes \"f \\<in> measurable M N\"\n          \"\\<And>A. A \\<in> sets N \\<Longrightarrow> (f -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets N)\"\n  shows \"f \\<in> quasi_measure_preserving M N\"", "lemma quasi_measure_preservingE:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n  shows \"f \\<in> measurable M N\"\n        \"\\<And>A. A \\<in> sets N \\<Longrightarrow> (f -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets N)\"", "lemma id_quasi_measure_preserving:\n  \"(\\<lambda>x. x) \\<in> quasi_measure_preserving M M\"", "lemma quasi_measure_preserving_composition:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"g \\<in> quasi_measure_preserving N P\"\n  shows \"(\\<lambda>x. g(f x)) \\<in> quasi_measure_preserving M P\"", "lemma quasi_measure_preserving_comp:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"g \\<in> quasi_measure_preserving N P\"\n  shows \"g o f \\<in> quasi_measure_preserving M P\"", "lemma quasi_measure_preserving_AE:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"AE x in N. P x\"\n  shows \"AE x in M. P (f x)\"", "lemma quasi_measure_preserving_AE':\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"AE x in M. P (f x)\"\n          \"{x \\<in> space N. P x} \\<in> sets N\"\n  shows \"AE x in N. P x\"", "lemma quasi_measure_preserving_absolutely_continuous:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"u \\<in> borel_measurable M\"\n  shows \"absolutely_continuous N (distr (density M u) N f)\"", "lemma measure_preservingE:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"f \\<in> measurable M N\"\n        \"\\<And>A. A \\<in> sets N \\<Longrightarrow> emeasure M (f-`A \\<inter> space M) = emeasure N A\"", "lemma measure_preservingI [intro]:\n  assumes \"f \\<in> measurable M N\"\n          \"\\<And>A. A \\<in> sets N \\<Longrightarrow> emeasure M (f-`A \\<inter> space M) = emeasure N A\"\n  shows \"f \\<in> measure_preserving M N\"", "lemma measure_preserving_distr:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"distr M N f = N\"", "lemma measure_preserving_distr':\n  assumes \"f \\<in> measurable M N\"\n  shows \"f \\<in> measure_preserving M (distr M N f)\"", "lemma measure_preserving_preserves_nn_integral:\n  assumes \"T \\<in> measure_preserving M N\"\n          \"f \\<in> borel_measurable N\"\n  shows \"(\\<integral>\\<^sup>+x. f x \\<partial>N) = (\\<integral>\\<^sup>+x. f (T x) \\<partial>M)\"", "lemma measure_preserving_preserves_integral:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes \"T \\<in> measure_preserving M N\"\n      and [measurable]: \"integrable N f\"\n  shows \"integrable M (\\<lambda>x. f(T x))\" \"(\\<integral>x. f x \\<partial>N) = (\\<integral>x. f (T x) \\<partial>M)\"", "lemma measure_preserving_preserves_integral':\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes \"T \\<in> measure_preserving M N\"\n      and [measurable]: \"integrable M (\\<lambda>x. f (T x))\" \"f \\<in> borel_measurable N\"\n  shows \"integrable N f\" \"(\\<integral>x. f x \\<partial>N) = (\\<integral>x. f (T x) \\<partial>M)\"", "lemma id_measure_preserving:\n  \"(\\<lambda>x. x) \\<in> measure_preserving M M\"", "lemma measure_preserving_is_quasi_measure_preserving:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"f \\<in> quasi_measure_preserving M N\"", "lemma measure_preserving_composition:\n  assumes \"f \\<in> measure_preserving M N\"\n          \"g \\<in> measure_preserving N P\"\n  shows \"(\\<lambda>x. g(f x)) \\<in> measure_preserving M P\"", "lemma measure_preserving_comp:\n  assumes \"f \\<in> measure_preserving M N\"\n          \"g \\<in> measure_preserving N P\"\n  shows \"g o f \\<in> measure_preserving M P\"", "lemma measure_preserving_total_measure:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"emeasure M (space M) = emeasure N (space N)\"", "lemma measure_preserving_finite_measure:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"finite_measure M \\<longleftrightarrow> finite_measure N\"", "lemma measure_preserving_prob_space:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"prob_space M \\<longleftrightarrow> prob_space N\"", "lemma qmpt_I:\n  assumes \"sigma_finite_measure M\"\n          \"T \\<in> measurable M M\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> ((T-`A \\<inter> space M) \\<in> null_sets M) \\<longleftrightarrow> (A \\<in> null_sets M)\"\n  shows \"qmpt M T\"", "lemma mpt_I:\n  assumes \"sigma_finite_measure M\"\n          \"T \\<in> measurable M M\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M (T-`A \\<inter> space M) = emeasure M A\"\n  shows \"mpt M T\"", "lemma fmpt_I:\n  assumes \"finite_measure M\"\n          \"T \\<in> measurable M M\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M (T-`A \\<inter> space M) = emeasure M A\"\n  shows \"fmpt M T\"", "lemma pmpt_I:\n  assumes \"prob_space M\"\n          \"T \\<in> measurable M M\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M (T-`A \\<inter> space M) = emeasure M A\"\n  shows \"pmpt M T\"", "lemma fmpt_null_space:\n  assumes \"emeasure M (space M) = 0\"\n          \"T \\<in> measurable M M\"\n  shows \"fmpt M T\"", "lemma fmpt_empty_space:\n  assumes \"space M = {}\"\n  shows \"fmpt M T\"", "lemma mpt_translation:\n  fixes c :: \"'a::euclidean_space\"\n  shows \"mpt lborel (\\<lambda>x. x + c)\"", "lemma pair_measure_null_product:\n  assumes \"emeasure M (space M) = 0\"\n  shows \"emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0\"", "lemma mpt_skew_product:\n  assumes \"mpt M T\"\n          \"AE x in M. mpt N (U x)\"\n    and [measurable]: \"(\\<lambda>(x,y). U x y) \\<in> measurable (M \\<Otimes>\\<^sub>M N) N\"\n  shows \"mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x,y). (T x, U x y))\"", "lemma mpt_skew_product_real:\n  fixes f::\"'a \\<Rightarrow> 'b::euclidean_space\"\n  assumes \"mpt M T\" and [measurable]: \"f \\<in> borel_measurable M\"\n  shows \"mpt (M \\<Otimes>\\<^sub>M lborel) (\\<lambda>(x,y). (T x, y + f x))\"", "lemma vrestr_eq [simp]:\n  \"a \\<in> f--` A \\<longleftrightarrow> a \\<in> space M \\<and> f a \\<in> A \\<inter> space M\"", "lemma vrestr_intersec [simp]:\n  \"f--` (A \\<inter> B) = (f--`A) \\<inter> (f--` B)\"", "lemma vrestr_union [simp]:\n  \"f--` (A \\<union> B) = f--`A \\<union> f--`B\"", "lemma vrestr_difference [simp]:\n  \"f--`(A-B) = f--`A - f--`B\"", "lemma vrestr_inclusion:\n  \"A \\<subseteq> B \\<Longrightarrow> f--`A \\<subseteq> f--`B\"", "lemma vrestr_Union [simp]:\n  \"f --` (\\<Union>A) = (\\<Union>X\\<in>A. f --` X)\"", "lemma vrestr_UN [simp]:\n  \"f --` (\\<Union>x\\<in>A. B x) = (\\<Union>x\\<in>A. f --` B x)\"", "lemma vrestr_Inter [simp]:\n  assumes \"A \\<noteq> {}\"\n  shows \"f --` (\\<Inter>A) = (\\<Inter>X\\<in>A. f --` X)\"", "lemma vrestr_INT [simp]:\n  assumes \"A \\<noteq> {}\"\n  shows \"f --` (\\<Inter>x\\<in>A. B x) = (\\<Inter>x\\<in>A. f --` B x)\"", "lemma vrestr_empty [simp]:\n  \"f--`{} = {}\"", "lemma vrestr_sym_diff [simp]:\n  \"f--`(A \\<Delta> B) = (f--`A) \\<Delta> (f--`B)\"", "lemma vrestr_image:\n  assumes \"x \\<in> f--`A\"\n  shows \"x \\<in> space M\" \"f x \\<in> space M\" \"f x \\<in> A\"", "lemma vrestr_intersec_in_space:\n  assumes \"A \\<in> sets M\" \"B \\<in> sets M\"\n  shows \"A \\<inter> f--`B = A \\<inter> f-`B\"", "lemma vrestr_compose:\n  assumes \"g \\<in> measurable M M\"\n  shows \"(\\<lambda> x. f(g x))--` A = g--` (f--` A)\"", "lemma vrestr_comp:\n  assumes \"g \\<in> measurable M M\"\n  shows \"(f o g)--` A = g--` (f--` A)\"", "lemma vrestr_of_set:\n  assumes \"g \\<in> measurable M M\"\n  shows \"A \\<in> sets M \\<Longrightarrow> g--`A = g-`A \\<inter> space M\"", "lemma vrestr_meas [measurable (raw)]:\n  assumes \"g \\<in> measurable M M\"\n          \"A \\<in> sets M\"\n  shows \"g--`A \\<in> sets M\"", "lemma vrestr_same_emeasure_f:\n  assumes \"f \\<in> measure_preserving M M\"\n          \"A \\<in> sets M\"\n  shows \"emeasure M (f--`A) = emeasure M A\"", "lemma vrestr_same_measure_f:\n  assumes \"f \\<in> measure_preserving M M\"\n          \"A \\<in> sets M\"\n  shows \"measure M (f--`A) = measure M A\"", "lemma T_meas [measurable (raw)]:\n  \"T \\<in> measurable M M\"", "lemma Tn_quasi_measure_preserving:\n  \"T^^n \\<in> quasi_measure_preserving M M\"", "lemma Tn_meas [measurable (raw)]:\n  \"T^^n \\<in> measurable M M\"", "lemma T_vrestr_meas [measurable]:\n  assumes \"A \\<in> sets M\"\n  shows \"T--` A \\<in> sets M\"\n        \"(T^^n)--` A \\<in> sets M\"", "lemma T_vrestr_0 [simp]:\n  assumes \"A \\<in> sets M\"\n  shows \"(T^^0)--`A = A\"\n        \"id--`A = A\"", "lemma T_vrestr_composed:\n  assumes \"A \\<in> sets M\"\n  shows \"(T^^n)--` (T^^m)--` A = (T^^(n+m))--` A\"\n        \"T--` (T^^m)--` A = (T^^(m+1))--` A\"\n        \"(T^^m)--` T--` A = (T^^(m+1))--` A\"", "lemma T_intersec_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\" \"B \\<in> sets M\"\n  shows \"A \\<inter> T-`B \\<in> sets M\"\n        \"A \\<inter> (T^^n)-`B \\<in> sets M\"\n        \"T-`A \\<inter> B \\<in> sets M\"\n        \"(T^^n)-`A \\<inter> B \\<in> sets M\"\n        \"A \\<inter> (T \\<circ> T ^^ n) -` B \\<in> sets M\"\n        \"(T \\<circ> T ^^ n) -` A \\<inter> B \\<in> sets M\"", "lemma T_diff_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\" \"B \\<in> sets M\"\n  shows \"A - T-`B \\<in> sets M\"\n        \"A - (T^^n)-`B \\<in> sets M\"", "lemma T_spaceM_stable [simp]:\n  assumes \"x \\<in> space M\"\n  shows \"T x \\<in> space M\"\n        \"(T^^n) x \\<in> space M\"", "lemma T_quasi_preserves_null:\n  assumes \"A \\<in> sets M\"\n  shows \"A \\<in> null_sets M \\<longleftrightarrow> T--` A \\<in> null_sets M\"\n        \"A \\<in> null_sets M \\<longleftrightarrow> (T^^n)--` A \\<in> null_sets M\"", "lemma T_quasi_preserves:\n  assumes \"A \\<in> sets M\"\n  shows \"emeasure M A = 0 \\<longleftrightarrow> emeasure M (T--` A) = 0\"\n        \"emeasure M A = 0 \\<longleftrightarrow> emeasure M ((T^^n)--` A) = 0\"", "lemma T_quasi_preserves_null2:\n  assumes \"A \\<in> null_sets M\"\n  shows \"T--` A \\<in> null_sets M\"\n        \"(T^^n)--` A \\<in> null_sets M\"", "lemma T_composition_borel [measurable]:\n  assumes \"f \\<in> borel_measurable M\"\n  shows \"(\\<lambda>x. f(T x)) \\<in> borel_measurable M\" \"(\\<lambda>x. f((T^^k) x)) \\<in> borel_measurable M\"", "lemma T_AE_iterates:\n  assumes \"AE x in M. P x\"\n  shows \"AE x in M. \\<forall>n. P ((T^^n) x)\"", "lemma qmpt_power:\n  \"qmpt M (T^^n)\"", "lemma T_Tn_T_compose:\n  \"T ((T^^n) x) = (T^^(Suc n)) x\"\n  \"(T^^n) (T x) = (T^^(Suc n)) x\"", "lemma (in qmpt) qmpt_density:\n  assumes [measurable]: \"h \\<in> borel_measurable M\"\n      and \"AE x in M. h x \\<noteq> 0\" \"AE x in M. h x \\<noteq> \\<infinity>\"\n  shows \"qmpt (density M h) T\"", "lemma Tn_measure_preserving:\n  \"T^^n \\<in> measure_preserving M M\"", "lemma T_integral_preserving:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes \"integrable M f\"\n  shows \"integrable M (\\<lambda>x. f(T x))\" \"(\\<integral>x. f(T x) \\<partial>M) = (\\<integral>x. f x \\<partial>M)\"", "lemma Tn_integral_preserving:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes \"integrable M f\"\n  shows \"integrable M (\\<lambda>x. f((T^^n) x))\" \"(\\<integral>x. f((T^^n) x) \\<partial>M) = (\\<integral>x. f x \\<partial>M)\"", "lemma T_nn_integral_preserving:\n  fixes f :: \"'a \\<Rightarrow> ennreal\"\n  assumes \"f \\<in> borel_measurable M\"\n  shows \"(\\<integral>\\<^sup>+x. f(T x) \\<partial>M) = (\\<integral>\\<^sup>+x. f x \\<partial>M)\"", "lemma Tn_nn_integral_preserving:\n  fixes f :: \"'a \\<Rightarrow> ennreal\"\n  assumes \"f \\<in> borel_measurable M\"\n  shows \"(\\<integral>\\<^sup>+x. f((T^^n) x) \\<partial>M) = (\\<integral>\\<^sup>+x. f x \\<partial>M)\"", "lemma mpt_power:\n  \"mpt M (T^^n)\"", "lemma T_vrestr_same_emeasure:\n  assumes \"A \\<in> sets M\"\n  shows \"emeasure M (T--` A) = emeasure M A\"\n        \"emeasure M ((T ^^ n)--`A) = emeasure M A\"", "lemma T_vrestr_same_measure:\n  assumes \"A \\<in> sets M\"\n  shows \"measure M (T--` A) = measure M A\"\n        \"measure M ((T ^^ n)--`A) = measure M A\"", "lemma (in fmpt) fmpt_power:\n  \"fmpt M (T^^n)\"", "lemma birkhoff_sum_meas [measurable]:\n  fixes f::\"'a \\<Rightarrow> 'b::{second_countable_topology, topological_comm_monoid_add}\"\n  assumes \"f \\<in> borel_measurable M\"\n  shows \"birkhoff_sum f n \\<in> borel_measurable M\"", "lemma birkhoff_sum_1 [simp]:\n  \"birkhoff_sum f 0 x = 0\"\n  \"birkhoff_sum f 1 x = f x\"\n  \"birkhoff_sum f (Suc 0) x = f x\"", "lemma birkhoff_sum_cocycle:\n  \"birkhoff_sum f (n+m) x = birkhoff_sum f n x + birkhoff_sum f m ((T^^n)x)\"", "lemma birkhoff_sum_mono:\n  fixes f g::\"_ \\<Rightarrow> real\"\n  assumes \"\\<And>x. f x \\<le> g x\"\n  shows \"birkhoff_sum f n x \\<le> birkhoff_sum g n x\"", "lemma birkhoff_sum_abs:\n  fixes f::\"_ \\<Rightarrow> 'b::real_normed_vector\"\n  shows \"norm(birkhoff_sum f n x) \\<le> birkhoff_sum (\\<lambda>x. norm(f x)) n x\"", "lemma birkhoff_sum_add:\n  \"birkhoff_sum (\\<lambda>x. f x + g x) n x = birkhoff_sum f n x + birkhoff_sum g n x\"", "lemma birkhoff_sum_diff:\n  fixes f g::\"_ \\<Rightarrow> real\"\n  shows \"birkhoff_sum (\\<lambda>x. f x - g x) n x = birkhoff_sum f n x - birkhoff_sum g n x\"", "lemma birkhoff_sum_cmult:\n  fixes f::\"_ \\<Rightarrow> real\"\n  shows \"birkhoff_sum (\\<lambda>x. c * f x) n x = c * birkhoff_sum f n x\"", "lemma skew_product_real_iterates:\n  fixes f::\"'a \\<Rightarrow> real\"\n  shows \"((\\<lambda>(x,y). (T x, y + f x))^^n) (x,y) = ((T^^n) x, y + birkhoff_sum f n x)\"", "lemma (in mpt) birkhoff_sum_integral:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes [measurable]: \"integrable M f\"\n  shows \"integrable M (birkhoff_sum f n)\" \"(\\<integral>x. birkhoff_sum f n x \\<partial>M) = n *\\<^sub>R (\\<integral>x. f x \\<partial>M)\"", "lemma (in mpt) birkhoff_sum_nn_integral:\n  fixes f :: \"'a \\<Rightarrow> ennreal\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\" and pos: \"\\<And>x. f x \\<ge> 0\"\n  shows \"(\\<integral>\\<^sup>+x. birkhoff_sum f n x \\<partial>M) = n * (\\<integral>\\<^sup>+x. f x \\<partial>M)\"", "lemma T_Tinv_of_set:\n  assumes \"invertible_qmpt\"\n          \"A \\<in> sets M\"\n  shows \"T-`(Tinv-`A \\<inter> space M) \\<inter> space M = A\"", "lemma Tinv_quasi_measure_preserving:\n  assumes \"invertible_qmpt\"\n  shows \"Tinv \\<in> quasi_measure_preserving M M\"", "lemma Tinv_qmpt:\n  assumes \"invertible_qmpt\"\n  shows \"qmpt M Tinv\"", "lemma (in mpt) Tinv_measure_preserving:\n  assumes \"invertible_qmpt\"\n  shows \"Tinv \\<in> measure_preserving M M\"", "lemma (in mpt) Tinv_mpt:\n  assumes \"invertible_qmpt\"\n  shows \"mpt M Tinv\"", "lemma (in fmpt) Tinv_fmpt:\n  assumes \"invertible_qmpt\"\n  shows \"fmpt M Tinv\"", "lemma (in pmpt) Tinv_fmpt:\n  assumes \"invertible_qmpt\"\n  shows \"pmpt M Tinv\"", "lemma (in qmpt) qmpt_factorE:\n  assumes \"qmpt_factor proj M2 T2\"\n  shows \"proj \\<in> quasi_measure_preserving M M2\"\n        \"AE x in M. proj (T x) = T2 (proj x)\"\n        \"qmpt M2 T2\"", "lemma (in qmpt) qmpt_factor_iterates:\n  assumes \"qmpt_factor proj M2 T2\"\n  shows \"AE x in M. \\<forall>n. proj ((T^^n) x) = (T2^^n) (proj x)\"", "lemma (in qmpt) qmpt_factorI:\n  assumes \"proj \\<in> quasi_measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"qmpt M2 T2\"\n  shows \"qmpt_factor proj M2 T2\"", "lemma (in qmpt) qmpt_factorI':\n  assumes \"proj \\<in> quasi_measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"sigma_finite_measure M2\"\n          \"T2 \\<in> measurable M2 M2\"\n  shows \"qmpt_factor proj M2 T2\"", "lemma qmpt_factor_compose:\n  assumes \"qmpt M1 T1\"\n          \"qmpt.qmpt_factor M1 T1 proj1 M2 T2\"\n          \"qmpt.qmpt_factor M2 T2 proj2 M3 T3\"\n  shows \"qmpt.qmpt_factor M1 T1 (proj2 o proj1) M3 T3\"", "lemma nat_left_shift_continuous [intro, continuous_intros]:\n  \"continuous_on UNIV nat_left_shift\"", "lemma nat_left_shift_measurable [intro, measurable]:\n  \"nat_left_shift \\<in> measurable borel borel\"", "lemma int_shift_continuous [intro, continuous_intros]:\n  \"continuous_on UNIV int_left_shift\"\n  \"continuous_on UNIV int_right_shift\"", "lemma int_shift_measurable [intro, measurable]:\n  \"int_left_shift \\<in> measurable borel borel\"\n  \"int_right_shift \\<in> measurable borel borel\"", "lemma int_shift_bij:\n  \"bij int_left_shift\" \"inv int_left_shift = int_right_shift\"\n  \"bij int_right_shift\" \"inv int_right_shift = int_left_shift\"", "lemma (in qmpt) qmpt_factor_projection:\n  fixes f::\"'a \\<Rightarrow> ('b::second_countable_topology)\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\"\n      and \"sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\"\n  shows \"qmpt_factor (\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) (distr M borel (\\<lambda>x. (\\<lambda>n. f ((T^^n)x)))) nat_left_shift\"", "lemma (in mpt) mpt_factor_is_qmpt_factor:\n  assumes \"mpt_factor proj M2 T2\"\n  shows \"qmpt_factor proj M2 T2\"", "lemma (in mpt) mpt_factorE:\n  assumes \"mpt_factor proj M2 T2\"\n  shows \"proj \\<in> measure_preserving M M2\"\n        \"AE x in M. proj (T x) = T2 (proj x)\"\n        \"mpt M2 T2\"", "lemma (in mpt) mpt_factorI:\n  assumes \"proj \\<in> measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"mpt M2 T2\"\n  shows \"mpt_factor proj M2 T2\"", "lemma (in mpt) mpt_factorI':\n  assumes \"proj \\<in> measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"sigma_finite_measure M2\"\n          \"T2 \\<in> measurable M2 M2\"\n  shows \"mpt_factor proj M2 T2\"", "lemma (in fmpt) mpt_factorI'':\n  assumes \"proj \\<in> measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"T2 \\<in> measurable M2 M2\"\n  shows \"mpt_factor proj M2 T2\"", "lemma (in fmpt) fmpt_factor:\n  assumes \"mpt_factor proj M2 T2\"\n  shows \"fmpt M2 T2\"", "lemma (in pmpt) pmpt_factor:\n  assumes \"mpt_factor proj M2 T2\"\n  shows \"pmpt M2 T2\"", "lemma mpt_factor_compose:\n  assumes \"mpt M1 T1\"\n          \"mpt.mpt_factor M1 T1 proj1 M2 T2\"\n          \"mpt.mpt_factor M2 T2 proj2 M3 T3\"\n  shows \"mpt.mpt_factor M1 T1 (proj2 o proj1) M3 T3\"", "lemma (in mpt) mpt_factor_projection:\n  fixes f::\"'a \\<Rightarrow> ('b::second_countable_topology)\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\"\n      and \"sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\"\n  shows \"mpt_factor (\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) (distr M borel (\\<lambda>x. (\\<lambda>n. f ((T^^n)x)))) nat_left_shift\"", "lemma (in fmpt) fmpt_factor_projection:\n  fixes f::\"'a \\<Rightarrow> ('b::second_countable_topology)\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\"\n  shows \"mpt_factor (\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) (distr M borel (\\<lambda>x. (\\<lambda>n. f ((T^^n)x)))) nat_left_shift\"", "theorem natural_extension:\n  \"pmpt natural_extension_measure natural_extension_map\"\n  \"qmpt.invertible_qmpt natural_extension_measure natural_extension_map\"\n  \"mpt.mpt_factor natural_extension_measure natural_extension_map natural_extension_proj M T\""], "translations": [["", "lemma quasi_measure_preservingI [intro]:\n  assumes \"f \\<in> measurable M N\"\n          \"\\<And>A. A \\<in> sets N \\<Longrightarrow> (f -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets N)\"\n  shows \"f \\<in> quasi_measure_preserving M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> quasi_measure_preserving M N", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n  ?A \\<in> sets N \\<Longrightarrow>\n  (f -` ?A \\<inter> space M \\<in> null_sets M) = (?A \\<in> null_sets N)\n\ngoal (1 subgoal):\n 1. f \\<in> quasi_measure_preserving M N", "unfolding quasi_measure_preserving_def"], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n  ?A \\<in> sets N \\<Longrightarrow>\n  (f -` ?A \\<inter> space M \\<in> null_sets M) = (?A \\<in> null_sets N)\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M N.\n             \\<forall>A\\<in>sets N.\n                (f -` A \\<inter> space M \\<in> null_sets M) =\n                (A \\<in> null_sets N)}", "by auto"], ["", "lemma quasi_measure_preservingE:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n  shows \"f \\<in> measurable M N\"\n        \"\\<And>A. A \\<in> sets N \\<Longrightarrow> (f -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N &&&\n    (\\<And>A.\n        A \\<in> sets N \\<Longrightarrow>\n        (f -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets N))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> quasi_measure_preserving M N\n\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N &&&\n    (\\<And>A.\n        A \\<in> sets N \\<Longrightarrow>\n        (f -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets N))", "unfolding quasi_measure_preserving_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M N.\n           \\<forall>A\\<in>sets N.\n              (f -` A \\<inter> space M \\<in> null_sets M) =\n              (A \\<in> null_sets N)}\n\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N &&&\n    (\\<And>A.\n        A \\<in> sets N \\<Longrightarrow>\n        (f -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets N))", "by auto"], ["", "lemma id_quasi_measure_preserving:\n  \"(\\<lambda>x. x) \\<in> quasi_measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> quasi_measure_preserving M M", "unfolding quasi_measure_preserving_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x)\n    \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M M.\n           \\<forall>A\\<in>sets M.\n              (f -` A \\<inter> space M \\<in> null_sets M) =\n              (A \\<in> null_sets M)}", "by auto"], ["", "lemma quasi_measure_preserving_composition:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"g \\<in> quasi_measure_preserving N P\"\n  shows \"(\\<lambda>x. g(f x)) \\<in> quasi_measure_preserving M P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. g (f x)) \\<in> quasi_measure_preserving M P", "proof (rule quasi_measure_preservingI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P\n 2. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "have f_meas [measurable]: \"f \\<in> measurable M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N", "by (rule quasi_measure_preservingE(1)[OF assms(1)])"], ["proof (state)\nthis:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P\n 2. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "have g_meas [measurable]: \"g \\<in> measurable N P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> N \\<rightarrow>\\<^sub>M P", "by (rule quasi_measure_preservingE(1)[OF assms(2)])"], ["proof (state)\nthis:\n  g \\<in> N \\<rightarrow>\\<^sub>M P\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P\n 2. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "then"], ["proof (chain)\npicking this:\n  g \\<in> N \\<rightarrow>\\<^sub>M P", "show [measurable]: \"(\\<lambda>x. g (f x)) \\<in> measurable M P\""], ["proof (prove)\nusing this:\n  g \\<in> N \\<rightarrow>\\<^sub>M P\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "fix C"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "assume [measurable]: \"C \\<in> sets P\""], ["proof (state)\nthis:\n  C \\<in> sets P\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "define B where \"B = g-`C \\<inter> space N\""], ["proof (state)\nthis:\n  B = g -` C \\<inter> space N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "have [measurable]: \"B \\<in> sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> sets N", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` C \\<inter> space N \\<in> sets N", "by simp"], ["proof (state)\nthis:\n  B \\<in> sets N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "have *: \"B \\<in> null_sets N \\<longleftrightarrow> C \\<in> null_sets P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (B \\<in> null_sets N) = (C \\<in> null_sets P)", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g -` C \\<inter> space N \\<in> null_sets N) = (C \\<in> null_sets P)", "using quasi_measure_preservingE(2)[OF assms(2)]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets P \\<Longrightarrow>\n  (g -` ?A \\<inter> space N \\<in> null_sets N) = (?A \\<in> null_sets P)\n\ngoal (1 subgoal):\n 1. (g -` C \\<inter> space N \\<in> null_sets N) = (C \\<in> null_sets P)", "by simp"], ["proof (state)\nthis:\n  (B \\<in> null_sets N) = (C \\<in> null_sets P)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "define A where \"A = f-`B \\<inter> space M\""], ["proof (state)\nthis:\n  A = f -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "have [measurable]: \"A \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> sets M", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` B \\<inter> space M \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "have \"A \\<in> null_sets M \\<longleftrightarrow> B \\<in> null_sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<in> null_sets M) = (B \\<in> null_sets N)", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f -` B \\<inter> space M \\<in> null_sets M) = (B \\<in> null_sets N)", "using quasi_measure_preservingE(2)[OF assms(1)]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets N \\<Longrightarrow>\n  (f -` ?A \\<inter> space M \\<in> null_sets M) = (?A \\<in> null_sets N)\n\ngoal (1 subgoal):\n 1. (f -` B \\<inter> space M \\<in> null_sets M) = (B \\<in> null_sets N)", "by simp"], ["proof (state)\nthis:\n  (A \\<in> null_sets M) = (B \\<in> null_sets N)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "then"], ["proof (chain)\npicking this:\n  (A \\<in> null_sets M) = (B \\<in> null_sets N)", "have \"A \\<in> null_sets M \\<longleftrightarrow> C \\<in> null_sets P\""], ["proof (prove)\nusing this:\n  (A \\<in> null_sets M) = (B \\<in> null_sets N)\n\ngoal (1 subgoal):\n 1. (A \\<in> null_sets M) = (C \\<in> null_sets P)", "using *"], ["proof (prove)\nusing this:\n  (A \\<in> null_sets M) = (B \\<in> null_sets N)\n  (B \\<in> null_sets N) = (C \\<in> null_sets P)\n\ngoal (1 subgoal):\n 1. (A \\<in> null_sets M) = (C \\<in> null_sets P)", "by simp"], ["proof (state)\nthis:\n  (A \\<in> null_sets M) = (C \\<in> null_sets P)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "moreover"], ["proof (state)\nthis:\n  (A \\<in> null_sets M) = (C \\<in> null_sets P)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "have \"A = (\\<lambda>x. g (f x)) -` C \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = (\\<lambda>x. g (f x)) -` C \\<inter> space M", "by (auto simp add: A_def B_def) (meson f_meas measurable_space)"], ["proof (state)\nthis:\n  A = (\\<lambda>x. g (f x)) -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       ((\\<lambda>x. g (f x)) -` A \\<inter> space M \\<in> null_sets M) =\n       (A \\<in> null_sets P)", "ultimately"], ["proof (chain)\npicking this:\n  (A \\<in> null_sets M) = (C \\<in> null_sets P)\n  A = (\\<lambda>x. g (f x)) -` C \\<inter> space M", "show \"((\\<lambda>x. g (f x)) -` C \\<inter> space M \\<in> null_sets M) \\<longleftrightarrow> C \\<in> null_sets P\""], ["proof (prove)\nusing this:\n  (A \\<in> null_sets M) = (C \\<in> null_sets P)\n  A = (\\<lambda>x. g (f x)) -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. g (f x)) -` C \\<inter> space M \\<in> null_sets M) =\n    (C \\<in> null_sets P)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x. g (f x)) -` C \\<inter> space M \\<in> null_sets M) =\n  (C \\<in> null_sets P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quasi_measure_preserving_comp:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"g \\<in> quasi_measure_preserving N P\"\n  shows \"g o f \\<in> quasi_measure_preserving M P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ> f \\<in> quasi_measure_preserving M P", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. g (f x)) \\<in> quasi_measure_preserving M P", "using assms quasi_measure_preserving_composition"], ["proof (prove)\nusing this:\n  f \\<in> quasi_measure_preserving M N\n  g \\<in> quasi_measure_preserving N P\n  \\<lbrakk>?f \\<in> quasi_measure_preserving ?M ?N;\n   ?g \\<in> quasi_measure_preserving ?N ?P\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. ?g (?f x))\n                    \\<in> quasi_measure_preserving ?M ?P\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g (f x)) \\<in> quasi_measure_preserving M P", "by blast"], ["", "lemma quasi_measure_preserving_AE:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"AE x in N. P x\"\n  shows \"AE x in M. P (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "obtain A where \"\\<And>x. x \\<in> space N - A \\<Longrightarrow> P x\" \"A \\<in> null_sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>\\<And>x. x \\<in> space N - A \\<Longrightarrow> P x;\n         A \\<in> null_sets N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using AE_E3[OF assms(2)]"], ["proof (prove)\nusing this:\n  (\\<And>Na.\n      \\<lbrakk>\\<And>x. x \\<in> space N - Na \\<Longrightarrow> P x;\n       Na \\<in> null_sets N\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>\\<And>x. x \\<in> space N - A \\<Longrightarrow> P x;\n         A \\<in> null_sets N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> space N - A \\<Longrightarrow> P ?x\n  A \\<in> null_sets N\n\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "define B where \"B = f-`A \\<inter> space M\""], ["proof (state)\nthis:\n  B = f -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "have \"B \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> null_sets M", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> null_sets M", "using quasi_measure_preservingE(2)[OF assms(1)] \\<open>A \\<in> null_sets N\\<close>"], ["proof (prove)\nusing this:\n  ?A \\<in> sets N \\<Longrightarrow>\n  (f -` ?A \\<inter> space M \\<in> null_sets M) = (?A \\<in> null_sets N)\n  A \\<in> null_sets N\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> null_sets M", "by auto"], ["proof (state)\nthis:\n  B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "moreover"], ["proof (state)\nthis:\n  B \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "have \"x \\<in> space M - B \\<Longrightarrow> P (f x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> space M - B \\<Longrightarrow> P (f x)", "using \\<open>\\<And>x. x \\<in> space N - A \\<Longrightarrow> P x\\<close> quasi_measure_preservingE(1)[OF assms(1)]"], ["proof (prove)\nusing this:\n  ?x \\<in> space N - A \\<Longrightarrow> P ?x\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. x \\<in> space M - B \\<Longrightarrow> P (f x)", "unfolding B_def"], ["proof (prove)\nusing this:\n  ?x \\<in> space N - A \\<Longrightarrow> P ?x\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. x \\<in> space M - f -` A \\<inter> space M \\<Longrightarrow> P (f x)", "by (metis (no_types, lifting) Diff_iff IntI measurable_space vimage_eq)"], ["proof (state)\nthis:\n  ?x \\<in> space M - B \\<Longrightarrow> P (f ?x)\n\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "ultimately"], ["proof (chain)\npicking this:\n  B \\<in> null_sets M\n  ?x \\<in> space M - B \\<Longrightarrow> P (f ?x)", "show ?thesis"], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n  ?x \\<in> space M - B \\<Longrightarrow> P (f ?x)\n\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "using AE_not_in AE_space"], ["proof (prove)\nusing this:\n  B \\<in> null_sets M\n  ?x \\<in> space M - B \\<Longrightarrow> P (f ?x)\n  ?N \\<in> null_sets ?M \\<Longrightarrow> AE x in ?M. x \\<notin> ?N\n  AE x in ?M. x \\<in> space ?M\n\ngoal (1 subgoal):\n 1. AE x in M. P (f x)", "by force"], ["proof (state)\nthis:\n  AE x in M. P (f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quasi_measure_preserving_AE':\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"AE x in M. P (f x)\"\n          \"{x \\<in> space N. P x} \\<in> sets N\"\n  shows \"AE x in N. P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. almost_everywhere N P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. almost_everywhere N P", "have [measurable]: \"f \\<in> measurable M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N", "using quasi_measure_preservingE(1)[OF assms(1)]"], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N", "by simp"], ["proof (state)\nthis:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "define U where \"U = {x \\<in> space N. \\<not>(P x)}\""], ["proof (state)\nthis:\n  U = {x \\<in> space N. \\<not> P x}\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "have [measurable]: \"U \\<in> sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> sets N", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> space N. \\<not> P x} \\<in> sets N", "using assms(3)"], ["proof (prove)\nusing this:\n  {x \\<in> space N. P x} \\<in> sets N\n\ngoal (1 subgoal):\n 1. {x \\<in> space N. \\<not> P x} \\<in> sets N", "by auto"], ["proof (state)\nthis:\n  U \\<in> sets N\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "have \"f-`U \\<inter> space M = {x \\<in> space M. \\<not>(P (f x))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` U \\<inter> space M = {x \\<in> space M. \\<not> P (f x)}", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` {x \\<in> space N. \\<not> P x} \\<inter> space M =\n    {x \\<in> space M. \\<not> P (f x)}", "using \\<open>f \\<in> measurable M N\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. f -` {x \\<in> space N. \\<not> P x} \\<inter> space M =\n    {x \\<in> space M. \\<not> P (f x)}", "by (auto, meson measurable_space)"], ["proof (state)\nthis:\n  f -` U \\<inter> space M = {x \\<in> space M. \\<not> P (f x)}\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "also"], ["proof (state)\nthis:\n  f -` U \\<inter> space M = {x \\<in> space M. \\<not> P (f x)}\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "have \"... \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> space M. \\<not> P (f x)} \\<in> null_sets M", "apply (subst AE_iff_null[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. {x \\<in> space M. \\<not> P (f x)} \\<in> sets M\n 2. AE x in M. P (f x)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> quasi_measure_preserving M N\n  AE x in M. P (f x)\n  {x \\<in> space N. P x} \\<in> sets N\n\ngoal (2 subgoals):\n 1. {x \\<in> space M. \\<not> P (f x)} \\<in> sets M\n 2. AE x in M. P (f x)", "by auto"], ["proof (state)\nthis:\n  {x \\<in> space M. \\<not> P (f x)} \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "finally"], ["proof (chain)\npicking this:\n  f -` U \\<inter> space M \\<in> null_sets M", "have \"U \\<in> null_sets N\""], ["proof (prove)\nusing this:\n  f -` U \\<inter> space M \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. U \\<in> null_sets N", "using quasi_measure_preservingE(2)[OF assms(1) \\<open>U \\<in> sets N\\<close>]"], ["proof (prove)\nusing this:\n  f -` U \\<inter> space M \\<in> null_sets M\n  (f -` U \\<inter> space M \\<in> null_sets M) = (U \\<in> null_sets N)\n\ngoal (1 subgoal):\n 1. U \\<in> null_sets N", "by auto"], ["proof (state)\nthis:\n  U \\<in> null_sets N\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "then"], ["proof (chain)\npicking this:\n  U \\<in> null_sets N", "show ?thesis"], ["proof (prove)\nusing this:\n  U \\<in> null_sets N\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "unfolding U_def"], ["proof (prove)\nusing this:\n  {x \\<in> space N. \\<not> P x} \\<in> null_sets N\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "using AE_iff_null"], ["proof (prove)\nusing this:\n  {x \\<in> space N. \\<not> P x} \\<in> null_sets N\n  {x \\<in> space ?M. \\<not> ?P x} \\<in> sets ?M \\<Longrightarrow>\n  almost_everywhere ?M ?P =\n  ({x \\<in> space ?M. \\<not> ?P x} \\<in> null_sets ?M)\n\ngoal (1 subgoal):\n 1. almost_everywhere N P", "by blast"], ["proof (state)\nthis:\n  almost_everywhere N P\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The push-forward under a quasi-measure preserving map $f$ of a measure absolutely\ncontinuous with respect to $M$ is absolutely continuous with respect to $N$.\\<close>"], ["", "lemma quasi_measure_preserving_absolutely_continuous:\n  assumes \"f \\<in> quasi_measure_preserving M N\"\n          \"u \\<in> borel_measurable M\"\n  shows \"absolutely_continuous N (distr (density M u) N f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. absolutely_continuous N (distr (density M u) N f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. absolutely_continuous N (distr (density M u) N f)", "have [measurable]: \"f \\<in> measurable M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N", "using quasi_measure_preservingE[OF assms(1)]"], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n  ?A \\<in> sets N \\<Longrightarrow>\n  (f -` ?A \\<inter> space M \\<in> null_sets M) = (?A \\<in> null_sets N)\n\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N", "by auto"], ["proof (state)\nthis:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. absolutely_continuous N (distr (density M u) N f)", "have \"S \\<in> null_sets (distr (density M u) N f)\" if [measurable]: \"S \\<in> null_sets N\" for S"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "have [measurable]: \"S \\<in> sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets N", "using null_setsD2[OF that]"], ["proof (prove)\nusing this:\n  S \\<in> sets N\n\ngoal (1 subgoal):\n 1. S \\<in> sets N", "by auto"], ["proof (state)\nthis:\n  S \\<in> sets N\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "have *: \"AE x in N. x \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in N. x \\<notin> S", "by (metis AE_not_in that)"], ["proof (state)\nthis:\n  AE x in N. x \\<notin> S\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "have \"AE x in M. f x \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. f x \\<notin> S", "by (rule quasi_measure_preserving_AE[OF _ *], simp add: assms)"], ["proof (state)\nthis:\n  AE x in M. f x \\<notin> S\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "then"], ["proof (chain)\npicking this:\n  AE x in M. f x \\<notin> S", "have *: \"AE x in M. indicator S (f x) * u x = 0\""], ["proof (prove)\nusing this:\n  AE x in M. f x \\<notin> S\n\ngoal (1 subgoal):\n 1. AE x in M. indicator S (f x) * u x = 0", "by force"], ["proof (state)\nthis:\n  AE x in M. indicator S (f x) * u x = 0\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "have \"emeasure (distr (density M u) N f) S = (\\<integral>\\<^sup>+x. indicator S x \\<partial>(distr (density M u) N f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (distr (density M u) N f) S =\n    integral\\<^sup>N (distr (density M u) N f) (indicator S)", "by auto"], ["proof (state)\nthis:\n  emeasure (distr (density M u) N f) S =\n  integral\\<^sup>N (distr (density M u) N f) (indicator S)\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "also"], ["proof (state)\nthis:\n  emeasure (distr (density M u) N f) S =\n  integral\\<^sup>N (distr (density M u) N f) (indicator S)\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "have \"... = (\\<integral>\\<^sup>+x. indicator S (f x) \\<partial>(density M u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (distr (density M u) N f) (indicator S) =\n    \\<integral>\\<^sup>+ x. indicator S (f x) \\<partial>density M u", "by (rule nn_integral_distr, auto)"], ["proof (state)\nthis:\n  integral\\<^sup>N (distr (density M u) N f) (indicator S) =\n  \\<integral>\\<^sup>+ x. indicator S (f x) \\<partial>density M u\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N (distr (density M u) N f) (indicator S) =\n  \\<integral>\\<^sup>+ x. indicator S (f x) \\<partial>density M u\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "have \"... = (\\<integral>\\<^sup>+x. indicator S (f x) * u x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. indicator S (f x) \\<partial>density M u =\n    \\<integral>\\<^sup>+ x. indicator S (f x) * u x \\<partial>M", "by (rule nn_integral_densityR[symmetric], auto simp add: assms)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. indicator S (f x) \\<partial>density M u =\n  \\<integral>\\<^sup>+ x. indicator S (f x) * u x \\<partial>M\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. indicator S (f x) \\<partial>density M u =\n  \\<integral>\\<^sup>+ x. indicator S (f x) * u x \\<partial>M\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "have \"... = (\\<integral>\\<^sup>+x. 0 \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. indicator S (f x) * u x \\<partial>M =\n    \\<integral>\\<^sup>+ x. 0 \\<partial>M", "using *"], ["proof (prove)\nusing this:\n  AE x in M. indicator S (f x) * u x = 0\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. indicator S (f x) * u x \\<partial>M =\n    \\<integral>\\<^sup>+ x. 0 \\<partial>M", "by (rule nn_integral_cong_AE)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. indicator S (f x) * u x \\<partial>M =\n  \\<integral>\\<^sup>+ x. 0 \\<partial>M\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "finally"], ["proof (chain)\npicking this:\n  emeasure (distr (density M u) N f) S =\n  \\<integral>\\<^sup>+ x. 0 \\<partial>M", "have \"emeasure (distr (density M u) N f) S = 0\""], ["proof (prove)\nusing this:\n  emeasure (distr (density M u) N f) S =\n  \\<integral>\\<^sup>+ x. 0 \\<partial>M\n\ngoal (1 subgoal):\n 1. emeasure (distr (density M u) N f) S = 0", "by auto"], ["proof (state)\nthis:\n  emeasure (distr (density M u) N f) S = 0\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "then"], ["proof (chain)\npicking this:\n  emeasure (distr (density M u) N f) S = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure (distr (density M u) N f) S = 0\n\ngoal (1 subgoal):\n 1. S \\<in> null_sets (distr (density M u) N f)", "by auto"], ["proof (state)\nthis:\n  S \\<in> null_sets (distr (density M u) N f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?S \\<in> null_sets N \\<Longrightarrow>\n  ?S \\<in> null_sets (distr (density M u) N f)\n\ngoal (1 subgoal):\n 1. absolutely_continuous N (distr (density M u) N f)", "then"], ["proof (chain)\npicking this:\n  ?S \\<in> null_sets N \\<Longrightarrow>\n  ?S \\<in> null_sets (distr (density M u) N f)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?S \\<in> null_sets N \\<Longrightarrow>\n  ?S \\<in> null_sets (distr (density M u) N f)\n\ngoal (1 subgoal):\n 1. absolutely_continuous N (distr (density M u) N f)", "unfolding absolutely_continuous_def"], ["proof (prove)\nusing this:\n  ?S \\<in> null_sets N \\<Longrightarrow>\n  ?S \\<in> null_sets (distr (density M u) N f)\n\ngoal (1 subgoal):\n 1. null_sets N \\<subseteq> null_sets (distr (density M u) N f)", "by auto"], ["proof (state)\nthis:\n  absolutely_continuous N (distr (density M u) N f)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition measure_preserving::\"'a measure \\<Rightarrow> 'b measure \\<Rightarrow> ('a \\<Rightarrow> 'b) set\"\n  where \"measure_preserving M N\n          = {f \\<in> measurable M N. (\\<forall> A \\<in> sets N. emeasure M (f-`A \\<inter> space M) = emeasure N A)}\""], ["", "lemma measure_preservingE:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"f \\<in> measurable M N\"\n        \"\\<And>A. A \\<in> sets N \\<Longrightarrow> emeasure M (f-`A \\<inter> space M) = emeasure N A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N &&&\n    (\\<And>A.\n        A \\<in> sets N \\<Longrightarrow>\n        emeasure M (f -` A \\<inter> space M) = emeasure N A)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> measure_preserving M N\n\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N &&&\n    (\\<And>A.\n        A \\<in> sets N \\<Longrightarrow>\n        emeasure M (f -` A \\<inter> space M) = emeasure N A)", "unfolding measure_preserving_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M N.\n           \\<forall>A\\<in>sets N.\n              emeasure M (f -` A \\<inter> space M) = emeasure N A}\n\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N &&&\n    (\\<And>A.\n        A \\<in> sets N \\<Longrightarrow>\n        emeasure M (f -` A \\<inter> space M) = emeasure N A)", "by auto"], ["", "lemma measure_preservingI [intro]:\n  assumes \"f \\<in> measurable M N\"\n          \"\\<And>A. A \\<in> sets N \\<Longrightarrow> emeasure M (f-`A \\<inter> space M) = emeasure N A\"\n  shows \"f \\<in> measure_preserving M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> measure_preserving M N", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n  ?A \\<in> sets N \\<Longrightarrow>\n  emeasure M (f -` ?A \\<inter> space M) = emeasure N ?A\n\ngoal (1 subgoal):\n 1. f \\<in> measure_preserving M N", "unfolding measure_preserving_def"], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n  ?A \\<in> sets N \\<Longrightarrow>\n  emeasure M (f -` ?A \\<inter> space M) = emeasure N ?A\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M N.\n             \\<forall>A\\<in>sets N.\n                emeasure M (f -` A \\<inter> space M) = emeasure N A}", "by auto"], ["", "lemma measure_preserving_distr:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"distr M N f = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr M N f = N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. distr M N f = N", "let ?N2 = \"distr M N f\""], ["proof (state)\ngoal (1 subgoal):\n 1. distr M N f = N", "have \"sets ?N2 = sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (distr M N f) = sets N", "by simp"], ["proof (state)\nthis:\n  sets (distr M N f) = sets N\n\ngoal (1 subgoal):\n 1. distr M N f = N", "moreover"], ["proof (state)\nthis:\n  sets (distr M N f) = sets N\n\ngoal (1 subgoal):\n 1. distr M N f = N", "have \"emeasure ?N2 A = emeasure N A\" if \"A \\<in> sets N\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (distr M N f) A = emeasure N A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure (distr M N f) A = emeasure N A", "have \"emeasure ?N2 A = emeasure M (f-`A \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (distr M N f) A = emeasure M (f -` A \\<inter> space M)", "using \\<open>A \\<in> sets N\\<close> assms emeasure_distr measure_preservingE(1)[OF assms]"], ["proof (prove)\nusing this:\n  A \\<in> sets N\n  f \\<in> measure_preserving M N\n  \\<lbrakk>?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N; ?A \\<in> sets ?N\\<rbrakk>\n  \\<Longrightarrow> emeasure (distr ?M ?N ?f) ?A =\n                    emeasure ?M (?f -` ?A \\<inter> space ?M)\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. emeasure (distr M N f) A = emeasure M (f -` A \\<inter> space M)", "by blast"], ["proof (state)\nthis:\n  emeasure (distr M N f) A = emeasure M (f -` A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure (distr M N f) A = emeasure N A", "then"], ["proof (chain)\npicking this:\n  emeasure (distr M N f) A = emeasure M (f -` A \\<inter> space M)", "show \"emeasure ?N2 A = emeasure N A\""], ["proof (prove)\nusing this:\n  emeasure (distr M N f) A = emeasure M (f -` A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure (distr M N f) A = emeasure N A", "using \\<open>A \\<in> sets N\\<close> measure_preservingE(2)[OF assms]"], ["proof (prove)\nusing this:\n  emeasure (distr M N f) A = emeasure M (f -` A \\<inter> space M)\n  A \\<in> sets N\n  ?A \\<in> sets N \\<Longrightarrow>\n  emeasure M (f -` ?A \\<inter> space M) = emeasure N ?A\n\ngoal (1 subgoal):\n 1. emeasure (distr M N f) A = emeasure N A", "by auto"], ["proof (state)\nthis:\n  emeasure (distr M N f) A = emeasure N A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?A \\<in> sets N \\<Longrightarrow>\n  emeasure (distr M N f) ?A = emeasure N ?A\n\ngoal (1 subgoal):\n 1. distr M N f = N", "ultimately"], ["proof (chain)\npicking this:\n  sets (distr M N f) = sets N\n  ?A \\<in> sets N \\<Longrightarrow>\n  emeasure (distr M N f) ?A = emeasure N ?A", "show ?thesis"], ["proof (prove)\nusing this:\n  sets (distr M N f) = sets N\n  ?A \\<in> sets N \\<Longrightarrow>\n  emeasure (distr M N f) ?A = emeasure N ?A\n\ngoal (1 subgoal):\n 1. distr M N f = N", "by (metis measure_eqI)"], ["proof (state)\nthis:\n  distr M N f = N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma measure_preserving_distr':\n  assumes \"f \\<in> measurable M N\"\n  shows \"f \\<in> measure_preserving M (distr M N f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> measure_preserving M (distr M N f)", "proof (rule measure_preservingI)"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M distr M N f\n 2. \\<And>A.\n       A \\<in> sets (distr M N f) \\<Longrightarrow>\n       emeasure M (f -` A \\<inter> space M) = emeasure (distr M N f) A", "show \"f \\<in> measurable M (distr M N f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M distr M N f", "using assms(1)"], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M distr M N f", "by auto"], ["proof (state)\nthis:\n  f \\<in> M \\<rightarrow>\\<^sub>M distr M N f\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (distr M N f) \\<Longrightarrow>\n       emeasure M (f -` A \\<inter> space M) = emeasure (distr M N f) A", "show \"emeasure M (f-`A \\<inter> space M) = emeasure (distr M N f) A\" if \"A \\<in> sets (distr M N f)\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (f -` A \\<inter> space M) = emeasure (distr M N f) A", "using that emeasure_distr[OF assms]"], ["proof (prove)\nusing this:\n  A \\<in> sets (distr M N f)\n  ?A \\<in> sets N \\<Longrightarrow>\n  emeasure (distr M N f) ?A = emeasure M (f -` ?A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M (f -` A \\<inter> space M) = emeasure (distr M N f) A", "by auto"], ["proof (state)\nthis:\n  ?A \\<in> sets (distr M N f) \\<Longrightarrow>\n  emeasure M (f -` ?A \\<inter> space M) = emeasure (distr M N f) ?A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma measure_preserving_preserves_nn_integral:\n  assumes \"T \\<in> measure_preserving M N\"\n          \"f \\<in> borel_measurable N\"\n  shows \"(\\<integral>\\<^sup>+x. f x \\<partial>N) = (\\<integral>\\<^sup>+x. f (T x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N N f = \\<integral>\\<^sup>+ x. f (T x) \\<partial>M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral\\<^sup>N N f = \\<integral>\\<^sup>+ x. f (T x) \\<partial>M", "have \"(\\<integral>\\<^sup>+x. f (T x) \\<partial>M) = (\\<integral>\\<^sup>+y. f y \\<partial>distr M N T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f (T x) \\<partial>M =\n    integral\\<^sup>N (distr M N T) f", "using assms nn_integral_distr[of T M N f, OF measure_preservingE(1)[OF assms(1)]]"], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M N\n  f \\<in> borel_measurable N\n  f \\<in> borel_measurable (distr M N T) \\<Longrightarrow>\n  integral\\<^sup>N (distr M N T) f =\n  \\<integral>\\<^sup>+ x. f (T x) \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f (T x) \\<partial>M =\n    integral\\<^sup>N (distr M N T) f", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f (T x) \\<partial>M =\n  integral\\<^sup>N (distr M N T) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N N f = \\<integral>\\<^sup>+ x. f (T x) \\<partial>M", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f (T x) \\<partial>M =\n  integral\\<^sup>N (distr M N T) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N N f = \\<integral>\\<^sup>+ x. f (T x) \\<partial>M", "have \"... = (\\<integral>\\<^sup>+y. f y \\<partial>N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (distr M N T) f = integral\\<^sup>N N f", "using measure_preserving_distr[OF assms(1)]"], ["proof (prove)\nusing this:\n  distr M N T = N\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N (distr M N T) f = integral\\<^sup>N N f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N (distr M N T) f = integral\\<^sup>N N f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N N f = \\<integral>\\<^sup>+ x. f (T x) \\<partial>M", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. f (T x) \\<partial>M = integral\\<^sup>N N f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. f (T x) \\<partial>M = integral\\<^sup>N N f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N N f = \\<integral>\\<^sup>+ x. f (T x) \\<partial>M", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N N f = \\<integral>\\<^sup>+ x. f (T x) \\<partial>M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma measure_preserving_preserves_integral:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes \"T \\<in> measure_preserving M N\"\n      and [measurable]: \"integrable N f\"\n  shows \"integrable M (\\<lambda>x. f(T x))\" \"(\\<integral>x. f x \\<partial>N) = (\\<integral>x. f (T x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f (T x)) &&&\n    integral\\<^sup>L N f = LINT x|M. f (T x)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable M (\\<lambda>x. f (T x))\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "have a [measurable]: \"T \\<in> measurable M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M N", "by (rule measure_preservingE(1)[OF assms(1)])"], ["proof (state)\nthis:\n  T \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (2 subgoals):\n 1. integrable M (\\<lambda>x. f (T x))\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "have b [measurable]: \"f \\<in> borel_measurable N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable N", "by simp"], ["proof (state)\nthis:\n  f \\<in> borel_measurable N\n\ngoal (2 subgoals):\n 1. integrable M (\\<lambda>x. f (T x))\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "have \"distr M N T = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr M N T = N", "using measure_preserving_distr[OF assms(1)]"], ["proof (prove)\nusing this:\n  distr M N T = N\n\ngoal (1 subgoal):\n 1. distr M N T = N", "by simp"], ["proof (state)\nthis:\n  distr M N T = N\n\ngoal (2 subgoals):\n 1. integrable M (\\<lambda>x. f (T x))\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "then"], ["proof (chain)\npicking this:\n  distr M N T = N", "have \"integrable (distr M N T) f\""], ["proof (prove)\nusing this:\n  distr M N T = N\n\ngoal (1 subgoal):\n 1. integrable (distr M N T) f", "using assms(2)"], ["proof (prove)\nusing this:\n  distr M N T = N\n  integrable N f\n\ngoal (1 subgoal):\n 1. integrable (distr M N T) f", "by simp"], ["proof (state)\nthis:\n  integrable (distr M N T) f\n\ngoal (2 subgoals):\n 1. integrable M (\\<lambda>x. f (T x))\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "then"], ["proof (chain)\npicking this:\n  integrable (distr M N T) f", "show \"integrable M (\\<lambda>x. f(T x))\""], ["proof (prove)\nusing this:\n  integrable (distr M N T) f\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f (T x))", "using integrable_distr_eq[OF a b]"], ["proof (prove)\nusing this:\n  integrable (distr M N T) f\n  integrable (distr M N T) f = integrable M (\\<lambda>x. f (T x))\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f (T x))", "by simp"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. f (T x))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N f = LINT x|M. f (T x)", "have \"(\\<integral>x. f (T x) \\<partial>M) = (\\<integral>y. f y \\<partial>distr M N T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|M. f (T x) = integral\\<^sup>L (distr M N T) f", "using integral_distr[OF a b]"], ["proof (prove)\nusing this:\n  integral\\<^sup>L (distr M N T) f = LINT x|M. f (T x)\n\ngoal (1 subgoal):\n 1. LINT x|M. f (T x) = integral\\<^sup>L (distr M N T) f", "by simp"], ["proof (state)\nthis:\n  LINT x|M. f (T x) = integral\\<^sup>L (distr M N T) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N f = LINT x|M. f (T x)", "then"], ["proof (chain)\npicking this:\n  LINT x|M. f (T x) = integral\\<^sup>L (distr M N T) f", "show \"(\\<integral>x. f x \\<partial>N) = (\\<integral>x. f (T x) \\<partial>M)\""], ["proof (prove)\nusing this:\n  LINT x|M. f (T x) = integral\\<^sup>L (distr M N T) f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N f = LINT x|M. f (T x)", "using \\<open>distr M N T = N\\<close>"], ["proof (prove)\nusing this:\n  LINT x|M. f (T x) = integral\\<^sup>L (distr M N T) f\n  distr M N T = N\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N f = LINT x|M. f (T x)", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>L N f = LINT x|M. f (T x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma measure_preserving_preserves_integral':\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes \"T \\<in> measure_preserving M N\"\n      and [measurable]: \"integrable M (\\<lambda>x. f (T x))\" \"f \\<in> borel_measurable N\"\n  shows \"integrable N f\" \"(\\<integral>x. f x \\<partial>N) = (\\<integral>x. f (T x) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N f &&& integral\\<^sup>L N f = LINT x|M. f (T x)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable N f\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "have a [measurable]: \"T \\<in> measurable M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M N", "by (rule measure_preservingE(1)[OF assms(1)])"], ["proof (state)\nthis:\n  T \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (2 subgoals):\n 1. integrable N f\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "have \"integrable M (\\<lambda>x. f(T x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f (T x))", "using assms(2)"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. f (T x))\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f (T x))", "unfolding comp_def"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. f (T x))\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f (T x))", "by auto"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. f (T x))\n\ngoal (2 subgoals):\n 1. integrable N f\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "then"], ["proof (chain)\npicking this:\n  integrable M (\\<lambda>x. f (T x))", "have \"integrable (distr M N T) f\""], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. f (T x))\n\ngoal (1 subgoal):\n 1. integrable (distr M N T) f", "using integrable_distr_eq[OF a assms(3)]"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. f (T x))\n  integrable (distr M N T) f = integrable M (\\<lambda>x. f (T x))\n\ngoal (1 subgoal):\n 1. integrable (distr M N T) f", "by simp"], ["proof (state)\nthis:\n  integrable (distr M N T) f\n\ngoal (2 subgoals):\n 1. integrable N f\n 2. integral\\<^sup>L N f = LINT x|M. f (T x)", "then"], ["proof (chain)\npicking this:\n  integrable (distr M N T) f", "show *: \"integrable N f\""], ["proof (prove)\nusing this:\n  integrable (distr M N T) f\n\ngoal (1 subgoal):\n 1. integrable N f", "using measure_preserving_distr[OF assms(1)]"], ["proof (prove)\nusing this:\n  integrable (distr M N T) f\n  distr M N T = N\n\ngoal (1 subgoal):\n 1. integrable N f", "by simp"], ["proof (state)\nthis:\n  integrable N f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N f = LINT x|M. f (T x)", "then"], ["proof (chain)\npicking this:\n  integrable N f", "show \"(\\<integral>x. f x \\<partial>N) = (\\<integral>x. f (T x) \\<partial>M)\""], ["proof (prove)\nusing this:\n  integrable N f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N f = LINT x|M. f (T x)", "using measure_preserving_preserves_integral[OF assms(1) *]"], ["proof (prove)\nusing this:\n  integrable N f\n  integrable M (\\<lambda>x. f (T x))\n  integral\\<^sup>L N f = LINT x|M. f (T x)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N f = LINT x|M. f (T x)", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>L N f = LINT x|M. f (T x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma id_measure_preserving:\n  \"(\\<lambda>x. x) \\<in> measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> measure_preserving M M", "unfolding measure_preserving_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x)\n    \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M M.\n           \\<forall>A\\<in>sets M.\n              emeasure M (f -` A \\<inter> space M) = emeasure M A}", "by auto"], ["", "lemma measure_preserving_is_quasi_measure_preserving:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"f \\<in> quasi_measure_preserving M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> quasi_measure_preserving M N", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> measure_preserving M N\n\ngoal (1 subgoal):\n 1. f \\<in> quasi_measure_preserving M N", "unfolding measure_preserving_def quasi_measure_preserving_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M N.\n           \\<forall>A\\<in>sets N.\n              emeasure M (f -` A \\<inter> space M) = emeasure N A}\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M N.\n             \\<forall>A\\<in>sets N.\n                (f -` A \\<inter> space M \\<in> null_sets M) =\n                (A \\<in> null_sets N)}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets N; f \\<in> M \\<rightarrow>\\<^sub>M N;\n        \\<forall>A\\<in>sets N.\n           emeasure M (f -` A \\<inter> space M) = emeasure N A;\n        f -` A \\<inter> space M \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> A \\<in> null_sets N\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets N; f \\<in> M \\<rightarrow>\\<^sub>M N;\n        \\<forall>A\\<in>sets N.\n           emeasure M (f -` A \\<inter> space M) = emeasure N A;\n        A \\<in> null_sets N\\<rbrakk>\n       \\<Longrightarrow> f -` A \\<inter> space M \\<in> null_sets M", "by (metis null_setsD1 null_setsI, metis measurable_sets null_setsD1 null_setsI)"], ["", "lemma measure_preserving_composition:\n  assumes \"f \\<in> measure_preserving M N\"\n          \"g \\<in> measure_preserving N P\"\n  shows \"(\\<lambda>x. g(f x)) \\<in> measure_preserving M P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. g (f x)) \\<in> measure_preserving M P", "proof (rule measure_preservingI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P\n 2. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "have f [measurable]: \"f \\<in> measurable M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N", "by (rule measure_preservingE(1)[OF assms(1)])"], ["proof (state)\nthis:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P\n 2. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "have g [measurable]: \"g \\<in> measurable N P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> N \\<rightarrow>\\<^sub>M P", "by (rule measure_preservingE(1)[OF assms(2)])"], ["proof (state)\nthis:\n  g \\<in> N \\<rightarrow>\\<^sub>M P\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P\n 2. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "show [measurable]: \"(\\<lambda>x. g (f x)) \\<in> measurable M P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. g (f x)) \\<in> M \\<rightarrow>\\<^sub>M P\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "fix C"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "assume [measurable]: \"C \\<in> sets P\""], ["proof (state)\nthis:\n  C \\<in> sets P\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "define B where \"B = g-`C \\<inter> space N\""], ["proof (state)\nthis:\n  B = g -` C \\<inter> space N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "have [measurable]: \"B \\<in> sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> sets N", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` C \\<inter> space N \\<in> sets N", "by simp"], ["proof (state)\nthis:\n  B \\<in> sets N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "have *: \"emeasure N B = emeasure P C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure N B = emeasure P C", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure N (g -` C \\<inter> space N) = emeasure P C", "using measure_preservingE(2)[OF assms(2)]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets P \\<Longrightarrow>\n  emeasure N (g -` ?A \\<inter> space N) = emeasure P ?A\n\ngoal (1 subgoal):\n 1. emeasure N (g -` C \\<inter> space N) = emeasure P C", "by simp"], ["proof (state)\nthis:\n  emeasure N B = emeasure P C\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "define A where \"A = f-`B \\<inter> space M\""], ["proof (state)\nthis:\n  A = f -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "have [measurable]: \"A \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> sets M", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` B \\<inter> space M \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "have \"emeasure M A = emeasure N B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M A = emeasure N B", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (f -` B \\<inter> space M) = emeasure N B", "using measure_preservingE(2)[OF assms(1)]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets N \\<Longrightarrow>\n  emeasure M (f -` ?A \\<inter> space M) = emeasure N ?A\n\ngoal (1 subgoal):\n 1. emeasure M (f -` B \\<inter> space M) = emeasure N B", "by simp"], ["proof (state)\nthis:\n  emeasure M A = emeasure N B\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "then"], ["proof (chain)\npicking this:\n  emeasure M A = emeasure N B", "have \"emeasure M A = emeasure P C\""], ["proof (prove)\nusing this:\n  emeasure M A = emeasure N B\n\ngoal (1 subgoal):\n 1. emeasure M A = emeasure P C", "using *"], ["proof (prove)\nusing this:\n  emeasure M A = emeasure N B\n  emeasure N B = emeasure P C\n\ngoal (1 subgoal):\n 1. emeasure M A = emeasure P C", "by simp"], ["proof (state)\nthis:\n  emeasure M A = emeasure P C\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "moreover"], ["proof (state)\nthis:\n  emeasure M A = emeasure P C\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "have \"A = (\\<lambda>x. g(f x))-`C \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = (\\<lambda>x. g (f x)) -` C \\<inter> space M", "by (auto simp add: A_def B_def) (meson f measurable_space)"], ["proof (state)\nthis:\n  A = (\\<lambda>x. g (f x)) -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets P \\<Longrightarrow>\n       emeasure M ((\\<lambda>x. g (f x)) -` A \\<inter> space M) =\n       emeasure P A", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M A = emeasure P C\n  A = (\\<lambda>x. g (f x)) -` C \\<inter> space M", "show \"emeasure M ((\\<lambda>x. g(f x))-`C \\<inter> space M) = emeasure P C\""], ["proof (prove)\nusing this:\n  emeasure M A = emeasure P C\n  A = (\\<lambda>x. g (f x)) -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M ((\\<lambda>x. g (f x)) -` C \\<inter> space M) = emeasure P C", "by simp"], ["proof (state)\nthis:\n  emeasure M ((\\<lambda>x. g (f x)) -` C \\<inter> space M) = emeasure P C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma measure_preserving_comp:\n  assumes \"f \\<in> measure_preserving M N\"\n          \"g \\<in> measure_preserving N P\"\n  shows \"g o f \\<in> measure_preserving M P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ> f \\<in> measure_preserving M P", "unfolding o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. g (f x)) \\<in> measure_preserving M P", "using measure_preserving_composition assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f \\<in> measure_preserving ?M ?N;\n   ?g \\<in> measure_preserving ?N ?P\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. ?g (?f x)) \\<in> measure_preserving ?M ?P\n  f \\<in> measure_preserving M N\n  g \\<in> measure_preserving N P\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g (f x)) \\<in> measure_preserving M P", "by blast"], ["", "lemma measure_preserving_total_measure:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"emeasure M (space M) = emeasure N (space N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (space M) = emeasure N (space N)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (space M) = emeasure N (space N)", "have \"f \\<in> measurable M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M N", "by (rule measure_preservingE(1)[OF assms(1)])"], ["proof (state)\nthis:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. emeasure M (space M) = emeasure N (space N)", "then"], ["proof (chain)\npicking this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N", "have \"f-`(space N) \\<inter> space M = space M\""], ["proof (prove)\nusing this:\n  f \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. f -` space N \\<inter> space M = space M", "by (meson Int_absorb1 measurable_space subsetI vimageI)"], ["proof (state)\nthis:\n  f -` space N \\<inter> space M = space M\n\ngoal (1 subgoal):\n 1. emeasure M (space M) = emeasure N (space N)", "then"], ["proof (chain)\npicking this:\n  f -` space N \\<inter> space M = space M", "show \"emeasure M (space M) = emeasure N (space N)\""], ["proof (prove)\nusing this:\n  f -` space N \\<inter> space M = space M\n\ngoal (1 subgoal):\n 1. emeasure M (space M) = emeasure N (space N)", "by (metis (mono_tags, lifting) measure_preservingE(2)[OF assms(1)] sets.top)"], ["proof (state)\nthis:\n  emeasure M (space M) = emeasure N (space N)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma measure_preserving_finite_measure:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"finite_measure M \\<longleftrightarrow> finite_measure N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_measure M = finite_measure N", "using measure_preserving_total_measure[OF assms]"], ["proof (prove)\nusing this:\n  emeasure M (space M) = emeasure N (space N)\n\ngoal (1 subgoal):\n 1. finite_measure M = finite_measure N", "by (metis finite_measure.emeasure_finite finite_measureI infinity_ennreal_def)"], ["", "lemma measure_preserving_prob_space:\n  assumes \"f \\<in> measure_preserving M N\"\n  shows \"prob_space M \\<longleftrightarrow> prob_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space M = prob_space N", "using measure_preserving_total_measure[OF assms]"], ["proof (prove)\nusing this:\n  emeasure M (space M) = emeasure N (space N)\n\ngoal (1 subgoal):\n 1. prob_space M = prob_space N", "by (metis prob_space.emeasure_space_1 prob_spaceI)"], ["", "locale qmpt = sigma_finite_measure +\n  fixes T\n  assumes Tqm: \"T \\<in> quasi_measure_preserving M M\""], ["", "locale mpt = qmpt +\n  assumes Tm: \"T \\<in> measure_preserving M M\""], ["", "locale fmpt = mpt + finite_measure"], ["", "locale pmpt = fmpt + prob_space"], ["", "lemma qmpt_I:\n  assumes \"sigma_finite_measure M\"\n          \"T \\<in> measurable M M\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> ((T-`A \\<inter> space M) \\<in> null_sets M) \\<longleftrightarrow> (A \\<in> null_sets M)\"\n  shows \"qmpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M T", "unfolding qmpt_def qmpt_axioms_def quasi_measure_preserving_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure M \\<and>\n    T \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M M.\n             \\<forall>A\\<in>sets M.\n                (f -` A \\<inter> space M \\<in> null_sets M) =\n                (A \\<in> null_sets M)}", "by (auto simp add: assms)"], ["", "lemma mpt_I:\n  assumes \"sigma_finite_measure M\"\n          \"T \\<in> measurable M M\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M (T-`A \\<inter> space M) = emeasure M A\"\n  shows \"mpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mpt M T", "have *: \"T \\<in> measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> measure_preserving M M", "by (rule measure_preservingI[OF assms(2) assms(3)])"], ["proof (state)\nthis:\n  T \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. mpt M T", "then"], ["proof (chain)\npicking this:\n  T \\<in> measure_preserving M M", "have **: \"T \\<in> quasi_measure_preserving M M\""], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. T \\<in> quasi_measure_preserving M M", "using measure_preserving_is_quasi_measure_preserving"], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n  ?f \\<in> measure_preserving ?M ?N \\<Longrightarrow>\n  ?f \\<in> quasi_measure_preserving ?M ?N\n\ngoal (1 subgoal):\n 1. T \\<in> quasi_measure_preserving M M", "by auto"], ["proof (state)\nthis:\n  T \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. mpt M T", "show \"mpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M T", "unfolding mpt_def qmpt_def qmpt_axioms_def mpt_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (sigma_finite_measure M \\<and>\n     T \\<in> quasi_measure_preserving M M) \\<and>\n    T \\<in> measure_preserving M M", "using * ** assms(1)"], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n  T \\<in> quasi_measure_preserving M M\n  sigma_finite_measure M\n\ngoal (1 subgoal):\n 1. (sigma_finite_measure M \\<and>\n     T \\<in> quasi_measure_preserving M M) \\<and>\n    T \\<in> measure_preserving M M", "by auto"], ["proof (state)\nthis:\n  mpt M T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmpt_I:\n  assumes \"finite_measure M\"\n          \"T \\<in> measurable M M\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M (T-`A \\<inter> space M) = emeasure M A\"\n  shows \"fmpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmpt M T", "have *: \"T \\<in> measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> measure_preserving M M", "by (rule measure_preservingI[OF assms(2) assms(3)])"], ["proof (state)\nthis:\n  T \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. fmpt M T", "then"], ["proof (chain)\npicking this:\n  T \\<in> measure_preserving M M", "have **: \"T \\<in> quasi_measure_preserving M M\""], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. T \\<in> quasi_measure_preserving M M", "using measure_preserving_is_quasi_measure_preserving"], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n  ?f \\<in> measure_preserving ?M ?N \\<Longrightarrow>\n  ?f \\<in> quasi_measure_preserving ?M ?N\n\ngoal (1 subgoal):\n 1. T \\<in> quasi_measure_preserving M M", "by auto"], ["proof (state)\nthis:\n  T \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. fmpt M T", "show \"fmpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M T", "unfolding fmpt_def mpt_def qmpt_def mpt_axioms_def qmpt_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((sigma_finite_measure M \\<and>\n      T \\<in> quasi_measure_preserving M M) \\<and>\n     T \\<in> measure_preserving M M) \\<and>\n    finite_measure M", "using * ** assms(1) finite_measure_def"], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n  T \\<in> quasi_measure_preserving M M\n  finite_measure M\n  finite_measure ?M \\<equiv>\n  sigma_finite_measure ?M \\<and> finite_measure_axioms ?M\n\ngoal (1 subgoal):\n 1. ((sigma_finite_measure M \\<and>\n      T \\<in> quasi_measure_preserving M M) \\<and>\n     T \\<in> measure_preserving M M) \\<and>\n    finite_measure M", "by auto"], ["proof (state)\nthis:\n  fmpt M T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pmpt_I:\n  assumes \"prob_space M\"\n          \"T \\<in> measurable M M\"\n          \"\\<And>A. A \\<in> sets M \\<Longrightarrow> emeasure M (T-`A \\<inter> space M) = emeasure M A\"\n  shows \"pmpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmpt M T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pmpt M T", "have *: \"T \\<in> measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> measure_preserving M M", "by (rule measure_preservingI[OF assms(2) assms(3)])"], ["proof (state)\nthis:\n  T \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. pmpt M T", "then"], ["proof (chain)\npicking this:\n  T \\<in> measure_preserving M M", "have **: \"T \\<in> quasi_measure_preserving M M\""], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. T \\<in> quasi_measure_preserving M M", "using measure_preserving_is_quasi_measure_preserving"], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n  ?f \\<in> measure_preserving ?M ?N \\<Longrightarrow>\n  ?f \\<in> quasi_measure_preserving ?M ?N\n\ngoal (1 subgoal):\n 1. T \\<in> quasi_measure_preserving M M", "by auto"], ["proof (state)\nthis:\n  T \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. pmpt M T", "show \"pmpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmpt M T", "unfolding pmpt_def fmpt_def mpt_def qmpt_def mpt_axioms_def qmpt_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((sigma_finite_measure M \\<and>\n       T \\<in> quasi_measure_preserving M M) \\<and>\n      T \\<in> measure_preserving M M) \\<and>\n     finite_measure M) \\<and>\n    prob_space M", "using * ** assms(1) prob_space_imp_sigma_finite prob_space.finite_measure"], ["proof (prove)\nusing this:\n  T \\<in> measure_preserving M M\n  T \\<in> quasi_measure_preserving M M\n  prob_space M\n  prob_space ?M \\<Longrightarrow> sigma_finite_measure ?M\n  prob_space ?M \\<Longrightarrow> finite_measure ?M\n\ngoal (1 subgoal):\n 1. (((sigma_finite_measure M \\<and>\n       T \\<in> quasi_measure_preserving M M) \\<and>\n      T \\<in> measure_preserving M M) \\<and>\n     finite_measure M) \\<and>\n    prob_space M", "by auto"], ["proof (state)\nthis:\n  pmpt M T\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Examples\\<close>"], ["", "lemma fmpt_null_space:\n  assumes \"emeasure M (space M) = 0\"\n          \"T \\<in> measurable M M\"\n  shows \"fmpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M T", "apply (rule fmpt_I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite_measure M\n 2. T \\<in> M \\<rightarrow>\\<^sub>M M\n 3. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       emeasure M (T -` A \\<inter> space M) = emeasure M A", "apply (auto simp add: assms finite_measureI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       emeasure M (T -` A \\<inter> space M) = emeasure M A", "apply (metis assms emeasure_eq_0 measurable_sets sets.sets_into_space sets.top)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fmpt_empty_space:\n  assumes \"space M = {}\"\n  shows \"fmpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M T", "by (rule fmpt_null_space, auto simp add: assms measurable_empty_iff)"], ["", "text \\<open>Translations are measure-preserving\\<close>"], ["", "lemma mpt_translation:\n  fixes c :: \"'a::euclidean_space\"\n  shows \"mpt lborel (\\<lambda>x. x + c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt lborel (\\<lambda>x. x + c)", "proof (rule mpt_I, auto simp add: lborel.sigma_finite_measure_axioms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "fix A::\"'a set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "assume [measurable]: \"A \\<in> sets borel\""], ["proof (state)\nthis:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "have \"emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel ((((+))c)-`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure lborel ((\\<lambda>x. x + c) -` A) =\n    emeasure lborel ((+) c -` A)", "by (meson add.commute)"], ["proof (state)\nthis:\n  emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel ((+) c -` A)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "also"], ["proof (state)\nthis:\n  emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel ((+) c -` A)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "have \"... = emeasure lborel ((((+))c)-`A \\<inter> space lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure lborel ((+) c -` A) =\n    emeasure lborel ((+) c -` A \\<inter> space lborel)", "by simp"], ["proof (state)\nthis:\n  emeasure lborel ((+) c -` A) =\n  emeasure lborel ((+) c -` A \\<inter> space lborel)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "also"], ["proof (state)\nthis:\n  emeasure lborel ((+) c -` A) =\n  emeasure lborel ((+) c -` A \\<inter> space lborel)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "have \"... = emeasure (distr lborel borel ((+) c)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure lborel ((+) c -` A \\<inter> space lborel) =\n    emeasure (distr lborel borel ((+) c)) A", "by (rule emeasure_distr[symmetric], auto)"], ["proof (state)\nthis:\n  emeasure lborel ((+) c -` A \\<inter> space lborel) =\n  emeasure (distr lborel borel ((+) c)) A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "also"], ["proof (state)\nthis:\n  emeasure lborel ((+) c -` A \\<inter> space lborel) =\n  emeasure (distr lborel borel ((+) c)) A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "have \"... = emeasure lborel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (distr lborel borel ((+) c)) A = emeasure lborel A", "using lborel_distr_plus[of c]"], ["proof (prove)\nusing this:\n  distr lborel borel ((+) c) = lborel\n\ngoal (1 subgoal):\n 1. emeasure (distr lborel borel ((+) c)) A = emeasure lborel A", "by simp"], ["proof (state)\nthis:\n  emeasure (distr lborel borel ((+) c)) A = emeasure lborel A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "finally"], ["proof (chain)\npicking this:\n  emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "show \"emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A\""], ["proof (prove)\nusing this:\n  emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A\n\ngoal (1 subgoal):\n 1. emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A", "by simp"], ["proof (state)\nthis:\n  emeasure lborel ((\\<lambda>x. x + c) -` A) = emeasure lborel A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Skew products are fibered maps of the form $(x,y)\\mapsto (Tx, U(x,y))$. If the base map\nand the fiber maps all are measure preserving, so is the skew product.\\<close>"], ["", "lemma pair_measure_null_product:\n  assumes \"emeasure M (space M) = 0\"\n  shows \"emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0", "have \"(\\<integral>\\<^sup>+x. (\\<integral>\\<^sup>+y. indicator X (x,y) \\<partial>N) \\<partial>M) = 0\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n        \\<partial>N\n                       \\<partial>M =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n        \\<partial>N\n                       \\<partial>M =\n    0", "have \"(\\<integral>\\<^sup>+x. (\\<integral>\\<^sup>+y. indicator X (x,y) \\<partial>N) \\<partial>M) = (\\<integral>\\<^sup>+x. 0 \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n        \\<partial>N\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. 0 \\<partial>M", "by (intro nn_integral_cong_AE emeasure_0_AE[OF assms])"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. 0 \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n        \\<partial>N\n                       \\<partial>M =\n    0", "then"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. 0 \\<partial>M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. 0 \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n        \\<partial>N\n                       \\<partial>M =\n    0", "by auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator ?X (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  0\n\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0", "then"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator ?X (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  0", "have \"M \\<Otimes>\\<^sub>M N = measure_of (space M \\<times> space N)\n      {a \\<times> b | a b. a \\<in> sets M \\<and> b \\<in> sets N}\n      (\\<lambda>X. 0)\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator ?X (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  0\n\ngoal (1 subgoal):\n 1. M \\<Otimes>\\<^sub>M N =\n    sigma (space M \\<times> space N)\n     {a \\<times> b |a b. a \\<in> sets M \\<and> b \\<in> sets N}", "unfolding pair_measure_def"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator ?X (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  0\n\ngoal (1 subgoal):\n 1. measure_of (space M \\<times> space N)\n     {a \\<times> b |a b. a \\<in> sets M \\<and> b \\<in> sets N}\n     (\\<lambda>X.\n         \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator X (x, y)\n             \\<partial>N\n                            \\<partial>M) =\n    sigma (space M \\<times> space N)\n     {a \\<times> b |a b. a \\<in> sets M \\<and> b \\<in> sets N}", "by auto"], ["proof (state)\nthis:\n  M \\<Otimes>\\<^sub>M N =\n  sigma (space M \\<times> space N)\n   {a \\<times> b |a b. a \\<in> sets M \\<and> b \\<in> sets N}\n\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0", "then"], ["proof (chain)\npicking this:\n  M \\<Otimes>\\<^sub>M N =\n  sigma (space M \\<times> space N)\n   {a \\<times> b |a b. a \\<in> sets M \\<and> b \\<in> sets N}", "show ?thesis"], ["proof (prove)\nusing this:\n  M \\<Otimes>\\<^sub>M N =\n  sigma (space M \\<times> space N)\n   {a \\<times> b |a b. a \\<in> sets M \\<and> b \\<in> sets N}\n\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0", "by (simp add: emeasure_sigma)"], ["proof (state)\nthis:\n  emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mpt_skew_product:\n  assumes \"mpt M T\"\n          \"AE x in M. mpt N (U x)\"\n    and [measurable]: \"(\\<lambda>(x,y). U x y) \\<in> measurable (M \\<Otimes>\\<^sub>M N) N\"\n  shows \"mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x,y). (T x, U x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))\n 2. \\<not> ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "assume H: \"emeasure M (space M) = 0\""], ["proof (state)\nthis:\n  emeasure M (space M) = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))\n 2. \\<not> ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "then"], ["proof (chain)\npicking this:\n  emeasure M (space M) = 0", "have *: \"emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0\""], ["proof (prove)\nusing this:\n  emeasure M (space M) = 0\n\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0", "using pair_measure_null_product"], ["proof (prove)\nusing this:\n  emeasure M (space M) = 0\n  emeasure ?M (space ?M) = 0 \\<Longrightarrow>\n  emeasure (?M \\<Otimes>\\<^sub>M ?N) (space (?M \\<Otimes>\\<^sub>M ?N)) = 0\n\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0", "by auto"], ["proof (state)\nthis:\n  emeasure (M \\<Otimes>\\<^sub>M N) (space (M \\<Otimes>\\<^sub>M N)) = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))\n 2. \\<not> ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "have [measurable]: \"T \\<in> measurable M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M", "using assms(1)"], ["proof (prove)\nusing this:\n  mpt M T\n\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M", "unfolding mpt_def qmpt_def qmpt_axioms_def quasi_measure_preserving_def"], ["proof (prove)\nusing this:\n  (sigma_finite_measure M \\<and>\n   T \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M M.\n            \\<forall>A\\<in>sets M.\n               (f -` A \\<inter> space M \\<in> null_sets M) =\n               (A \\<in> null_sets M)}) \\<and>\n  mpt_axioms M T\n\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M", "by auto"], ["proof (state)\nthis:\n  T \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))\n 2. \\<not> ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "then"], ["proof (chain)\npicking this:\n  T \\<in> M \\<rightarrow>\\<^sub>M M", "have [measurable]: \"(\\<lambda>(x, y). (T x, U x y)) \\<in> measurable (M \\<Otimes>\\<^sub>M N) (M \\<Otimes>\\<^sub>M N)\""], ["proof (prove)\nusing this:\n  T \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). (T x, U x y))\n  \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))\n 2. \\<not> ?P \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "with fmpt_null_space[OF *]"], ["proof (chain)\npicking this:\n  ?T \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M\n           M \\<Otimes>\\<^sub>M N \\<Longrightarrow>\n  fmpt (M \\<Otimes>\\<^sub>M N) ?T\n  (\\<lambda>(x, y). (T x, U x y))\n  \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N", "show ?thesis"], ["proof (prove)\nusing this:\n  ?T \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M\n           M \\<Otimes>\\<^sub>M N \\<Longrightarrow>\n  fmpt (M \\<Otimes>\\<^sub>M N) ?T\n  (\\<lambda>(x, y). (T x, U x y))\n  \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "by (simp add: fmpt.axioms(1))"], ["proof (state)\nthis:\n  mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))\n\ngoal (1 subgoal):\n 1. emeasure M (space M) \\<noteq> 0 \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (space M) \\<noteq> 0 \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "assume \"\\<not>(emeasure M (space M) = 0)\""], ["proof (state)\nthis:\n  emeasure M (space M) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. emeasure M (space M) \\<noteq> 0 \\<Longrightarrow>\n    mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))", "proof (rule mpt_I)"], ["proof (state)\ngoal (3 subgoals):\n 1. sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\n 2. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 3. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have \"sigma_finite_measure M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure M", "using assms(1)"], ["proof (prove)\nusing this:\n  mpt M T\n\ngoal (1 subgoal):\n 1. sigma_finite_measure M", "unfolding mpt_def qmpt_def"], ["proof (prove)\nusing this:\n  (sigma_finite_measure M \\<and> qmpt_axioms M T) \\<and> mpt_axioms M T\n\ngoal (1 subgoal):\n 1. sigma_finite_measure M", "by auto"], ["proof (state)\nthis:\n  sigma_finite_measure M\n\ngoal (3 subgoals):\n 1. sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\n 2. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 3. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "then"], ["proof (chain)\npicking this:\n  sigma_finite_measure M", "interpret M: sigma_finite_measure M"], ["proof (prove)\nusing this:\n  sigma_finite_measure M\n\ngoal (1 subgoal):\n 1. sigma_finite_measure M", "."], ["proof (state)\ngoal (3 subgoals):\n 1. sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\n 2. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 3. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have \"\\<exists>p. \\<not> almost_everywhere M p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. \\<not> almost_everywhere M p", "by (metis (lifting) AE_E \\<open>emeasure M (space M) \\<noteq> 0\\<close> emeasure_eq_AE emeasure_notin_sets)"], ["proof (state)\nthis:\n  \\<exists>p. \\<not> almost_everywhere M p\n\ngoal (3 subgoals):\n 1. sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\n 2. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 3. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "then"], ["proof (chain)\npicking this:\n  \\<exists>p. \\<not> almost_everywhere M p", "have \"\\<exists>x. mpt N (U x)\""], ["proof (prove)\nusing this:\n  \\<exists>p. \\<not> almost_everywhere M p\n\ngoal (1 subgoal):\n 1. \\<exists>x. mpt N (U x)", "using assms(2) \\<open>\\<not>(emeasure M (space M) = 0)\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>p. \\<not> almost_everywhere M p\n  AE x in M. mpt N (U x)\n  emeasure M (space M) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. mpt N (U x)", "by (metis (full_types) \\<open>AE x in M. mpt N (U x)\\<close> eventually_mono)"], ["proof (state)\nthis:\n  \\<exists>x. mpt N (U x)\n\ngoal (3 subgoals):\n 1. sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\n 2. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 3. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. mpt N (U x)", "have \"sigma_finite_measure N\""], ["proof (prove)\nusing this:\n  \\<exists>x. mpt N (U x)\n\ngoal (1 subgoal):\n 1. sigma_finite_measure N", "unfolding mpt_def qmpt_def"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     (sigma_finite_measure N \\<and> qmpt_axioms N (U x)) \\<and>\n     mpt_axioms N (U x)\n\ngoal (1 subgoal):\n 1. sigma_finite_measure N", "by auto"], ["proof (state)\nthis:\n  sigma_finite_measure N\n\ngoal (3 subgoals):\n 1. sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\n 2. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 3. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "then"], ["proof (chain)\npicking this:\n  sigma_finite_measure N", "interpret N: sigma_finite_measure N"], ["proof (prove)\nusing this:\n  sigma_finite_measure N\n\ngoal (1 subgoal):\n 1. sigma_finite_measure N", "."], ["proof (state)\ngoal (3 subgoals):\n 1. sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\n 2. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 3. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "show \"sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure (M \\<Otimes>\\<^sub>M N)", "by (rule sigma_finite_pair_measure) standard+"], ["proof (state)\nthis:\n  sigma_finite_measure (M \\<Otimes>\\<^sub>M N)\n\ngoal (2 subgoals):\n 1. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 2. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have [measurable]: \"T \\<in> measurable M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M", "using assms(1)"], ["proof (prove)\nusing this:\n  mpt M T\n\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M", "unfolding mpt_def qmpt_def qmpt_axioms_def quasi_measure_preserving_def"], ["proof (prove)\nusing this:\n  (sigma_finite_measure M \\<and>\n   T \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M M.\n            \\<forall>A\\<in>sets M.\n               (f -` A \\<inter> space M \\<in> null_sets M) =\n               (A \\<in> null_sets M)}) \\<and>\n  mpt_axioms M T\n\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M", "by auto"], ["proof (state)\nthis:\n  T \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (2 subgoals):\n 1. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n 2. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "show [measurable]: \"(\\<lambda>(x, y). (T x, U x y)) \\<in> measurable (M \\<Otimes>\\<^sub>M N) (M \\<Otimes>\\<^sub>M N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). (T x, U x y))\n    \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). (T x, U x y))\n  \\<in> M \\<Otimes>\\<^sub>M N \\<rightarrow>\\<^sub>M M \\<Otimes>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have \"T \\<in> measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> measure_preserving M M", "using assms(1)"], ["proof (prove)\nusing this:\n  mpt M T\n\ngoal (1 subgoal):\n 1. T \\<in> measure_preserving M M", "by (simp add: mpt.Tm)"], ["proof (state)\nthis:\n  T \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "assume [measurable]: \"A \\<in> sets (M \\<Otimes>\\<^sub>M N)\""], ["proof (state)\nthis:\n  A \\<in> sets (M \\<Otimes>\\<^sub>M N)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "then"], ["proof (chain)\npicking this:\n  A \\<in> sets (M \\<Otimes>\\<^sub>M N)", "have [measurable]: \"(\\<lambda> (x,y). (indicator A (x,y))::ennreal) \\<in> borel_measurable (M \\<Otimes>\\<^sub>M N)\""], ["proof (prove)\nusing this:\n  A \\<in> sets (M \\<Otimes>\\<^sub>M N)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). indicator A (x, y))\n    \\<in> borel_measurable (M \\<Otimes>\\<^sub>M N)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). indicator A (x, y))\n  \\<in> borel_measurable (M \\<Otimes>\\<^sub>M N)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>(x, y). indicator A (x, y))\n  \\<in> borel_measurable (M \\<Otimes>\\<^sub>M N)", "have [measurable]: \"(\\<lambda>x. \\<integral>\\<^sup>+ y. indicator A (x, y) \\<partial>N) \\<in> borel_measurable M\""], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). indicator A (x, y))\n  \\<in> borel_measurable (M \\<Otimes>\\<^sub>M N)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<integral>\\<^sup>+ y. indicator A (x, y) \\<partial>N)\n    \\<in> borel_measurable M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<integral>\\<^sup>+ y. indicator A (x, y) \\<partial>N)\n  \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "define B where \"B = (\\<lambda>(x, y). (T x, U x y)) -` A \\<inter> space (M \\<Otimes>\\<^sub>M N)\""], ["proof (state)\nthis:\n  B =\n  (\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n  space (M \\<Otimes>\\<^sub>M N)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "then"], ["proof (chain)\npicking this:\n  B =\n  (\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n  space (M \\<Otimes>\\<^sub>M N)", "have [measurable]: \"B \\<in> sets (M \\<Otimes>\\<^sub>M N)\""], ["proof (prove)\nusing this:\n  B =\n  (\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n  space (M \\<Otimes>\\<^sub>M N)\n\ngoal (1 subgoal):\n 1. B \\<in> sets (M \\<Otimes>\\<^sub>M N)", "by auto"], ["proof (state)\nthis:\n  B \\<in> sets (M \\<Otimes>\\<^sub>M N)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have \"(\\<integral>\\<^sup>+y. indicator B (x,y) \\<partial>N) = (\\<integral>\\<^sup>+y. indicator A (T x, y) \\<partial>N)\" if \"x \\<in> space M\" \"mpt N (U x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "have \"T x \\<in> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T x \\<in> space M", "by (meson \\<open>T \\<in> measurable M M\\<close> \\<open>x \\<in> space M\\<close> measurable_space)"], ["proof (state)\nthis:\n  T x \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "then"], ["proof (chain)\npicking this:\n  T x \\<in> space M", "have 1: \"(\\<lambda>y. (indicator A (T x, y))::ennreal) \\<in> borel_measurable N\""], ["proof (prove)\nusing this:\n  T x \\<in> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. indicator A (T x, y)) \\<in> borel_measurable N", "using \\<open>A \\<in> sets (M \\<Otimes>\\<^sub>M N)\\<close>"], ["proof (prove)\nusing this:\n  T x \\<in> space M\n  A \\<in> sets (M \\<Otimes>\\<^sub>M N)\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. indicator A (T x, y)) \\<in> borel_measurable N", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>y. indicator A (T x, y)) \\<in> borel_measurable N\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "have 2: \"\\<And>y. ((indicator B (x, y))::ennreal) = indicator A (T x, U x y) * indicator (space M) x * indicator (space N) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       indicator B (x, y) =\n       indicator A (T x, U x y) * indicator (space M) x *\n       indicator (space N) y", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       indicator\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N))\n        (x, y) =\n       indicator A (T x, U x y) * indicator (space M) x *\n       indicator (space N) y", "by (simp add: indicator_def space_pair_measure)"], ["proof (state)\nthis:\n  indicator B (x, ?y) =\n  indicator A (T x, U x ?y) * indicator (space M) x * indicator (space N) ?y\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "have 3: \"U x \\<in> measure_preserving N N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U x \\<in> measure_preserving N N", "using assms(2) that(2)"], ["proof (prove)\nusing this:\n  AE x in M. mpt N (U x)\n  mpt N (U x)\n\ngoal (1 subgoal):\n 1. U x \\<in> measure_preserving N N", "by (simp add: mpt.Tm)"], ["proof (state)\nthis:\n  U x \\<in> measure_preserving N N\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "have \"(\\<integral>\\<^sup>+y. indicator B (x,y) \\<partial>N) = (\\<integral>\\<^sup>+y. indicator A (T x, U x y) \\<partial>N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, U x y) \\<partial>N", "using 2"], ["proof (prove)\nusing this:\n  indicator B (x, ?y) =\n  indicator A (T x, U x ?y) * indicator (space M) x * indicator (space N) ?y\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, U x y) \\<partial>N", "by (intro nn_integral_cong_simp) (auto simp add: indicator_def \\<open>x \\<in> space M\\<close>)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n  \\<integral>\\<^sup>+ y. indicator A (T x, U x y) \\<partial>N\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n  \\<integral>\\<^sup>+ y. indicator A (T x, U x y) \\<partial>N\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "have \"... = (\\<integral>\\<^sup>+y. indicator A (T x, y) \\<partial>N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator A (T x, U x y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "by (rule measure_preserving_preserves_nn_integral[OF 3, symmetric], metis 1)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ y. indicator A (T x, U x y) \\<partial>N =\n  \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n  \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n  \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n    \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n  \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> space M; mpt N (U ?x)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ y. indicator B (?x, y) \\<partial>N =\n                    \\<integral>\\<^sup>+ y. indicator A (T ?x, y) \\<partial>N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> space M; mpt N (U ?x)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ y. indicator B (?x, y) \\<partial>N =\n                    \\<integral>\\<^sup>+ y. indicator A (T ?x, y) \\<partial>N", "have *: \"AE x in M. (\\<integral>\\<^sup>+y. indicator B (x,y) \\<partial>N) = (\\<integral>\\<^sup>+y. indicator A (T x, y) \\<partial>N)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> space M; mpt N (U ?x)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ y. indicator B (?x, y) \\<partial>N =\n                    \\<integral>\\<^sup>+ y. indicator A (T ?x, y) \\<partial>N\n\ngoal (1 subgoal):\n 1. AE x in M. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n               \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> space M; mpt N (U ?x)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ y. indicator B (?x, y) \\<partial>N =\n                    \\<integral>\\<^sup>+ y. indicator A (T ?x, y) \\<partial>N\n  AE x in M. mpt N (U x)\n\ngoal (1 subgoal):\n 1. AE x in M. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n               \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N", "by auto"], ["proof (state)\nthis:\n  AE x in M. \\<integral>\\<^sup>+ y. indicator B (x, y) \\<partial>N =\n             \\<integral>\\<^sup>+ y. indicator A (T x, y) \\<partial>N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have \"emeasure (M \\<Otimes>\\<^sub>M N) B = (\\<integral>\\<^sup>+ x. (\\<integral>\\<^sup>+y. indicator B (x,y) \\<partial>N) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) B =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator B (x, y)\n        \\<partial>N\n                       \\<partial>M", "using \\<open>B \\<in> sets (M \\<Otimes>\\<^sub>M N)\\<close> \\<open>sigma_finite_measure N\\<close> sigma_finite_measure.emeasure_pair_measure"], ["proof (prove)\nusing this:\n  B \\<in> sets (M \\<Otimes>\\<^sub>M N)\n  sigma_finite_measure N\n  \\<lbrakk>sigma_finite_measure ?M;\n   ?X \\<in> sets (?N \\<Otimes>\\<^sub>M ?M)\\<rbrakk>\n  \\<Longrightarrow> emeasure (?N \\<Otimes>\\<^sub>M ?M) ?X =\n                    \\<integral>\\<^sup>+ x.\n   \\<integral>\\<^sup>+ y. indicator ?X (x, y) \\<partial>?M\n \\<partial>?N\n\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N) B =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator B (x, y)\n        \\<partial>N\n                       \\<partial>M", "by fastforce"], ["proof (state)\nthis:\n  emeasure (M \\<Otimes>\\<^sub>M N) B =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator B (x, y)\n      \\<partial>N\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "also"], ["proof (state)\nthis:\n  emeasure (M \\<Otimes>\\<^sub>M N) B =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator B (x, y)\n      \\<partial>N\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have \"... = (\\<integral>\\<^sup>+ x. (\\<integral>\\<^sup>+y. indicator A (T x, y) \\<partial>N) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator B (x, y)\n        \\<partial>N\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (T x, y)\n        \\<partial>N\n                       \\<partial>M", "by (intro nn_integral_cong_AE *)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator B (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (T x, y)\n      \\<partial>N\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator B (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (T x, y)\n      \\<partial>N\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have \"... = (\\<integral>\\<^sup>+ x. (\\<integral>\\<^sup>+y. indicator A (x, y) \\<partial>N) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (T x, y)\n        \\<partial>N\n                       \\<partial>M =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (x, y)\n        \\<partial>N\n                       \\<partial>M", "by (rule measure_preserving_preserves_nn_integral[OF \\<open>T \\<in> measure_preserving M M\\<close>, symmetric]) auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (T x, y)\n      \\<partial>N\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (x, y)\n      \\<partial>N\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (T x, y)\n      \\<partial>N\n                     \\<partial>M =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (x, y)\n      \\<partial>N\n                     \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "have \"... = emeasure (M \\<Otimes>\\<^sub>M N) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (x, y)\n        \\<partial>N\n                       \\<partial>M =\n    emeasure (M \\<Otimes>\\<^sub>M N) A", "by (simp add: \\<open>sigma_finite_measure N\\<close> sigma_finite_measure.emeasure_pair_measure)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ y. indicator A (x, y)\n      \\<partial>N\n                     \\<partial>M =\n  emeasure (M \\<Otimes>\\<^sub>M N) A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets (M \\<Otimes>\\<^sub>M N) \\<Longrightarrow>\n       emeasure (M \\<Otimes>\\<^sub>M N)\n        ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n         space (M \\<Otimes>\\<^sub>M N)) =\n       emeasure (M \\<Otimes>\\<^sub>M N) A", "finally"], ["proof (chain)\npicking this:\n  emeasure (M \\<Otimes>\\<^sub>M N) B = emeasure (M \\<Otimes>\\<^sub>M N) A", "show \"emeasure (M \\<Otimes>\\<^sub>M N) ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter> space (M \\<Otimes>\\<^sub>M N)) = emeasure (M \\<Otimes>\\<^sub>M N) A\""], ["proof (prove)\nusing this:\n  emeasure (M \\<Otimes>\\<^sub>M N) B = emeasure (M \\<Otimes>\\<^sub>M N) A\n\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N)\n     ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n      space (M \\<Otimes>\\<^sub>M N)) =\n    emeasure (M \\<Otimes>\\<^sub>M N) A", "unfolding B_def"], ["proof (prove)\nusing this:\n  emeasure (M \\<Otimes>\\<^sub>M N)\n   ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n    space (M \\<Otimes>\\<^sub>M N)) =\n  emeasure (M \\<Otimes>\\<^sub>M N) A\n\ngoal (1 subgoal):\n 1. emeasure (M \\<Otimes>\\<^sub>M N)\n     ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n      space (M \\<Otimes>\\<^sub>M N)) =\n    emeasure (M \\<Otimes>\\<^sub>M N) A", "by simp"], ["proof (state)\nthis:\n  emeasure (M \\<Otimes>\\<^sub>M N)\n   ((\\<lambda>(x, y). (T x, U x y)) -` A \\<inter>\n    space (M \\<Otimes>\\<^sub>M N)) =\n  emeasure (M \\<Otimes>\\<^sub>M N) A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mpt (M \\<Otimes>\\<^sub>M N) (\\<lambda>(x, y). (T x, U x y))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mpt_skew_product_real:\n  fixes f::\"'a \\<Rightarrow> 'b::euclidean_space\"\n  assumes \"mpt M T\" and [measurable]: \"f \\<in> borel_measurable M\"\n  shows \"mpt (M \\<Otimes>\\<^sub>M lborel) (\\<lambda>(x,y). (T x, y + f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt (M \\<Otimes>\\<^sub>M lborel) (\\<lambda>(x, y). (T x, y + f x))", "by (rule mpt_skew_product, auto simp add: mpt_translation assms(1))"], ["", "subsection \\<open>Preimages restricted to $space M$\\<close>"], ["", "context qmpt begin"], ["", "text \\<open>One is all the time lead to take the preimages of sets, and restrict them to\n\\verb+space M+ where the dynamics is living. We introduce a shortcut for this notion.\\<close>"], ["", "definition vimage_restr :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> 'a set \\<Rightarrow> 'a set\" (infixr \"--`\" 90)\nwhere\n  \"f --` A \\<equiv> f-` (A \\<inter> space M) \\<inter> space M\""], ["", "lemma vrestr_eq [simp]:\n  \"a \\<in> f--` A \\<longleftrightarrow> a \\<in> space M \\<and> f a \\<in> A \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> f --` A) =\n    (a \\<in> space M \\<and> f a \\<in> A \\<inter> space M)", "unfolding vimage_restr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> f -` (A \\<inter> space M) \\<inter> space M) =\n    (a \\<in> space M \\<and> f a \\<in> A \\<inter> space M)", "by auto"], ["", "lemma vrestr_intersec [simp]:\n  \"f--` (A \\<inter> B) = (f--`A) \\<inter> (f--` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` (A \\<inter> B) = f --` A \\<inter> f --` B", "using vimage_restr_def"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. f --` (A \\<inter> B) = f --` A \\<inter> f --` B", "by auto"], ["", "lemma vrestr_union [simp]:\n  \"f--` (A \\<union> B) = f--`A \\<union> f--`B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` (A \\<union> B) = f --` A \\<union> f --` B", "using vimage_restr_def"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. f --` (A \\<union> B) = f --` A \\<union> f --` B", "by auto"], ["", "lemma vrestr_difference [simp]:\n  \"f--`(A-B) = f--`A - f--`B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` (A - B) = f --` A - f --` B", "using vimage_restr_def"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. f --` (A - B) = f --` A - f --` B", "by auto"], ["", "lemma vrestr_inclusion:\n  \"A \\<subseteq> B \\<Longrightarrow> f--`A \\<subseteq> f--`B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow> f --` A \\<subseteq> f --` B", "using vimage_restr_def"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow> f --` A \\<subseteq> f --` B", "by auto"], ["", "lemma vrestr_Union [simp]:\n  \"f --` (\\<Union>A) = (\\<Union>X\\<in>A. f --` X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` \\<Union> A = \\<Union> ((--`) f ` A)", "using vimage_restr_def"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. f --` \\<Union> A = \\<Union> ((--`) f ` A)", "by auto"], ["", "lemma vrestr_UN [simp]:\n  \"f --` (\\<Union>x\\<in>A. B x) = (\\<Union>x\\<in>A. f --` B x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` \\<Union> (B ` A) = (\\<Union>x\\<in>A. f --` B x)", "using vimage_restr_def"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. f --` \\<Union> (B ` A) = (\\<Union>x\\<in>A. f --` B x)", "by auto"], ["", "lemma vrestr_Inter [simp]:\n  assumes \"A \\<noteq> {}\"\n  shows \"f --` (\\<Inter>A) = (\\<Inter>X\\<in>A. f --` X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` \\<Inter> A = \\<Inter> ((--`) f ` A)", "using vimage_restr_def assms"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. f --` \\<Inter> A = \\<Inter> ((--`) f ` A)", "by auto"], ["", "lemma vrestr_INT [simp]:\n  assumes \"A \\<noteq> {}\"\n  shows \"f --` (\\<Inter>x\\<in>A. B x) = (\\<Inter>x\\<in>A. f --` B x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` \\<Inter> (B ` A) = (\\<Inter>x\\<in>A. f --` B x)", "using vimage_restr_def assms"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. f --` \\<Inter> (B ` A) = (\\<Inter>x\\<in>A. f --` B x)", "by auto"], ["", "lemma vrestr_empty [simp]:\n  \"f--`{} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` {} = {}", "using vimage_restr_def"], ["proof (prove)\nusing this:\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. f --` {} = {}", "by auto"], ["", "lemma vrestr_sym_diff [simp]:\n  \"f--`(A \\<Delta> B) = (f--`A) \\<Delta> (f--`B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f --` (A \\<Delta> B) = f --` A \\<Delta> f --` B", "by auto"], ["", "lemma vrestr_image:\n  assumes \"x \\<in> f--`A\"\n  shows \"x \\<in> space M\" \"f x \\<in> space M\" \"f x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> space M &&& f x \\<in> space M &&& f x \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> f --` A\n\ngoal (1 subgoal):\n 1. x \\<in> space M &&& f x \\<in> space M &&& f x \\<in> A", "unfolding vimage_restr_def"], ["proof (prove)\nusing this:\n  x \\<in> f -` (A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. x \\<in> space M &&& f x \\<in> space M &&& f x \\<in> A", "by auto"], ["", "lemma vrestr_intersec_in_space:\n  assumes \"A \\<in> sets M\" \"B \\<in> sets M\"\n  shows \"A \\<inter> f--`B = A \\<inter> f-`B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> f --` B = A \\<inter> f -` B", "unfolding vimage_restr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> (f -` (B \\<inter> space M) \\<inter> space M) =\n    A \\<inter> f -` B", "using assms sets.sets_into_space"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  B \\<in> sets M\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. A \\<inter> (f -` (B \\<inter> space M) \\<inter> space M) =\n    A \\<inter> f -` B", "by auto"], ["", "lemma vrestr_compose:\n  assumes \"g \\<in> measurable M M\"\n  shows \"(\\<lambda> x. f(g x))--` A = g--` (f--` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "define B where \"B = A \\<inter> space M\""], ["proof (state)\nthis:\n  B = A \\<inter> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "have \"(\\<lambda> x. f(g x))--` A = (\\<lambda> x. f(g x)) -` B \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A =\n    (\\<lambda>x. f (g x)) -` B \\<inter> space M", "using B_def vimage_restr_def"], ["proof (prove)\nusing this:\n  B = A \\<inter> space M\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A =\n    (\\<lambda>x. f (g x)) -` B \\<inter> space M", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. f (g x)) --` A = (\\<lambda>x. f (g x)) -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. f (g x)) --` A = (\\<lambda>x. f (g x)) -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "have \"(\\<lambda> x. f(g x)) -` B \\<inter> space M = g-` (f-` B \\<inter> space M) \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) -` B \\<inter> space M =\n    g -` (f -` B \\<inter> space M) \\<inter> space M", "using measurable_space[OF \\<open>g \\<in> measurable M M\\<close>]"], ["proof (prove)\nusing this:\n  ?x \\<in> space M \\<Longrightarrow> g ?x \\<in> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) -` B \\<inter> space M =\n    g -` (f -` B \\<inter> space M) \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. f (g x)) -` B \\<inter> space M =\n  g -` (f -` B \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. f (g x)) -` B \\<inter> space M =\n  g -` (f -` B \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "have \"g-` (f-` B \\<inter> space M) \\<inter> space M = g--` (f--` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` (f -` B \\<inter> space M) \\<inter> space M = g --` f --` A", "using B_def vimage_restr_def"], ["proof (prove)\nusing this:\n  B = A \\<inter> space M\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. g -` (f -` B \\<inter> space M) \\<inter> space M = g --` f --` A", "by simp"], ["proof (state)\nthis:\n  g -` (f -` B \\<inter> space M) \\<inter> space M = g --` f --` A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f (g x)) --` A = (\\<lambda>x. f (g x)) -` B \\<inter> space M\n  (\\<lambda>x. f (g x)) -` B \\<inter> space M =\n  g -` (f -` B \\<inter> space M) \\<inter> space M\n  g -` (f -` B \\<inter> space M) \\<inter> space M = g --` f --` A", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (g x)) --` A = (\\<lambda>x. f (g x)) -` B \\<inter> space M\n  (\\<lambda>x. f (g x)) -` B \\<inter> space M =\n  g -` (f -` B \\<inter> space M) \\<inter> space M\n  g -` (f -` B \\<inter> space M) \\<inter> space M = g --` f --` A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. f (g x)) --` A = g --` f --` A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vrestr_comp:\n  assumes \"g \\<in> measurable M M\"\n  shows \"(f o g)--` A = g--` (f--` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> g) --` A = g --` f --` A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<circ> g) --` A = g --` f --` A", "have \"f o g = (\\<lambda> x. f(g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ> g = (\\<lambda>x. f (g x))", "by auto"], ["proof (state)\nthis:\n  f \\<circ> g = (\\<lambda>x. f (g x))\n\ngoal (1 subgoal):\n 1. (f \\<circ> g) --` A = g --` f --` A", "then"], ["proof (chain)\npicking this:\n  f \\<circ> g = (\\<lambda>x. f (g x))", "have \"(f o g)--` A = (\\<lambda> x. f(g x))--` A\""], ["proof (prove)\nusing this:\n  f \\<circ> g = (\\<lambda>x. f (g x))\n\ngoal (1 subgoal):\n 1. (f \\<circ> g) --` A = (\\<lambda>x. f (g x)) --` A", "by auto"], ["proof (state)\nthis:\n  (f \\<circ> g) --` A = (\\<lambda>x. f (g x)) --` A\n\ngoal (1 subgoal):\n 1. (f \\<circ> g) --` A = g --` f --` A", "moreover"], ["proof (state)\nthis:\n  (f \\<circ> g) --` A = (\\<lambda>x. f (g x)) --` A\n\ngoal (1 subgoal):\n 1. (f \\<circ> g) --` A = g --` f --` A", "have \"(\\<lambda> x. f(g x))--` A = g--` (f--` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "using vrestr_compose assms"], ["proof (prove)\nusing this:\n  ?g \\<in> M \\<rightarrow>\\<^sub>M M \\<Longrightarrow>\n  (\\<lambda>x. ?f (?g x)) --` ?A = ?g --` ?f --` ?A\n  g \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x)) --` A = g --` f --` A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. f (g x)) --` A = g --` f --` A\n\ngoal (1 subgoal):\n 1. (f \\<circ> g) --` A = g --` f --` A", "ultimately"], ["proof (chain)\npicking this:\n  (f \\<circ> g) --` A = (\\<lambda>x. f (g x)) --` A\n  (\\<lambda>x. f (g x)) --` A = g --` f --` A", "show ?thesis"], ["proof (prove)\nusing this:\n  (f \\<circ> g) --` A = (\\<lambda>x. f (g x)) --` A\n  (\\<lambda>x. f (g x)) --` A = g --` f --` A\n\ngoal (1 subgoal):\n 1. (f \\<circ> g) --` A = g --` f --` A", "by simp"], ["proof (state)\nthis:\n  (f \\<circ> g) --` A = g --` f --` A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vrestr_of_set:\n  assumes \"g \\<in> measurable M M\"\n  shows \"A \\<in> sets M \\<Longrightarrow> g--`A = g-`A \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> sets M \\<Longrightarrow> g --` A = g -` A \\<inter> space M", "by (simp add: vimage_restr_def)"], ["", "lemma vrestr_meas [measurable (raw)]:\n  assumes \"g \\<in> measurable M M\"\n          \"A \\<in> sets M\"\n  shows \"g--`A \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g --` A \\<in> sets M", "using assms vimage_restr_def"], ["proof (prove)\nusing this:\n  g \\<in> M \\<rightarrow>\\<^sub>M M\n  A \\<in> sets M\n  ?f --` ?A \\<equiv> ?f -` (?A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. g --` A \\<in> sets M", "by auto"], ["", "lemma vrestr_same_emeasure_f:\n  assumes \"f \\<in> measure_preserving M M\"\n          \"A \\<in> sets M\"\n  shows \"emeasure M (f--`A) = emeasure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (f --` A) = emeasure M A", "by (metis (mono_tags, lifting) assms measure_preserving_def mem_Collect_eq sets.Int_space_eq2 vimage_restr_def)"], ["", "lemma vrestr_same_measure_f:\n  assumes \"f \\<in> measure_preserving M M\"\n          \"A \\<in> sets M\"\n  shows \"measure M (f--`A) = measure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "have \"measure M (f--`A) = enn2real (emeasure M (f--`A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = enn2real (emeasure M (f --` A))", "by (simp add: Sigma_Algebra.measure_def)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M (f --` A) = enn2real (emeasure M (f --` A))\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "also"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M (f --` A) = enn2real (emeasure M (f --` A))\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "have \"... = enn2real (emeasure M A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (emeasure M (f --` A)) = enn2real (emeasure M A)", "using vrestr_same_emeasure_f[OF assms]"], ["proof (prove)\nusing this:\n  emeasure M (f --` A) = emeasure M A\n\ngoal (1 subgoal):\n 1. enn2real (emeasure M (f --` A)) = enn2real (emeasure M A)", "by simp"], ["proof (state)\nthis:\n  enn2real (emeasure M (f --` A)) = enn2real (emeasure M A)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "also"], ["proof (state)\nthis:\n  enn2real (emeasure M (f --` A)) = enn2real (emeasure M A)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "have \"... = measure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (emeasure M A) = Sigma_Algebra.measure M A", "by (simp add: Sigma_Algebra.measure_def)"], ["proof (state)\nthis:\n  enn2real (emeasure M A) = Sigma_Algebra.measure M A\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "finally"], ["proof (chain)\npicking this:\n  Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "show \"measure M (f--` A) = measure M A\""], ["proof (prove)\nusing this:\n  Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A", "by simp"], ["proof (state)\nthis:\n  Sigma_Algebra.measure M (f --` A) = Sigma_Algebra.measure M A\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Basic properties of qmpt\\<close>"], ["", "lemma T_meas [measurable (raw)]:\n  \"T \\<in> measurable M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M", "by (rule quasi_measure_preservingE(1)[OF Tqm])"], ["", "lemma Tn_quasi_measure_preserving:\n  \"T^^n \\<in> quasi_measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ^^ n \\<in> quasi_measure_preserving M M", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. T ^^ 0 \\<in> quasi_measure_preserving M M\n 2. \\<And>n.\n       T ^^ n \\<in> quasi_measure_preserving M M \\<Longrightarrow>\n       T ^^ Suc n \\<in> quasi_measure_preserving M M", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. T ^^ 0 \\<in> quasi_measure_preserving M M\n 2. \\<And>n.\n       T ^^ n \\<in> quasi_measure_preserving M M \\<Longrightarrow>\n       T ^^ Suc n \\<in> quasi_measure_preserving M M", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. T ^^ 0 \\<in> quasi_measure_preserving M M", "using id_quasi_measure_preserving"], ["proof (prove)\nusing this:\n  (\\<lambda>x. x) \\<in> quasi_measure_preserving ?M ?M\n\ngoal (1 subgoal):\n 1. T ^^ 0 \\<in> quasi_measure_preserving M M", "by simp"], ["proof (state)\nthis:\n  T ^^ 0 \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       T ^^ n \\<in> quasi_measure_preserving M M \\<Longrightarrow>\n       T ^^ Suc n \\<in> quasi_measure_preserving M M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       T ^^ n \\<in> quasi_measure_preserving M M \\<Longrightarrow>\n       T ^^ Suc n \\<in> quasi_measure_preserving M M", "case (Suc n)"], ["proof (state)\nthis:\n  T ^^ n \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       T ^^ n \\<in> quasi_measure_preserving M M \\<Longrightarrow>\n       T ^^ Suc n \\<in> quasi_measure_preserving M M", "then"], ["proof (chain)\npicking this:\n  T ^^ n \\<in> quasi_measure_preserving M M", "show ?case"], ["proof (prove)\nusing this:\n  T ^^ n \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. T ^^ Suc n \\<in> quasi_measure_preserving M M", "using Tqm quasi_measure_preserving_comp"], ["proof (prove)\nusing this:\n  T ^^ n \\<in> quasi_measure_preserving M M\n  T \\<in> quasi_measure_preserving M M\n  \\<lbrakk>?f \\<in> quasi_measure_preserving ?M ?N;\n   ?g \\<in> quasi_measure_preserving ?N ?P\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ> ?f \\<in> quasi_measure_preserving ?M ?P\n\ngoal (1 subgoal):\n 1. T ^^ Suc n \\<in> quasi_measure_preserving M M", "by (metis funpow_Suc_right)"], ["proof (state)\nthis:\n  T ^^ Suc n \\<in> quasi_measure_preserving M M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Tn_meas [measurable (raw)]:\n  \"T^^n \\<in> measurable M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ^^ n \\<in> M \\<rightarrow>\\<^sub>M M", "by (rule quasi_measure_preservingE(1)[OF Tn_quasi_measure_preserving])"], ["", "lemma T_vrestr_meas [measurable]:\n  assumes \"A \\<in> sets M\"\n  shows \"T--` A \\<in> sets M\"\n        \"(T^^n)--` A \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` A \\<in> sets M &&& (T ^^ n) --` A \\<in> sets M", "by (auto simp add: vrestr_meas assms)"], ["", "text \\<open>We state the next lemma both with $T^0$ and with $id$ as sometimes the simplifier\nsimplifies $T^0$ to $id$ before applying the first instance of the lemma.\\<close>"], ["", "lemma T_vrestr_0 [simp]:\n  assumes \"A \\<in> sets M\"\n  shows \"(T^^0)--`A = A\"\n        \"id--`A = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ 0) --` A = A &&& id --` A = A", "using sets.sets_into_space[OF assms]"], ["proof (prove)\nusing this:\n  A \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. (T ^^ 0) --` A = A &&& id --` A = A", "by auto"], ["", "lemma T_vrestr_composed:\n  assumes \"A \\<in> sets M\"\n  shows \"(T^^n)--` (T^^m)--` A = (T^^(n+m))--` A\"\n        \"T--` (T^^m)--` A = (T^^(m+1))--` A\"\n        \"(T^^m)--` T--` A = (T^^(m+1))--` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) --` (T ^^ m) --` A = (T ^^ (n + m)) --` A &&&\n    T --` (T ^^ m) --` A = (T ^^ (m + 1)) --` A &&&\n    (T ^^ m) --` T --` A = (T ^^ (m + 1)) --` A", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. (T ^^ n) --` (T ^^ m) --` A = (T ^^ (n + m)) --` A\n 2. T --` (T ^^ m) --` A = (T ^^ (m + 1)) --` A\n 3. (T ^^ m) --` T --` A = (T ^^ (m + 1)) --` A", "show \"(T^^n)--` (T^^m)--` A = (T^^(n+m))--` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) --` (T ^^ m) --` A = (T ^^ (n + m)) --` A", "by (simp add: Tn_meas funpow_add add.commute vrestr_comp)"], ["proof (state)\nthis:\n  (T ^^ n) --` (T ^^ m) --` A = (T ^^ (n + m)) --` A\n\ngoal (2 subgoals):\n 1. T --` (T ^^ m) --` A = (T ^^ (m + 1)) --` A\n 2. (T ^^ m) --` T --` A = (T ^^ (m + 1)) --` A", "show \"T--` (T^^m)--` A = (T^^(m+1))--` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` (T ^^ m) --` A = (T ^^ (m + 1)) --` A", "by (metis Suc_eq_plus1 T_meas funpow_Suc_right vrestr_comp)"], ["proof (state)\nthis:\n  T --` (T ^^ m) --` A = (T ^^ (m + 1)) --` A\n\ngoal (1 subgoal):\n 1. (T ^^ m) --` T --` A = (T ^^ (m + 1)) --` A", "show \"(T^^m)--` T--` A = (T^^(m+1))--` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ m) --` T --` A = (T ^^ (m + 1)) --` A", "by (simp add: Tn_meas vrestr_comp)"], ["proof (state)\nthis:\n  (T ^^ m) --` T --` A = (T ^^ (m + 1)) --` A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In the next two lemmas, we give measurability statements that show up all the time\nfor the usual preimage.\\<close>"], ["", "lemma T_intersec_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\" \"B \\<in> sets M\"\n  shows \"A \\<inter> T-`B \\<in> sets M\"\n        \"A \\<inter> (T^^n)-`B \\<in> sets M\"\n        \"T-`A \\<inter> B \\<in> sets M\"\n        \"(T^^n)-`A \\<inter> B \\<in> sets M\"\n        \"A \\<inter> (T \\<circ> T ^^ n) -` B \\<in> sets M\"\n        \"(T \\<circ> T ^^ n) -` A \\<inter> B \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<inter> T -` B \\<in> sets M &&&\n     A \\<inter> (T ^^ n) -` B \\<in> sets M &&&\n     T -` A \\<inter> B \\<in> sets M) &&&\n    (T ^^ n) -` A \\<inter> B \\<in> sets M &&&\n    A \\<inter> (T \\<circ> T ^^ n) -` B \\<in> sets M &&&\n    (T \\<circ> T ^^ n) -` A \\<inter> B \\<in> sets M", "by (metis T_meas Tn_meas assms(1) assms(2) measurable_comp sets.Int inf_commute\n      vrestr_intersec_in_space vrestr_meas)+"], ["", "lemma T_diff_meas [measurable]:\n  assumes [measurable]: \"A \\<in> sets M\" \"B \\<in> sets M\"\n  shows \"A - T-`B \\<in> sets M\"\n        \"A - (T^^n)-`B \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - T -` B \\<in> sets M &&& A - (T ^^ n) -` B \\<in> sets M", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. A - T -` B \\<in> sets M\n 2. A - (T ^^ n) -` B \\<in> sets M", "have \"A - T-`B = A \\<inter> space M - (T-`B \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - T -` B = A \\<inter> space M - T -` B \\<inter> space M", "using sets.sets_into_space[OF assms(1)]"], ["proof (prove)\nusing this:\n  A \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. A - T -` B = A \\<inter> space M - T -` B \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  A - T -` B = A \\<inter> space M - T -` B \\<inter> space M\n\ngoal (2 subgoals):\n 1. A - T -` B \\<in> sets M\n 2. A - (T ^^ n) -` B \\<in> sets M", "then"], ["proof (chain)\npicking this:\n  A - T -` B = A \\<inter> space M - T -` B \\<inter> space M", "show \"A - T-`B \\<in> sets M\""], ["proof (prove)\nusing this:\n  A - T -` B = A \\<inter> space M - T -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. A - T -` B \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  A - T -` B \\<in> sets M\n\ngoal (1 subgoal):\n 1. A - (T ^^ n) -` B \\<in> sets M", "have \"A - (T^^n)-`B = A \\<inter> space M - ((T^^n)-`B \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - (T ^^ n) -` B = A \\<inter> space M - (T ^^ n) -` B \\<inter> space M", "using sets.sets_into_space[OF assms(1)]"], ["proof (prove)\nusing this:\n  A \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. A - (T ^^ n) -` B = A \\<inter> space M - (T ^^ n) -` B \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  A - (T ^^ n) -` B = A \\<inter> space M - (T ^^ n) -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. A - (T ^^ n) -` B \\<in> sets M", "then"], ["proof (chain)\npicking this:\n  A - (T ^^ n) -` B = A \\<inter> space M - (T ^^ n) -` B \\<inter> space M", "show \"A - (T^^n)-`B \\<in> sets M\""], ["proof (prove)\nusing this:\n  A - (T ^^ n) -` B = A \\<inter> space M - (T ^^ n) -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. A - (T ^^ n) -` B \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  A - (T ^^ n) -` B \\<in> sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma T_spaceM_stable [simp]:\n  assumes \"x \\<in> space M\"\n  shows \"T x \\<in> space M\"\n        \"(T^^n) x \\<in> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T x \\<in> space M &&& (T ^^ n) x \\<in> space M", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. T x \\<in> space M\n 2. (T ^^ n) x \\<in> space M", "show \"T x \\<in> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T x \\<in> space M", "by (meson measurable_space T_meas measurable_def assms)"], ["proof (state)\nthis:\n  T x \\<in> space M\n\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<in> space M", "show \"(T^^n) x \\<in> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T ^^ n) x \\<in> space M", "by (meson measurable_space Tn_meas measurable_def assms)"], ["proof (state)\nthis:\n  (T ^^ n) x \\<in> space M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma T_quasi_preserves_null:\n  assumes \"A \\<in> sets M\"\n  shows \"A \\<in> null_sets M \\<longleftrightarrow> T--` A \\<in> null_sets M\"\n        \"A \\<in> null_sets M \\<longleftrightarrow> (T^^n)--` A \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<in> null_sets M) = (T --` A \\<in> null_sets M) &&&\n    (A \\<in> null_sets M) = ((T ^^ n) --` A \\<in> null_sets M)", "using Tqm Tn_quasi_measure_preserving"], ["proof (prove)\nusing this:\n  T \\<in> quasi_measure_preserving M M\n  T ^^ ?n \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. (A \\<in> null_sets M) = (T --` A \\<in> null_sets M) &&&\n    (A \\<in> null_sets M) = ((T ^^ n) --` A \\<in> null_sets M)", "unfolding quasi_measure_preserving_def"], ["proof (prove)\nusing this:\n  T \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M M.\n           \\<forall>A\\<in>sets M.\n              (f -` A \\<inter> space M \\<in> null_sets M) =\n              (A \\<in> null_sets M)}\n  T ^^ ?n\n  \\<in> {f \\<in> M \\<rightarrow>\\<^sub>M M.\n         \\<forall>A\\<in>sets M.\n            (f -` A \\<inter> space M \\<in> null_sets M) =\n            (A \\<in> null_sets M)}\n\ngoal (1 subgoal):\n 1. (A \\<in> null_sets M) = (T --` A \\<in> null_sets M) &&&\n    (A \\<in> null_sets M) = ((T ^^ n) --` A \\<in> null_sets M)", "by (auto simp add: assms vimage_restr_def)"], ["", "lemma T_quasi_preserves:\n  assumes \"A \\<in> sets M\"\n  shows \"emeasure M A = 0 \\<longleftrightarrow> emeasure M (T--` A) = 0\"\n        \"emeasure M A = 0 \\<longleftrightarrow> emeasure M ((T^^n)--` A) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (emeasure M A = 0) = (emeasure M (T --` A) = 0) &&&\n    (emeasure M A = 0) = (emeasure M ((T ^^ n) --` A) = 0)", "using T_quasi_preserves_null[OF assms] T_vrestr_meas assms"], ["proof (prove)\nusing this:\n  (A \\<in> null_sets M) = (T --` A \\<in> null_sets M)\n  (A \\<in> null_sets M) = ((T ^^ ?n) --` A \\<in> null_sets M)\n  ?A \\<in> sets M \\<Longrightarrow> T --` ?A \\<in> sets M\n  ?A \\<in> sets M \\<Longrightarrow> (T ^^ ?n) --` ?A \\<in> sets M\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. (emeasure M A = 0) = (emeasure M (T --` A) = 0) &&&\n    (emeasure M A = 0) = (emeasure M ((T ^^ n) --` A) = 0)", "by blast+"], ["", "lemma T_quasi_preserves_null2:\n  assumes \"A \\<in> null_sets M\"\n  shows \"T--` A \\<in> null_sets M\"\n        \"(T^^n)--` A \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T --` A \\<in> null_sets M &&& (T ^^ n) --` A \\<in> null_sets M", "using T_quasi_preserves_null[OF null_setsD2[OF assms]] assms"], ["proof (prove)\nusing this:\n  (A \\<in> null_sets M) = (T --` A \\<in> null_sets M)\n  (A \\<in> null_sets M) = ((T ^^ ?n) --` A \\<in> null_sets M)\n  A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. T --` A \\<in> null_sets M &&& (T ^^ n) --` A \\<in> null_sets M", "by auto"], ["", "lemma T_composition_borel [measurable]:\n  assumes \"f \\<in> borel_measurable M\"\n  shows \"(\\<lambda>x. f(T x)) \\<in> borel_measurable M\" \"(\\<lambda>x. f((T^^k) x)) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (T x)) \\<in> borel_measurable M &&&\n    (\\<lambda>x. f ((T ^^ k) x)) \\<in> borel_measurable M", "using T_meas Tn_meas assms measurable_compose"], ["proof (prove)\nusing this:\n  T \\<in> M \\<rightarrow>\\<^sub>M M\n  T ^^ ?n \\<in> M \\<rightarrow>\\<^sub>M M\n  f \\<in> borel_measurable M\n  \\<lbrakk>?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N;\n   ?g \\<in> ?N \\<rightarrow>\\<^sub>M ?L\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. ?g (?f x))\n                    \\<in> ?M \\<rightarrow>\\<^sub>M ?L\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (T x)) \\<in> borel_measurable M &&&\n    (\\<lambda>x. f ((T ^^ k) x)) \\<in> borel_measurable M", "by auto"], ["", "lemma T_AE_iterates:\n  assumes \"AE x in M. P x\"\n  shows \"AE x in M. \\<forall>n. P ((T^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. P ((T ^^ n) x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. P ((T ^^ n) x)", "have \"AE x in M. P ((T^^n) x)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. P ((T ^^ n) x)", "by (rule quasi_measure_preserving_AE[OF Tn_quasi_measure_preserving[of n] assms])"], ["proof (state)\nthis:\n  AE x in M. P ((T ^^ ?n) x)\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. P ((T ^^ n) x)", "then"], ["proof (chain)\npicking this:\n  AE x in M. P ((T ^^ ?n) x)", "show ?thesis"], ["proof (prove)\nusing this:\n  AE x in M. P ((T ^^ ?n) x)\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. P ((T ^^ n) x)", "unfolding AE_all_countable"], ["proof (prove)\nusing this:\n  AE x in M. P ((T ^^ ?n) x)\n\ngoal (1 subgoal):\n 1. \\<forall>n. AE x in M. P ((T ^^ n) x)", "by simp"], ["proof (state)\nthis:\n  AE x in M. \\<forall>n. P ((T ^^ n) x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qmpt_power:\n  \"qmpt M (T^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M (T ^^ n)", "by (standard, simp add: Tn_quasi_measure_preserving)"], ["", "lemma T_Tn_T_compose:\n  \"T ((T^^n) x) = (T^^(Suc n)) x\"\n  \"(T^^n) (T x) = (T^^(Suc n)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ((T ^^ n) x) = (T ^^ Suc n) x &&& (T ^^ n) (T x) = (T ^^ Suc n) x", "by (auto simp add: funpow_swap1)"], ["", "lemma (in qmpt) qmpt_density:\n  assumes [measurable]: \"h \\<in> borel_measurable M\"\n      and \"AE x in M. h x \\<noteq> 0\" \"AE x in M. h x \\<noteq> \\<infinity>\"\n  shows \"qmpt (density M h) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt (density M h) T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. qmpt (density M h) T", "interpret A: sigma_finite_measure \"density M h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure (density M h)", "apply (subst sigma_finite_iff_density_finite)"], ["proof (prove)\ngoal (2 subgoals):\n 1. h \\<in> borel_measurable M\n 2. AE x in M. h x \\<noteq> \\<infinity>", "using assms"], ["proof (prove)\nusing this:\n  h \\<in> borel_measurable M\n  AE x in M. h x \\<noteq> 0\n  AE x in M. h x \\<noteq> \\<infinity>\n\ngoal (2 subgoals):\n 1. h \\<in> borel_measurable M\n 2. AE x in M. h x \\<noteq> \\<infinity>", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. qmpt (density M h) T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt (density M h) T", "apply (standard)"], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> quasi_measure_preserving (density M h) (density M h)", "apply (rule quasi_measure_preservingI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. T \\<in> density M h \\<rightarrow>\\<^sub>M density M h\n 2. \\<And>A.\n       A \\<in> sets (density M h) \\<Longrightarrow>\n       (T -` A \\<inter> space (density M h) \\<in> null_sets (density M h)) =\n       (A \\<in> null_sets (density M h))", "unfolding null_sets_density[OF \\<open>h \\<in> borel_measurable M\\<close> \\<open>AE x in M. h x \\<noteq> 0\\<close>] sets_density space_density"], ["proof (prove)\ngoal (2 subgoals):\n 1. T \\<in> density M h \\<rightarrow>\\<^sub>M density M h\n 2. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       (T -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets M)", "using quasi_measure_preservingE(2)[OF Tqm]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow>\n  (T -` ?A \\<inter> space M \\<in> null_sets M) = (?A \\<in> null_sets M)\n\ngoal (2 subgoals):\n 1. T \\<in> density M h \\<rightarrow>\\<^sub>M density M h\n 2. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       (T -` A \\<inter> space M \\<in> null_sets M) = (A \\<in> null_sets M)", "by auto"], ["proof (state)\nthis:\n  qmpt (density M h) T\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Basic properties of mpt\\<close>"], ["", "context mpt\nbegin"], ["", "lemma Tn_measure_preserving:\n  \"T^^n \\<in> measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ^^ n \\<in> measure_preserving M M", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. T ^^ 0 \\<in> measure_preserving M M\n 2. \\<And>n.\n       T ^^ n \\<in> measure_preserving M M \\<Longrightarrow>\n       T ^^ Suc n \\<in> measure_preserving M M", "case (Suc n)"], ["proof (state)\nthis:\n  T ^^ n \\<in> measure_preserving M M\n\ngoal (2 subgoals):\n 1. T ^^ 0 \\<in> measure_preserving M M\n 2. \\<And>n.\n       T ^^ n \\<in> measure_preserving M M \\<Longrightarrow>\n       T ^^ Suc n \\<in> measure_preserving M M", "then"], ["proof (chain)\npicking this:\n  T ^^ n \\<in> measure_preserving M M", "show ?case"], ["proof (prove)\nusing this:\n  T ^^ n \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. T ^^ Suc n \\<in> measure_preserving M M", "using Tm measure_preserving_comp"], ["proof (prove)\nusing this:\n  T ^^ n \\<in> measure_preserving M M\n  T \\<in> measure_preserving M M\n  \\<lbrakk>?f \\<in> measure_preserving ?M ?N;\n   ?g \\<in> measure_preserving ?N ?P\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ> ?f \\<in> measure_preserving ?M ?P\n\ngoal (1 subgoal):\n 1. T ^^ Suc n \\<in> measure_preserving M M", "by (metis funpow_Suc_right)"], ["proof (state)\nthis:\n  T ^^ Suc n \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. T ^^ 0 \\<in> measure_preserving M M", "qed (simp add: id_measure_preserving)"], ["", "lemma T_integral_preserving:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes \"integrable M f\"\n  shows \"integrable M (\\<lambda>x. f(T x))\" \"(\\<integral>x. f(T x) \\<partial>M) = (\\<integral>x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f (T x)) &&&\n    LINT x|M. f (T x) = integral\\<^sup>L M f", "using measure_preserving_preserves_integral[OF Tm assms]"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. f (T x))\n  integral\\<^sup>L M f = LINT x|M. f (T x)\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f (T x)) &&&\n    LINT x|M. f (T x) = integral\\<^sup>L M f", "by auto"], ["", "lemma Tn_integral_preserving:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes \"integrable M f\"\n  shows \"integrable M (\\<lambda>x. f((T^^n) x))\" \"(\\<integral>x. f((T^^n) x) \\<partial>M) = (\\<integral>x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f ((T ^^ n) x)) &&&\n    LINT x|M. f ((T ^^ n) x) = integral\\<^sup>L M f", "using measure_preserving_preserves_integral[OF Tn_measure_preserving assms]"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. f ((T ^^ ?n1) x))\n  integral\\<^sup>L M f = LINT x|M. f ((T ^^ ?n1) x)\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. f ((T ^^ n) x)) &&&\n    LINT x|M. f ((T ^^ n) x) = integral\\<^sup>L M f", "by auto"], ["", "lemma T_nn_integral_preserving:\n  fixes f :: \"'a \\<Rightarrow> ennreal\"\n  assumes \"f \\<in> borel_measurable M\"\n  shows \"(\\<integral>\\<^sup>+x. f(T x) \\<partial>M) = (\\<integral>\\<^sup>+x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f (T x) \\<partial>M = integral\\<^sup>N M f", "using measure_preserving_preserves_nn_integral[OF Tm assms]"], ["proof (prove)\nusing this:\n  integral\\<^sup>N M f = \\<integral>\\<^sup>+ x. f (T x) \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f (T x) \\<partial>M = integral\\<^sup>N M f", "by auto"], ["", "lemma Tn_nn_integral_preserving:\n  fixes f :: \"'a \\<Rightarrow> ennreal\"\n  assumes \"f \\<in> borel_measurable M\"\n  shows \"(\\<integral>\\<^sup>+x. f((T^^n) x) \\<partial>M) = (\\<integral>\\<^sup>+x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f ((T ^^ n) x) \\<partial>M = integral\\<^sup>N M f", "using measure_preserving_preserves_nn_integral[OF Tn_measure_preserving assms(1)]"], ["proof (prove)\nusing this:\n  integral\\<^sup>N M f = \\<integral>\\<^sup>+ x. f ((T ^^ ?n1) x) \\<partial>M\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. f ((T ^^ n) x) \\<partial>M = integral\\<^sup>N M f", "by auto"], ["", "lemma mpt_power:\n  \"mpt M (T^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M (T ^^ n)", "by (standard, simp_all add: Tn_quasi_measure_preserving Tn_measure_preserving)"], ["", "lemma T_vrestr_same_emeasure:\n  assumes \"A \\<in> sets M\"\n  shows \"emeasure M (T--` A) = emeasure M A\"\n        \"emeasure M ((T ^^ n)--`A) = emeasure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (T --` A) = emeasure M A &&&\n    emeasure M ((T ^^ n) --` A) = emeasure M A", "by (auto simp add: vrestr_same_emeasure_f Tm Tn_measure_preserving assms)"], ["", "lemma T_vrestr_same_measure:\n  assumes \"A \\<in> sets M\"\n  shows \"measure M (T--` A) = measure M A\"\n        \"measure M ((T ^^ n)--`A) = measure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure M (T --` A) = Sigma_Algebra.measure M A &&&\n    Sigma_Algebra.measure M ((T ^^ n) --` A) = Sigma_Algebra.measure M A", "by (auto simp add: vrestr_same_measure_f Tm Tn_measure_preserving assms)"], ["", "lemma (in fmpt) fmpt_power:\n  \"fmpt M (T^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M (T ^^ n)", "by (standard, simp_all add: Tn_quasi_measure_preserving Tn_measure_preserving)"], ["", "end"], ["", "subsection \\<open>Birkhoff sums\\<close>"], ["", "text \\<open>Birkhoff sums, obtained by summing a function along the orbit of a map, are basic objects\nto be understood in ergodic theory.\\<close>"], ["", "context qmpt\nbegin"], ["", "definition birkhoff_sum::\"('a \\<Rightarrow> 'b::comm_monoid_add) \\<Rightarrow> nat \\<Rightarrow> 'a \\<Rightarrow> 'b\"\n  where \"birkhoff_sum f n x = (\\<Sum>i\\<in>{..<n}. f((T^^i)x))\""], ["", "lemma birkhoff_sum_meas [measurable]:\n  fixes f::\"'a \\<Rightarrow> 'b::{second_countable_topology, topological_comm_monoid_add}\"\n  assumes \"f \\<in> borel_measurable M\"\n  shows \"birkhoff_sum f n \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f n \\<in> borel_measurable M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. birkhoff_sum f n \\<in> borel_measurable M", "define F where \"F = (\\<lambda>i x. f((T^^i)x))\""], ["proof (state)\nthis:\n  F = (\\<lambda>i x. f ((T ^^ i) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f n \\<in> borel_measurable M", "have \"\\<And>i. F i \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. F i \\<in> borel_measurable M", "using assms F_def"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable M\n  F = (\\<lambda>i x. f ((T ^^ i) x))\n\ngoal (1 subgoal):\n 1. \\<And>i. F i \\<in> borel_measurable M", "by auto"], ["proof (state)\nthis:\n  F ?i1 \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. birkhoff_sum f n \\<in> borel_measurable M", "then"], ["proof (chain)\npicking this:\n  F ?i1 \\<in> borel_measurable M", "have \"(\\<lambda>x. (\\<Sum>i<n. F i x)) \\<in> borel_measurable M\""], ["proof (prove)\nusing this:\n  F ?i1 \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>i<n. F i x) \\<in> borel_measurable M", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>i<n. F i x) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. birkhoff_sum f n \\<in> borel_measurable M", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<Sum>i<n. F i x) \\<in> borel_measurable M", "have \"(\\<lambda>x. birkhoff_sum f n x) \\<in> borel_measurable M\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>i<n. F i x) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. birkhoff_sum f n \\<in> borel_measurable M", "unfolding birkhoff_sum_def F_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>i<n. f ((T ^^ i) x)) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>i<n. f ((T ^^ i) x)) \\<in> borel_measurable M", "by auto"], ["proof (state)\nthis:\n  birkhoff_sum f n \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. birkhoff_sum f n \\<in> borel_measurable M", "then"], ["proof (chain)\npicking this:\n  birkhoff_sum f n \\<in> borel_measurable M", "show ?thesis"], ["proof (prove)\nusing this:\n  birkhoff_sum f n \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. birkhoff_sum f n \\<in> borel_measurable M", "by simp"], ["proof (state)\nthis:\n  birkhoff_sum f n \\<in> borel_measurable M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma birkhoff_sum_1 [simp]:\n  \"birkhoff_sum f 0 x = 0\"\n  \"birkhoff_sum f 1 x = f x\"\n  \"birkhoff_sum f (Suc 0) x = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f 0 x = (0::'b) &&&\n    birkhoff_sum f 1 x = f x &&& birkhoff_sum f (Suc 0) x = f x", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<0. f ((T ^^ i) x)) = (0::'b) &&&\n    (\\<Sum>i<1. f ((T ^^ i) x)) = f x &&&\n    (\\<Sum>i<Suc 0. f ((T ^^ i) x)) = f x", "by auto"], ["", "lemma birkhoff_sum_cocycle:\n  \"birkhoff_sum f (n+m) x = birkhoff_sum f n x + birkhoff_sum f m ((T^^n)x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "have \"(\\<Sum>i<m. f ((T ^^ i) ((T ^^ n) x))) = (\\<Sum>i<m. f ((T ^^ (i+n)) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<m. f ((T ^^ i) ((T ^^ n) x))) =\n    (\\<Sum>i<m. f ((T ^^ (i + n)) x))", "by (simp add: funpow_add)"], ["proof (state)\nthis:\n  (\\<Sum>i<m. f ((T ^^ i) ((T ^^ n) x))) = (\\<Sum>i<m. f ((T ^^ (i + n)) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<m. f ((T ^^ i) ((T ^^ n) x))) = (\\<Sum>i<m. f ((T ^^ (i + n)) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "have \"... = (\\<Sum>j\\<in>{n..< m+n}. f ((T ^^j) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<m. f ((T ^^ (i + n)) x)) =\n    (\\<Sum>j = n..<m + n. f ((T ^^ j) x))", "using atLeast0LessThan sum.shift_bounds_nat_ivl[where ?g = \"\\<lambda>j. f((T^^j)x)\" and ?k = n and ?m = 0 and ?n = m, symmetric]\n          add.commute add.left_neutral"], ["proof (prove)\nusing this:\n  {0..<?n} = {..<?n}\n  (\\<Sum>i = 0..<m. f ((T ^^ (i + n)) x)) =\n  (\\<Sum>j = 0 + n..<m + n. f ((T ^^ j) x))\n  ?a + ?b = ?b + ?a\n  (0::?'a) + ?a = ?a\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<m. f ((T ^^ (i + n)) x)) =\n    (\\<Sum>j = n..<m + n. f ((T ^^ j) x))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i<m. f ((T ^^ (i + n)) x)) = (\\<Sum>j = n..<m + n. f ((T ^^ j) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i<m. f ((T ^^ i) ((T ^^ n) x))) =\n  (\\<Sum>j = n..<m + n. f ((T ^^ j) x))", "have *: \"birkhoff_sum f m ((T^^n)x) = (\\<Sum>j\\<in>{n..< m+n}. f ((T ^^j) x))\""], ["proof (prove)\nusing this:\n  (\\<Sum>i<m. f ((T ^^ i) ((T ^^ n) x))) =\n  (\\<Sum>j = n..<m + n. f ((T ^^ j) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f m ((T ^^ n) x) = (\\<Sum>j = n..<m + n. f ((T ^^ j) x))", "unfolding birkhoff_sum_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i<m. f ((T ^^ i) ((T ^^ n) x))) =\n  (\\<Sum>j = n..<m + n. f ((T ^^ j) x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<m. f ((T ^^ i) ((T ^^ n) x))) =\n    (\\<Sum>j = n..<m + n. f ((T ^^ j) x))", "by auto"], ["proof (state)\nthis:\n  birkhoff_sum f m ((T ^^ n) x) = (\\<Sum>j = n..<m + n. f ((T ^^ j) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "have \"birkhoff_sum f (n+m) x = (\\<Sum>i<n. f((T^^i)x)) + (\\<Sum>i\\<in>{n..<m+n}. f((T^^i)x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n + m. f ((T ^^ i) x)) =\n    (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))", "by (metis add.commute add.right_neutral atLeast0LessThan le_add2 sum.atLeastLessThan_concat)"], ["proof (state)\nthis:\n  birkhoff_sum f (n + m) x =\n  (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "also"], ["proof (state)\nthis:\n  birkhoff_sum f (n + m) x =\n  (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "have \"... = birkhoff_sum f n x + (\\<Sum>i\\<in>{n..<m+n}. f((T^^i)x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i = n..<m + n. f ((T ^^ i) x)) =\n    birkhoff_sum f n x + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i = n..<m + n. f ((T ^^ i) x)) =\n    (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i = n..<m + n. f ((T ^^ i) x)) =\n  birkhoff_sum f n x + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "finally"], ["proof (chain)\npicking this:\n  birkhoff_sum f (n + m) x =\n  birkhoff_sum f n x + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))", "show ?thesis"], ["proof (prove)\nusing this:\n  birkhoff_sum f (n + m) x =\n  birkhoff_sum f n x + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "using *"], ["proof (prove)\nusing this:\n  birkhoff_sum f (n + m) x =\n  birkhoff_sum f n x + (\\<Sum>i = n..<m + n. f ((T ^^ i) x))\n  birkhoff_sum f m ((T ^^ n) x) = (\\<Sum>j = n..<m + n. f ((T ^^ j) x))\n\ngoal (1 subgoal):\n 1. birkhoff_sum f (n + m) x =\n    birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)", "by simp"], ["proof (state)\nthis:\n  birkhoff_sum f (n + m) x =\n  birkhoff_sum f n x + birkhoff_sum f m ((T ^^ n) x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma birkhoff_sum_mono:\n  fixes f g::\"_ \\<Rightarrow> real\"\n  assumes \"\\<And>x. f x \\<le> g x\"\n  shows \"birkhoff_sum f n x \\<le> birkhoff_sum g n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum f n x \\<le> birkhoff_sum g n x", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. f ((T ^^ i) x)) \\<le> (\\<Sum>i<n. g ((T ^^ i) x))", "by (simp add: assms sum_mono)"], ["", "lemma birkhoff_sum_abs:\n  fixes f::\"_ \\<Rightarrow> 'b::real_normed_vector\"\n  shows \"norm(birkhoff_sum f n x) \\<le> birkhoff_sum (\\<lambda>x. norm(f x)) n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (birkhoff_sum f n x)\n    \\<le> birkhoff_sum (\\<lambda>x. norm (f x)) n x", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (\\<Sum>i<n. f ((T ^^ i) x))\n    \\<le> (\\<Sum>i<n. norm (f ((T ^^ i) x)))", "using norm_sum"], ["proof (prove)\nusing this:\n  norm (sum ?f ?A) \\<le> (\\<Sum>i\\<in>?A. norm (?f i))\n\ngoal (1 subgoal):\n 1. norm (\\<Sum>i<n. f ((T ^^ i) x))\n    \\<le> (\\<Sum>i<n. norm (f ((T ^^ i) x)))", "by auto"], ["", "lemma birkhoff_sum_add:\n  \"birkhoff_sum (\\<lambda>x. f x + g x) n x = birkhoff_sum f n x + birkhoff_sum g n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum (\\<lambda>x. f x + g x) n x =\n    birkhoff_sum f n x + birkhoff_sum g n x", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. f ((T ^^ i) x) + g ((T ^^ i) x)) =\n    (\\<Sum>i<n. f ((T ^^ i) x)) + (\\<Sum>i<n. g ((T ^^ i) x))", "by (simp add: sum.distrib)"], ["", "lemma birkhoff_sum_diff:\n  fixes f g::\"_ \\<Rightarrow> real\"\n  shows \"birkhoff_sum (\\<lambda>x. f x - g x) n x = birkhoff_sum f n x - birkhoff_sum g n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum (\\<lambda>x. f x - g x) n x =\n    birkhoff_sum f n x - birkhoff_sum g n x", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. f ((T ^^ i) x) - g ((T ^^ i) x)) =\n    (\\<Sum>i<n. f ((T ^^ i) x)) - (\\<Sum>i<n. g ((T ^^ i) x))", "by (simp add: sum_subtractf)"], ["", "lemma birkhoff_sum_cmult:\n  fixes f::\"_ \\<Rightarrow> real\"\n  shows \"birkhoff_sum (\\<lambda>x. c * f x) n x = c * birkhoff_sum f n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. birkhoff_sum (\\<lambda>x. c * f x) n x = c * birkhoff_sum f n x", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. c * f ((T ^^ i) x)) = c * (\\<Sum>i<n. f ((T ^^ i) x))", "by (simp add: sum_distrib_left)"], ["", "lemma skew_product_real_iterates:\n  fixes f::\"'a \\<Rightarrow> real\"\n  shows \"((\\<lambda>(x,y). (T x, y + f x))^^n) (x,y) = ((T^^n) x, y + birkhoff_sum f n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>(x, y). (T x, y + f x)) ^^ n) (x, y) =\n    ((T ^^ n) x, y + birkhoff_sum f n x)", "apply (induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>a. case a of (x, y) \\<Rightarrow> (T x, y + f x)) ^^ 0)\n     (x, y) =\n    ((T ^^ 0) x, y + birkhoff_sum f 0 x)\n 2. \\<And>n.\n       ((\\<lambda>a. case a of (x, y) \\<Rightarrow> (T x, y + f x)) ^^ n)\n        (x, y) =\n       ((T ^^ n) x, y + birkhoff_sum f n x) \\<Longrightarrow>\n       ((\\<lambda>a. case a of (x, y) \\<Rightarrow> (T x, y + f x)) ^^\n        Suc n)\n        (x, y) =\n       ((T ^^ Suc n) x, y + birkhoff_sum f (Suc n) x)", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ((\\<lambda>a. case a of (x, y) \\<Rightarrow> (T x, y + f x)) ^^ n)\n        (x, y) =\n       ((T ^^ n) x, y + birkhoff_sum f n x) \\<Longrightarrow>\n       birkhoff_sum f n x + f ((T ^^ n) x) = birkhoff_sum f (Suc n) x", "apply (metis (no_types, lifting) Suc_eq_plus1 birkhoff_sum_cocycle qmpt.birkhoff_sum_1(2) qmpt_axioms)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "lemma (in mpt) birkhoff_sum_integral:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n  assumes [measurable]: \"integrable M f\"\n  shows \"integrable M (birkhoff_sum f n)\" \"(\\<integral>x. birkhoff_sum f n x \\<partial>M) = n *\\<^sub>R (\\<integral>x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (birkhoff_sum f n) &&&\n    integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable M (birkhoff_sum f n)\n 2. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "have a: \"\\<And>k. integrable M (\\<lambda>x. f((T^^k) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. integrable M (\\<lambda>x. f ((T ^^ k) x))", "using Tn_integral_preserving(1) assms"], ["proof (prove)\nusing this:\n  integrable M ?f \\<Longrightarrow>\n  integrable M (\\<lambda>x. ?f ((T ^^ ?n) x))\n  integrable M f\n\ngoal (1 subgoal):\n 1. \\<And>k. integrable M (\\<lambda>x. f ((T ^^ k) x))", "by blast"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. f ((T ^^ ?k1) x))\n\ngoal (2 subgoals):\n 1. integrable M (birkhoff_sum f n)\n 2. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "then"], ["proof (chain)\npicking this:\n  integrable M (\\<lambda>x. f ((T ^^ ?k1) x))", "have \"integrable M (\\<lambda>x. \\<Sum>k\\<in>{..<n}. f((T^^k) x))\""], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. f ((T ^^ ?k1) x))\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. \\<Sum>k<n. f ((T ^^ k) x))", "by simp"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. \\<Sum>k<n. f ((T ^^ k) x))\n\ngoal (2 subgoals):\n 1. integrable M (birkhoff_sum f n)\n 2. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "then"], ["proof (chain)\npicking this:\n  integrable M (\\<lambda>x. \\<Sum>k<n. f ((T ^^ k) x))", "have \"integrable M (\\<lambda>x. birkhoff_sum f n x)\""], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. \\<Sum>k<n. f ((T ^^ k) x))\n\ngoal (1 subgoal):\n 1. integrable M (birkhoff_sum f n)", "unfolding birkhoff_sum_def"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. \\<Sum>k<n. f ((T ^^ k) x))\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. \\<Sum>i<n. f ((T ^^ i) x))", "by auto"], ["proof (state)\nthis:\n  integrable M (birkhoff_sum f n)\n\ngoal (2 subgoals):\n 1. integrable M (birkhoff_sum f n)\n 2. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "then"], ["proof (chain)\npicking this:\n  integrable M (birkhoff_sum f n)", "show \"integrable M (birkhoff_sum f n)\""], ["proof (prove)\nusing this:\n  integrable M (birkhoff_sum f n)\n\ngoal (1 subgoal):\n 1. integrable M (birkhoff_sum f n)", "by simp"], ["proof (state)\nthis:\n  integrable M (birkhoff_sum f n)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "have b: \"\\<And>k. (\\<integral>x. f((T^^k)x) \\<partial>M) = (\\<integral>x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. LINT x|M. f ((T ^^ k) x) = integral\\<^sup>L M f", "using Tn_integral_preserving(2) assms"], ["proof (prove)\nusing this:\n  integrable M ?f \\<Longrightarrow>\n  LINT x|M. ?f ((T ^^ ?n) x) = integral\\<^sup>L M ?f\n  integrable M f\n\ngoal (1 subgoal):\n 1. \\<And>k. LINT x|M. f ((T ^^ k) x) = integral\\<^sup>L M f", "by blast"], ["proof (state)\nthis:\n  LINT x|M. f ((T ^^ ?k1) x) = integral\\<^sup>L M f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "have \"(\\<integral>x. birkhoff_sum f n x \\<partial>M) = (\\<integral>x. (\\<Sum>k\\<in>{..<n}. f((T^^k) x)) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    LINT x|M. (\\<Sum>k<n. f ((T ^^ k) x))", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|M. (\\<Sum>i<n. f ((T ^^ i) x)) =\n    LINT x|M. (\\<Sum>k<n. f ((T ^^ k) x))", "by blast"], ["proof (state)\nthis:\n  integral\\<^sup>L M (birkhoff_sum f n) =\n  LINT x|M. (\\<Sum>k<n. f ((T ^^ k) x))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "also"], ["proof (state)\nthis:\n  integral\\<^sup>L M (birkhoff_sum f n) =\n  LINT x|M. (\\<Sum>k<n. f ((T ^^ k) x))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "have \"... = (\\<Sum>k\\<in>{..<n}. (\\<integral>x. f((T^^k) x) \\<partial>M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|M. (\\<Sum>k<n. f ((T ^^ k) x)) =\n    (\\<Sum>k<n. LINT x|M. f ((T ^^ k) x))", "by (rule Bochner_Integration.integral_sum, simp add: a)"], ["proof (state)\nthis:\n  LINT x|M. (\\<Sum>k<n. f ((T ^^ k) x)) =\n  (\\<Sum>k<n. LINT x|M. f ((T ^^ k) x))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "also"], ["proof (state)\nthis:\n  LINT x|M. (\\<Sum>k<n. f ((T ^^ k) x)) =\n  (\\<Sum>k<n. LINT x|M. f ((T ^^ k) x))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "have \"... = (\\<Sum>k\\<in>{..<n}. (\\<integral>x. f x \\<partial>M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. LINT x|M. f ((T ^^ k) x)) =\n    (\\<Sum>k<n. integral\\<^sup>L M f)", "using b"], ["proof (prove)\nusing this:\n  LINT x|M. f ((T ^^ ?k1) x) = integral\\<^sup>L M f\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. LINT x|M. f ((T ^^ k) x)) =\n    (\\<Sum>k<n. integral\\<^sup>L M f)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k<n. LINT x|M. f ((T ^^ k) x)) = (\\<Sum>k<n. integral\\<^sup>L M f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<n. LINT x|M. f ((T ^^ k) x)) = (\\<Sum>k<n. integral\\<^sup>L M f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "have \"... = n *\\<^sub>R (\\<integral>x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. integral\\<^sup>L M f) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "by (simp add: sum_constant_scaleR)"], ["proof (state)\nthis:\n  (\\<Sum>k<n. integral\\<^sup>L M f) = real n *\\<^sub>R integral\\<^sup>L M f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "finally"], ["proof (chain)\npicking this:\n  integral\\<^sup>L M (birkhoff_sum f n) =\n  real n *\\<^sub>R integral\\<^sup>L M f", "show \"(\\<integral>x. birkhoff_sum f n x \\<partial>M) = n *\\<^sub>R (\\<integral>x. f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  integral\\<^sup>L M (birkhoff_sum f n) =\n  real n *\\<^sub>R integral\\<^sup>L M f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L M (birkhoff_sum f n) =\n    real n *\\<^sub>R integral\\<^sup>L M f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>L M (birkhoff_sum f n) =\n  real n *\\<^sub>R integral\\<^sup>L M f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in mpt) birkhoff_sum_nn_integral:\n  fixes f :: \"'a \\<Rightarrow> ennreal\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\" and pos: \"\\<And>x. f x \\<ge> 0\"\n  shows \"(\\<integral>\\<^sup>+x. birkhoff_sum f n x \\<partial>M) = n * (\\<integral>\\<^sup>+x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "have [measurable]: \"\\<And>k. (\\<lambda>x. f((T^^k)x)) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. (\\<lambda>x. f ((T ^^ k) x)) \\<in> borel_measurable M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. f ((T ^^ ?k1) x)) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "have posk: \"\\<And>k x. f((T^^k)x) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k x. 0 \\<le> f ((T ^^ k) x)", "using pos"], ["proof (prove)\nusing this:\n  0 \\<le> f ?x1\n\ngoal (1 subgoal):\n 1. \\<And>k x. 0 \\<le> f ((T ^^ k) x)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> f ((T ^^ ?k1) ?x1)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "have b: \"\\<And>k. (\\<integral>\\<^sup>+x. f((T^^k)x) \\<partial>M) = (\\<integral>\\<^sup>+x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M =\n       integral\\<^sup>N M f", "using Tn_nn_integral_preserving assms"], ["proof (prove)\nusing this:\n  ?f \\<in> borel_measurable M \\<Longrightarrow>\n  \\<integral>\\<^sup>+ x. ?f ((T ^^ ?n) x) \\<partial>M =\n  integral\\<^sup>N M ?f\n  f \\<in> borel_measurable M\n  0 \\<le> f ?x1\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M =\n       integral\\<^sup>N M f", "by blast"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. f ((T ^^ ?k1) x) \\<partial>M = integral\\<^sup>N M f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "have \"(\\<integral>\\<^sup>+x. birkhoff_sum f n x \\<partial>M) = (\\<integral>\\<^sup>+x. (\\<Sum>k\\<in>{..<n}. f((T^^k) x)) \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) =\n    \\<integral>\\<^sup>+ x. (\\<Sum>k<n. f ((T ^^ k) x)) \\<partial>M", "unfolding birkhoff_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (\\<Sum>i<n. f ((T ^^ i) x)) \\<partial>M =\n    \\<integral>\\<^sup>+ x. (\\<Sum>k<n. f ((T ^^ k) x)) \\<partial>M", "by blast"], ["proof (state)\nthis:\n  integral\\<^sup>N M (birkhoff_sum f n) =\n  \\<integral>\\<^sup>+ x. (\\<Sum>k<n. f ((T ^^ k) x)) \\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N M (birkhoff_sum f n) =\n  \\<integral>\\<^sup>+ x. (\\<Sum>k<n. f ((T ^^ k) x)) \\<partial>M\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "have \"... = (\\<Sum>k\\<in>{..<n}. (\\<integral>\\<^sup>+x. f((T^^k) x) \\<partial>M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. (\\<Sum>k<n. f ((T ^^ k) x)) \\<partial>M =\n    (\\<Sum>k<n. \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M)", "by (rule nn_integral_sum, auto simp add: posk)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. (\\<Sum>k<n. f ((T ^^ k) x)) \\<partial>M =\n  (\\<Sum>k<n. \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. (\\<Sum>k<n. f ((T ^^ k) x)) \\<partial>M =\n  (\\<Sum>k<n. \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "have \"... = (\\<Sum>k\\<in>{..<n}. (\\<integral>\\<^sup>+x. f x \\<partial>M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M) =\n    (\\<Sum>k<n. integral\\<^sup>N M f)", "using b"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. f ((T ^^ ?k1) x) \\<partial>M = integral\\<^sup>N M f\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M) =\n    (\\<Sum>k<n. integral\\<^sup>N M f)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k<n. \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M) =\n  (\\<Sum>k<n. integral\\<^sup>N M f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<n. \\<integral>\\<^sup>+ x. f ((T ^^ k) x) \\<partial>M) =\n  (\\<Sum>k<n. integral\\<^sup>N M f)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "have \"... = n * (\\<integral>\\<^sup>+x. f x \\<partial>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. integral\\<^sup>N M f) = of_nat n * integral\\<^sup>N M f", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k<n. integral\\<^sup>N M f) = of_nat n * integral\\<^sup>N M f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "finally"], ["proof (chain)\npicking this:\n  integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "show \"(\\<integral>\\<^sup>+x. birkhoff_sum f n x \\<partial>M) = n * (\\<integral>\\<^sup>+x. f x \\<partial>M)\""], ["proof (prove)\nusing this:\n  integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N M (birkhoff_sum f n) = of_nat n * integral\\<^sup>N M f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Inverse map\\<close>"], ["", "context qmpt begin"], ["", "definition\n  \"invertible_qmpt \\<equiv> (bij T \\<and> inv T \\<in> measurable M M)\""], ["", "definition\n  \"Tinv \\<equiv> inv T\""], ["", "lemma T_Tinv_of_set:\n  assumes \"invertible_qmpt\"\n          \"A \\<in> sets M\"\n  shows \"T-`(Tinv-`A \\<inter> space M) \\<inter> space M = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T -` (Tinv -` A \\<inter> space M) \\<inter> space M = A", "using assms sets.sets_into_space"], ["proof (prove)\nusing this:\n  invertible_qmpt\n  A \\<in> sets M\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. T -` (Tinv -` A \\<inter> space M) \\<inter> space M = A", "unfolding Tinv_def invertible_qmpt_def"], ["proof (prove)\nusing this:\n  bij T \\<and> inv T \\<in> M \\<rightarrow>\\<^sub>M M\n  A \\<in> sets M\n  ?x \\<in> sets ?M \\<Longrightarrow> ?x \\<subseteq> space ?M\n\ngoal (1 subgoal):\n 1. T -` (inv T -` A \\<inter> space M) \\<inter> space M = A", "apply (auto simp add: bij_betw_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>A \\<in> sets M;\n        \\<And>x M. x \\<in> sets M \\<Longrightarrow> x \\<subseteq> space M;\n        inj T; surj T; inv T \\<in> M \\<rightarrow>\\<^sub>M M;\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> T x \\<in> space M", "using T_spaceM_stable(1)"], ["proof (prove)\nusing this:\n  ?x \\<in> space M \\<Longrightarrow> T ?x \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>A \\<in> sets M;\n        \\<And>x M. x \\<in> sets M \\<Longrightarrow> x \\<subseteq> space M;\n        inj T; surj T; inv T \\<in> M \\<rightarrow>\\<^sub>M M;\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> T x \\<in> space M", "by blast"], ["", "lemma Tinv_quasi_measure_preserving:\n  assumes \"invertible_qmpt\"\n  shows \"Tinv \\<in> quasi_measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tinv \\<in> quasi_measure_preserving M M", "proof (rule quasi_measure_preservingI, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M;\n        Tinv -` A \\<inter> space M \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> A \\<in> null_sets M\n 3. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "fix A"], ["proof (state)\ngoal (3 subgoals):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M;\n        Tinv -` A \\<inter> space M \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> A \\<in> null_sets M\n 3. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "assume [measurable]: \"A \\<in> sets M\" \"Tinv -` A \\<inter> space M \\<in> null_sets M\""], ["proof (state)\nthis:\n  A \\<in> sets M\n  Tinv -` A \\<inter> space M \\<in> null_sets M\n\ngoal (3 subgoals):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M;\n        Tinv -` A \\<inter> space M \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> A \\<in> null_sets M\n 3. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "then"], ["proof (chain)\npicking this:\n  A \\<in> sets M\n  Tinv -` A \\<inter> space M \\<in> null_sets M", "have \"T-`(Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  Tinv -` A \\<inter> space M \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M", "by (metis T_quasi_preserves_null2(1) null_sets.Int_space_eq2 vimage_restr_def)"], ["proof (state)\nthis:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\n\ngoal (3 subgoals):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M;\n        Tinv -` A \\<inter> space M \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> A \\<in> null_sets M\n 3. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "then"], ["proof (chain)\npicking this:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M", "show \"A \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. A \\<in> null_sets M", "using T_Tinv_of_set[OF assms \\<open>A \\<in> sets M\\<close>]"], ["proof (prove)\nusing this:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M = A\n\ngoal (1 subgoal):\n 1. A \\<in> null_sets M", "by auto"], ["proof (state)\nthis:\n  A \\<in> null_sets M\n\ngoal (2 subgoals):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "show [measurable]: \"Tinv \\<in> measurable M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M", "using assms"], ["proof (prove)\nusing this:\n  invertible_qmpt\n\ngoal (1 subgoal):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M", "unfolding Tinv_def invertible_qmpt_def"], ["proof (prove)\nusing this:\n  bij T \\<and> inv T \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. inv T \\<in> M \\<rightarrow>\\<^sub>M M", "by blast"], ["proof (state)\nthis:\n  Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "assume [measurable]: \"A \\<in> sets M\" \"A \\<in> null_sets M\""], ["proof (state)\nthis:\n  A \\<in> sets M\n  A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "then"], ["proof (chain)\npicking this:\n  A \\<in> sets M\n  A \\<in> null_sets M", "have \"T-`(Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  A \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M", "using T_Tinv_of_set[OF assms \\<open>A \\<in> sets M\\<close>]"], ["proof (prove)\nusing this:\n  A \\<in> sets M\n  A \\<in> null_sets M\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M = A\n\ngoal (1 subgoal):\n 1. T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M", "by auto"], ["proof (state)\nthis:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "moreover"], ["proof (state)\nthis:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "have [measurable]: \"Tinv-`A \\<inter> space M \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tinv -` A \\<inter> space M \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  Tinv -` A \\<inter> space M \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> sets M; A \\<in> null_sets M\\<rbrakk>\n       \\<Longrightarrow> Tinv -` A \\<inter> space M \\<in> null_sets M", "ultimately"], ["proof (chain)\npicking this:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\n  Tinv -` A \\<inter> space M \\<in> sets M", "show \"Tinv -` A \\<inter> space M \\<in> null_sets M\""], ["proof (prove)\nusing this:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\n  Tinv -` A \\<inter> space M \\<in> sets M\n\ngoal (1 subgoal):\n 1. Tinv -` A \\<inter> space M \\<in> null_sets M", "using T_meas T_quasi_preserves_null(1) vrestr_of_set"], ["proof (prove)\nusing this:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M\n  Tinv -` A \\<inter> space M \\<in> sets M\n  T \\<in> M \\<rightarrow>\\<^sub>M M\n  ?A \\<in> sets M \\<Longrightarrow>\n  (?A \\<in> null_sets M) = (T --` ?A \\<in> null_sets M)\n  \\<lbrakk>?g \\<in> M \\<rightarrow>\\<^sub>M M; ?A \\<in> sets M\\<rbrakk>\n  \\<Longrightarrow> ?g --` ?A = ?g -` ?A \\<inter> space M\n\ngoal (1 subgoal):\n 1. Tinv -` A \\<inter> space M \\<in> null_sets M", "by presburger"], ["proof (state)\nthis:\n  Tinv -` A \\<inter> space M \\<in> null_sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Tinv_qmpt:\n  assumes \"invertible_qmpt\"\n  shows \"qmpt M Tinv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M Tinv", "unfolding qmpt_def qmpt_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure M \\<and> Tinv \\<in> quasi_measure_preserving M M", "using Tinv_quasi_measure_preserving[OF assms]"], ["proof (prove)\nusing this:\n  Tinv \\<in> quasi_measure_preserving M M\n\ngoal (1 subgoal):\n 1. sigma_finite_measure M \\<and> Tinv \\<in> quasi_measure_preserving M M", "by (simp add: sigma_finite_measure_axioms)"], ["", "end"], ["", "lemma (in mpt) Tinv_measure_preserving:\n  assumes \"invertible_qmpt\"\n  shows \"Tinv \\<in> measure_preserving M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tinv \\<in> measure_preserving M M", "proof (rule measure_preservingI)"], ["proof (state)\ngoal (2 subgoals):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n 2. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       emeasure M (Tinv -` A \\<inter> space M) = emeasure M A", "show [measurable]: \"Tinv \\<in> measurable M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M", "using assms"], ["proof (prove)\nusing this:\n  invertible_qmpt\n\ngoal (1 subgoal):\n 1. Tinv \\<in> M \\<rightarrow>\\<^sub>M M", "unfolding Tinv_def invertible_qmpt_def"], ["proof (prove)\nusing this:\n  bij T \\<and> inv T \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. inv T \\<in> M \\<rightarrow>\\<^sub>M M", "by blast"], ["proof (state)\nthis:\n  Tinv \\<in> M \\<rightarrow>\\<^sub>M M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       emeasure M (Tinv -` A \\<inter> space M) = emeasure M A", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       emeasure M (Tinv -` A \\<inter> space M) = emeasure M A", "assume [measurable]: \"A \\<in> sets M\""], ["proof (state)\nthis:\n  A \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       emeasure M (Tinv -` A \\<inter> space M) = emeasure M A", "have \"A = T-`(Tinv -` A \\<inter> space M) \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = T -` (Tinv -` A \\<inter> space M) \\<inter> space M", "using T_Tinv_of_set[OF assms \\<open>A \\<in> sets M\\<close>]"], ["proof (prove)\nusing this:\n  T -` (Tinv -` A \\<inter> space M) \\<inter> space M = A\n\ngoal (1 subgoal):\n 1. A = T -` (Tinv -` A \\<inter> space M) \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  A = T -` (Tinv -` A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets M \\<Longrightarrow>\n       emeasure M (Tinv -` A \\<inter> space M) = emeasure M A", "then"], ["proof (chain)\npicking this:\n  A = T -` (Tinv -` A \\<inter> space M) \\<inter> space M", "show \"emeasure M (Tinv -` A \\<inter> space M) = emeasure M A\""], ["proof (prove)\nusing this:\n  A = T -` (Tinv -` A \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M (Tinv -` A \\<inter> space M) = emeasure M A", "by (metis T_vrestr_same_emeasure(1) \\<open>A \\<in> sets M\\<close> \\<open>Tinv \\<in> M \\<rightarrow>\\<^sub>M M\\<close> measurable_sets sets.Int_space_eq2 vimage_restr_def)"], ["proof (state)\nthis:\n  emeasure M (Tinv -` A \\<inter> space M) = emeasure M A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in mpt) Tinv_mpt:\n  assumes \"invertible_qmpt\"\n  shows \"mpt M Tinv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M Tinv", "unfolding mpt_def mpt_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M Tinv \\<and> Tinv \\<in> measure_preserving M M", "using Tinv_qmpt[OF assms] Tinv_measure_preserving[OF assms]"], ["proof (prove)\nusing this:\n  qmpt M Tinv\n  Tinv \\<in> measure_preserving M M\n\ngoal (1 subgoal):\n 1. qmpt M Tinv \\<and> Tinv \\<in> measure_preserving M M", "by auto"], ["", "lemma (in fmpt) Tinv_fmpt:\n  assumes \"invertible_qmpt\"\n  shows \"fmpt M Tinv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M Tinv", "unfolding fmpt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M Tinv \\<and> finite_measure M", "using Tinv_mpt[OF assms]"], ["proof (prove)\nusing this:\n  mpt M Tinv\n\ngoal (1 subgoal):\n 1. mpt M Tinv \\<and> finite_measure M", "by (simp add: finite_measure_axioms)"], ["", "lemma (in pmpt) Tinv_fmpt:\n  assumes \"invertible_qmpt\"\n  shows \"pmpt M Tinv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmpt M Tinv", "unfolding pmpt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M Tinv \\<and> prob_space M", "using Tinv_fmpt[OF assms]"], ["proof (prove)\nusing this:\n  fmpt M Tinv\n\ngoal (1 subgoal):\n 1. fmpt M Tinv \\<and> prob_space M", "by (simp add: prob_space_axioms)"], ["", "subsection \\<open>Factors\\<close>"], ["", "text \\<open>Factors of a system are quotients of this system, i.e., systems that can be obtained by\na projection, forgetting some part of the dynamics. It is sometimes possible to transfer a result\nfrom a factor to the original system, making it possible to prove theorems by reduction to a\nsimpler situation.\n\nThe dual notion, extension, is equally important and useful. We only mention factors below, as\nthe results for extension readily follow by considering the original system as a factor of its\nextension.\n\nIn this paragraph, we define factors both in the qmpt and mpt categories, and prove their basic\nproperties.\n\\<close>"], ["", "definition (in qmpt) qmpt_factor::\"('a \\<Rightarrow> 'b) \\<Rightarrow> ('b measure) \\<Rightarrow> ('b \\<Rightarrow> 'b) \\<Rightarrow> bool\"\n  where \"qmpt_factor proj M2 T2 =\n    ((proj \\<in> quasi_measure_preserving M M2) \\<and> (AE x in M. proj (T x) = T2 (proj x)) \\<and> qmpt M2 T2)\""], ["", "lemma (in qmpt) qmpt_factorE:\n  assumes \"qmpt_factor proj M2 T2\"\n  shows \"proj \\<in> quasi_measure_preserving M M2\"\n        \"AE x in M. proj (T x) = T2 (proj x)\"\n        \"qmpt M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj \\<in> quasi_measure_preserving M M2 &&&\n    AE x in M. proj (T x) = T2 (proj x) &&& qmpt M2 T2", "using assms"], ["proof (prove)\nusing this:\n  qmpt_factor proj M2 T2\n\ngoal (1 subgoal):\n 1. proj \\<in> quasi_measure_preserving M M2 &&&\n    AE x in M. proj (T x) = T2 (proj x) &&& qmpt M2 T2", "unfolding qmpt_factor_def"], ["proof (prove)\nusing this:\n  proj \\<in> quasi_measure_preserving M M2 \\<and>\n  (AE x in M. proj (T x) = T2 (proj x)) \\<and> qmpt M2 T2\n\ngoal (1 subgoal):\n 1. proj \\<in> quasi_measure_preserving M M2 &&&\n    AE x in M. proj (T x) = T2 (proj x) &&& qmpt M2 T2", "by auto"], ["", "lemma (in qmpt) qmpt_factor_iterates:\n  assumes \"qmpt_factor proj M2 T2\"\n  shows \"AE x in M. \\<forall>n. proj ((T^^n) x) = (T2^^n) (proj x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "have \"AE x in M. \\<forall>n. proj (T ((T^^n) x)) = T2 (proj ((T^^n) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))", "by (rule T_AE_iterates[OF qmpt_factorE(2)[OF assms]])"], ["proof (state)\nthis:\n  AE x in M. \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "moreover"], ["proof (state)\nthis:\n  AE x in M. \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "{"], ["proof (state)\nthis:\n  AE x in M. \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "assume \"\\<forall>n. proj (T ((T^^n) x)) = T2 (proj ((T^^n) x))\""], ["proof (state)\nthis:\n  \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "then"], ["proof (chain)\npicking this:\n  \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))", "have H: \"proj (T ((T^^n) x)) = T2 (proj ((T^^n) x))\" for n"], ["proof (prove)\nusing this:\n  \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))\n\ngoal (1 subgoal):\n 1. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))", "by auto"], ["proof (state)\nthis:\n  proj (T ((T ^^ ?n2) x)) = T2 (proj ((T ^^ ?n2) x))\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "have \"proj ((T^^n) x) = (T2^^n) (proj x)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "apply (induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. proj ((T ^^ 0) x) = (T2 ^^ 0) (proj x)\n 2. \\<And>n.\n       proj ((T ^^ n) x) = (T2 ^^ n) (proj x) \\<Longrightarrow>\n       proj ((T ^^ Suc n) x) = (T2 ^^ Suc n) (proj x)", "using H"], ["proof (prove)\nusing this:\n  proj (T ((T ^^ ?n2) x)) = T2 (proj ((T ^^ ?n2) x))\n\ngoal (2 subgoals):\n 1. proj ((T ^^ 0) x) = (T2 ^^ 0) (proj x)\n 2. \\<And>n.\n       proj ((T ^^ n) x) = (T2 ^^ n) (proj x) \\<Longrightarrow>\n       proj ((T ^^ Suc n) x) = (T2 ^^ Suc n) (proj x)", "by auto"], ["proof (state)\nthis:\n  proj ((T ^^ ?n2) x) = (T2 ^^ ?n2) (proj x)\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "then"], ["proof (chain)\npicking this:\n  proj ((T ^^ ?n2) x) = (T2 ^^ ?n2) (proj x)", "have \"\\<forall>n. proj ((T^^n) x) = (T2^^n) (proj x)\""], ["proof (prove)\nusing this:\n  proj ((T ^^ ?n2) x) = (T2 ^^ ?n2) (proj x)\n\ngoal (1 subgoal):\n 1. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "}"], ["proof (state)\nthis:\n  \\<forall>n.\n     proj (T ((T ^^ n) ?x4)) = T2 (proj ((T ^^ n) ?x4)) \\<Longrightarrow>\n  \\<forall>n. proj ((T ^^ n) ?x4) = (T2 ^^ n) (proj ?x4)\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "ultimately"], ["proof (chain)\npicking this:\n  AE x in M. \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))\n  \\<forall>n.\n     proj (T ((T ^^ n) ?x4)) = T2 (proj ((T ^^ n) ?x4)) \\<Longrightarrow>\n  \\<forall>n. proj ((T ^^ n) ?x4) = (T2 ^^ n) (proj ?x4)", "show ?thesis"], ["proof (prove)\nusing this:\n  AE x in M. \\<forall>n. proj (T ((T ^^ n) x)) = T2 (proj ((T ^^ n) x))\n  \\<forall>n.\n     proj (T ((T ^^ n) ?x4)) = T2 (proj ((T ^^ n) ?x4)) \\<Longrightarrow>\n  \\<forall>n. proj ((T ^^ n) ?x4) = (T2 ^^ n) (proj ?x4)\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)", "by fast"], ["proof (state)\nthis:\n  AE x in M. \\<forall>n. proj ((T ^^ n) x) = (T2 ^^ n) (proj x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in qmpt) qmpt_factorI:\n  assumes \"proj \\<in> quasi_measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"qmpt M2 T2\"\n  shows \"qmpt_factor proj M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "using assms"], ["proof (prove)\nusing this:\n  proj \\<in> quasi_measure_preserving M M2\n  AE x in M. proj (T x) = T2 (proj x)\n  qmpt M2 T2\n\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "unfolding qmpt_factor_def"], ["proof (prove)\nusing this:\n  proj \\<in> quasi_measure_preserving M M2\n  AE x in M. proj (T x) = T2 (proj x)\n  qmpt M2 T2\n\ngoal (1 subgoal):\n 1. proj \\<in> quasi_measure_preserving M M2 \\<and>\n    (AE x in M. proj (T x) = T2 (proj x)) \\<and> qmpt M2 T2", "by auto"], ["", "text \\<open>When there is a quasi-measure-preserving projection, then the quotient map\nautomatically is quasi-measure-preserving. The same goes for measure-preservation below.\\<close>"], ["", "lemma (in qmpt) qmpt_factorI':\n  assumes \"proj \\<in> quasi_measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"sigma_finite_measure M2\"\n          \"T2 \\<in> measurable M2 M2\"\n  shows \"qmpt_factor proj M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "have [measurable]: \"T \\<in> measurable M M\"\n                     \"T2 \\<in> measurable M2 M2\"\n                     \"proj \\<in> measurable M M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M &&&\n    T2 \\<in> M2 \\<rightarrow>\\<^sub>M M2 &&&\n    proj \\<in> M \\<rightarrow>\\<^sub>M M2", "using assms(4) quasi_measure_preservingE(1)[OF assms(1)]"], ["proof (prove)\nusing this:\n  T2 \\<in> M2 \\<rightarrow>\\<^sub>M M2\n  proj \\<in> M \\<rightarrow>\\<^sub>M M2\n\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M &&&\n    T2 \\<in> M2 \\<rightarrow>\\<^sub>M M2 &&&\n    proj \\<in> M \\<rightarrow>\\<^sub>M M2", "by auto"], ["proof (state)\nthis:\n  T \\<in> M \\<rightarrow>\\<^sub>M M\n  T2 \\<in> M2 \\<rightarrow>\\<^sub>M M2\n  proj \\<in> M \\<rightarrow>\\<^sub>M M2\n\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "have *: \"(T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)\" if \"A \\<in> sets M2\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "obtain U where U: \"\\<And>x. x \\<in> space M - U \\<Longrightarrow> proj (T x) = T2 (proj x)\" \"U \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>\\<And>x.\n                    x \\<in> space M - U \\<Longrightarrow>\n                    proj (T x) = T2 (proj x);\n         U \\<in> null_sets M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using AE_E3[OF assms(2)]"], ["proof (prove)\nusing this:\n  (\\<And>N.\n      \\<lbrakk>\\<And>x.\n                  x \\<in> space M - N \\<Longrightarrow>\n                  proj (T x) = T2 (proj x);\n       N \\<in> null_sets M\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>\\<And>x.\n                    x \\<in> space M - U \\<Longrightarrow>\n                    proj (T x) = T2 (proj x);\n         U \\<in> null_sets M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?x2 \\<in> space M - U \\<Longrightarrow> proj (T ?x2) = T2 (proj ?x2)\n  U \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "then"], ["proof (chain)\npicking this:\n  ?x2 \\<in> space M - U \\<Longrightarrow> proj (T ?x2) = T2 (proj ?x2)\n  U \\<in> null_sets M", "have [measurable]: \"U \\<in> sets M\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> space M - U \\<Longrightarrow> proj (T ?x2) = T2 (proj ?x2)\n  U \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. U \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  U \\<in> sets M\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have [measurable]: \"A \\<in> sets M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> sets M2", "using that"], ["proof (prove)\nusing this:\n  A \\<in> sets M2\n\ngoal (1 subgoal):\n 1. A \\<in> sets M2", "by simp"], ["proof (state)\nthis:\n  A \\<in> sets M2\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have e1: \"(T-`(proj-`A \\<inter> space M)) \\<inter> space M = T-`(proj-`A) \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T -` (proj -` A \\<inter> space M) \\<inter> space M =\n    T -` proj -` A \\<inter> space M", "using subset_eq"], ["proof (prove)\nusing this:\n  (?A \\<subseteq> ?B) = (\\<forall>x\\<in>?A. x \\<in> ?B)\n\ngoal (1 subgoal):\n 1. T -` (proj -` A \\<inter> space M) \\<inter> space M =\n    T -` proj -` A \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  T -` (proj -` A \\<inter> space M) \\<inter> space M =\n  T -` proj -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have e2: \"T-`(proj-`A) \\<inter> space M - U = proj-`(T2-`A) \\<inter> space M - U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T -` proj -` A \\<inter> space M - U =\n    proj -` T2 -` A \\<inter> space M - U", "using U(1)"], ["proof (prove)\nusing this:\n  ?x2 \\<in> space M - U \\<Longrightarrow> proj (T ?x2) = T2 (proj ?x2)\n\ngoal (1 subgoal):\n 1. T -` proj -` A \\<inter> space M - U =\n    proj -` T2 -` A \\<inter> space M - U", "by auto"], ["proof (state)\nthis:\n  T -` proj -` A \\<inter> space M - U = proj -` T2 -` A \\<inter> space M - U\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have e3: \"proj-`(T2-`A) \\<inter> space M = proj-`(T2-`A \\<inter> space M2) \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj -` T2 -` A \\<inter> space M =\n    proj -` (T2 -` A \\<inter> space M2) \\<inter> space M", "by (auto, meson \\<open>proj \\<in> M \\<rightarrow>\\<^sub>M M2\\<close> measurable_space)"], ["proof (state)\nthis:\n  proj -` T2 -` A \\<inter> space M =\n  proj -` (T2 -` A \\<inter> space M2) \\<inter> space M\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have \"A \\<in> null_sets M2 \\<longleftrightarrow> proj-`A \\<inter> space M \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<in> null_sets M2) = (proj -` A \\<inter> space M \\<in> null_sets M)", "using quasi_measure_preservingE(2)[OF assms(1)]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M2 \\<Longrightarrow>\n  (proj -` ?A \\<inter> space M \\<in> null_sets M) = (?A \\<in> null_sets M2)\n\ngoal (1 subgoal):\n 1. (A \\<in> null_sets M2) = (proj -` A \\<inter> space M \\<in> null_sets M)", "by simp"], ["proof (state)\nthis:\n  (A \\<in> null_sets M2) = (proj -` A \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "also"], ["proof (state)\nthis:\n  (A \\<in> null_sets M2) = (proj -` A \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have \"... \\<longleftrightarrow> (T-`(proj-`A \\<inter> space M)) \\<inter> space M \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj -` A \\<inter> space M \\<in> null_sets M) =\n    (T -` (proj -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M)", "by (rule quasi_measure_preservingE(2)[OF Tqm, symmetric], auto)"], ["proof (state)\nthis:\n  (proj -` A \\<inter> space M \\<in> null_sets M) =\n  (T -` (proj -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "also"], ["proof (state)\nthis:\n  (proj -` A \\<inter> space M \\<in> null_sets M) =\n  (T -` (proj -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have \"... \\<longleftrightarrow> T-`(proj-`A) \\<inter> space M \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T -` (proj -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M) =\n    (T -` proj -` A \\<inter> space M \\<in> null_sets M)", "using e1"], ["proof (prove)\nusing this:\n  T -` (proj -` A \\<inter> space M) \\<inter> space M =\n  T -` proj -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. (T -` (proj -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M) =\n    (T -` proj -` A \\<inter> space M \\<in> null_sets M)", "by simp"], ["proof (state)\nthis:\n  (T -` (proj -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M) =\n  (T -` proj -` A \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "also"], ["proof (state)\nthis:\n  (T -` (proj -` A \\<inter> space M) \\<inter> space M \\<in> null_sets M) =\n  (T -` proj -` A \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have \"... \\<longleftrightarrow> T-`(proj-`A) \\<inter> space M - U \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T -` proj -` A \\<inter> space M \\<in> null_sets M) =\n    (T -` proj -` A \\<inter> space M - U \\<in> null_sets M)", "using emeasure_Diff_null_set[OF \\<open>U \\<in> null_sets M\\<close>]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow> emeasure M (?A - U) = emeasure M ?A\n\ngoal (1 subgoal):\n 1. (T -` proj -` A \\<inter> space M \\<in> null_sets M) =\n    (T -` proj -` A \\<inter> space M - U \\<in> null_sets M)", "unfolding null_sets_def"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow> emeasure M (?A - U) = emeasure M ?A\n\ngoal (1 subgoal):\n 1. (T -` proj -` A \\<inter> space M\n     \\<in> {N \\<in> sets M. emeasure M N = 0}) =\n    (T -` proj -` A \\<inter> space M - U\n     \\<in> {N \\<in> sets M. emeasure M N = 0})", "by auto"], ["proof (state)\nthis:\n  (T -` proj -` A \\<inter> space M \\<in> null_sets M) =\n  (T -` proj -` A \\<inter> space M - U \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "also"], ["proof (state)\nthis:\n  (T -` proj -` A \\<inter> space M \\<in> null_sets M) =\n  (T -` proj -` A \\<inter> space M - U \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have \"... \\<longleftrightarrow> proj-`(T2-`A) \\<inter> space M - U \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T -` proj -` A \\<inter> space M - U \\<in> null_sets M) =\n    (proj -` T2 -` A \\<inter> space M - U \\<in> null_sets M)", "using e2"], ["proof (prove)\nusing this:\n  T -` proj -` A \\<inter> space M - U = proj -` T2 -` A \\<inter> space M - U\n\ngoal (1 subgoal):\n 1. (T -` proj -` A \\<inter> space M - U \\<in> null_sets M) =\n    (proj -` T2 -` A \\<inter> space M - U \\<in> null_sets M)", "by simp"], ["proof (state)\nthis:\n  (T -` proj -` A \\<inter> space M - U \\<in> null_sets M) =\n  (proj -` T2 -` A \\<inter> space M - U \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "also"], ["proof (state)\nthis:\n  (T -` proj -` A \\<inter> space M - U \\<in> null_sets M) =\n  (proj -` T2 -` A \\<inter> space M - U \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have \"... \\<longleftrightarrow> proj-`(T2-`A) \\<inter> space M \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj -` T2 -` A \\<inter> space M - U \\<in> null_sets M) =\n    (proj -` T2 -` A \\<inter> space M \\<in> null_sets M)", "using emeasure_Diff_null_set[OF \\<open>U \\<in> null_sets M\\<close>]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow> emeasure M (?A - U) = emeasure M ?A\n\ngoal (1 subgoal):\n 1. (proj -` T2 -` A \\<inter> space M - U \\<in> null_sets M) =\n    (proj -` T2 -` A \\<inter> space M \\<in> null_sets M)", "unfolding null_sets_def"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow> emeasure M (?A - U) = emeasure M ?A\n\ngoal (1 subgoal):\n 1. (proj -` T2 -` A \\<inter> space M - U\n     \\<in> {N \\<in> sets M. emeasure M N = 0}) =\n    (proj -` T2 -` A \\<inter> space M\n     \\<in> {N \\<in> sets M. emeasure M N = 0})", "by auto"], ["proof (state)\nthis:\n  (proj -` T2 -` A \\<inter> space M - U \\<in> null_sets M) =\n  (proj -` T2 -` A \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "also"], ["proof (state)\nthis:\n  (proj -` T2 -` A \\<inter> space M - U \\<in> null_sets M) =\n  (proj -` T2 -` A \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have \"... \\<longleftrightarrow> proj-`(T2-`A \\<inter> space M2) \\<inter> space M \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj -` T2 -` A \\<inter> space M \\<in> null_sets M) =\n    (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M \\<in> null_sets M)", "using e3"], ["proof (prove)\nusing this:\n  proj -` T2 -` A \\<inter> space M =\n  proj -` (T2 -` A \\<inter> space M2) \\<inter> space M\n\ngoal (1 subgoal):\n 1. (proj -` T2 -` A \\<inter> space M \\<in> null_sets M) =\n    (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M \\<in> null_sets M)", "by simp"], ["proof (state)\nthis:\n  (proj -` T2 -` A \\<inter> space M \\<in> null_sets M) =\n  (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "also"], ["proof (state)\nthis:\n  (proj -` T2 -` A \\<inter> space M \\<in> null_sets M) =\n  (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M \\<in> null_sets M)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "have \"... \\<longleftrightarrow> T2-`A \\<inter> space M2 \\<in> null_sets M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M\n     \\<in> null_sets M) =\n    (T2 -` A \\<inter> space M2 \\<in> null_sets M2)", "using quasi_measure_preservingE(2)[OF assms(1), of \"T2-`A \\<inter> space M2\"]"], ["proof (prove)\nusing this:\n  T2 -` A \\<inter> space M2 \\<in> sets M2 \\<Longrightarrow>\n  (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M \\<in> null_sets M) =\n  (T2 -` A \\<inter> space M2 \\<in> null_sets M2)\n\ngoal (1 subgoal):\n 1. (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M\n     \\<in> null_sets M) =\n    (T2 -` A \\<inter> space M2 \\<in> null_sets M2)", "by simp"], ["proof (state)\nthis:\n  (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M \\<in> null_sets M) =\n  (T2 -` A \\<inter> space M2 \\<in> null_sets M2)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "finally"], ["proof (chain)\npicking this:\n  (A \\<in> null_sets M2) = (T2 -` A \\<inter> space M2 \\<in> null_sets M2)", "show \"T2-`A \\<inter> space M2 \\<in> null_sets M2 \\<longleftrightarrow> A \\<in> null_sets M2\""], ["proof (prove)\nusing this:\n  (A \\<in> null_sets M2) = (T2 -` A \\<inter> space M2 \\<in> null_sets M2)\n\ngoal (1 subgoal):\n 1. (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)", "by simp"], ["proof (state)\nthis:\n  (T2 -` A \\<inter> space M2 \\<in> null_sets M2) = (A \\<in> null_sets M2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?A2 \\<in> sets M2 \\<Longrightarrow>\n  (T2 -` ?A2 \\<inter> space M2 \\<in> null_sets M2) =\n  (?A2 \\<in> null_sets M2)\n\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "by (intro qmpt_factorI qmpt_I) (auto simp add: assms *)"], ["proof (state)\nthis:\n  qmpt_factor proj M2 T2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qmpt_factor_compose:\n  assumes \"qmpt M1 T1\"\n          \"qmpt.qmpt_factor M1 T1 proj1 M2 T2\"\n          \"qmpt.qmpt_factor M2 T2 proj2 M3 T3\"\n  shows \"qmpt.qmpt_factor M1 T1 (proj2 o proj1) M3 T3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt.qmpt_factor M1 T1 (proj2 \\<circ> proj1) M3 T3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. qmpt.qmpt_factor M1 T1 (proj2 \\<circ> proj1) M3 T3", "have *: \"proj1 \\<in> quasi_measure_preserving M1 M2 \\<Longrightarrow> AE x in M2. proj2 (T2 x) = T3 (proj2 x)\n      \\<Longrightarrow> (AE x in M1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow> proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "assume \"AE y in M2. proj2 (T2 y) = T3 (proj2 y)\"\n           \"proj1 \\<in> quasi_measure_preserving M1 M2\""], ["proof (state)\nthis:\n  AE y in M2. proj2 (T2 y) = T3 (proj2 y)\n  proj1 \\<in> quasi_measure_preserving M1 M2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "then"], ["proof (chain)\npicking this:\n  AE y in M2. proj2 (T2 y) = T3 (proj2 y)\n  proj1 \\<in> quasi_measure_preserving M1 M2", "have \"AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\""], ["proof (prove)\nusing this:\n  AE y in M2. proj2 (T2 y) = T3 (proj2 y)\n  proj1 \\<in> quasi_measure_preserving M1 M2\n\ngoal (1 subgoal):\n 1. AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "using quasi_measure_preserving_AE"], ["proof (prove)\nusing this:\n  AE y in M2. proj2 (T2 y) = T3 (proj2 y)\n  proj1 \\<in> quasi_measure_preserving M1 M2\n  \\<lbrakk>?f \\<in> quasi_measure_preserving ?M ?N;\n   almost_everywhere ?N ?P\\<rbrakk>\n  \\<Longrightarrow> AE x in ?M. ?P (?f x)\n\ngoal (1 subgoal):\n 1. AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "by auto"], ["proof (state)\nthis:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "moreover"], ["proof (state)\nthis:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "{"], ["proof (state)\nthis:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "assume \"proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\""], ["proof (state)\nthis:\n  proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "then"], ["proof (chain)\npicking this:\n  proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "have \"proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow> proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\""], ["proof (prove)\nusing this:\n  proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow>\n    proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "by auto"], ["proof (state)\nthis:\n  proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow>\n  proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "}"], ["proof (state)\nthis:\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2)) \\<Longrightarrow>\n  proj1 (T1 ?x2) = T2 (proj1 ?x2) \\<longrightarrow>\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "ultimately"], ["proof (chain)\npicking this:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2)) \\<Longrightarrow>\n  proj1 (T1 ?x2) = T2 (proj1 ?x2) \\<longrightarrow>\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2))", "show \"AE x in M1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow> proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\""], ["proof (prove)\nusing this:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2)) \\<Longrightarrow>\n  proj1 (T1 ?x2) = T2 (proj1 ?x2) \\<longrightarrow>\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2))\n\ngoal (1 subgoal):\n 1. AE x in M1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow>\n                proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "by auto"], ["proof (state)\nthis:\n  AE x in M1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow>\n              proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>proj1 \\<in> quasi_measure_preserving M1 M2;\n   AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n  \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                T2 (proj1 x) \\<longrightarrow>\n                                proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. qmpt.qmpt_factor M1 T1 (proj2 \\<circ> proj1) M3 T3", "interpret I: qmpt M1 T1"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M1 T1", "using assms(1)"], ["proof (prove)\nusing this:\n  qmpt M1 T1\n\ngoal (1 subgoal):\n 1. qmpt M1 T1", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. I.qmpt_factor (proj2 \\<circ> proj1) M3 T3", "interpret J: qmpt M2 T2"], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt M2 T2", "using I.qmpt_factorE(3)[OF assms(2)]"], ["proof (prove)\nusing this:\n  qmpt M2 T2\n\ngoal (1 subgoal):\n 1. qmpt M2 T2", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. I.qmpt_factor (proj2 \\<circ> proj1) M3 T3", "show \"I.qmpt_factor (proj2 o proj1) M3 T3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I.qmpt_factor (proj2 \\<circ> proj1) M3 T3", "apply (rule I.qmpt_factorI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. proj2 \\<circ> proj1 \\<in> quasi_measure_preserving M1 M3\n 2. AE x in M1. (proj2 \\<circ> proj1) (T1 x) = T3 ((proj2 \\<circ> proj1) x)\n 3. qmpt M3 T3", "using I.qmpt_factorE[OF assms(2)] J.qmpt_factorE[OF assms(3)]"], ["proof (prove)\nusing this:\n  proj1 \\<in> quasi_measure_preserving M1 M2\n  AE x in M1. proj1 (T1 x) = T2 (proj1 x)\n  qmpt M2 T2\n  proj2 \\<in> quasi_measure_preserving M2 M3\n  AE x in M2. proj2 (T2 x) = T3 (proj2 x)\n  qmpt M3 T3\n\ngoal (3 subgoals):\n 1. proj2 \\<circ> proj1 \\<in> quasi_measure_preserving M1 M3\n 2. AE x in M1. (proj2 \\<circ> proj1) (T1 x) = T3 ((proj2 \\<circ> proj1) x)\n 3. qmpt M3 T3", "by (auto simp add: quasi_measure_preserving_comp *)"], ["proof (state)\nthis:\n  I.qmpt_factor (proj2 \\<circ> proj1) M3 T3\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The left shift on natural integers is a very natural dynamical system, that can be used to\nmodel many systems as we see below. For invertible systems, one uses rather all the integers.\\<close>"], ["", "definition nat_left_shift::\"(nat \\<Rightarrow> 'a) \\<Rightarrow> (nat \\<Rightarrow> 'a)\"\n  where \"nat_left_shift x = (\\<lambda>i. x (i+1))\""], ["", "lemma nat_left_shift_continuous [intro, continuous_intros]:\n  \"continuous_on UNIV nat_left_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV nat_left_shift", "by (rule continuous_on_coordinatewise_then_product, auto simp add: nat_left_shift_def)"], ["", "lemma nat_left_shift_measurable [intro, measurable]:\n  \"nat_left_shift \\<in> measurable borel borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_left_shift \\<in> borel_measurable borel", "by (rule borel_measurable_continuous_onI, auto)"], ["", "definition int_left_shift::\"(int \\<Rightarrow> 'a) \\<Rightarrow> (int \\<Rightarrow> 'a)\"\n  where \"int_left_shift x = (\\<lambda>i. x (i+1))\""], ["", "definition int_right_shift::\"(int \\<Rightarrow> 'a) \\<Rightarrow> (int \\<Rightarrow> 'a)\"\n  where \"int_right_shift x = (\\<lambda>i. x (i-1))\""], ["", "lemma int_shift_continuous [intro, continuous_intros]:\n  \"continuous_on UNIV int_left_shift\"\n  \"continuous_on UNIV int_right_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV int_left_shift &&& continuous_on UNIV int_right_shift", "apply (rule continuous_on_coordinatewise_then_product, auto simp add: int_left_shift_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV int_right_shift", "apply (rule continuous_on_coordinatewise_then_product, auto simp add: int_right_shift_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma int_shift_measurable [intro, measurable]:\n  \"int_left_shift \\<in> measurable borel borel\"\n  \"int_right_shift \\<in> measurable borel borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int_left_shift \\<in> borel_measurable borel &&&\n    int_right_shift \\<in> borel_measurable borel", "by (rule borel_measurable_continuous_onI, auto)+"], ["", "lemma int_shift_bij:\n  \"bij int_left_shift\" \"inv int_left_shift = int_right_shift\"\n  \"bij int_right_shift\" \"inv int_right_shift = int_left_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bij int_left_shift &&& inv int_left_shift = int_right_shift) &&&\n    bij int_right_shift &&& inv int_right_shift = int_left_shift", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. bij int_left_shift\n 2. inv int_left_shift = int_right_shift\n 3. bij int_right_shift\n 4. inv int_right_shift = int_left_shift", "show \"bij int_left_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij int_left_shift", "apply (rule bij_betw_byWitness[where ?f' = \"\\<lambda>x. (\\<lambda>i. x (i-1))\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>UNIV. (\\<lambda>i. int_left_shift a (i - 1)) = a\n 2. \\<forall>a'\\<in>UNIV. int_left_shift (\\<lambda>i. a' (i - 1)) = a'\n 3. range int_left_shift \\<subseteq> UNIV\n 4. range (\\<lambda>x i. x (i - 1)) \\<subseteq> UNIV", "unfolding int_left_shift_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>UNIV. (\\<lambda>i. a (i - 1 + 1)) = a\n 2. \\<forall>a'\\<in>UNIV. (\\<lambda>i. a' (i + 1 - 1)) = a'\n 3. range (\\<lambda>x i. x (i + 1)) \\<subseteq> UNIV\n 4. range (\\<lambda>x i. x (i - 1)) \\<subseteq> UNIV", "by auto"], ["proof (state)\nthis:\n  bij int_left_shift\n\ngoal (3 subgoals):\n 1. inv int_left_shift = int_right_shift\n 2. bij int_right_shift\n 3. inv int_right_shift = int_left_shift", "show \"inv int_left_shift = int_right_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv int_left_shift = int_right_shift", "apply (rule inv_equality)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. int_right_shift (int_left_shift x) = x\n 2. \\<And>y. int_left_shift (int_right_shift y) = y", "unfolding int_left_shift_def int_right_shift_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. (\\<lambda>i. x (i - 1 + 1)) = x\n 2. \\<And>y. (\\<lambda>i. y (i + 1 - 1)) = y", "by auto"], ["proof (state)\nthis:\n  inv int_left_shift = int_right_shift\n\ngoal (2 subgoals):\n 1. bij int_right_shift\n 2. inv int_right_shift = int_left_shift", "show \"bij int_right_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij int_right_shift", "apply (rule bij_betw_byWitness[where ?f' = \"\\<lambda>x. (\\<lambda>i. x (i+1))\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>UNIV. (\\<lambda>i. int_right_shift a (i + 1)) = a\n 2. \\<forall>a'\\<in>UNIV. int_right_shift (\\<lambda>i. a' (i + 1)) = a'\n 3. range int_right_shift \\<subseteq> UNIV\n 4. range (\\<lambda>x i. x (i + 1)) \\<subseteq> UNIV", "unfolding int_right_shift_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>UNIV. (\\<lambda>i. a (i + 1 - 1)) = a\n 2. \\<forall>a'\\<in>UNIV. (\\<lambda>i. a' (i - 1 + 1)) = a'\n 3. range (\\<lambda>x i. x (i - 1)) \\<subseteq> UNIV\n 4. range (\\<lambda>x i. x (i + 1)) \\<subseteq> UNIV", "by auto"], ["proof (state)\nthis:\n  bij int_right_shift\n\ngoal (1 subgoal):\n 1. inv int_right_shift = int_left_shift", "show \"inv int_right_shift = int_left_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv int_right_shift = int_left_shift", "apply (rule inv_equality)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. int_left_shift (int_right_shift x) = x\n 2. \\<And>y. int_right_shift (int_left_shift y) = y", "unfolding int_left_shift_def int_right_shift_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. (\\<lambda>i. x (i + 1 - 1)) = x\n 2. \\<And>y. (\\<lambda>i. y (i - 1 + 1)) = y", "by auto"], ["proof (state)\nthis:\n  inv int_right_shift = int_left_shift\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in qmpt) qmpt_factor_projection:\n  fixes f::\"'a \\<Rightarrow> ('b::second_countable_topology)\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\"\n      and \"sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\"\n  shows \"qmpt_factor (\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) (distr M borel (\\<lambda>x. (\\<lambda>n. f ((T^^n)x)))) nat_left_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt_factor (\\<lambda>x n. f ((T ^^ n) x))\n     (distr M borel (\\<lambda>x n. f ((T ^^ n) x))) nat_left_shift", "proof (rule qmpt_factorI')"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<lambda>x n. f ((T ^^ n) x))\n    \\<in> quasi_measure_preserving M\n           (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 2. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n 3. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 4. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "have * [measurable]: \"(\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M", "using measurable_coordinatewise_then_product"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      (\\<lambda>x. ?f x i) \\<in> borel_measurable ?M) \\<Longrightarrow>\n  ?f \\<in> borel_measurable ?M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M\n\ngoal (4 subgoals):\n 1. (\\<lambda>x n. f ((T ^^ n) x))\n    \\<in> quasi_measure_preserving M\n           (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 2. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n 3. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 4. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "show \"(\\<lambda>x n. f ((T ^^ n) x)) \\<in> quasi_measure_preserving M (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x))\n    \\<in> quasi_measure_preserving M\n           (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "by (rule measure_preserving_is_quasi_measure_preserving[OF measure_preserving_distr'[OF *]])"], ["proof (state)\nthis:\n  (\\<lambda>x n. f ((T ^^ n) x))\n  \\<in> quasi_measure_preserving M\n         (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n\ngoal (3 subgoals):\n 1. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n 2. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 3. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "have \"(\\<lambda>n. f ((T ^^ n) (T x))) = nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f ((T ^^ n) (T x))) =\n    nat_left_shift (\\<lambda>n. f ((T ^^ n) x))", "unfolding nat_left_shift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f ((T ^^ n) (T x))) = (\\<lambda>i. f ((T ^^ (i + 1)) x))", "by (auto simp add: funpow_swap1)"], ["proof (state)\nthis:\n  (\\<lambda>n. f ((T ^^ n) (T ?x2))) =\n  nat_left_shift (\\<lambda>n. f ((T ^^ n) ?x2))\n\ngoal (3 subgoals):\n 1. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n 2. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 3. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. f ((T ^^ n) (T ?x2))) =\n  nat_left_shift (\\<lambda>n. f ((T ^^ n) ?x2))", "show \"AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) = nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. f ((T ^^ n) (T ?x2))) =\n  nat_left_shift (\\<lambda>n. f ((T ^^ n) ?x2))\n\ngoal (1 subgoal):\n 1. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))", "by simp"], ["proof (state)\nthis:\n  AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n             nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n\ngoal (2 subgoals):\n 1. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 2. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "qed (auto simp add: assms(2))"], ["", "text \\<open>Let us now define factors of measure-preserving transformations, in the same way\nas above.\\<close>"], ["", "definition (in mpt) mpt_factor::\"('a \\<Rightarrow> 'b) \\<Rightarrow> ('b measure) \\<Rightarrow> ('b \\<Rightarrow> 'b) \\<Rightarrow> bool\"\n  where \"mpt_factor proj M2 T2 =\n    ((proj \\<in> measure_preserving M M2) \\<and> (AE x in M. proj (T x) = T2 (proj x)) \\<and> mpt M2 T2)\""], ["", "lemma (in mpt) mpt_factor_is_qmpt_factor:\n  assumes \"mpt_factor proj M2 T2\"\n  shows \"qmpt_factor proj M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "using assms"], ["proof (prove)\nusing this:\n  mpt_factor proj M2 T2\n\ngoal (1 subgoal):\n 1. qmpt_factor proj M2 T2", "unfolding mpt_factor_def qmpt_factor_def"], ["proof (prove)\nusing this:\n  proj \\<in> measure_preserving M M2 \\<and>\n  (AE x in M. proj (T x) = T2 (proj x)) \\<and> mpt M2 T2\n\ngoal (1 subgoal):\n 1. proj \\<in> quasi_measure_preserving M M2 \\<and>\n    (AE x in M. proj (T x) = T2 (proj x)) \\<and> qmpt M2 T2", "by (simp add: measure_preserving_is_quasi_measure_preserving mpt_def)"], ["", "lemma (in mpt) mpt_factorE:\n  assumes \"mpt_factor proj M2 T2\"\n  shows \"proj \\<in> measure_preserving M M2\"\n        \"AE x in M. proj (T x) = T2 (proj x)\"\n        \"mpt M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj \\<in> measure_preserving M M2 &&&\n    AE x in M. proj (T x) = T2 (proj x) &&& mpt M2 T2", "using assms"], ["proof (prove)\nusing this:\n  mpt_factor proj M2 T2\n\ngoal (1 subgoal):\n 1. proj \\<in> measure_preserving M M2 &&&\n    AE x in M. proj (T x) = T2 (proj x) &&& mpt M2 T2", "unfolding mpt_factor_def"], ["proof (prove)\nusing this:\n  proj \\<in> measure_preserving M M2 \\<and>\n  (AE x in M. proj (T x) = T2 (proj x)) \\<and> mpt M2 T2\n\ngoal (1 subgoal):\n 1. proj \\<in> measure_preserving M M2 &&&\n    AE x in M. proj (T x) = T2 (proj x) &&& mpt M2 T2", "by auto"], ["", "lemma (in mpt) mpt_factorI:\n  assumes \"proj \\<in> measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"mpt M2 T2\"\n  shows \"mpt_factor proj M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt_factor proj M2 T2", "using assms"], ["proof (prove)\nusing this:\n  proj \\<in> measure_preserving M M2\n  AE x in M. proj (T x) = T2 (proj x)\n  mpt M2 T2\n\ngoal (1 subgoal):\n 1. mpt_factor proj M2 T2", "unfolding mpt_factor_def"], ["proof (prove)\nusing this:\n  proj \\<in> measure_preserving M M2\n  AE x in M. proj (T x) = T2 (proj x)\n  mpt M2 T2\n\ngoal (1 subgoal):\n 1. proj \\<in> measure_preserving M M2 \\<and>\n    (AE x in M. proj (T x) = T2 (proj x)) \\<and> mpt M2 T2", "by auto"], ["", "text \\<open>When there is a measure-preserving projection commuting with the dynamics, and the\ndynamics above preserves the measure, then so does the dynamics below.\\<close>"], ["", "lemma (in mpt) mpt_factorI':\n  assumes \"proj \\<in> measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"sigma_finite_measure M2\"\n          \"T2 \\<in> measurable M2 M2\"\n  shows \"mpt_factor proj M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt_factor proj M2 T2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mpt_factor proj M2 T2", "have [measurable]: \"T \\<in> measurable M M\"\n                     \"T2 \\<in> measurable M2 M2\"\n                     \"proj \\<in> measurable M M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M &&&\n    T2 \\<in> M2 \\<rightarrow>\\<^sub>M M2 &&&\n    proj \\<in> M \\<rightarrow>\\<^sub>M M2", "using assms(4) measure_preservingE(1)[OF assms(1)]"], ["proof (prove)\nusing this:\n  T2 \\<in> M2 \\<rightarrow>\\<^sub>M M2\n  proj \\<in> M \\<rightarrow>\\<^sub>M M2\n\ngoal (1 subgoal):\n 1. T \\<in> M \\<rightarrow>\\<^sub>M M &&&\n    T2 \\<in> M2 \\<rightarrow>\\<^sub>M M2 &&&\n    proj \\<in> M \\<rightarrow>\\<^sub>M M2", "by auto"], ["proof (state)\nthis:\n  T \\<in> M \\<rightarrow>\\<^sub>M M\n  T2 \\<in> M2 \\<rightarrow>\\<^sub>M M2\n  proj \\<in> M \\<rightarrow>\\<^sub>M M2\n\ngoal (1 subgoal):\n 1. mpt_factor proj M2 T2", "have *: \"emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A\" if \"A \\<in> sets M2\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "obtain U where U: \"\\<And>x. x \\<in> space M - U \\<Longrightarrow> proj (T x) = T2 (proj x)\" \"U \\<in> null_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>\\<And>x.\n                    x \\<in> space M - U \\<Longrightarrow>\n                    proj (T x) = T2 (proj x);\n         U \\<in> null_sets M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using AE_E3[OF assms(2)]"], ["proof (prove)\nusing this:\n  (\\<And>N.\n      \\<lbrakk>\\<And>x.\n                  x \\<in> space M - N \\<Longrightarrow>\n                  proj (T x) = T2 (proj x);\n       N \\<in> null_sets M\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>\\<And>x.\n                    x \\<in> space M - U \\<Longrightarrow>\n                    proj (T x) = T2 (proj x);\n         U \\<in> null_sets M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?x3 \\<in> space M - U \\<Longrightarrow> proj (T ?x3) = T2 (proj ?x3)\n  U \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "then"], ["proof (chain)\npicking this:\n  ?x3 \\<in> space M - U \\<Longrightarrow> proj (T ?x3) = T2 (proj ?x3)\n  U \\<in> null_sets M", "have [measurable]: \"U \\<in> sets M\""], ["proof (prove)\nusing this:\n  ?x3 \\<in> space M - U \\<Longrightarrow> proj (T ?x3) = T2 (proj ?x3)\n  U \\<in> null_sets M\n\ngoal (1 subgoal):\n 1. U \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  U \\<in> sets M\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have [measurable]: \"A \\<in> sets M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> sets M2", "using that"], ["proof (prove)\nusing this:\n  A \\<in> sets M2\n\ngoal (1 subgoal):\n 1. A \\<in> sets M2", "by simp"], ["proof (state)\nthis:\n  A \\<in> sets M2\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have e1: \"(T-`(proj-`A \\<inter> space M)) \\<inter> space M = T-`(proj-`A) \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T -` (proj -` A \\<inter> space M) \\<inter> space M =\n    T -` proj -` A \\<inter> space M", "using subset_eq"], ["proof (prove)\nusing this:\n  (?A \\<subseteq> ?B) = (\\<forall>x\\<in>?A. x \\<in> ?B)\n\ngoal (1 subgoal):\n 1. T -` (proj -` A \\<inter> space M) \\<inter> space M =\n    T -` proj -` A \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  T -` (proj -` A \\<inter> space M) \\<inter> space M =\n  T -` proj -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have e2: \"T-`(proj-`A) \\<inter> space M - U = proj-`(T2-`A) \\<inter> space M - U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T -` proj -` A \\<inter> space M - U =\n    proj -` T2 -` A \\<inter> space M - U", "using U(1)"], ["proof (prove)\nusing this:\n  ?x3 \\<in> space M - U \\<Longrightarrow> proj (T ?x3) = T2 (proj ?x3)\n\ngoal (1 subgoal):\n 1. T -` proj -` A \\<inter> space M - U =\n    proj -` T2 -` A \\<inter> space M - U", "by auto"], ["proof (state)\nthis:\n  T -` proj -` A \\<inter> space M - U = proj -` T2 -` A \\<inter> space M - U\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have e3: \"proj-`(T2-`A) \\<inter> space M = proj-`(T2-`A \\<inter> space M2) \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj -` T2 -` A \\<inter> space M =\n    proj -` (T2 -` A \\<inter> space M2) \\<inter> space M", "by (auto, meson \\<open>proj \\<in> M \\<rightarrow>\\<^sub>M M2\\<close> measurable_space)"], ["proof (state)\nthis:\n  proj -` T2 -` A \\<inter> space M =\n  proj -` (T2 -` A \\<inter> space M2) \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have \"emeasure M2 A = emeasure M (proj-`A \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M2 A = emeasure M (proj -` A \\<inter> space M)", "using measure_preservingE(2)[OF assms(1)]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M2 \\<Longrightarrow>\n  emeasure M (proj -` ?A \\<inter> space M) = emeasure M2 ?A\n\ngoal (1 subgoal):\n 1. emeasure M2 A = emeasure M (proj -` A \\<inter> space M)", "by simp"], ["proof (state)\nthis:\n  emeasure M2 A = emeasure M (proj -` A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "also"], ["proof (state)\nthis:\n  emeasure M2 A = emeasure M (proj -` A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have \"... = emeasure M (T-`(proj-`A \\<inter> space M) \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (proj -` A \\<inter> space M) =\n    emeasure M (T -` (proj -` A \\<inter> space M) \\<inter> space M)", "by (rule measure_preservingE(2)[OF Tm, symmetric], auto)"], ["proof (state)\nthis:\n  emeasure M (proj -` A \\<inter> space M) =\n  emeasure M (T -` (proj -` A \\<inter> space M) \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "also"], ["proof (state)\nthis:\n  emeasure M (proj -` A \\<inter> space M) =\n  emeasure M (T -` (proj -` A \\<inter> space M) \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have \"... = emeasure M (T-`(proj-`A) \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (T -` (proj -` A \\<inter> space M) \\<inter> space M) =\n    emeasure M (T -` proj -` A \\<inter> space M)", "using e1"], ["proof (prove)\nusing this:\n  T -` (proj -` A \\<inter> space M) \\<inter> space M =\n  T -` proj -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M (T -` (proj -` A \\<inter> space M) \\<inter> space M) =\n    emeasure M (T -` proj -` A \\<inter> space M)", "by simp"], ["proof (state)\nthis:\n  emeasure M (T -` (proj -` A \\<inter> space M) \\<inter> space M) =\n  emeasure M (T -` proj -` A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "also"], ["proof (state)\nthis:\n  emeasure M (T -` (proj -` A \\<inter> space M) \\<inter> space M) =\n  emeasure M (T -` proj -` A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have \"... = emeasure M (T-`(proj-`A) \\<inter> space M - U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (T -` proj -` A \\<inter> space M) =\n    emeasure M (T -` proj -` A \\<inter> space M - U)", "using emeasure_Diff_null_set[OF \\<open>U \\<in> null_sets M\\<close>]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow> emeasure M (?A - U) = emeasure M ?A\n\ngoal (1 subgoal):\n 1. emeasure M (T -` proj -` A \\<inter> space M) =\n    emeasure M (T -` proj -` A \\<inter> space M - U)", "by auto"], ["proof (state)\nthis:\n  emeasure M (T -` proj -` A \\<inter> space M) =\n  emeasure M (T -` proj -` A \\<inter> space M - U)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "also"], ["proof (state)\nthis:\n  emeasure M (T -` proj -` A \\<inter> space M) =\n  emeasure M (T -` proj -` A \\<inter> space M - U)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have \"... = emeasure M (proj-`(T2-`A) \\<inter> space M - U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (T -` proj -` A \\<inter> space M - U) =\n    emeasure M (proj -` T2 -` A \\<inter> space M - U)", "using e2"], ["proof (prove)\nusing this:\n  T -` proj -` A \\<inter> space M - U = proj -` T2 -` A \\<inter> space M - U\n\ngoal (1 subgoal):\n 1. emeasure M (T -` proj -` A \\<inter> space M - U) =\n    emeasure M (proj -` T2 -` A \\<inter> space M - U)", "by simp"], ["proof (state)\nthis:\n  emeasure M (T -` proj -` A \\<inter> space M - U) =\n  emeasure M (proj -` T2 -` A \\<inter> space M - U)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "also"], ["proof (state)\nthis:\n  emeasure M (T -` proj -` A \\<inter> space M - U) =\n  emeasure M (proj -` T2 -` A \\<inter> space M - U)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have \"... = emeasure M (proj-`(T2-`A) \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (proj -` T2 -` A \\<inter> space M - U) =\n    emeasure M (proj -` T2 -` A \\<inter> space M)", "using emeasure_Diff_null_set[OF \\<open>U \\<in> null_sets M\\<close>]"], ["proof (prove)\nusing this:\n  ?A \\<in> sets M \\<Longrightarrow> emeasure M (?A - U) = emeasure M ?A\n\ngoal (1 subgoal):\n 1. emeasure M (proj -` T2 -` A \\<inter> space M - U) =\n    emeasure M (proj -` T2 -` A \\<inter> space M)", "by auto"], ["proof (state)\nthis:\n  emeasure M (proj -` T2 -` A \\<inter> space M - U) =\n  emeasure M (proj -` T2 -` A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "also"], ["proof (state)\nthis:\n  emeasure M (proj -` T2 -` A \\<inter> space M - U) =\n  emeasure M (proj -` T2 -` A \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have \"... = emeasure M (proj-`(T2-`A \\<inter> space M2) \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (proj -` T2 -` A \\<inter> space M) =\n    emeasure M (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M)", "using e3"], ["proof (prove)\nusing this:\n  proj -` T2 -` A \\<inter> space M =\n  proj -` (T2 -` A \\<inter> space M2) \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M (proj -` T2 -` A \\<inter> space M) =\n    emeasure M (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M)", "by simp"], ["proof (state)\nthis:\n  emeasure M (proj -` T2 -` A \\<inter> space M) =\n  emeasure M (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "also"], ["proof (state)\nthis:\n  emeasure M (proj -` T2 -` A \\<inter> space M) =\n  emeasure M (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "have \"... = emeasure M2 (T2-`A \\<inter> space M2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M) =\n    emeasure M2 (T2 -` A \\<inter> space M2)", "using measure_preservingE(2)[OF assms(1), of \"T2-`A \\<inter> space M2\"]"], ["proof (prove)\nusing this:\n  T2 -` A \\<inter> space M2 \\<in> sets M2 \\<Longrightarrow>\n  emeasure M (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M) =\n  emeasure M2 (T2 -` A \\<inter> space M2)\n\ngoal (1 subgoal):\n 1. emeasure M (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M) =\n    emeasure M2 (T2 -` A \\<inter> space M2)", "by simp"], ["proof (state)\nthis:\n  emeasure M (proj -` (T2 -` A \\<inter> space M2) \\<inter> space M) =\n  emeasure M2 (T2 -` A \\<inter> space M2)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "finally"], ["proof (chain)\npicking this:\n  emeasure M2 A = emeasure M2 (T2 -` A \\<inter> space M2)", "show \"emeasure M2 (T2-`A \\<inter> space M2) = emeasure M2 A\""], ["proof (prove)\nusing this:\n  emeasure M2 A = emeasure M2 (T2 -` A \\<inter> space M2)\n\ngoal (1 subgoal):\n 1. emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A", "by simp"], ["proof (state)\nthis:\n  emeasure M2 (T2 -` A \\<inter> space M2) = emeasure M2 A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?A3 \\<in> sets M2 \\<Longrightarrow>\n  emeasure M2 (T2 -` ?A3 \\<inter> space M2) = emeasure M2 ?A3\n\ngoal (1 subgoal):\n 1. mpt_factor proj M2 T2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt_factor proj M2 T2", "by (intro mpt_factorI mpt_I) (auto simp add: assms *)"], ["proof (state)\nthis:\n  mpt_factor proj M2 T2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in fmpt) mpt_factorI'':\n  assumes \"proj \\<in> measure_preserving M M2\"\n          \"AE x in M. proj (T x) = T2 (proj x)\"\n          \"T2 \\<in> measurable M2 M2\"\n  shows \"mpt_factor proj M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt_factor proj M2 T2", "apply (rule mpt_factorI', auto simp add: assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_measure M2", "using measure_preserving_finite_measure[OF assms(1)] finite_measure_axioms finite_measure_def"], ["proof (prove)\nusing this:\n  finite_measure M = finite_measure M2\n  finite_measure M\n  finite_measure ?M \\<equiv>\n  sigma_finite_measure ?M \\<and> finite_measure_axioms ?M\n\ngoal (1 subgoal):\n 1. sigma_finite_measure M2", "by blast"], ["", "lemma (in fmpt) fmpt_factor:\n  assumes \"mpt_factor proj M2 T2\"\n  shows \"fmpt M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M2 T2", "unfolding fmpt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M2 T2 \\<and> finite_measure M2", "using mpt_factorE(3)[OF assms]\nmeasure_preserving_finite_measure[OF mpt_factorE(1)[OF assms]] finite_measure_axioms"], ["proof (prove)\nusing this:\n  mpt M2 T2\n  finite_measure M = finite_measure M2\n  finite_measure M\n\ngoal (1 subgoal):\n 1. mpt M2 T2 \\<and> finite_measure M2", "by auto"], ["", "lemma (in pmpt) pmpt_factor:\n  assumes \"mpt_factor proj M2 T2\"\n  shows \"pmpt M2 T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmpt M2 T2", "unfolding pmpt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fmpt M2 T2 \\<and> prob_space M2", "using fmpt_factor[OF assms]\nmeasure_preserving_prob_space[OF mpt_factorE(1)[OF assms]] prob_space_axioms"], ["proof (prove)\nusing this:\n  fmpt M2 T2\n  prob_space M = prob_space M2\n  prob_space M\n\ngoal (1 subgoal):\n 1. fmpt M2 T2 \\<and> prob_space M2", "by auto"], ["", "lemma mpt_factor_compose:\n  assumes \"mpt M1 T1\"\n          \"mpt.mpt_factor M1 T1 proj1 M2 T2\"\n          \"mpt.mpt_factor M2 T2 proj2 M3 T3\"\n  shows \"mpt.mpt_factor M1 T1 (proj2 o proj1) M3 T3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt.mpt_factor M1 T1 (proj2 \\<circ> proj1) M3 T3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mpt.mpt_factor M1 T1 (proj2 \\<circ> proj1) M3 T3", "have *: \"proj1 \\<in> measure_preserving M1 M2 \\<Longrightarrow> AE x in M2. proj2 (T2 x) = T3 (proj2 x) \\<Longrightarrow>\n    (AE x in M1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow> proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "assume \"AE y in M2. proj2 (T2 y) = T3 (proj2 y)\"\n           \"proj1 \\<in> measure_preserving M1 M2\""], ["proof (state)\nthis:\n  AE y in M2. proj2 (T2 y) = T3 (proj2 y)\n  proj1 \\<in> measure_preserving M1 M2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "then"], ["proof (chain)\npicking this:\n  AE y in M2. proj2 (T2 y) = T3 (proj2 y)\n  proj1 \\<in> measure_preserving M1 M2", "have \"AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\""], ["proof (prove)\nusing this:\n  AE y in M2. proj2 (T2 y) = T3 (proj2 y)\n  proj1 \\<in> measure_preserving M1 M2\n\ngoal (1 subgoal):\n 1. AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "using quasi_measure_preserving_AE measure_preserving_is_quasi_measure_preserving"], ["proof (prove)\nusing this:\n  AE y in M2. proj2 (T2 y) = T3 (proj2 y)\n  proj1 \\<in> measure_preserving M1 M2\n  \\<lbrakk>?f \\<in> quasi_measure_preserving ?M ?N;\n   almost_everywhere ?N ?P\\<rbrakk>\n  \\<Longrightarrow> AE x in ?M. ?P (?f x)\n  ?f \\<in> measure_preserving ?M ?N \\<Longrightarrow>\n  ?f \\<in> quasi_measure_preserving ?M ?N\n\ngoal (1 subgoal):\n 1. AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "by blast"], ["proof (state)\nthis:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "moreover"], ["proof (state)\nthis:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "{"], ["proof (state)\nthis:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "assume \"proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\""], ["proof (state)\nthis:\n  proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "then"], ["proof (chain)\npicking this:\n  proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "have \"proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow> proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\""], ["proof (prove)\nusing this:\n  proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow>\n    proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "by auto"], ["proof (state)\nthis:\n  proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow>\n  proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "}"], ["proof (state)\nthis:\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2)) \\<Longrightarrow>\n  proj1 (T1 ?x2) = T2 (proj1 ?x2) \\<longrightarrow>\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n     AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n    \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                  T2 (proj1 x) \\<longrightarrow>\n                                  proj2 (T2 (proj1 x)) =\n                                  T3 (proj2 (proj1 x))", "ultimately"], ["proof (chain)\npicking this:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2)) \\<Longrightarrow>\n  proj1 (T1 ?x2) = T2 (proj1 ?x2) \\<longrightarrow>\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2))", "show \"AE x in M1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow> proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\""], ["proof (prove)\nusing this:\n  AE x in M1. proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2)) \\<Longrightarrow>\n  proj1 (T1 ?x2) = T2 (proj1 ?x2) \\<longrightarrow>\n  proj2 (T2 (proj1 ?x2)) = T3 (proj2 (proj1 ?x2))\n\ngoal (1 subgoal):\n 1. AE x in M1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow>\n                proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))", "by auto"], ["proof (state)\nthis:\n  AE x in M1. proj1 (T1 x) = T2 (proj1 x) \\<longrightarrow>\n              proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>proj1 \\<in> measure_preserving M1 M2;\n   AE x in M2. proj2 (T2 x) = T3 (proj2 x)\\<rbrakk>\n  \\<Longrightarrow> AE x in M1. proj1 (T1 x) =\n                                T2 (proj1 x) \\<longrightarrow>\n                                proj2 (T2 (proj1 x)) = T3 (proj2 (proj1 x))\n\ngoal (1 subgoal):\n 1. mpt.mpt_factor M1 T1 (proj2 \\<circ> proj1) M3 T3", "interpret I: mpt M1 T1"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M1 T1", "using assms(1)"], ["proof (prove)\nusing this:\n  mpt M1 T1\n\ngoal (1 subgoal):\n 1. mpt M1 T1", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. I.mpt_factor (proj2 \\<circ> proj1) M3 T3", "interpret J: mpt M2 T2"], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M2 T2", "using I.mpt_factorE(3)[OF assms(2)]"], ["proof (prove)\nusing this:\n  mpt M2 T2\n\ngoal (1 subgoal):\n 1. mpt M2 T2", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. I.mpt_factor (proj2 \\<circ> proj1) M3 T3", "show \"I.mpt_factor (proj2 o proj1) M3 T3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I.mpt_factor (proj2 \\<circ> proj1) M3 T3", "apply (rule I.mpt_factorI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. proj2 \\<circ> proj1 \\<in> measure_preserving M1 M3\n 2. AE x in M1. (proj2 \\<circ> proj1) (T1 x) = T3 ((proj2 \\<circ> proj1) x)\n 3. mpt M3 T3", "using I.mpt_factorE[OF assms(2)] J.mpt_factorE[OF assms(3)]"], ["proof (prove)\nusing this:\n  proj1 \\<in> measure_preserving M1 M2\n  AE x in M1. proj1 (T1 x) = T2 (proj1 x)\n  mpt M2 T2\n  proj2 \\<in> measure_preserving M2 M3\n  AE x in M2. proj2 (T2 x) = T3 (proj2 x)\n  mpt M3 T3\n\ngoal (3 subgoals):\n 1. proj2 \\<circ> proj1 \\<in> measure_preserving M1 M3\n 2. AE x in M1. (proj2 \\<circ> proj1) (T1 x) = T3 ((proj2 \\<circ> proj1) x)\n 3. mpt M3 T3", "by (auto simp add: measure_preserving_comp *)"], ["proof (state)\nthis:\n  I.mpt_factor (proj2 \\<circ> proj1) M3 T3\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Left shifts are naturally factors of finite measure preserving transformations.\\<close>"], ["", "lemma (in mpt) mpt_factor_projection:\n  fixes f::\"'a \\<Rightarrow> ('b::second_countable_topology)\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\"\n      and \"sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\"\n  shows \"mpt_factor (\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) (distr M borel (\\<lambda>x. (\\<lambda>n. f ((T^^n)x)))) nat_left_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt_factor (\\<lambda>x n. f ((T ^^ n) x))\n     (distr M borel (\\<lambda>x n. f ((T ^^ n) x))) nat_left_shift", "proof (rule mpt_factorI')"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<lambda>x n. f ((T ^^ n) x))\n    \\<in> measure_preserving M\n           (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 2. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n 3. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 4. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "have * [measurable]: \"(\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M", "using measurable_coordinatewise_then_product"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      (\\<lambda>x. ?f x i) \\<in> borel_measurable ?M) \\<Longrightarrow>\n  ?f \\<in> borel_measurable ?M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M\n\ngoal (4 subgoals):\n 1. (\\<lambda>x n. f ((T ^^ n) x))\n    \\<in> measure_preserving M\n           (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 2. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n 3. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 4. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "show \"(\\<lambda>x n. f ((T ^^ n) x)) \\<in> measure_preserving M (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x))\n    \\<in> measure_preserving M\n           (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "by (rule measure_preserving_distr'[OF *])"], ["proof (state)\nthis:\n  (\\<lambda>x n. f ((T ^^ n) x))\n  \\<in> measure_preserving M (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n\ngoal (3 subgoals):\n 1. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n 2. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 3. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "have \"(\\<lambda>n. f ((T ^^ n) (T x))) = nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f ((T ^^ n) (T x))) =\n    nat_left_shift (\\<lambda>n. f ((T ^^ n) x))", "unfolding nat_left_shift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f ((T ^^ n) (T x))) = (\\<lambda>i. f ((T ^^ (i + 1)) x))", "by (auto simp add: funpow_swap1)"], ["proof (state)\nthis:\n  (\\<lambda>n. f ((T ^^ n) (T ?x3))) =\n  nat_left_shift (\\<lambda>n. f ((T ^^ n) ?x3))\n\ngoal (3 subgoals):\n 1. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n 2. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 3. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. f ((T ^^ n) (T ?x3))) =\n  nat_left_shift (\\<lambda>n. f ((T ^^ n) ?x3))", "show \"AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) = nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. f ((T ^^ n) (T ?x3))) =\n  nat_left_shift (\\<lambda>n. f ((T ^^ n) ?x3))\n\ngoal (1 subgoal):\n 1. AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n               nat_left_shift (\\<lambda>n. f ((T ^^ n) x))", "by simp"], ["proof (state)\nthis:\n  AE x in M. (\\<lambda>n. f ((T ^^ n) (T x))) =\n             nat_left_shift (\\<lambda>n. f ((T ^^ n) x))\n\ngoal (2 subgoals):\n 1. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n 2. nat_left_shift\n    \\<in> distr M borel (\\<lambda>x n. f ((T ^^ n) x)) \\<rightarrow>\\<^sub>M\n          distr M borel (\\<lambda>x n. f ((T ^^ n) x))", "qed (auto simp add: assms(2))"], ["", "lemma (in fmpt) fmpt_factor_projection:\n  fixes f::\"'a \\<Rightarrow> ('b::second_countable_topology)\"\n  assumes [measurable]: \"f \\<in> borel_measurable M\"\n  shows \"mpt_factor (\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) (distr M borel (\\<lambda>x. (\\<lambda>n. f ((T^^n)x)))) nat_left_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt_factor (\\<lambda>x n. f ((T ^^ n) x))\n     (distr M borel (\\<lambda>x n. f ((T ^^ n) x))) nat_left_shift", "proof (rule mpt_factor_projection, simp add: assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "have * [measurable]: \"(\\<lambda>x. (\\<lambda>n. f ((T^^n)x))) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M", "using measurable_coordinatewise_then_product"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      (\\<lambda>x. ?f x i) \\<in> borel_measurable ?M) \\<Longrightarrow>\n  ?f \\<in> borel_measurable ?M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M", "by measurable"], ["proof (state)\nthis:\n  (\\<lambda>x n. f ((T ^^ n) x)) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "have **: \"(\\<lambda>x n. f ((T ^^ n) x)) \\<in> measure_preserving M (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x n. f ((T ^^ n) x))\n    \\<in> measure_preserving M\n           (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "by (rule measure_preserving_distr'[OF *])"], ["proof (state)\nthis:\n  (\\<lambda>x n. f ((T ^^ n) x))\n  \\<in> measure_preserving M (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n\ngoal (1 subgoal):\n 1. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "have a: \"finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "using measure_preserving_finite_measure[OF **] finite_measure_axioms"], ["proof (prove)\nusing this:\n  finite_measure M =\n  finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n  finite_measure M\n\ngoal (1 subgoal):\n 1. finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "by blast"], ["proof (state)\nthis:\n  finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n\ngoal (1 subgoal):\n 1. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "then"], ["proof (chain)\npicking this:\n  finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "show \"sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\""], ["proof (prove)\nusing this:\n  finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n\ngoal (1 subgoal):\n 1. sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))", "by (simp add: finite_measure_def)"], ["proof (state)\nthis:\n  sigma_finite_measure (distr M borel (\\<lambda>x n. f ((T ^^ n) x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Natural extension\\<close>"], ["", "text \\<open>Many probability preserving dynamical systems are not invertible, while invertibility is\noften useful in proofs. The notion of natural extension is a solution to this problem: it shows that\n(essentially) any system has an extension which is invertible.\n\nThis extension is constructed by considering the space of orbits indexed by integer numbers, with\nthe left shift acting on it. If one considers the orbits starting from time $-N$\n(for some fixed $N$), then there is a natural measure on this space: such an orbit is\nparameterized by its starting point at time $-N$, hence one may use the original measure on this\npoint. The invariance of the measure ensures that these measures are compatible with each other.\nTheir projective limit (when $N$ tends to infinity) is thus an invariant measure on the bilateral\nshift. The shift with this measure is the desired extension of the original system.\n\nThere is a difficulty in the above argument: one needs to make sure that the projective limit of\na system of compatible measures is well defined. This requires some topological conditions on the\nmeasures (they should be inner regular, i.e., the measure of any set should be approximated from\nbelow by compact subsets -- this is automatic on polish spaces). The existence of projective limits\nis proved in \\verb+Projective_Limits.thy+ under the (sufficient) polish condition. We use this\ntheory, so we need the underlying space to be a polish space and the measure to be a Borel\nmeasure. This is almost completely satisfactory.\n\nWhat is not completely satisfactory is that the completion of a Borel measure on a polish space\n(i.e., we add all subsets of sets of measure $0$ into the sigma algebra) does not fit into this\nsetting, while this is an important framework in dynamical systems. It would readily follow\nonce \\verb+Projective_Limits.thy+ is extended to the more general inner regularity setting\n(the completion of a Borel measure on a polish space is always inner regular).\n\\<close>"], ["", "locale polish_pmpt = pmpt \"M::('a::polish_space measure)\" T for M T\n  + assumes M_eq_borel: \"sets M = sets borel\"\nbegin"], ["", "definition natural_extension_map\n  where \"natural_extension_map = (int_left_shift::((int \\<Rightarrow> 'a) \\<Rightarrow> (int \\<Rightarrow> 'a)))\""], ["", "definition natural_extension_measure::\"(int \\<Rightarrow> 'a) measure\"\n  where \"natural_extension_measure =\n    projective_family.lim UNIV (\\<lambda>I. distr M (\\<Pi>\\<^sub>M i\\<in>I. borel) (\\<lambda>x. (\\<lambda>i\\<in>I. (T^^(nat(i- Min I))) x))) (\\<lambda>i. borel)\""], ["", "definition natural_extension_proj::\"(int \\<Rightarrow> 'a) \\<Rightarrow> 'a\"\n  where \"natural_extension_proj = (\\<lambda>x. x 0)\""], ["", "theorem natural_extension:\n  \"pmpt natural_extension_measure natural_extension_map\"\n  \"qmpt.invertible_qmpt natural_extension_measure natural_extension_map\"\n  \"mpt.mpt_factor natural_extension_measure natural_extension_map natural_extension_proj M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmpt natural_extension_measure natural_extension_map &&&\n    qmpt.invertible_qmpt natural_extension_measure natural_extension_map &&&\n    mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "define P::\"int set \\<Rightarrow> (int \\<Rightarrow> 'a) measure\" where\n    \"P = (\\<lambda>I. distr M (\\<Pi>\\<^sub>M i\\<in>I. borel) (\\<lambda>x. (\\<lambda>i\\<in>I. (T^^(nat(i- Min I))) x)))\""], ["proof (state)\nthis:\n  P =\n  (\\<lambda>I.\n      distr M (Pi\\<^sub>M I (\\<lambda>i. borel))\n       (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x))\n\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "have [measurable]: \"(T^^n) \\<in> measurable M borel\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (T ^^ n)", "using M_eq_borel"], ["proof (prove)\nusing this:\n  events = sets borel\n\ngoal (1 subgoal):\n 1. random_variable borel (T ^^ n)", "by auto"], ["proof (state)\nthis:\n  random_variable borel (T ^^ ?n12)\n\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "interpret polish_projective UNIV P"], ["proof (prove)\ngoal (1 subgoal):\n 1. polish_projective UNIV P", "unfolding polish_projective_def projective_family_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>J H.\n        J \\<subseteq> H \\<longrightarrow>\n        finite H \\<longrightarrow>\n        H \\<subseteq> UNIV \\<longrightarrow>\n        P J =\n        distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n         (\\<lambda>f. restrict f J)) \\<and>\n    (\\<forall>J.\n        finite J \\<longrightarrow>\n        J \\<subseteq> UNIV \\<longrightarrow> prob_space (P J))", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)\n 2. \\<And>J. finite J \\<Longrightarrow> prob_space (P J)", "show \"prob_space (P I)\" if \"finite I\" for I"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (P I)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space\n     (distr M (Pi\\<^sub>M I (\\<lambda>i. borel))\n       (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x))", "by (rule prob_space_distr, auto)"], ["proof (state)\nthis:\n  finite ?I12 \\<Longrightarrow> prob_space (P ?I12)\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "fix J H::\"int set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "assume \"J \\<subseteq> H\" \"finite H\""], ["proof (state)\nthis:\n  J \\<subseteq> H\n  finite H\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "then"], ["proof (chain)\npicking this:\n  J \\<subseteq> H\n  finite H", "have \"H \\<inter> J = J\""], ["proof (prove)\nusing this:\n  J \\<subseteq> H\n  finite H\n\ngoal (1 subgoal):\n 1. H \\<inter> J = J", "by blast"], ["proof (state)\nthis:\n  H \\<inter> J = J\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "have \"((\\<lambda>f. restrict f J) o (\\<lambda>x. (\\<lambda>i\\<in>H. (T^^(nat(i- Min H))) x))) x\n        = ((\\<lambda>x. (\\<lambda>i\\<in>J. (T^^(nat(i- Min J))) x)) o (T^^(nat(Min J - Min H)))) x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>f. restrict f J) \\<circ>\n     (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n     x =\n    ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n     T ^^ nat (Min J - Min H))\n     x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>f. restrict f J) \\<circ>\n     (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n     x =\n    ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n     T ^^ nat (Min J - Min H))\n     x", "have \"nat(i- Min H) = nat(i- Min J) + nat(Min J - Min H)\" if \"i \\<in> J\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "have \"finite J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite J", "using \\<open>J \\<subseteq> H\\<close> \\<open>finite H\\<close> finite_subset"], ["proof (prove)\nusing this:\n  J \\<subseteq> H\n  finite H\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite J", "by auto"], ["proof (state)\nthis:\n  finite J\n\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "then"], ["proof (chain)\npicking this:\n  finite J", "have \"Min J \\<in> J\""], ["proof (prove)\nusing this:\n  finite J\n\ngoal (1 subgoal):\n 1. Min J \\<in> J", "using Min_in \\<open>i \\<in> J\\<close>"], ["proof (prove)\nusing this:\n  finite J\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min ?A \\<in> ?A\n  i \\<in> J\n\ngoal (1 subgoal):\n 1. Min J \\<in> J", "by auto"], ["proof (state)\nthis:\n  Min J \\<in> J\n\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "then"], ["proof (chain)\npicking this:\n  Min J \\<in> J", "have \"Min J \\<in> H\""], ["proof (prove)\nusing this:\n  Min J \\<in> J\n\ngoal (1 subgoal):\n 1. Min J \\<in> H", "using \\<open>J \\<subseteq> H\\<close>"], ["proof (prove)\nusing this:\n  Min J \\<in> J\n  J \\<subseteq> H\n\ngoal (1 subgoal):\n 1. Min J \\<in> H", "by blast"], ["proof (state)\nthis:\n  Min J \\<in> H\n\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "then"], ["proof (chain)\npicking this:\n  Min J \\<in> H", "have \"Min H \\<le> Min J\""], ["proof (prove)\nusing this:\n  Min J \\<in> H\n\ngoal (1 subgoal):\n 1. Min H \\<le> Min J", "using Min.coboundedI[OF \\<open>finite H\\<close>]"], ["proof (prove)\nusing this:\n  Min J \\<in> H\n  ?a \\<in> H \\<Longrightarrow> Min H \\<le> ?a\n\ngoal (1 subgoal):\n 1. Min H \\<le> Min J", "by auto"], ["proof (state)\nthis:\n  Min H \\<le> Min J\n\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "moreover"], ["proof (state)\nthis:\n  Min H \\<le> Min J\n\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "have \"Min J \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min J \\<le> i", "using Min.coboundedI[OF \\<open>finite J\\<close> \\<open>i \\<in> J\\<close>]"], ["proof (prove)\nusing this:\n  Min J \\<le> i\n\ngoal (1 subgoal):\n 1. Min J \\<le> i", "by auto"], ["proof (state)\nthis:\n  Min J \\<le> i\n\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "ultimately"], ["proof (chain)\npicking this:\n  Min H \\<le> Min J\n  Min J \\<le> i", "show ?thesis"], ["proof (prove)\nusing this:\n  Min H \\<le> Min J\n  Min J \\<le> i\n\ngoal (1 subgoal):\n 1. nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)", "by auto"], ["proof (state)\nthis:\n  nat (i - Min H) = nat (i - Min J) + nat (Min J - Min H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i12 \\<in> J \\<Longrightarrow>\n  nat (?i12 - Min H) = nat (?i12 - Min J) + nat (Min J - Min H)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>f. restrict f J) \\<circ>\n     (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n     x =\n    ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n     T ^^ nat (Min J - Min H))\n     x", "then"], ["proof (chain)\npicking this:\n  ?i12 \\<in> J \\<Longrightarrow>\n  nat (?i12 - Min H) = nat (?i12 - Min J) + nat (Min J - Min H)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?i12 \\<in> J \\<Longrightarrow>\n  nat (?i12 - Min H) = nat (?i12 - Min J) + nat (Min J - Min H)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>f. restrict f J) \\<circ>\n     (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n     x =\n    ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n     T ^^ nat (Min J - Min H))\n     x", "unfolding comp_def"], ["proof (prove)\nusing this:\n  ?i12 \\<in> J \\<Longrightarrow>\n  nat (?i12 - Min H) = nat (?i12 - Min J) + nat (Min J - Min H)\n\ngoal (1 subgoal):\n 1. restrict (\\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x) J =\n    (\\<lambda>i\\<in>J.\n        (T ^^ nat (i - Min J)) ((T ^^ nat (Min J - Min H)) x))", "by (auto simp add: \\<open>H \\<inter> J = J\\<close> funpow_add)"], ["proof (state)\nthis:\n  ((\\<lambda>f. restrict f J) \\<circ>\n   (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n   x =\n  ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n   T ^^ nat (Min J - Min H))\n   x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>f. restrict f J) \\<circ>\n   (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n   ?x12 =\n  ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n   T ^^ nat (Min J - Min H))\n   ?x12\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>f. restrict f J) \\<circ>\n   (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n   ?x12 =\n  ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n   T ^^ nat (Min J - Min H))\n   ?x12", "have *: \"(\\<lambda>f. restrict f J) o (\\<lambda>x. (\\<lambda>i\\<in>H. (T^^(nat(i- Min H))) x))\n        = (\\<lambda>x. (\\<lambda>i\\<in>J. (T^^(nat(i- Min J))) x)) o (T^^(nat(Min J - Min H)))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>f. restrict f J) \\<circ>\n   (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n   ?x12 =\n  ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n   T ^^ nat (Min J - Min H))\n   ?x12\n\ngoal (1 subgoal):\n 1. (\\<lambda>f. restrict f J) \\<circ>\n    (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x) =\n    (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n    T ^^ nat (Min J - Min H)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>f. restrict f J) \\<circ>\n  (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x) =\n  (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n  T ^^ nat (Min J - Min H)\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "have \"distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel)) (\\<lambda>f. restrict f J)\n            = distr M (\\<Pi>\\<^sub>M i\\<in>J. borel) ((\\<lambda>f. restrict f J) o (\\<lambda>x. (\\<lambda>i\\<in>H. (T^^(nat(i- Min H))) x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n     (\\<lambda>f. restrict f J) =\n    distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     ((\\<lambda>f. restrict f J) \\<circ>\n      (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. distr\n     (distr M (Pi\\<^sub>M H (\\<lambda>i. borel))\n       (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n     (Pi\\<^sub>M J (\\<lambda>_. borel)) (\\<lambda>f. restrict f J) =\n    distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     ((\\<lambda>f. restrict f J) \\<circ>\n      (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))", "by (rule distr_distr, auto simp add: \\<open>J \\<subseteq> H\\<close> measurable_restrict_subset)"], ["proof (state)\nthis:\n  distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n   (\\<lambda>f. restrict f J) =\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   ((\\<lambda>f. restrict f J) \\<circ>\n    (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "also"], ["proof (state)\nthis:\n  distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n   (\\<lambda>f. restrict f J) =\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   ((\\<lambda>f. restrict f J) \\<circ>\n    (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x))\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "have \"... = distr M (\\<Pi>\\<^sub>M i\\<in>J. borel) ((\\<lambda>x. (\\<lambda>i\\<in>J. (T^^(nat(i- Min J))) x)) o (T^^(nat(Min J - Min H))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     ((\\<lambda>f. restrict f J) \\<circ>\n      (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x)) =\n    distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n      T ^^ nat (Min J - Min H))", "using *"], ["proof (prove)\nusing this:\n  (\\<lambda>f. restrict f J) \\<circ>\n  (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x) =\n  (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n  T ^^ nat (Min J - Min H)\n\ngoal (1 subgoal):\n 1. distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     ((\\<lambda>f. restrict f J) \\<circ>\n      (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x)) =\n    distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n      T ^^ nat (Min J - Min H))", "by auto"], ["proof (state)\nthis:\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   ((\\<lambda>f. restrict f J) \\<circ>\n    (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x)) =\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n    T ^^ nat (Min J - Min H))\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "also"], ["proof (state)\nthis:\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   ((\\<lambda>f. restrict f J) \\<circ>\n    (\\<lambda>x. \\<lambda>i\\<in>H. (T ^^ nat (i - Min H)) x)) =\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n    T ^^ nat (Min J - Min H))\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "have \"... = distr (distr M M (T^^(nat(Min J - Min H)))) (\\<Pi>\\<^sub>M i\\<in>J. borel) (\\<lambda>x. (\\<lambda>i\\<in>J. (T^^(nat(i- Min J))) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n      T ^^ nat (Min J - Min H)) =\n    distr (distr M M (T ^^ nat (Min J - Min H)))\n     (Pi\\<^sub>M J (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x)", "by (rule distr_distr[symmetric], auto)"], ["proof (state)\nthis:\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n    T ^^ nat (Min J - Min H)) =\n  distr (distr M M (T ^^ nat (Min J - Min H)))\n   (Pi\\<^sub>M J (\\<lambda>i. borel))\n   (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x)\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "also"], ["proof (state)\nthis:\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   ((\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) \\<circ>\n    T ^^ nat (Min J - Min H)) =\n  distr (distr M M (T ^^ nat (Min J - Min H)))\n   (Pi\\<^sub>M J (\\<lambda>i. borel))\n   (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x)\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "have \"... = distr M (\\<Pi>\\<^sub>M i\\<in>J. borel) (\\<lambda>x. (\\<lambda>i\\<in>J. (T^^(nat(i- Min J))) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr (distr M M (T ^^ nat (Min J - Min H)))\n     (Pi\\<^sub>M J (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) =\n    distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x)", "using measure_preserving_distr[OF Tn_measure_preserving]"], ["proof (prove)\nusing this:\n  distr M M (T ^^ ?n1) = M\n\ngoal (1 subgoal):\n 1. distr (distr M M (T ^^ nat (Min J - Min H)))\n     (Pi\\<^sub>M J (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) =\n    distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x)", "by auto"], ["proof (state)\nthis:\n  distr (distr M M (T ^^ nat (Min J - Min H)))\n   (Pi\\<^sub>M J (\\<lambda>i. borel))\n   (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) =\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x)\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "also"], ["proof (state)\nthis:\n  distr (distr M M (T ^^ nat (Min J - Min H)))\n   (Pi\\<^sub>M J (\\<lambda>i. borel))\n   (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) =\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x)\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "have \"... = P J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) =\n    P J", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) =\n    distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x)", "by auto"], ["proof (state)\nthis:\n  distr M (Pi\\<^sub>M J (\\<lambda>i. borel))\n   (\\<lambda>x. \\<lambda>i\\<in>J. (T ^^ nat (i - Min J)) x) =\n  P J\n\ngoal (1 subgoal):\n 1. \\<And>J H.\n       \\<lbrakk>J \\<subseteq> H; finite H\\<rbrakk>\n       \\<Longrightarrow> P J =\n                         distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n                          (\\<lambda>f. restrict f J)", "finally"], ["proof (chain)\npicking this:\n  distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n   (\\<lambda>f. restrict f J) =\n  P J", "show \"P J = distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel)) (\\<lambda>f. restrict f J)\""], ["proof (prove)\nusing this:\n  distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n   (\\<lambda>f. restrict f J) =\n  P J\n\ngoal (1 subgoal):\n 1. P J =\n    distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel))\n     (\\<lambda>f. restrict f J)", "by simp"], ["proof (state)\nthis:\n  P J =\n  distr (P H) (Pi\\<^sub>M J (\\<lambda>_. borel)) (\\<lambda>f. restrict f J)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "have S: \"sets (Pi\\<^sub>M UNIV (\\<lambda>_. borel)) = sets (borel::(int \\<Rightarrow> 'a) measure)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (Pi\\<^sub>M UNIV (\\<lambda>_. borel)) = sets borel", "by (rule sets_PiM_equal_borel)"], ["proof (state)\nthis:\n  sets (Pi\\<^sub>M UNIV (\\<lambda>_. borel)) = sets borel\n\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "have \"natural_extension_measure = lim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. natural_extension_measure = local.lim", "unfolding natural_extension_measure_def P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. projective_family.lim UNIV\n     (\\<lambda>I.\n         distr M (Pi\\<^sub>M I (\\<lambda>i. borel))\n          (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x))\n     (\\<lambda>i. borel) =\n    projective_family.lim UNIV\n     (\\<lambda>I.\n         distr M (Pi\\<^sub>M I (\\<lambda>i. borel))\n          (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x))\n     (\\<lambda>_. borel)", "by simp"], ["proof (state)\nthis:\n  natural_extension_measure = local.lim\n\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "have \"measurable lim lim = measurable borel borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.lim \\<rightarrow>\\<^sub>M local.lim = borel_measurable borel", "by (rule measurable_cong_sets, auto simp add: S)"], ["proof (state)\nthis:\n  local.lim \\<rightarrow>\\<^sub>M local.lim = borel_measurable borel\n\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "then"], ["proof (chain)\npicking this:\n  local.lim \\<rightarrow>\\<^sub>M local.lim = borel_measurable borel", "have [measurable]: \"int_left_shift \\<in> measurable lim lim\" \"int_right_shift \\<in> measurable lim lim\""], ["proof (prove)\nusing this:\n  local.lim \\<rightarrow>\\<^sub>M local.lim = borel_measurable borel\n\ngoal (1 subgoal):\n 1. P.random_variable local.lim int_left_shift &&&\n    P.random_variable local.lim int_right_shift", "using int_shift_measurable"], ["proof (prove)\nusing this:\n  local.lim \\<rightarrow>\\<^sub>M local.lim = borel_measurable borel\n  int_left_shift \\<in> borel_measurable borel\n  int_right_shift \\<in> borel_measurable borel\n\ngoal (1 subgoal):\n 1. P.random_variable local.lim int_left_shift &&&\n    P.random_variable local.lim int_right_shift", "by fast+"], ["proof (state)\nthis:\n  P.random_variable local.lim int_left_shift\n  P.random_variable local.lim int_right_shift\n\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "have [simp]: \"space lim = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space local.lim = UNIV", "unfolding space_lim space_PiM space_borel"], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<rightarrow>\\<^sub>E UNIV = UNIV", "by auto"], ["proof (state)\nthis:\n  space local.lim = UNIV\n\ngoal (3 subgoals):\n 1. pmpt natural_extension_measure natural_extension_map\n 2. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 3. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "show \"pmpt natural_extension_measure natural_extension_map\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmpt natural_extension_measure natural_extension_map", "proof (rule pmpt_I)"], ["proof (state)\ngoal (3 subgoals):\n 1. prob_space natural_extension_measure\n 2. natural_extension_map\n    \\<in> natural_extension_measure \\<rightarrow>\\<^sub>M\n          natural_extension_measure\n 3. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "show \"prob_space natural_extension_measure\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space natural_extension_measure", "unfolding \\<open>natural_extension_measure = lim\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space local.lim", "by (simp add: P.prob_space_axioms)"], ["proof (state)\nthis:\n  prob_space natural_extension_measure\n\ngoal (2 subgoals):\n 1. natural_extension_map\n    \\<in> natural_extension_measure \\<rightarrow>\\<^sub>M\n          natural_extension_measure\n 2. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "show \"natural_extension_map \\<in> measurable natural_extension_measure natural_extension_measure\""], ["proof (prove)\ngoal (1 subgoal):\n 1. natural_extension_map\n    \\<in> natural_extension_measure \\<rightarrow>\\<^sub>M\n          natural_extension_measure", "unfolding natural_extension_map_def \\<open>natural_extension_measure = lim\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. P.random_variable local.lim int_left_shift", "by simp"], ["proof (state)\nthis:\n  natural_extension_map\n  \\<in> natural_extension_measure \\<rightarrow>\\<^sub>M\n        natural_extension_measure\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "define E where \"E = {(\\<Pi>\\<^sub>E i\\<in>UNIV. X i) |X::(int \\<Rightarrow> 'a set). (\\<forall>i. X i \\<in> sets borel) \\<and> finite {i. X i \\<noteq> UNIV}}\""], ["proof (state)\nthis:\n  E =\n  {Pi\\<^sub>E UNIV X |X.\n   (\\<forall>i. X i \\<in> sets borel) \\<and> finite {i. X i \\<noteq> UNIV}}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "have \"lim = distr lim lim int_left_shift\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.lim = distr local.lim local.lim int_left_shift", "proof (rule measure_eqI_generator_eq[of E UNIV, where ?A = \"\\<lambda>_. UNIV\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. P.events = sigma_sets UNIV E\n 5. sets (distr local.lim local.lim int_left_shift) = sigma_sets UNIV E\n 6. range (\\<lambda>_. UNIV) \\<subseteq> E\n 7. (\\<Union>i. UNIV) = UNIV\n 8. \\<And>i. emeasure local.lim UNIV \\<noteq> \\<infinity>", "show \"sets lim = sigma_sets UNIV E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P.events = sigma_sets UNIV E", "unfolding E_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. P.events =\n    sigma_sets UNIV\n     {Pi\\<^sub>E UNIV X |X.\n      (\\<forall>i. X i \\<in> sets borel) \\<and>\n      finite {i. X i \\<noteq> UNIV}}", "using sets_PiM_finite[of \"UNIV::int set\" \"\\<lambda>_. (borel::'a measure)\"]"], ["proof (prove)\nusing this:\n  sets (Pi\\<^sub>M UNIV (\\<lambda>_. borel)) =\n  sigma_sets (UNIV \\<rightarrow>\\<^sub>E space borel)\n   {Pi\\<^sub>E UNIV X |X.\n    (\\<forall>i. X i \\<in> sets borel) \\<and>\n    finite {i. X i \\<noteq> space borel}}\n\ngoal (1 subgoal):\n 1. P.events =\n    sigma_sets UNIV\n     {Pi\\<^sub>E UNIV X |X.\n      (\\<forall>i. X i \\<in> sets borel) \\<and>\n      finite {i. X i \\<noteq> UNIV}}", "by (simp add: PiE_def)"], ["proof (state)\nthis:\n  P.events = sigma_sets UNIV E\n\ngoal (7 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. sets (distr local.lim local.lim int_left_shift) = sigma_sets UNIV E\n 5. range (\\<lambda>_. UNIV) \\<subseteq> E\n 6. (\\<Union>i. UNIV) = UNIV\n 7. \\<And>i. emeasure local.lim UNIV \\<noteq> \\<infinity>", "moreover"], ["proof (state)\nthis:\n  P.events = sigma_sets UNIV E\n\ngoal (7 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. sets (distr local.lim local.lim int_left_shift) = sigma_sets UNIV E\n 5. range (\\<lambda>_. UNIV) \\<subseteq> E\n 6. (\\<Union>i. UNIV) = UNIV\n 7. \\<And>i. emeasure local.lim UNIV \\<noteq> \\<infinity>", "have \"sets (distr lim lim int_left_shift) = sets lim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (distr local.lim local.lim int_left_shift) = P.events", "by auto"], ["proof (state)\nthis:\n  sets (distr local.lim local.lim int_left_shift) = P.events\n\ngoal (7 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. sets (distr local.lim local.lim int_left_shift) = sigma_sets UNIV E\n 5. range (\\<lambda>_. UNIV) \\<subseteq> E\n 6. (\\<Union>i. UNIV) = UNIV\n 7. \\<And>i. emeasure local.lim UNIV \\<noteq> \\<infinity>", "ultimately"], ["proof (chain)\npicking this:\n  P.events = sigma_sets UNIV E\n  sets (distr local.lim local.lim int_left_shift) = P.events", "show \"sets (distr lim lim int_left_shift) = sigma_sets UNIV E\""], ["proof (prove)\nusing this:\n  P.events = sigma_sets UNIV E\n  sets (distr local.lim local.lim int_left_shift) = P.events\n\ngoal (1 subgoal):\n 1. sets (distr local.lim local.lim int_left_shift) = sigma_sets UNIV E", "by simp"], ["proof (state)\nthis:\n  sets (distr local.lim local.lim int_left_shift) = sigma_sets UNIV E\n\ngoal (6 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. range (\\<lambda>_. UNIV) \\<subseteq> E\n 5. (\\<Union>i. UNIV) = UNIV\n 6. \\<And>i. emeasure local.lim UNIV \\<noteq> \\<infinity>", "show \"emeasure lim UNIV \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim UNIV \\<noteq> \\<infinity>", "by (simp add: P.prob_space_axioms)"], ["proof (state)\nthis:\n  emeasure local.lim UNIV \\<noteq> \\<infinity>\n\ngoal (5 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. range (\\<lambda>_. UNIV) \\<subseteq> E\n 5. (\\<Union>i. UNIV) = UNIV", "have \"UNIV = (\\<Pi>\\<^sub>E i\\<in>(UNIV::int set). (UNIV::'a set))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV \\<rightarrow>\\<^sub>E UNIV", "by (simp add: PiE_def)"], ["proof (state)\nthis:\n  UNIV = UNIV \\<rightarrow>\\<^sub>E UNIV\n\ngoal (5 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. range (\\<lambda>_. UNIV) \\<subseteq> E\n 5. (\\<Union>i. UNIV) = UNIV", "moreover"], ["proof (state)\nthis:\n  UNIV = UNIV \\<rightarrow>\\<^sub>E UNIV\n\ngoal (5 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. range (\\<lambda>_. UNIV) \\<subseteq> E\n 5. (\\<Union>i. UNIV) = UNIV", "have \"... \\<in> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<rightarrow>\\<^sub>E UNIV \\<in> E", "unfolding E_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<rightarrow>\\<^sub>E UNIV\n    \\<in> {Pi\\<^sub>E UNIV X |X.\n           (\\<forall>i. X i \\<in> sets borel) \\<and>\n           finite {i. X i \\<noteq> UNIV}}", "by auto"], ["proof (state)\nthis:\n  UNIV \\<rightarrow>\\<^sub>E UNIV \\<in> E\n\ngoal (5 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. range (\\<lambda>_. UNIV) \\<subseteq> E\n 5. (\\<Union>i. UNIV) = UNIV", "ultimately"], ["proof (chain)\npicking this:\n  UNIV = UNIV \\<rightarrow>\\<^sub>E UNIV\n  UNIV \\<rightarrow>\\<^sub>E UNIV \\<in> E", "show \"range (\\<lambda>(i::nat). (UNIV::(int \\<Rightarrow> 'a) set)) \\<subseteq> E\""], ["proof (prove)\nusing this:\n  UNIV = UNIV \\<rightarrow>\\<^sub>E UNIV\n  UNIV \\<rightarrow>\\<^sub>E UNIV \\<in> E\n\ngoal (1 subgoal):\n 1. range (\\<lambda>i. UNIV) \\<subseteq> E", "by auto"], ["proof (state)\nthis:\n  range (\\<lambda>i. UNIV) \\<subseteq> E\n\ngoal (4 subgoals):\n 1. Int_stable E\n 2. E \\<subseteq> Pow UNIV\n 3. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 4. (\\<Union>i. UNIV) = UNIV", "show \"Int_stable E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Int_stable E", "proof (rule Int_stableI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "fix U V"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "assume \"U \\<in> E\" \"V \\<in> E\""], ["proof (state)\nthis:\n  U \\<in> E\n  V \\<in> E\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "then"], ["proof (chain)\npicking this:\n  U \\<in> E\n  V \\<in> E", "obtain X Y where H: \"U = (\\<Pi>\\<^sub>E i\\<in>UNIV. X i)\" \"\\<And>i. X i \\<in> sets borel\" \"finite {i. X i \\<noteq> UNIV}\"\n                                 \"V = (\\<Pi>\\<^sub>E i\\<in>UNIV. Y i)\" \"\\<And>i. Y i \\<in> sets borel\" \"finite {i. Y i \\<noteq> UNIV}\""], ["proof (prove)\nusing this:\n  U \\<in> E\n  V \\<in> E\n\ngoal (1 subgoal):\n 1. (\\<And>X Y.\n        \\<lbrakk>U = Pi\\<^sub>E UNIV X; \\<And>i. X i \\<in> sets borel;\n         finite {i. X i \\<noteq> UNIV}; V = Pi\\<^sub>E UNIV Y;\n         \\<And>i. Y i \\<in> sets borel;\n         finite {i. Y i \\<noteq> UNIV}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding E_def"], ["proof (prove)\nusing this:\n  U \\<in> {Pi\\<^sub>E UNIV X |X.\n           (\\<forall>i. X i \\<in> sets borel) \\<and>\n           finite {i. X i \\<noteq> UNIV}}\n  V \\<in> {Pi\\<^sub>E UNIV X |X.\n           (\\<forall>i. X i \\<in> sets borel) \\<and>\n           finite {i. X i \\<noteq> UNIV}}\n\ngoal (1 subgoal):\n 1. (\\<And>X Y.\n        \\<lbrakk>U = Pi\\<^sub>E UNIV X; \\<And>i. X i \\<in> sets borel;\n         finite {i. X i \\<noteq> UNIV}; V = Pi\\<^sub>E UNIV Y;\n         \\<And>i. Y i \\<in> sets borel;\n         finite {i. Y i \\<noteq> UNIV}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  U = Pi\\<^sub>E UNIV X\n  X ?i12 \\<in> sets borel\n  finite {i. X i \\<noteq> UNIV}\n  V = Pi\\<^sub>E UNIV Y\n  Y ?i12 \\<in> sets borel\n  finite {i. Y i \\<noteq> UNIV}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "define Z where \"Z = (\\<lambda>i. X i \\<inter> Y i)\""], ["proof (state)\nthis:\n  Z = (\\<lambda>i. X i \\<inter> Y i)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "have \"{i. Z i \\<noteq> UNIV} \\<subseteq> {i. X i \\<noteq> UNIV} \\<union> {i. Y i \\<noteq> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. Z i \\<noteq> UNIV}\n    \\<subseteq> {i. X i \\<noteq> UNIV} \\<union> {i. Y i \\<noteq> UNIV}", "unfolding Z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. X i \\<inter> Y i \\<noteq> UNIV}\n    \\<subseteq> {i. X i \\<noteq> UNIV} \\<union> {i. Y i \\<noteq> UNIV}", "by auto"], ["proof (state)\nthis:\n  {i. Z i \\<noteq> UNIV}\n  \\<subseteq> {i. X i \\<noteq> UNIV} \\<union> {i. Y i \\<noteq> UNIV}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "then"], ["proof (chain)\npicking this:\n  {i. Z i \\<noteq> UNIV}\n  \\<subseteq> {i. X i \\<noteq> UNIV} \\<union> {i. Y i \\<noteq> UNIV}", "have \"finite {i. Z i \\<noteq> UNIV}\""], ["proof (prove)\nusing this:\n  {i. Z i \\<noteq> UNIV}\n  \\<subseteq> {i. X i \\<noteq> UNIV} \\<union> {i. Y i \\<noteq> UNIV}\n\ngoal (1 subgoal):\n 1. finite {i. Z i \\<noteq> UNIV}", "using H(3) H(6) finite_subset"], ["proof (prove)\nusing this:\n  {i. Z i \\<noteq> UNIV}\n  \\<subseteq> {i. X i \\<noteq> UNIV} \\<union> {i. Y i \\<noteq> UNIV}\n  finite {i. X i \\<noteq> UNIV}\n  finite {i. Y i \\<noteq> UNIV}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite {i. Z i \\<noteq> UNIV}", "by auto"], ["proof (state)\nthis:\n  finite {i. Z i \\<noteq> UNIV}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "moreover"], ["proof (state)\nthis:\n  finite {i. Z i \\<noteq> UNIV}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "have \"U \\<inter> V = (\\<Pi>\\<^sub>E i\\<in>UNIV. Z i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<inter> V = Pi\\<^sub>E UNIV Z", "unfolding Z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<inter> V = (\\<Pi>\\<^sub>E i\\<in>UNIV. X i \\<inter> Y i)", "using H(1) H(4)"], ["proof (prove)\nusing this:\n  U = Pi\\<^sub>E UNIV X\n  V = Pi\\<^sub>E UNIV Y\n\ngoal (1 subgoal):\n 1. U \\<inter> V = (\\<Pi>\\<^sub>E i\\<in>UNIV. X i \\<inter> Y i)", "by auto"], ["proof (state)\nthis:\n  U \\<inter> V = Pi\\<^sub>E UNIV Z\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "moreover"], ["proof (state)\nthis:\n  U \\<inter> V = Pi\\<^sub>E UNIV Z\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "have \"\\<And>i. Z i \\<in> sets borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. Z i \\<in> sets borel", "unfolding Z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. X i \\<inter> Y i \\<in> sets borel", "using H(2) H(5)"], ["proof (prove)\nusing this:\n  X ?i12 \\<in> sets borel\n  Y ?i12 \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<And>i. X i \\<inter> Y i \\<in> sets borel", "by auto"], ["proof (state)\nthis:\n  Z ?i12 \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> E; b \\<in> E\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> E", "ultimately"], ["proof (chain)\npicking this:\n  finite {i. Z i \\<noteq> UNIV}\n  U \\<inter> V = Pi\\<^sub>E UNIV Z\n  Z ?i12 \\<in> sets borel", "show \"U \\<inter> V \\<in> E\""], ["proof (prove)\nusing this:\n  finite {i. Z i \\<noteq> UNIV}\n  U \\<inter> V = Pi\\<^sub>E UNIV Z\n  Z ?i12 \\<in> sets borel\n\ngoal (1 subgoal):\n 1. U \\<inter> V \\<in> E", "unfolding E_def"], ["proof (prove)\nusing this:\n  finite {i. Z i \\<noteq> UNIV}\n  U \\<inter> V = Pi\\<^sub>E UNIV Z\n  Z ?i12 \\<in> sets borel\n\ngoal (1 subgoal):\n 1. U \\<inter> V\n    \\<in> {Pi\\<^sub>E UNIV X |X.\n           (\\<forall>i. X i \\<in> sets borel) \\<and>\n           finite {i. X i \\<noteq> UNIV}}", "by auto"], ["proof (state)\nthis:\n  U \\<inter> V \\<in> E\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Int_stable E\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "fix U"], ["proof (state)\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "assume \"U \\<in> E\""], ["proof (state)\nthis:\n  U \\<in> E\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "then"], ["proof (chain)\npicking this:\n  U \\<in> E", "obtain X where H [measurable]: \"U = (\\<Pi>\\<^sub>E i\\<in>UNIV. X i)\" \"\\<And>i. X i \\<in> sets borel\" \"finite {i. X i \\<noteq> UNIV}\""], ["proof (prove)\nusing this:\n  U \\<in> E\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>U = Pi\\<^sub>E UNIV X; \\<And>i. X i \\<in> sets borel;\n         finite {i. X i \\<noteq> UNIV}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding E_def"], ["proof (prove)\nusing this:\n  U \\<in> {Pi\\<^sub>E UNIV X |X.\n           (\\<forall>i. X i \\<in> sets borel) \\<and>\n           finite {i. X i \\<noteq> UNIV}}\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>U = Pi\\<^sub>E UNIV X; \\<And>i. X i \\<in> sets borel;\n         finite {i. X i \\<noteq> UNIV}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  U = Pi\\<^sub>E UNIV X\n  X ?i12 \\<in> sets borel\n  finite {i. X i \\<noteq> UNIV}\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "define I where \"I = {i. X i \\<noteq> UNIV}\""], ["proof (state)\nthis:\n  I = {i. X i \\<noteq> UNIV}\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "have [simp]: \"finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. X i \\<noteq> UNIV}", "using H(3)"], ["proof (prove)\nusing this:\n  finite {i. X i \\<noteq> UNIV}\n\ngoal (1 subgoal):\n 1. finite {i. X i \\<noteq> UNIV}", "by auto"], ["proof (state)\nthis:\n  finite I\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "have [measurable]: \"(\\<Pi>\\<^sub>E i\\<in>I. X i) \\<in> sets (Pi\\<^sub>M I (\\<lambda>i. borel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pi\\<^sub>E I X \\<in> sets (Pi\\<^sub>M I (\\<lambda>i. borel))", "using H(2)"], ["proof (prove)\nusing this:\n  X ?i12 \\<in> sets borel\n\ngoal (1 subgoal):\n 1. Pi\\<^sub>E I X \\<in> sets (Pi\\<^sub>M I (\\<lambda>i. borel))", "by simp"], ["proof (state)\nthis:\n  Pi\\<^sub>E I X \\<in> sets (Pi\\<^sub>M I (\\<lambda>i. borel))\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "have *: \"U = emb UNIV I (\\<Pi>\\<^sub>E i\\<in>I. X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U = emb UNIV I (Pi\\<^sub>E I X)", "unfolding H(1) I_def prod_emb_def space_borel"], ["proof (prove)\ngoal (1 subgoal):\n 1. Pi\\<^sub>E UNIV X =\n    (\\<lambda>x. restrict x {i. X i \\<noteq> UNIV}) -`\n    Pi\\<^sub>E {i. X i \\<noteq> UNIV} X \\<inter>\n    (UNIV \\<rightarrow>\\<^sub>E UNIV)", "apply (auto simp add: PiE_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       restrict x {i. X i \\<noteq> UNIV}\n       \\<in> Pi {i. X i \\<noteq> UNIV} X \\<Longrightarrow>\n       x xa \\<in> X xa", "by (metis (mono_tags, lifting) PiE UNIV_I mem_Collect_eq restrict_Pi_cancel)"], ["proof (state)\nthis:\n  U = emb UNIV I (Pi\\<^sub>E I X)\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "have \"emeasure lim U = emeasure lim (int_left_shift-`U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "proof (cases \"I = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)\n 2. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "case True"], ["proof (state)\nthis:\n  I = {}\n\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)\n 2. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "then"], ["proof (chain)\npicking this:\n  I = {}", "have \"U = UNIV\""], ["proof (prove)\nusing this:\n  I = {}\n\ngoal (1 subgoal):\n 1. U = UNIV", "unfolding H(1) I_def"], ["proof (prove)\nusing this:\n  {i. X i \\<noteq> UNIV} = {}\n\ngoal (1 subgoal):\n 1. Pi\\<^sub>E UNIV X = UNIV", "by auto"], ["proof (state)\nthis:\n  U = UNIV\n\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)\n 2. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "then"], ["proof (chain)\npicking this:\n  U = UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  U = UNIV\n\ngoal (1 subgoal):\n 1. emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "by auto"], ["proof (state)\nthis:\n  emeasure local.lim U = emeasure local.lim (int_left_shift -` U)\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "case False"], ["proof (state)\nthis:\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have \"emeasure lim U = emeasure (P I) (\\<Pi>\\<^sub>E i\\<in>I. X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim U = emeasure (P I) (Pi\\<^sub>E I X)", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (emb UNIV I (Pi\\<^sub>E I X)) =\n    emeasure (P I) (Pi\\<^sub>E I X)", "by (rule emeasure_lim_emb, auto)"], ["proof (state)\nthis:\n  emeasure local.lim U = emeasure (P I) (Pi\\<^sub>E I X)\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "also"], ["proof (state)\nthis:\n  emeasure local.lim U = emeasure (P I) (Pi\\<^sub>E I X)\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have \"... = emeasure M (((\\<lambda>x. (\\<lambda>i\\<in>I. (T^^(nat(i- Min I))) x)))-`(\\<Pi>\\<^sub>E i\\<in>I. X i) \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (P I) (Pi\\<^sub>E I X) =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n      Pi\\<^sub>E I X \\<inter>\n      space M)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure\n     (distr M (Pi\\<^sub>M I (\\<lambda>i. borel))\n       (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x))\n     (Pi\\<^sub>E I X) =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n      Pi\\<^sub>E I X \\<inter>\n      space M)", "by (rule emeasure_distr, auto)"], ["proof (state)\nthis:\n  emeasure (P I) (Pi\\<^sub>E I X) =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n    Pi\\<^sub>E I X \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "finally"], ["proof (chain)\npicking this:\n  emeasure local.lim U =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n    Pi\\<^sub>E I X \\<inter>\n    space M)", "have A: \"emeasure lim U = emeasure M (((\\<lambda>x. (\\<lambda>i\\<in>I. (T^^(nat(i- Min I))) x)))-`(\\<Pi>\\<^sub>E i\\<in>I. X i) \\<inter> space M)\""], ["proof (prove)\nusing this:\n  emeasure local.lim U =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n    Pi\\<^sub>E I X \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. emeasure local.lim U =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n      Pi\\<^sub>E I X \\<inter>\n      space M)", "by simp"], ["proof (state)\nthis:\n  emeasure local.lim U =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n    Pi\\<^sub>E I X \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have i: \"int_left_shift-`U = (\\<Pi>\\<^sub>E i\\<in>UNIV. X (i-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int_left_shift -` U = (\\<Pi>\\<^sub>E i\\<in>UNIV. X (i - 1))", "unfolding H(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. int_left_shift -` Pi\\<^sub>E UNIV X =\n    (\\<Pi>\\<^sub>E i\\<in>UNIV. X (i - 1))", "apply (auto simp add: int_left_shift_def PiE_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       (\\<lambda>i. x (i + 1)) \\<in> Pi UNIV X \\<Longrightarrow>\n       x xa \\<in> X (xa - 1)\n 2. \\<And>x xa.\n       x \\<in> (\\<Pi> i\\<in>UNIV. X (i - 1)) \\<Longrightarrow>\n       x (xa + 1) \\<in> X xa", "by (metis PiE UNIV_I diff_add_cancel, metis Pi_mem add.commute add_diff_cancel_left' iso_tuple_UNIV_I)"], ["proof (state)\nthis:\n  int_left_shift -` U = (\\<Pi>\\<^sub>E i\\<in>UNIV. X (i - 1))\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "define Im where \"Im = {i. X (i-1) \\<noteq> UNIV}\""], ["proof (state)\nthis:\n  Im = {i. X (i - 1) \\<noteq> UNIV}\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have \"Im = (\\<lambda>i. i+1)`I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im = (\\<lambda>i. i + 1) ` I", "unfolding I_def Im_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. X (i - 1) \\<noteq> UNIV} =\n    (\\<lambda>i. i + 1) ` {i. X i \\<noteq> UNIV}", "using image_iff"], ["proof (prove)\nusing this:\n  (?z \\<in> ?f ` ?A) = (\\<exists>x\\<in>?A. ?z = ?f x)\n\ngoal (1 subgoal):\n 1. {i. X (i - 1) \\<noteq> UNIV} =\n    (\\<lambda>i. i + 1) ` {i. X i \\<noteq> UNIV}", "by (auto, fastforce)"], ["proof (state)\nthis:\n  Im = (\\<lambda>i. i + 1) ` I\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "then"], ["proof (chain)\npicking this:\n  Im = (\\<lambda>i. i + 1) ` I", "have [simp]: \"finite Im\""], ["proof (prove)\nusing this:\n  Im = (\\<lambda>i. i + 1) ` I\n\ngoal (1 subgoal):\n 1. finite Im", "by auto"], ["proof (state)\nthis:\n  finite Im\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have *: \"int_left_shift-`U = emb UNIV Im (\\<Pi>\\<^sub>E i\\<in>Im. X (i-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int_left_shift -` U = emb UNIV Im (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1))", "unfolding i Im_def prod_emb_def space_borel"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Pi>\\<^sub>E i\\<in>UNIV. X (i - 1)) =\n    (\\<lambda>x. restrict x {i. X (i - 1) \\<noteq> UNIV}) -`\n    (\\<Pi>\\<^sub>E i\\<in>{i. X (i - 1) \\<noteq> UNIV}. X (i - 1)) \\<inter>\n    (UNIV \\<rightarrow>\\<^sub>E UNIV)", "apply (auto simp add: PiE_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       restrict x {i. X (i - 1) \\<noteq> UNIV}\n       \\<in> (\\<Pi> i\\<in>{i. X (i - 1) \\<noteq> UNIV}.\n                 X (i - 1)) \\<Longrightarrow>\n       x xa \\<in> X (xa - 1)", "by (metis (mono_tags, lifting) PiE UNIV_I mem_Collect_eq restrict_Pi_cancel)"], ["proof (state)\nthis:\n  int_left_shift -` U = emb UNIV Im (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1))\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have \"emeasure lim (int_left_shift-`U) = emeasure (P Im) (\\<Pi>\\<^sub>E i\\<in>Im. X (i-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (int_left_shift -` U) =\n    emeasure (P Im) (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1))", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (emb UNIV Im (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1))) =\n    emeasure (P Im) (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1))", "by (rule emeasure_lim_emb, auto)"], ["proof (state)\nthis:\n  emeasure local.lim (int_left_shift -` U) =\n  emeasure (P Im) (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1))\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "also"], ["proof (state)\nthis:\n  emeasure local.lim (int_left_shift -` U) =\n  emeasure (P Im) (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1))\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have \"... = emeasure M (((\\<lambda>x. (\\<lambda>i\\<in>Im. (T^^(nat(i- Min Im))) x)))-`(\\<Pi>\\<^sub>E i\\<in>Im. X (i-1)) \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (P Im) (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n      (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) \\<inter>\n      space M)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure\n     (distr M (Pi\\<^sub>M Im (\\<lambda>i. borel))\n       (\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x))\n     (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n      (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) \\<inter>\n      space M)", "by (rule emeasure_distr, auto)"], ["proof (state)\nthis:\n  emeasure (P Im) (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n    (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "finally"], ["proof (chain)\npicking this:\n  emeasure local.lim (int_left_shift -` U) =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n    (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) \\<inter>\n    space M)", "have B: \"emeasure lim (int_left_shift-`U) = emeasure M (((\\<lambda>x. (\\<lambda>i\\<in>Im. (T^^(nat(i- Min Im))) x)))-`(\\<Pi>\\<^sub>E i\\<in>Im. X (i-1)) \\<inter> space M)\""], ["proof (prove)\nusing this:\n  emeasure local.lim (int_left_shift -` U) =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n    (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. emeasure local.lim (int_left_shift -` U) =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n      (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) \\<inter>\n      space M)", "by simp"], ["proof (state)\nthis:\n  emeasure local.lim (int_left_shift -` U) =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n    (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have \"Min Im = Min I + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min Im = Min I + 1", "unfolding \\<open>Im = (\\<lambda>i. i+1)`I\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (MIN i\\<in>I. i + 1) = Min I + 1", "by (rule mono_Min_commute[symmetric], auto simp add: False monoI)"], ["proof (state)\nthis:\n  Min Im = Min I + 1\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "have \"((\\<lambda>x. (\\<lambda>i\\<in>Im. (T^^(nat(i- Min Im))) x)))-`(\\<Pi>\\<^sub>E i\\<in>Im. X (i-1)) = ((\\<lambda>x. (\\<lambda>i\\<in>I. (T^^(nat(i- Min I))) x)))-`(\\<Pi>\\<^sub>E i\\<in>I. X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n    (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n    (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n    Pi\\<^sub>E I X", "unfolding \\<open>Min Im = Min I + 1\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - (Min I + 1))) x) -`\n    (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n    (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n    Pi\\<^sub>E I X", "unfolding \\<open>Im = (\\<lambda>i. i+1)`I\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<lambda>i\\<in>(\\<lambda>i. i + 1) ` I.\n           (T ^^ nat (i - (Min I + 1))) x) -`\n    (\\<Pi>\\<^sub>E i\\<in>(\\<lambda>i. i + 1) ` I. X (i - 1)) =\n    (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n    Pi\\<^sub>E I X", "by (auto simp add: Pi_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n  (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n  (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -` Pi\\<^sub>E I X\n\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n  (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n  (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -` Pi\\<^sub>E I X", "show \"emeasure lim U = emeasure lim (int_left_shift -` U)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n  (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n  (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -` Pi\\<^sub>E I X\n\ngoal (1 subgoal):\n 1. emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "using A B"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n  (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) =\n  (\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -` Pi\\<^sub>E I X\n  emeasure local.lim U =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>I. (T ^^ nat (i - Min I)) x) -`\n    Pi\\<^sub>E I X \\<inter>\n    space M)\n  emeasure local.lim (int_left_shift -` U) =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>Im. (T ^^ nat (i - Min Im)) x) -`\n    (\\<Pi>\\<^sub>E i\\<in>Im. X (i - 1)) \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. emeasure local.lim U = emeasure local.lim (int_left_shift -` U)", "by auto"], ["proof (state)\nthis:\n  emeasure local.lim U = emeasure local.lim (int_left_shift -` U)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure local.lim U = emeasure local.lim (int_left_shift -` U)\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "also"], ["proof (state)\nthis:\n  emeasure local.lim U = emeasure local.lim (int_left_shift -` U)\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "have \"... = emeasure lim (int_left_shift-`U \\<inter> space lim)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (int_left_shift -` U) =\n    emeasure local.lim (int_left_shift -` U \\<inter> space local.lim)", "unfolding \\<open>space lim = UNIV\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (int_left_shift -` U) =\n    emeasure local.lim (int_left_shift -` U \\<inter> UNIV)", "by auto"], ["proof (state)\nthis:\n  emeasure local.lim (int_left_shift -` U) =\n  emeasure local.lim (int_left_shift -` U \\<inter> space local.lim)\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "also"], ["proof (state)\nthis:\n  emeasure local.lim (int_left_shift -` U) =\n  emeasure local.lim (int_left_shift -` U \\<inter> space local.lim)\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "have \"... = emeasure (distr lim lim int_left_shift) U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (int_left_shift -` U \\<inter> space local.lim) =\n    emeasure (distr local.lim local.lim int_left_shift) U", "apply (rule emeasure_distr[symmetric], auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> sets (Pi\\<^sub>M UNIV (\\<lambda>_. borel))", "using *"], ["proof (prove)\nusing this:\n  U = emb UNIV I (Pi\\<^sub>E I X)\n\ngoal (1 subgoal):\n 1. U \\<in> sets (Pi\\<^sub>M UNIV (\\<lambda>_. borel))", "by auto"], ["proof (state)\nthis:\n  emeasure local.lim (int_left_shift -` U \\<inter> space local.lim) =\n  emeasure (distr local.lim local.lim int_left_shift) U\n\ngoal (3 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. \\<And>X.\n       X \\<in> E \\<Longrightarrow>\n       emeasure local.lim X =\n       emeasure (distr local.lim local.lim int_left_shift) X\n 3. (\\<Union>i. UNIV) = UNIV", "finally"], ["proof (chain)\npicking this:\n  emeasure local.lim U =\n  emeasure (distr local.lim local.lim int_left_shift) U", "show \"emeasure lim U = emeasure (distr lim lim int_left_shift) U\""], ["proof (prove)\nusing this:\n  emeasure local.lim U =\n  emeasure (distr local.lim local.lim int_left_shift) U\n\ngoal (1 subgoal):\n 1. emeasure local.lim U =\n    emeasure (distr local.lim local.lim int_left_shift) U", "by simp"], ["proof (state)\nthis:\n  emeasure local.lim U =\n  emeasure (distr local.lim local.lim int_left_shift) U\n\ngoal (2 subgoals):\n 1. E \\<subseteq> Pow UNIV\n 2. (\\<Union>i. UNIV) = UNIV", "qed (auto)"], ["proof (state)\nthis:\n  local.lim = distr local.lim local.lim int_left_shift\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "fix U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "assume \"U \\<in> sets natural_extension_measure\""], ["proof (state)\nthis:\n  U \\<in> sets natural_extension_measure\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "then"], ["proof (chain)\npicking this:\n  U \\<in> sets natural_extension_measure", "have [measurable]: \"U \\<in> sets lim\""], ["proof (prove)\nusing this:\n  U \\<in> sets natural_extension_measure\n\ngoal (1 subgoal):\n 1. U \\<in> P.events", "using \\<open>natural_extension_measure = lim\\<close>"], ["proof (prove)\nusing this:\n  U \\<in> sets natural_extension_measure\n  natural_extension_measure = local.lim\n\ngoal (1 subgoal):\n 1. U \\<in> P.events", "by simp"], ["proof (state)\nthis:\n  U \\<in> P.events\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "have \"emeasure natural_extension_measure (natural_extension_map -` U \\<inter> space natural_extension_measure)\n          = emeasure lim (int_left_shift-`U \\<inter> space lim)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure natural_extension_measure\n     (natural_extension_map -` U \\<inter> space natural_extension_measure) =\n    emeasure local.lim (int_left_shift -` U \\<inter> space local.lim)", "unfolding \\<open>natural_extension_measure = lim\\<close> natural_extension_map_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (int_left_shift -` U \\<inter> space local.lim) =\n    emeasure local.lim (int_left_shift -` U \\<inter> space local.lim)", "by simp"], ["proof (state)\nthis:\n  emeasure natural_extension_measure\n   (natural_extension_map -` U \\<inter> space natural_extension_measure) =\n  emeasure local.lim (int_left_shift -` U \\<inter> space local.lim)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "also"], ["proof (state)\nthis:\n  emeasure natural_extension_measure\n   (natural_extension_map -` U \\<inter> space natural_extension_measure) =\n  emeasure local.lim (int_left_shift -` U \\<inter> space local.lim)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "have \"... = emeasure (distr lim lim int_left_shift) U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (int_left_shift -` U \\<inter> space local.lim) =\n    emeasure (distr local.lim local.lim int_left_shift) U", "apply (rule emeasure_distr[symmetric], auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> sets (Pi\\<^sub>M UNIV (\\<lambda>_. borel))", "using \\<open>U \\<in> P.events\\<close>"], ["proof (prove)\nusing this:\n  U \\<in> P.events\n\ngoal (1 subgoal):\n 1. U \\<in> sets (Pi\\<^sub>M UNIV (\\<lambda>_. borel))", "by auto"], ["proof (state)\nthis:\n  emeasure local.lim (int_left_shift -` U \\<inter> space local.lim) =\n  emeasure (distr local.lim local.lim int_left_shift) U\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "also"], ["proof (state)\nthis:\n  emeasure local.lim (int_left_shift -` U \\<inter> space local.lim) =\n  emeasure (distr local.lim local.lim int_left_shift) U\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "have \"... = emeasure lim U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (distr local.lim local.lim int_left_shift) U =\n    emeasure local.lim U", "using \\<open>lim = distr lim lim int_left_shift\\<close>"], ["proof (prove)\nusing this:\n  local.lim = distr local.lim local.lim int_left_shift\n\ngoal (1 subgoal):\n 1. emeasure (distr local.lim local.lim int_left_shift) U =\n    emeasure local.lim U", "by simp"], ["proof (state)\nthis:\n  emeasure (distr local.lim local.lim int_left_shift) U =\n  emeasure local.lim U\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "also"], ["proof (state)\nthis:\n  emeasure (distr local.lim local.lim int_left_shift) U =\n  emeasure local.lim U\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "have \"... = emeasure natural_extension_measure U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim U = emeasure natural_extension_measure U", "using \\<open>natural_extension_measure = lim\\<close>"], ["proof (prove)\nusing this:\n  natural_extension_measure = local.lim\n\ngoal (1 subgoal):\n 1. emeasure local.lim U = emeasure natural_extension_measure U", "by simp"], ["proof (state)\nthis:\n  emeasure local.lim U = emeasure natural_extension_measure U\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets natural_extension_measure \\<Longrightarrow>\n       emeasure natural_extension_measure\n        (natural_extension_map -` A \\<inter>\n         space natural_extension_measure) =\n       emeasure natural_extension_measure A", "finally"], ["proof (chain)\npicking this:\n  emeasure natural_extension_measure\n   (natural_extension_map -` U \\<inter> space natural_extension_measure) =\n  emeasure natural_extension_measure U", "show \"emeasure natural_extension_measure (natural_extension_map -` U \\<inter> space natural_extension_measure)\n                  = emeasure natural_extension_measure U\""], ["proof (prove)\nusing this:\n  emeasure natural_extension_measure\n   (natural_extension_map -` U \\<inter> space natural_extension_measure) =\n  emeasure natural_extension_measure U\n\ngoal (1 subgoal):\n 1. emeasure natural_extension_measure\n     (natural_extension_map -` U \\<inter> space natural_extension_measure) =\n    emeasure natural_extension_measure U", "by simp"], ["proof (state)\nthis:\n  emeasure natural_extension_measure\n   (natural_extension_map -` U \\<inter> space natural_extension_measure) =\n  emeasure natural_extension_measure U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmpt natural_extension_measure natural_extension_map\n\ngoal (2 subgoals):\n 1. qmpt.invertible_qmpt natural_extension_measure natural_extension_map\n 2. mpt.mpt_factor natural_extension_measure natural_extension_map\n     natural_extension_proj M T", "then"], ["proof (chain)\npicking this:\n  pmpt natural_extension_measure natural_extension_map", "interpret I: pmpt natural_extension_measure natural_extension_map"], ["proof (prove)\nusing this:\n  pmpt natural_extension_measure natural_extension_map\n\ngoal (1 subgoal):\n 1. pmpt natural_extension_measure natural_extension_map", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. I.invertible_qmpt\n 2. I.mpt_factor natural_extension_proj M T", "show \"I.invertible_qmpt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I.invertible_qmpt", "unfolding I.invertible_qmpt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij natural_extension_map \\<and>\n    I.random_variable natural_extension_measure (inv natural_extension_map)", "unfolding natural_extension_map_def \\<open>natural_extension_measure = lim\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij int_left_shift \\<and>\n    P.random_variable local.lim (inv int_left_shift)", "by (auto simp add: int_shift_bij)"], ["proof (state)\nthis:\n  I.invertible_qmpt\n\ngoal (1 subgoal):\n 1. I.mpt_factor natural_extension_proj M T", "show \"I.mpt_factor natural_extension_proj M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I.mpt_factor natural_extension_proj M T", "unfolding I.mpt_factor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. natural_extension_proj\n    \\<in> measure_preserving natural_extension_measure M \\<and>\n    (AE x in natural_extension_measure. natural_extension_proj\n   (natural_extension_map x) =\n  T (natural_extension_proj x)) \\<and>\n    mpt M T", "proof (auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. natural_extension_proj\n    \\<in> measure_preserving natural_extension_measure M\n 2. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)\n 3. mpt M T", "show \"mpt M T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mpt M T", "by (simp add: mpt_axioms)"], ["proof (state)\nthis:\n  mpt M T\n\ngoal (2 subgoals):\n 1. natural_extension_proj\n    \\<in> measure_preserving natural_extension_measure M\n 2. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "show \"natural_extension_proj \\<in> measure_preserving natural_extension_measure M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. natural_extension_proj\n    \\<in> measure_preserving natural_extension_measure M", "unfolding \\<open>natural_extension_measure = lim\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. natural_extension_proj \\<in> measure_preserving local.lim M", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. P.random_variable M natural_extension_proj\n 2. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "have *: \"measurable lim M = measurable borel borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.lim \\<rightarrow>\\<^sub>M M = borel_measurable borel", "apply (rule measurable_cong_sets)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P.events = sets borel\n 2. events = sets borel", "using sets_PiM_equal_borel M_eq_borel"], ["proof (prove)\nusing this:\n  sets (Pi\\<^sub>M UNIV (\\<lambda>i. borel)) = sets borel\n  events = sets borel\n\ngoal (2 subgoals):\n 1. P.events = sets borel\n 2. events = sets borel", "by auto"], ["proof (state)\nthis:\n  local.lim \\<rightarrow>\\<^sub>M M = borel_measurable borel\n\ngoal (2 subgoals):\n 1. P.random_variable M natural_extension_proj\n 2. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "show \"natural_extension_proj \\<in> measurable lim M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P.random_variable M natural_extension_proj", "unfolding * natural_extension_proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x 0) \\<in> borel_measurable borel", "by auto"], ["proof (state)\nthis:\n  P.random_variable M natural_extension_proj\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "fix U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "assume [measurable]: \"U \\<in> sets M\""], ["proof (state)\nthis:\n  U \\<in> events\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "have *: \"(((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x))-` ({0} \\<rightarrow>\\<^sub>E U) \\<inter> space M) = U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n    ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n    space M =\n    U", "using sets.sets_into_space[OF \\<open>U \\<in> sets M\\<close>]"], ["proof (prove)\nusing this:\n  U \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n    ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n    space M =\n    U", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n  ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n  space M =\n  U\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "have \"natural_extension_proj-`U \\<inter> space lim = emb UNIV {0} (\\<Pi>\\<^sub>E i\\<in>{0}. U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. natural_extension_proj -` U \\<inter> space local.lim =\n    emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U)", "unfolding \\<open>space lim = UNIV\\<close> natural_extension_proj_def prod_emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x 0) -` U \\<inter> UNIV =\n    (\\<lambda>x. restrict x {0}) -` ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n    (UNIV \\<rightarrow>\\<^sub>E space borel)", "by (auto simp add: PiE_iff)"], ["proof (state)\nthis:\n  natural_extension_proj -` U \\<inter> space local.lim =\n  emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "then"], ["proof (chain)\npicking this:\n  natural_extension_proj -` U \\<inter> space local.lim =\n  emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U)", "have \"emeasure lim (natural_extension_proj-`U \\<inter> space lim) = emeasure lim (emb UNIV {0} (\\<Pi>\\<^sub>E i\\<in>{0}. U))\""], ["proof (prove)\nusing this:\n  natural_extension_proj -` U \\<inter> space local.lim =\n  emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U)\n\ngoal (1 subgoal):\n 1. emeasure local.lim\n     (natural_extension_proj -` U \\<inter> space local.lim) =\n    emeasure local.lim (emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U))", "by simp"], ["proof (state)\nthis:\n  emeasure local.lim\n   (natural_extension_proj -` U \\<inter> space local.lim) =\n  emeasure local.lim (emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "also"], ["proof (state)\nthis:\n  emeasure local.lim\n   (natural_extension_proj -` U \\<inter> space local.lim) =\n  emeasure local.lim (emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "have \"... = emeasure (P {0}) (\\<Pi>\\<^sub>E i\\<in>{0}. U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U)) =\n    emeasure (P {0}) ({0} \\<rightarrow>\\<^sub>E U)", "apply (rule emeasure_lim_emb, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0} \\<rightarrow>\\<^sub>E U\n    \\<in> sets (Pi\\<^sub>M {0} (\\<lambda>i. borel))", "using \\<open>U \\<in> sets M\\<close> M_eq_borel"], ["proof (prove)\nusing this:\n  U \\<in> events\n  events = sets borel\n\ngoal (1 subgoal):\n 1. {0} \\<rightarrow>\\<^sub>E U\n    \\<in> sets (Pi\\<^sub>M {0} (\\<lambda>i. borel))", "by auto"], ["proof (state)\nthis:\n  emeasure local.lim (emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U)) =\n  emeasure (P {0}) ({0} \\<rightarrow>\\<^sub>E U)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "also"], ["proof (state)\nthis:\n  emeasure local.lim (emb UNIV {0} ({0} \\<rightarrow>\\<^sub>E U)) =\n  emeasure (P {0}) ({0} \\<rightarrow>\\<^sub>E U)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "have \"... = emeasure M (((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x))-` ({0} \\<rightarrow>\\<^sub>E U) \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (P {0}) ({0} \\<rightarrow>\\<^sub>E U) =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n      ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n      space M)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure\n     (distr M (Pi\\<^sub>M {0} (\\<lambda>i. borel))\n       (\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x))\n     ({0} \\<rightarrow>\\<^sub>E U) =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n      ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n      space M)", "apply (rule emeasure_distr)"], ["proof (prove)\ngoal (2 subgoals):\n 1. random_variable (Pi\\<^sub>M {0} (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x)\n 2. {0} \\<rightarrow>\\<^sub>E U\n    \\<in> sets (Pi\\<^sub>M {0} (\\<lambda>i. borel))", "using \\<open>U \\<in> sets M\\<close> M_eq_borel"], ["proof (prove)\nusing this:\n  U \\<in> events\n  events = sets borel\n\ngoal (2 subgoals):\n 1. random_variable (Pi\\<^sub>M {0} (\\<lambda>i. borel))\n     (\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x)\n 2. {0} \\<rightarrow>\\<^sub>E U\n    \\<in> sets (Pi\\<^sub>M {0} (\\<lambda>i. borel))", "by auto"], ["proof (state)\nthis:\n  emeasure (P {0}) ({0} \\<rightarrow>\\<^sub>E U) =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n    ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "also"], ["proof (state)\nthis:\n  emeasure (P {0}) ({0} \\<rightarrow>\\<^sub>E U) =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n    ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "have \"... = emeasure M U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n      ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n      space M) =\n    emeasure M U", "using *"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n  ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n  space M =\n  U\n\ngoal (1 subgoal):\n 1. emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n      ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n      space M) =\n    emeasure M U", "by simp"], ["proof (state)\nthis:\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>{0}. (T ^^ nat (i - Min {0})) x) -`\n    ({0} \\<rightarrow>\\<^sub>E U) \\<inter>\n    space M) =\n  emeasure M U\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> events \\<Longrightarrow>\n       emeasure local.lim\n        (natural_extension_proj -` A \\<inter> space local.lim) =\n       emeasure M A", "finally"], ["proof (chain)\npicking this:\n  emeasure local.lim\n   (natural_extension_proj -` U \\<inter> space local.lim) =\n  emeasure M U", "show \"emeasure lim (natural_extension_proj-`U \\<inter> space lim) = emeasure M U\""], ["proof (prove)\nusing this:\n  emeasure local.lim\n   (natural_extension_proj -` U \\<inter> space local.lim) =\n  emeasure M U\n\ngoal (1 subgoal):\n 1. emeasure local.lim\n     (natural_extension_proj -` U \\<inter> space local.lim) =\n    emeasure M U", "by simp"], ["proof (state)\nthis:\n  emeasure local.lim\n   (natural_extension_proj -` U \\<inter> space local.lim) =\n  emeasure M U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  natural_extension_proj\n  \\<in> measure_preserving natural_extension_measure M\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "define U::\"(int \\<Rightarrow> 'a) set\" where \"U = {x \\<in> space (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel)). x 1 = T (x 0)}\""], ["proof (state)\nthis:\n  U = {x \\<in> space (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel)). x 1 = T (x 0)}\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "have *: \"((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x))-` U \\<inter> space M = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n    U \\<inter>\n    space M =\n    space M", "unfolding U_def space_PiM space_borel"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n    {x \\<in> {0, 1} \\<rightarrow>\\<^sub>E UNIV. x 1 = T (x 0)} \\<inter>\n    space M =\n    space M", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n  U \\<inter>\n  space M =\n  space M\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "have [measurable]: \"T \\<in> measurable borel borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> borel_measurable borel", "using M_eq_borel"], ["proof (prove)\nusing this:\n  events = sets borel\n\ngoal (1 subgoal):\n 1. T \\<in> borel_measurable borel", "by auto"], ["proof (state)\nthis:\n  T \\<in> borel_measurable borel\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "have [measurable]: \"U \\<in> sets (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> sets (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel))", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> space (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel)). x 1 = T (x 0)}\n    \\<in> sets (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel))", "by (rule measurable_equality_set, auto)"], ["proof (state)\nthis:\n  U \\<in> sets (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel))\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "have \"emeasure natural_extension_measure (emb UNIV {0, 1} U) = emeasure (P {0, 1}) U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure natural_extension_measure (emb UNIV {0, 1} U) =\n    emeasure (P {0, 1}) U", "unfolding \\<open>natural_extension_measure = lim\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure local.lim (emb UNIV {0, 1} U) = emeasure (P {0, 1}) U", "by (rule emeasure_lim_emb, auto)"], ["proof (state)\nthis:\n  emeasure natural_extension_measure (emb UNIV {0, 1} U) =\n  emeasure (P {0, 1}) U\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "also"], ["proof (state)\nthis:\n  emeasure natural_extension_measure (emb UNIV {0, 1} U) =\n  emeasure (P {0, 1}) U\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "have \"... = emeasure M (((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x))-` U \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (P {0, 1}) U =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n      U \\<inter>\n      space M)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure\n     (distr M (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel))\n       (\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x))\n     U =\n    emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n      U \\<inter>\n      space M)", "by (rule emeasure_distr, auto)"], ["proof (state)\nthis:\n  emeasure (P {0, 1}) U =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n    U \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "also"], ["proof (state)\nthis:\n  emeasure (P {0, 1}) U =\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n    U \\<inter>\n    space M)\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "have \"... = emeasure M (space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n      U \\<inter>\n      space M) =\n    emeasure M (space M)", "using *"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n  U \\<inter>\n  space M =\n  space M\n\ngoal (1 subgoal):\n 1. emeasure M\n     ((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n      U \\<inter>\n      space M) =\n    emeasure M (space M)", "by simp"], ["proof (state)\nthis:\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n    U \\<inter>\n    space M) =\n  emeasure M (space M)\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "also"], ["proof (state)\nthis:\n  emeasure M\n   ((\\<lambda>x. \\<lambda>i\\<in>{0, 1}. (T ^^ nat (i - Min {0, 1})) x) -`\n    U \\<inter>\n    space M) =\n  emeasure M (space M)\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (space M) = 1", "by (simp add: emeasure_space_1)"], ["proof (state)\nthis:\n  emeasure M (space M) = 1\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "finally"], ["proof (chain)\npicking this:\n  emeasure natural_extension_measure (emb UNIV {0, 1} U) = 1", "have *: \"emeasure natural_extension_measure (emb UNIV {0, 1} U) = 1\""], ["proof (prove)\nusing this:\n  emeasure natural_extension_measure (emb UNIV {0, 1} U) = 1\n\ngoal (1 subgoal):\n 1. emeasure natural_extension_measure (emb UNIV {0, 1} U) = 1", "by simp"], ["proof (state)\nthis:\n  emeasure natural_extension_measure (emb UNIV {0, 1} U) = 1\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "have \"AE x in natural_extension_measure. x \\<in> emb UNIV {0, 1} U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. x \\<in> emb UNIV {0, 1} U", "apply (rule I.AE_prob_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I.prob (emb UNIV {0, 1} U) = 1", "using *"], ["proof (prove)\nusing this:\n  emeasure natural_extension_measure (emb UNIV {0, 1} U) = 1\n\ngoal (1 subgoal):\n 1. I.prob (emb UNIV {0, 1} U) = 1", "by (simp add: I.emeasure_eq_measure)"], ["proof (state)\nthis:\n  AE x in natural_extension_measure. x \\<in> emb UNIV {0, 1} U\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "moreover"], ["proof (state)\nthis:\n  AE x in natural_extension_measure. x \\<in> emb UNIV {0, 1} U\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "{"], ["proof (state)\nthis:\n  AE x in natural_extension_measure. x \\<in> emb UNIV {0, 1} U\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "assume \"x \\<in> emb UNIV {0, 1} U\""], ["proof (state)\nthis:\n  x \\<in> emb UNIV {0, 1} U\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "then"], ["proof (chain)\npicking this:\n  x \\<in> emb UNIV {0, 1} U", "have \"x 1 = T (x 0)\""], ["proof (prove)\nusing this:\n  x \\<in> emb UNIV {0, 1} U\n\ngoal (1 subgoal):\n 1. x 1 = T (x 0)", "unfolding prod_emb_def U_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. restrict x {0, 1}) -`\n          {x \\<in> space (Pi\\<^sub>M {0, 1} (\\<lambda>i. borel)).\n           x 1 = T (x 0)} \\<inter>\n          (UNIV \\<rightarrow>\\<^sub>E space borel)\n\ngoal (1 subgoal):\n 1. x 1 = T (x 0)", "by auto"], ["proof (state)\nthis:\n  x 1 = T (x 0)\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "then"], ["proof (chain)\npicking this:\n  x 1 = T (x 0)", "have \"natural_extension_proj (natural_extension_map x) = T (natural_extension_proj x)\""], ["proof (prove)\nusing this:\n  x 1 = T (x 0)\n\ngoal (1 subgoal):\n 1. natural_extension_proj (natural_extension_map x) =\n    T (natural_extension_proj x)", "unfolding natural_extension_proj_def natural_extension_map_def int_left_shift_def"], ["proof (prove)\nusing this:\n  x 1 = T (x 0)\n\ngoal (1 subgoal):\n 1. x (0 + 1) = T (x 0)", "by auto"], ["proof (state)\nthis:\n  natural_extension_proj (natural_extension_map x) =\n  T (natural_extension_proj x)\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "}"], ["proof (state)\nthis:\n  ?x14 \\<in> emb UNIV {0, 1} U \\<Longrightarrow>\n  natural_extension_proj (natural_extension_map ?x14) =\n  T (natural_extension_proj ?x14)\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "ultimately"], ["proof (chain)\npicking this:\n  AE x in natural_extension_measure. x \\<in> emb UNIV {0, 1} U\n  ?x14 \\<in> emb UNIV {0, 1} U \\<Longrightarrow>\n  natural_extension_proj (natural_extension_map ?x14) =\n  T (natural_extension_proj ?x14)", "show \"AE x in natural_extension_measure.\n        natural_extension_proj (natural_extension_map x) = T (natural_extension_proj x)\""], ["proof (prove)\nusing this:\n  AE x in natural_extension_measure. x \\<in> emb UNIV {0, 1} U\n  ?x14 \\<in> emb UNIV {0, 1} U \\<Longrightarrow>\n  natural_extension_proj (natural_extension_map ?x14) =\n  T (natural_extension_proj ?x14)\n\ngoal (1 subgoal):\n 1. AE x in natural_extension_measure. natural_extension_proj\n  (natural_extension_map x) =\n T (natural_extension_proj x)", "by auto"], ["proof (state)\nthis:\n  AE x in natural_extension_measure. natural_extension_proj\n(natural_extension_map x) =\n                                     T (natural_extension_proj x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I.mpt_factor natural_extension_proj M T\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "(*of Measure_Preserving_Transformations.thy*)"]]}