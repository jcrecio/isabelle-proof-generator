{"file_name": "/home/qj213/afp-2021-10-22/thys/Ergodic_Theory/ME_Library_Complement.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ergodic_Theory", "problem_names": ["lemma space_trivial_measure [simp]: \"space (trivial_measure X) = X\"", "lemma sets_trivial_measure: \"sets (trivial_measure X) = {{}, X}\"", "lemma measurable_trivial_measure:\n  assumes \"f \\<in> space M \\<rightarrow> X\" and \"f -` X \\<inter> space M \\<in> sets M\"\n  shows   \"f \\<in> M \\<rightarrow>\\<^sub>M trivial_measure X\"", "lemma measurable_trivial_measure_iff:\n  \"f \\<in> M \\<rightarrow>\\<^sub>M trivial_measure X \\<longleftrightarrow> f \\<in> space M \\<rightarrow> X \\<and> f -` X \\<inter> space M \\<in> sets M\"", "lemma pullback_algebra_minimal:\n  assumes \"f \\<in> M \\<rightarrow>\\<^sub>M N\"\n  shows   \"sets.pullback_algebra N f (space M) \\<subseteq> sets M\"", "lemma (in sigma_algebra) sigma_algebra_pullback: \"sigma_algebra \\<Omega>' (pullback_algebra f \\<Omega>')\"", "lemma (in sigma_algebra) in_pullback_algebra: \"A \\<in> M \\<Longrightarrow> f -` A \\<inter> \\<Omega>' \\<in> pullback_algebra f \\<Omega>'\""], "translations": [["", "lemma space_trivial_measure [simp]: \"space (trivial_measure X) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (trivial_measure X) = X", "by (simp add: trivial_measure_def)"], ["", "lemma sets_trivial_measure: \"sets (trivial_measure X) = {{}, X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (trivial_measure X) = {{}, X}", "by (simp add: trivial_measure_def sigma_algebra_trivial sigma_algebra.sigma_sets_eq)"], ["", "lemma measurable_trivial_measure:\n  assumes \"f \\<in> space M \\<rightarrow> X\" and \"f -` X \\<inter> space M \\<in> sets M\"\n  shows   \"f \\<in> M \\<rightarrow>\\<^sub>M trivial_measure X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M trivial_measure X", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> space M \\<rightarrow> X\n  f -` X \\<inter> space M \\<in> sets M\n\ngoal (1 subgoal):\n 1. f \\<in> M \\<rightarrow>\\<^sub>M trivial_measure X", "unfolding measurable_def"], ["proof (prove)\nusing this:\n  f \\<in> space M \\<rightarrow> X\n  f -` X \\<inter> space M \\<in> sets M\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> space M \\<rightarrow> space (trivial_measure X).\n             \\<forall>y\\<in>sets (trivial_measure X).\n                f -` y \\<inter> space M \\<in> sets M}", "by (auto simp: sets_trivial_measure)"], ["", "lemma measurable_trivial_measure_iff:\n  \"f \\<in> M \\<rightarrow>\\<^sub>M trivial_measure X \\<longleftrightarrow> f \\<in> space M \\<rightarrow> X \\<and> f -` X \\<inter> space M \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> M \\<rightarrow>\\<^sub>M trivial_measure X) =\n    (f \\<in> space M \\<rightarrow> X \\<and>\n     f -` X \\<inter> space M \\<in> sets M)", "unfolding measurable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> {f \\<in> space M \\<rightarrow> space (trivial_measure X).\n              \\<forall>y\\<in>sets (trivial_measure X).\n                 f -` y \\<inter> space M \\<in> sets M}) =\n    (f \\<in> space M \\<rightarrow> X \\<and>\n     f -` X \\<inter> space M \\<in> sets M)", "by (auto simp: sets_trivial_measure)"], ["", "subsection \\<open>Pullback algebras\\<close>"], ["", "text \\<open>\n  The pullback algebra $f^{-1}(\\Sigma)$ of a \\<open>\\<sigma>\\<close>-algebra $(\\Omega, \\Sigma)$ is the smallest\n  \\<open>\\<sigma>\\<close>-algebra such that $f$ is $f^{-1}(\\Sigma)--\\Sigma$-measurable.\n\\<close>"], ["", "definition (in sigma_algebra) pullback_algebra :: \"('b \\<Rightarrow> 'a) \\<Rightarrow> 'b set \\<Rightarrow> 'b set set\" where\n  \"pullback_algebra f \\<Omega>' = sigma_sets \\<Omega>' {f -` A \\<inter> \\<Omega>' |A. A \\<in> M}\""], ["", "lemma pullback_algebra_minimal:\n  assumes \"f \\<in> M \\<rightarrow>\\<^sub>M N\"\n  shows   \"sets.pullback_algebra N f (space M) \\<subseteq> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets.pullback_algebra N f (space M) \\<subseteq> sets M", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sets.pullback_algebra N f (space M) \\<Longrightarrow>\n       x \\<in> sets M", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sets.pullback_algebra N f (space M) \\<Longrightarrow>\n       x \\<in> sets M", "assume \"X \\<in> sets.pullback_algebra N f (space M)\""], ["proof (state)\nthis:\n  X \\<in> sets.pullback_algebra N f (space M)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sets.pullback_algebra N f (space M) \\<Longrightarrow>\n       x \\<in> sets M", "thus \"X \\<in> sets M\""], ["proof (prove)\nusing this:\n  X \\<in> sets.pullback_algebra N f (space M)\n\ngoal (1 subgoal):\n 1. X \\<in> sets M", "unfolding sets.pullback_algebra_def"], ["proof (prove)\nusing this:\n  X \\<in> sigma_sets (space M) {f -` A \\<inter> space M |A. A \\<in> sets N}\n\ngoal (1 subgoal):\n 1. X \\<in> sets M", "by induction (use assms in \\<open>auto simp: measurable_def\\<close>)"], ["proof (state)\nthis:\n  X \\<in> sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in sigma_algebra) sigma_algebra_pullback: \"sigma_algebra \\<Omega>' (pullback_algebra f \\<Omega>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra \\<Omega>' (pullback_algebra f \\<Omega>')", "unfolding pullback_algebra_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra \\<Omega>'\n     (sigma_sets \\<Omega>' {f -` A \\<inter> \\<Omega>' |A. A \\<in> M})", "by (rule sigma_algebra_sigma_sets) auto"], ["", "lemma (in sigma_algebra) in_pullback_algebra: \"A \\<in> M \\<Longrightarrow> f -` A \\<inter> \\<Omega>' \\<in> pullback_algebra f \\<Omega>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> M \\<Longrightarrow>\n    f -` A \\<inter> \\<Omega>' \\<in> pullback_algebra f \\<Omega>'", "unfolding pullback_algebra_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> M \\<Longrightarrow>\n    f -` A \\<inter> \\<Omega>'\n    \\<in> sigma_sets \\<Omega>' {f -` A \\<inter> \\<Omega>' |A. A \\<in> M}", "by (rule sigma_sets.Basic) auto"], ["", "end"]]}