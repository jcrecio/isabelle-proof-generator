{"file_name": "/home/qj213/afp-2021-10-22/thys/Dominance_CHK/Dom_Kildall_Correct.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Dominance_CHK", "problem_names": ["lemma entry_dominate_dom: \n  assumes \"i \\<in> set (g_V G)\"\n      and \"dominate i 0\"\n    shows \"dom i 0\"", "lemma path_entry_dom: \n  fixes pa i d\n  assumes \"path_entry (g_E G) pa i\"\n      and \"dom d i\"\n    shows \"d \\<in> set pa \\<or> d = i\"", "lemma dom_sound: \"dom i j \\<Longrightarrow> dominate i j\"", "lemma sdom_sound: \"strict_dom i j \\<Longrightarrow> j \\<in> set (g_V G) \\<Longrightarrow> strict_dominate i j\"", "lemma dom_complete_auxi: \"i < length start \\<Longrightarrow> (dom_kildall start)!i = ss' \\<and> k \\<notin> set ss' \\<Longrightarrow> non_strict_dominate k i\"", "lemma notsdom_notsdominate: \"\\<not> strict_dom i j \\<Longrightarrow> j < length start \\<Longrightarrow> non_strict_dominate i j\"", "lemma notsdom_notsdominate': \"\\<not> strict_dom i j \\<Longrightarrow> j < length start \\<Longrightarrow> \\<not> strict_dominate i j\"", "lemma dom_complete: \"strict_dominate i j \\<Longrightarrow> j < size start \\<Longrightarrow> strict_dom i j\""], "translations": [["", "lemma entry_dominate_dom: \n  assumes \"i \\<in> set (g_V G)\"\n      and \"dominate i 0\"\n    shows \"dom i 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom i 0", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> set (g_V G)\n  dominate i 0\n\ngoal (1 subgoal):\n 1. local.dom i 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> set (g_V G); dominate i 0\\<rbrakk>\n    \\<Longrightarrow> local.dom i 0", "from assms(1) entry0_dominates_all"], ["proof (chain)\npicking this:\n  i \\<in> set (g_V G)\n  \\<forall>p\\<in>set (g_V G). dominate 0 p", "have \"dominate 0 i\""], ["proof (prove)\nusing this:\n  i \\<in> set (g_V G)\n  \\<forall>p\\<in>set (g_V G). dominate 0 p\n\ngoal (1 subgoal):\n 1. dominate 0 i", "by auto"], ["proof (state)\nthis:\n  dominate 0 i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> set (g_V G); dominate i 0\\<rbrakk>\n    \\<Longrightarrow> local.dom i 0", "with assms(2) reachable"], ["proof (chain)\npicking this:\n  dominate i 0\n  \\<forall>v\\<in>set (g_V G). v \\<in> (g_E G)\\<^sup>* `` {0}\n  dominate 0 i", "have \"i = 0\""], ["proof (prove)\nusing this:\n  dominate i 0\n  \\<forall>v\\<in>set (g_V G). v \\<in> (g_E G)\\<^sup>* `` {0}\n  dominate 0 i\n\ngoal (1 subgoal):\n 1. i = 0", "using reachable_dom_acyclic"], ["proof (prove)\nusing this:\n  dominate i 0\n  \\<forall>v\\<in>set (g_V G). v \\<in> (g_E G)\\<^sup>* `` {0}\n  dominate 0 i\n  \\<lbrakk>reachable ?n2.0; dominate ?n1.0 ?n2.0;\n   dominate ?n2.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> ?n1.0 = ?n2.0\n\ngoal (1 subgoal):\n 1. i = 0", "by (auto simp add:reachable_def)"], ["proof (state)\nthis:\n  i = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> set (g_V G); dominate i 0\\<rbrakk>\n    \\<Longrightarrow> local.dom i 0", "then"], ["proof (chain)\npicking this:\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. local.dom i 0", "using dom_refl"], ["proof (prove)\nusing this:\n  i = 0\n  local.dom ?i ?i\n\ngoal (1 subgoal):\n 1. local.dom i 0", "by auto"], ["proof (state)\nthis:\n  local.dom i 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_entry_dom: \n  fixes pa i d\n  assumes \"path_entry (g_E G) pa i\"\n      and \"dom d i\"\n    shows \"d \\<in> set pa \\<or> d = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> set pa \\<or> d = i", "using assms"], ["proof (prove)\nusing this:\n  path_entry (g_E G) pa i\n  local.dom d i\n\ngoal (1 subgoal):\n 1. d \\<in> set pa \\<or> d = i", "proof(induct rule:path_entry.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. local.dom d 0 \\<Longrightarrow> d \\<in> set [] \\<or> d = 0\n 2. \\<And>u v l.\n       \\<lbrakk>(u, v) \\<in> g_E G; path_entry (g_E G) l u;\n        local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u;\n        local.dom d v\\<rbrakk>\n       \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "case path_entry0"], ["proof (state)\nthis:\n  local.dom d 0\n\ngoal (2 subgoals):\n 1. local.dom d 0 \\<Longrightarrow> d \\<in> set [] \\<or> d = 0\n 2. \\<And>u v l.\n       \\<lbrakk>(u, v) \\<in> g_E G; path_entry (g_E G) l u;\n        local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u;\n        local.dom d v\\<rbrakk>\n       \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "then"], ["proof (chain)\npicking this:\n  local.dom d 0", "show ?case"], ["proof (prove)\nusing this:\n  local.dom d 0\n\ngoal (1 subgoal):\n 1. d \\<in> set [] \\<or> d = 0", "using zero_dom_zero"], ["proof (prove)\nusing this:\n  local.dom d 0\n  local.dom ?i 0 = (?i = 0)\n\ngoal (1 subgoal):\n 1. d \\<in> set [] \\<or> d = 0", "by auto"], ["proof (state)\nthis:\n  d \\<in> set [] \\<or> d = 0\n\ngoal (1 subgoal):\n 1. \\<And>u v l.\n       \\<lbrakk>(u, v) \\<in> g_E G; path_entry (g_E G) l u;\n        local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u;\n        local.dom d v\\<rbrakk>\n       \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v l.\n       \\<lbrakk>(u, v) \\<in> g_E G; path_entry (g_E G) l u;\n        local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u;\n        local.dom d v\\<rbrakk>\n       \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "case (path_entry_prepend u v l)"], ["proof (state)\nthis:\n  (u, v) \\<in> g_E G\n  path_entry (g_E G) l u\n  local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u\n  local.dom d v\n\ngoal (1 subgoal):\n 1. \\<And>u v l.\n       \\<lbrakk>(u, v) \\<in> g_E G; path_entry (g_E G) l u;\n        local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u;\n        local.dom d v\\<rbrakk>\n       \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "note u_v = path_entry_prepend.hyps(1)"], ["proof (state)\nthis:\n  (u, v) \\<in> g_E G\n\ngoal (1 subgoal):\n 1. \\<And>u v l.\n       \\<lbrakk>(u, v) \\<in> g_E G; path_entry (g_E G) l u;\n        local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u;\n        local.dom d v\\<rbrakk>\n       \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "note ind = path_entry_prepend.hyps(3)"], ["proof (state)\nthis:\n  local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u\n\ngoal (1 subgoal):\n 1. \\<And>u v l.\n       \\<lbrakk>(u, v) \\<in> g_E G; path_entry (g_E G) l u;\n        local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u;\n        local.dom d v\\<rbrakk>\n       \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "note d_v = path_entry_prepend.prems"], ["proof (state)\nthis:\n  local.dom d v\n\ngoal (1 subgoal):\n 1. \\<And>u v l.\n       \\<lbrakk>(u, v) \\<in> g_E G; path_entry (g_E G) l u;\n        local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u;\n        local.dom d v\\<rbrakk>\n       \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> set (u # l) \\<or> d = v", "proof(cases \"d \\<noteq> v\")"], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v\n 2. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "case True"], ["proof (state)\nthis:\n  d \\<noteq> v\n\ngoal (2 subgoals):\n 1. d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v\n 2. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "note d_n_v = this"], ["proof (state)\nthis:\n  d \\<noteq> v\n\ngoal (2 subgoals):\n 1. d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v\n 2. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "from u_v"], ["proof (chain)\npicking this:\n  (u, v) \\<in> g_E G", "have \"v \\<in> succs u\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> g_E G\n\ngoal (1 subgoal):\n 1. v \\<in> succs u", "by (simp add:succs_def)"], ["proof (state)\nthis:\n  v \\<in> succs u\n\ngoal (2 subgoals):\n 1. d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v\n 2. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "with d_v d_n_v"], ["proof (chain)\npicking this:\n  local.dom d v\n  d \\<noteq> v\n  v \\<in> succs u", "have \"dom d u\""], ["proof (prove)\nusing this:\n  local.dom d v\n  d \\<noteq> v\n  v \\<in> succs u\n\ngoal (1 subgoal):\n 1. local.dom d u", "by (auto intro:adom_succs)"], ["proof (state)\nthis:\n  local.dom d u\n\ngoal (2 subgoals):\n 1. d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v\n 2. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "with ind"], ["proof (chain)\npicking this:\n  local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u\n  local.dom d u", "have \"d \\<in> set l \\<or> d = u\""], ["proof (prove)\nusing this:\n  local.dom d u \\<Longrightarrow> d \\<in> set l \\<or> d = u\n  local.dom d u\n\ngoal (1 subgoal):\n 1. d \\<in> set l \\<or> d = u", "by auto"], ["proof (state)\nthis:\n  d \\<in> set l \\<or> d = u\n\ngoal (2 subgoals):\n 1. d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v\n 2. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "then"], ["proof (chain)\npicking this:\n  d \\<in> set l \\<or> d = u", "show ?thesis"], ["proof (prove)\nusing this:\n  d \\<in> set l \\<or> d = u\n\ngoal (1 subgoal):\n 1. d \\<in> set (u # l) \\<or> d = v", "by auto"], ["proof (state)\nthis:\n  d \\<in> set (u # l) \\<or> d = v\n\ngoal (1 subgoal):\n 1. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "case False"], ["proof (state)\nthis:\n  \\<not> d \\<noteq> v\n\ngoal (1 subgoal):\n 1. \\<not> d \\<noteq> v \\<Longrightarrow> d \\<in> set (u # l) \\<or> d = v", "then"], ["proof (chain)\npicking this:\n  \\<not> d \\<noteq> v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> d \\<noteq> v\n\ngoal (1 subgoal):\n 1. d \\<in> set (u # l) \\<or> d = v", "by auto"], ["proof (state)\nthis:\n  d \\<in> set (u # l) \\<or> d = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d \\<in> set (u # l) \\<or> d = v\n\ngoal:\nNo subgoals!", "qed\n\n\\<comment>\\<open>soundenss\\<close>"], ["", "lemma dom_sound: \"dom i j \\<Longrightarrow> dominate i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom i j \\<Longrightarrow> dominate i j", "by (fastforce simp add: dominate_def dest:path_entry_dom)"], ["", "lemma sdom_sound: \"strict_dom i j \\<Longrightarrow> j \\<in> set (g_V G) \\<Longrightarrow> strict_dominate i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>strict_dom i j; j \\<in> set (g_V G)\\<rbrakk>\n    \\<Longrightarrow> strict_dominate i j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>strict_dom i j; j \\<in> set (g_V G)\\<rbrakk>\n    \\<Longrightarrow> strict_dominate i j", "assume sdom: \"strict_dom i j\" and \"j \\<in> set (g_V G)\""], ["proof (state)\nthis:\n  strict_dom i j\n  j \\<in> set (g_V G)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>strict_dom i j; j \\<in> set (g_V G)\\<rbrakk>\n    \\<Longrightarrow> strict_dominate i j", "then"], ["proof (chain)\npicking this:\n  strict_dom i j\n  j \\<in> set (g_V G)", "have i_n_j: \"i \\<noteq> j\""], ["proof (prove)\nusing this:\n  strict_dom i j\n  j \\<in> set (g_V G)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j", "by (rule sdom_asyc)"], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>strict_dom i j; j \\<in> set (g_V G)\\<rbrakk>\n    \\<Longrightarrow> strict_dominate i j", "from sdom"], ["proof (chain)\npicking this:\n  strict_dom i j", "have \"dom i j\""], ["proof (prove)\nusing this:\n  strict_dom i j\n\ngoal (1 subgoal):\n 1. local.dom i j", "using sdom_dom"], ["proof (prove)\nusing this:\n  strict_dom i j\n  strict_dom ?i ?j \\<Longrightarrow> local.dom ?i ?j\n\ngoal (1 subgoal):\n 1. local.dom i j", "by auto"], ["proof (state)\nthis:\n  local.dom i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>strict_dom i j; j \\<in> set (g_V G)\\<rbrakk>\n    \\<Longrightarrow> strict_dominate i j", "then"], ["proof (chain)\npicking this:\n  local.dom i j", "have domi: \"dominate i j\""], ["proof (prove)\nusing this:\n  local.dom i j\n\ngoal (1 subgoal):\n 1. dominate i j", "by (rule dom_sound)"], ["proof (state)\nthis:\n  dominate i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>strict_dom i j; j \\<in> set (g_V G)\\<rbrakk>\n    \\<Longrightarrow> strict_dominate i j", "with i_n_j"], ["proof (chain)\npicking this:\n  i \\<noteq> j\n  dominate i j", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  dominate i j\n\ngoal (1 subgoal):\n 1. strict_dominate i j", "by (fastforce dest: dominate_sdominate)"], ["proof (state)\nthis:\n  strict_dominate i j\n\ngoal:\nNo subgoals!", "qed\n\n\n\\<comment>\\<open>completeness\\<close>"], ["", "lemma dom_complete_auxi: \"i < length start \\<Longrightarrow> (dom_kildall start)!i = ss' \\<and> k \\<notin> set ss' \\<Longrightarrow> non_strict_dominate k i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length start;\n     dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate k i", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length start;\n     dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate k i", "assume i_lt: \"i < length start\" and dom_kil: \"(dom_kildall start)!i = ss'\\<and> k \\<notin> set ss'\""], ["proof (state)\nthis:\n  i < length start\n  dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length start;\n     dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate k i", "then"], ["proof (chain)\npicking this:\n  i < length start\n  dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'", "have dom_iter: \"(fst (iter f step start (unstables r step start)))!i = ss'\" and k_nin: \"k \\<notin> set ss'\""], ["proof (prove)\nusing this:\n  i < length start\n  dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\n\ngoal (1 subgoal):\n 1. fst (iter f step start (unstables r step start)) ! i = ss' &&&\n    k \\<notin> set ss'", "using nodes_semi_def r_def f_def step_def dom_kildall_def kildall_def"], ["proof (prove)\nusing this:\n  i < length start\n  dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\n  nodes_semi \\<equiv>\n  ((rev \\<circ> sorted_list_of_set) ` Pow (set nodes), nodes_le, nodes_sup)\n  r \\<equiv> nodes_le\n  f \\<equiv> nodes_sup\n  step \\<equiv> exec\n  dom_kildall = kildall (fst (snd nodes_semi)) (snd (snd nodes_semi)) exec\n  kildall ?r ?f ?step ?\\<tau>s =\n  fst (iter ?f ?step ?\\<tau>s (unstables ?r ?step ?\\<tau>s))\n\ngoal (1 subgoal):\n 1. fst (iter f step start (unstables r step start)) ! i = ss' &&&\n    k \\<notin> set ss'", "by auto"], ["proof (state)\nthis:\n  fst (iter f step start (unstables r step start)) ! i = ss'\n  k \\<notin> set ss'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length start;\n     dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate k i", "then"], ["proof (chain)\npicking this:\n  fst (iter f step start (unstables r step start)) ! i = ss'\n  k \\<notin> set ss'", "obtain s w where iter: \" iter f step start (unstables r step start) = (s, w)\""], ["proof (prove)\nusing this:\n  fst (iter f step start (unstables r step start)) ! i = ss'\n  k \\<notin> set ss'\n\ngoal (1 subgoal):\n 1. (\\<And>s w.\n        iter f step start (unstables r step start) =\n        (s, w) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  iter f step start (unstables r step start) = (s, w)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length start;\n     dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate k i", "with dom_iter"], ["proof (chain)\npicking this:\n  fst (iter f step start (unstables r step start)) ! i = ss'\n  iter f step start (unstables r step start) = (s, w)", "have \"s!i = ss'\""], ["proof (prove)\nusing this:\n  fst (iter f step start (unstables r step start)) ! i = ss'\n  iter f step start (unstables r step start) = (s, w)\n\ngoal (1 subgoal):\n 1. s ! i = ss'", "by auto"], ["proof (state)\nthis:\n  s ! i = ss'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length start;\n     dom_kildall start ! i = ss' \\<and> k \\<notin> set ss'\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate k i", "with iter_dom_invariant_complete iter k_nin i_lt len_start_is_n"], ["proof (chain)\npicking this:\n  iter f step start (unstables r step start) = (?ss', ?w') \\<longrightarrow>\n  ?i < n \\<and>\n  ?ss' ! ?i = ?res \\<and> ?k \\<notin> set ?res \\<longrightarrow>\n  non_strict_dominate ?k ?i\n  iter f step start (unstables r step start) = (s, w)\n  k \\<notin> set ss'\n  i < length start\n  length start = n\n  s ! i = ss'", "show ?thesis"], ["proof (prove)\nusing this:\n  iter f step start (unstables r step start) = (?ss', ?w') \\<longrightarrow>\n  ?i < n \\<and>\n  ?ss' ! ?i = ?res \\<and> ?k \\<notin> set ?res \\<longrightarrow>\n  non_strict_dominate ?k ?i\n  iter f step start (unstables r step start) = (s, w)\n  k \\<notin> set ss'\n  i < length start\n  length start = n\n  s ! i = ss'\n\ngoal (1 subgoal):\n 1. non_strict_dominate k i", "by auto"], ["proof (state)\nthis:\n  non_strict_dominate k i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma notsdom_notsdominate: \"\\<not> strict_dom i j \\<Longrightarrow> j < length start \\<Longrightarrow> non_strict_dominate i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> strict_dom i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate i j", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> strict_dom i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate i j", "assume i_not_sdom_j: \"\\<not> strict_dom i j\" and j_lt: \"j < length start\""], ["proof (state)\nthis:\n  \\<not> strict_dom i j\n  j < length start\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> strict_dom i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate i j", "then"], ["proof (chain)\npicking this:\n  \\<not> strict_dom i j\n  j < length start", "obtain res where j_res: \"dom_kildall start ! j = res\""], ["proof (prove)\nusing this:\n  \\<not> strict_dom i j\n  j < length start\n\ngoal (1 subgoal):\n 1. (\\<And>res.\n        dom_kildall start ! j = res \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add:strict_dom_def)"], ["proof (state)\nthis:\n  dom_kildall start ! j = res\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> strict_dom i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate i j", "then"], ["proof (chain)\npicking this:\n  dom_kildall start ! j = res", "have \"strict_dom i j = (i \\<in> set res)\""], ["proof (prove)\nusing this:\n  dom_kildall start ! j = res\n\ngoal (1 subgoal):\n 1. strict_dom i j = (i \\<in> set res)", "by (auto simp add:strict_dom_def start_def n_def nodes_def)"], ["proof (state)\nthis:\n  strict_dom i j = (i \\<in> set res)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> strict_dom i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate i j", "with i_not_sdom_j"], ["proof (chain)\npicking this:\n  \\<not> strict_dom i j\n  strict_dom i j = (i \\<in> set res)", "have i_nin: \"i \\<notin> set res\""], ["proof (prove)\nusing this:\n  \\<not> strict_dom i j\n  strict_dom i j = (i \\<in> set res)\n\ngoal (1 subgoal):\n 1. i \\<notin> set res", "by auto"], ["proof (state)\nthis:\n  i \\<notin> set res\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> strict_dom i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> non_strict_dominate i j", "with j_res j_lt"], ["proof (chain)\npicking this:\n  dom_kildall start ! j = res\n  j < length start\n  i \\<notin> set res", "show \"non_strict_dominate i j\""], ["proof (prove)\nusing this:\n  dom_kildall start ! j = res\n  j < length start\n  i \\<notin> set res\n\ngoal (1 subgoal):\n 1. non_strict_dominate i j", "using dom_complete_auxi"], ["proof (prove)\nusing this:\n  dom_kildall start ! j = res\n  j < length start\n  i \\<notin> set res\n  \\<lbrakk>?i < length start;\n   dom_kildall start ! ?i = ?ss' \\<and> ?k \\<notin> set ?ss'\\<rbrakk>\n  \\<Longrightarrow> non_strict_dominate ?k ?i\n\ngoal (1 subgoal):\n 1. non_strict_dominate i j", "by fastforce"], ["proof (state)\nthis:\n  non_strict_dominate i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma notsdom_notsdominate': \"\\<not> strict_dom i j \\<Longrightarrow> j < length start \\<Longrightarrow> \\<not> strict_dominate i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> strict_dom i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> \\<not> strict_dominate i j", "using notsdom_notsdominate nonstrict_eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> strict_dom ?i ?j; ?j < length start\\<rbrakk>\n  \\<Longrightarrow> non_strict_dominate ?i ?j\n  non_strict_dominate ?i ?j \\<Longrightarrow> \\<not> strict_dominate ?i ?j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> strict_dom i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> \\<not> strict_dominate i j", "by auto"], ["", "lemma dom_complete: \"strict_dominate i j \\<Longrightarrow> j < size start \\<Longrightarrow> strict_dom i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>strict_dominate i j; j < length start\\<rbrakk>\n    \\<Longrightarrow> strict_dom i j", "by (insert notsdom_notsdominate') (auto intro: contrapos_nn nonstrict_eq)"], ["", "end"], ["", "end"]]}