{"file_name": "/home/qj213/afp-2021-10-22/thys/ROBDD/Abstract_Impl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/ROBDD", "problem_names": ["lemma les_refl[simp,intro!]:\"les s s\"", "lemma les_trans[trans]:\"les s1 s2 \\<Longrightarrow> les s2 s3 \\<Longrightarrow> les s1 s3\"", "lemmas DESTRimpl_rules = DESTRimpl_rule1 DESTRimpl_rule2 DESTRimpl_rule3", "lemma DESTRimpl_rule_useless:\n  \"I s \\<Longrightarrow> (ni, n) \\<in> R s \\<Longrightarrow> ospec (DESTRimpl ni s) (\\<lambda>r. (case r of\n    TD \\<Rightarrow> (ni, Trueif) \\<in> R s |\n    FD \\<Rightarrow> (ni, Falseif) \\<in> R s |\n    IFD v nt ne \\<Rightarrow> (\\<exists>t e. n = IF v t e \\<and> (ni, IF v t e) \\<in> R s)))\"", "lemma DESTRimpl_rule: \n  \"I s \\<Longrightarrow> (ni, n) \\<in> R s \\<Longrightarrow> ospec (DESTRimpl ni s) (\\<lambda>r. (case n of\n    Trueif \\<Rightarrow> r = TD |\n    Falseif \\<Rightarrow> r = FD |\n    IF v t e \\<Rightarrow> (\\<exists>tn en. r = IFD v tn en \\<and> (tn,t) \\<in> R s \\<and> (en,e) \\<in> R s)))\"", "lemma case_ifexi_rule:\n  assumes INV: \"I s\"\n  assumes NI: \"(ni,n)\\<in>R s\"\n  assumes FTI: \"\\<lbrakk> n = Trueif \\<rbrakk> \\<Longrightarrow> ospec (fti s) (\\<lambda>(r,s'). (r,ft) \\<in> Q s \\<and> I' s')\"\n  assumes FFI: \"\\<lbrakk> n = Falseif \\<rbrakk> \\<Longrightarrow> ospec (ffi s) (\\<lambda>(r,s'). (r,ff) \\<in> Q s \\<and> I' s')\"\n  assumes FII: \"\\<And>ti ei v t e. \\<lbrakk> n = IF v t e; (ti,t)\\<in>R s; (ei,e)\\<in>R s \\<rbrakk> \\<Longrightarrow> ospec (fii v ti ei s) (\\<lambda>(r,s'). (r,fi v t e) \\<in> Q s \\<and> I' s')\"\n  shows \"ospec (case_ifexi fti ffi fii ni s) (\\<lambda>(r,s'). (r,case_ifex ft ff fi n) \\<in> Q s \\<and> I' s')\"", "lemma lowest_tops_alt: \"lowest_tops l = lowest_tops_alt l\"", "lemma lowest_tops_impl_R: \n  assumes \"list_all2 (in_rel (R s)) li l\" \"I s\"\n  shows \"ospec (lowest_tops_impl li s) (\\<lambda>(r,s'). r = lowest_tops l \\<and> s'=s)\"", "lemma restrict_top_alt: \"restrict_top n var val = (case n of \n  (IF v t e) \\<Rightarrow> (if v = var then (if val then t else e) else (IF v t e))\n| _ \\<Rightarrow> n)\"", "lemma restrict_top_impl_spec: \"I s \\<Longrightarrow> (ni,n) \\<in> R s \\<Longrightarrow> ospec (restrict_top_impl ni vr vl s) (\\<lambda>(res,s'). (res, restrict_top n vr vl) \\<in> R s \\<and> s'=s)\"", "lemma ite_impl_R: \"I s\n       \\<Longrightarrow> in_rel (R s) ii i \\<Longrightarrow> in_rel (R s) ti t \\<Longrightarrow> in_rel (R s) ei e\n       \\<Longrightarrow> ospec (ite_impl ii ti ei s) (\\<lambda>(r, s'). (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\"", "lemma case_ifexi_mono[partial_function_mono]:\n  assumes [partial_function_mono]: \n    \"mono_option (\\<lambda>F. fti F s)\"\n    \"mono_option (\\<lambda>F. ffi F s)\"\n    \"\\<And>x31 x32 x33. mono_option (\\<lambda>F. fii F x31 x32 x33 s)\"\n  shows \"mono_option (\\<lambda>F. case_ifexi (fti F) (ffi F) (fii F) ni s)\"", "lemma \"I s \\<Longrightarrow> (ni,n) \\<in> R s \\<Longrightarrow> ospec (val_impl ni ass s) (\\<lambda>(r,s'). r = (val_ifex n ass) \\<and> s'=s)\"", "lemma map_invar_impl_les: \"map_invar_impl m s \\<Longrightarrow> les s s' \\<Longrightarrow> map_invar_impl m s'\"", "lemma map_invar_impl_update: \"map_invar_impl m s \\<Longrightarrow> \n       (ii,i) \\<in> R s \\<Longrightarrow> (ti,t) \\<in> R s \\<Longrightarrow> (ei,e) \\<in> R s \\<Longrightarrow>\n       (ri, ifex_ite_opt i t e) \\<in> R s \\<Longrightarrow> map_invar_impl (m((ii,ti,ei) \\<mapsto> ri)) s\"", "lemma cmp_rule_eq: \"I s \\<Longrightarrow>  (ni, i) \\<in> R s \\<Longrightarrow> (ni', i') \\<in> R s \\<Longrightarrow> cmp ni ni' \\<longleftrightarrow> i = i'\"", "lemma DESTRimpl_Some: \"I s \\<Longrightarrow> (ni, i) \\<in> R s \\<Longrightarrow> ospec (DESTRimpl ni s) (\\<lambda>r. True)\"", "lemma param_opt_impl_lesI: \n  assumes \"I s\" \"(ii,i) \\<in> R s\" \"(ti,t) \\<in> R s\" \"(ei,e) \\<in> R s\"\n  shows \"ospec (param_opt_impl ii ti ei s) \n               (\\<lambda>(r,s'). I s' \\<and> les s s')\"", "lemma param_opt_impl_R: \n  assumes \"I s\" \"(ii,i) \\<in> R s\" \"(ti,t) \\<in> R s\" \"(ei,e) \\<in> R s\"\n  shows \"ospec (param_opt_impl ii ti ei s)\n               (\\<lambda>(r,s'). case r of None \\<Rightarrow> param_opt i t e = None\n                                 | Some r \\<Rightarrow> (\\<exists>r'. param_opt i t e  = Some r' \\<and> (r, r') \\<in> R s'))\"", "lemma ospec_and: \"ospec f P \\<Longrightarrow> ospec f Q \\<Longrightarrow> ospec f (\\<lambda>x. P x \\<and> Q x)\"", "lemma ite_impl_opt_R: \"\n  I s\n  \\<Longrightarrow> in_rel (R s) ii i \\<Longrightarrow> in_rel (R s) ti t \\<Longrightarrow> in_rel (R s) ei e\n  \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s) (\\<lambda>(r, s'). (r, ifex_ite_opt i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\"", "lemma ite_impl_lu_R: \"I s\n       \\<Longrightarrow> (ii,i) \\<in> R s \\<Longrightarrow> (ti,t) \\<in> R s \\<Longrightarrow> (ei,e) \\<in> R s\n       \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s) \n                 (\\<lambda>(r, s'). (r, ifex_ite_opt i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\""], "translations": [["", "lemma les_refl[simp,intro!]:\"les s s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. les s s", "by (auto simp add: les_def)"], ["", "lemma les_trans[trans]:\"les s1 s2 \\<Longrightarrow> les s2 s3 \\<Longrightarrow> les s1 s3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>les s1 s2; les s2 s3\\<rbrakk> \\<Longrightarrow> les s1 s3", "by (auto simp add: les_def)"], ["", "lemmas DESTRimpl_rules = DESTRimpl_rule1 DESTRimpl_rule2 DESTRimpl_rule3"], ["", "lemma DESTRimpl_rule_useless:\n  \"I s \\<Longrightarrow> (ni, n) \\<in> R s \\<Longrightarrow> ospec (DESTRimpl ni s) (\\<lambda>r. (case r of\n    TD \\<Rightarrow> (ni, Trueif) \\<in> R s |\n    FD \\<Rightarrow> (ni, Falseif) \\<in> R s |\n    IFD v nt ne \\<Rightarrow> (\\<exists>t e. n = IF v t e \\<and> (ni, IF v t e) \\<in> R s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni, n) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (DESTRimpl ni s)\n                       (\\<lambda>r.\n                           case r of TD \\<Rightarrow> (ni, Trueif) \\<in> R s\n                           | FD \\<Rightarrow> (ni, Falseif) \\<in> R s\n                           | IFD v nt ne \\<Rightarrow>\n                               \\<exists>t e.\n                                  n = IF v t e \\<and>\n                                  (ni, IF v t e) \\<in> R s)", "by(cases n; clarify; drule (1) DESTRimpl_rules; drule ospecD2; clarsimp)"], ["", "lemma DESTRimpl_rule: \n  \"I s \\<Longrightarrow> (ni, n) \\<in> R s \\<Longrightarrow> ospec (DESTRimpl ni s) (\\<lambda>r. (case n of\n    Trueif \\<Rightarrow> r = TD |\n    Falseif \\<Rightarrow> r = FD |\n    IF v t e \\<Rightarrow> (\\<exists>tn en. r = IFD v tn en \\<and> (tn,t) \\<in> R s \\<and> (en,e) \\<in> R s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni, n) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (DESTRimpl ni s)\n                       (\\<lambda>r.\n                           case n of Trueif \\<Rightarrow> r = TD\n                           | Falseif \\<Rightarrow> r = FD\n                           | IF v t e \\<Rightarrow>\n                               \\<exists>tn en.\n                                  r = IFD v tn en \\<and>\n                                  (tn, t) \\<in> R s \\<and>\n                                  (en, e) \\<in> R s)", "by(cases n; clarify; drule (1) DESTRimpl_rules; drule ospecD2; clarsimp)"], ["", "definition \"case_ifexi fti ffi fii ni s \\<equiv> do {\n  dest \\<leftarrow> DESTRimpl ni s;\n  case dest of\n    TD \\<Rightarrow> fti s\n  | FD \\<Rightarrow> ffi s\n  | IFD v ti ei \\<Rightarrow> fii v ti ei s}\""], ["", "lemma case_ifexi_rule:\n  assumes INV: \"I s\"\n  assumes NI: \"(ni,n)\\<in>R s\"\n  assumes FTI: \"\\<lbrakk> n = Trueif \\<rbrakk> \\<Longrightarrow> ospec (fti s) (\\<lambda>(r,s'). (r,ft) \\<in> Q s \\<and> I' s')\"\n  assumes FFI: \"\\<lbrakk> n = Falseif \\<rbrakk> \\<Longrightarrow> ospec (ffi s) (\\<lambda>(r,s'). (r,ff) \\<in> Q s \\<and> I' s')\"\n  assumes FII: \"\\<And>ti ei v t e. \\<lbrakk> n = IF v t e; (ti,t)\\<in>R s; (ei,e)\\<in>R s \\<rbrakk> \\<Longrightarrow> ospec (fii v ti ei s) (\\<lambda>(r,s'). (r,fi v t e) \\<in> Q s \\<and> I' s')\"\n  shows \"ospec (case_ifexi fti ffi fii ni s) (\\<lambda>(r,s'). (r,case_ifex ft ff fi n) \\<in> Q s \\<and> I' s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ospec (case_ifexi fti ffi fii ni s)\n     (\\<lambda>(r, s').\n         (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n             | IF x xa xb \\<Rightarrow> fi x xa xb)\n         \\<in> Q s \\<and>\n         I' s')", "unfolding case_ifexi_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ospec\n     (DESTRimpl ni s \\<bind>\n      (\\<lambda>dest.\n          case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n          | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n     (\\<lambda>(r, s').\n         (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n             | IF x xa xb \\<Rightarrow> fi x xa xb)\n         \\<in> Q s \\<and>\n         I' s')", "apply (cases n)"], ["proof (prove)\ngoal (3 subgoals):\n 1. n = Trueif \\<Longrightarrow>\n    ospec\n     (DESTRimpl ni s \\<bind>\n      (\\<lambda>dest.\n          case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n          | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n     (\\<lambda>(r, s').\n         (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n             | IF x xa xb \\<Rightarrow> fi x xa xb)\n         \\<in> Q s \\<and>\n         I' s')\n 2. n = Falseif \\<Longrightarrow>\n    ospec\n     (DESTRimpl ni s \\<bind>\n      (\\<lambda>dest.\n          case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n          | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n     (\\<lambda>(r, s').\n         (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n             | IF x xa xb \\<Rightarrow> fi x xa xb)\n         \\<in> Q s \\<and>\n         I' s')\n 3. \\<And>x31 x32 x33.\n       n = IF x31 x32 x33 \\<Longrightarrow>\n       ospec\n        (DESTRimpl ni s \\<bind>\n         (\\<lambda>dest.\n             case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n             | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n        (\\<lambda>(r, s').\n            (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n                | IF x xa xb \\<Rightarrow> fi x xa xb)\n            \\<in> Q s \\<and>\n            I' s')", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. n = Trueif \\<Longrightarrow>\n    ospec\n     (DESTRimpl ni s \\<bind>\n      (\\<lambda>dest.\n          case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n          | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n     (\\<lambda>(r, s').\n         (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n             | IF x xa xb \\<Rightarrow> fi x xa xb)\n         \\<in> Q s \\<and>\n         I' s')", "apply (rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = Trueif \\<Longrightarrow> ospec (DESTRimpl ni s) ?Q\n 2. \\<And>r.\n       \\<lbrakk>n = Trueif; ?Q r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "apply (rule DESTRimpl_rule1[OF INV])"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = Trueif \\<Longrightarrow> (ni, Trueif) \\<in> R s\n 2. \\<And>r.\n       \\<lbrakk>n = Trueif; r = TD\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "using NI FTI"], ["proof (prove)\nusing this:\n  (ni, n) \\<in> R s\n  n = Trueif \\<Longrightarrow>\n  ospec (fti s) (\\<lambda>(r, s'). (r, ft) \\<in> Q s \\<and> I' s')\n\ngoal (2 subgoals):\n 1. n = Trueif \\<Longrightarrow> (ni, Trueif) \\<in> R s\n 2. \\<And>r.\n       \\<lbrakk>n = Trueif; r = TD\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "by (auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = Falseif \\<Longrightarrow>\n    ospec\n     (DESTRimpl ni s \\<bind>\n      (\\<lambda>dest.\n          case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n          | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n     (\\<lambda>(r, s').\n         (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n             | IF x xa xb \\<Rightarrow> fi x xa xb)\n         \\<in> Q s \\<and>\n         I' s')\n 2. \\<And>x31 x32 x33.\n       n = IF x31 x32 x33 \\<Longrightarrow>\n       ospec\n        (DESTRimpl ni s \\<bind>\n         (\\<lambda>dest.\n             case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n             | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n        (\\<lambda>(r, s').\n            (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n                | IF x xa xb \\<Rightarrow> fi x xa xb)\n            \\<in> Q s \\<and>\n            I' s')", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. n = Falseif \\<Longrightarrow>\n    ospec\n     (DESTRimpl ni s \\<bind>\n      (\\<lambda>dest.\n          case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n          | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n     (\\<lambda>(r, s').\n         (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n             | IF x xa xb \\<Rightarrow> fi x xa xb)\n         \\<in> Q s \\<and>\n         I' s')", "apply (rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = Falseif \\<Longrightarrow> ospec (DESTRimpl ni s) ?Q\n 2. \\<And>r.\n       \\<lbrakk>n = Falseif; ?Q r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "apply (rule DESTRimpl_rule2[OF INV])"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = Falseif \\<Longrightarrow> (ni, Falseif) \\<in> R s\n 2. \\<And>r.\n       \\<lbrakk>n = Falseif; r = FD\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "using NI FFI"], ["proof (prove)\nusing this:\n  (ni, n) \\<in> R s\n  n = Falseif \\<Longrightarrow>\n  ospec (ffi s) (\\<lambda>(r, s'). (r, ff) \\<in> Q s \\<and> I' s')\n\ngoal (2 subgoals):\n 1. n = Falseif \\<Longrightarrow> (ni, Falseif) \\<in> R s\n 2. \\<And>r.\n       \\<lbrakk>n = Falseif; r = FD\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "by (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       n = IF x31 x32 x33 \\<Longrightarrow>\n       ospec\n        (DESTRimpl ni s \\<bind>\n         (\\<lambda>dest.\n             case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n             | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n        (\\<lambda>(r, s').\n            (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n                | IF x xa xb \\<Rightarrow> fi x xa xb)\n            \\<in> Q s \\<and>\n            I' s')", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. n = IF x31_ x32_ x33_ \\<Longrightarrow>\n    ospec\n     (DESTRimpl ni s \\<bind>\n      (\\<lambda>dest.\n          case dest of TD \\<Rightarrow> fti s | FD \\<Rightarrow> ffi s\n          | IFD v ti ei \\<Rightarrow> fii v ti ei s))\n     (\\<lambda>(r, s').\n         (r, case n of Trueif \\<Rightarrow> ft | Falseif \\<Rightarrow> ff\n             | IF x xa xb \\<Rightarrow> fi x xa xb)\n         \\<in> Q s \\<and>\n         I' s')", "apply (rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = IF x31_ x32_ x33_ \\<Longrightarrow> ospec (DESTRimpl ni s) ?Q\n 2. \\<And>r.\n       \\<lbrakk>n = IF x31_ x32_ x33_; ?Q r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "apply (rule DESTRimpl_rule3[OF INV])"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = IF x31_ x32_ x33_ \\<Longrightarrow>\n    (ni, IF ?v3 ?n1.3 ?n2.3) \\<in> R s\n 2. \\<And>r.\n       \\<lbrakk>n = IF x31_ x32_ x33_;\n        \\<exists>ni1 ni2.\n           r = IFD ?v3 ni1 ni2 \\<and>\n           (ni1, ?n1.3) \\<in> R s \\<and> (ni2, ?n2.3) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "using NI FII"], ["proof (prove)\nusing this:\n  (ni, n) \\<in> R s\n  \\<lbrakk>n = IF ?v1 ?t1 ?e1; (?ti1, ?t1) \\<in> R s;\n   (?ei1, ?e1) \\<in> R s\\<rbrakk>\n  \\<Longrightarrow> ospec (fii ?v1 ?ti1 ?ei1 s)\n                     (\\<lambda>(r, s').\n                         (r, fi ?v1 ?t1 ?e1) \\<in> Q s \\<and> I' s')\n\ngoal (2 subgoals):\n 1. n = IF x31_ x32_ x33_ \\<Longrightarrow>\n    (ni, IF ?v3 ?n1.3 ?n2.3) \\<in> R s\n 2. \\<And>r.\n       \\<lbrakk>n = IF x31_ x32_ x33_;\n        \\<exists>ni1 ni2.\n           r = IFD ?v3 ni1 ni2 \\<and>\n           (ni1, ?n1.3) \\<in> R s \\<and> (ni2, ?n2.3) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of TD \\<Rightarrow> fti s\n                           | FD \\<Rightarrow> ffi s\n                           | IFD v ti ei \\<Rightarrow> fii v ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, case n of Trueif \\<Rightarrow> ft\n                                  | Falseif \\<Rightarrow> ff\n                                  | IF x xa xb \\<Rightarrow> fi x xa xb)\n                              \\<in> Q s \\<and>\n                              I' s')", "by (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "abbreviation \"return x \\<equiv> \\<lambda>s. Some (x,s)\""], ["", "primrec lowest_tops_impl where\n\"lowest_tops_impl [] s = Some (None,s)\" |\n\"lowest_tops_impl (e#es) s =\n    case_ifexi\n      (\\<lambda>s. lowest_tops_impl es s)\n      (\\<lambda>s. lowest_tops_impl es s)\n      (\\<lambda>v t e s. do {\n      (rec,s) \\<leftarrow> lowest_tops_impl es s;\n        (case rec of\n          Some u \\<Rightarrow> Some ((Some (min u v)), s) | \n          None \\<Rightarrow> Some ((Some v), s))\n       }) e s\""], ["", "declare lowest_tops_impl.simps[simp del]"], ["", "fun lowest_tops_alt where\n\"lowest_tops_alt [] = None\" |\n\"lowest_tops_alt (e#es) = (\n    let rec = lowest_tops_alt es in\n    case_ifex\n      rec\n      rec\n      (\\<lambda>v t e. (case rec of \n          Some u \\<Rightarrow> (Some (min u v)) | \n          None \\<Rightarrow> (Some v))\n       ) e\n  )\""], ["", "lemma lowest_tops_alt: \"lowest_tops l = lowest_tops_alt l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lowest_tops l = lowest_tops_alt l", "by (induction l rule: lowest_tops.induct) (auto split: option.splits simp: lowest_tops.simps)"], ["", "lemma lowest_tops_impl_R: \n  assumes \"list_all2 (in_rel (R s)) li l\" \"I s\"\n  shows \"ospec (lowest_tops_impl li s) (\\<lambda>(r,s'). r = lowest_tops l \\<and> s'=s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ospec (lowest_tops_impl li s)\n     (\\<lambda>(r, s'). r = lowest_tops l \\<and> s' = s)", "unfolding lowest_tops_alt"], ["proof (prove)\ngoal (1 subgoal):\n 1. ospec (lowest_tops_impl li s)\n     (\\<lambda>(r, s'). r = lowest_tops_alt l \\<and> s' = s)", "using assms"], ["proof (prove)\nusing this:\n  list_all2 (in_rel (R s)) li l\n  I s\n\ngoal (1 subgoal):\n 1. ospec (lowest_tops_impl li s)\n     (\\<lambda>(r, s'). r = lowest_tops_alt l \\<and> s' = s)", "apply (induction rule: list_all2_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. I s \\<Longrightarrow>\n    ospec (lowest_tops_impl [] s)\n     (\\<lambda>(r, s'). r = lowest_tops_alt [] \\<and> s' = s)\n 2. \\<And>x x' ls ls'.\n       \\<lbrakk>in_rel (R s) x x'; list_all2 (in_rel (R s)) ls ls';\n        I s \\<Longrightarrow>\n        ospec (lowest_tops_impl ls s)\n         (\\<lambda>(r, s'). r = lowest_tops_alt ls' \\<and> s' = s);\n        I s\\<rbrakk>\n       \\<Longrightarrow> ospec (lowest_tops_impl (x # ls) s)\n                          (\\<lambda>(r, s').\n                              r = lowest_tops_alt (x' # ls') \\<and> s' = s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. I s \\<Longrightarrow>\n    ospec (lowest_tops_impl [] s)\n     (\\<lambda>(r, s'). r = lowest_tops_alt [] \\<and> s' = s)", "by (simp add: lowest_tops_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x x' ls ls'.\n       \\<lbrakk>in_rel (R s) x x'; list_all2 (in_rel (R s)) ls ls';\n        I s \\<Longrightarrow>\n        ospec (lowest_tops_impl ls s)\n         (\\<lambda>(r, s'). r = lowest_tops_alt ls' \\<and> s' = s);\n        I s\\<rbrakk>\n       \\<Longrightarrow> ospec (lowest_tops_impl (x # ls) s)\n                          (\\<lambda>(r, s').\n                              r = lowest_tops_alt (x' # ls') \\<and> s' = s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>in_rel (R s) x_ x'_; list_all2 (in_rel (R s)) ls_ ls'_;\n     I s \\<Longrightarrow>\n     ospec (lowest_tops_impl ls_ s)\n      (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n     I s\\<rbrakk>\n    \\<Longrightarrow> ospec (lowest_tops_impl (x_ # ls_) s)\n                       (\\<lambda>(r, s').\n                           r = lowest_tops_alt (x'_ # ls'_) \\<and> s' = s)", "apply (simp add: lowest_tops_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n     ospec (lowest_tops_impl ls_ s)\n      (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n     I s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (lowest_tops_impl ls_)\n                         (lowest_tops_impl ls_)\n                         (\\<lambda>v t e s.\n                             lowest_tops_impl ls_ s \\<bind>\n                             (\\<lambda>(rec, s).\n                                 case rec of\n                                 None \\<Rightarrow> Some (Some v, s)\n                                 | Some u \\<Rightarrow>\n                                     Some (Some (min u v), s)))\n                         x_ s)\n                       (\\<lambda>(r, s').\n                           r =\n                           (case x'_ of\n                            IF v t e \\<Rightarrow>\n                              case lowest_tops_alt ls'_ of\n                              None \\<Rightarrow> Some v\n                              | Some u \\<Rightarrow> Some (min u v)\n                            | _ \\<Rightarrow> lowest_tops_alt ls'_) \\<and>\n                           s' = s)", "apply (rule case_ifexi_rule[where Q=\"\\<lambda>s. Id\", unfolded pair_in_Id_conv])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n     ospec (lowest_tops_impl ls_ s)\n      (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n     I s\\<rbrakk>\n    \\<Longrightarrow> I s\n 2. \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n     ospec (lowest_tops_impl ls_ s)\n      (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n     I s\\<rbrakk>\n    \\<Longrightarrow> (x_, x'_) \\<in> R s\n 3. \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n     ospec (lowest_tops_impl ls_ s)\n      (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n     I s; x'_ = Trueif\\<rbrakk>\n    \\<Longrightarrow> ospec (lowest_tops_impl ls_ s)\n                       (\\<lambda>(r, s').\n                           r = lowest_tops_alt ls'_ \\<and> s' = s)\n 4. \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n     ospec (lowest_tops_impl ls_ s)\n      (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n     I s; x'_ = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (lowest_tops_impl ls_ s)\n                       (\\<lambda>(r, s').\n                           r = lowest_tops_alt ls'_ \\<and> s' = s)\n 5. \\<And>ti ei v t e.\n       \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n        ospec (lowest_tops_impl ls_ s)\n         (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n        I s; x'_ = IF v t e; (ti, t) \\<in> R s; (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (lowest_tops_impl ls_ s \\<bind>\n                           (\\<lambda>(rec, s).\n                               case rec of\n                               None \\<Rightarrow> Some (Some v, s)\n                               | Some u \\<Rightarrow>\n                                   Some (Some (min u v), s)))\n                          (\\<lambda>(r, s').\n                              r =\n                              (case lowest_tops_alt ls'_ of\n                               None \\<Rightarrow> Some v\n                               | Some u \\<Rightarrow> Some (min u v)) \\<and>\n                              s' = s)", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti ei v t e.\n       \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n        ospec (lowest_tops_impl ls_ s)\n         (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n        I s; x'_ = IF v t e; (ti, t) \\<in> R s; (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (lowest_tops_impl ls_ s \\<bind>\n                           (\\<lambda>(rec, s).\n                               case rec of\n                               None \\<Rightarrow> Some (Some v, s)\n                               | Some u \\<Rightarrow>\n                                   Some (Some (min u v), s)))\n                          (\\<lambda>(r, s').\n                              r =\n                              (case lowest_tops_alt ls'_ of\n                               None \\<Rightarrow> Some v\n                               | Some u \\<Rightarrow> Some (min u v)) \\<and>\n                              s' = s)", "apply (rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti ei v t e.\n       \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n        ospec (lowest_tops_impl ls_ s)\n         (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n        I s; x'_ = IF v t e; (ti, t) \\<in> R s; (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (lowest_tops_impl ls_ s) (?Q7 ti ei v t e)\n 2. \\<And>ti ei v t e r.\n       \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n        ospec (lowest_tops_impl ls_ s)\n         (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n        I s; x'_ = IF v t e; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        ?Q7 ti ei v t e r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow> Some (Some v, s)\n                           | (Some u, s) \\<Rightarrow>\n                               Some (Some (min u v), s))\n                          (\\<lambda>(r, s').\n                              r =\n                              (case lowest_tops_alt ls'_ of\n                               None \\<Rightarrow> Some v\n                               | Some u \\<Rightarrow> Some (min u v)) \\<and>\n                              s' = s)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti ei v t e r.\n       \\<lbrakk>(x_, x'_) \\<in> R s; list_all2 (in_rel (R s)) ls_ ls'_;\n        ospec (lowest_tops_impl ls_ s)\n         (\\<lambda>(r, s'). r = lowest_tops_alt ls'_ \\<and> s' = s);\n        I s; x'_ = IF v t e; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops_alt ls'_ \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow> Some (Some v, s)\n                           | (Some u, s) \\<Rightarrow>\n                               Some (Some (min u v), s))\n                          (\\<lambda>(r, s').\n                              r =\n                              (case lowest_tops_alt ls'_ of\n                               None \\<Rightarrow> Some v\n                               | Some u \\<Rightarrow> Some (min u v)) \\<and>\n                              s' = s)", "apply (clarsimp split: option.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition restrict_top_impl where\n\"restrict_top_impl e vr vl s = \n  case_ifexi\n    (return e)\n    (return e)\n    (\\<lambda>v te ee. return (if v = vr then (if vl then te else ee) else e))\n    e s\n  \""], ["", "lemma restrict_top_alt: \"restrict_top n var val = (case n of \n  (IF v t e) \\<Rightarrow> (if v = var then (if val then t else e) else (IF v t e))\n| _ \\<Rightarrow> n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_top n var val =\n    (case n of\n     IF v t e \\<Rightarrow>\n       if v = var then if val then t else e else IF v t e\n     | _ \\<Rightarrow> n)", "apply (induction n var val rule: restrict_top.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v t e var val.\n       restrict_top (IF v t e) var val =\n       (case IF v t e of\n        IF v t e \\<Rightarrow>\n          if v = var then if val then t else e else IF v t e\n        | _ \\<Rightarrow> IF v t e)\n 2. \\<And>uu_ uv_.\n       restrict_top Trueif uu_ uv_ =\n       (case Trueif of\n        IF v t e \\<Rightarrow>\n          if v = uu_ then if uv_ then t else e else IF v t e\n        | _ \\<Rightarrow> Trueif)\n 3. \\<And>uu_ uv_.\n       restrict_top Falseif uu_ uv_ =\n       (case Falseif of\n        IF v t e \\<Rightarrow>\n          if v = uu_ then if uv_ then t else e else IF v t e\n        | _ \\<Rightarrow> Falseif)", "apply (simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma restrict_top_impl_spec: \"I s \\<Longrightarrow> (ni,n) \\<in> R s \\<Longrightarrow> ospec (restrict_top_impl ni vr vl s) (\\<lambda>(res,s'). (res, restrict_top n vr vl) \\<in> R s \\<and> s'=s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni, n) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (restrict_top_impl ni vr vl s)\n                       (\\<lambda>(res, s').\n                           (res, restrict_top n vr vl) \\<in> R s \\<and>\n                           s' = s)", "unfolding restrict_top_impl_def restrict_top_alt"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni, n) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (ni, s))\n                         (\\<lambda>s. Some (ni, s))\n                         (\\<lambda>v te ee s.\n                             Some\n                              (if v = vr then if vl then te else ee else ni,\n                               s))\n                         ni s)\n                       (\\<lambda>(res, s').\n                           (res,\n                            case n of\n                            IF v t e \\<Rightarrow>\n                              if v = vr then if vl then t else e\n                              else IF v t e\n                            | _ \\<Rightarrow> n)\n                           \\<in> R s \\<and>\n                           s' = s)", "by (rule case_ifexi_rule[where I'=\"\\<lambda>s'. s'=s\" and Q=\"R\", simplified]) auto"], ["", "partial_function(option) ite_impl where\n\"ite_impl i t e s = do {\n  (lt,_) \\<leftarrow> lowest_tops_impl [i, t, e] s;\n  (case lt of\n    Some a \\<Rightarrow> do {\n      (ti,_) \\<leftarrow> restrict_top_impl i a True s;\n      (tt,_) \\<leftarrow> restrict_top_impl t a True s;\n      (te,_) \\<leftarrow> restrict_top_impl e a True s;\n      (fi,_) \\<leftarrow> restrict_top_impl i a False s;\n      (ft,_) \\<leftarrow> restrict_top_impl t a False s;\n      (fe,_) \\<leftarrow> restrict_top_impl e a False s;\n      (tb,s) \\<leftarrow> ite_impl ti tt te s;\n      (fb,s) \\<leftarrow> ite_impl fi ft fe s;\n      IFimpl a tb fb s}\n  | None \\<Rightarrow> case_ifexi (\\<lambda>_.(Some (t,s))) (\\<lambda>_.(Some (e,s))) (\\<lambda>_ _ _ _. None) i s \n)}\""], ["", "lemma ite_impl_R: \"I s\n       \\<Longrightarrow> in_rel (R s) ii i \\<Longrightarrow> in_rel (R s) ti t \\<Longrightarrow> in_rel (R s) ei e\n       \\<Longrightarrow> ospec (ite_impl ii ti ei s) (\\<lambda>(r, s'). (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "proof(induction i t e arbitrary: s ii ti ei rule: ifex_ite.induct, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>lowest_tops [i, t, e] = Some x2; I s;\n            in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "case (1 i t e s ii ti ei)"], ["proof (state)\nthis:\n  \\<lbrakk>lowest_tops [i, t, e] = Some ?x2.1; I ?s1;\n   in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 True);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 True);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 True)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite (restrict_top i ?x2.1 True)\n                              (restrict_top t ?x2.1 True)\n                              (restrict_top e ?x2.1 True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>lowest_tops [i, t, e] = Some ?x2.1; I ?s1;\n   in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 False);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 False);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 False)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite (restrict_top i ?x2.1 False)\n                              (restrict_top t ?x2.1 False)\n                              (restrict_top e ?x2.1 False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>lowest_tops [i, t, e] = Some x2; I s;\n            in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "note goal1 = 1"], ["proof (state)\nthis:\n  \\<lbrakk>lowest_tops [i, t, e] = Some ?x2.1; I ?s1;\n   in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 True);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 True);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 True)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite (restrict_top i ?x2.1 True)\n                              (restrict_top t ?x2.1 True)\n                              (restrict_top e ?x2.1 True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>lowest_tops [i, t, e] = Some ?x2.1; I ?s1;\n   in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 False);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 False);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 False)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite (restrict_top i ?x2.1 False)\n                              (restrict_top t ?x2.1 False)\n                              (restrict_top e ?x2.1 False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>lowest_tops [i, t, e] = Some x2; I s;\n            in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "have la2: \"list_all2 (in_rel (R s)) [ii,ti,ei] [i,t,e]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]", "using goal1(4-6)"], ["proof (prove)\nusing this:\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]", "by simp"], ["proof (state)\nthis:\n  list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>lowest_tops [i, t, e] = Some x2; I s;\n            in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ospec (ite_impl ii ti ei s)\n     (\\<lambda>(r, s').\n         (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "proof(cases \"lowest_tops [i,t,e]\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lowest_tops [i, t, e] = None \\<Longrightarrow>\n    ospec (ite_impl ii ti ei s)\n     (\\<lambda>(r, s').\n         (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\n 2. \\<And>a.\n       lowest_tops [i, t, e] = Some a \\<Longrightarrow>\n       ospec (ite_impl ii ti ei s)\n        (\\<lambda>(r, s').\n            (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "case None"], ["proof (state)\nthis:\n  lowest_tops [i, t, e] = None\n\ngoal (2 subgoals):\n 1. lowest_tops [i, t, e] = None \\<Longrightarrow>\n    ospec (ite_impl ii ti ei s)\n     (\\<lambda>(r, s').\n         (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\n 2. \\<And>a.\n       lowest_tops [i, t, e] = Some a \\<Longrightarrow>\n       ospec (ite_impl ii ti ei s)\n        (\\<lambda>(r, s').\n            (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "from goal1(3-6)"], ["proof (chain)\npicking this:\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e", "show ?thesis"], ["proof (prove)\nusing this:\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. ospec (ite_impl ii ti ei s)\n     (\\<lambda>(r, s').\n         (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "apply(subst ite_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (lowest_tops_impl [ii, ti, ei] s \\<bind>\n                        (\\<lambda>(lt, uu_).\n                            case lt of\n                            None \\<Rightarrow>\n                              case_ifexi (\\<lambda>_. Some (ti, s))\n                               (\\<lambda>_. Some (ei, s))\n                               (\\<lambda>_ _ _. Map.empty) ii s\n                            | Some a \\<Rightarrow>\n                                restrict_top_impl ii a True s \\<bind>\n                                (\\<lambda>(ti, uu_).\n                                    restrict_top_impl ti a True s \\<bind>\n                                    (\\<lambda>(tt, uu_).\n  restrict_top_impl ei a True s \\<bind>\n  (\\<lambda>(te, uu_).\n      restrict_top_impl ii a False s \\<bind>\n      (\\<lambda>(fi, uu_).\n          restrict_top_impl ti a False s \\<bind>\n          (\\<lambda>(ft, uu_).\n              restrict_top_impl ei a False s \\<bind>\n              (\\<lambda>(fe, uu_).\n                  ite_impl ti tt te s \\<bind>\n                  (\\<lambda>(tb, s).\n                      ite_impl fi ft fe s \\<bind>\n                      (\\<lambda>(x, y). IFimpl a tb x y))))))))))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rule obind_rule[where Q=\"\\<lambda>(r, s'). r = lowest_tops [i,t,e] \\<and> s'=s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> ospec (lowest_tops_impl [ii, ti, ei] s)\n                       (\\<lambda>(r, s').\n                           r = lowest_tops [i, t, e] \\<and> s' = s)\n 2. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule ospec_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> ospec (lowest_tops_impl [ii, ti, ei] s) ?Q7\n 2. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; ?Q7 r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = lowest_tops [i, t, e] \\<and> s' = s\n 3. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule lowest_tops_impl_R[OF la2])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> I s\n 2. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = lowest_tops [i, t, e] \\<and> s' = s\n 3. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = lowest_tops [i, t, e] \\<and> s' = s\n 2. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(simp add: None split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r x1.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; r = (None, s); x1 = None\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case_ifexi (\\<lambda>_. Some (ti, s))\n                            (\\<lambda>_. Some (ei, s))\n                            (\\<lambda>_ _ _. Map.empty) ii s)\n                          (\\<lambda>(r, s').\n                              (r, case i of Trueif \\<Rightarrow> t\n                                  | Falseif \\<Rightarrow> e)\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>_. Some (ti, s))\n                         (\\<lambda>_. Some (ei, s))\n                         (\\<lambda>_ _ _. Map.empty) ii s)\n                       (\\<lambda>(r, s').\n                           (r, case i of Trueif \\<Rightarrow> t\n                               | Falseif \\<Rightarrow> e)\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rule ospec_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>_. Some (ti, s))\n                         (\\<lambda>_. Some (ei, s))\n                         (\\<lambda>_ _ _. Map.empty) ii s)\n                       ?Q31\n 2. \\<And>r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; ?Q31 r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           (r, case i of Trueif \\<Rightarrow> t\n                               | Falseif \\<Rightarrow> e)\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s'", "apply(rule case_ifexi_rule[where I'=\"\\<lambda>s'. s'=s\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> I s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> (ii, ?n34) \\<in> R s\n 3. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     ?n34 = Trueif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (ti, s))\n                       (\\<lambda>(r, s').\n                           (r, ?ft34) \\<in> ?Q34 s \\<and> s' = s)\n 4. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     ?n34 = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (ei, s))\n                       (\\<lambda>(r, s').\n                           (r, ?ff34) \\<in> ?Q34 s \\<and> s' = s)\n 5. \\<And>ti ei v t e.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; ?n34 = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec None\n                          (\\<lambda>(r, s').\n                              (r, ?fi34 v t e) \\<in> ?Q34 s \\<and> s' = s)\n 6. \\<And>r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case ?n34 of Trueif \\<Rightarrow> ?ft34\n              | Falseif \\<Rightarrow> ?ff34\n              | IF x xa xb \\<Rightarrow> ?fi34 x xa xb)\n          \\<in> ?Q34 s \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           (r, case i of Trueif \\<Rightarrow> t\n                               | Falseif \\<Rightarrow> e)\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s'", "using None"], ["proof (prove)\nusing this:\n  lowest_tops [i, t, e] = None\n\ngoal (6 subgoals):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> I s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> (ii, ?n34) \\<in> R s\n 3. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     ?n34 = Trueif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (ti, s))\n                       (\\<lambda>(r, s').\n                           (r, ?ft34) \\<in> ?Q34 s \\<and> s' = s)\n 4. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     ?n34 = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (ei, s))\n                       (\\<lambda>(r, s').\n                           (r, ?ff34) \\<in> ?Q34 s \\<and> s' = s)\n 5. \\<And>ti ei v t e.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; ?n34 = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec None\n                          (\\<lambda>(r, s').\n                              (r, ?fi34 v t e) \\<in> ?Q34 s \\<and> s' = s)\n 6. \\<And>r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case ?n34 of Trueif \\<Rightarrow> ?ft34\n              | Falseif \\<Rightarrow> ?ff34\n              | IF x xa xb \\<Rightarrow> ?fi34 x xa xb)\n          \\<in> ?Q34 s \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           (r, case i of Trueif \\<Rightarrow> t\n                               | Falseif \\<Rightarrow> e)\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s'", "by (auto split: prod.splits ifex.splits simp: lowest_tops.simps)"], ["proof (state)\nthis:\n  ospec (ite_impl ii ti ei s)\n   (\\<lambda>(r, s').\n       (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lowest_tops [i, t, e] = Some a \\<Longrightarrow>\n       ospec (ite_impl ii ti ei s)\n        (\\<lambda>(r, s').\n            (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       lowest_tops [i, t, e] = Some a \\<Longrightarrow>\n       ospec (ite_impl ii ti ei s)\n        (\\<lambda>(r, s').\n            (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "case (Some lv)"], ["proof (state)\nthis:\n  lowest_tops [i, t, e] = Some lv\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lowest_tops [i, t, e] = Some a \\<Longrightarrow>\n       ospec (ite_impl ii ti ei s)\n        (\\<lambda>(r, s').\n            (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "note mIH = goal1(1,2)[OF Some]"], ["proof (state)\nthis:\n  \\<lbrakk>I ?s1; in_rel (R ?s1) ?ii1 (restrict_top i lv True);\n   in_rel (R ?s1) ?ti1 (restrict_top t lv True);\n   in_rel (R ?s1) ?ei1 (restrict_top e lv True)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite (restrict_top i lv True)\n                              (restrict_top t lv True)\n                              (restrict_top e lv True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>I ?s1; in_rel (R ?s1) ?ii1 (restrict_top i lv False);\n   in_rel (R ?s1) ?ti1 (restrict_top t lv False);\n   in_rel (R ?s1) ?ei1 (restrict_top e lv False)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite (restrict_top i lv False)\n                              (restrict_top t lv False)\n                              (restrict_top e lv False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lowest_tops [i, t, e] = Some a \\<Longrightarrow>\n       ospec (ite_impl ii ti ei s)\n        (\\<lambda>(r, s').\n            (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "from goal1(3-6)"], ["proof (chain)\npicking this:\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e", "show ?thesis"], ["proof (prove)\nusing this:\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. ospec (ite_impl ii ti ei s)\n     (\\<lambda>(r, s').\n         (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "apply(subst ite_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (lowest_tops_impl [ii, ti, ei] s \\<bind>\n                        (\\<lambda>(lt, uu_).\n                            case lt of\n                            None \\<Rightarrow>\n                              case_ifexi (\\<lambda>_. Some (ti, s))\n                               (\\<lambda>_. Some (ei, s))\n                               (\\<lambda>_ _ _. Map.empty) ii s\n                            | Some a \\<Rightarrow>\n                                restrict_top_impl ii a True s \\<bind>\n                                (\\<lambda>(ti, uu_).\n                                    restrict_top_impl ti a True s \\<bind>\n                                    (\\<lambda>(tt, uu_).\n  restrict_top_impl ei a True s \\<bind>\n  (\\<lambda>(te, uu_).\n      restrict_top_impl ii a False s \\<bind>\n      (\\<lambda>(fi, uu_).\n          restrict_top_impl ti a False s \\<bind>\n          (\\<lambda>(ft, uu_).\n              restrict_top_impl ei a False s \\<bind>\n              (\\<lambda>(fe, uu_).\n                  ite_impl ti tt te s \\<bind>\n                  (\\<lambda>(tb, s).\n                      ite_impl fi ft fe s \\<bind>\n                      (\\<lambda>(x, y). IFimpl a tb x y))))))))))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rule obind_rule[where Q=\"\\<lambda>(r, s'). r = lowest_tops [i,t,e]\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> ospec (lowest_tops_impl [ii, ti, ei] s)\n                       (\\<lambda>(r, s'). r = lowest_tops [i, t, e])\n 2. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule ospec_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> ospec (lowest_tops_impl [ii, ti, ei] s) ?Q8\n 2. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; ?Q8 r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 3. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule lowest_tops_impl_R[OF la2])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> I s\n 2. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 3. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 2. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, s))\n                              (\\<lambda>_. Some (ei, s))\n                              (\\<lambda>_ _ _. Map.empty) ii s\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True s \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True s \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True s \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False s \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False s \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False s \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl ti tt te s \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(simp add: Some split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r x1 x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; r = (Some lv, x2); x1 = Some lv\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (restrict_top_impl ii lv True s \\<bind>\n                           (\\<lambda>(ti, uu_).\n                               restrict_top_impl ti lv True s \\<bind>\n                               (\\<lambda>(tt, uu_).\n                                   restrict_top_impl ei lv True s \\<bind>\n                                   (\\<lambda>(te, uu_).\n restrict_top_impl ii lv False s \\<bind>\n (\\<lambda>(fi, uu_).\n     restrict_top_impl ti lv False s \\<bind>\n     (\\<lambda>(ft, uu_).\n         restrict_top_impl ei lv False s \\<bind>\n         (\\<lambda>(fe, uu_).\n             ite_impl ti tt te s \\<bind>\n             (\\<lambda>(tb, s).\n                 ite_impl fi ft fe s \\<bind>\n                 (\\<lambda>(x, y). IFimpl lv tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (restrict_top_impl ii lv True s \\<bind>\n                        (\\<lambda>(ti, uu_).\n                            restrict_top_impl ti lv True s \\<bind>\n                            (\\<lambda>(tt, uu_).\n                                restrict_top_impl ei lv True s \\<bind>\n                                (\\<lambda>(te, uu_).\n                                    restrict_top_impl ii lv False s \\<bind>\n                                    (\\<lambda>(fi, uu_).\n  restrict_top_impl ti lv False s \\<bind>\n  (\\<lambda>(ft, uu_).\n      restrict_top_impl ei lv False s \\<bind>\n      (\\<lambda>(fe, uu_).\n          ite_impl ti tt te s \\<bind>\n          (\\<lambda>(tb, s).\n              ite_impl fi ft fe s \\<bind>\n              (\\<lambda>(x, y). IFimpl lv tb x y)))))))))\n                       (\\<lambda>(r, s').\n                           (r, IFC lv\n                                (case lowest_tops\n [restrict_top i lv True, restrict_top t lv True, restrict_top e lv True] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv True of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv True\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv True\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv True) x True)\n  (restrict_top (restrict_top t lv True) x True)\n  (restrict_top (restrict_top e lv True) x True))\n(ifex_ite (restrict_top (restrict_top i lv True) x False)\n  (restrict_top (restrict_top t lv True) x False)\n  (restrict_top (restrict_top e lv True) x False)))\n                                (case lowest_tops\n [restrict_top i lv False, restrict_top t lv False,\n  restrict_top e lv False] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv False of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv False\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv False\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv False) x True)\n  (restrict_top (restrict_top t lv False) x True)\n  (restrict_top (restrict_top e lv False) x True))\n(ifex_ite (restrict_top (restrict_top i lv False) x False)\n  (restrict_top (restrict_top t lv False) x False)\n  (restrict_top (restrict_top e lv False) x False))))\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "(* take care of all those restrict_tops *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (restrict_top_impl ii lv True s \\<bind>\n                        (\\<lambda>(ti, uu_).\n                            restrict_top_impl ti lv True s \\<bind>\n                            (\\<lambda>(tt, uu_).\n                                restrict_top_impl ei lv True s \\<bind>\n                                (\\<lambda>(te, uu_).\n                                    restrict_top_impl ii lv False s \\<bind>\n                                    (\\<lambda>(fi, uu_).\n  restrict_top_impl ti lv False s \\<bind>\n  (\\<lambda>(ft, uu_).\n      restrict_top_impl ei lv False s \\<bind>\n      (\\<lambda>(fe, uu_).\n          ite_impl ti tt te s \\<bind>\n          (\\<lambda>(tb, s).\n              ite_impl fi ft fe s \\<bind>\n              (\\<lambda>(x, y). IFimpl lv tb x y)))))))))\n                       (\\<lambda>(r, s').\n                           (r, IFC lv\n                                (case lowest_tops\n [restrict_top i lv True, restrict_top t lv True, restrict_top e lv True] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv True of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv True\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv True\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv True) x True)\n  (restrict_top (restrict_top t lv True) x True)\n  (restrict_top (restrict_top e lv True) x True))\n(ifex_ite (restrict_top (restrict_top i lv True) x False)\n  (restrict_top (restrict_top t lv True) x False)\n  (restrict_top (restrict_top e lv True) x False)))\n                                (case lowest_tops\n [restrict_top i lv False, restrict_top t lv False,\n  restrict_top e lv False] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv False of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv False\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv False\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv False) x True)\n  (restrict_top (restrict_top t lv False) x True)\n  (restrict_top (restrict_top e lv False) x True))\n(ifex_ite (restrict_top (restrict_top i lv False) x False)\n  (restrict_top (restrict_top t lv False) x False)\n  (restrict_top (restrict_top e lv False) x False))))\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rule obind_rule, rule restrict_top_impl_spec, assumption+, clarsimp split: prod.splits)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (ite_impl x1 x1a x1b s \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl x1c x1d x1e s \\<bind>\n                               (\\<lambda>(x, y). IFimpl lv tb x y)))\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl x1 x1a x1b s)\n                          (?Q190 x1 x1a x1b x1c x1d x1e)\n 2. \\<And>x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        ?Q190 x1 x1a x1b x1c x1d x1e r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl x1c x1d x1e s \\<bind>\n                             (\\<lambda>(x, y). IFimpl lv tb x y))\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule mIH(1))"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> I s\n 2. \\<And>x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> in_rel (R s) x1 (restrict_top i lv True)\n 3. \\<And>x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> in_rel (R s) x1a (restrict_top t lv True)\n 4. \\<And>x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> in_rel (R s) x1b (restrict_top e lv True)\n 5. \\<And>x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite (restrict_top i lv True) (restrict_top t lv True)\n               (restrict_top e lv True))\n          \\<in> R s' \\<and>\n          I s' \\<and> les s s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl x1c x1d x1e s \\<bind>\n                             (\\<lambda>(x, y). IFimpl lv tb x y))\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(simp;fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite (restrict_top i lv True) (restrict_top t lv True)\n               (restrict_top e lv True))\n          \\<in> R s' \\<and>\n          I s' \\<and> les s s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl x1c x1d x1e s \\<bind>\n                             (\\<lambda>(x, y). IFimpl lv tb x y))\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (ite_impl x1c x1d x1e b \\<bind>\n                           (\\<lambda>(x, y). IFimpl lv a x y))\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl x1c x1d x1e b)\n                          (?Q209 x1 x1a x1b x1c x1d x1e a b)\n 2. \\<And>x1 x1a x1b x1c x1d x1e a b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; ?Q209 x1 x1a x1b x1c x1d x1e a b r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (x, xa) \\<Rightarrow> IFimpl lv a x xa)\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule mIH(2))"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b\\<rbrakk>\n       \\<Longrightarrow> I b\n 2. \\<And>x1 x1a x1b x1c x1d x1e a b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b\\<rbrakk>\n       \\<Longrightarrow> in_rel (R b) x1c (restrict_top i lv False)\n 3. \\<And>x1 x1a x1b x1c x1d x1e a b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b\\<rbrakk>\n       \\<Longrightarrow> in_rel (R b) x1d (restrict_top t lv False)\n 4. \\<And>x1 x1a x1b x1c x1d x1e a b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b\\<rbrakk>\n       \\<Longrightarrow> in_rel (R b) x1e (restrict_top e lv False)\n 5. \\<And>x1 x1a x1b x1c x1d x1e a b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite (restrict_top i lv False) (restrict_top t lv False)\n               (restrict_top e lv False))\n          \\<in> R s' \\<and>\n          I s' \\<and> les b s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (x, xa) \\<Rightarrow> IFimpl lv a x xa)\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(simp add: les_def;fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite (restrict_top i lv False) (restrict_top t lv False)\n               (restrict_top e lv False))\n          \\<in> R s' \\<and>\n          I s' \\<and> les b s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (x, xa) \\<Rightarrow> IFimpl lv a x xa)\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(simp split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> ospec (IFimpl lv a x1f x2)\n                          (\\<lambda>(r, s').\n                              (r, IFC lv\n                                   (case lowest_tops\n    [restrict_top i lv True, restrict_top t lv True,\n     restrict_top e lv True] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv True of Trueif \\<Rightarrow> restrict_top t lv True\n| Falseif \\<Rightarrow> restrict_top e lv True\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv True) x True)\n     (restrict_top (restrict_top t lv True) x True)\n     (restrict_top (restrict_top e lv True) x True))\n   (ifex_ite (restrict_top (restrict_top i lv True) x False)\n     (restrict_top (restrict_top t lv True) x False)\n     (restrict_top (restrict_top e lv True) x False)))\n                                   (case lowest_tops\n    [restrict_top i lv False, restrict_top t lv False,\n     restrict_top e lv False] of\n                                    None \\<Rightarrow>\ncase restrict_top i lv False of Trueif \\<Rightarrow> restrict_top t lv False\n| Falseif \\<Rightarrow> restrict_top e lv False\n                                    | Some x \\<Rightarrow>\n  IFC x\n   (ifex_ite (restrict_top (restrict_top i lv False) x True)\n     (restrict_top (restrict_top t lv False) x True)\n     (restrict_top (restrict_top e lv False) x True))\n   (ifex_ite (restrict_top (restrict_top i lv False) x False)\n     (restrict_top (restrict_top t lv False) x False)\n     (restrict_top (restrict_top e lv False) x False))))\n                              \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule ospec_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> ospec (IFimpl lv a x1f x2)\n                          (?Q240 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n 2. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2 ra.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2;\n        ?Q240 x1 x1a x1b x1c x1d x1e a b r x1f x2 ra\\<rbrakk>\n       \\<Longrightarrow> case ra of\n                         (r, s') \\<Rightarrow>\n                           (r, IFC lv\n                                (case lowest_tops\n [restrict_top i lv True, restrict_top t lv True, restrict_top e lv True] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv True of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv True\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv True\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv True) x True)\n  (restrict_top (restrict_top t lv True) x True)\n  (restrict_top (restrict_top e lv True) x True))\n(ifex_ite (restrict_top (restrict_top i lv True) x False)\n  (restrict_top (restrict_top t lv True) x False)\n  (restrict_top (restrict_top e lv True) x False)))\n                                (case lowest_tops\n [restrict_top i lv False, restrict_top t lv False,\n  restrict_top e lv False] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv False of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv False\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv False\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv False) x True)\n  (restrict_top (restrict_top t lv False) x True)\n  (restrict_top (restrict_top e lv False) x True))\n(ifex_ite (restrict_top (restrict_top i lv False) x False)\n  (restrict_top (restrict_top t lv False) x False)\n  (restrict_top (restrict_top e lv False) x False))))\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s'", "apply(rule IFimpl_rule)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> I x2\n 2. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> (a, ?n1.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n                         \\<in> R x2\n 3. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> (x1f, ?n2.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n                         \\<in> R x2\n 4. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2 ra.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2;\n        case ra of\n        (ni, s') \\<Rightarrow>\n          (ni,\n           IFC lv (?n1.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n            (?n2.243 x1 x1a x1b x1c x1d x1e a b r x1f x2))\n          \\<in> R s' \\<and>\n          I s' \\<and> les x2 s'\\<rbrakk>\n       \\<Longrightarrow> case ra of\n                         (r, s') \\<Rightarrow>\n                           (r, IFC lv\n                                (case lowest_tops\n [restrict_top i lv True, restrict_top t lv True, restrict_top e lv True] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv True of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv True\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv True\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv True) x True)\n  (restrict_top (restrict_top t lv True) x True)\n  (restrict_top (restrict_top e lv True) x True))\n(ifex_ite (restrict_top (restrict_top i lv True) x False)\n  (restrict_top (restrict_top t lv True) x False)\n  (restrict_top (restrict_top e lv True) x False)))\n                                (case lowest_tops\n [restrict_top i lv False, restrict_top t lv False,\n  restrict_top e lv False] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv False of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv False\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv False\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv False) x True)\n  (restrict_top (restrict_top t lv False) x True)\n  (restrict_top (restrict_top e lv False) x True))\n(ifex_ite (restrict_top (restrict_top i lv False) x False)\n  (restrict_top (restrict_top t lv False) x False)\n  (restrict_top (restrict_top e lv False) x False))))\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s'", "apply(simp add: les_def;fail)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> (a, ?n1.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n                         \\<in> R x2\n 2. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> (x1f, ?n2.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n                         \\<in> R x2\n 3. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2 ra.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2;\n        case ra of\n        (ni, s') \\<Rightarrow>\n          (ni,\n           IFC lv (?n1.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n            (?n2.243 x1 x1a x1b x1c x1d x1e a b r x1f x2))\n          \\<in> R s' \\<and>\n          I s' \\<and> les x2 s'\\<rbrakk>\n       \\<Longrightarrow> case ra of\n                         (r, s') \\<Rightarrow>\n                           (r, IFC lv\n                                (case lowest_tops\n [restrict_top i lv True, restrict_top t lv True, restrict_top e lv True] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv True of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv True\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv True\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv True) x True)\n  (restrict_top (restrict_top t lv True) x True)\n  (restrict_top (restrict_top e lv True) x True))\n(ifex_ite (restrict_top (restrict_top i lv True) x False)\n  (restrict_top (restrict_top t lv True) x False)\n  (restrict_top (restrict_top e lv True) x False)))\n                                (case lowest_tops\n [restrict_top i lv False, restrict_top t lv False,\n  restrict_top e lv False] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv False of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv False\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv False\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv False) x True)\n  (restrict_top (restrict_top t lv False) x True)\n  (restrict_top (restrict_top e lv False) x True))\n(ifex_ite (restrict_top (restrict_top i lv False) x False)\n  (restrict_top (restrict_top t lv False) x False)\n  (restrict_top (restrict_top e lv False) x False))))\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s'", "using les_def les_trans"], ["proof (prove)\nusing this:\n  les ?s ?s' \\<equiv>\n  \\<forall>ni n. (ni, n) \\<in> R ?s \\<longrightarrow> (ni, n) \\<in> R ?s'\n  \\<lbrakk>les ?s1.0 ?s2.0; les ?s2.0 ?s3.0\\<rbrakk>\n  \\<Longrightarrow> les ?s1.0 ?s3.0\n\ngoal (3 subgoals):\n 1. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> (a, ?n1.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n                         \\<in> R x2\n 2. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2\\<rbrakk>\n       \\<Longrightarrow> (x1f, ?n2.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n                         \\<in> R x2\n 3. \\<And>x1 x1a x1b x1c x1d x1e a b r x1f x2 ra.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; (x1, restrict_top i lv True) \\<in> R s;\n        (x1a, restrict_top t lv True) \\<in> R s;\n        (x1b, restrict_top e lv True) \\<in> R s;\n        (x1c, restrict_top i lv False) \\<in> R s;\n        (x1d, restrict_top t lv False) \\<in> R s;\n        (x1e, restrict_top e lv False) \\<in> R s;\n        (a, case lowest_tops\n                  [restrict_top i lv True, restrict_top t lv True,\n                   restrict_top e lv True] of\n            None \\<Rightarrow>\n              case restrict_top i lv True of\n              Trueif \\<Rightarrow> restrict_top t lv True\n              | Falseif \\<Rightarrow> restrict_top e lv True\n            | Some x \\<Rightarrow>\n                IFC x\n                 (ifex_ite (restrict_top (restrict_top i lv True) x True)\n                   (restrict_top (restrict_top t lv True) x True)\n                   (restrict_top (restrict_top e lv True) x True))\n                 (ifex_ite (restrict_top (restrict_top i lv True) x False)\n                   (restrict_top (restrict_top t lv True) x False)\n                   (restrict_top (restrict_top e lv True) x False)))\n        \\<in> R b;\n        I b; les s b; r = (x1f, x2);\n        (x1f,\n         case lowest_tops\n               [restrict_top i lv False, restrict_top t lv False,\n                restrict_top e lv False] of\n         None \\<Rightarrow>\n           case restrict_top i lv False of\n           Trueif \\<Rightarrow> restrict_top t lv False\n           | Falseif \\<Rightarrow> restrict_top e lv False\n         | Some x \\<Rightarrow>\n             IFC x\n              (ifex_ite (restrict_top (restrict_top i lv False) x True)\n                (restrict_top (restrict_top t lv False) x True)\n                (restrict_top (restrict_top e lv False) x True))\n              (ifex_ite (restrict_top (restrict_top i lv False) x False)\n                (restrict_top (restrict_top t lv False) x False)\n                (restrict_top (restrict_top e lv False) x False)))\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les b x2;\n        case ra of\n        (ni, s') \\<Rightarrow>\n          (ni,\n           IFC lv (?n1.243 x1 x1a x1b x1c x1d x1e a b r x1f x2)\n            (?n2.243 x1 x1a x1b x1c x1d x1e a b r x1f x2))\n          \\<in> R s' \\<and>\n          I s' \\<and> les x2 s'\\<rbrakk>\n       \\<Longrightarrow> case ra of\n                         (r, s') \\<Rightarrow>\n                           (r, IFC lv\n                                (case lowest_tops\n [restrict_top i lv True, restrict_top t lv True, restrict_top e lv True] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv True of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv True\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv True\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv True) x True)\n  (restrict_top (restrict_top t lv True) x True)\n  (restrict_top (restrict_top e lv True) x True))\n(ifex_ite (restrict_top (restrict_top i lv True) x False)\n  (restrict_top (restrict_top t lv True) x False)\n  (restrict_top (restrict_top e lv True) x False)))\n                                (case lowest_tops\n [restrict_top i lv False, restrict_top t lv False,\n  restrict_top e lv False] of\n                                 None \\<Rightarrow>\n                                   case restrict_top i lv False of\n                                   Trueif \\<Rightarrow>\n                                     restrict_top t lv False\n                                   | Falseif \\<Rightarrow>\n restrict_top e lv False\n                                 | Some x \\<Rightarrow>\n                                     IFC x\n(ifex_ite (restrict_top (restrict_top i lv False) x True)\n  (restrict_top (restrict_top t lv False) x True)\n  (restrict_top (restrict_top e lv False) x True))\n(ifex_ite (restrict_top (restrict_top i lv False) x False)\n  (restrict_top (restrict_top t lv False) x False)\n  (restrict_top (restrict_top e lv False) x False))))\n                           \\<in> R s' \\<and>\n                           I s' \\<and> les s s'", "by blast+"], ["proof (state)\nthis:\n  ospec (ite_impl ii ti ei s)\n   (\\<lambda>(r, s').\n       (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ospec (ite_impl ii ti ei s)\n   (\\<lambda>(r, s').\n       (r, ifex_ite i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma case_ifexi_mono[partial_function_mono]:\n  assumes [partial_function_mono]: \n    \"mono_option (\\<lambda>F. fti F s)\"\n    \"mono_option (\\<lambda>F. ffi F s)\"\n    \"\\<And>x31 x32 x33. mono_option (\\<lambda>F. fii F x31 x32 x33 s)\"\n  shows \"mono_option (\\<lambda>F. case_ifexi (fti F) (ffi F) (fii F) ni s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monotone option.le_fun option_ord\n     (\\<lambda>F. case_ifexi (fti F) (ffi F) (fii F) ni s)", "unfolding case_ifexi_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. monotone option.le_fun option_ord\n     (\\<lambda>F.\n         DESTRimpl ni s \\<bind>\n         (\\<lambda>dest.\n             case dest of TD \\<Rightarrow> fti F s\n             | FD \\<Rightarrow> ffi F s\n             | IFD v ti ei \\<Rightarrow> fii F v ti ei s))", "by (tactic \\<open>Partial_Function.mono_tac @{context} 1\\<close>)"], ["", "partial_function(option) val_impl :: \"'ni \\<Rightarrow> ('a \\<Rightarrow> bool) \\<Rightarrow> 's \\<Rightarrow> (bool\\<times>'s) option\"\nwhere\n\"val_impl e ass s = case_ifexi\n  (\\<lambda>s. Some (True,s))\n  (\\<lambda>s. Some (False,s)) \n  (\\<lambda>v t e s. val_impl (if ass v then t else e) ass s)\n  e  s\""], ["", "lemma \"I s \\<Longrightarrow> (ni,n) \\<in> R s \\<Longrightarrow> ospec (val_impl ni ass s) (\\<lambda>(r,s'). r = (val_ifex n ass) \\<and> s'=s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni, n) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (val_impl ni ass s)\n                       (\\<lambda>(r, s'). r = val_ifex n ass \\<and> s' = s)", "apply (induction n arbitrary: ni)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ni.\n       \\<lbrakk>I s; (ni, Trueif) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl ni ass s)\n                          (\\<lambda>(r, s').\n                              r = val_ifex Trueif ass \\<and> s' = s)\n 2. \\<And>ni.\n       \\<lbrakk>I s; (ni, Falseif) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl ni ass s)\n                          (\\<lambda>(r, s').\n                              r = val_ifex Falseif ass \\<and> s' = s)\n 3. \\<And>x1 n1 n2 ni.\n       \\<lbrakk>\\<And>ni.\n                   \\<lbrakk>I s; (ni, n1) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (val_impl ni ass s)\n(\\<lambda>(r, s'). r = val_ifex n1 ass \\<and> s' = s);\n        \\<And>ni.\n           \\<lbrakk>I s; (ni, n2) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (val_impl ni ass s)\n                              (\\<lambda>(r, s').\n                                  r = val_ifex n2 ass \\<and> s' = s);\n        I s; (ni, IF x1 n1 n2) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl ni ass s)\n                          (\\<lambda>(r, s').\n                              r = val_ifex (IF x1 n1 n2) ass \\<and> s' = s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni_, Trueif) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (val_impl ni_ ass s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex Trueif ass \\<and> s' = s)", "apply (subst val_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni_, Trueif) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex Trueif ass \\<and> s' = s)", "apply (rule ospec_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; (ni_, Trueif) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       ?Q\n 2. \\<And>r.\n       \\<lbrakk>I s; (ni_, Trueif) \\<in> R s; ?Q r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex Trueif ass \\<and> s' = s", "apply (rule case_ifexi_rule[where I'=\"\\<lambda>s'. s'=s\" and Q=\"\\<lambda>s. Id\"]; assumption?)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>I s; (ni_, Trueif) \\<in> R s; Trueif = Trueif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (True, s))\n                       (\\<lambda>(r, s'). (r, ?ft4) \\<in> Id \\<and> s' = s)\n 2. \\<lbrakk>I s; (ni_, Trueif) \\<in> R s; Trueif = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (False, s))\n                       (\\<lambda>(r, s'). (r, ?ff4) \\<in> Id \\<and> s' = s)\n 3. \\<And>ti ei v t e.\n       \\<lbrakk>I s; (ni_, Trueif) \\<in> R s; Trueif = IF v t e;\n        (ti, t) \\<in> R s; (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (\\<lambda>(r, s').\n                              (r, ?fi4 v t e) \\<in> Id \\<and> s' = s)\n 4. \\<And>r.\n       \\<lbrakk>I s; (ni_, Trueif) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case Trueif of Trueif \\<Rightarrow> ?ft4\n              | Falseif \\<Rightarrow> ?ff4\n              | IF x xa xb \\<Rightarrow> ?fi4 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex Trueif ass \\<and> s' = s", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ni.\n       \\<lbrakk>I s; (ni, Falseif) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl ni ass s)\n                          (\\<lambda>(r, s').\n                              r = val_ifex Falseif ass \\<and> s' = s)\n 2. \\<And>x1 n1 n2 ni.\n       \\<lbrakk>\\<And>ni.\n                   \\<lbrakk>I s; (ni, n1) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (val_impl ni ass s)\n(\\<lambda>(r, s'). r = val_ifex n1 ass \\<and> s' = s);\n        \\<And>ni.\n           \\<lbrakk>I s; (ni, n2) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (val_impl ni ass s)\n                              (\\<lambda>(r, s').\n                                  r = val_ifex n2 ass \\<and> s' = s);\n        I s; (ni, IF x1 n1 n2) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl ni ass s)\n                          (\\<lambda>(r, s').\n                              r = val_ifex (IF x1 n1 n2) ass \\<and> s' = s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni_, Falseif) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (val_impl ni_ ass s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex Falseif ass \\<and> s' = s)", "apply (subst val_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni_, Falseif) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex Falseif ass \\<and> s' = s)", "apply (rule ospec_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; (ni_, Falseif) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       ?Q\n 2. \\<And>r.\n       \\<lbrakk>I s; (ni_, Falseif) \\<in> R s; ?Q r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex Falseif ass \\<and> s' = s", "apply (rule case_ifexi_rule[where I'=\"\\<lambda>s'. s'=s\" and Q=\"\\<lambda>s. Id\"]; assumption?)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>I s; (ni_, Falseif) \\<in> R s; Falseif = Trueif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (True, s))\n                       (\\<lambda>(r, s'). (r, ?ft4) \\<in> Id \\<and> s' = s)\n 2. \\<lbrakk>I s; (ni_, Falseif) \\<in> R s; Falseif = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (False, s))\n                       (\\<lambda>(r, s'). (r, ?ff4) \\<in> Id \\<and> s' = s)\n 3. \\<And>ti ei v t e.\n       \\<lbrakk>I s; (ni_, Falseif) \\<in> R s; Falseif = IF v t e;\n        (ti, t) \\<in> R s; (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (\\<lambda>(r, s').\n                              (r, ?fi4 v t e) \\<in> Id \\<and> s' = s)\n 4. \\<And>r.\n       \\<lbrakk>I s; (ni_, Falseif) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case Falseif of Trueif \\<Rightarrow> ?ft4\n              | Falseif \\<Rightarrow> ?ff4\n              | IF x xa xb \\<Rightarrow> ?fi4 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex Falseif ass \\<and> s' = s", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 n1 n2 ni.\n       \\<lbrakk>\\<And>ni.\n                   \\<lbrakk>I s; (ni, n1) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (val_impl ni ass s)\n(\\<lambda>(r, s'). r = val_ifex n1 ass \\<and> s' = s);\n        \\<And>ni.\n           \\<lbrakk>I s; (ni, n2) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (val_impl ni ass s)\n                              (\\<lambda>(r, s').\n                                  r = val_ifex n2 ass \\<and> s' = s);\n        I s; (ni, IF x1 n1 n2) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl ni ass s)\n                          (\\<lambda>(r, s').\n                              r = val_ifex (IF x1 n1 n2) ass \\<and> s' = s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ni.\n                \\<lbrakk>I s; (ni, n1_) \\<in> R s\\<rbrakk>\n                \\<Longrightarrow> ospec (val_impl ni ass s)\n                                   (\\<lambda>(r, s').\n r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        \\<lbrakk>I s; (ni, n2_) \\<in> R s\\<rbrakk>\n        \\<Longrightarrow> ospec (val_impl ni ass s)\n                           (\\<lambda>(r, s').\n                               r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (val_impl ni_ ass s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex (IF x1_ n1_ n2_) ass \\<and> s' = s)", "apply (subst val_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ni.\n                \\<lbrakk>I s; (ni, n1_) \\<in> R s\\<rbrakk>\n                \\<Longrightarrow> ospec (val_impl ni ass s)\n                                   (\\<lambda>(r, s').\n r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        \\<lbrakk>I s; (ni, n2_) \\<in> R s\\<rbrakk>\n        \\<Longrightarrow> ospec (val_impl ni ass s)\n                           (\\<lambda>(r, s').\n                               r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex (IF x1_ n1_ n2_) ass \\<and> s' = s)", "apply (subst val_ifex.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ni.\n                \\<lbrakk>I s; (ni, n1_) \\<in> R s\\<rbrakk>\n                \\<Longrightarrow> ospec (val_impl ni ass s)\n                                   (\\<lambda>(r, s').\n r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        \\<lbrakk>I s; (ni, n2_) \\<in> R s\\<rbrakk>\n        \\<Longrightarrow> ospec (val_impl ni ass s)\n                           (\\<lambda>(r, s').\n                               r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r =\n                           (if ass x1_ then val_ifex n1_ ass\n                            else val_ifex n2_ ass) \\<and>\n                           s' = s)", "apply (clarsimp; intro impI conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n1_ ass \\<and> s' = s)\n 2. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (rule ospec_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       ?Q11\n 2. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_; ?Q11 r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n1_ ass \\<and> s' = s\n 3. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (rule case_ifexi_rule[where I'=\"\\<lambda>s'. s'=s\" and Q=\"\\<lambda>s. Id\"]; assumption?)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n     IF x1_ n1_ n2_ = Trueif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (True, s))\n                       (\\<lambda>(r, s'). (r, ?ft15) \\<in> Id \\<and> s' = s)\n 2. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n     IF x1_ n1_ n2_ = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (False, s))\n                       (\\<lambda>(r, s'). (r, ?ff15) \\<in> Id \\<and> s' = s)\n 3. \\<And>ti ei v t e.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (\\<lambda>(r, s').\n                              (r, ?fi15 v t e) \\<in> Id \\<and> s' = s)\n 4. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft15\n              | Falseif \\<Rightarrow> ?ff15\n              | IF x xa xb \\<Rightarrow> ?fi15 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n1_ ass \\<and> s' = s\n 5. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (simp; fail)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n     IF x1_ n1_ n2_ = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (False, s))\n                       (\\<lambda>(r, s'). (r, ?ff15) \\<in> Id \\<and> s' = s)\n 2. \\<And>ti ei v t e.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (\\<lambda>(r, s').\n                              (r, ?fi15 v t e) \\<in> Id \\<and> s' = s)\n 3. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft15\n              | Falseif \\<Rightarrow> ?ff15\n              | IF x xa xb \\<Rightarrow> ?fi15 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n1_ ass \\<and> s' = s\n 4. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (simp; fail)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ti ei v t e.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (\\<lambda>(r, s').\n                              (r, ?fi15 v t e) \\<in> Id \\<and> s' = s)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft15\n              | Falseif \\<Rightarrow> ?ff15\n              | IF x xa xb \\<Rightarrow> ?fi15 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n1_ ass \\<and> s' = s\n 3. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (rule ospec_cons)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ti ei v t e.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (?Q36 ti ei v t e)\n 2. \\<And>ti ei v t e r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        ?Q36 ti ei v t e r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           (r, ?fi15 v t e) \\<in> Id \\<and> s' = s\n 3. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft15\n              | Falseif \\<Rightarrow> ?ff15\n              | IF x xa xb \\<Rightarrow> ?fi15 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n1_ ass \\<and> s' = s\n 4. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (rprems; simp; fail)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ti ei v t e r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow> r = val_ifex n1_ ass \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           (r, ?fi15 v t e) \\<in> Id \\<and> s' = s\n 2. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft15\n              | Falseif \\<Rightarrow> ?ff15\n              | IF x xa xb \\<Rightarrow> ?fi15 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n1_ ass \\<and> s' = s\n 3. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (simp; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft15\n              | Falseif \\<Rightarrow> ?ff15\n              | IF a b c \\<Rightarrow> val_ifex b ass)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n1_ ass \\<and> s' = s\n 2. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (simp; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       (\\<lambda>(r, s').\n                           r = val_ifex n2_ ass \\<and> s' = s)", "apply (rule ospec_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case_ifexi (\\<lambda>s. Some (True, s))\n                         (\\<lambda>s. Some (False, s))\n                         (\\<lambda>v t e.\n                             val_impl (if ass v then t else e) ass)\n                         ni_ s)\n                       ?Q50\n 2. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        ?Q50 r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n2_ ass \\<and> s' = s", "apply (rule case_ifexi_rule[where I'=\"\\<lambda>s'. s'=s\" and Q=\"\\<lambda>s. Id\"]; assumption?)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n     IF x1_ n1_ n2_ = Trueif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (True, s))\n                       (\\<lambda>(r, s'). (r, ?ft54) \\<in> Id \\<and> s' = s)\n 2. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n     IF x1_ n1_ n2_ = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (False, s))\n                       (\\<lambda>(r, s'). (r, ?ff54) \\<in> Id \\<and> s' = s)\n 3. \\<And>ti ei v t e.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (\\<lambda>(r, s').\n                              (r, ?fi54 v t e) \\<in> Id \\<and> s' = s)\n 4. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft54\n              | Falseif \\<Rightarrow> ?ff54\n              | IF x xa xb \\<Rightarrow> ?fi54 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n2_ ass \\<and> s' = s", "apply (simp; fail)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>ni.\n                (ni, n1_) \\<in> R s \\<Longrightarrow>\n                ospec (val_impl ni ass s)\n                 (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n     \\<And>ni.\n        (ni, n2_) \\<in> R s \\<Longrightarrow>\n        ospec (val_impl ni ass s)\n         (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n     I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n     IF x1_ n1_ n2_ = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (Some (False, s))\n                       (\\<lambda>(r, s'). (r, ?ff54) \\<in> Id \\<and> s' = s)\n 2. \\<And>ti ei v t e.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (\\<lambda>(r, s').\n                              (r, ?fi54 v t e) \\<in> Id \\<and> s' = s)\n 3. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft54\n              | Falseif \\<Rightarrow> ?ff54\n              | IF x xa xb \\<Rightarrow> ?fi54 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n2_ ass \\<and> s' = s", "apply (simp; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti ei v t e.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        IF x1_ n1_ n2_ = IF v t e; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl (if ass v then ti else ei) ass s)\n                          (\\<lambda>(r, s').\n                              (r, ?fi54 v t e) \\<in> Id \\<and> s' = s)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft54\n              | Falseif \\<Rightarrow> ?ff54\n              | IF x xa xb \\<Rightarrow> ?fi54 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n2_ ass \\<and> s' = s", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti ei v.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF v n1_ n2_) \\<in> R s; \\<not> ass v; x1_ = v;\n        (ti, n1_) \\<in> R s; (ei, n2_) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl ei ass s)\n                          (\\<lambda>(r, s').\n                              r = ?fi54 v n1_ n2_ \\<and> s' = s)\n 2. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft54\n              | Falseif \\<Rightarrow> ?ff54\n              | IF x xa xb \\<Rightarrow> ?fi54 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n2_ ass \\<and> s' = s", "apply (rule ospec_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ti ei v.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF v n1_ n2_) \\<in> R s; \\<not> ass v; x1_ = v;\n        (ti, n1_) \\<in> R s; (ei, n2_) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (val_impl ei ass s) (?Q75 ti ei v)\n 2. \\<And>ti ei v r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF v n1_ n2_) \\<in> R s; \\<not> ass v; x1_ = v;\n        (ti, n1_) \\<in> R s; (ei, n2_) \\<in> R s; ?Q75 ti ei v r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = ?fi54 v n1_ n2_ \\<and> s' = s\n 3. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft54\n              | Falseif \\<Rightarrow> ?ff54\n              | IF x xa xb \\<Rightarrow> ?fi54 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n2_ ass \\<and> s' = s", "apply (rprems; simp; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti ei v r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF v n1_ n2_) \\<in> R s; \\<not> ass v; x1_ = v;\n        (ti, n1_) \\<in> R s; (ei, n2_) \\<in> R s;\n        case r of\n        (r, s') \\<Rightarrow> r = val_ifex n2_ ass \\<and> s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = ?fi54 v n1_ n2_ \\<and> s' = s\n 2. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft54\n              | Falseif \\<Rightarrow> ?ff54\n              | IF x xa xb \\<Rightarrow> ?fi54 x xa xb)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n2_ ass \\<and> s' = s", "apply (simp; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>\\<And>ni.\n                   (ni, n1_) \\<in> R s \\<Longrightarrow>\n                   ospec (val_impl ni ass s)\n                    (\\<lambda>(r, s'). r = val_ifex n1_ ass \\<and> s' = s);\n        \\<And>ni.\n           (ni, n2_) \\<in> R s \\<Longrightarrow>\n           ospec (val_impl ni ass s)\n            (\\<lambda>(r, s'). r = val_ifex n2_ ass \\<and> s' = s);\n        I s; (ni_, IF x1_ n1_ n2_) \\<in> R s; \\<not> ass x1_;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, case IF x1_ n1_ n2_ of Trueif \\<Rightarrow> ?ft54\n              | Falseif \\<Rightarrow> ?ff54\n              | IF a b c \\<Rightarrow> val_ifex c ass)\n          \\<in> Id \\<and>\n          s' = s\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow>\n                           r = val_ifex n2_ ass \\<and> s' = s", "apply (simp; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "locale bdd_impl_cmp_pre = bdd_impl_pre\nbegin"], ["", "definition \"map_invar_impl m s = \n  (\\<forall>ii ti ei ri. m (ii,ti,ei) = Some ri \\<longrightarrow> \n  (\\<exists>i t e. ((ri,ifex_ite_opt i t e) \\<in> R s) \\<and> (ii,i) \\<in> R s \\<and> (ti,t) \\<in> R s \\<and> (ei,e) \\<in> R s))\""], ["", "lemma map_invar_impl_les: \"map_invar_impl m s \\<Longrightarrow> les s s' \\<Longrightarrow> map_invar_impl m s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>map_invar_impl m s; les s s'\\<rbrakk>\n    \\<Longrightarrow> map_invar_impl m s'", "unfolding map_invar_impl_def bdd_impl_pre.les_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>ii ti ei ri.\n                m (ii, ti, ei) = Some ri \\<longrightarrow>\n                (\\<exists>i t e.\n                    (ri, ifex_ite_opt i t e) \\<in> R s \\<and>\n                    (ii, i) \\<in> R s \\<and>\n                    (ti, t) \\<in> R s \\<and> (ei, e) \\<in> R s);\n     \\<forall>ni n.\n        (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R s'\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ii ti ei ri.\n                         m (ii, ti, ei) = Some ri \\<longrightarrow>\n                         (\\<exists>i t e.\n                             (ri, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                             (ii, i) \\<in> R s' \\<and>\n                             (ti, t) \\<in> R s' \\<and> (ei, e) \\<in> R s')", "by blast"], ["", "lemma map_invar_impl_update: \"map_invar_impl m s \\<Longrightarrow> \n       (ii,i) \\<in> R s \\<Longrightarrow> (ti,t) \\<in> R s \\<Longrightarrow> (ei,e) \\<in> R s \\<Longrightarrow>\n       (ri, ifex_ite_opt i t e) \\<in> R s \\<Longrightarrow> map_invar_impl (m((ii,ti,ei) \\<mapsto> ri)) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>map_invar_impl m s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s; (ri, ifex_ite_opt i t e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> map_invar_impl (m((ii, ti, ei) \\<mapsto> ri)) s", "unfolding map_invar_impl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>ii ti ei ri.\n                m (ii, ti, ei) = Some ri \\<longrightarrow>\n                (\\<exists>i t e.\n                    (ri, ifex_ite_opt i t e) \\<in> R s \\<and>\n                    (ii, i) \\<in> R s \\<and>\n                    (ti, t) \\<in> R s \\<and> (ei, e) \\<in> R s);\n     (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     (ri, ifex_ite_opt i t e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> \\<forall>iia tia eia ria.\n                         (m((ii, ti, ei) \\<mapsto> ri)) (iia, tia, eia) =\n                         Some ria \\<longrightarrow>\n                         (\\<exists>i t e.\n                             (ria, ifex_ite_opt i t e) \\<in> R s \\<and>\n                             (iia, i) \\<in> R s \\<and>\n                             (tia, t) \\<in> R s \\<and> (eia, e) \\<in> R s)", "by auto"], ["", "end"], ["", "locale bdd_impl_cmp = bdd_impl + bdd_impl_cmp_pre +\n  fixes M :: \"'a \\<Rightarrow> ('b \\<times> 'b \\<times> 'b) \\<Rightarrow> 'b option\"\n  fixes U :: \"'a \\<Rightarrow> ('b \\<times> 'b \\<times> 'b) \\<Rightarrow> 'b \\<Rightarrow> 'a\"\n  fixes cmp :: \"'b \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes cmp_rule1: \"I s \\<Longrightarrow> (ni, i) \\<in> R s \\<Longrightarrow> (ni', i) \\<in> R s \\<Longrightarrow> cmp ni ni'\"\n  assumes cmp_rule2: \"I s \\<Longrightarrow> cmp ni ni' \\<Longrightarrow> (ni, i) \\<in> R s \\<Longrightarrow> (ni', i') \\<in> R s \\<Longrightarrow> i = i'\"\n  assumes map_invar_rule1: \"I s \\<Longrightarrow> map_invar_impl (M s) s\"\n  assumes map_invar_rule2: \"I s \\<Longrightarrow> (ii,it) \\<in> R s \\<Longrightarrow> (ti,tt) \\<in> R s \\<Longrightarrow> (ei,et) \\<in> R s \\<Longrightarrow>\n                            (ri, ifex_ite_opt it tt et) \\<in> R s \\<Longrightarrow> U s (ii,ti,ei) ri = s' \\<Longrightarrow>\n                            I s'\"\n  assumes map_invar_rule3: \"I s \\<Longrightarrow> R (U s (ii, ti, ei) ri) = R s\"\nbegin"], ["", "lemma cmp_rule_eq: \"I s \\<Longrightarrow>  (ni, i) \\<in> R s \\<Longrightarrow> (ni', i') \\<in> R s \\<Longrightarrow> cmp ni ni' \\<longleftrightarrow> i = i'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni, i) \\<in> R s; (ni', i') \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> cmp ni ni' = (i = i')", "using cmp_rule1 cmp_rule2"], ["proof (prove)\nusing this:\n  \\<lbrakk>I ?s; (?ni, ?i) \\<in> R ?s; (?ni', ?i) \\<in> R ?s\\<rbrakk>\n  \\<Longrightarrow> cmp ?ni ?ni'\n  \\<lbrakk>I ?s; cmp ?ni ?ni'; (?ni, ?i) \\<in> R ?s;\n   (?ni', ?i') \\<in> R ?s\\<rbrakk>\n  \\<Longrightarrow> ?i = ?i'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni, i) \\<in> R s; (ni', i') \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> cmp ni ni' = (i = i')", "by force"], ["", "lemma DESTRimpl_Some: \"I s \\<Longrightarrow> (ni, i) \\<in> R s \\<Longrightarrow> ospec (DESTRimpl ni s) (\\<lambda>r. True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ni, i) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (DESTRimpl ni s) bf_True", "apply(cases i)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>I s; (ni, i) \\<in> R s; i = Trueif\\<rbrakk>\n    \\<Longrightarrow> ospec (DESTRimpl ni s) bf_True\n 2. \\<lbrakk>I s; (ni, i) \\<in> R s; i = Falseif\\<rbrakk>\n    \\<Longrightarrow> ospec (DESTRimpl ni s) bf_True\n 3. \\<And>x31 x32 x33.\n       \\<lbrakk>I s; (ni, i) \\<in> R s; i = IF x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> ospec (DESTRimpl ni s) bf_True", "apply(auto intro: ospec_cons dest: DESTRimpl_rules)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "fun param_opt_impl where\n  \"param_opt_impl i t e s =  do {\n    ii \\<leftarrow> DESTRimpl i s;\n    ti \\<leftarrow> DESTRimpl t s;\n    ei \\<leftarrow> DESTRimpl e s;\n    (tn,s) \\<leftarrow> Timpl s;\n    (fn,s) \\<leftarrow> Fimpl s;\n    Some ((if ii = TD then Some t else\n    if ii = FD then Some e else\n    if ti = TD \\<and> ei = FD then Some i else\n    if cmp t e then Some t else\n    if ei = TD \\<and> cmp i t then Some tn else\n    if ti = FD \\<and> cmp i e then Some fn else\n    None), s)}\""], ["", "declare param_opt_impl.simps[simp del]"], ["", "lemma param_opt_impl_lesI: \n  assumes \"I s\" \"(ii,i) \\<in> R s\" \"(ti,t) \\<in> R s\" \"(ei,e) \\<in> R s\"\n  shows \"ospec (param_opt_impl ii ti ei s) \n               (\\<lambda>(r,s'). I s' \\<and> les s s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ospec (param_opt_impl ii ti ei s)\n     (\\<lambda>(r, s'). I s' \\<and> les s s')", "using assms"], ["proof (prove)\nusing this:\n  I s\n  (ii, i) \\<in> R s\n  (ti, t) \\<in> R s\n  (ei, e) \\<in> R s\n\ngoal (1 subgoal):\n 1. ospec (param_opt_impl ii ti ei s)\n     (\\<lambda>(r, s'). I s' \\<and> les s s')", "apply(subst param_opt_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (DESTRimpl ii s \\<bind>\n                        (\\<lambda>iia.\n                            DESTRimpl ti s \\<bind>\n                            (\\<lambda>tia.\n                                DESTRimpl ei s \\<bind>\n                                (\\<lambda>eia.\n                                    Timpl s \\<bind>\n                                    (\\<lambda>(tn, s).\n  Fimpl s \\<bind>\n  (\\<lambda>(fn, s).\n      Some\n       (if iia = TD then Some ti\n        else if iia = FD then Some ei\n             else if tia = TD \\<and> eia = FD then Some ii\n                  else if cmp ti ei then Some ti\n                       else if eia = TD \\<and> cmp ii ti then Some tn\n                            else if tia = FD \\<and> cmp ii ei then Some fn\n                                 else None,\n        s)))))))\n                       (\\<lambda>(r, s'). I s' \\<and> les s s')", "by (auto simp add: param_opt_def les_def intro!: obind_rule\n                dest: DESTRimpl_Some Timpl_rule Fimpl_rule)"], ["", "lemma param_opt_impl_R: \n  assumes \"I s\" \"(ii,i) \\<in> R s\" \"(ti,t) \\<in> R s\" \"(ei,e) \\<in> R s\"\n  shows \"ospec (param_opt_impl ii ti ei s)\n               (\\<lambda>(r,s'). case r of None \\<Rightarrow> param_opt i t e = None\n                                 | Some r \\<Rightarrow> (\\<exists>r'. param_opt i t e  = Some r' \\<and> (r, r') \\<in> R s'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ospec (param_opt_impl ii ti ei s)\n     (\\<lambda>(r, s').\n         case r of None \\<Rightarrow> param_opt i t e = None\n         | Some r \\<Rightarrow>\n             \\<exists>r'.\n                param_opt i t e = Some r' \\<and> (r, r') \\<in> R s')", "using assms"], ["proof (prove)\nusing this:\n  I s\n  (ii, i) \\<in> R s\n  (ti, t) \\<in> R s\n  (ei, e) \\<in> R s\n\ngoal (1 subgoal):\n 1. ospec (param_opt_impl ii ti ei s)\n     (\\<lambda>(r, s').\n         case r of None \\<Rightarrow> param_opt i t e = None\n         | Some r \\<Rightarrow>\n             \\<exists>r'.\n                param_opt i t e = Some r' \\<and> (r, r') \\<in> R s')", "apply(subst param_opt_impl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (DESTRimpl ii s \\<bind>\n                        (\\<lambda>iia.\n                            DESTRimpl ti s \\<bind>\n                            (\\<lambda>tia.\n                                DESTRimpl ei s \\<bind>\n                                (\\<lambda>eia.\n                                    Timpl s \\<bind>\n                                    (\\<lambda>(tn, s).\n  Fimpl s \\<bind>\n  (\\<lambda>(fn, s).\n      Some\n       (if iia = TD then Some ti\n        else if iia = FD then Some ei\n             else if tia = TD \\<and> eia = FD then Some ii\n                  else if cmp ti ei then Some ti\n                       else if eia = TD \\<and> cmp ii ti then Some tn\n                            else if tia = FD \\<and> cmp ii ei then Some fn\n                                 else None,\n        s)))))))\n                       (\\<lambda>(r, s').\n                           case r of\n                           None \\<Rightarrow> param_opt i t e = None\n                           | Some r \\<Rightarrow>\n                               \\<exists>r'.\n                                  param_opt i t e = Some r' \\<and>\n                                  (r, r') \\<in> R s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (DESTRimpl ii s) ?Q4\n 2. \\<And>r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; ?Q4 r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (DESTRimpl ti s \\<bind>\n                           (\\<lambda>tia.\n                               DESTRimpl ei s \\<bind>\n                               (\\<lambda>eia.\n                                   Timpl s \\<bind>\n                                   (\\<lambda>(tn, s).\n Fimpl s \\<bind>\n (\\<lambda>(fn, s).\n     Some\n      (if r = TD then Some ti\n       else if r = FD then Some ei\n            else if tia = TD \\<and> eia = FD then Some ii\n                 else if cmp ti ei then Some ti\n                      else if eia = TD \\<and> cmp ii ti then Some tn\n                           else if tia = FD \\<and> cmp ii ei then Some fn\n                                else None,\n       s))))))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule DESTRimpl_rule; assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (DESTRimpl ti s \\<bind>\n                           (\\<lambda>tia.\n                               DESTRimpl ei s \\<bind>\n                               (\\<lambda>eia.\n                                   Timpl s \\<bind>\n                                   (\\<lambda>(tn, s).\n Fimpl s \\<bind>\n (\\<lambda>(fn, s).\n     Some\n      (if r = TD then Some ti\n       else if r = FD then Some ei\n            else if tia = TD \\<and> eia = FD then Some ii\n                 else if cmp ti ei then Some ti\n                      else if eia = TD \\<and> cmp ii ti then Some tn\n                           else if tia = FD \\<and> cmp ii ei then Some fn\n                                else None,\n       s))))))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (DESTRimpl ti s) (?Q16 r)\n 2. \\<And>r ra.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        ?Q16 r ra\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (DESTRimpl ei s \\<bind>\n                           (\\<lambda>eia.\n                               Timpl s \\<bind>\n                               (\\<lambda>(tn, s).\n                                   Fimpl s \\<bind>\n                                   (\\<lambda>(fn, s).\n Some\n  (if r = TD then Some ti\n   else if r = FD then Some ei\n        else if ra = TD \\<and> eia = FD then Some ii\n             else if cmp ti ei then Some ti\n                  else if eia = TD \\<and> cmp ii ti then Some tn\n                       else if ra = FD \\<and> cmp ii ei then Some fn\n                            else None,\n   s)))))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule DESTRimpl_rule; assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (DESTRimpl ei s \\<bind>\n                           (\\<lambda>eia.\n                               Timpl s \\<bind>\n                               (\\<lambda>(tn, s).\n                                   Fimpl s \\<bind>\n                                   (\\<lambda>(fn, s).\n Some\n  (if r = TD then Some ti\n   else if r = FD then Some ei\n        else if ra = TD \\<and> eia = FD then Some ii\n             else if cmp ti ei then Some ti\n                  else if eia = TD \\<and> cmp ii ti then Some tn\n                       else if ra = FD \\<and> cmp ii ei then Some fn\n                            else None,\n   s)))))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (DESTRimpl ei s) (?Q28 r ra)\n 2. \\<And>r ra rb.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        ?Q28 r ra rb\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (Timpl s \\<bind>\n                           (\\<lambda>(tn, s).\n                               Fimpl s \\<bind>\n                               (\\<lambda>(fn, s).\n                                   Some\n                                    (if r = TD then Some ti\n                                     else if r = FD then Some ei\n    else if ra = TD \\<and> rb = FD then Some ii\n         else if cmp ti ei then Some ti\n              else if rb = TD \\<and> cmp ii ti then Some tn\n                   else if ra = FD \\<and> cmp ii ei then Some fn else None,\n                                     s))))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule DESTRimpl_rule; assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra rb.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case e of Trueif \\<Rightarrow> rb = TD\n        | Falseif \\<Rightarrow> rb = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               rb = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (Timpl s \\<bind>\n                           (\\<lambda>(tn, s).\n                               Fimpl s \\<bind>\n                               (\\<lambda>(fn, s).\n                                   Some\n                                    (if r = TD then Some ti\n                                     else if r = FD then Some ei\n    else if ra = TD \\<and> rb = FD then Some ii\n         else if cmp ti ei then Some ti\n              else if rb = TD \\<and> cmp ii ti then Some tn\n                   else if ra = FD \\<and> cmp ii ei then Some fn else None,\n                                     s))))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r ra rb.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case e of Trueif \\<Rightarrow> rb = TD\n        | Falseif \\<Rightarrow> rb = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               rb = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (Timpl s) (?Q40 r ra rb)\n 2. \\<And>r ra rb rc.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case e of Trueif \\<Rightarrow> rb = TD\n        | Falseif \\<Rightarrow> rb = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               rb = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        ?Q40 r ra rb rc\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case rc of\n                           (tn, s) \\<Rightarrow>\n                             Fimpl s \\<bind>\n                             (\\<lambda>(fn, s).\n                                 Some\n                                  (if r = TD then Some ti\n                                   else if r = FD then Some ei\n  else if ra = TD \\<and> rb = FD then Some ii\n       else if cmp ti ei then Some ti\n            else if rb = TD \\<and> cmp ii ti then Some tn\n                 else if ra = FD \\<and> cmp ii ei then Some fn else None,\n                                   s)))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule Timpl_rule; assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra rb rc.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case e of Trueif \\<Rightarrow> rb = TD\n        | Falseif \\<Rightarrow> rb = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               rb = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case rc of\n        (ni, s') \\<Rightarrow>\n          (ni, Trueif) \\<in> R s' \\<and> I s' \\<and> les s s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case rc of\n                           (tn, s) \\<Rightarrow>\n                             Fimpl s \\<bind>\n                             (\\<lambda>(fn, s).\n                                 Some\n                                  (if r = TD then Some ti\n                                   else if r = FD then Some ei\n  else if ra = TD \\<and> rb = FD then Some ii\n       else if cmp ti ei then Some ti\n            else if rb = TD \\<and> cmp ii ti then Some tn\n                 else if ra = FD \\<and> cmp ii ei then Some fn else None,\n                                   s)))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(safe)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra rb a b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case e of Trueif \\<Rightarrow> rb = TD\n        | Falseif \\<Rightarrow> rb = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               rb = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        (a, Trueif) \\<in> R b; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (Fimpl b \\<bind>\n                           (\\<lambda>(fn, s).\n                               Some\n                                (if r = TD then Some ti\n                                 else if r = FD then Some ei\nelse if ra = TD \\<and> rb = FD then Some ii\n     else if cmp ti ei then Some ti\n          else if rb = TD \\<and> cmp ii ti then Some a\n               else if ra = FD \\<and> cmp ii ei then Some fn else None,\n                                 s)))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r ra rb a b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case e of Trueif \\<Rightarrow> rb = TD\n        | Falseif \\<Rightarrow> rb = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               rb = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        (a, Trueif) \\<in> R b; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec (Fimpl b) (?Q51 r ra rb a b)\n 2. \\<And>r ra rb a b rc.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case e of Trueif \\<Rightarrow> rb = TD\n        | Falseif \\<Rightarrow> rb = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               rb = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        (a, Trueif) \\<in> R b; I b; les s b; ?Q51 r ra rb a b rc\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case rc of\n                           (fn, s) \\<Rightarrow>\n                             Some\n                              (if r = TD then Some ti\n                               else if r = FD then Some ei\n                                    else if ra = TD \\<and> rb = FD\n   then Some ii\n   else if cmp ti ei then Some ti\n        else if rb = TD \\<and> cmp ii ti then Some a\n             else if ra = FD \\<and> cmp ii ei then Some fn else None,\n                               s))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "apply(rule Fimpl_rule; assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra rb a b rc.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s;\n        case i of Trueif \\<Rightarrow> r = TD | Falseif \\<Rightarrow> r = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               r = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case t of Trueif \\<Rightarrow> ra = TD\n        | Falseif \\<Rightarrow> ra = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               ra = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        case e of Trueif \\<Rightarrow> rb = TD\n        | Falseif \\<Rightarrow> rb = FD\n        | IF v t e \\<Rightarrow>\n            \\<exists>tn en.\n               rb = IFD v tn en \\<and>\n               (tn, t) \\<in> R s \\<and> (en, e) \\<in> R s;\n        (a, Trueif) \\<in> R b; I b; les s b;\n        case rc of\n        (ni, s') \\<Rightarrow>\n          (ni, Falseif) \\<in> R s' \\<and> I s' \\<and> les b s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case rc of\n                           (fn, s) \\<Rightarrow>\n                             Some\n                              (if r = TD then Some ti\n                               else if r = FD then Some ei\n                                    else if ra = TD \\<and> rb = FD\n   then Some ii\n   else if cmp ti ei then Some ti\n        else if rb = TD \\<and> cmp ii ti then Some a\n             else if ra = FD \\<and> cmp ii ei then Some fn else None,\n                               s))\n                          (\\<lambda>(r, s').\n                              case r of\n                              None \\<Rightarrow> param_opt i t e = None\n                              | Some r \\<Rightarrow>\n                                  \\<exists>r'.\n                                     param_opt i t e = Some r' \\<and>\n                                     (r, r') \\<in> R s')", "by (auto simp add: param_opt_def les_def cmp_rule_eq split: ifex.splits)"], ["", "partial_function(option) ite_impl_opt where\n\"ite_impl_opt i t e s = do {\n  (ld, s) \\<leftarrow>  param_opt_impl i t e s;\n  (case ld of Some b \\<Rightarrow> Some (b, s) |\n  None \\<Rightarrow>\n  do {\n  (lt,_) \\<leftarrow> lowest_tops_impl [i, t, e] s;\n  (case lt of\n    Some a \\<Rightarrow> do {\n      (ti,_) \\<leftarrow> restrict_top_impl i a True s;\n      (tt,_) \\<leftarrow> restrict_top_impl t a True s;\n      (te,_) \\<leftarrow> restrict_top_impl e a True s;\n      (fi,_) \\<leftarrow> restrict_top_impl i a False s;\n      (ft,_) \\<leftarrow> restrict_top_impl t a False s;\n      (fe,_) \\<leftarrow> restrict_top_impl e a False s;\n      (tb,s) \\<leftarrow> ite_impl_opt ti tt te s;\n      (fb,s) \\<leftarrow> ite_impl_opt fi ft fe s;\n      IFimpl a tb fb s}\n  | None \\<Rightarrow> case_ifexi (\\<lambda>_.(Some (t,s))) (\\<lambda>_.(Some (e,s))) (\\<lambda>_ _ _ _. None) i s \n)})}\""], ["", "lemma ospec_and: \"ospec f P \\<Longrightarrow> ospec f Q \\<Longrightarrow> ospec f (\\<lambda>x. P x \\<and> Q x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ospec f P; ospec f Q\\<rbrakk>\n    \\<Longrightarrow> ospec f (\\<lambda>x. P x \\<and> Q x)", "using ospecD2"], ["proof (prove)\nusing this:\n  ospec ?x ?P \\<Longrightarrow> \\<exists>y. ?x = Some y \\<and> ?P y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ospec f P; ospec f Q\\<rbrakk>\n    \\<Longrightarrow> ospec f (\\<lambda>x. P x \\<and> Q x)", "by force"], ["", "lemma ite_impl_opt_R: \"\n  I s\n  \\<Longrightarrow> in_rel (R s) ii i \\<Longrightarrow> in_rel (R s) ti t \\<Longrightarrow> in_rel (R s) ei e\n  \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s) (\\<lambda>(r, s'). (r, ifex_ite_opt i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n     in_rel (R s) ei e\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "proof(induction i t e arbitrary: s ii ti ei rule: ifex_ite_opt.induct, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "note ifex_ite_opt.simps[simp del] restrict_top.simps[simp del]"], ["proof (state)\nthis:\n  ifex_ite_opt ?i ?t ?e =\n  (case param_opt ?i ?t ?e of\n   None \\<Rightarrow>\n     case lowest_tops [?i, ?t, ?e] of\n     None \\<Rightarrow>\n       case ?i of Trueif \\<Rightarrow> ?t | Falseif \\<Rightarrow> ?e\n     | Some x \\<Rightarrow>\n         IFC x\n          (ifex_ite_opt (restrict_top ?i x True) (restrict_top ?t x True)\n            (restrict_top ?e x True))\n          (ifex_ite_opt (restrict_top ?i x False) (restrict_top ?t x False)\n            (restrict_top ?e x False))\n   | Some b \\<Rightarrow> b)\n  restrict_top (IF ?v ?t ?e) ?var ?val =\n  (if ?v = ?var then if ?val then ?t else ?e else IF ?v ?t ?e)\n  restrict_top Trueif ?uu ?uv = Trueif\n  restrict_top Falseif ?uu ?uv = Falseif\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "case (1 i t e s ii ti ei)"], ["proof (state)\nthis:\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 True);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 True);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 True)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_opt ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 True)\n                              (restrict_top t ?x2.1 True)\n                              (restrict_top e ?x2.1 True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 False);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 False);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 False)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_opt ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 False)\n                              (restrict_top t ?x2.1 False)\n                              (restrict_top e ?x2.1 False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "note goal1 = 1"], ["proof (state)\nthis:\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 True);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 True);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 True)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_opt ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 True)\n                              (restrict_top t ?x2.1 True)\n                              (restrict_top e ?x2.1 True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 False);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 False);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 False)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_opt ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 False)\n                              (restrict_top t ?x2.1 False)\n                              (restrict_top e ?x2.1 False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "have la2: \"list_all2 (in_rel (R s)) [ii,ti,ei] [i,t,e]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]", "using goal1(4-6)"], ["proof (prove)\nusing this:\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]", "by simp"], ["proof (state)\nthis:\n  list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "note mIH = goal1(1,2)"], ["proof (state)\nthis:\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 True);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 True);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 True)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_opt ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 True)\n                              (restrict_top t ?x2.1 True)\n                              (restrict_top e ?x2.1 True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; in_rel (R ?s1) ?ii1 (restrict_top i ?x2.1 False);\n   in_rel (R ?s1) ?ti1 (restrict_top t ?x2.1 False);\n   in_rel (R ?s1) ?ei1 (restrict_top e ?x2.1 False)\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_opt ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 False)\n                              (restrict_top t ?x2.1 False)\n                              (restrict_top e ?x2.1 False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    in_rel (R s) ii (restrict_top i x2 True);\n                    in_rel (R s) ti (restrict_top t x2 True);\n                    in_rel (R s) ei (restrict_top e x2 True)\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; in_rel (R s) ii (restrict_top i x2 False);\n            in_rel (R s) ti (restrict_top t x2 False);\n            in_rel (R s) ei (restrict_top e x2 False)\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "from goal1(3-6)"], ["proof (chain)\npicking this:\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e", "show ?case"], ["proof (prove)\nusing this:\n  I s\n  in_rel (R s) ii i\n  in_rel (R s) ti t\n  in_rel (R s) ei e\n\ngoal (1 subgoal):\n 1. ospec (ite_impl_opt ii ti ei s)\n     (\\<lambda>(r, s').\n         (r, ifex_ite_opt i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "apply(cases \"param_opt i t e\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t; in_rel (R s) ei e;\n     param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')\n 2. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 2. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t; in_rel (R s) ei e;\n     param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(subst ite_impl_opt.simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (param_opt_impl ii ti ei s \\<bind>\n                           (\\<lambda>(ld, s).\n                               case ld of\n                               None \\<Rightarrow>\n                                 lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                 (\\<lambda>(lt, uu_).\n                                     case lt of\n                                     None \\<Rightarrow>\n case_ifexi (\\<lambda>_. Some (ti, s)) (\\<lambda>_. Some (ei, s))\n  (\\<lambda>_ _ _. Map.empty) ii s\n                                     | Some a \\<Rightarrow>\n   restrict_top_impl ii a True s \\<bind>\n   (\\<lambda>(ti, uu_).\n       restrict_top_impl ti a True s \\<bind>\n       (\\<lambda>(tt, uu_).\n           restrict_top_impl ei a True s \\<bind>\n           (\\<lambda>(te, uu_).\n               restrict_top_impl ii a False s \\<bind>\n               (\\<lambda>(fi, uu_).\n                   restrict_top_impl ti a False s \\<bind>\n                   (\\<lambda>(ft, uu_).\n                       restrict_top_impl ei a False s \\<bind>\n                       (\\<lambda>(fe, uu_).\n                           ite_impl_opt ti tt te s \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl_opt fi ft fe s \\<bind>\n                               (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                               | Some b \\<Rightarrow> Some (b, s)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 2. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t; in_rel (R s) ei e;\n     param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec (param_opt_impl ii ti ei s) (?Q8 a)\n 2. \\<And>a r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a; ?Q8 a r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of\n                                 None \\<Rightarrow>\n                                   case_ifexi (\\<lambda>_. Some (ti, s))\n                                    (\\<lambda>_. Some (ei, s))\n                                    (\\<lambda>_ _ _. Map.empty) ii s\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_opt ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_opt fi ft fe s \\<bind>\n                           (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 3. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t; in_rel (R s) ei e;\n     param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rule ospec_and[OF param_opt_impl_R param_opt_impl_lesI])"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> I s\n 2. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ii, ?i13 a) \\<in> R s\n 3. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ti, ?t13 a) \\<in> R s\n 4. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ei, ?e13 a) \\<in> R s\n 5. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> I s\n 6. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ii, ?i12 a) \\<in> R s\n 7. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ti, ?t12 a) \\<in> R s\n 8. \\<And>a.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ei, ?e12 a) \\<in> R s\n 9. \\<And>a r.\n       \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t;\n        in_rel (R s) ei e; param_opt i t e = Some a;\n        (case r of\n         (None, s') \\<Rightarrow>\n           param_opt (?i13 a) (?t13 a) (?e13 a) = None\n         | (Some ra, s') \\<Rightarrow>\n             \\<exists>r'.\n                param_opt (?i13 a) (?t13 a) (?e13 a) = Some r' \\<and>\n                (ra, r') \\<in> R s') \\<and>\n        (case r of (r, s') \\<Rightarrow> I s' \\<and> les s s')\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of\n                                 None \\<Rightarrow>\n                                   case_ifexi (\\<lambda>_. Some (ti, s))\n                                    (\\<lambda>_. Some (ei, s))\n                                    (\\<lambda>_ _ _. Map.empty) ii s\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_opt ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_opt fi ft fe s \\<bind>\n                           (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 10. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t; in_rel (R s) ei e;\n      param_opt i t e = None\\<rbrakk>\n     \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                        (\\<lambda>(r, s').\n                            (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                            I s' \\<and> les s s')", "apply(auto simp add: les_def ifex_ite_opt.simps split: option.splits)[9]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t; in_rel (R s) ei e;\n     param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "(* param_opt i t e = None *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t; in_rel (R s) ei e;\n     param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(frule param_opt_lowest_tops_lem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; in_rel (R s) ii i; in_rel (R s) ti t; in_rel (R s) ei e;\n     param_opt i t e = None;\n     \\<exists>y. lowest_tops [i, t, e] = Some y\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(subst ite_impl_opt.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (param_opt_impl ii ti ei s \\<bind>\n                           (\\<lambda>(ld, s).\n                               case ld of\n                               None \\<Rightarrow>\n                                 lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                 (\\<lambda>(lt, uu_).\n                                     case lt of\n                                     None \\<Rightarrow>\n case_ifexi (\\<lambda>_. Some (ti, s)) (\\<lambda>_. Some (ei, s))\n  (\\<lambda>_ _ _. Map.empty) ii s\n                                     | Some a \\<Rightarrow>\n   restrict_top_impl ii a True s \\<bind>\n   (\\<lambda>(ti, uu_).\n       restrict_top_impl ti a True s \\<bind>\n       (\\<lambda>(tt, uu_).\n           restrict_top_impl ei a True s \\<bind>\n           (\\<lambda>(te, uu_).\n               restrict_top_impl ii a False s \\<bind>\n               (\\<lambda>(fi, uu_).\n                   restrict_top_impl ti a False s \\<bind>\n                   (\\<lambda>(ft, uu_).\n                       restrict_top_impl ei a False s \\<bind>\n                       (\\<lambda>(fe, uu_).\n                           ite_impl_opt ti tt te s \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl_opt fi ft fe s \\<bind>\n                               (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                               | Some b \\<Rightarrow> Some (b, s)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> ospec (param_opt_impl ii ti ei s) (?Q48 y)\n 2. \\<And>y r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; ?Q48 y r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of\n                                 None \\<Rightarrow>\n                                   case_ifexi (\\<lambda>_. Some (ti, s))\n                                    (\\<lambda>_. Some (ei, s))\n                                    (\\<lambda>_ _ _. Map.empty) ii s\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_opt ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_opt fi ft fe s \\<bind>\n                           (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule ospec_and[OF param_opt_impl_R param_opt_impl_lesI])"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> I s\n 2. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ii, ?i53 y) \\<in> R s\n 3. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ti, ?t53 y) \\<in> R s\n 4. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ei, ?e53 y) \\<in> R s\n 5. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> I s\n 6. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ii, ?i52 y) \\<in> R s\n 7. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ti, ?t52 y) \\<in> R s\n 8. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ei, ?e52 y) \\<in> R s\n 9. \\<And>y r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y;\n        (case r of\n         (None, s') \\<Rightarrow>\n           param_opt (?i53 y) (?t53 y) (?e53 y) = None\n         | (Some ra, s') \\<Rightarrow>\n             \\<exists>r'.\n                param_opt (?i53 y) (?t53 y) (?e53 y) = Some r' \\<and>\n                (ra, r') \\<in> R s') \\<and>\n        (case r of (r, s') \\<Rightarrow> I s' \\<and> les s s')\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of\n                                 None \\<Rightarrow>\n                                   case_ifexi (\\<lambda>_. Some (ti, s))\n                                    (\\<lambda>_. Some (ei, s))\n                                    (\\<lambda>_ _ _. Map.empty) ii s\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_opt ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_opt fi ft fe s \\<bind>\n                           (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(auto split: option.splits)[8]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y;\n        (case r of (None, s') \\<Rightarrow> param_opt i t e = None\n         | (Some ra, s') \\<Rightarrow>\n             \\<exists>r'.\n                param_opt i t e = Some r' \\<and> (ra, r') \\<in> R s') \\<and>\n        (case r of (r, s') \\<Rightarrow> I s' \\<and> les s s')\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of\n                                 None \\<Rightarrow>\n                                   case_ifexi (\\<lambda>_. Some (ti, s))\n                                    (\\<lambda>_. Some (ei, s))\n                                    (\\<lambda>_ _ _. Map.empty) ii s\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_opt ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_opt fi ft fe s \\<bind>\n                           (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp split: option.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (lowest_tops_impl [ii, ti, ei] b \\<bind>\n                           (\\<lambda>(lt, uu_).\n                               case lt of\n                               None \\<Rightarrow>\n                                 case_ifexi (\\<lambda>_. Some (ti, b))\n                                  (\\<lambda>_. Some (ei, b))\n                                  (\\<lambda>_ _ _. Map.empty) ii b\n                               | Some a \\<Rightarrow>\n                                   restrict_top_impl ii a True b \\<bind>\n                                   (\\<lambda>(ti, uu_).\n restrict_top_impl ti a True b \\<bind>\n (\\<lambda>(tt, uu_).\n     restrict_top_impl ei a True b \\<bind>\n     (\\<lambda>(te, uu_).\n         restrict_top_impl ii a False b \\<bind>\n         (\\<lambda>(fi, uu_).\n             restrict_top_impl ti a False b \\<bind>\n             (\\<lambda>(ft, uu_).\n                 restrict_top_impl ei a False b \\<bind>\n                 (\\<lambda>(fe, uu_).\n                     ite_impl_opt ti tt te b \\<bind>\n                     (\\<lambda>(tb, s).\n                         ite_impl_opt fi ft fe s \\<bind>\n                         (\\<lambda>(x, y). IFimpl a tb x y))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule obind_rule[where Q=\"\\<lambda>(r, s'). r = lowest_tops [i,t,e]\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec (lowest_tops_impl [ii, ti, ei] b)\n                          (\\<lambda>(r, s'). r = lowest_tops [i, t, e])\n 2. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, b))\n                              (\\<lambda>_. Some (ei, b))\n                              (\\<lambda>_ _ _. Map.empty) ii b\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_opt ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_opt fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule ospec_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec (lowest_tops_impl [ii, ti, ei] b) (?Q83 y b)\n 2. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b; ?Q83 y b r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 3. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, b))\n                              (\\<lambda>_. Some (ei, b))\n                              (\\<lambda>_ _ _. Map.empty) ii b\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_opt ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_opt fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule lowest_tops_impl_R)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> list_all2 (in_rel (R b)) [ii, ti, ei] (?l86 y b)\n 2. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> I b\n 3. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops (?l86 y b) \\<and> s' = b\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 4. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, b))\n                              (\\<lambda>_. Some (ei, b))\n                              (\\<lambda>_ _ _. Map.empty) ii b\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_opt ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_opt fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "using les_def"], ["proof (prove)\nusing this:\n  les ?s ?s' \\<equiv>\n  \\<forall>ni n. (ni, n) \\<in> R ?s \\<longrightarrow> (ni, n) \\<in> R ?s'\n\ngoal (4 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> list_all2 (in_rel (R b)) [ii, ti, ei] (?l86 y b)\n 2. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> I b\n 3. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops (?l86 y b) \\<and> s' = b\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 4. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, b))\n                              (\\<lambda>_. Some (ei, b))\n                              (\\<lambda>_ _ _. Map.empty) ii b\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_opt ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_opt fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(fastforce)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> I b\n 2. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = b\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 3. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, b))\n                              (\\<lambda>_. Some (ei, b))\n                              (\\<lambda>_ _ _. Map.empty) ii b\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_opt ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_opt fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = b\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 2. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, b))\n                              (\\<lambda>_. Some (ei, b))\n                              (\\<lambda>_ _ _. Map.empty) ii b\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_opt ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_opt fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(fastforce)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, b))\n                              (\\<lambda>_. Some (ei, b))\n                              (\\<lambda>_ _ _. Map.empty) ii b\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_opt ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_opt fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "using BDT.param_opt_lowest_tops_lem"], ["proof (prove)\nusing this:\n  param_opt ?i ?t ?e = None \\<Longrightarrow>\n  \\<exists>y. lowest_tops [?i, ?t, ?e] = Some y\n\ngoal (1 subgoal):\n 1. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, uu_) \\<Rightarrow>\n                             case_ifexi (\\<lambda>_. Some (ti, b))\n                              (\\<lambda>_. Some (ei, b))\n                              (\\<lambda>_ _ _. Map.empty) ii b\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_opt ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_opt fi ft fe s \\<bind>\n                     (\\<lambda>(x, y). IFimpl a tb x y)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        les s b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (restrict_top_impl ii y True b \\<bind>\n                           (\\<lambda>(ti, uu_).\n                               restrict_top_impl ti y True b \\<bind>\n                               (\\<lambda>(tt, uu_).\n                                   restrict_top_impl ei y True b \\<bind>\n                                   (\\<lambda>(te, uu_).\n restrict_top_impl ii y False b \\<bind>\n (\\<lambda>(fi, uu_).\n     restrict_top_impl ti y False b \\<bind>\n     (\\<lambda>(ft, uu_).\n         restrict_top_impl ei y False b \\<bind>\n         (\\<lambda>(fe, uu_).\n             ite_impl_opt ti tt te b \\<bind>\n             (\\<lambda>(tb, s).\n                 ite_impl_opt fi ft fe s \\<bind>\n                 (\\<lambda>(x, ya). IFimpl y tb x ya)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "(* take care of all those restrict_tops *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        les s b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (restrict_top_impl ii y True b \\<bind>\n                           (\\<lambda>(ti, uu_).\n                               restrict_top_impl ti y True b \\<bind>\n                               (\\<lambda>(tt, uu_).\n                                   restrict_top_impl ei y True b \\<bind>\n                                   (\\<lambda>(te, uu_).\n restrict_top_impl ii y False b \\<bind>\n (\\<lambda>(fi, uu_).\n     restrict_top_impl ti y False b \\<bind>\n     (\\<lambda>(ft, uu_).\n         restrict_top_impl ei y False b \\<bind>\n         (\\<lambda>(fe, uu_).\n             ite_impl_opt ti tt te b \\<bind>\n             (\\<lambda>(tb, s).\n                 ite_impl_opt fi ft fe s \\<bind>\n                 (\\<lambda>(x, ya). IFimpl y tb x ya)))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule obind_rule, rule restrict_top_impl_spec, assumption, auto simp add: les_def split: prod.splits)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (ite_impl_opt x1 x1a x1b b \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl_opt x1c x1d x1e s \\<bind>\n                               (\\<lambda>(x, ya). IFimpl y tb x ya)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt x1 x1a x1b b)\n                          (?Q332 y b x1 x1a x1b x1c x1d x1e)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        ?Q332 y b x1 x1a x1b x1c x1d x1e r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl_opt x1c x1d x1e s \\<bind>\n                             (\\<lambda>(x, ya). IFimpl y tb x ya))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule mIH(1))"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> param_opt i t e = None\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> lowest_tops [i, t, e] =\n                         Some (?x2.336 y b x1 x1a x1b x1c x1d x1e)\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> I b\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> in_rel (R b) x1\n                          (restrict_top i\n                            (?x2.336 y b x1 x1a x1b x1c x1d x1e) True)\n 5. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> in_rel (R b) x1a\n                          (restrict_top t\n                            (?x2.336 y b x1 x1a x1b x1c x1d x1e) True)\n 6. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> in_rel (R b) x1b\n                          (restrict_top e\n                            (?x2.336 y b x1 x1a x1b x1c x1d x1e) True)\n 7. \\<And>y b x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite_opt\n               (restrict_top i (?x2.336 y b x1 x1a x1b x1c x1d x1e) True)\n               (restrict_top t (?x2.336 y b x1 x1a x1b x1c x1d x1e) True)\n               (restrict_top e (?x2.336 y b x1 x1a x1b x1c x1d x1e) True))\n          \\<in> R s' \\<and>\n          I s' \\<and> les b s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl_opt x1c x1d x1e s \\<bind>\n                             (\\<lambda>(x, ya). IFimpl y tb x ya))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(simp add: les_def;fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n               (restrict_top e y True))\n          \\<in> R s' \\<and>\n          I s' \\<and> les b s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl_opt x1c x1d x1e s \\<bind>\n                             (\\<lambda>(x, ya). IFimpl y tb x ya))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (ite_impl_opt x1c x1d x1e ba \\<bind>\n                           (\\<lambda>(x, ya). IFimpl y a x ya))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_opt x1c x1d x1e ba)\n                          (?Q358 y b x1 x1a x1b x1c x1d x1e a ba)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba; ?Q358 y b x1 x1a x1b x1c x1d x1e a ba r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (x, xa) \\<Rightarrow> IFimpl y a x xa)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule mIH(2))"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> param_opt i t e = None\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> lowest_tops [i, t, e] =\n                         Some (?x2.362 y b x1 x1a x1b x1c x1d x1e a ba)\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> I ba\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> in_rel (R ba) x1c\n                          (restrict_top i\n                            (?x2.362 y b x1 x1a x1b x1c x1d x1e a ba) False)\n 5. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> in_rel (R ba) x1d\n                          (restrict_top t\n                            (?x2.362 y b x1 x1a x1b x1c x1d x1e a ba) False)\n 6. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> in_rel (R ba) x1e\n                          (restrict_top e\n                            (?x2.362 y b x1 x1a x1b x1c x1d x1e a ba) False)\n 7. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite_opt\n               (restrict_top i (?x2.362 y b x1 x1a x1b x1c x1d x1e a ba)\n                 False)\n               (restrict_top t (?x2.362 y b x1 x1a x1b x1c x1d x1e a ba)\n                 False)\n               (restrict_top e (?x2.362 y b x1 x1a x1b x1c x1d x1e a ba)\n                 False))\n          \\<in> R s' \\<and>\n          I s' \\<and> les ba s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (x, xa) \\<Rightarrow> IFimpl y a x xa)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(simp add: les_def;fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False))\n          \\<in> R s' \\<and>\n          I s' \\<and> les ba s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (x, xa) \\<Rightarrow> IFimpl y a x xa)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(simp add: ifex_ite_opt.simps split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> ospec (IFimpl y a x1f x2)\n                          (\\<lambda>(r, s').\n                              (r, IFC y\n                                   (case param_opt (restrict_top i y True)\n    (restrict_top t y True) (restrict_top e y True) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y True, restrict_top t y True,\n       restrict_top e y True] of\nNone \\<Rightarrow>\n  case restrict_top i y True of Trueif \\<Rightarrow> restrict_top t y True\n  | Falseif \\<Rightarrow> restrict_top e y True\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x True)\n       (restrict_top (restrict_top t y True) x True)\n       (restrict_top (restrict_top e y True) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x False)\n       (restrict_top (restrict_top t y True) x False)\n       (restrict_top (restrict_top e y True) x False))\n                                    | Some b \\<Rightarrow> b)\n                                   (case param_opt (restrict_top i y False)\n    (restrict_top t y False) (restrict_top e y False) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y False, restrict_top t y False,\n       restrict_top e y False] of\nNone \\<Rightarrow>\n  case restrict_top i y False of Trueif \\<Rightarrow> restrict_top t y False\n  | Falseif \\<Rightarrow> restrict_top e y False\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n       (restrict_top (restrict_top t y False) x True)\n       (restrict_top (restrict_top e y False) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x False)\n       (restrict_top (restrict_top t y False) x False)\n       (restrict_top (restrict_top e y False) x False))\n                                    | Some b \\<Rightarrow> b))\n                              \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule ospec_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> ospec (IFimpl y a x1f x2)\n                          (?Q396 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2 ra.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2;\n        ?Q396 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2 ra\\<rbrakk>\n       \\<Longrightarrow> case ra of\n                         (r, s') \\<Rightarrow>\n                           (r, IFC y\n                                (case param_opt (restrict_top i y True)\n (restrict_top t y True) (restrict_top e y True) of\n                                 None \\<Rightarrow>\n                                   case lowest_tops\n   [restrict_top i y True, restrict_top t y True, restrict_top e y True] of\n                                   None \\<Rightarrow>\n                                     case restrict_top i y True of\n                                     Trueif \\<Rightarrow>\n restrict_top t y True\n                                     | Falseif \\<Rightarrow>\n   restrict_top e y True\n                                   | Some x \\<Rightarrow>\n IFC x\n  (ifex_ite_opt (restrict_top (restrict_top i y True) x True)\n    (restrict_top (restrict_top t y True) x True)\n    (restrict_top (restrict_top e y True) x True))\n  (ifex_ite_opt (restrict_top (restrict_top i y True) x False)\n    (restrict_top (restrict_top t y True) x False)\n    (restrict_top (restrict_top e y True) x False))\n                                 | Some b \\<Rightarrow> b)\n                                (case param_opt (restrict_top i y False)\n (restrict_top t y False) (restrict_top e y False) of\n                                 None \\<Rightarrow>\n                                   case lowest_tops\n   [restrict_top i y False, restrict_top t y False,\n    restrict_top e y False] of\n                                   None \\<Rightarrow>\n                                     case restrict_top i y False of\n                                     Trueif \\<Rightarrow>\n restrict_top t y False\n                                     | Falseif \\<Rightarrow>\n   restrict_top e y False\n                                   | Some x \\<Rightarrow>\n IFC x\n  (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n    (restrict_top (restrict_top t y False) x True)\n    (restrict_top (restrict_top e y False) x True))\n  (ifex_ite_opt (restrict_top (restrict_top i y False) x False)\n    (restrict_top (restrict_top t y False) x False)\n    (restrict_top (restrict_top e y False) x False))\n                                 | Some b \\<Rightarrow> b))\n                           \\<in> R s' \\<and>\n                           I s' \\<and>\n                           (\\<forall>ni n.\n                               (ni, n) \\<in> R s \\<longrightarrow>\n                               (ni, n) \\<in> R s')", "apply(rule IFimpl_rule)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> I x2\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> (a, ?n1.399 y b x1 x1a x1b x1c x1d x1e a ba r x1f\n                              x2)\n                         \\<in> R x2\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> (x1f,\n                          ?n2.399 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2)\n                         \\<in> R x2\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2 ra.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        param_opt i t e = None; lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2;\n        case ra of\n        (ni, s') \\<Rightarrow>\n          (ni,\n           IFC y (?n1.399 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2)\n            (?n2.399 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2))\n          \\<in> R s' \\<and>\n          I s' \\<and> les x2 s'\\<rbrakk>\n       \\<Longrightarrow> case ra of\n                         (r, s') \\<Rightarrow>\n                           (r, IFC y\n                                (case param_opt (restrict_top i y True)\n (restrict_top t y True) (restrict_top e y True) of\n                                 None \\<Rightarrow>\n                                   case lowest_tops\n   [restrict_top i y True, restrict_top t y True, restrict_top e y True] of\n                                   None \\<Rightarrow>\n                                     case restrict_top i y True of\n                                     Trueif \\<Rightarrow>\n restrict_top t y True\n                                     | Falseif \\<Rightarrow>\n   restrict_top e y True\n                                   | Some x \\<Rightarrow>\n IFC x\n  (ifex_ite_opt (restrict_top (restrict_top i y True) x True)\n    (restrict_top (restrict_top t y True) x True)\n    (restrict_top (restrict_top e y True) x True))\n  (ifex_ite_opt (restrict_top (restrict_top i y True) x False)\n    (restrict_top (restrict_top t y True) x False)\n    (restrict_top (restrict_top e y True) x False))\n                                 | Some b \\<Rightarrow> b)\n                                (case param_opt (restrict_top i y False)\n (restrict_top t y False) (restrict_top e y False) of\n                                 None \\<Rightarrow>\n                                   case lowest_tops\n   [restrict_top i y False, restrict_top t y False,\n    restrict_top e y False] of\n                                   None \\<Rightarrow>\n                                     case restrict_top i y False of\n                                     Trueif \\<Rightarrow>\n restrict_top t y False\n                                     | Falseif \\<Rightarrow>\n   restrict_top e y False\n                                   | Some x \\<Rightarrow>\n IFC x\n  (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n    (restrict_top (restrict_top t y False) x True)\n    (restrict_top (restrict_top e y False) x True))\n  (ifex_ite_opt (restrict_top (restrict_top i y False) x False)\n    (restrict_top (restrict_top t y False) x False)\n    (restrict_top (restrict_top e y False) x False))\n                                 | Some b \\<Rightarrow> b))\n                           \\<in> R s' \\<and>\n                           I s' \\<and>\n                           (\\<forall>ni n.\n                               (ni, n) \\<in> R s \\<longrightarrow>\n                               (ni, n) \\<in> R s')", "apply(auto simp add: les_def;fail)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ospec (ite_impl_opt ii ti ei s)\n   (\\<lambda>(r, s').\n       (r, ifex_ite_opt i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\n\ngoal:\nNo subgoals!", "qed"], ["", "partial_function(option) ite_impl_lu where\n\"ite_impl_lu i t e s = do {\n  (case M s (i,t,e) of Some b \\<Rightarrow> Some (b,s) | None \\<Rightarrow> do {\n  (ld, s) \\<leftarrow>  param_opt_impl i t e s;\n  (case ld of Some b \\<Rightarrow> Some (b, s) |\n  None \\<Rightarrow>\n  do {\n  (lt,_) \\<leftarrow> lowest_tops_impl [i, t, e] s;\n  (case lt of\n    Some a \\<Rightarrow> do {\n      (ti,_) \\<leftarrow> restrict_top_impl i a True s;\n      (tt,_) \\<leftarrow> restrict_top_impl t a True s;\n      (te,_) \\<leftarrow> restrict_top_impl e a True s;\n      (fi,_) \\<leftarrow> restrict_top_impl i a False s;\n      (ft,_) \\<leftarrow> restrict_top_impl t a False s;\n      (fe,_) \\<leftarrow> restrict_top_impl e a False s;\n      (tb,s) \\<leftarrow> ite_impl_lu ti tt te s;\n      (fb,s) \\<leftarrow> ite_impl_lu fi ft fe s;\n      (r,s) \\<leftarrow> IFimpl a tb fb s;\n      let s = U s (i,t,e) r;\n      Some (r,s)\n      } |\n    None \\<Rightarrow> None\n)})})}\""], ["", "declare ifex_ite_opt.simps[simp del]"], ["", "lemma ite_impl_lu_R: \"I s\n       \\<Longrightarrow> (ii,i) \\<in> R s \\<Longrightarrow> (ti,t) \\<in> R s \\<Longrightarrow> (ei,e) \\<in> R s\n       \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s) \n                 (\\<lambda>(r, s'). (r, ifex_ite_opt i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "proof(induction i t e arbitrary: s ii ti ei rule: ifex_ite_opt.induct, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    (ii, restrict_top i x2 True) \\<in> R s;\n                    (ti, restrict_top t x2 True) \\<in> R s;\n                    (ei, restrict_top e x2 True) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; (ii, restrict_top i x2 False) \\<in> R s;\n            (ti, restrict_top t x2 False) \\<in> R s;\n            (ei, restrict_top e x2 False) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "note restrict_top.simps[simp del]"], ["proof (state)\nthis:\n  restrict_top (IF ?v ?t ?e) ?var ?val =\n  (if ?v = ?var then if ?val then ?t else ?e else IF ?v ?t ?e)\n  restrict_top Trueif ?uu ?uv = Trueif\n  restrict_top Falseif ?uu ?uv = Falseif\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    (ii, restrict_top i x2 True) \\<in> R s;\n                    (ti, restrict_top t x2 True) \\<in> R s;\n                    (ei, restrict_top e x2 True) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; (ii, restrict_top i x2 False) \\<in> R s;\n            (ti, restrict_top t x2 False) \\<in> R s;\n            (ei, restrict_top e x2 False) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "case (1 i t e s ii ti ei)"], ["proof (state)\nthis:\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; (?ii1, restrict_top i ?x2.1 True) \\<in> R ?s1;\n   (?ti1, restrict_top t ?x2.1 True) \\<in> R ?s1;\n   (?ei1, restrict_top e ?x2.1 True) \\<in> R ?s1\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_lu ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 True)\n                              (restrict_top t ?x2.1 True)\n                              (restrict_top e ?x2.1 True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; (?ii1, restrict_top i ?x2.1 False) \\<in> R ?s1;\n   (?ti1, restrict_top t ?x2.1 False) \\<in> R ?s1;\n   (?ei1, restrict_top e ?x2.1 False) \\<in> R ?s1\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_lu ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 False)\n                              (restrict_top t ?x2.1 False)\n                              (restrict_top e ?x2.1 False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  I s\n  (ii, i) \\<in> R s\n  (ti, t) \\<in> R s\n  (ei, e) \\<in> R s\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    (ii, restrict_top i x2 True) \\<in> R s;\n                    (ti, restrict_top t x2 True) \\<in> R s;\n                    (ei, restrict_top e x2 True) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; (ii, restrict_top i x2 False) \\<in> R s;\n            (ti, restrict_top t x2 False) \\<in> R s;\n            (ei, restrict_top e x2 False) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "note goal1 = 1"], ["proof (state)\nthis:\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; (?ii1, restrict_top i ?x2.1 True) \\<in> R ?s1;\n   (?ti1, restrict_top t ?x2.1 True) \\<in> R ?s1;\n   (?ei1, restrict_top e ?x2.1 True) \\<in> R ?s1\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_lu ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 True)\n                              (restrict_top t ?x2.1 True)\n                              (restrict_top e ?x2.1 True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; (?ii1, restrict_top i ?x2.1 False) \\<in> R ?s1;\n   (?ti1, restrict_top t ?x2.1 False) \\<in> R ?s1;\n   (?ei1, restrict_top e ?x2.1 False) \\<in> R ?s1\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_lu ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 False)\n                              (restrict_top t ?x2.1 False)\n                              (restrict_top e ?x2.1 False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  I s\n  (ii, i) \\<in> R s\n  (ti, t) \\<in> R s\n  (ei, e) \\<in> R s\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    (ii, restrict_top i x2 True) \\<in> R s;\n                    (ti, restrict_top t x2 True) \\<in> R s;\n                    (ei, restrict_top e x2 True) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; (ii, restrict_top i x2 False) \\<in> R s;\n            (ti, restrict_top t x2 False) \\<in> R s;\n            (ei, restrict_top e x2 False) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "have la2: \"list_all2 (in_rel (R s)) [ii,ti,ei] [i,t,e]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]", "using goal1(4-6)"], ["proof (prove)\nusing this:\n  (ii, i) \\<in> R s\n  (ti, t) \\<in> R s\n  (ei, e) \\<in> R s\n\ngoal (1 subgoal):\n 1. list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]", "by simp"], ["proof (state)\nthis:\n  list_all2 (in_rel (R s)) [ii, ti, ei] [i, t, e]\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    (ii, restrict_top i x2 True) \\<in> R s;\n                    (ti, restrict_top t x2 True) \\<in> R s;\n                    (ei, restrict_top e x2 True) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; (ii, restrict_top i x2 False) \\<in> R s;\n            (ti, restrict_top t x2 False) \\<in> R s;\n            (ei, restrict_top e x2 False) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "note mIH = goal1(1,2)"], ["proof (state)\nthis:\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; (?ii1, restrict_top i ?x2.1 True) \\<in> R ?s1;\n   (?ti1, restrict_top t ?x2.1 True) \\<in> R ?s1;\n   (?ei1, restrict_top e ?x2.1 True) \\<in> R ?s1\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_lu ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 True)\n                              (restrict_top t ?x2.1 True)\n                              (restrict_top e ?x2.1 True))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n  \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some ?x2.1;\n   I ?s1; (?ii1, restrict_top i ?x2.1 False) \\<in> R ?s1;\n   (?ti1, restrict_top t ?x2.1 False) \\<in> R ?s1;\n   (?ei1, restrict_top e ?x2.1 False) \\<in> R ?s1\\<rbrakk>\n  \\<Longrightarrow> ospec (ite_impl_lu ?ii1 ?ti1 ?ei1 ?s1)\n                     (\\<lambda>(r, s').\n                         (r, ifex_ite_opt (restrict_top i ?x2.1 False)\n                              (restrict_top t ?x2.1 False)\n                              (restrict_top e ?x2.1 False))\n                         \\<in> R s' \\<and>\n                         I s' \\<and> les ?s1 s')\n\ngoal (1 subgoal):\n 1. \\<And>i t e s ii ti ei.\n       \\<lbrakk>\\<And>x2 s ii ti ei.\n                   \\<lbrakk>param_opt i t e = None;\n                    lowest_tops [i, t, e] = Some x2; I s;\n                    (ii, restrict_top i x2 True) \\<in> R s;\n                    (ti, restrict_top t x2 True) \\<in> R s;\n                    (ei, restrict_top e x2 True) \\<in> R s\\<rbrakk>\n                   \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n(\\<lambda>(r, s').\n    (r, ifex_ite_opt (restrict_top i x2 True) (restrict_top t x2 True)\n         (restrict_top e x2 True))\n    \\<in> R s' \\<and>\n    I s' \\<and> les s s');\n        \\<And>x2 s ii ti ei.\n           \\<lbrakk>param_opt i t e = None; lowest_tops [i, t, e] = Some x2;\n            I s; (ii, restrict_top i x2 False) \\<in> R s;\n            (ti, restrict_top t x2 False) \\<in> R s;\n            (ei, restrict_top e x2 False) \\<in> R s\\<rbrakk>\n           \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                              (\\<lambda>(r, s').\n                                  (r, ifex_ite_opt (restrict_top i x2 False)\n (restrict_top t x2 False) (restrict_top e x2 False))\n                                  \\<in> R s' \\<and>\n                                  I s' \\<and> les s s');\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_lu ii ti ei s)\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "from goal1(3-6)"], ["proof (chain)\npicking this:\n  I s\n  (ii, i) \\<in> R s\n  (ti, t) \\<in> R s\n  (ei, e) \\<in> R s", "show ?case"], ["proof (prove)\nusing this:\n  I s\n  (ii, i) \\<in> R s\n  (ti, t) \\<in> R s\n  (ei, e) \\<in> R s\n\ngoal (1 subgoal):\n 1. ospec (ite_impl_lu ii ti ei s)\n     (\\<lambda>(r, s').\n         (r, ifex_ite_opt i t e) \\<in> R s' \\<and> I s' \\<and> les s s')", "apply(subst ite_impl_lu.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n     (ei, e) \\<in> R s\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(cases \"M s (ii, ti, ei)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')\n 2. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case M s (ii, ti, ei) of\n                           None \\<Rightarrow>\n                             param_opt_impl ii ti ei s \\<bind>\n                             (\\<lambda>(ld, s).\n                                 case ld of\n                                 None \\<Rightarrow>\n                                   lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                   (\\<lambda>(lt, uu_).\n case lt of None \\<Rightarrow> None\n | Some a \\<Rightarrow>\n     restrict_top_impl ii a True s \\<bind>\n     (\\<lambda>(ti, uu_).\n         restrict_top_impl ti a True s \\<bind>\n         (\\<lambda>(tt, uu_).\n             restrict_top_impl ei a True s \\<bind>\n             (\\<lambda>(te, uu_).\n                 restrict_top_impl ii a False s \\<bind>\n                 (\\<lambda>(fi, uu_).\n                     restrict_top_impl ti a False s \\<bind>\n                     (\\<lambda>(ft, uu_).\n                         restrict_top_impl ei a False s \\<bind>\n                         (\\<lambda>(fe, uu_).\n                             ite_impl_lu ti tt te s \\<bind>\n                             (\\<lambda>(tb, s).\n                                 ite_impl_lu fi ft fe s \\<bind>\n                                 (\\<lambda>(fb, s).\n                                     IFimpl a tb fb s \\<bind>\n                                     (\\<lambda>(r, s).\n   let s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                                 | Some b \\<Rightarrow> Some (b, s))\n                           | Some b \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case M s (ii, ti, ei) of\n                           None \\<Rightarrow>\n                             param_opt_impl ii ti ei s \\<bind>\n                             (\\<lambda>(ld, s).\n                                 case ld of\n                                 None \\<Rightarrow>\n                                   lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                   (\\<lambda>(lt, uu_).\n case lt of None \\<Rightarrow> None\n | Some a \\<Rightarrow>\n     restrict_top_impl ii a True s \\<bind>\n     (\\<lambda>(ti, uu_).\n         restrict_top_impl ti a True s \\<bind>\n         (\\<lambda>(tt, uu_).\n             restrict_top_impl ei a True s \\<bind>\n             (\\<lambda>(te, uu_).\n                 restrict_top_impl ii a False s \\<bind>\n                 (\\<lambda>(fi, uu_).\n                     restrict_top_impl ti a False s \\<bind>\n                     (\\<lambda>(ft, uu_).\n                         restrict_top_impl ei a False s \\<bind>\n                         (\\<lambda>(fe, uu_).\n                             ite_impl_lu ti tt te s \\<bind>\n                             (\\<lambda>(tb, s).\n                                 ite_impl_lu fi ft fe s \\<bind>\n                                 (\\<lambda>(fb, s).\n                                     IFimpl a tb fb s \\<bind>\n                                     (\\<lambda>(r, s).\n   let s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                                 | Some b \\<Rightarrow> Some (b, s))\n                           | Some b \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "(* M s (ii, ti, ei) = Some a *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case M s (ii, ti, ei) of\n                           None \\<Rightarrow>\n                             param_opt_impl ii ti ei s \\<bind>\n                             (\\<lambda>(ld, s).\n                                 case ld of\n                                 None \\<Rightarrow>\n                                   lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                   (\\<lambda>(lt, uu_).\n case lt of None \\<Rightarrow> None\n | Some a \\<Rightarrow>\n     restrict_top_impl ii a True s \\<bind>\n     (\\<lambda>(ti, uu_).\n         restrict_top_impl ti a True s \\<bind>\n         (\\<lambda>(tt, uu_).\n             restrict_top_impl ei a True s \\<bind>\n             (\\<lambda>(te, uu_).\n                 restrict_top_impl ii a False s \\<bind>\n                 (\\<lambda>(fi, uu_).\n                     restrict_top_impl ti a False s \\<bind>\n                     (\\<lambda>(ft, uu_).\n                         restrict_top_impl ei a False s \\<bind>\n                         (\\<lambda>(fe, uu_).\n                             ite_impl_lu ti tt te s \\<bind>\n                             (\\<lambda>(tb, s).\n                                 ite_impl_lu fi ft fe s \\<bind>\n                                 (\\<lambda>(fb, s).\n                                     IFimpl a tb fb s \\<bind>\n                                     (\\<lambda>(r, s).\n   let s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                                 | Some b \\<Rightarrow> Some (b, s))\n                           | Some b \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(frule map_invar_rule1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a;\n        map_invar_impl (M s) s\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case M s (ii, ti, ei) of\n                           None \\<Rightarrow>\n                             param_opt_impl ii ti ei s \\<bind>\n                             (\\<lambda>(ld, s).\n                                 case ld of\n                                 None \\<Rightarrow>\n                                   lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                   (\\<lambda>(lt, uu_).\n case lt of None \\<Rightarrow> None\n | Some a \\<Rightarrow>\n     restrict_top_impl ii a True s \\<bind>\n     (\\<lambda>(ti, uu_).\n         restrict_top_impl ti a True s \\<bind>\n         (\\<lambda>(tt, uu_).\n             restrict_top_impl ei a True s \\<bind>\n             (\\<lambda>(te, uu_).\n                 restrict_top_impl ii a False s \\<bind>\n                 (\\<lambda>(fi, uu_).\n                     restrict_top_impl ti a False s \\<bind>\n                     (\\<lambda>(ft, uu_).\n                         restrict_top_impl ei a False s \\<bind>\n                         (\\<lambda>(fe, uu_).\n                             ite_impl_lu ti tt te s \\<bind>\n                             (\\<lambda>(tb, s).\n                                 ite_impl_lu fi ft fe s \\<bind>\n                                 (\\<lambda>(fb, s).\n                                     IFimpl a tb fb s \\<bind>\n                                     (\\<lambda>(r, s).\n   let s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                                 | Some b \\<Rightarrow> Some (b, s))\n                           | Some b \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(simp only: option.simps ospec.simps prod.simps simp_thms les_refl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a;\n        map_invar_impl (M s) s\\<rbrakk>\n       \\<Longrightarrow> (a, ifex_ite_opt i t e) \\<in> R s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(subst (asm) map_invar_impl_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a;\n        \\<forall>ii ti ei ri.\n           M s (ii, ti, ei) = Some ri \\<longrightarrow>\n           (\\<exists>i t e.\n               (ri, ifex_ite_opt i t e) \\<in> R s \\<and>\n               (ii, i) \\<in> R s \\<and>\n               (ti, t) \\<in> R s \\<and> (ei, e) \\<in> R s)\\<rbrakk>\n       \\<Longrightarrow> (a, ifex_ite_opt i t e) \\<in> R s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(erule allE[where x = ii])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a;\n        \\<forall>ti ei ri.\n           M s (ii, ti, ei) = Some ri \\<longrightarrow>\n           (\\<exists>i t e.\n               (ri, ifex_ite_opt i t e) \\<in> R s \\<and>\n               (ii, i) \\<in> R s \\<and>\n               (ti, t) \\<in> R s \\<and> (ei, e) \\<in> R s)\\<rbrakk>\n       \\<Longrightarrow> (a, ifex_ite_opt i t e) \\<in> R s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(erule allE[where x = ti])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a;\n        \\<forall>ei ri.\n           M s (ii, ti, ei) = Some ri \\<longrightarrow>\n           (\\<exists>i t e.\n               (ri, ifex_ite_opt i t e) \\<in> R s \\<and>\n               (ii, i) \\<in> R s \\<and>\n               (ti, t) \\<in> R s \\<and> (ei, e) \\<in> R s)\\<rbrakk>\n       \\<Longrightarrow> (a, ifex_ite_opt i t e) \\<in> R s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(erule allE[where x = ei])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a;\n        \\<forall>ri.\n           M s (ii, ti, ei) = Some ri \\<longrightarrow>\n           (\\<exists>i t e.\n               (ri, ifex_ite_opt i t e) \\<in> R s \\<and>\n               (ii, i) \\<in> R s \\<and>\n               (ti, t) \\<in> R s \\<and> (ei, e) \\<in> R s)\\<rbrakk>\n       \\<Longrightarrow> (a, ifex_ite_opt i t e) \\<in> R s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rename_tac a)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a;\n        \\<forall>ri.\n           M s (ii, ti, ei) = Some ri \\<longrightarrow>\n           (\\<exists>i t e.\n               (ri, ifex_ite_opt i t e) \\<in> R s \\<and>\n               (ii, i) \\<in> R s \\<and>\n               (ti, t) \\<in> R s \\<and> (ei, e) \\<in> R s)\\<rbrakk>\n       \\<Longrightarrow> (a, ifex_ite_opt i t e) \\<in> R s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(erule_tac x = a in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = Some a;\n        M s (ii, ti, ei) = Some a \\<longrightarrow>\n        (\\<exists>i t e.\n            (a, ifex_ite_opt i t e) \\<in> R s \\<and>\n            (ii, i) \\<in> R s \\<and>\n            (ti, t) \\<in> R s \\<and> (ei, e) \\<in> R s)\\<rbrakk>\n       \\<Longrightarrow> (a, ifex_ite_opt i t e) \\<in> R s\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(metis cmp_rule_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "(* M s (ii, ti, ei) = Some a *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (case M s (ii, ti, ei) of\n                        None \\<Rightarrow>\n                          param_opt_impl ii ti ei s \\<bind>\n                          (\\<lambda>(ld, s).\n                              case ld of\n                              None \\<Rightarrow>\n                                lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                (\\<lambda>(lt, uu_).\n                                    case lt of None \\<Rightarrow> None\n                                    | Some a \\<Rightarrow>\n  restrict_top_impl ii a True s \\<bind>\n  (\\<lambda>(ti, uu_).\n      restrict_top_impl ti a True s \\<bind>\n      (\\<lambda>(tt, uu_).\n          restrict_top_impl ei a True s \\<bind>\n          (\\<lambda>(te, uu_).\n              restrict_top_impl ii a False s \\<bind>\n              (\\<lambda>(fi, uu_).\n                  restrict_top_impl ti a False s \\<bind>\n                  (\\<lambda>(ft, uu_).\n                      restrict_top_impl ei a False s \\<bind>\n                      (\\<lambda>(fe, uu_).\n                          ite_impl_lu ti tt te s \\<bind>\n                          (\\<lambda>(tb, s).\n                              ite_impl_lu fi ft fe s \\<bind>\n                              (\\<lambda>(fb, s).\n                                  IFimpl a tb fb s \\<bind>\n                                  (\\<lambda>(r, s).\nlet s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                              | Some b \\<Rightarrow> Some (b, s))\n                        | Some b \\<Rightarrow> Some (b, s))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (param_opt_impl ii ti ei s \\<bind>\n                        (\\<lambda>(ld, s).\n                            case ld of\n                            None \\<Rightarrow>\n                              lowest_tops_impl [ii, ti, ei] s \\<bind>\n                              (\\<lambda>(lt, uu_).\n                                  case lt of None \\<Rightarrow> None\n                                  | Some a \\<Rightarrow>\nrestrict_top_impl ii a True s \\<bind>\n(\\<lambda>(ti, uu_).\n    restrict_top_impl ti a True s \\<bind>\n    (\\<lambda>(tt, uu_).\n        restrict_top_impl ei a True s \\<bind>\n        (\\<lambda>(te, uu_).\n            restrict_top_impl ii a False s \\<bind>\n            (\\<lambda>(fi, uu_).\n                restrict_top_impl ti a False s \\<bind>\n                (\\<lambda>(ft, uu_).\n                    restrict_top_impl ei a False s \\<bind>\n                    (\\<lambda>(fe, uu_).\n                        ite_impl_lu ti tt te s \\<bind>\n                        (\\<lambda>(tb, s).\n                            ite_impl_lu fi ft fe s \\<bind>\n                            (\\<lambda>(fb, s).\n                                IFimpl a tb fb s \\<bind>\n                                (\\<lambda>(r, s).\n                                    let s = U s (ii, ti, ei) r\n                                    in Some (r, s)))))))))))\n                            | Some b \\<Rightarrow> Some (b, s)))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(cases \"param_opt i t e\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None; param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (param_opt_impl ii ti ei s \\<bind>\n                        (\\<lambda>(ld, s).\n                            case ld of\n                            None \\<Rightarrow>\n                              lowest_tops_impl [ii, ti, ei] s \\<bind>\n                              (\\<lambda>(lt, uu_).\n                                  case lt of None \\<Rightarrow> None\n                                  | Some a \\<Rightarrow>\nrestrict_top_impl ii a True s \\<bind>\n(\\<lambda>(ti, uu_).\n    restrict_top_impl ti a True s \\<bind>\n    (\\<lambda>(tt, uu_).\n        restrict_top_impl ei a True s \\<bind>\n        (\\<lambda>(te, uu_).\n            restrict_top_impl ii a False s \\<bind>\n            (\\<lambda>(fi, uu_).\n                restrict_top_impl ti a False s \\<bind>\n                (\\<lambda>(ft, uu_).\n                    restrict_top_impl ei a False s \\<bind>\n                    (\\<lambda>(fe, uu_).\n                        ite_impl_lu ti tt te s \\<bind>\n                        (\\<lambda>(tb, s).\n                            ite_impl_lu fi ft fe s \\<bind>\n                            (\\<lambda>(fb, s).\n                                IFimpl a tb fb s \\<bind>\n                                (\\<lambda>(r, s).\n                                    let s = U s (ii, ti, ei) r\n                                    in Some (r, s)))))))))))\n                            | Some b \\<Rightarrow> Some (b, s)))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')\n 2. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (param_opt_impl ii ti ei s \\<bind>\n                           (\\<lambda>(ld, s).\n                               case ld of\n                               None \\<Rightarrow>\n                                 lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                 (\\<lambda>(lt, uu_).\n                                     case lt of None \\<Rightarrow> None\n                                     | Some a \\<Rightarrow>\n   restrict_top_impl ii a True s \\<bind>\n   (\\<lambda>(ti, uu_).\n       restrict_top_impl ti a True s \\<bind>\n       (\\<lambda>(tt, uu_).\n           restrict_top_impl ei a True s \\<bind>\n           (\\<lambda>(te, uu_).\n               restrict_top_impl ii a False s \\<bind>\n               (\\<lambda>(fi, uu_).\n                   restrict_top_impl ti a False s \\<bind>\n                   (\\<lambda>(ft, uu_).\n                       restrict_top_impl ei a False s \\<bind>\n                       (\\<lambda>(fe, uu_).\n                           ite_impl_lu ti tt te s \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl_lu fi ft fe s \\<bind>\n                               (\\<lambda>(fb, s).\n                                   IFimpl a tb fb s \\<bind>\n                                   (\\<lambda>(r, s).\n let s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                               | Some b \\<Rightarrow> Some (b, s)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (param_opt_impl ii ti ei s \\<bind>\n                           (\\<lambda>(ld, s).\n                               case ld of\n                               None \\<Rightarrow>\n                                 lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                 (\\<lambda>(lt, uu_).\n                                     case lt of None \\<Rightarrow> None\n                                     | Some a \\<Rightarrow>\n   restrict_top_impl ii a True s \\<bind>\n   (\\<lambda>(ti, uu_).\n       restrict_top_impl ti a True s \\<bind>\n       (\\<lambda>(tt, uu_).\n           restrict_top_impl ei a True s \\<bind>\n           (\\<lambda>(te, uu_).\n               restrict_top_impl ii a False s \\<bind>\n               (\\<lambda>(fi, uu_).\n                   restrict_top_impl ti a False s \\<bind>\n                   (\\<lambda>(ft, uu_).\n                       restrict_top_impl ei a False s \\<bind>\n                       (\\<lambda>(fe, uu_).\n                           ite_impl_lu ti tt te s \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl_lu fi ft fe s \\<bind>\n                               (\\<lambda>(fb, s).\n                                   IFimpl a tb fb s \\<bind>\n                                   (\\<lambda>(r, s).\n let s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                               | Some b \\<Rightarrow> Some (b, s)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None; param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (param_opt_impl ii ti ei s \\<bind>\n                        (\\<lambda>(ld, s).\n                            case ld of\n                            None \\<Rightarrow>\n                              lowest_tops_impl [ii, ti, ei] s \\<bind>\n                              (\\<lambda>(lt, uu_).\n                                  case lt of None \\<Rightarrow> None\n                                  | Some a \\<Rightarrow>\nrestrict_top_impl ii a True s \\<bind>\n(\\<lambda>(ti, uu_).\n    restrict_top_impl ti a True s \\<bind>\n    (\\<lambda>(tt, uu_).\n        restrict_top_impl ei a True s \\<bind>\n        (\\<lambda>(te, uu_).\n            restrict_top_impl ii a False s \\<bind>\n            (\\<lambda>(fi, uu_).\n                restrict_top_impl ti a False s \\<bind>\n                (\\<lambda>(ft, uu_).\n                    restrict_top_impl ei a False s \\<bind>\n                    (\\<lambda>(fe, uu_).\n                        ite_impl_lu ti tt te s \\<bind>\n                        (\\<lambda>(tb, s).\n                            ite_impl_lu fi ft fe s \\<bind>\n                            (\\<lambda>(fb, s).\n                                IFimpl a tb fb s \\<bind>\n                                (\\<lambda>(r, s).\n                                    let s = U s (ii, ti, ei) r\n                                    in Some (r, s)))))))))))\n                            | Some b \\<Rightarrow> Some (b, s)))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "(* param_opt i t e = Some a *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (param_opt_impl ii ti ei s \\<bind>\n                           (\\<lambda>(ld, s).\n                               case ld of\n                               None \\<Rightarrow>\n                                 lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                 (\\<lambda>(lt, uu_).\n                                     case lt of None \\<Rightarrow> None\n                                     | Some a \\<Rightarrow>\n   restrict_top_impl ii a True s \\<bind>\n   (\\<lambda>(ti, uu_).\n       restrict_top_impl ti a True s \\<bind>\n       (\\<lambda>(tt, uu_).\n           restrict_top_impl ei a True s \\<bind>\n           (\\<lambda>(te, uu_).\n               restrict_top_impl ii a False s \\<bind>\n               (\\<lambda>(fi, uu_).\n                   restrict_top_impl ti a False s \\<bind>\n                   (\\<lambda>(ft, uu_).\n                       restrict_top_impl ei a False s \\<bind>\n                       (\\<lambda>(fe, uu_).\n                           ite_impl_lu ti tt te s \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl_lu fi ft fe s \\<bind>\n                               (\\<lambda>(fb, s).\n                                   IFimpl a tb fb s \\<bind>\n                                   (\\<lambda>(r, s).\n let s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                               | Some b \\<Rightarrow> Some (b, s)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 2. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None; param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (param_opt_impl ii ti ei s \\<bind>\n                        (\\<lambda>(ld, s).\n                            case ld of\n                            None \\<Rightarrow>\n                              lowest_tops_impl [ii, ti, ei] s \\<bind>\n                              (\\<lambda>(lt, uu_).\n                                  case lt of None \\<Rightarrow> None\n                                  | Some a \\<Rightarrow>\nrestrict_top_impl ii a True s \\<bind>\n(\\<lambda>(ti, uu_).\n    restrict_top_impl ti a True s \\<bind>\n    (\\<lambda>(tt, uu_).\n        restrict_top_impl ei a True s \\<bind>\n        (\\<lambda>(te, uu_).\n            restrict_top_impl ii a False s \\<bind>\n            (\\<lambda>(fi, uu_).\n                restrict_top_impl ti a False s \\<bind>\n                (\\<lambda>(ft, uu_).\n                    restrict_top_impl ei a False s \\<bind>\n                    (\\<lambda>(fe, uu_).\n                        ite_impl_lu ti tt te s \\<bind>\n                        (\\<lambda>(tb, s).\n                            ite_impl_lu fi ft fe s \\<bind>\n                            (\\<lambda>(fb, s).\n                                IFimpl a tb fb s \\<bind>\n                                (\\<lambda>(r, s).\n                                    let s = U s (ii, ti, ei) r\n                                    in Some (r, s)))))))))))\n                            | Some b \\<Rightarrow> Some (b, s)))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> ospec (param_opt_impl ii ti ei s) (?Q21 a)\n 2. \\<And>a r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a; ?Q21 a r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of None \\<Rightarrow> None\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_lu ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_lu fi ft fe s \\<bind>\n                           (\\<lambda>(fb, s).\n                               IFimpl a tb fb s \\<bind>\n                               (\\<lambda>(r, s).\n                                   let s = U s (ii, ti, ei) r\n                                   in Some (r, s)))))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 3. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None; param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (param_opt_impl ii ti ei s \\<bind>\n                        (\\<lambda>(ld, s).\n                            case ld of\n                            None \\<Rightarrow>\n                              lowest_tops_impl [ii, ti, ei] s \\<bind>\n                              (\\<lambda>(lt, uu_).\n                                  case lt of None \\<Rightarrow> None\n                                  | Some a \\<Rightarrow>\nrestrict_top_impl ii a True s \\<bind>\n(\\<lambda>(ti, uu_).\n    restrict_top_impl ti a True s \\<bind>\n    (\\<lambda>(tt, uu_).\n        restrict_top_impl ei a True s \\<bind>\n        (\\<lambda>(te, uu_).\n            restrict_top_impl ii a False s \\<bind>\n            (\\<lambda>(fi, uu_).\n                restrict_top_impl ti a False s \\<bind>\n                (\\<lambda>(ft, uu_).\n                    restrict_top_impl ei a False s \\<bind>\n                    (\\<lambda>(fe, uu_).\n                        ite_impl_lu ti tt te s \\<bind>\n                        (\\<lambda>(tb, s).\n                            ite_impl_lu fi ft fe s \\<bind>\n                            (\\<lambda>(fb, s).\n                                IFimpl a tb fb s \\<bind>\n                                (\\<lambda>(r, s).\n                                    let s = U s (ii, ti, ei) r\n                                    in Some (r, s)))))))))))\n                            | Some b \\<Rightarrow> Some (b, s)))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(rule ospec_and[OF param_opt_impl_R param_opt_impl_lesI])"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> I s\n 2. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ii, ?i26 a) \\<in> R s\n 3. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ti, ?t26 a) \\<in> R s\n 4. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ei, ?e26 a) \\<in> R s\n 5. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> I s\n 6. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ii, ?i25 a) \\<in> R s\n 7. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ti, ?t25 a) \\<in> R s\n 8. \\<And>a.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a\\<rbrakk>\n       \\<Longrightarrow> (ei, ?e25 a) \\<in> R s\n 9. \\<And>a r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None;\n        param_opt i t e = Some a;\n        (case r of\n         (None, s') \\<Rightarrow>\n           param_opt (?i26 a) (?t26 a) (?e26 a) = None\n         | (Some ra, s') \\<Rightarrow>\n             \\<exists>r'.\n                param_opt (?i26 a) (?t26 a) (?e26 a) = Some r' \\<and>\n                (ra, r') \\<in> R s') \\<and>\n        (case r of (r, s') \\<Rightarrow> I s' \\<and> les s s')\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of None \\<Rightarrow> None\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_lu ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_lu fi ft fe s \\<bind>\n                           (\\<lambda>(fb, s).\n                               IFimpl a tb fb s \\<bind>\n                               (\\<lambda>(r, s).\n                                   let s = U s (ii, ti, ei) r\n                                   in Some (r, s)))))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')\n 10. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n      M s (ii, ti, ei) = None; param_opt i t e = None\\<rbrakk>\n     \\<Longrightarrow> ospec\n                        (param_opt_impl ii ti ei s \\<bind>\n                         (\\<lambda>(ld, s).\n                             case ld of\n                             None \\<Rightarrow>\n                               lowest_tops_impl [ii, ti, ei] s \\<bind>\n                               (\\<lambda>(lt, uu_).\n                                   case lt of None \\<Rightarrow> None\n                                   | Some a \\<Rightarrow>\n restrict_top_impl ii a True s \\<bind>\n (\\<lambda>(ti, uu_).\n     restrict_top_impl ti a True s \\<bind>\n     (\\<lambda>(tt, uu_).\n         restrict_top_impl ei a True s \\<bind>\n         (\\<lambda>(te, uu_).\n             restrict_top_impl ii a False s \\<bind>\n             (\\<lambda>(fi, uu_).\n                 restrict_top_impl ti a False s \\<bind>\n                 (\\<lambda>(ft, uu_).\n                     restrict_top_impl ei a False s \\<bind>\n                     (\\<lambda>(fe, uu_).\n                         ite_impl_lu ti tt te s \\<bind>\n                         (\\<lambda>(tb, s).\n                             ite_impl_lu fi ft fe s \\<bind>\n                             (\\<lambda>(fb, s).\n                                 IFimpl a tb fb s \\<bind>\n                                 (\\<lambda>(r, s).\n                                     let s = U s (ii, ti, ei) r\n                                     in Some (r, s)))))))))))\n                             | Some b \\<Rightarrow> Some (b, s)))\n                        (\\<lambda>(r, s').\n                            (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                            I s' \\<and> les s s')", "apply(auto simp add: map_invar_impl_les ifex_ite_opt.simps  split: option.splits)[9]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None; param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (param_opt_impl ii ti ei s \\<bind>\n                        (\\<lambda>(ld, s).\n                            case ld of\n                            None \\<Rightarrow>\n                              lowest_tops_impl [ii, ti, ei] s \\<bind>\n                              (\\<lambda>(lt, uu_).\n                                  case lt of None \\<Rightarrow> None\n                                  | Some a \\<Rightarrow>\nrestrict_top_impl ii a True s \\<bind>\n(\\<lambda>(ti, uu_).\n    restrict_top_impl ti a True s \\<bind>\n    (\\<lambda>(tt, uu_).\n        restrict_top_impl ei a True s \\<bind>\n        (\\<lambda>(te, uu_).\n            restrict_top_impl ii a False s \\<bind>\n            (\\<lambda>(fi, uu_).\n                restrict_top_impl ti a False s \\<bind>\n                (\\<lambda>(ft, uu_).\n                    restrict_top_impl ei a False s \\<bind>\n                    (\\<lambda>(fe, uu_).\n                        ite_impl_lu ti tt te s \\<bind>\n                        (\\<lambda>(tb, s).\n                            ite_impl_lu fi ft fe s \\<bind>\n                            (\\<lambda>(fb, s).\n                                IFimpl a tb fb s \\<bind>\n                                (\\<lambda>(r, s).\n                                    let s = U s (ii, ti, ei) r\n                                    in Some (r, s)))))))))))\n                            | Some b \\<Rightarrow> Some (b, s)))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "(* param_opt i t e = None *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None; param_opt i t e = None\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (param_opt_impl ii ti ei s \\<bind>\n                        (\\<lambda>(ld, s).\n                            case ld of\n                            None \\<Rightarrow>\n                              lowest_tops_impl [ii, ti, ei] s \\<bind>\n                              (\\<lambda>(lt, uu_).\n                                  case lt of None \\<Rightarrow> None\n                                  | Some a \\<Rightarrow>\nrestrict_top_impl ii a True s \\<bind>\n(\\<lambda>(ti, uu_).\n    restrict_top_impl ti a True s \\<bind>\n    (\\<lambda>(tt, uu_).\n        restrict_top_impl ei a True s \\<bind>\n        (\\<lambda>(te, uu_).\n            restrict_top_impl ii a False s \\<bind>\n            (\\<lambda>(fi, uu_).\n                restrict_top_impl ti a False s \\<bind>\n                (\\<lambda>(ft, uu_).\n                    restrict_top_impl ei a False s \\<bind>\n                    (\\<lambda>(fe, uu_).\n                        ite_impl_lu ti tt te s \\<bind>\n                        (\\<lambda>(tb, s).\n                            ite_impl_lu fi ft fe s \\<bind>\n                            (\\<lambda>(fb, s).\n                                IFimpl a tb fb s \\<bind>\n                                (\\<lambda>(r, s).\n                                    let s = U s (ii, ti, ei) r\n                                    in Some (r, s)))))))))))\n                            | Some b \\<Rightarrow> Some (b, s)))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(frule param_opt_lowest_tops_lem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n     M s (ii, ti, ei) = None; param_opt i t e = None;\n     \\<exists>y. lowest_tops [i, t, e] = Some y\\<rbrakk>\n    \\<Longrightarrow> ospec\n                       (param_opt_impl ii ti ei s \\<bind>\n                        (\\<lambda>(ld, s).\n                            case ld of\n                            None \\<Rightarrow>\n                              lowest_tops_impl [ii, ti, ei] s \\<bind>\n                              (\\<lambda>(lt, uu_).\n                                  case lt of None \\<Rightarrow> None\n                                  | Some a \\<Rightarrow>\nrestrict_top_impl ii a True s \\<bind>\n(\\<lambda>(ti, uu_).\n    restrict_top_impl ti a True s \\<bind>\n    (\\<lambda>(tt, uu_).\n        restrict_top_impl ei a True s \\<bind>\n        (\\<lambda>(te, uu_).\n            restrict_top_impl ii a False s \\<bind>\n            (\\<lambda>(fi, uu_).\n                restrict_top_impl ti a False s \\<bind>\n                (\\<lambda>(ft, uu_).\n                    restrict_top_impl ei a False s \\<bind>\n                    (\\<lambda>(fe, uu_).\n                        ite_impl_lu ti tt te s \\<bind>\n                        (\\<lambda>(tb, s).\n                            ite_impl_lu fi ft fe s \\<bind>\n                            (\\<lambda>(fb, s).\n                                IFimpl a tb fb s \\<bind>\n                                (\\<lambda>(r, s).\n                                    let s = U s (ii, ti, ei) r\n                                    in Some (r, s)))))))))))\n                            | Some b \\<Rightarrow> Some (b, s)))\n                       (\\<lambda>(r, s').\n                           (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                           I s' \\<and> les s s')", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (param_opt_impl ii ti ei s \\<bind>\n                           (\\<lambda>(ld, s).\n                               case ld of\n                               None \\<Rightarrow>\n                                 lowest_tops_impl [ii, ti, ei] s \\<bind>\n                                 (\\<lambda>(lt, uu_).\n                                     case lt of None \\<Rightarrow> None\n                                     | Some a \\<Rightarrow>\n   restrict_top_impl ii a True s \\<bind>\n   (\\<lambda>(ti, uu_).\n       restrict_top_impl ti a True s \\<bind>\n       (\\<lambda>(tt, uu_).\n           restrict_top_impl ei a True s \\<bind>\n           (\\<lambda>(te, uu_).\n               restrict_top_impl ii a False s \\<bind>\n               (\\<lambda>(fi, uu_).\n                   restrict_top_impl ti a False s \\<bind>\n                   (\\<lambda>(ft, uu_).\n                       restrict_top_impl ei a False s \\<bind>\n                       (\\<lambda>(fe, uu_).\n                           ite_impl_lu ti tt te s \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl_lu fi ft fe s \\<bind>\n                               (\\<lambda>(fb, s).\n                                   IFimpl a tb fb s \\<bind>\n                                   (\\<lambda>(r, s).\n let s = U s (ii, ti, ei) r in Some (r, s)))))))))))\n                               | Some b \\<Rightarrow> Some (b, s)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> ospec (param_opt_impl ii ti ei s) (?Q60 y)\n 2. \\<And>y r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; ?Q60 y r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of None \\<Rightarrow> None\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_lu ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_lu fi ft fe s \\<bind>\n                           (\\<lambda>(fb, s).\n                               IFimpl a tb fb s \\<bind>\n                               (\\<lambda>(r, s).\n                                   let s = U s (ii, ti, ei) r\n                                   in Some (r, s)))))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule ospec_and[OF param_opt_impl_R param_opt_impl_lesI])"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> I s\n 2. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ii, ?i65 y) \\<in> R s\n 3. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ti, ?t65 y) \\<in> R s\n 4. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ei, ?e65 y) \\<in> R s\n 5. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> I s\n 6. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ii, ?i64 y) \\<in> R s\n 7. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ti, ?t64 y) \\<in> R s\n 8. \\<And>y.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y\\<rbrakk>\n       \\<Longrightarrow> (ei, ?e64 y) \\<in> R s\n 9. \\<And>y r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y;\n        (case r of\n         (None, s') \\<Rightarrow>\n           param_opt (?i65 y) (?t65 y) (?e65 y) = None\n         | (Some ra, s') \\<Rightarrow>\n             \\<exists>r'.\n                param_opt (?i65 y) (?t65 y) (?e65 y) = Some r' \\<and>\n                (ra, r') \\<in> R s') \\<and>\n        (case r of (r, s') \\<Rightarrow> I s' \\<and> les s s')\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of None \\<Rightarrow> None\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_lu ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_lu fi ft fe s \\<bind>\n                           (\\<lambda>(fb, s).\n                               IFimpl a tb fb s \\<bind>\n                               (\\<lambda>(r, s).\n                                   let s = U s (ii, ti, ei) r\n                                   in Some (r, s)))))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(auto split: option.splits)[8]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y;\n        (case r of (None, s') \\<Rightarrow> param_opt i t e = None\n         | (Some ra, s') \\<Rightarrow>\n             \\<exists>r'.\n                param_opt i t e = Some r' \\<and> (ra, r') \\<in> R s') \\<and>\n        (case r of (r, s') \\<Rightarrow> I s' \\<and> les s s')\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (None, s) \\<Rightarrow>\n                             lowest_tops_impl [ii, ti, ei] s \\<bind>\n                             (\\<lambda>(lt, uu_).\n                                 case lt of None \\<Rightarrow> None\n                                 | Some a \\<Rightarrow>\n                                     restrict_top_impl ii a True s \\<bind>\n                                     (\\<lambda>(ti, uu_).\n   restrict_top_impl ti a True s \\<bind>\n   (\\<lambda>(tt, uu_).\n       restrict_top_impl ei a True s \\<bind>\n       (\\<lambda>(te, uu_).\n           restrict_top_impl ii a False s \\<bind>\n           (\\<lambda>(fi, uu_).\n               restrict_top_impl ti a False s \\<bind>\n               (\\<lambda>(ft, uu_).\n                   restrict_top_impl ei a False s \\<bind>\n                   (\\<lambda>(fe, uu_).\n                       ite_impl_lu ti tt te s \\<bind>\n                       (\\<lambda>(tb, s).\n                           ite_impl_lu fi ft fe s \\<bind>\n                           (\\<lambda>(fb, s).\n                               IFimpl a tb fb s \\<bind>\n                               (\\<lambda>(r, s).\n                                   let s = U s (ii, ti, ei) r\n                                   in Some (r, s)))))))))))\n                           | (Some b, s) \\<Rightarrow> Some (b, s))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp split: option.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (lowest_tops_impl [ii, ti, ei] b \\<bind>\n                           (\\<lambda>(lt, uu_).\n                               case lt of None \\<Rightarrow> None\n                               | Some a \\<Rightarrow>\n                                   restrict_top_impl ii a True b \\<bind>\n                                   (\\<lambda>(ti, uu_).\n restrict_top_impl ti a True b \\<bind>\n (\\<lambda>(tt, uu_).\n     restrict_top_impl ei a True b \\<bind>\n     (\\<lambda>(te, uu_).\n         restrict_top_impl ii a False b \\<bind>\n         (\\<lambda>(fi, uu_).\n             restrict_top_impl ti a False b \\<bind>\n             (\\<lambda>(ft, uu_).\n                 restrict_top_impl ei a False b \\<bind>\n                 (\\<lambda>(fe, uu_).\n                     ite_impl_lu ti tt te b \\<bind>\n                     (\\<lambda>(tb, s).\n                         ite_impl_lu fi ft fe s \\<bind>\n                         (\\<lambda>(fb, s).\n                             IFimpl a tb fb s \\<bind>\n                             (\\<lambda>(r, s).\n                                 let s = U s (ii, ti, ei) r\n                                 in Some (r, s))))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule_tac obind_rule[where Q=\"\\<lambda>(r, s'). r = lowest_tops [i,t,e]\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec (lowest_tops_impl [ii, ti, ei] b)\n                          (\\<lambda>(r, s'). r = lowest_tops [i, t, e])\n 2. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (None, uu_) \\<Rightarrow> None\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_lu ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_lu fi ft fe s \\<bind>\n                     (\\<lambda>(fb, s).\n                         IFimpl a tb fb s \\<bind>\n                         (\\<lambda>(r, s).\n                             let s = U s (ii, ti, ei) r\n                             in Some (r, s)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule ospec_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec (lowest_tops_impl [ii, ti, ei] b) (?Q93 y b)\n 2. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b; ?Q93 y b r\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 3. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (None, uu_) \\<Rightarrow> None\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_lu ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_lu fi ft fe s \\<bind>\n                     (\\<lambda>(fb, s).\n                         IFimpl a tb fb s \\<bind>\n                         (\\<lambda>(r, s).\n                             let s = U s (ii, ti, ei) r\n                             in Some (r, s)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule lowest_tops_impl_R)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> list_all2 (in_rel (R b)) [ii, ti, ei] (?l96 y b)\n 2. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> I b\n 3. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops (?l96 y b) \\<and> s' = b\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 4. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (None, uu_) \\<Rightarrow> None\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_lu ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_lu fi ft fe s \\<bind>\n                     (\\<lambda>(fb, s).\n                         IFimpl a tb fb s \\<bind>\n                         (\\<lambda>(r, s).\n                             let s = U s (ii, ti, ei) r\n                             in Some (r, s)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "using les_def"], ["proof (prove)\nusing this:\n  les ?s ?s' \\<equiv>\n  \\<forall>ni n. (ni, n) \\<in> R ?s \\<longrightarrow> (ni, n) \\<in> R ?s'\n\ngoal (4 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> list_all2 (in_rel (R b)) [ii, ti, ei] (?l96 y b)\n 2. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> I b\n 3. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops (?l96 y b) \\<and> s' = b\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 4. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (None, uu_) \\<Rightarrow> None\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_lu ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_lu fi ft fe s \\<bind>\n                     (\\<lambda>(fb, s).\n                         IFimpl a tb fb s \\<bind>\n                         (\\<lambda>(r, s).\n                             let s = U s (ii, ti, ei) r\n                             in Some (r, s)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(fastforce)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y b.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> I b\n 2. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = b\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 3. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (None, uu_) \\<Rightarrow> None\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_lu ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_lu fi ft fe s \\<bind>\n                     (\\<lambda>(fb, s).\n                         IFimpl a tb fb s \\<bind>\n                         (\\<lambda>(r, s).\n                             let s = U s (ii, ti, ei) r\n                             in Some (r, s)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of\n        (r, s') \\<Rightarrow>\n          r = lowest_tops [i, t, e] \\<and> s' = b\\<rbrakk>\n       \\<Longrightarrow> case r of\n                         (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\n 2. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (None, uu_) \\<Rightarrow> None\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_lu ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_lu fi ft fe s \\<bind>\n                     (\\<lambda>(fb, s).\n                         IFimpl a tb fb s \\<bind>\n                         (\\<lambda>(r, s).\n                             let s = U s (ii, ti, ei) r\n                             in Some (r, s)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(fastforce)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (None, uu_) \\<Rightarrow> None\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_lu ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_lu fi ft fe s \\<bind>\n                     (\\<lambda>(fb, s).\n                         IFimpl a tb fb s \\<bind>\n                         (\\<lambda>(r, s).\n                             let s = U s (ii, ti, ei) r\n                             in Some (r, s)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "using BDT.param_opt_lowest_tops_lem"], ["proof (prove)\nusing this:\n  param_opt ?i ?t ?e = None \\<Longrightarrow>\n  \\<exists>y. lowest_tops [?i, ?t, ?e] = Some y\n\ngoal (1 subgoal):\n 1. \\<And>y b r.\n       \\<lbrakk>I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s;\n        (ei, e) \\<in> R s; M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b;\n        case r of (r, s') \\<Rightarrow> r = lowest_tops [i, t, e]\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of (None, uu_) \\<Rightarrow> None\n                           | (Some a, uu_) \\<Rightarrow>\n                               restrict_top_impl ii a True b \\<bind>\n                               (\\<lambda>(ti, uu_).\n                                   restrict_top_impl ti a True b \\<bind>\n                                   (\\<lambda>(tt, uu_).\n restrict_top_impl ei a True b \\<bind>\n (\\<lambda>(te, uu_).\n     restrict_top_impl ii a False b \\<bind>\n     (\\<lambda>(fi, uu_).\n         restrict_top_impl ti a False b \\<bind>\n         (\\<lambda>(ft, uu_).\n             restrict_top_impl ei a False b \\<bind>\n             (\\<lambda>(fe, uu_).\n                 ite_impl_lu ti tt te b \\<bind>\n                 (\\<lambda>(tb, s).\n                     ite_impl_lu fi ft fe s \\<bind>\n                     (\\<lambda>(fb, s).\n                         IFimpl a tb fb s \\<bind>\n                         (\\<lambda>(r, s).\n                             let s = U s (ii, ti, ei) r\n                             in Some (r, s)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(clarsimp split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b; les s b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (restrict_top_impl ii y True b \\<bind>\n                           (\\<lambda>(ti, uu_).\n                               restrict_top_impl ti y True b \\<bind>\n                               (\\<lambda>(tt, uu_).\n                                   restrict_top_impl ei y True b \\<bind>\n                                   (\\<lambda>(te, uu_).\n restrict_top_impl ii y False b \\<bind>\n (\\<lambda>(fi, uu_).\n     restrict_top_impl ti y False b \\<bind>\n     (\\<lambda>(ft, uu_).\n         restrict_top_impl ei y False b \\<bind>\n         (\\<lambda>(fe, uu_).\n             ite_impl_lu ti tt te b \\<bind>\n             (\\<lambda>(tb, s).\n                 ite_impl_lu fi ft fe s \\<bind>\n                 (\\<lambda>(fb, s).\n                     IFimpl y tb fb s \\<bind>\n                     (\\<lambda>(r, s).\n                         Some (r, U s (ii, ti, ei) r)))))))))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and> les s s')", "apply(rule obind_rule, rule restrict_top_impl_spec, assumption+, auto simp add: les_def split: prod.splits)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (ite_impl_lu x1 x1a x1b b \\<bind>\n                           (\\<lambda>(tb, s).\n                               ite_impl_lu x1c x1d x1e s \\<bind>\n                               (\\<lambda>(fb, s).\n                                   IFimpl y tb fb s \\<bind>\n                                   (\\<lambda>(r, s).\n Some (r, U s (ii, ti, ei) r)))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_lu x1 x1a x1b b)\n                          (?Q342 y b x1 x1a x1b x1c x1d x1e)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        ?Q342 y b x1 x1a x1b x1c x1d x1e r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl_lu x1c x1d x1e s \\<bind>\n                             (\\<lambda>(fb, s).\n                                 IFimpl y tb fb s \\<bind>\n                                 (\\<lambda>(r, s).\n                                     Some (r, U s (ii, ti, ei) r))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule mIH(1))"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> param_opt i t e = None\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> lowest_tops [i, t, e] =\n                         Some (?x2.346 y b x1 x1a x1b x1c x1d x1e)\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> I b\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> (x1,\n                          restrict_top i\n                           (?x2.346 y b x1 x1a x1b x1c x1d x1e) True)\n                         \\<in> R b\n 5. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> (x1a,\n                          restrict_top t\n                           (?x2.346 y b x1 x1a x1b x1c x1d x1e) True)\n                         \\<in> R b\n 6. \\<And>y b x1 x1a x1b x1c x1d x1e.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b\\<rbrakk>\n       \\<Longrightarrow> (x1b,\n                          restrict_top e\n                           (?x2.346 y b x1 x1a x1b x1c x1d x1e) True)\n                         \\<in> R b\n 7. \\<And>y b x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite_opt\n               (restrict_top i (?x2.346 y b x1 x1a x1b x1c x1d x1e) True)\n               (restrict_top t (?x2.346 y b x1 x1a x1b x1c x1d x1e) True)\n               (restrict_top e (?x2.346 y b x1 x1a x1b x1c x1d x1e) True))\n          \\<in> R s' \\<and>\n          I s' \\<and> les b s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl_lu x1c x1d x1e s \\<bind>\n                             (\\<lambda>(fb, s).\n                                 IFimpl y tb fb s \\<bind>\n                                 (\\<lambda>(r, s).\n                                     Some (r, U s (ii, ti, ei) r))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(simp add: map_invar_impl_les les_def;fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n               (restrict_top e y True))\n          \\<in> R s' \\<and>\n          I s' \\<and> les b s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (tb, s) \\<Rightarrow>\n                             ite_impl_lu x1c x1d x1e s \\<bind>\n                             (\\<lambda>(fb, s).\n                                 IFimpl y tb fb s \\<bind>\n                                 (\\<lambda>(r, s).\n                                     Some (r, U s (ii, ti, ei) r))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (ite_impl_lu x1c x1d x1e ba \\<bind>\n                           (\\<lambda>(fb, s).\n                               IFimpl y a fb s \\<bind>\n                               (\\<lambda>(r, s).\n                                   Some (r, U s (ii, ti, ei) r))))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> ospec (ite_impl_lu x1c x1d x1e ba)\n                          (?Q368 y b x1 x1a x1b x1c x1d x1e a ba)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba; ?Q368 y b x1 x1a x1b x1c x1d x1e a ba r\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (fb, s) \\<Rightarrow>\n                             IFimpl y a fb s \\<bind>\n                             (\\<lambda>(r, s).\n                                 Some (r, U s (ii, ti, ei) r)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule mIH(2))"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> param_opt i t e = None\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> lowest_tops [i, t, e] =\n                         Some (?x2.372 y b x1 x1a x1b x1c x1d x1e a ba)\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> I ba\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> (x1c,\n                          restrict_top i\n                           (?x2.372 y b x1 x1a x1b x1c x1d x1e a ba) False)\n                         \\<in> R ba\n 5. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> (x1d,\n                          restrict_top t\n                           (?x2.372 y b x1 x1a x1b x1c x1d x1e a ba) False)\n                         \\<in> R ba\n 6. \\<And>y b x1 x1a x1b x1c x1d x1e a ba.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba\\<rbrakk>\n       \\<Longrightarrow> (x1e,\n                          restrict_top e\n                           (?x2.372 y b x1 x1a x1b x1c x1d x1e a ba) False)\n                         \\<in> R ba\n 7. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite_opt\n               (restrict_top i (?x2.372 y b x1 x1a x1b x1c x1d x1e a ba)\n                 False)\n               (restrict_top t (?x2.372 y b x1 x1a x1b x1c x1d x1e a ba)\n                 False)\n               (restrict_top e (?x2.372 y b x1 x1a x1b x1c x1d x1e a ba)\n                 False))\n          \\<in> R s' \\<and>\n          I s' \\<and> les ba s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (fb, s) \\<Rightarrow>\n                             IFimpl y a fb s \\<bind>\n                             (\\<lambda>(r, s).\n                                 Some (r, U s (ii, ti, ei) r)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(simp add: map_invar_impl_les les_def;fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, ifex_ite_opt (restrict_top i y True) (restrict_top t y True)\n             (restrict_top e y True))\n        \\<in> R ba;\n        I ba; les b ba;\n        case r of\n        (r, s') \\<Rightarrow>\n          (r, ifex_ite_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False))\n          \\<in> R s' \\<and>\n          I s' \\<and> les ba s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case r of\n                           (fb, s) \\<Rightarrow>\n                             IFimpl y a fb s \\<bind>\n                             (\\<lambda>(r, s).\n                                 Some (r, U s (ii, ti, ei) r)))\n                          (\\<lambda>(r, s').\n                              (r, ifex_ite_opt i t e) \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(simp add: ifex_ite_opt.simps split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (IFimpl y a x1f x2 \\<bind>\n                           (\\<lambda>(r, s). Some (r, U s (ii, ti, ei) r)))\n                          (\\<lambda>(r, s').\n                              (r, IFC y\n                                   (case param_opt (restrict_top i y True)\n    (restrict_top t y True) (restrict_top e y True) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y True, restrict_top t y True,\n       restrict_top e y True] of\nNone \\<Rightarrow>\n  case restrict_top i y True of Trueif \\<Rightarrow> restrict_top t y True\n  | Falseif \\<Rightarrow> restrict_top e y True\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x True)\n       (restrict_top (restrict_top t y True) x True)\n       (restrict_top (restrict_top e y True) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x False)\n       (restrict_top (restrict_top t y True) x False)\n       (restrict_top (restrict_top e y True) x False))\n                                    | Some b \\<Rightarrow> b)\n                                   (case param_opt (restrict_top i y False)\n    (restrict_top t y False) (restrict_top e y False) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y False, restrict_top t y False,\n       restrict_top e y False] of\nNone \\<Rightarrow>\n  case restrict_top i y False of Trueif \\<Rightarrow> restrict_top t y False\n  | Falseif \\<Rightarrow> restrict_top e y False\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n       (restrict_top (restrict_top t y False) x True)\n       (restrict_top (restrict_top e y False) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x False)\n       (restrict_top (restrict_top t y False) x False)\n       (restrict_top (restrict_top e y False) x False))\n                                    | Some b \\<Rightarrow> b))\n                              \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule obind_rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> ospec (IFimpl y a x1f x2)\n                          (?Q406 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2 ra.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2;\n        ?Q406 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2 ra\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case ra of\n                           (r, s) \\<Rightarrow>\n                             Some (r, U s (ii, ti, ei) r))\n                          (\\<lambda>(r, s').\n                              (r, IFC y\n                                   (case param_opt (restrict_top i y True)\n    (restrict_top t y True) (restrict_top e y True) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y True, restrict_top t y True,\n       restrict_top e y True] of\nNone \\<Rightarrow>\n  case restrict_top i y True of Trueif \\<Rightarrow> restrict_top t y True\n  | Falseif \\<Rightarrow> restrict_top e y True\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x True)\n       (restrict_top (restrict_top t y True) x True)\n       (restrict_top (restrict_top e y True) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x False)\n       (restrict_top (restrict_top t y True) x False)\n       (restrict_top (restrict_top e y True) x False))\n                                    | Some b \\<Rightarrow> b)\n                                   (case param_opt (restrict_top i y False)\n    (restrict_top t y False) (restrict_top e y False) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y False, restrict_top t y False,\n       restrict_top e y False] of\nNone \\<Rightarrow>\n  case restrict_top i y False of Trueif \\<Rightarrow> restrict_top t y False\n  | Falseif \\<Rightarrow> restrict_top e y False\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n       (restrict_top (restrict_top t y False) x True)\n       (restrict_top (restrict_top e y False) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x False)\n       (restrict_top (restrict_top t y False) x False)\n       (restrict_top (restrict_top e y False) x False))\n                                    | Some b \\<Rightarrow> b))\n                              \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(rule IFimpl_rule)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> I x2\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> (a, ?n1.409 y b x1 x1a x1b x1c x1d x1e a ba r x1f\n                              x2)\n                         \\<in> R x2\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> (x1f,\n                          ?n2.409 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2)\n                         \\<in> R x2\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2 ra.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2;\n        case ra of\n        (ni, s') \\<Rightarrow>\n          (ni,\n           IFC y (?n1.409 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2)\n            (?n2.409 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2))\n          \\<in> R s' \\<and>\n          I s' \\<and> les x2 s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case ra of\n                           (r, s) \\<Rightarrow>\n                             Some (r, U s (ii, ti, ei) r))\n                          (\\<lambda>(r, s').\n                              (r, IFC y\n                                   (case param_opt (restrict_top i y True)\n    (restrict_top t y True) (restrict_top e y True) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y True, restrict_top t y True,\n       restrict_top e y True] of\nNone \\<Rightarrow>\n  case restrict_top i y True of Trueif \\<Rightarrow> restrict_top t y True\n  | Falseif \\<Rightarrow> restrict_top e y True\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x True)\n       (restrict_top (restrict_top t y True) x True)\n       (restrict_top (restrict_top e y True) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x False)\n       (restrict_top (restrict_top t y True) x False)\n       (restrict_top (restrict_top e y True) x False))\n                                    | Some b \\<Rightarrow> b)\n                                   (case param_opt (restrict_top i y False)\n    (restrict_top t y False) (restrict_top e y False) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y False, restrict_top t y False,\n       restrict_top e y False] of\nNone \\<Rightarrow>\n  case restrict_top i y False of Trueif \\<Rightarrow> restrict_top t y False\n  | Falseif \\<Rightarrow> restrict_top e y False\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n       (restrict_top (restrict_top t y False) x True)\n       (restrict_top (restrict_top e y False) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x False)\n       (restrict_top (restrict_top t y False) x False)\n       (restrict_top (restrict_top e y False) x False))\n                                    | Some b \\<Rightarrow> b))\n                              \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> (a, ?n1.409 y b x1 x1a x1b x1c x1d x1e a ba r x1f\n                              x2)\n                         \\<in> R x2\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2\\<rbrakk>\n       \\<Longrightarrow> (x1f,\n                          ?n2.409 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2)\n                         \\<in> R x2\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2 ra.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2;\n        case ra of\n        (ni, s') \\<Rightarrow>\n          (ni,\n           IFC y (?n1.409 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2)\n            (?n2.409 y b x1 x1a x1b x1c x1d x1e a ba r x1f x2))\n          \\<in> R s' \\<and>\n          I s' \\<and> les x2 s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case ra of\n                           (r, s) \\<Rightarrow>\n                             Some (r, U s (ii, ti, ei) r))\n                          (\\<lambda>(r, s').\n                              (r, IFC y\n                                   (case param_opt (restrict_top i y True)\n    (restrict_top t y True) (restrict_top e y True) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y True, restrict_top t y True,\n       restrict_top e y True] of\nNone \\<Rightarrow>\n  case restrict_top i y True of Trueif \\<Rightarrow> restrict_top t y True\n  | Falseif \\<Rightarrow> restrict_top e y True\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x True)\n       (restrict_top (restrict_top t y True) x True)\n       (restrict_top (restrict_top e y True) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x False)\n       (restrict_top (restrict_top t y True) x False)\n       (restrict_top (restrict_top e y True) x False))\n                                    | Some b \\<Rightarrow> b)\n                                   (case param_opt (restrict_top i y False)\n    (restrict_top t y False) (restrict_top e y False) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y False, restrict_top t y False,\n       restrict_top e y False] of\nNone \\<Rightarrow>\n  case restrict_top i y False of Trueif \\<Rightarrow> restrict_top t y False\n  | Falseif \\<Rightarrow> restrict_top e y False\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n       (restrict_top (restrict_top t y False) x True)\n       (restrict_top (restrict_top e y False) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x False)\n       (restrict_top (restrict_top t y False) x False)\n       (restrict_top (restrict_top e y False) x False))\n                                    | Some b \\<Rightarrow> b))\n                              \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(auto simp add: les_def)[2]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba r x1f x2 ra.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba; les b ba; r = (x1f, x2);\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2 \\<and>\n        I x2 \\<and> les ba x2;\n        case ra of\n        (ni, s') \\<Rightarrow>\n          (ni,\n           IFC y\n            (case param_opt (restrict_top i y True) (restrict_top t y True)\n                   (restrict_top e y True) of\n             None \\<Rightarrow>\n               case lowest_tops\n                     [restrict_top i y True, restrict_top t y True,\n                      restrict_top e y True] of\n               None \\<Rightarrow>\n                 case restrict_top i y True of\n                 Trueif \\<Rightarrow> restrict_top t y True\n                 | Falseif \\<Rightarrow> restrict_top e y True\n               | Some x \\<Rightarrow>\n                   IFC x\n                    (ifex_ite_opt\n                      (restrict_top (restrict_top i y True) x True)\n                      (restrict_top (restrict_top t y True) x True)\n                      (restrict_top (restrict_top e y True) x True))\n                    (ifex_ite_opt\n                      (restrict_top (restrict_top i y True) x False)\n                      (restrict_top (restrict_top t y True) x False)\n                      (restrict_top (restrict_top e y True) x False))\n             | Some b \\<Rightarrow> b)\n            (case param_opt (restrict_top i y False)\n                   (restrict_top t y False) (restrict_top e y False) of\n             None \\<Rightarrow>\n               case lowest_tops\n                     [restrict_top i y False, restrict_top t y False,\n                      restrict_top e y False] of\n               None \\<Rightarrow>\n                 case restrict_top i y False of\n                 Trueif \\<Rightarrow> restrict_top t y False\n                 | Falseif \\<Rightarrow> restrict_top e y False\n               | Some x \\<Rightarrow>\n                   IFC x\n                    (ifex_ite_opt\n                      (restrict_top (restrict_top i y False) x True)\n                      (restrict_top (restrict_top t y False) x True)\n                      (restrict_top (restrict_top e y False) x True))\n                    (ifex_ite_opt\n                      (restrict_top (restrict_top i y False) x False)\n                      (restrict_top (restrict_top t y False) x False)\n                      (restrict_top (restrict_top e y False) x False))\n             | Some b \\<Rightarrow> b))\n          \\<in> R s' \\<and>\n          I s' \\<and> les x2 s'\\<rbrakk>\n       \\<Longrightarrow> ospec\n                          (case ra of\n                           (r, s) \\<Rightarrow>\n                             Some (r, U s (ii, ti, ei) r))\n                          (\\<lambda>(r, s').\n                              (r, IFC y\n                                   (case param_opt (restrict_top i y True)\n    (restrict_top t y True) (restrict_top e y True) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y True, restrict_top t y True,\n       restrict_top e y True] of\nNone \\<Rightarrow>\n  case restrict_top i y True of Trueif \\<Rightarrow> restrict_top t y True\n  | Falseif \\<Rightarrow> restrict_top e y True\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x True)\n       (restrict_top (restrict_top t y True) x True)\n       (restrict_top (restrict_top e y True) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y True) x False)\n       (restrict_top (restrict_top t y True) x False)\n       (restrict_top (restrict_top e y True) x False))\n                                    | Some b \\<Rightarrow> b)\n                                   (case param_opt (restrict_top i y False)\n    (restrict_top t y False) (restrict_top e y False) of\n                                    None \\<Rightarrow>\ncase lowest_tops\n      [restrict_top i y False, restrict_top t y False,\n       restrict_top e y False] of\nNone \\<Rightarrow>\n  case restrict_top i y False of Trueif \\<Rightarrow> restrict_top t y False\n  | Falseif \\<Rightarrow> restrict_top e y False\n| Some x \\<Rightarrow>\n    IFC x\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n       (restrict_top (restrict_top t y False) x True)\n       (restrict_top (restrict_top e y False) x True))\n     (ifex_ite_opt (restrict_top (restrict_top i y False) x False)\n       (restrict_top (restrict_top t y False) x False)\n       (restrict_top (restrict_top e y False) x False))\n                                    | Some b \\<Rightarrow> b))\n                              \\<in> R s' \\<and>\n                              I s' \\<and>\n                              (\\<forall>ni n.\n                                  (ni, n) \\<in> R s \\<longrightarrow>\n                                  (ni, n) \\<in> R s'))", "apply(clarsimp simp add: les_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ab,\n                          IFC y\n                           (case param_opt (restrict_top i y True)\n                                  (restrict_top t y True)\n                                  (restrict_top e y True) of\n                            None \\<Rightarrow>\n                              case lowest_tops\n                                    [restrict_top i y True,\n                                     restrict_top t y True,\n                                     restrict_top e y True] of\n                              None \\<Rightarrow>\n                                case restrict_top i y True of\n                                Trueif \\<Rightarrow> restrict_top t y True\n                                | Falseif \\<Rightarrow>\n                                    restrict_top e y True\n                              | Some x \\<Rightarrow>\n                                  IFC x\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y True) x\n True)\n                                     (restrict_top (restrict_top t y True) x\n True)\n                                     (restrict_top (restrict_top e y True) x\n True))\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y True) x\n False)\n                                     (restrict_top (restrict_top t y True) x\n False)\n                                     (restrict_top (restrict_top e y True) x\n False))\n                            | Some b \\<Rightarrow> b)\n                           (case param_opt (restrict_top i y False)\n                                  (restrict_top t y False)\n                                  (restrict_top e y False) of\n                            None \\<Rightarrow>\n                              case lowest_tops\n                                    [restrict_top i y False,\n                                     restrict_top t y False,\n                                     restrict_top e y False] of\n                              None \\<Rightarrow>\n                                case restrict_top i y False of\n                                Trueif \\<Rightarrow> restrict_top t y False\n                                | Falseif \\<Rightarrow>\n                                    restrict_top e y False\n                              | Some x \\<Rightarrow>\n                                  IFC x\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y False)\n x True)\n                                     (restrict_top (restrict_top t y False)\n x True)\n                                     (restrict_top (restrict_top e y False)\n x True))\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y False)\n x False)\n                                     (restrict_top (restrict_top t y False)\n x False)\n                                     (restrict_top (restrict_top e y False)\n x False))\n                            | Some b \\<Rightarrow> b))\n                         \\<in> R (U bc (ii, ti, ei) ab) \\<and>\n                         I (U bc (ii, ti, ei) ab) \\<and>\n                         (\\<forall>ni n.\n                             (ni, n) \\<in> R s \\<longrightarrow>\n                             (ni, n) \\<in> R (U bc (ii, ti, ei) ab))", "apply(safe)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ab,\n                          IFC y\n                           (case param_opt (restrict_top i y True)\n                                  (restrict_top t y True)\n                                  (restrict_top e y True) of\n                            None \\<Rightarrow>\n                              case lowest_tops\n                                    [restrict_top i y True,\n                                     restrict_top t y True,\n                                     restrict_top e y True] of\n                              None \\<Rightarrow>\n                                case restrict_top i y True of\n                                Trueif \\<Rightarrow> restrict_top t y True\n                                | Falseif \\<Rightarrow>\n                                    restrict_top e y True\n                              | Some x \\<Rightarrow>\n                                  IFC x\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y True) x\n True)\n                                     (restrict_top (restrict_top t y True) x\n True)\n                                     (restrict_top (restrict_top e y True) x\n True))\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y True) x\n False)\n                                     (restrict_top (restrict_top t y True) x\n False)\n                                     (restrict_top (restrict_top e y True) x\n False))\n                            | Some b \\<Rightarrow> b)\n                           (case param_opt (restrict_top i y False)\n                                  (restrict_top t y False)\n                                  (restrict_top e y False) of\n                            None \\<Rightarrow>\n                              case lowest_tops\n                                    [restrict_top i y False,\n                                     restrict_top t y False,\n                                     restrict_top e y False] of\n                              None \\<Rightarrow>\n                                case restrict_top i y False of\n                                Trueif \\<Rightarrow> restrict_top t y False\n                                | Falseif \\<Rightarrow>\n                                    restrict_top e y False\n                              | Some x \\<Rightarrow>\n                                  IFC x\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y False)\n x True)\n                                     (restrict_top (restrict_top t y False)\n x True)\n                                     (restrict_top (restrict_top e y False)\n x True))\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y False)\n x False)\n                                     (restrict_top (restrict_top t y False)\n x False)\n                                     (restrict_top (restrict_top e y False)\n x False))\n                            | Some b \\<Rightarrow> b))\n                         \\<in> R (U bc (ii, ti, ei) ab)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> I (U bc (ii, ti, ei) ab)\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "using map_invar_rule3"], ["proof (prove)\nusing this:\n  I ?s \\<Longrightarrow> R (U ?s (?ii, ?ti, ?ei) ?ri) = R ?s\n\ngoal (3 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ab,\n                          IFC y\n                           (case param_opt (restrict_top i y True)\n                                  (restrict_top t y True)\n                                  (restrict_top e y True) of\n                            None \\<Rightarrow>\n                              case lowest_tops\n                                    [restrict_top i y True,\n                                     restrict_top t y True,\n                                     restrict_top e y True] of\n                              None \\<Rightarrow>\n                                case restrict_top i y True of\n                                Trueif \\<Rightarrow> restrict_top t y True\n                                | Falseif \\<Rightarrow>\n                                    restrict_top e y True\n                              | Some x \\<Rightarrow>\n                                  IFC x\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y True) x\n True)\n                                     (restrict_top (restrict_top t y True) x\n True)\n                                     (restrict_top (restrict_top e y True) x\n True))\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y True) x\n False)\n                                     (restrict_top (restrict_top t y True) x\n False)\n                                     (restrict_top (restrict_top e y True) x\n False))\n                            | Some b \\<Rightarrow> b)\n                           (case param_opt (restrict_top i y False)\n                                  (restrict_top t y False)\n                                  (restrict_top e y False) of\n                            None \\<Rightarrow>\n                              case lowest_tops\n                                    [restrict_top i y False,\n                                     restrict_top t y False,\n                                     restrict_top e y False] of\n                              None \\<Rightarrow>\n                                case restrict_top i y False of\n                                Trueif \\<Rightarrow> restrict_top t y False\n                                | Falseif \\<Rightarrow>\n                                    restrict_top e y False\n                              | Some x \\<Rightarrow>\n                                  IFC x\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y False)\n x True)\n                                     (restrict_top (restrict_top t y False)\n x True)\n                                     (restrict_top (restrict_top e y False)\n x True))\n                                   (ifex_ite_opt\n                                     (restrict_top (restrict_top i y False)\n x False)\n                                     (restrict_top (restrict_top t y False)\n x False)\n                                     (restrict_top (restrict_top e y False)\n x False))\n                            | Some b \\<Rightarrow> b))\n                         \\<in> R (U bc (ii, ti, ei) ab)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> I (U bc (ii, ti, ei) ab)\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "apply(presburger)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> I (U bc (ii, ti, ei) ab)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "apply(rule map_invar_rule2)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> I (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (?ii452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc,\n                          ?it452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f\n                                   x2 ab bc)\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (?ti452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc,\n                          ?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f\n                                   x2 ab bc)\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (?ei452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc,\n                          ?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f\n                                   x2 ab bc)\n 5. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (?ri452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc,\n                          ifex_ite_opt\n                           (?it452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc))\n                         \\<in> R (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f\n                                   x2 ab bc)\n 6. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> U (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                          (?ii452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                            bc,\n                           ?ti452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                            bc,\n                           ?ei452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                            bc)\n                          (?ri452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                            bc) =\n                         U bc (ii, ti, ei) ab\n 7. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "prefer 6"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> U (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                          (?ii452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                            bc,\n                           ?ti452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                            bc,\n                           ?ei452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                            bc)\n                          (?ri452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                            bc) =\n                         U bc (ii, ti, ei) ab\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> I (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (?ii452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc,\n                          ?it452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f\n                                   x2 ab bc)\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (?ti452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc,\n                          ?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f\n                                   x2 ab bc)\n 5. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (?ei452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc,\n                          ?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f\n                                   x2 ab bc)\n 6. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (?ri452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc,\n                          ifex_ite_opt\n                           (?it452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc))\n                         \\<in> R (?s452 y b x1 x1a x1b x1c x1d x1e a ba x1f\n                                   x2 ab bc)\n 7. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "apply(blast)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> I bc\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ii,\n                          ?it452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ti,\n                          ?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ei,\n                          ?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 5. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ab,\n                          ifex_ite_opt\n                           (?it452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc))\n                         \\<in> R bc\n 6. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "apply(blast)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ii,\n                          ?it452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ti,\n                          ?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ei,\n                          ?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ab,\n                          ifex_ite_opt\n                           (?it452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc))\n                         \\<in> R bc\n 5. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "apply(blast)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ti,\n                          ?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ei,\n                          ?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ab,\n                          ifex_ite_opt i\n                           (?tt452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc)\n                           (?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc))\n                         \\<in> R bc\n 4. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "apply(blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ei,\n                          ?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                           bc)\n                         \\<in> R bc\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ab,\n                          ifex_ite_opt i t\n                           (?et452 y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab\n                             bc))\n                         \\<in> R bc\n 3. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "apply(blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc\\<rbrakk>\n       \\<Longrightarrow> (ab, ifex_ite_opt i t e) \\<in> R bc\n 2. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "apply(clarsimp simp add: ifex_ite_opt.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "using map_invar_rule3"], ["proof (prove)\nusing this:\n  I ?s \\<Longrightarrow> R (U ?s (?ii, ?ti, ?ei) ?ri) = R ?s\n\ngoal (1 subgoal):\n 1. \\<And>y b x1 x1a x1b x1c x1d x1e a ba x1f x2 ab bc ni n.\n       \\<lbrakk>\\<And>i t e.\n                   param_opt i t e = None \\<Longrightarrow>\n                   \\<exists>y. lowest_tops [i, t, e] = Some y;\n        I s; (ii, i) \\<in> R s; (ti, t) \\<in> R s; (ei, e) \\<in> R s;\n        M s (ii, ti, ei) = None; param_opt i t e = None;\n        lowest_tops [i, t, e] = Some y; I b;\n        \\<forall>ni n.\n           (ni, n) \\<in> R s \\<longrightarrow> (ni, n) \\<in> R b;\n        (x1, restrict_top i y True) \\<in> R b;\n        (x1a, restrict_top t y True) \\<in> R b;\n        (x1b, restrict_top e y True) \\<in> R b;\n        (x1c, restrict_top i y False) \\<in> R b;\n        (x1d, restrict_top t y False) \\<in> R b;\n        (x1e, restrict_top e y False) \\<in> R b;\n        (a, case param_opt (restrict_top i y True) (restrict_top t y True)\n                  (restrict_top e y True) of\n            None \\<Rightarrow>\n              case lowest_tops\n                    [restrict_top i y True, restrict_top t y True,\n                     restrict_top e y True] of\n              None \\<Rightarrow>\n                case restrict_top i y True of\n                Trueif \\<Rightarrow> restrict_top t y True\n                | Falseif \\<Rightarrow> restrict_top e y True\n              | Some x \\<Rightarrow>\n                  IFC x\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x True)\n                     (restrict_top (restrict_top t y True) x True)\n                     (restrict_top (restrict_top e y True) x True))\n                   (ifex_ite_opt\n                     (restrict_top (restrict_top i y True) x False)\n                     (restrict_top (restrict_top t y True) x False)\n                     (restrict_top (restrict_top e y True) x False))\n            | Some b \\<Rightarrow> b)\n        \\<in> R ba;\n        I ba;\n        \\<forall>ni n.\n           (ni, n) \\<in> R b \\<longrightarrow> (ni, n) \\<in> R ba;\n        (x1f,\n         case param_opt (restrict_top i y False) (restrict_top t y False)\n               (restrict_top e y False) of\n         None \\<Rightarrow>\n           case lowest_tops\n                 [restrict_top i y False, restrict_top t y False,\n                  restrict_top e y False] of\n           None \\<Rightarrow>\n             case restrict_top i y False of\n             Trueif \\<Rightarrow> restrict_top t y False\n             | Falseif \\<Rightarrow> restrict_top e y False\n           | Some x \\<Rightarrow>\n               IFC x\n                (ifex_ite_opt (restrict_top (restrict_top i y False) x True)\n                  (restrict_top (restrict_top t y False) x True)\n                  (restrict_top (restrict_top e y False) x True))\n                (ifex_ite_opt\n                  (restrict_top (restrict_top i y False) x False)\n                  (restrict_top (restrict_top t y False) x False)\n                  (restrict_top (restrict_top e y False) x False))\n         | Some b \\<Rightarrow> b)\n        \\<in> R x2;\n        (ab,\n         IFC y\n          (case param_opt (restrict_top i y True) (restrict_top t y True)\n                 (restrict_top e y True) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y True, restrict_top t y True,\n                    restrict_top e y True] of\n             None \\<Rightarrow>\n               case restrict_top i y True of\n               Trueif \\<Rightarrow> restrict_top t y True\n               | Falseif \\<Rightarrow> restrict_top e y True\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x True)\n                    (restrict_top (restrict_top t y True) x True)\n                    (restrict_top (restrict_top e y True) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y True) x False)\n                    (restrict_top (restrict_top t y True) x False)\n                    (restrict_top (restrict_top e y True) x False))\n           | Some b \\<Rightarrow> b)\n          (case param_opt (restrict_top i y False) (restrict_top t y False)\n                 (restrict_top e y False) of\n           None \\<Rightarrow>\n             case lowest_tops\n                   [restrict_top i y False, restrict_top t y False,\n                    restrict_top e y False] of\n             None \\<Rightarrow>\n               case restrict_top i y False of\n               Trueif \\<Rightarrow> restrict_top t y False\n               | Falseif \\<Rightarrow> restrict_top e y False\n             | Some x \\<Rightarrow>\n                 IFC x\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x True)\n                    (restrict_top (restrict_top t y False) x True)\n                    (restrict_top (restrict_top e y False) x True))\n                  (ifex_ite_opt\n                    (restrict_top (restrict_top i y False) x False)\n                    (restrict_top (restrict_top t y False) x False)\n                    (restrict_top (restrict_top e y False) x False))\n           | Some b \\<Rightarrow> b))\n        \\<in> R bc;\n        I x2;\n        \\<forall>ni n.\n           (ni, n) \\<in> R ba \\<longrightarrow> (ni, n) \\<in> R x2;\n        I bc;\n        \\<forall>ni n.\n           (ni, n) \\<in> R x2 \\<longrightarrow> (ni, n) \\<in> R bc;\n        (ni, n) \\<in> R s\\<rbrakk>\n       \\<Longrightarrow> (ni, n) \\<in> R (U bc (ii, ti, ei) ab)", "by presburger"], ["proof (state)\nthis:\n  ospec (ite_impl_lu ii ti ei s)\n   (\\<lambda>(r, s').\n       (r, ifex_ite_opt i t e) \\<in> R s' \\<and> I s' \\<and> les s s')\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}