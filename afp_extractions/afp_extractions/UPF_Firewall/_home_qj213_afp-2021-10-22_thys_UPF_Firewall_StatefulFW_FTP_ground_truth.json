{"file_name": "/home/qj213/afp-2021-10-22/thys/UPF_Firewall/StatefulFW/FTP.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/UPF_Firewall", "problem_names": ["lemma subnetOf_lemma: \"(a::int) \\<noteq> (c::int) \\<Longrightarrow> \\<forall>x\\<in>subnet_of (a, b::port). (c, d) \\<notin> x\"", "lemma subnetOf_lemma2: \" \\<forall>x\\<in>subnet_of (a::int, b::port). (a, b) \\<in>  x\"", "lemma subnetOf_lemma3: \"(\\<exists>x. x \\<in> subnet_of (a::int, b::port))\"", "lemma subnetOf_lemma4: \"\\<exists>x\\<in>subnet_of (a::int, b::port). (a, c::port) \\<in> x\"", "lemma port_open_lemma: \"\\<not> (Ex (port_open [] (x::port)))\"", "lemmas FTPLemmas =  TRPolicy_def applyPolicy_def policy2MON_def \n                    Let_def in_subnet_def src_def\n                    dest_def  subnet_of_int_def \n                    is_init_def p_accept_def port_open_def is_ftp_data_def is_ftp_close_def \n                    is_ftp_port_request_def content_def PortCombinators\n                    exI subnetOf_lemma subnetOf_lemma2 subnetOf_lemma3 subnetOf_lemma4 \n                    NetworkCore.id_def adr\\<^sub>i\\<^sub>pLemmas port_open_lemma\n                    bind_SE_def unit_SE_def valid_SE_def"], "translations": [["", "lemma subnetOf_lemma: \"(a::int) \\<noteq> (c::int) \\<Longrightarrow> \\<forall>x\\<in>subnet_of (a, b::port). (c, d) \\<notin> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> c \\<Longrightarrow>\n    \\<forall>x\\<in>subnet_of (a, b). (c, d) \\<notin> x", "by (rule ballI, simp add: subnet_of_int_def)"], ["", "lemma subnetOf_lemma2: \" \\<forall>x\\<in>subnet_of (a::int, b::port). (a, b) \\<in>  x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>subnet_of (a, b). (a, b) \\<in> x", "by (rule ballI, simp add: subnet_of_int_def)"], ["", "lemma subnetOf_lemma3: \"(\\<exists>x. x \\<in> subnet_of (a::int, b::port))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> subnet_of (a, b)", "by (rule exI,  simp add: subnet_of_int_def)"], ["", "lemma subnetOf_lemma4: \"\\<exists>x\\<in>subnet_of (a::int, b::port). (a, c::port) \\<in> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>subnet_of (a, b). (a, c) \\<in> x", "by (rule bexI, simp_all add: subnet_of_int_def)"], ["", "lemma port_open_lemma: \"\\<not> (Ex (port_open [] (x::port)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Ex (port_open [] x)", "by (simp add: port_open_def)"], ["", "lemmas FTPLemmas =  TRPolicy_def applyPolicy_def policy2MON_def \n                    Let_def in_subnet_def src_def\n                    dest_def  subnet_of_int_def \n                    is_init_def p_accept_def port_open_def is_ftp_data_def is_ftp_close_def \n                    is_ftp_port_request_def content_def PortCombinators\n                    exI subnetOf_lemma subnetOf_lemma2 subnetOf_lemma3 subnetOf_lemma4 \n                    NetworkCore.id_def adr\\<^sub>i\\<^sub>pLemmas port_open_lemma\n                    bind_SE_def unit_SE_def valid_SE_def"], ["", "end"]]}