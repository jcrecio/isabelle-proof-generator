{"file_name": "/home/qj213/afp-2021-10-22/thys/UPF_Firewall/Examples/Transformation/Transformation02.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/UPF_Firewall", "problem_names": ["lemmas PolicyLemmas = Policy_def D1a_def D1b_def D2a_def D2b_def", "lemmas PolicyL =  Policy_def\n  FWLink_def\n  any_def\n  i10_32_def\n  i4_32_def\n  eth_intern_def\n  eth_private_def\n  D1a_def D1b_def D2a_def D2b_def", "lemmas fixDefs = fixElements_def NetworkCore.id_def NetworkCore.content_def", "lemma sets_distinct1: \"(n::int) \\<noteq> m \\<Longrightarrow> {(a,b). a = n} \\<noteq> {(a,b). a = m}\"", "lemma sets_distinct2: \"(m::int) \\<noteq> n \\<Longrightarrow> {(a,b). a = n} \\<noteq> {(a,b). a = m}\"", "lemma sets_distinct3: \"{((a::int),(b::int)). a = n} \\<noteq> {(a,b). a > n}\"", "lemma sets_distinct4: \"{((a::int),(b::int)). a > n} \\<noteq> {(a,b). a = n}\"", "lemma aux: \"\\<lbrakk>a \\<in> c; a \\<notin> d; c = d\\<rbrakk> \\<Longrightarrow> False\"", "lemma sets_distinct5: \"(s::int) < g \\<Longrightarrow> {(a::int, b::int). a = s} \\<noteq> {(a::int, b::int).  g < a}\"", "lemma sets_distinct6: \"(s::int) < g \\<Longrightarrow> {(a::int, b::int).  g < a} \\<noteq> {(a::int, b::int).  a = s}\"", "lemma distinctNets: \"FWLink \\<noteq> any \\<and> FWLink \\<noteq> i4_32 \\<and> FWLink \\<noteq> i10_32 \\<and>\nFWLink \\<noteq> eth_intern \\<and> FWLink \\<noteq> eth_private \\<and> any \\<noteq> FWLink \\<and> any \\<noteq>\ni4_32 \\<and> any \\<noteq> i10_32 \\<and> any \\<noteq> eth_intern \\<and> any \\<noteq> eth_private \\<and> i4_32 \\<noteq>\nFWLink \\<and> i4_32 \\<noteq> any \\<and> i4_32 \\<noteq> i10_32 \\<and> i4_32 \\<noteq> eth_intern \\<and> i4_32 \\<noteq>\neth_private \\<and> i10_32 \\<noteq> FWLink \\<and> i10_32 \\<noteq> any \\<and> i10_32 \\<noteq> i4_32 \\<and> i10_32\n\\<noteq> eth_intern \\<and> i10_32 \\<noteq> eth_private \\<and> eth_intern \\<noteq> FWLink \\<and> eth_intern\n\\<noteq> any \\<and> eth_intern \\<noteq> i4_32 \\<and> eth_intern \\<noteq> i10_32 \\<and> eth_intern \\<noteq>\neth_private \\<and> eth_private \\<noteq> FWLink \\<and> eth_private \\<noteq> any \\<and> eth_private \\<noteq>\ni4_32 \\<and> eth_private \\<noteq> i10_32 \\<and> eth_private \\<noteq> eth_intern \"", "lemma aux5: \"\\<lbrakk>x \\<noteq> a; y\\<noteq>b; (x \\<noteq> y \\<and> x \\<noteq> b) \\<or>  (a \\<noteq> b \\<and> a \\<noteq> y)\\<rbrakk> \\<Longrightarrow> {x,a} \\<noteq> {y,b}\"", "lemma aux2: \"{a,b} = {b,a}\"", "lemma ANDex: \"allNetsDistinct (policy2list Policy)\"", "lemma all_in_list: \"all_in_list (policy2list Policy) (Nets_List Policy)\"", "lemmas normalizeUnfold =   normalize_def PolicyL Nets_List_def bothNets_def aux aux2 bothNets_def sets_distinct1 sets_distinct2 sets_distinct3 sets_distinct4 sets_distinct5 sets_distinct6  aux5 aux2"], "translations": [["", "lemmas PolicyLemmas = Policy_def D1a_def D1b_def D2a_def D2b_def"], ["", "lemmas PolicyL =  Policy_def\n  FWLink_def\n  any_def\n  i10_32_def\n  i4_32_def\n  eth_intern_def\n  eth_private_def\n  D1a_def D1b_def D2a_def D2b_def"], ["", "consts fixID :: id"], ["", "consts fixContent :: DummyContent"], ["", "definition \"fixElements p = (id p = fixID \\<and> content p = fixContent)\""], ["", "lemmas fixDefs = fixElements_def NetworkCore.id_def NetworkCore.content_def"], ["", "lemma sets_distinct1: \"(n::int) \\<noteq> m \\<Longrightarrow> {(a,b). a = n} \\<noteq> {(a,b). a = m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> m \\<Longrightarrow> {(a, b). a = n} \\<noteq> {(a, b). a = m}", "by auto"], ["", "lemma sets_distinct2: \"(m::int) \\<noteq> n \\<Longrightarrow> {(a,b). a = n} \\<noteq> {(a,b). a = m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> n \\<Longrightarrow> {(a, b). a = n} \\<noteq> {(a, b). a = m}", "by auto"], ["", "lemma sets_distinct3: \"{((a::int),(b::int)). a = n} \\<noteq> {(a,b). a > n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(a, b). a = n} \\<noteq> {(a, b). n < a}", "by auto"], ["", "lemma sets_distinct4: \"{((a::int),(b::int)). a > n} \\<noteq> {(a,b). a = n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(a, b). n < a} \\<noteq> {(a, b). a = n}", "by auto"], ["", "lemma aux: \"\\<lbrakk>a \\<in> c; a \\<notin> d; c = d\\<rbrakk> \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> c; a \\<notin> d; c = d\\<rbrakk> \\<Longrightarrow> False", "by auto"], ["", "lemma sets_distinct5: \"(s::int) < g \\<Longrightarrow> {(a::int, b::int). a = s} \\<noteq> {(a::int, b::int).  g < a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s < g \\<Longrightarrow> {(a, b). a = s} \\<noteq> {(a, b). g < a}", "apply (auto simp: sets_distinct3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subgoal_tac \"(s,4) \\<in> {(a::int,b::int). a = (s)}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a};\n     (s, 4) \\<in> {(a, b). a = s}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<in> {(a, b). a = s}", "apply (subgoal_tac \"(s,4) \\<notin> {(a::int,b::int). g < a}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a};\n     (s, 4) \\<in> {(a, b). a = s}; (s, 4) \\<notin> {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a};\n     (s, 4) \\<in> {(a, b). a = s}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<notin> {(a, b). g < a}\n 3. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<in> {(a, b). a = s}", "apply (erule aux)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a};\n     (s, 4) \\<notin> {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<notin> ?d3\n 2. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a};\n     (s, 4) \\<notin> {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> {(a, b). a = s} = ?d3\n 3. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a};\n     (s, 4) \\<in> {(a, b). a = s}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<notin> {(a, b). g < a}\n 4. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<in> {(a, b). a = s}", "apply assumption+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a};\n     (s, 4) \\<in> {(a, b). a = s}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<notin> {(a, b). g < a}\n 2. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<in> {(a, b). a = s}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s < g; {(a, b). a = s} = {(a, b). g < a}\\<rbrakk>\n    \\<Longrightarrow> (s, 4) \\<in> {(a, b). a = s}", "by blast"], ["", "lemma sets_distinct6: \"(s::int) < g \\<Longrightarrow> {(a::int, b::int).  g < a} \\<noteq> {(a::int, b::int).  a = s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s < g \\<Longrightarrow> {(a, b). g < a} \\<noteq> {(a, b). a = s}", "apply (rule not_sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s < g \\<Longrightarrow> {(a, b). a = s} \\<noteq> {(a, b). g < a}", "apply (rule sets_distinct5)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s < g \\<Longrightarrow> s < g", "by simp"], ["", "lemma distinctNets: \"FWLink \\<noteq> any \\<and> FWLink \\<noteq> i4_32 \\<and> FWLink \\<noteq> i10_32 \\<and>\nFWLink \\<noteq> eth_intern \\<and> FWLink \\<noteq> eth_private \\<and> any \\<noteq> FWLink \\<and> any \\<noteq>\ni4_32 \\<and> any \\<noteq> i10_32 \\<and> any \\<noteq> eth_intern \\<and> any \\<noteq> eth_private \\<and> i4_32 \\<noteq>\nFWLink \\<and> i4_32 \\<noteq> any \\<and> i4_32 \\<noteq> i10_32 \\<and> i4_32 \\<noteq> eth_intern \\<and> i4_32 \\<noteq>\neth_private \\<and> i10_32 \\<noteq> FWLink \\<and> i10_32 \\<noteq> any \\<and> i10_32 \\<noteq> i4_32 \\<and> i10_32\n\\<noteq> eth_intern \\<and> i10_32 \\<noteq> eth_private \\<and> eth_intern \\<noteq> FWLink \\<and> eth_intern\n\\<noteq> any \\<and> eth_intern \\<noteq> i4_32 \\<and> eth_intern \\<noteq> i10_32 \\<and> eth_intern \\<noteq>\neth_private \\<and> eth_private \\<noteq> FWLink \\<and> eth_private \\<noteq> any \\<and> eth_private \\<noteq>\ni4_32 \\<and> eth_private \\<noteq> i10_32 \\<and> eth_private \\<noteq> eth_intern \""], ["proof (prove)\ngoal (1 subgoal):\n 1. FWLink \\<noteq> any \\<and>\n    FWLink \\<noteq> i4_32 \\<and>\n    FWLink \\<noteq> i10_32 \\<and>\n    FWLink \\<noteq> eth_intern \\<and>\n    FWLink \\<noteq> eth_private \\<and>\n    any \\<noteq> FWLink \\<and>\n    any \\<noteq> i4_32 \\<and>\n    any \\<noteq> i10_32 \\<and>\n    any \\<noteq> eth_intern \\<and>\n    any \\<noteq> eth_private \\<and>\n    i4_32 \\<noteq> FWLink \\<and>\n    i4_32 \\<noteq> any \\<and>\n    i4_32 \\<noteq> i10_32 \\<and>\n    i4_32 \\<noteq> eth_intern \\<and>\n    i4_32 \\<noteq> eth_private \\<and>\n    i10_32 \\<noteq> FWLink \\<and>\n    i10_32 \\<noteq> any \\<and>\n    i10_32 \\<noteq> i4_32 \\<and>\n    i10_32 \\<noteq> eth_intern \\<and>\n    i10_32 \\<noteq> eth_private \\<and>\n    eth_intern \\<noteq> FWLink \\<and>\n    eth_intern \\<noteq> any \\<and>\n    eth_intern \\<noteq> i4_32 \\<and>\n    eth_intern \\<noteq> i10_32 \\<and>\n    eth_intern \\<noteq> eth_private \\<and>\n    eth_private \\<noteq> FWLink \\<and>\n    eth_private \\<noteq> any \\<and>\n    eth_private \\<noteq> i4_32 \\<and>\n    eth_private \\<noteq> i10_32 \\<and> eth_private \\<noteq> eth_intern", "by (simp add: PolicyL sets_distinct1 sets_distinct2 sets_distinct3\n      sets_distinct4 sets_distinct5 sets_distinct6)"], ["", "lemma aux5: \"\\<lbrakk>x \\<noteq> a; y\\<noteq>b; (x \\<noteq> y \\<and> x \\<noteq> b) \\<or>  (a \\<noteq> b \\<and> a \\<noteq> y)\\<rbrakk> \\<Longrightarrow> {x,a} \\<noteq> {y,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> a; y \\<noteq> b;\n     x \\<noteq> y \\<and> x \\<noteq> b \\<or>\n     a \\<noteq> b \\<and> a \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> {x, a} \\<noteq> {y, b}", "by auto"], ["", "lemma aux2: \"{a,b} = {b,a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a, b} = {b, a}", "by auto"], ["", "lemma ANDex: \"allNetsDistinct (policy2list Policy)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allNetsDistinct (policy2list Policy)", "apply (simp add: PolicyLemmas allNetsDistinct_def distinctNets)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<noteq> b \\<and>\n       (a = i10_32 \\<or>\n        a = i4_32 \\<or>\n        a = eth_private \\<or> a = eth_intern \\<or> a = any) \\<and>\n       (b = i10_32 \\<or>\n        b = i4_32 \\<or>\n        b = eth_private \\<or>\n        b = eth_intern \\<or> b = any) \\<longrightarrow>\n       netsDistinct a b", "apply (simp add: PolicyL)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<noteq> b \\<and>\n       (a = {{(a, b). a = 3}} \\<or>\n        a = {{(a, b). a = 2}} \\<or>\n        a = {{(a, b). a = 5}} \\<or>\n        a = {{(a, b). a = 4}} \\<or> a = {{(a, b). 5 < a}}) \\<and>\n       (b = {{(a, b). a = 3}} \\<or>\n        b = {{(a, b). a = 2}} \\<or>\n        b = {{(a, b). a = 5}} \\<or>\n        b = {{(a, b). a = 4}} \\<or> b = {{(a, b). 5 < a}}) \\<longrightarrow>\n       netsDistinct a b", "by (auto simp: PLemmas PolicyL netsDistinct_def sets_distinct5 sets_distinct6 sets_distinct1\n                 sets_distinct2)"], ["", "fun (sequential) numberOfRules where \n  \"numberOfRules (a\\<oplus>b) = numberOfRules a + numberOfRules b\"\n|\"numberOfRules a = (1::int)\""], ["", "fun numberOfRulesList where \n  \"numberOfRulesList  (x#xs) = ((numberOfRules x)#(numberOfRulesList xs)) \"\n|\"numberOfRulesList [] = []\""], ["", "lemma all_in_list: \"all_in_list (policy2list Policy) (Nets_List Policy)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. all_in_list (policy2list Policy) (Nets_List Policy)", "apply (simp add: PolicyLemmas)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {any, i10_32}\n    \\<in> set (Nets_List\n                (DenyAll \\<oplus>\n                 (AllowPortFromTo any i10_32 21 \\<oplus>\n                  AllowPortFromTo any i10_32 43) \\<oplus>\n                 AllowPortFromTo any i4_32 21 \\<oplus>\n                 (AllowPortFromTo eth_private any 1 \\<oplus>\n                  AllowPortFromTo eth_private any 2) \\<oplus>\n                 AllowPortFromTo eth_intern any 1 \\<oplus>\n                 AllowPortFromTo eth_intern any 2)) \\<and>\n    {any, i4_32}\n    \\<in> set (Nets_List\n                (DenyAll \\<oplus>\n                 (AllowPortFromTo any i10_32 21 \\<oplus>\n                  AllowPortFromTo any i10_32 43) \\<oplus>\n                 AllowPortFromTo any i4_32 21 \\<oplus>\n                 (AllowPortFromTo eth_private any 1 \\<oplus>\n                  AllowPortFromTo eth_private any 2) \\<oplus>\n                 AllowPortFromTo eth_intern any 1 \\<oplus>\n                 AllowPortFromTo eth_intern any 2)) \\<and>\n    {eth_private, any}\n    \\<in> set (Nets_List\n                (DenyAll \\<oplus>\n                 (AllowPortFromTo any i10_32 21 \\<oplus>\n                  AllowPortFromTo any i10_32 43) \\<oplus>\n                 AllowPortFromTo any i4_32 21 \\<oplus>\n                 (AllowPortFromTo eth_private any 1 \\<oplus>\n                  AllowPortFromTo eth_private any 2) \\<oplus>\n                 AllowPortFromTo eth_intern any 1 \\<oplus>\n                 AllowPortFromTo eth_intern any 2)) \\<and>\n    {eth_intern, any}\n    \\<in> set (Nets_List\n                (DenyAll \\<oplus>\n                 (AllowPortFromTo any i10_32 21 \\<oplus>\n                  AllowPortFromTo any i10_32 43) \\<oplus>\n                 AllowPortFromTo any i4_32 21 \\<oplus>\n                 (AllowPortFromTo eth_private any 1 \\<oplus>\n                  AllowPortFromTo eth_private any 2) \\<oplus>\n                 AllowPortFromTo eth_intern any 1 \\<oplus>\n                 AllowPortFromTo eth_intern any 2))", "apply (unfold Nets_List_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {any, i10_32}\n    \\<in> set (makeSets\n                (normBothNets\n                  (bothNets\n                    (DenyAll \\<oplus>\n                     (AllowPortFromTo any i10_32 21 \\<oplus>\n                      AllowPortFromTo any i10_32 43) \\<oplus>\n                     AllowPortFromTo any i4_32 21 \\<oplus>\n                     (AllowPortFromTo eth_private any 1 \\<oplus>\n                      AllowPortFromTo eth_private any 2) \\<oplus>\n                     AllowPortFromTo eth_intern any 1 \\<oplus>\n                     AllowPortFromTo eth_intern any 2)))) \\<and>\n    {any, i4_32}\n    \\<in> set (makeSets\n                (normBothNets\n                  (bothNets\n                    (DenyAll \\<oplus>\n                     (AllowPortFromTo any i10_32 21 \\<oplus>\n                      AllowPortFromTo any i10_32 43) \\<oplus>\n                     AllowPortFromTo any i4_32 21 \\<oplus>\n                     (AllowPortFromTo eth_private any 1 \\<oplus>\n                      AllowPortFromTo eth_private any 2) \\<oplus>\n                     AllowPortFromTo eth_intern any 1 \\<oplus>\n                     AllowPortFromTo eth_intern any 2)))) \\<and>\n    {eth_private, any}\n    \\<in> set (makeSets\n                (normBothNets\n                  (bothNets\n                    (DenyAll \\<oplus>\n                     (AllowPortFromTo any i10_32 21 \\<oplus>\n                      AllowPortFromTo any i10_32 43) \\<oplus>\n                     AllowPortFromTo any i4_32 21 \\<oplus>\n                     (AllowPortFromTo eth_private any 1 \\<oplus>\n                      AllowPortFromTo eth_private any 2) \\<oplus>\n                     AllowPortFromTo eth_intern any 1 \\<oplus>\n                     AllowPortFromTo eth_intern any 2)))) \\<and>\n    {eth_intern, any}\n    \\<in> set (makeSets\n                (normBothNets\n                  (bothNets\n                    (DenyAll \\<oplus>\n                     (AllowPortFromTo any i10_32 21 \\<oplus>\n                      AllowPortFromTo any i10_32 43) \\<oplus>\n                     AllowPortFromTo any i4_32 21 \\<oplus>\n                     (AllowPortFromTo eth_private any 1 \\<oplus>\n                      AllowPortFromTo eth_private any 2) \\<oplus>\n                     AllowPortFromTo eth_intern any 1 \\<oplus>\n                     AllowPortFromTo eth_intern any 2))))", "apply (unfold bothNets_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {any, i10_32}\n    \\<in> set (makeSets\n                (normBothNets\n                  (zip (srcnets\n                         (DenyAll \\<oplus>\n                          (AllowPortFromTo any i10_32 21 \\<oplus>\n                           AllowPortFromTo any i10_32 43) \\<oplus>\n                          AllowPortFromTo any i4_32 21 \\<oplus>\n                          (AllowPortFromTo eth_private any 1 \\<oplus>\n                           AllowPortFromTo eth_private any 2) \\<oplus>\n                          AllowPortFromTo eth_intern any 1 \\<oplus>\n                          AllowPortFromTo eth_intern any 2))\n                    (destnets\n                      (DenyAll \\<oplus>\n                       (AllowPortFromTo any i10_32 21 \\<oplus>\n                        AllowPortFromTo any i10_32 43) \\<oplus>\n                       AllowPortFromTo any i4_32 21 \\<oplus>\n                       (AllowPortFromTo eth_private any 1 \\<oplus>\n                        AllowPortFromTo eth_private any 2) \\<oplus>\n                       AllowPortFromTo eth_intern any 1 \\<oplus>\n                       AllowPortFromTo eth_intern any 2))))) \\<and>\n    {any, i4_32}\n    \\<in> set (makeSets\n                (normBothNets\n                  (zip (srcnets\n                         (DenyAll \\<oplus>\n                          (AllowPortFromTo any i10_32 21 \\<oplus>\n                           AllowPortFromTo any i10_32 43) \\<oplus>\n                          AllowPortFromTo any i4_32 21 \\<oplus>\n                          (AllowPortFromTo eth_private any 1 \\<oplus>\n                           AllowPortFromTo eth_private any 2) \\<oplus>\n                          AllowPortFromTo eth_intern any 1 \\<oplus>\n                          AllowPortFromTo eth_intern any 2))\n                    (destnets\n                      (DenyAll \\<oplus>\n                       (AllowPortFromTo any i10_32 21 \\<oplus>\n                        AllowPortFromTo any i10_32 43) \\<oplus>\n                       AllowPortFromTo any i4_32 21 \\<oplus>\n                       (AllowPortFromTo eth_private any 1 \\<oplus>\n                        AllowPortFromTo eth_private any 2) \\<oplus>\n                       AllowPortFromTo eth_intern any 1 \\<oplus>\n                       AllowPortFromTo eth_intern any 2))))) \\<and>\n    {eth_private, any}\n    \\<in> set (makeSets\n                (normBothNets\n                  (zip (srcnets\n                         (DenyAll \\<oplus>\n                          (AllowPortFromTo any i10_32 21 \\<oplus>\n                           AllowPortFromTo any i10_32 43) \\<oplus>\n                          AllowPortFromTo any i4_32 21 \\<oplus>\n                          (AllowPortFromTo eth_private any 1 \\<oplus>\n                           AllowPortFromTo eth_private any 2) \\<oplus>\n                          AllowPortFromTo eth_intern any 1 \\<oplus>\n                          AllowPortFromTo eth_intern any 2))\n                    (destnets\n                      (DenyAll \\<oplus>\n                       (AllowPortFromTo any i10_32 21 \\<oplus>\n                        AllowPortFromTo any i10_32 43) \\<oplus>\n                       AllowPortFromTo any i4_32 21 \\<oplus>\n                       (AllowPortFromTo eth_private any 1 \\<oplus>\n                        AllowPortFromTo eth_private any 2) \\<oplus>\n                       AllowPortFromTo eth_intern any 1 \\<oplus>\n                       AllowPortFromTo eth_intern any 2))))) \\<and>\n    {eth_intern, any}\n    \\<in> set (makeSets\n                (normBothNets\n                  (zip (srcnets\n                         (DenyAll \\<oplus>\n                          (AllowPortFromTo any i10_32 21 \\<oplus>\n                           AllowPortFromTo any i10_32 43) \\<oplus>\n                          AllowPortFromTo any i4_32 21 \\<oplus>\n                          (AllowPortFromTo eth_private any 1 \\<oplus>\n                           AllowPortFromTo eth_private any 2) \\<oplus>\n                          AllowPortFromTo eth_intern any 1 \\<oplus>\n                          AllowPortFromTo eth_intern any 2))\n                    (destnets\n                      (DenyAll \\<oplus>\n                       (AllowPortFromTo any i10_32 21 \\<oplus>\n                        AllowPortFromTo any i10_32 43) \\<oplus>\n                       AllowPortFromTo any i4_32 21 \\<oplus>\n                       (AllowPortFromTo eth_private any 1 \\<oplus>\n                        AllowPortFromTo eth_private any 2) \\<oplus>\n                       AllowPortFromTo eth_intern any 1 \\<oplus>\n                       AllowPortFromTo eth_intern any 2)))))", "apply (insert distinctNets)"], ["proof (prove)\ngoal (1 subgoal):\n 1. FWLink \\<noteq> any \\<and>\n    FWLink \\<noteq> i4_32 \\<and>\n    FWLink \\<noteq> i10_32 \\<and>\n    FWLink \\<noteq> eth_intern \\<and>\n    FWLink \\<noteq> eth_private \\<and>\n    any \\<noteq> FWLink \\<and>\n    any \\<noteq> i4_32 \\<and>\n    any \\<noteq> i10_32 \\<and>\n    any \\<noteq> eth_intern \\<and>\n    any \\<noteq> eth_private \\<and>\n    i4_32 \\<noteq> FWLink \\<and>\n    i4_32 \\<noteq> any \\<and>\n    i4_32 \\<noteq> i10_32 \\<and>\n    i4_32 \\<noteq> eth_intern \\<and>\n    i4_32 \\<noteq> eth_private \\<and>\n    i10_32 \\<noteq> FWLink \\<and>\n    i10_32 \\<noteq> any \\<and>\n    i10_32 \\<noteq> i4_32 \\<and>\n    i10_32 \\<noteq> eth_intern \\<and>\n    i10_32 \\<noteq> eth_private \\<and>\n    eth_intern \\<noteq> FWLink \\<and>\n    eth_intern \\<noteq> any \\<and>\n    eth_intern \\<noteq> i4_32 \\<and>\n    eth_intern \\<noteq> i10_32 \\<and>\n    eth_intern \\<noteq> eth_private \\<and>\n    eth_private \\<noteq> FWLink \\<and>\n    eth_private \\<noteq> any \\<and>\n    eth_private \\<noteq> i4_32 \\<and>\n    eth_private \\<noteq> i10_32 \\<and>\n    eth_private \\<noteq> eth_intern \\<Longrightarrow>\n    {any, i10_32}\n    \\<in> set (makeSets\n                (normBothNets\n                  (zip (srcnets\n                         (DenyAll \\<oplus>\n                          (AllowPortFromTo any i10_32 21 \\<oplus>\n                           AllowPortFromTo any i10_32 43) \\<oplus>\n                          AllowPortFromTo any i4_32 21 \\<oplus>\n                          (AllowPortFromTo eth_private any 1 \\<oplus>\n                           AllowPortFromTo eth_private any 2) \\<oplus>\n                          AllowPortFromTo eth_intern any 1 \\<oplus>\n                          AllowPortFromTo eth_intern any 2))\n                    (destnets\n                      (DenyAll \\<oplus>\n                       (AllowPortFromTo any i10_32 21 \\<oplus>\n                        AllowPortFromTo any i10_32 43) \\<oplus>\n                       AllowPortFromTo any i4_32 21 \\<oplus>\n                       (AllowPortFromTo eth_private any 1 \\<oplus>\n                        AllowPortFromTo eth_private any 2) \\<oplus>\n                       AllowPortFromTo eth_intern any 1 \\<oplus>\n                       AllowPortFromTo eth_intern any 2))))) \\<and>\n    {any, i4_32}\n    \\<in> set (makeSets\n                (normBothNets\n                  (zip (srcnets\n                         (DenyAll \\<oplus>\n                          (AllowPortFromTo any i10_32 21 \\<oplus>\n                           AllowPortFromTo any i10_32 43) \\<oplus>\n                          AllowPortFromTo any i4_32 21 \\<oplus>\n                          (AllowPortFromTo eth_private any 1 \\<oplus>\n                           AllowPortFromTo eth_private any 2) \\<oplus>\n                          AllowPortFromTo eth_intern any 1 \\<oplus>\n                          AllowPortFromTo eth_intern any 2))\n                    (destnets\n                      (DenyAll \\<oplus>\n                       (AllowPortFromTo any i10_32 21 \\<oplus>\n                        AllowPortFromTo any i10_32 43) \\<oplus>\n                       AllowPortFromTo any i4_32 21 \\<oplus>\n                       (AllowPortFromTo eth_private any 1 \\<oplus>\n                        AllowPortFromTo eth_private any 2) \\<oplus>\n                       AllowPortFromTo eth_intern any 1 \\<oplus>\n                       AllowPortFromTo eth_intern any 2))))) \\<and>\n    {eth_private, any}\n    \\<in> set (makeSets\n                (normBothNets\n                  (zip (srcnets\n                         (DenyAll \\<oplus>\n                          (AllowPortFromTo any i10_32 21 \\<oplus>\n                           AllowPortFromTo any i10_32 43) \\<oplus>\n                          AllowPortFromTo any i4_32 21 \\<oplus>\n                          (AllowPortFromTo eth_private any 1 \\<oplus>\n                           AllowPortFromTo eth_private any 2) \\<oplus>\n                          AllowPortFromTo eth_intern any 1 \\<oplus>\n                          AllowPortFromTo eth_intern any 2))\n                    (destnets\n                      (DenyAll \\<oplus>\n                       (AllowPortFromTo any i10_32 21 \\<oplus>\n                        AllowPortFromTo any i10_32 43) \\<oplus>\n                       AllowPortFromTo any i4_32 21 \\<oplus>\n                       (AllowPortFromTo eth_private any 1 \\<oplus>\n                        AllowPortFromTo eth_private any 2) \\<oplus>\n                       AllowPortFromTo eth_intern any 1 \\<oplus>\n                       AllowPortFromTo eth_intern any 2))))) \\<and>\n    {eth_intern, any}\n    \\<in> set (makeSets\n                (normBothNets\n                  (zip (srcnets\n                         (DenyAll \\<oplus>\n                          (AllowPortFromTo any i10_32 21 \\<oplus>\n                           AllowPortFromTo any i10_32 43) \\<oplus>\n                          AllowPortFromTo any i4_32 21 \\<oplus>\n                          (AllowPortFromTo eth_private any 1 \\<oplus>\n                           AllowPortFromTo eth_private any 2) \\<oplus>\n                          AllowPortFromTo eth_intern any 1 \\<oplus>\n                          AllowPortFromTo eth_intern any 2))\n                    (destnets\n                      (DenyAll \\<oplus>\n                       (AllowPortFromTo any i10_32 21 \\<oplus>\n                        AllowPortFromTo any i10_32 43) \\<oplus>\n                       AllowPortFromTo any i4_32 21 \\<oplus>\n                       (AllowPortFromTo eth_private any 1 \\<oplus>\n                        AllowPortFromTo eth_private any 2) \\<oplus>\n                       AllowPortFromTo eth_intern any 1 \\<oplus>\n                       AllowPortFromTo eth_intern any 2)))))", "by simp"], ["", "lemmas normalizeUnfold =   normalize_def PolicyL Nets_List_def bothNets_def aux aux2 bothNets_def sets_distinct1 sets_distinct2 sets_distinct3 sets_distinct4 sets_distinct5 sets_distinct6  aux5 aux2"], ["", "end"]]}