{"file_name": "/home/qj213/afp-2021-10-22/thys/CISC-Kernel/step/Step_policies.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CISC-Kernel", "problem_names": ["lemma correct:\n    shows \"policy_axioms sp_spec_subj_obj sp_spec_subj_subj ifp\"", "lemma example_how_to_use_properties_in_proofs:\n  shows \"\\<forall> p . Policy.ifp p p\""], "translations": [["", "lemma correct:\n    shows \"policy_axioms sp_spec_subj_obj sp_spec_subj_subj ifp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. policy_axioms sp_spec_subj_obj sp_spec_subj_subj ifp", "proof (unfold_locales)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>p1 p2 f m1 m2.\n       sp_spec_subj_obj p1 (FILEP f) m1 \\<and>\n       sp_spec_subj_obj p2 (FILEP f) m2 \\<longrightarrow>\n       sp_spec_subj_subj p1 p2\n 2. \\<forall>p x.\n       sp_spec_subj_obj p (PAGE x) WRITE \\<longrightarrow>\n       sp_spec_subj_obj p (PAGE x) READ\n 3. \\<forall>p. ifp p p\n 4. \\<forall>a b.\n       sp_spec_subj_subj a b \\<longrightarrow> ifp a b \\<and> ifp b a\n 5. \\<forall>a b c x.\n       sp_spec_subj_subj a b \\<and>\n       sp_spec_subj_obj b (PAGE x) WRITE \\<and>\n       sp_spec_subj_obj c (PAGE x) READ \\<longrightarrow>\n       ifp a c", "show sp_spec_file_provider:\n      \"\\<forall> p1 p2 f m1 m2 .\n           sp_spec_subj_obj p1 (FILEP f) m1 \\<and>\n           sp_spec_subj_obj p2 (FILEP f) m2 \\<longrightarrow> sp_spec_subj_subj p1 p2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p1 p2 f m1 m2.\n       sp_spec_subj_obj p1 (FILEP f) m1 \\<and>\n       sp_spec_subj_obj p2 (FILEP f) m2 \\<longrightarrow>\n       sp_spec_subj_subj p1 p2", "unfolding sp_spec_subj_subj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p1 p2 f m1 m2.\n       sp_spec_subj_obj p1 (FILEP f) m1 \\<and>\n       sp_spec_subj_obj p2 (FILEP f) m2 \\<longrightarrow>\n       (\\<exists>f m1 m2.\n           sp_spec_subj_obj p1 (FILEP f) m1 \\<and>\n           sp_spec_subj_obj p2 (FILEP f) m2)", "by auto"], ["proof (state)\nthis:\n  \\<forall>p1 p2 f m1 m2.\n     sp_spec_subj_obj p1 (FILEP f) m1 \\<and>\n     sp_spec_subj_obj p2 (FILEP f) m2 \\<longrightarrow>\n     sp_spec_subj_subj p1 p2\n\ngoal (4 subgoals):\n 1. \\<forall>p x.\n       sp_spec_subj_obj p (PAGE x) WRITE \\<longrightarrow>\n       sp_spec_subj_obj p (PAGE x) READ\n 2. \\<forall>p. ifp p p\n 3. \\<forall>a b.\n       sp_spec_subj_subj a b \\<longrightarrow> ifp a b \\<and> ifp b a\n 4. \\<forall>a b c x.\n       sp_spec_subj_subj a b \\<and>\n       sp_spec_subj_obj b (PAGE x) WRITE \\<and>\n       sp_spec_subj_obj c (PAGE x) READ \\<longrightarrow>\n       ifp a c", "show sp_spec_no_wronly_pages:\n      \"\\<forall> p x . sp_spec_subj_obj p (PAGE x) WRITE \\<longrightarrow> sp_spec_subj_obj p (PAGE x) READ\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p x.\n       sp_spec_subj_obj p (PAGE x) WRITE \\<longrightarrow>\n       sp_spec_subj_obj p (PAGE x) READ", "unfolding sp_spec_subj_obj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p x.\n       configuration_subj_obj p (PAGE x) WRITE \\<or>\n       (\\<exists>y.\n           PAGE x = PAGE y \\<and>\n           WRITE = READ \\<and>\n           configuration_subj_obj p (PAGE x) WRITE) \\<longrightarrow>\n       configuration_subj_obj p (PAGE x) READ \\<or>\n       (\\<exists>y.\n           PAGE x = PAGE y \\<and>\n           READ = READ \\<and> configuration_subj_obj p (PAGE x) WRITE)", "by auto"], ["proof (state)\nthis:\n  \\<forall>p x.\n     sp_spec_subj_obj p (PAGE x) WRITE \\<longrightarrow>\n     sp_spec_subj_obj p (PAGE x) READ\n\ngoal (3 subgoals):\n 1. \\<forall>p. ifp p p\n 2. \\<forall>a b.\n       sp_spec_subj_subj a b \\<longrightarrow> ifp a b \\<and> ifp b a\n 3. \\<forall>a b c x.\n       sp_spec_subj_subj a b \\<and>\n       sp_spec_subj_obj b (PAGE x) WRITE \\<and>\n       sp_spec_subj_obj c (PAGE x) READ \\<longrightarrow>\n       ifp a c", "show ifp_reflexive:\n      \"\\<forall> p . ifp p p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p. ifp p p", "unfolding ifp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       sp_spec_subj_subj p p \\<or>\n       sp_spec_subj_subj p p \\<or>\n       (\\<exists>c y.\n           sp_spec_subj_subj p c \\<and>\n           sp_spec_subj_obj c (PAGE y) WRITE \\<and>\n           sp_spec_subj_obj p (PAGE y) READ) \\<or>\n       p = p", "by auto"], ["proof (state)\nthis:\n  \\<forall>p. ifp p p\n\ngoal (2 subgoals):\n 1. \\<forall>a b.\n       sp_spec_subj_subj a b \\<longrightarrow> ifp a b \\<and> ifp b a\n 2. \\<forall>a b c x.\n       sp_spec_subj_subj a b \\<and>\n       sp_spec_subj_obj b (PAGE x) WRITE \\<and>\n       sp_spec_subj_obj c (PAGE x) READ \\<longrightarrow>\n       ifp a c", "show ifp_compatible_with_sp_spec:\n      \"\\<forall> a b . sp_spec_subj_subj a b \\<longrightarrow> ifp a b \\<and> ifp b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       sp_spec_subj_subj a b \\<longrightarrow> ifp a b \\<and> ifp b a", "unfolding ifp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       sp_spec_subj_subj a b \\<longrightarrow>\n       (sp_spec_subj_subj a b \\<or>\n        sp_spec_subj_subj b a \\<or>\n        (\\<exists>c y.\n            sp_spec_subj_subj a c \\<and>\n            sp_spec_subj_obj c (PAGE y) WRITE \\<and>\n            sp_spec_subj_obj b (PAGE y) READ) \\<or>\n        a = b) \\<and>\n       (sp_spec_subj_subj b a \\<or>\n        sp_spec_subj_subj a b \\<or>\n        (\\<exists>c y.\n            sp_spec_subj_subj b c \\<and>\n            sp_spec_subj_obj c (PAGE y) WRITE \\<and>\n            sp_spec_subj_obj a (PAGE y) READ) \\<or>\n        b = a)", "by auto"], ["proof (state)\nthis:\n  \\<forall>a b.\n     sp_spec_subj_subj a b \\<longrightarrow> ifp a b \\<and> ifp b a\n\ngoal (1 subgoal):\n 1. \\<forall>a b c x.\n       sp_spec_subj_subj a b \\<and>\n       sp_spec_subj_obj b (PAGE x) WRITE \\<and>\n       sp_spec_subj_obj c (PAGE x) READ \\<longrightarrow>\n       ifp a c", "show ifp_compatible_with_ipc:\n      \"\\<forall> a b c x . (sp_spec_subj_subj a b\n                  \\<and> sp_spec_subj_obj b (PAGE x) WRITE  \\<and> sp_spec_subj_obj c (PAGE x) READ)\n                 \\<longrightarrow> ifp a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b c x.\n       sp_spec_subj_subj a b \\<and>\n       sp_spec_subj_obj b (PAGE x) WRITE \\<and>\n       sp_spec_subj_obj c (PAGE x) READ \\<longrightarrow>\n       ifp a c", "unfolding ifp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b c x.\n       sp_spec_subj_subj a b \\<and>\n       sp_spec_subj_obj b (PAGE x) WRITE \\<and>\n       sp_spec_subj_obj c (PAGE x) READ \\<longrightarrow>\n       sp_spec_subj_subj a c \\<or>\n       sp_spec_subj_subj c a \\<or>\n       (\\<exists>ca y.\n           sp_spec_subj_subj a ca \\<and>\n           sp_spec_subj_obj ca (PAGE y) WRITE \\<and>\n           sp_spec_subj_obj c (PAGE y) READ) \\<or>\n       a = c", "by auto"], ["proof (state)\nthis:\n  \\<forall>a b c x.\n     sp_spec_subj_subj a b \\<and>\n     sp_spec_subj_obj b (PAGE x) WRITE \\<and>\n     sp_spec_subj_obj c (PAGE x) READ \\<longrightarrow>\n     ifp a c\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "type_synonym sp_subj_subj_t = \"partition_id_t \\<Rightarrow> partition_id_t \\<Rightarrow> bool\""], ["", "type_synonym sp_subj_obj_t = \"partition_id_t \\<Rightarrow> obj_id_t \\<Rightarrow> mode_t \\<Rightarrow> bool\""], ["", "interpretation Policy: abstract_policy_derivation \"configured_subj_obj\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "interpretation Policy_properties: policy_axioms Policy.sp_spec_subj_obj Policy.sp_spec_subj_subj Policy.ifp"], ["proof (prove)\ngoal (1 subgoal):\n 1. policy_axioms Policy.sp_spec_subj_obj Policy.sp_spec_subj_subj\n     Policy.ifp", "using Policy.correct"], ["proof (prove)\nusing this:\n  policy_axioms Policy.sp_spec_subj_obj Policy.sp_spec_subj_subj Policy.ifp\n\ngoal (1 subgoal):\n 1. policy_axioms Policy.sp_spec_subj_obj Policy.sp_spec_subj_subj\n     Policy.ifp", "by auto"], ["", "lemma example_how_to_use_properties_in_proofs:\n  shows \"\\<forall> p . Policy.ifp p p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p. Policy.ifp p p", "using Policy_properties.ifp_reflexive"], ["proof (prove)\nusing this:\n  \\<forall>p. Policy.ifp p p\n\ngoal (1 subgoal):\n 1. \\<forall>p. Policy.ifp p p", "by auto"], ["", "end"]]}