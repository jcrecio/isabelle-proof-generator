{"file_name": "/home/qj213/afp-2021-10-22/thys/CISC-Kernel/trace/Rushby-with-Control/Link_separation_kernel_model_to_CISK.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CISC-Kernel", "problem_names": ["theorem CISK_proof_obligations_satisfied:\n  shows\n    \"Controllable_Interruptible_Separation_Kernel\n      rstep\n      routput_f\n      (\\<up>s0)\n      rcurrent\n      rcswitch\n      rkinvolved\n      rifp\n      rvpeq\n      rAS_set\n      rinvariant\n      rprecondition\n      raborting\n      rwaiting\n      rset_error_code\"", "theorem risecure:\n  \"Inst.isecure\""], "translations": [["", "theorem CISK_proof_obligations_satisfied:\n  shows\n    \"Controllable_Interruptible_Separation_Kernel\n      rstep\n      routput_f\n      (\\<up>s0)\n      rcurrent\n      rcswitch\n      rkinvolved\n      rifp\n      rvpeq\n      rAS_set\n      rinvariant\n      rprecondition\n      raborting\n      rwaiting\n      rset_error_code\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Controllable_Interruptible_Separation_Kernel rstep routput_f \\<up> s0\n     rcurrent rcswitch rkinvolved rifp rvpeq rAS_set rinvariant\n     rprecondition raborting rwaiting rset_error_code", "proof (unfold_locales)\n  \\<comment> \\<open>show that rvpeq is equivalence relation\\<close>"], ["proof (state)\ngoal (31 subgoals):\n 1. \\<forall>a b c u.\n       rvpeq u a b \\<and> rvpeq u b c \\<longrightarrow> rvpeq u a c\n 2. \\<forall>a b u. rvpeq u a b \\<longrightarrow> rvpeq u b a\n 3. \\<forall>a u. rvpeq u a a\n 4. \\<forall>u. rifp u u\n 5. \\<forall>s t u a.\n       rvpeq u s t \\<and>\n       rvpeq (rcurrent s) s t \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       True \\<and>\n       rprecondition t (rcurrent t) a \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rvpeq u (rstep s a) (rstep t a)\n 6. \\<forall>a s u.\n       \\<not> rifp (rcurrent s) u \\<and>\n       True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n       rvpeq u s (rstep s a)\n 7. \\<forall>a s t.\n       rvpeq (rcurrent s) s t \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       routput_f s a = routput_f t a\n 8. \\<forall>s a. rcurrent (rstep s a) = rcurrent s\n 9. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\n 10. \\<forall>u s t n.\n        rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\nA total of 31 subgoals...", "show \"\\<forall> a b c u. (rvpeq u a b \\<and> rvpeq u b c) \\<longrightarrow> rvpeq u a c\"\n   and \"\\<forall> a b u. rvpeq u a b \\<longrightarrow> rvpeq u b a\"\n   and \"\\<forall> a u. rvpeq u a a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b c u.\n       rvpeq u a b \\<and> rvpeq u b c \\<longrightarrow> rvpeq u a c &&&\n    \\<forall>a b u. rvpeq u a b \\<longrightarrow> rvpeq u b a &&&\n    \\<forall>a u. rvpeq u a a", "using inst_vpeq_rel"], ["proof (prove)\nusing this:\n  rvpeq ?u ?s ?s\n  rvpeq ?u ?s1.0 ?s2.0 \\<Longrightarrow> rvpeq ?u ?s2.0 ?s1.0\n  \\<lbrakk>rvpeq ?u ?s1.0 ?s2.0; rvpeq ?u ?s2.0 ?s3.0\\<rbrakk>\n  \\<Longrightarrow> rvpeq ?u ?s1.0 ?s3.0\n\ngoal (1 subgoal):\n 1. \\<forall>a b c u.\n       rvpeq u a b \\<and> rvpeq u b c \\<longrightarrow> rvpeq u a c &&&\n    \\<forall>a b u. rvpeq u a b \\<longrightarrow> rvpeq u b a &&&\n    \\<forall>a u. rvpeq u a a", "by metis+\n  \\<comment> \\<open>show output consistency\\<close>"], ["proof (state)\nthis:\n  \\<forall>a b c u.\n     rvpeq u a b \\<and> rvpeq u b c \\<longrightarrow> rvpeq u a c\n  \\<forall>a b u. rvpeq u a b \\<longrightarrow> rvpeq u b a\n  \\<forall>a u. rvpeq u a a\n\ngoal (28 subgoals):\n 1. \\<forall>u. rifp u u\n 2. \\<forall>s t u a.\n       rvpeq u s t \\<and>\n       rvpeq (rcurrent s) s t \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       True \\<and>\n       rprecondition t (rcurrent t) a \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rvpeq u (rstep s a) (rstep t a)\n 3. \\<forall>a s u.\n       \\<not> rifp (rcurrent s) u \\<and>\n       True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n       rvpeq u s (rstep s a)\n 4. \\<forall>a s t.\n       rvpeq (rcurrent s) s t \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       routput_f s a = routput_f t a\n 5. \\<forall>s a. rcurrent (rstep s a) = rcurrent s\n 6. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\n 7. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\n 8. [] \\<in> rAS_set\n 9. True\n 10. \\<forall>s n. True \\<longrightarrow> True\nA total of 28 subgoals...", "show \"\\<forall> a s t. rvpeq (rcurrent s) s t \\<and> rcurrent s = rcurrent t \\<longrightarrow> routput_f s a = routput_f t a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a s t.\n       rvpeq (rcurrent s) s t \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       routput_f s a = routput_f t a", "using inst_output_consistency"], ["proof (prove)\nusing this:\n  \\<lbrakk>rvpeq (rcurrent ?s) ?s ?t; rcurrent ?s = rcurrent ?t\\<rbrakk>\n  \\<Longrightarrow> routput_f ?s ?a = routput_f ?t ?a\n\ngoal (1 subgoal):\n 1. \\<forall>a s t.\n       rvpeq (rcurrent s) s t \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       routput_f s a = routput_f t a", "by metis\n  \\<comment> \\<open>show reflexivity of ifp\\<close>"], ["proof (state)\nthis:\n  \\<forall>a s t.\n     rvpeq (rcurrent s) s t \\<and> rcurrent s = rcurrent t \\<longrightarrow>\n     routput_f s a = routput_f t a\n\ngoal (27 subgoals):\n 1. \\<forall>u. rifp u u\n 2. \\<forall>s t u a.\n       rvpeq u s t \\<and>\n       rvpeq (rcurrent s) s t \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       True \\<and>\n       rprecondition t (rcurrent t) a \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rvpeq u (rstep s a) (rstep t a)\n 3. \\<forall>a s u.\n       \\<not> rifp (rcurrent s) u \\<and>\n       True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n       rvpeq u s (rstep s a)\n 4. \\<forall>s a. rcurrent (rstep s a) = rcurrent s\n 5. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\n 6. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\n 7. [] \\<in> rAS_set\n 8. True\n 9. \\<forall>s n. True \\<longrightarrow> True\n 10. \\<forall>s d n a.\n        rprecondition s d a \\<longrightarrow>\n        rprecondition (rcswitch n s) d a\nA total of 27 subgoals...", "show \"\\<forall> u . rifp u u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u. rifp u u", "using inst_ifp_refl"], ["proof (prove)\nusing this:\n  \\<forall>u. rifp u u\n\ngoal (1 subgoal):\n 1. \\<forall>u. rifp u u", "by metis\n  \\<comment> \\<open>show step consistency\\<close>"], ["proof (state)\nthis:\n  \\<forall>u. rifp u u\n\ngoal (26 subgoals):\n 1. \\<forall>s t u a.\n       rvpeq u s t \\<and>\n       rvpeq (rcurrent s) s t \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       True \\<and>\n       rprecondition t (rcurrent t) a \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rvpeq u (rstep s a) (rstep t a)\n 2. \\<forall>a s u.\n       \\<not> rifp (rcurrent s) u \\<and>\n       True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n       rvpeq u s (rstep s a)\n 3. \\<forall>s a. rcurrent (rstep s a) = rcurrent s\n 4. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\n 5. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\n 6. [] \\<in> rAS_set\n 7. True\n 8. \\<forall>s n. True \\<longrightarrow> True\n 9. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 10. \\<forall>s d aseq.\n        True \\<and>\n        aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n        rprecondition s d (hd aseq)\nA total of 26 subgoals...", "show \"\\<forall>s t u a. rvpeq u s t \\<and> rvpeq (rcurrent s) s t \\<and> True \\<and> rprecondition s (rcurrent s) a \\<and> True \\<and> rprecondition t (rcurrent t) a \\<and> rcurrent s = rcurrent t \\<longrightarrow>\n              rvpeq u (rstep s a) (rstep t a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t u a.\n       rvpeq u s t \\<and>\n       rvpeq (rcurrent s) s t \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       True \\<and>\n       rprecondition t (rcurrent t) a \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rvpeq u (rstep s a) (rstep t a)", "using inst_weakly_step_consistent"], ["proof (prove)\nusing this:\n  \\<lbrakk>rvpeq ?u ?s ?t; rvpeq (rcurrent ?s) ?s ?t;\n   rcurrent ?s = rcurrent ?t; rprecondition ?s (rcurrent ?s) ?a;\n   rprecondition ?t (rcurrent ?t) ?a\\<rbrakk>\n  \\<Longrightarrow> rvpeq ?u (rstep ?s ?a) (rstep ?t ?a)\n\ngoal (1 subgoal):\n 1. \\<forall>s t u a.\n       rvpeq u s t \\<and>\n       rvpeq (rcurrent s) s t \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       True \\<and>\n       rprecondition t (rcurrent t) a \\<and>\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rvpeq u (rstep s a) (rstep t a)", "by blast\n  \\<comment> \\<open>show step atomicity\\<close>"], ["proof (state)\nthis:\n  \\<forall>s t u a.\n     rvpeq u s t \\<and>\n     rvpeq (rcurrent s) s t \\<and>\n     True \\<and>\n     rprecondition s (rcurrent s) a \\<and>\n     True \\<and>\n     rprecondition t (rcurrent t) a \\<and>\n     rcurrent s = rcurrent t \\<longrightarrow>\n     rvpeq u (rstep s a) (rstep t a)\n\ngoal (25 subgoals):\n 1. \\<forall>a s u.\n       \\<not> rifp (rcurrent s) u \\<and>\n       True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n       rvpeq u s (rstep s a)\n 2. \\<forall>s a. rcurrent (rstep s a) = rcurrent s\n 3. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\n 4. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\n 5. [] \\<in> rAS_set\n 6. True\n 7. \\<forall>s n. True \\<longrightarrow> True\n 8. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 9. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 10. \\<forall>s a a'.\n        (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n        True \\<and>\n        rprecondition s (rcurrent s) a \\<and>\n        \\<not> raborting s (rcurrent s) a \\<and>\n        \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n        rprecondition (rstep s a) (rcurrent s) a'\nA total of 25 subgoals...", "show \"\\<forall> s a . rcurrent (rstep s a) = rcurrent s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s a. rcurrent (rstep s a) = rcurrent s", "using inst_step_atomicity"], ["proof (prove)\nusing this:\n  \\<forall>s a. rcurrent (rstep s a) = rcurrent s\n\ngoal (1 subgoal):\n 1. \\<forall>s a. rcurrent (rstep s a) = rcurrent s", "by metis"], ["proof (state)\nthis:\n  \\<forall>s a. rcurrent (rstep s a) = rcurrent s\n\ngoal (24 subgoals):\n 1. \\<forall>a s u.\n       \\<not> rifp (rcurrent s) u \\<and>\n       True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n       rvpeq u s (rstep s a)\n 2. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\n 3. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\n 4. [] \\<in> rAS_set\n 5. True\n 6. \\<forall>s n. True \\<longrightarrow> True\n 7. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 8. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 9. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 10. \\<forall>s d a a'.\n        rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n        rprecondition (rstep s a') d a\nA total of 24 subgoals...", "show \" \\<forall>a s u. \\<not> rifp (rcurrent s) u \\<and> True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow> rvpeq u s (rstep s a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a s u.\n       \\<not> rifp (rcurrent s) u \\<and>\n       True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n       rvpeq u s (rstep s a)", "using inst_local_respect"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> rifp (rcurrent ?s) ?u;\n   rprecondition ?s (rcurrent ?s) ?a\\<rbrakk>\n  \\<Longrightarrow> rvpeq ?u ?s (rstep ?s ?a)\n\ngoal (1 subgoal):\n 1. \\<forall>a s u.\n       \\<not> rifp (rcurrent s) u \\<and>\n       True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n       rvpeq u s (rstep s a)", "by blast\n  \\<comment> \\<open>show cswitch is independent of state\\<close>"], ["proof (state)\nthis:\n  \\<forall>a s u.\n     \\<not> rifp (rcurrent s) u \\<and>\n     True \\<and> rprecondition s (rcurrent s) a \\<longrightarrow>\n     rvpeq u s (rstep s a)\n\ngoal (23 subgoals):\n 1. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\n 2. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\n 3. [] \\<in> rAS_set\n 4. True\n 5. \\<forall>s n. True \\<longrightarrow> True\n 6. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 7. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 8. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 9. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 10. \\<forall>s a. True \\<longrightarrow> True\nA total of 23 subgoals...", "show \"\\<forall>n s t. rcurrent s = rcurrent t \\<longrightarrow> rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)", "using inst_cswitch_independent_of_state"], ["proof (prove)\nusing this:\n  rcurrent ?s = rcurrent ?t \\<Longrightarrow>\n  rcurrent (rcswitch ?n ?s) = rcurrent (rcswitch ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<forall>n s t.\n       rcurrent s = rcurrent t \\<longrightarrow>\n       rcurrent (rcswitch n s) = rcurrent (rcswitch n t)", "by metis\n  \\<comment> \\<open>show cswitch consistency\\<close>"], ["proof (state)\nthis:\n  \\<forall>n s t.\n     rcurrent s = rcurrent t \\<longrightarrow>\n     rcurrent (rcswitch n s) = rcurrent (rcswitch n t)\n\ngoal (22 subgoals):\n 1. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\n 2. [] \\<in> rAS_set\n 3. True\n 4. \\<forall>s n. True \\<longrightarrow> True\n 5. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 6. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 7. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 8. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 9. \\<forall>s a. True \\<longrightarrow> True\n 10. \\<forall>n s. raborting (rcswitch n s) = raborting s\nA total of 22 subgoals...", "show \"\\<forall>u s t n. rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)", "using inst_cswitch_consistency"], ["proof (prove)\nusing this:\n  rvpeq ?u ?s ?t \\<Longrightarrow>\n  rvpeq ?u (rcswitch ?n ?s) (rcswitch ?n ?t)\n\ngoal (1 subgoal):\n 1. \\<forall>u s t n.\n       rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)", "by metis\n  \\<comment> \\<open>Show the empt action sequence is in @{term AS_set}\\<close>"], ["proof (state)\nthis:\n  \\<forall>u s t n.\n     rvpeq u s t \\<longrightarrow> rvpeq u (rcswitch n s) (rcswitch n t)\n\ngoal (21 subgoals):\n 1. [] \\<in> rAS_set\n 2. True\n 3. \\<forall>s n. True \\<longrightarrow> True\n 4. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 5. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 6. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 7. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 8. \\<forall>s a. True \\<longrightarrow> True\n 9. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 10. \\<forall>s d a' a.\n        rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n        raborting (rset_error_code s a') d a\nA total of 21 subgoals...", "show \"[] \\<in> rAS_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<in> rAS_set", "unfolding rAS_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<in> {aseq.\n              is_SK_IPC aseq \\<or>\n              is_SK_EV_WAIT aseq \\<or> is_SK_EV_SIGNAL aseq} \\<union>\n             {[]}", "by auto\n  \\<comment> \\<open>The invariant for the initial state, already encoded in @{term rstate_t}\\<close>"], ["proof (state)\nthis:\n  [] \\<in> rAS_set\n\ngoal (20 subgoals):\n 1. True\n 2. \\<forall>s n. True \\<longrightarrow> True\n 3. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 4. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 5. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 6. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 7. \\<forall>s a. True \\<longrightarrow> True\n 8. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 9. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 10. \\<forall>s a d.\n        rcurrent s \\<noteq> d \\<longrightarrow>\n        raborting (rstep s a) d = raborting s d\nA total of 20 subgoals...", "show \"True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. True", "by auto\n  \\<comment> \\<open>Step function of the invariant, already encoded in @{term rstate_t}\\<close>"], ["proof (state)\nthis:\n  True\n\ngoal (19 subgoals):\n 1. \\<forall>s n. True \\<longrightarrow> True\n 2. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 3. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 4. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 5. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 6. \\<forall>s a. True \\<longrightarrow> True\n 7. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 8. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 9. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d\n 10. \\<forall>s t u.\n        rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\nA total of 19 subgoals...", "show \"\\<forall>s n. True \\<longrightarrow> True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s n. True \\<longrightarrow> True", "by auto\n  \\<comment> \\<open>The precondition does not change with a context switch\\<close>"], ["proof (state)\nthis:\n  \\<forall>s n. True \\<longrightarrow> True\n\ngoal (18 subgoals):\n 1. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a\n 2. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 3. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 4. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 5. \\<forall>s a. True \\<longrightarrow> True\n 6. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 7. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 8. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d\n 9. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n 10. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\nA total of 18 subgoals...", "show \"\\<forall>s d n a. rprecondition s d a \\<longrightarrow> rprecondition (rcswitch n s) d a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a", "using precondition_after_cswitch"], ["proof (prove)\nusing this:\n  \\<forall>s d n a.\n     rprecondition s d a \\<longrightarrow> rprecondition (rcswitch n s) d a\n\ngoal (1 subgoal):\n 1. \\<forall>s d n a.\n       rprecondition s d a \\<longrightarrow>\n       rprecondition (rcswitch n s) d a", "by blast\n  \\<comment> \\<open>The precondition holds for the first action of each action sequence\\<close>"], ["proof (state)\nthis:\n  \\<forall>s d n a.\n     rprecondition s d a \\<longrightarrow> rprecondition (rcswitch n s) d a\n\ngoal (17 subgoals):\n 1. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)\n 2. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 3. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 4. \\<forall>s a. True \\<longrightarrow> True\n 5. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 6. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 7. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d\n 8. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n 9. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n 10. \\<forall>s d a' a.\n        rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n        rwaiting (rset_error_code s a') d a\nA total of 17 subgoals...", "show \"\\<forall>s d aseq. True \\<and> aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow> rprecondition s d (hd aseq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)", "using prec_first_IPC_action prec_first_EV_WAIT_action prec_first_EV_SIGNAL_action"], ["proof (prove)\nusing this:\n  is_SK_IPC ?aseq \\<Longrightarrow> rprecondition ?s ?d (hd ?aseq)\n  is_SK_EV_WAIT ?aseq \\<Longrightarrow> rprecondition ?s ?d (hd ?aseq)\n  is_SK_EV_SIGNAL ?aseq \\<Longrightarrow> rprecondition ?s ?d (hd ?aseq)\n\ngoal (1 subgoal):\n 1. \\<forall>s d aseq.\n       True \\<and>\n       aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)", "unfolding rAS_set_def is_sub_seq_def"], ["proof (prove)\nusing this:\n  is_SK_IPC ?aseq \\<Longrightarrow> rprecondition ?s ?d (hd ?aseq)\n  is_SK_EV_WAIT ?aseq \\<Longrightarrow> rprecondition ?s ?d (hd ?aseq)\n  is_SK_EV_SIGNAL ?aseq \\<Longrightarrow> rprecondition ?s ?d (hd ?aseq)\n\ngoal (1 subgoal):\n 1. \\<forall>s d aseq.\n       True \\<and>\n       aseq\n       \\<in> {aseq.\n              is_SK_IPC aseq \\<or>\n              is_SK_EV_WAIT aseq \\<or> is_SK_EV_SIGNAL aseq} \\<union>\n             {[]} \\<and>\n       aseq \\<noteq> [] \\<longrightarrow>\n       rprecondition s d (hd aseq)", "by auto\n  \\<comment> \\<open>The precondition holds for the next action in an action sequence, assuming the sequence is not aborted or delayed\\<close>"], ["proof (state)\nthis:\n  \\<forall>s d aseq.\n     True \\<and>\n     aseq \\<in> rAS_set \\<and> aseq \\<noteq> [] \\<longrightarrow>\n     rprecondition s d (hd aseq)\n\ngoal (16 subgoals):\n 1. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'\n 2. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 3. \\<forall>s a. True \\<longrightarrow> True\n 4. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 5. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 6. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d\n 7. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n 8. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n 9. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 10. \\<forall>s t u a.\n        rvpeq (rcurrent s) s t \\<and>\n        (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n        rvpeq u s t \\<longrightarrow>\n        rwaiting s u a = rwaiting t u a\nA total of 16 subgoals...", "show \"\\<forall>s a a'. (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and> True \\<and> rprecondition s (rcurrent s) a \\<and> \\<not> raborting s (rcurrent s) a \\<and> \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n             rprecondition (rstep s a) (rcurrent s) a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'", "using prec_after_IPC_step prec_after_EV_SIGNAL_step prec_after_EV_WAIT_step"], ["proof (prove)\nusing this:\n  \\<lbrakk>rprecondition ?s (rcurrent ?s) (?aseq ! ?n);\n   Suc ?n < length ?aseq; is_SK_IPC ?aseq;\n   \\<not> raborting ?s (rcurrent ?s) (?aseq ! ?n);\n   \\<not> rwaiting ?s (rcurrent ?s) (?aseq ! ?n)\\<rbrakk>\n  \\<Longrightarrow> rprecondition (rstep ?s (?aseq ! ?n)) (rcurrent ?s)\n                     (?aseq ! Suc ?n)\n  \\<lbrakk>rprecondition ?s (rcurrent ?s) (?aseq ! ?n);\n   Suc ?n < length ?aseq; is_SK_EV_SIGNAL ?aseq;\n   \\<not> raborting ?s (rcurrent ?s) (?aseq ! ?n);\n   \\<not> rwaiting ?s (rcurrent ?s) (?aseq ! ?n)\\<rbrakk>\n  \\<Longrightarrow> rprecondition (rstep ?s (?aseq ! ?n)) (rcurrent ?s)\n                     (?aseq ! Suc ?n)\n  \\<lbrakk>rprecondition ?s (rcurrent ?s) (?aseq ! ?n);\n   Suc ?n < length ?aseq; is_SK_EV_WAIT ?aseq;\n   \\<not> raborting ?s (rcurrent ?s) (?aseq ! ?n);\n   \\<not> rwaiting ?s (rcurrent ?s) (?aseq ! ?n)\\<rbrakk>\n  \\<Longrightarrow> rprecondition (rstep ?s (?aseq ! ?n)) (rcurrent ?s)\n                     (?aseq ! Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<forall>s a a'.\n       (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'", "unfolding rAS_set_def is_sub_seq_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>rprecondition ?s (rcurrent ?s) (?aseq ! ?n);\n   Suc ?n < length ?aseq; is_SK_IPC ?aseq;\n   \\<not> raborting ?s (rcurrent ?s) (?aseq ! ?n);\n   \\<not> rwaiting ?s (rcurrent ?s) (?aseq ! ?n)\\<rbrakk>\n  \\<Longrightarrow> rprecondition (rstep ?s (?aseq ! ?n)) (rcurrent ?s)\n                     (?aseq ! Suc ?n)\n  \\<lbrakk>rprecondition ?s (rcurrent ?s) (?aseq ! ?n);\n   Suc ?n < length ?aseq; is_SK_EV_SIGNAL ?aseq;\n   \\<not> raborting ?s (rcurrent ?s) (?aseq ! ?n);\n   \\<not> rwaiting ?s (rcurrent ?s) (?aseq ! ?n)\\<rbrakk>\n  \\<Longrightarrow> rprecondition (rstep ?s (?aseq ! ?n)) (rcurrent ?s)\n                     (?aseq ! Suc ?n)\n  \\<lbrakk>rprecondition ?s (rcurrent ?s) (?aseq ! ?n);\n   Suc ?n < length ?aseq; is_SK_EV_WAIT ?aseq;\n   \\<not> raborting ?s (rcurrent ?s) (?aseq ! ?n);\n   \\<not> rwaiting ?s (rcurrent ?s) (?aseq ! ?n)\\<rbrakk>\n  \\<Longrightarrow> rprecondition (rstep ?s (?aseq ! ?n)) (rcurrent ?s)\n                     (?aseq ! Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<forall>s a a'.\n       (\\<exists>aseq\n                 \\<in>{aseq.\n                       is_SK_IPC aseq \\<or>\n                       is_SK_EV_WAIT aseq \\<or>\n                       is_SK_EV_SIGNAL aseq} \\<union>\n                      {[]}.\n           \\<exists>n.\n              Suc n < length aseq \\<and>\n              aseq ! n = a \\<and> aseq ! Suc n = a') \\<and>\n       True \\<and>\n       rprecondition s (rcurrent s) a \\<and>\n       \\<not> raborting s (rcurrent s) a \\<and>\n       \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n       rprecondition (rstep s a) (rcurrent s) a'", "by auto\n  \\<comment> \\<open>Steps of other domains do not influence the precondition\\<close>"], ["proof (state)\nthis:\n  \\<forall>s a a'.\n     (\\<exists>aseq\\<in>rAS_set. is_sub_seq a a' aseq) \\<and>\n     True \\<and>\n     rprecondition s (rcurrent s) a \\<and>\n     \\<not> raborting s (rcurrent s) a \\<and>\n     \\<not> rwaiting s (rcurrent s) a \\<longrightarrow>\n     rprecondition (rstep s a) (rcurrent s) a'\n\ngoal (15 subgoals):\n 1. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a\n 2. \\<forall>s a. True \\<longrightarrow> True\n 3. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 4. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 5. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d\n 6. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n 7. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n 8. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 9. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a\n 10. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\nA total of 15 subgoals...", "show \"\\<forall>s d a a'. rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow> rprecondition (rstep s a') d a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a", "using prec_dom_independent"], ["proof (prove)\nusing this:\n  \\<forall>s d a a'.\n     rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n     rprecondition (rstep s a') d a\n\ngoal (1 subgoal):\n 1. \\<forall>s d a a'.\n       rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n       rprecondition (rstep s a') d a", "by blast\n  \\<comment> \\<open>The invariant\\<close>"], ["proof (state)\nthis:\n  \\<forall>s d a a'.\n     rcurrent s \\<noteq> d \\<and> rprecondition s d a \\<longrightarrow>\n     rprecondition (rstep s a') d a\n\ngoal (14 subgoals):\n 1. \\<forall>s a. True \\<longrightarrow> True\n 2. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 3. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 4. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d\n 5. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n 6. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n 7. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 8. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a\n 9. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n 10. \\<forall>s t u a.\n        rvpeq u s t \\<longrightarrow>\n        rvpeq u (rset_error_code s a) (rset_error_code t a)\nA total of 14 subgoals...", "show \"\\<forall>s a. True \\<longrightarrow> True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s a. True \\<longrightarrow> True", "by auto\n  \\<comment> \\<open>Aborting does not depend on a context switch\\<close>"], ["proof (state)\nthis:\n  \\<forall>s a. True \\<longrightarrow> True\n\ngoal (13 subgoals):\n 1. \\<forall>n s. raborting (rcswitch n s) = raborting s\n 2. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 3. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d\n 4. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n 5. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n 6. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 7. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a\n 8. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n 9. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 10. \\<forall>s u a.\n        \\<not> rifp (rcurrent s) u \\<longrightarrow>\n        rvpeq u s (rset_error_code s a)\nA total of 13 subgoals...", "show \"\\<forall>n s. raborting (rcswitch n s) = raborting s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s. raborting (rcswitch n s) = raborting s", "using aborting_switch_independent"], ["proof (prove)\nusing this:\n  \\<forall>n s. raborting (rcswitch n s) = raborting s\n\ngoal (1 subgoal):\n 1. \\<forall>n s. raborting (rcswitch n s) = raborting s", "by auto\n  \\<comment> \\<open>Aborting does not depend on actions of other domains\\<close>"], ["proof (state)\nthis:\n  \\<forall>n s. raborting (rcswitch n s) = raborting s\n\ngoal (12 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 2. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d\n 3. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n 4. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n 5. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 6. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a\n 7. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n 8. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 9. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 10. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\nA total of 12 subgoals...", "show \"\\<forall>s a d. rcurrent s \\<noteq> d \\<longrightarrow> raborting (rstep s a) d = raborting s d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d", "using aborting_dom_independent"], ["proof (prove)\nusing this:\n  rcurrent ?s \\<noteq> ?d \\<Longrightarrow>\n  raborting (rstep ?s ?a) ?d ?a' = raborting ?s ?d ?a'\n\ngoal (1 subgoal):\n 1. \\<forall>s a d.\n       rcurrent s \\<noteq> d \\<longrightarrow>\n       raborting (rstep s a) d = raborting s d", "by auto\n  \\<comment> \\<open>Aborting is consistent\\<close>"], ["proof (state)\nthis:\n  \\<forall>s a d.\n     rcurrent s \\<noteq> d \\<longrightarrow>\n     raborting (rstep s a) d = raborting s d\n\ngoal (11 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 2. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n 3. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n 4. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 5. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a\n 6. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n 7. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 8. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 9. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 10. \\<forall>s d a a'.\n        rprecondition s d a \\<and>\n        raborting s (rcurrent s) a' \\<longrightarrow>\n        rprecondition (rset_error_code s a') d a\nA total of 11 subgoals...", "show \"\\<forall>s t u. rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u", "using raborting_consistent"], ["proof (prove)\nusing this:\n  \\<forall>s t u.\n     rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n\ngoal (1 subgoal):\n 1. \\<forall>s t u.\n       rvpeq u s t \\<longrightarrow> raborting s u = raborting t u", "by auto\n  \\<comment> \\<open>Waiting does not depend on a context switch\\<close>"], ["proof (state)\nthis:\n  \\<forall>s t u.\n     rvpeq u s t \\<longrightarrow> raborting s u = raborting t u\n\ngoal (10 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 2. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n 3. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 4. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a\n 5. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n 6. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 7. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 8. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 9. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a\n 10. \\<forall>s a.\n        \\<forall>d\\<in>rkinvolved a.\n           rprecondition s (rcurrent s) a \\<longrightarrow>\n           rifp d (rcurrent s)", "show \"\\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s", "using waiting_switch_independent"], ["proof (prove)\nusing this:\n  \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n\ngoal (1 subgoal):\n 1. \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s", "by auto\n  \\<comment> \\<open>Waiting is consistent\\<close>"], ["proof (state)\nthis:\n  \\<forall>n s. rwaiting (rcswitch n s) = rwaiting s\n\ngoal (9 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 2. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 3. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a\n 4. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n 5. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 6. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 7. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 8. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a\n 9. \\<forall>s a.\n       \\<forall>d\\<in>rkinvolved a.\n          rprecondition s (rcurrent s) a \\<longrightarrow>\n          rifp d (rcurrent s)", "show \"\\<forall>s t u a. rvpeq (rcurrent s) s t \\<and> (\\<forall> d \\<in> rkinvolved a . rvpeq d s t) \n         \\<and> rvpeq u s t  \n         \\<longrightarrow> rwaiting s u a = rwaiting t u a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a", "unfolding Kernel.involved_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a", "using waiting_consistent"], ["proof (prove)\nusing this:\n  \\<forall>s t u a.\n     rvpeq (rcurrent s) s t \\<and>\n     (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n     rvpeq u s t \\<longrightarrow>\n     rwaiting s u a = rwaiting t u a\n\ngoal (1 subgoal):\n 1. \\<forall>s t u a.\n       rvpeq (rcurrent s) s t \\<and>\n       (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n       rvpeq u s t \\<longrightarrow>\n       rwaiting s u a = rwaiting t u a", "by auto\n  \\<comment> \\<open>Domains that are involved in an action may influence the domain of the action\\<close>"], ["proof (state)\nthis:\n  \\<forall>s t u a.\n     rvpeq (rcurrent s) s t \\<and>\n     (\\<forall>d\\<in>rkinvolved a. rvpeq d s t) \\<and>\n     rvpeq u s t \\<longrightarrow>\n     rwaiting s u a = rwaiting t u a\n\ngoal (8 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 2. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 3. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n 4. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 5. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 6. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 7. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a\n 8. \\<forall>s a.\n       \\<forall>d\\<in>rkinvolved a.\n          rprecondition s (rcurrent s) a \\<longrightarrow>\n          rifp d (rcurrent s)", "show \"\\<forall>s a. \\<forall> d \\<in> rkinvolved a. rprecondition s (rcurrent s) a \\<longrightarrow> rifp d (rcurrent s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s a.\n       \\<forall>d\\<in>rkinvolved a.\n          rprecondition s (rcurrent s) a \\<longrightarrow>\n          rifp d (rcurrent s)", "using involved_ifp"], ["proof (prove)\nusing this:\n  \\<forall>s a.\n     \\<forall>d\\<in>rkinvolved a.\n        rprecondition s (rcurrent s) a \\<longrightarrow> rifp d (rcurrent s)\n\ngoal (1 subgoal):\n 1. \\<forall>s a.\n       \\<forall>d\\<in>rkinvolved a.\n          rprecondition s (rcurrent s) a \\<longrightarrow>\n          rifp d (rcurrent s)", "by blast\n  \\<comment> \\<open>An action that is waiting does not change the state\\<close>"], ["proof (state)\nthis:\n  \\<forall>s a.\n     \\<forall>d\\<in>rkinvolved a.\n        rprecondition s (rcurrent s) a \\<longrightarrow> rifp d (rcurrent s)\n\ngoal (7 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 2. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 3. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n 4. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 5. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 6. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 7. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a", "show \"\\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s", "using spec_of_waiting"], ["proof (prove)\nusing this:\n  \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n\ngoal (1 subgoal):\n 1. \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s", "by blast\n  \\<comment> \\<open>Proof obligations for @{term set_error_code}. Right now, they are all trivial\\<close>"], ["proof (state)\nthis:\n  \\<forall>s a. rwaiting s (rcurrent s) a \\<longrightarrow> rstep s a = s\n\ngoal (6 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a\n 2. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 3. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 4. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 5. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 6. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a", "show \"\\<forall>s d a' a. rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow> raborting (rset_error_code s a') d a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting (rset_error_code s a') d a", "unfolding rset_error_code_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n       raborting s d a", "by auto"], ["proof (state)\nthis:\n  \\<forall>s d a' a.\n     rcurrent s \\<noteq> d \\<and> raborting s d a \\<longrightarrow>\n     raborting (rset_error_code s a') d a\n\ngoal (5 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 2. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)\n 3. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 4. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 5. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a", "show \"\\<forall>s t u a. rvpeq u s t \\<longrightarrow> rvpeq u (rset_error_code s a) (rset_error_code t a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t u a.\n       rvpeq u s t \\<longrightarrow>\n       rvpeq u (rset_error_code s a) (rset_error_code t a)", "unfolding rset_error_code_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t u a. rvpeq u s t \\<longrightarrow> rvpeq u s t", "by auto"], ["proof (state)\nthis:\n  \\<forall>s t u a.\n     rvpeq u s t \\<longrightarrow>\n     rvpeq u (rset_error_code s a) (rset_error_code t a)\n\ngoal (4 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 2. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)\n 3. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 4. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a", "show \"\\<forall>s u a. \\<not> rifp (rcurrent s) u \\<longrightarrow> rvpeq u s (rset_error_code s a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s u a.\n       \\<not> rifp (rcurrent s) u \\<longrightarrow>\n       rvpeq u s (rset_error_code s a)", "unfolding rset_error_code_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s u a. \\<not> rifp (rcurrent s) u \\<longrightarrow> rvpeq u s s", "by (metis \\<open>\\<forall>a u. rvpeq u a a\\<close>)"], ["proof (state)\nthis:\n  \\<forall>s u a.\n     \\<not> rifp (rcurrent s) u \\<longrightarrow>\n     rvpeq u s (rset_error_code s a)\n\ngoal (3 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 2. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n 3. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a", "show \"\\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s", "unfolding rset_error_code_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s a. rcurrent s = rcurrent s", "by auto"], ["proof (state)\nthis:\n  \\<forall>s a. rcurrent (rset_error_code s a) = rcurrent s\n\ngoal (2 subgoals):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a\n 2. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a", "show \"\\<forall>s d a a'. rprecondition s d a \\<and> raborting s (rcurrent s) a' \\<longrightarrow> rprecondition (rset_error_code s a') d a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition (rset_error_code s a') d a", "unfolding rset_error_code_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d a a'.\n       rprecondition s d a \\<and>\n       raborting s (rcurrent s) a' \\<longrightarrow>\n       rprecondition s d a", "by auto"], ["proof (state)\nthis:\n  \\<forall>s d a a'.\n     rprecondition s d a \\<and>\n     raborting s (rcurrent s) a' \\<longrightarrow>\n     rprecondition (rset_error_code s a') d a\n\ngoal (1 subgoal):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a", "show \"\\<forall>s d a' a. rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow> rwaiting (rset_error_code s a') d a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting (rset_error_code s a') d a", "unfolding rset_error_code_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s d a' a.\n       rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n       rwaiting s d a", "by auto"], ["proof (state)\nthis:\n  \\<forall>s d a' a.\n     rcurrent s \\<noteq> d \\<and> rwaiting s d a \\<longrightarrow>\n     rwaiting (rset_error_code s a') d a\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now we can instantiate CISK with some initial state, interrupt function, etc.\\<close>"], ["", "interpretation Inst:\n  Controllable_Interruptible_Separation_Kernel\n    rstep           \\<comment> \\<open>step function, without program stack\\<close>\n    routput_f       \\<comment> \\<open>output function\\<close>\n    \"\\<up>s0\"           \\<comment> \\<open>initial state\\<close>\n    rcurrent        \\<comment> \\<open>returns the currently active domain\\<close>\n    rcswitch        \\<comment> \\<open>switches the currently active domain\\<close>\n    \"(=) 42\"     \\<comment> \\<open>interrupt function (yet unspecified)\\<close>\n    rkinvolved      \\<comment> \\<open>returns a set of threads involved in the give action\\<close>\n    rifp            \\<comment> \\<open>information flow policy\\<close>\n    rvpeq           \\<comment> \\<open>view partitioning\\<close>\n    rAS_set         \\<comment> \\<open>the set of valid action sequences\\<close>\n    rinvariant      \\<comment> \\<open>the state invariant\\<close>\n    rprecondition   \\<comment> \\<open>the precondition for doing an action\\<close>\n    raborting       \\<comment> \\<open>condition under which an action is aborted\\<close>\n    rwaiting        \\<comment> \\<open>condition under which an action is delayed\\<close>\n    rset_error_code \\<comment> \\<open>updates the state. Has no meaning in the current model.\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Controllable_Interruptible_Separation_Kernel rstep routput_f \\<up> s0\n     rcurrent rcswitch rkinvolved rifp rvpeq rAS_set rinvariant\n     rprecondition raborting rwaiting rset_error_code", "using CISK_proof_obligations_satisfied"], ["proof (prove)\nusing this:\n  Controllable_Interruptible_Separation_Kernel rstep routput_f \\<up> s0\n   rcurrent rcswitch rkinvolved rifp rvpeq rAS_set rinvariant rprecondition\n   raborting rwaiting rset_error_code\n\ngoal (1 subgoal):\n 1. Controllable_Interruptible_Separation_Kernel rstep routput_f \\<up> s0\n     rcurrent rcswitch rkinvolved rifp rvpeq rAS_set rinvariant\n     rprecondition raborting rwaiting rset_error_code", "by auto"], ["", "text \\<open>The main theorem: the instantiation implements the information flow policy @{term ifp}.\\<close>"], ["", "theorem risecure:\n  \"Inst.isecure\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inst.isecure", "using Inst.unwinding_implies_isecure_CISK"], ["proof (prove)\nusing this:\n  Inst.isecure\n\ngoal (1 subgoal):\n 1. Inst.isecure", "by blast"], ["", "end"]]}