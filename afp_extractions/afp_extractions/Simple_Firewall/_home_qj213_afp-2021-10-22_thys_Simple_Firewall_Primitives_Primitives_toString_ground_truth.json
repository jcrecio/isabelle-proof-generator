{"file_name": "/home/qj213/afp-2021-10-22/thys/Simple_Firewall/Primitives/Primitives_toString.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Simple_Firewall", "problem_names": ["lemma \"ipv4_cidr_toString (ipv4addr_of_dotdecimal (192,168,0,1), 22) = ''192.168.0.1/22''\"", "lemma \"ipv6_cidr_toString (42540766411282592856906245548098208122, 64) = ''2001:db8::8:800:200c:417a/64''\"", "lemma \"iface_toString ''in: '' (Iface ''+'') = ''''\"", "lemma \"iface_toString ''in: '' (Iface ''eth0'') = ''in: eth0''\"", "lemma \"ports_toString ''spt: '' (0,65535) = ''''\"", "lemma \"ports_toString ''spt: '' (1024,2048) = ''spt: 1024:2048''\"", "lemma \"ports_toString ''spt: '' (1024,1024) = ''spt: 1024''\""], "translations": [["", "lemma \"ipv4_cidr_toString (ipv4addr_of_dotdecimal (192,168,0,1), 22) = ''192.168.0.1/22''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv4_cidr_toString (ipv4addr_of_dotdecimal (192, 168, 0, 1), 22) =\n    ''192.168.0.1/22''", "by eval"], ["", "definition ipv6_cidr_toString :: \"(ipv6addr \\<times> nat) \\<Rightarrow> string\" where\n  \"ipv6_cidr_toString ip_n = (case ip_n of (base, n) \\<Rightarrow>  (ipv6addr_toString base @''/''@ string_of_nat n))\""], ["", "lemma \"ipv6_cidr_toString (42540766411282592856906245548098208122, 64) = ''2001:db8::8:800:200c:417a/64''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6_cidr_toString (42540766411282592856906245548098208122, 64) =\n    ''2001:db8::8:800:200c:417a/64''", "by eval"], ["", "definition primitive_protocol_toString :: \"primitive_protocol \\<Rightarrow> string\" where\n  \"primitive_protocol_toString protid \\<equiv> ( \n  if protid = TCP then ''tcp'' else\n  if protid = UDP then ''udp'' else\n  if protid = ICMP then ''icmp'' else\n  if protid = L4_Protocol.SCTP then ''sctp'' else\n  if protid = L4_Protocol.IGMP then ''igmp'' else\n  if protid = L4_Protocol.GRE then ''gre'' else\n  if protid = L4_Protocol.ESP then ''esp'' else\n  if protid = L4_Protocol.AH then ''ah'' else\n  if protid = L4_Protocol.IPv6ICMP then ''ipv6-icmp'' else\n  ''protocolid:''@dec_string_of_word0 protid)\""], ["", "fun protocol_toString :: \"protocol \\<Rightarrow> string\" where\n  \"protocol_toString (ProtoAny) = ''all''\" |\n  \"protocol_toString (Proto protid) = primitive_protocol_toString protid\""], ["", "definition iface_toString :: \"string \\<Rightarrow> iface \\<Rightarrow> string\" where\n  \"iface_toString descr iface = (if iface = ifaceAny then '''' else\n      (case iface of (Iface name) \\<Rightarrow> descr@name))\""], ["", "lemma \"iface_toString ''in: '' (Iface ''+'') = ''''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iface_toString ''in: '' (Iface ''+'') = []", "by eval"], ["", "lemma \"iface_toString ''in: '' (Iface ''eth0'') = ''in: eth0''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iface_toString ''in: '' (Iface ''eth0'') = ''in: eth0''", "by eval"], ["", "definition port_toString :: \"16 word \\<Rightarrow> string\" where\n  \"port_toString p \\<equiv> dec_string_of_word0 p\""], ["", "fun ports_toString :: \"string \\<Rightarrow> (16 word \\<times> 16 word) \\<Rightarrow> string\" where\n  \"ports_toString descr (s,e) = (if s = 0 \\<and> e = max_word then '''' else descr @ (if s=e then port_toString s else port_toString s@'':''@port_toString e))\""], ["", "lemma \"ports_toString ''spt: '' (0,65535) = ''''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ports_toString ''spt: '' (0, 65535) = []", "by eval"], ["", "lemma \"ports_toString ''spt: '' (1024,2048) = ''spt: 1024:2048''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ports_toString ''spt: '' (1024, 2048) = ''spt: 1024:2048''", "by eval"], ["", "lemma \"ports_toString ''spt: '' (1024,1024) = ''spt: 1024''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ports_toString ''spt: '' (1024, 1024) = ''spt: 1024''", "by eval"], ["", "definition ipv4_cidr_opt_toString :: \"string \\<Rightarrow> ipv4addr \\<times> nat \\<Rightarrow> string\" where\n  \"ipv4_cidr_opt_toString descr ip = (if ip = (0,0) then '''' else\n      descr@ipv4_cidr_toString ip)\""], ["", "definition protocol_opt_toString :: \"string \\<Rightarrow> protocol \\<Rightarrow> string\" where\n  \"protocol_opt_toString descr prot = (if prot = ProtoAny then '''' else\n      descr@protocol_toString prot)\""], ["", "end"]]}