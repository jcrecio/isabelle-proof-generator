{"file_name": "/home/qj213/afp-2021-10-22/thys/Simple_Firewall/Common/Option_Helpers.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Simple_Firewall", "problem_names": ["lemma set_option2list[simp]: \"set (option2list k) = option2set k\"", "lemma option2list_simps[simp]: \"option2list (Some x) = [x]\" \"option2list (None) = []\"", "lemma option2set_None: \"option2set None = {}\"", "lemma option2list_map: \"option2list (map_option f n) = map f (option2list n)\"", "lemma option2set_map: \"option2set (map_option f n) = f ` option2set n\""], "translations": [["", "lemma set_option2list[simp]: \"set (option2list k) = option2set k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (option2list k) = option2set k", "unfolding option2list_def option2set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (case k of None \\<Rightarrow> [] | Some s \\<Rightarrow> [s]) =\n    (case k of None \\<Rightarrow> {} | Some s \\<Rightarrow> {s})", "by (simp split: option.splits)"], ["", "lemma option2list_simps[simp]: \"option2list (Some x) = [x]\" \"option2list (None) = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. option2list (Some x) = [x] &&& option2list None = []", "unfolding option2list_def option.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [x] = [x] &&& [] = []", "by(fact refl)+"], ["", "lemma option2set_None: \"option2set None = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. option2set None = {}", "by(simp add: option2set_def)"], ["", "lemma option2list_map: \"option2list (map_option f n) = map f (option2list n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. option2list (map_option f n) = map f (option2list n)", "by(simp add: option2list_def split: option.split)"], ["", "lemma option2set_map: \"option2set (map_option f n) = f ` option2set n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. option2set (map_option f n) = f ` option2set n", "by(simp add: option2set_def split: option.split)"], ["", "end"]]}