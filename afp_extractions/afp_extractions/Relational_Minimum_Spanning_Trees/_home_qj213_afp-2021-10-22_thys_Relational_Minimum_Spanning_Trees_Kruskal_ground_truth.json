{"file_name": "/home/qj213/afp-2021-10-22/thys/Relational_Minimum_Spanning_Trees/Kruskal.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Relational_Minimum_Spanning_Trees", "problem_names": ["lemma kruskal_vc_1:\n  assumes \"symmetric g\"\n    shows \"kruskal_spanning_invariant bot g g\"", "lemma kruskal_vc_2:\n  assumes \"kruskal_spanning_invariant f g h\"\n      and \"h \\<noteq> bot\"\n    shows \"(minarc h \\<le> -forest_components f \\<longrightarrow> kruskal_spanning_invariant ((f \\<sqinter> -(top * minarc h * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> minarc h) g (h \\<sqinter> -minarc h \\<sqinter> -minarc h\\<^sup>T)\n                                               \\<and> card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -minarc h \\<and> x \\<le> -minarc h\\<^sup>T } < card { x . regular x \\<and> x \\<le> --h }) \\<and>\n           (\\<not> minarc h \\<le> -forest_components f \\<longrightarrow> kruskal_spanning_invariant f g (h \\<sqinter> -minarc h \\<sqinter> -minarc h\\<^sup>T)\n                                                 \\<and> card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -minarc h \\<and> x \\<le> -minarc h\\<^sup>T } < card { x . regular x \\<and> x \\<le> --h })\"", "theorem kruskal_spanning:\n  \"VARS e f h\n  [ symmetric g ]\n  f := bot;\n  h := g;\n  WHILE h \\<noteq> bot\n    INV { kruskal_spanning_invariant f g h }\n    VAR { card { x . regular x \\<and> x \\<le> --h } }\n     DO e := minarc h;\n        IF e \\<le> -forest_components f THEN\n          f := (f \\<sqinter> -(top * e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> e\n        ELSE\n          SKIP\n        FI;\n        h := h \\<sqinter> -e \\<sqinter> -e\\<^sup>T\n     OD\n  [ spanning_forest f g ]\"", "lemma kruskal_exists_spanning:\n  \"symmetric g \\<Longrightarrow> \\<exists>f . spanning_forest f g\"", "lemma kruskal_exists_minimal_spanning:\n  assumes \"symmetric g\"\n    shows \"\\<exists>f . minimum_spanning_forest f g\"", "theorem kruskal:\n  \"VARS e f h\n  [ symmetric g ]\n  f := bot;\n  h := g;\n  WHILE h \\<noteq> bot\n    INV { kruskal_invariant f g h }\n    VAR { card { x . regular x \\<and> x \\<le> --h } }\n     DO e := minarc h;\n        IF e \\<le> -forest_components f THEN\n          f := (f \\<sqinter> -(top * e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> e\n        ELSE\n          SKIP\n        FI;\n        h := h \\<sqinter> -e \\<sqinter> -e\\<^sup>T\n     OD\n  [ minimum_spanning_forest f g ]\""], "translations": [["", "lemma kruskal_vc_1:\n  assumes \"symmetric g\"\n    shows \"kruskal_spanning_invariant bot g g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kruskal_spanning_invariant bot g g", "proof (unfold kruskal_spanning_invariant_def, intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. symmetric g\n 2. g = g\\<^sup>T\n 3. g \\<sqinter> - - g = g\n 4. spanning_forest bot (- g \\<sqinter> g)", "show \"symmetric g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g", "using assms"], ["proof (prove)\nusing this:\n  symmetric g\n\ngoal (1 subgoal):\n 1. symmetric g", "by simp"], ["proof (state)\nthis:\n  symmetric g\n\ngoal (3 subgoals):\n 1. g = g\\<^sup>T\n 2. g \\<sqinter> - - g = g\n 3. spanning_forest bot (- g \\<sqinter> g)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. g = g\\<^sup>T\n 2. g \\<sqinter> - - g = g\n 3. spanning_forest bot (- g \\<sqinter> g)", "show \"g = g\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = g\\<^sup>T", "using assms"], ["proof (prove)\nusing this:\n  symmetric g\n\ngoal (1 subgoal):\n 1. g = g\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  g = g\\<^sup>T\n\ngoal (2 subgoals):\n 1. g \\<sqinter> - - g = g\n 2. spanning_forest bot (- g \\<sqinter> g)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<sqinter> - - g = g\n 2. spanning_forest bot (- g \\<sqinter> g)", "show \"g \\<sqinter> --g = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<sqinter> - - g = g", "using inf.sup_monoid.add_commute selection_closed_id"], ["proof (prove)\nusing this:\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n  selection ?x ?x\n\ngoal (1 subgoal):\n 1. g \\<sqinter> - - g = g", "by simp"], ["proof (state)\nthis:\n  g \\<sqinter> - - g = g\n\ngoal (1 subgoal):\n 1. spanning_forest bot (- g \\<sqinter> g)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. spanning_forest bot (- g \\<sqinter> g)", "show \"spanning_forest bot (-g \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest bot (- g \\<sqinter> g)", "using star.circ_transitive_equal spanning_forest_def"], ["proof (prove)\nusing this:\n  idempotent (?x\\<^sup>\\<star>)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. spanning_forest bot (- g \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  spanning_forest bot (- g \\<sqinter> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma kruskal_vc_2:\n  assumes \"kruskal_spanning_invariant f g h\"\n      and \"h \\<noteq> bot\"\n    shows \"(minarc h \\<le> -forest_components f \\<longrightarrow> kruskal_spanning_invariant ((f \\<sqinter> -(top * minarc h * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> minarc h) g (h \\<sqinter> -minarc h \\<sqinter> -minarc h\\<^sup>T)\n                                               \\<and> card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -minarc h \\<and> x \\<le> -minarc h\\<^sup>T } < card { x . regular x \\<and> x \\<le> --h }) \\<and>\n           (\\<not> minarc h \\<le> -forest_components f \\<longrightarrow> kruskal_spanning_invariant f g (h \\<sqinter> -minarc h \\<sqinter> -minarc h\\<^sup>T)\n                                                 \\<and> card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -minarc h \\<and> x \\<le> -minarc h\\<^sup>T } < card { x . regular x \\<and> x \\<le> --h })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?e = \"minarc h\""], ["proof (state)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?f = \"(f \\<sqinter> -(top * ?e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * ?e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> ?e\""], ["proof (state)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?h = \"h \\<sqinter> -?e \\<sqinter> -?e\\<^sup>T\""], ["proof (state)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?F = \"forest_components f\""], ["proof (state)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?n1 = \"card { x . regular x \\<and> x \\<le> --h }\""], ["proof (state)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?n2 = \"card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -?e \\<and> x \\<le> -?e\\<^sup>T }\""], ["proof (state)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "have 1: \"regular f \\<and> regular ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular f \\<and> regular (minarc h)", "by (metis assms(1) kruskal_spanning_invariant_def spanning_forest_def minarc_regular)"], ["proof (state)\nthis:\n  regular f \\<and> regular (minarc h)\n\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "hence 2: \"regular ?f \\<and> regular ?F \\<and> regular (?e\\<^sup>T)\""], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h) \\<and>\n    regular (forest_components f) \\<and> regular (minarc h\\<^sup>T)", "using regular_closed_star regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>\\<star>)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h) \\<and>\n    regular (forest_components f) \\<and> regular (minarc h\\<^sup>T)", "by simp"], ["proof (state)\nthis:\n  regular\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h) \\<and>\n  regular (forest_components f) \\<and> regular (minarc h\\<^sup>T)\n\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "have 3: \"\\<not> ?e \\<le> -?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - minarc h", "using assms(2) inf.orderE minarc_bot_iff"], ["proof (prove)\nusing this:\n  h \\<noteq> bot\n  \\<lbrakk>?a \\<le> ?b;\n   ?a = ?a \\<sqinter> ?b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  (minarc ?x = bot) = (?x = bot)\n\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - minarc h", "by fastforce"], ["proof (state)\nthis:\n  \\<not> minarc h \\<le> - minarc h\n\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "have 4: \"?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "apply (rule psubset_card_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite {x. regular x \\<and> x \\<le> - - h}\n 2. {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - - h}", "using finite_regular"], ["proof (prove)\nusing this:\n  finite {x. regular x}\n\ngoal (2 subgoals):\n 1. finite {x. regular x \\<and> x \\<le> - - h}\n 2. {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - - h}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - - h}", "using 1 3 kruskal_spanning_invariant_def minarc_below"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n  \\<not> minarc h \\<le> - minarc h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  minarc ?x \\<le> - - ?x\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - - h}", "by auto"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "show \"(?e \\<le> -?F \\<longrightarrow> kruskal_spanning_invariant ?f g ?h \\<and> ?n2 < ?n1) \\<and> (\\<not> ?e \\<le> -?F \\<longrightarrow> kruskal_spanning_invariant f g ?h \\<and> ?n2 < ?n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "proof (rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "have 5: \"injective ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "apply (rule kruskal_injective_inv)"], ["proof (prove)\ngoal (7 subgoals):\n 1. injective f\n 2. covector (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 4. minarc h \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 5. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T \\<le> - minarc h\n 6. injective (minarc h)\n 7. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (7 subgoals):\n 1. injective f\n 2. covector (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 4. minarc h \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 5. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T \\<le> - minarc h\n 6. injective (minarc h)\n 7. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. covector (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 2. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 3. minarc h \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 4. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T \\<le> - minarc h\n 5. injective (minarc h)\n 6. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply (simp add: covector_mult_closed)"], ["proof (prove)\ngoal (5 subgoals):\n 1. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 2. minarc h \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 3. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T \\<le> - minarc h\n 4. injective (minarc h)\n 5. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply (simp add: comp_associative comp_isotone star.right_plus_below_circ)"], ["proof (prove)\ngoal (4 subgoals):\n 1. minarc h \\<le> top * minarc h * f\\<^sup>T\\<^sup>\\<star>\n 2. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T \\<le> - minarc h\n 3. injective (minarc h)\n 4. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply (meson mult_left_isotone order_lesseq_imp star_outer_increasing top.extremum)"], ["proof (prove)\ngoal (3 subgoals):\n 1. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T \\<le> - minarc h\n 2. injective (minarc h)\n 3. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "using assms(1,2) kruskal_spanning_invariant_def kruskal_injective_inv_2 minarc_arc spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  h \\<noteq> bot\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  \\<lbrakk>arc ?e; pd_kleene_allegory_class.acyclic ?f\\<rbrakk>\n  \\<Longrightarrow> top * ?e * ?f\\<^sup>T\\<^sup>\\<star> * ?f\\<^sup>T\n                    \\<le> - ?e\n  ?x \\<noteq> bot \\<longrightarrow> arc (minarc ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (3 subgoals):\n 1. top * minarc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T \\<le> - minarc h\n 2. injective (minarc h)\n 3. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. injective (minarc h)\n 2. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "using assms(2) arc_injective minarc_arc"], ["proof (prove)\nusing this:\n  h \\<noteq> bot\n  arc ?x \\<Longrightarrow> injective ?x\n  ?x \\<noteq> bot \\<longrightarrow> arc (minarc ?x)\n\ngoal (2 subgoals):\n 1. injective (minarc h)\n 2. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "using assms(1,2) kruskal_spanning_invariant_def kruskal_injective_inv_3 minarc_arc spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  h \\<noteq> bot\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  \\<lbrakk>arc ?e; forest ?f\\<rbrakk>\n  \\<Longrightarrow> coreflexive\n                     ((top * ?e * ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n                      (top * ?e * ?f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n                      ?f\\<^sup>T * ?f)\n  ?x \\<noteq> bot \\<longrightarrow> arc (minarc ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. coreflexive\n     ((top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "by simp"], ["proof (state)\nthis:\n  injective\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n\ngoal (2 subgoals):\n 1. minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?e \\<le> -?F \\<longrightarrow> kruskal_spanning_invariant ?f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "assume 6: \"?e \\<le> -?F\""], ["proof (state)\nthis:\n  minarc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "have 7: \"equivalence ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "using assms(1) kruskal_spanning_invariant_def forest_components_equivalence spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  injective ?x \\<Longrightarrow> equivalence (forest_components ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "by simp"], ["proof (state)\nthis:\n  equivalence (forest_components f)\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "have \"?e\\<^sup>T * top * ?e\\<^sup>T = ?e\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T", "using assms(2)"], ["proof (prove)\nusing this:\n  h \\<noteq> bot\n\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T", "by (simp add: arc_top_arc minarc_arc)"], ["proof (state)\nthis:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "hence \"?e\\<^sup>T * top * ?e\\<^sup>T \\<le> -?F\""], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T\n\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f", "using 6 7 conv_complement conv_isotone"], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T\n  minarc h \\<le> - forest_components f\n  equivalence (forest_components f)\n  (- ?x)\\<^sup>T = - ?x\\<^sup>T\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>T \\<le> ?y\\<^sup>T\n\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f", "by fastforce"], ["proof (state)\nthis:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "hence 8: \"?e * ?F * ?e = bot\""], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. minarc h * forest_components f * minarc h = bot", "using le_bot triple_schroeder_p"], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f\n  ?a \\<le> bot \\<Longrightarrow> ?a = bot\n  (?x * ?y * ?z \\<le> - ?w) = (?x\\<^sup>T * ?w * ?z\\<^sup>T \\<le> - ?y)\n\ngoal (1 subgoal):\n 1. minarc h * forest_components f * minarc h = bot", "by simp"], ["proof (state)\nthis:\n  minarc h * forest_components f * minarc h = bot\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"kruskal_spanning_invariant ?f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof (unfold kruskal_spanning_invariant_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. symmetric g\n 2. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T\n 3. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 4. spanning_forest\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"symmetric g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g", "using assms(1) kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. symmetric g", "by simp"], ["proof (state)\nthis:\n  symmetric g\n\ngoal (4 subgoals):\n 1. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T\n 2. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 3. spanning_forest\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T\n 2. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 3. spanning_forest\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?h = ?h\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T", "using assms(1)"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n\ngoal (1 subgoal):\n 1. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T", "by (simp add: conv_complement conv_dist_inf inf_commute inf_left_commute kruskal_spanning_invariant_def)"], ["proof (state)\nthis:\n  h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n  (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T\n\ngoal (3 subgoals):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 2. spanning_forest\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 2. spanning_forest\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"g \\<sqinter> --?h = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T", "using 1 2"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n  regular\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h) \\<and>\n  regular (forest_components f) \\<and> regular (minarc h\\<^sup>T)\n\ngoal (1 subgoal):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T", "by (metis (hide_lams) assms(1) kruskal_spanning_invariant_def inf_assoc pp_dist_inf)"], ["proof (state)\nthis:\n  g \\<sqinter> - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n  h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n\ngoal (2 subgoals):\n 1. spanning_forest\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. spanning_forest\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"spanning_forest ?f (-?h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)", "proof (unfold spanning_forest_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. injective\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n 2. pd_kleene_allegory_class.acyclic\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n 3. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)\n 4. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            minarc h)\n 5. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "show \"injective ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "using 5"], ["proof (prove)\nusing this:\n  injective\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n\ngoal (1 subgoal):\n 1. injective\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "by simp"], ["proof (state)\nthis:\n  injective\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n 2. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)\n 3. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            minarc h)\n 4. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n 2. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)\n 3. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            minarc h)\n 4. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "show \"acyclic ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "apply (rule kruskal_acyclic_inv)"], ["proof (prove)\ngoal (5 subgoals):\n 1. pd_kleene_allegory_class.acyclic f\n 2. covector (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    minarc h =\n    bot\n 4. minarc h * f\\<^sup>\\<star> * minarc h = bot\n 5. forest_components f \\<le> - minarc h", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (5 subgoals):\n 1. pd_kleene_allegory_class.acyclic f\n 2. covector (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    minarc h =\n    bot\n 4. minarc h * f\\<^sup>\\<star> * minarc h = bot\n 5. forest_components f \\<le> - minarc h", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. covector (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 2. (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    minarc h =\n    bot\n 3. minarc h * f\\<^sup>\\<star> * minarc h = bot\n 4. forest_components f \\<le> - minarc h", "apply (simp add: covector_mult_closed)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    minarc h =\n    bot\n 2. minarc h * f\\<^sup>\\<star> * minarc h = bot\n 3. forest_components f \\<le> - minarc h", "using 8 assms(1) kruskal_spanning_invariant_def spanning_forest_def kruskal_acyclic_inv_1"], ["proof (prove)\nusing this:\n  minarc h * forest_components f * minarc h = bot\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n  \\<lbrakk>injective ?f; ?e * forest_components ?f * ?e = bot\\<rbrakk>\n  \\<Longrightarrow> (?f \\<sqinter>\n                     top * ?e * ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n                    ?f\\<^sup>\\<star> *\n                    ?e =\n                    bot\n\ngoal (3 subgoals):\n 1. (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    minarc h =\n    bot\n 2. minarc h * f\\<^sup>\\<star> * minarc h = bot\n 3. forest_components f \\<le> - minarc h", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. minarc h * f\\<^sup>\\<star> * minarc h = bot\n 2. forest_components f \\<le> - minarc h", "using 8"], ["proof (prove)\nusing this:\n  minarc h * forest_components f * minarc h = bot\n\ngoal (2 subgoals):\n 1. minarc h * f\\<^sup>\\<star> * minarc h = bot\n 2. forest_components f \\<le> - minarc h", "apply (metis comp_associative mult_left_sub_dist_sup_left star.circ_loop_fixpoint sup_commute le_bot)"], ["proof (prove)\ngoal (1 subgoal):\n 1. forest_components f \\<le> - minarc h", "using 6"], ["proof (prove)\nusing this:\n  minarc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. forest_components f \\<le> - minarc h", "by (simp add: p_antitone_iff)"], ["proof (state)\nthis:\n  pd_kleene_allegory_class.acyclic\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n\ngoal (3 subgoals):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)\n 2. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            minarc h)\n 3. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)\n 2. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            minarc h)\n 3. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "show \"?f \\<le> --(-?h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)", "apply (rule kruskal_subgraph_inv)"], ["proof (prove)\ngoal (4 subgoals):\n 1. f \\<le> - - (- h \\<sqinter> g)\n 2. minarc h \\<le> - - g\n 3. symmetric h\n 4. symmetric g", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (4 subgoals):\n 1. f \\<le> - - (- h \\<sqinter> g)\n 2. minarc h \\<le> - - g\n 3. symmetric h\n 4. symmetric g", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. minarc h \\<le> - - g\n 2. symmetric h\n 3. symmetric g", "using assms(1)"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n\ngoal (3 subgoals):\n 1. minarc h \\<le> - - g\n 2. symmetric h\n 3. symmetric g", "apply (metis kruskal_spanning_invariant_def minarc_below order.trans pp_isotone_inf)"], ["proof (prove)\ngoal (2 subgoals):\n 1. symmetric h\n 2. symmetric g", "using assms(1) kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (2 subgoals):\n 1. symmetric h\n 2. symmetric g", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g", "using assms(1) kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. symmetric g", "by simp"], ["proof (state)\nthis:\n  f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                - minarc h\\<^sup>T) \\<sqinter>\n             g)\n\ngoal (2 subgoals):\n 1. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            minarc h)\n 2. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            minarc h)\n 2. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "show \"components (-?h \\<sqinter> g) \\<le> forest_components ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            minarc h)", "apply (rule kruskal_spanning_inv)"], ["proof (prove)\ngoal (4 subgoals):\n 1. injective\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n 2. regular (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. regular (minarc h)\n 4. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "using 5"], ["proof (prove)\nusing this:\n  injective\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n\ngoal (4 subgoals):\n 1. injective\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n 2. regular (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. regular (minarc h)\n 4. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. regular (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 2. regular (minarc h)\n 3. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "using 1 regular_closed_star regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>\\<star>)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (3 subgoals):\n 1. regular (top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\n 2. regular (minarc h)\n 3. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. regular (minarc h)\n 2. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "using 1"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n\ngoal (2 subgoals):\n 1. regular (minarc h)\n 2. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "by simp"], ["proof (state)\nthis:\n  components\n   (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter> g)\n  \\<le> forest_components\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "show \"regular ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "using 2"], ["proof (prove)\nusing this:\n  regular\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h) \\<and>\n  regular (forest_components f) \\<and> regular (minarc h\\<^sup>T)\n\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)", "by simp"], ["proof (state)\nthis:\n  regular\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spanning_forest\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n   (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "using 4"], ["proof (prove)\nusing this:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "by simp"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  kruskal_spanning_invariant\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n   g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  minarc h \\<le> - forest_components f \\<longrightarrow>\n  kruskal_spanning_invariant\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n   g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"\\<not> ?e \\<le> -?F \\<longrightarrow> kruskal_spanning_invariant f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "assume \"\\<not> ?e \\<le> -?F\""], ["proof (state)\nthis:\n  \\<not> minarc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "hence 9: \"?e \\<le> ?F\""], ["proof (prove)\nusing this:\n  \\<not> minarc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. minarc h \\<le> forest_components f", "using 2 assms(2) arc_in_partition minarc_arc"], ["proof (prove)\nusing this:\n  \\<not> minarc h \\<le> - forest_components f\n  regular\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h) \\<and>\n  regular (forest_components f) \\<and> regular (minarc h\\<^sup>T)\n  h \\<noteq> bot\n  arc ?x \\<Longrightarrow> ?x \\<le> - ?y \\<or> ?x \\<le> - - ?y\n  ?x \\<noteq> bot \\<longrightarrow> arc (minarc ?x)\n\ngoal (1 subgoal):\n 1. minarc h \\<le> forest_components f", "by fastforce"], ["proof (state)\nthis:\n  minarc h \\<le> forest_components f\n\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"kruskal_spanning_invariant f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kruskal_spanning_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof (unfold kruskal_spanning_invariant_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. symmetric g\n 2. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T\n 3. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 4. spanning_forest f\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"symmetric g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g", "using assms(1) kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. symmetric g", "by simp"], ["proof (state)\nthis:\n  symmetric g\n\ngoal (4 subgoals):\n 1. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T\n 2. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 3. spanning_forest f\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T\n 2. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 3. spanning_forest f\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?h = ?h\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T", "using assms(1)"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n\ngoal (1 subgoal):\n 1. h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T", "by (simp add: conv_complement conv_dist_inf inf_commute inf_left_commute kruskal_spanning_invariant_def)"], ["proof (state)\nthis:\n  h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T =\n  (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\\<^sup>T\n\ngoal (3 subgoals):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 2. spanning_forest f\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n 2. spanning_forest f\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"g \\<sqinter> --?h = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T", "using 1 2"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n  regular\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h) \\<and>\n  regular (forest_components f) \\<and> regular (minarc h\\<^sup>T)\n\ngoal (1 subgoal):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n    h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T", "by (metis (hide_lams) assms(1) kruskal_spanning_invariant_def inf_assoc pp_dist_inf)"], ["proof (state)\nthis:\n  g \\<sqinter> - - (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) =\n  h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T\n\ngoal (2 subgoals):\n 1. spanning_forest f\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. spanning_forest f\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"spanning_forest f (-?h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest f\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)", "proof (unfold spanning_forest_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. injective f\n 2. pd_kleene_allegory_class.acyclic f\n 3. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)\n 4. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 5. regular f", "show \"injective f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective f", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. injective f", "by simp"], ["proof (state)\nthis:\n  injective f\n\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic f\n 2. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)\n 3. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 4. regular f", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic f\n 2. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)\n 3. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 4. regular f", "show \"acyclic f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic f", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic f", "by simp"], ["proof (state)\nthis:\n  pd_kleene_allegory_class.acyclic f\n\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "have \"f \\<le> --(-h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<le> - - (- h \\<sqinter> g)", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. f \\<le> - - (- h \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  f \\<le> - - (- h \\<sqinter> g)\n\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "also"], ["proof (state)\nthis:\n  f \\<le> - - (- h \\<sqinter> g)\n\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "have \"... \\<le> --(-?h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - (- h \\<sqinter> g)\n    \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)", "using comp_inf.mult_right_isotone inf.sup_monoid.add_commute inf_left_commute p_antitone_inf pp_isotone"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<sqinter> ?x \\<le> ?z \\<sqinter> ?y\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?y \\<sqinter> (?x \\<sqinter> ?z)\n  - ?x \\<le> - (?x \\<sqinter> ?y)\n  ?x \\<le> ?y \\<Longrightarrow> - - ?x \\<le> - - ?y\n\ngoal (1 subgoal):\n 1. - - (- h \\<sqinter> g)\n    \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)", "by presburger"], ["proof (state)\nthis:\n  - - (- h \\<sqinter> g)\n  \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                - minarc h\\<^sup>T) \\<sqinter>\n             g)\n\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "finally"], ["proof (chain)\npicking this:\n  f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)", "show \"f \\<le> --(-?h \\<sqinter> g)\""], ["proof (prove)\nusing this:\n  f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)\n\ngoal (1 subgoal):\n 1. f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                    - minarc h\\<^sup>T) \\<sqinter>\n                 g)", "by simp"], ["proof (state)\nthis:\n  f \\<le> - - (- (h \\<sqinter> - minarc h \\<sqinter>\n                  - minarc h\\<^sup>T) \\<sqinter>\n               g)\n\ngoal (2 subgoals):\n 1. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 2. regular f", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 2. regular f", "show \"components (-?h \\<sqinter> g) \\<le> ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. components\n     (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f", "apply (rule kruskal_spanning_inv_1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. minarc h \\<le> forest_components f\n 2. regular (minarc h)\n 3. components (- h \\<sqinter> g) \\<le> forest_components f\n 4. equivalence (forest_components f)", "using 9"], ["proof (prove)\nusing this:\n  minarc h \\<le> forest_components f\n\ngoal (4 subgoals):\n 1. minarc h \\<le> forest_components f\n 2. regular (minarc h)\n 3. components (- h \\<sqinter> g) \\<le> forest_components f\n 4. equivalence (forest_components f)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. regular (minarc h)\n 2. components (- h \\<sqinter> g) \\<le> forest_components f\n 3. equivalence (forest_components f)", "using 1"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n\ngoal (3 subgoals):\n 1. regular (minarc h)\n 2. components (- h \\<sqinter> g) \\<le> forest_components f\n 3. equivalence (forest_components f)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. components (- h \\<sqinter> g) \\<le> forest_components f\n 2. equivalence (forest_components f)", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (2 subgoals):\n 1. components (- h \\<sqinter> g) \\<le> forest_components f\n 2. equivalence (forest_components f)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "using assms(1) kruskal_spanning_invariant_def forest_components_equivalence spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  injective ?x \\<Longrightarrow> equivalence (forest_components ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "by simp"], ["proof (state)\nthis:\n  components\n   (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter> g)\n  \\<le> forest_components f\n\ngoal (1 subgoal):\n 1. regular f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. regular f", "show \"regular f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular f", "using 1"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (minarc h)\n\ngoal (1 subgoal):\n 1. regular f", "by simp"], ["proof (state)\nthis:\n  regular f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spanning_forest f\n   (- (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "using 4"], ["proof (prove)\nusing this:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "by simp"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  kruskal_spanning_invariant f g\n   (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n  kruskal_spanning_invariant f g\n   (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (minarc h \\<le> - forest_components f \\<longrightarrow>\n   kruskal_spanning_invariant\n    (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (f \\<sqinter>\n      top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     minarc h)\n    g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n   card\n    {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n   < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n  (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n   kruskal_spanning_invariant f g\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n   card\n    {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n   < card {x. regular x \\<and> x \\<le> - - h})\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThe following result shows that Kruskal's algorithm terminates and constructs a spanning tree.\nWe cannot yet show that this is a minimum spanning tree.\n\\<close>"], ["", "theorem kruskal_spanning:\n  \"VARS e f h\n  [ symmetric g ]\n  f := bot;\n  h := g;\n  WHILE h \\<noteq> bot\n    INV { kruskal_spanning_invariant f g h }\n    VAR { card { x . regular x \\<and> x \\<le> --h } }\n     DO e := minarc h;\n        IF e \\<le> -forest_components f THEN\n          f := (f \\<sqinter> -(top * e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> e\n        ELSE\n          SKIP\n        FI;\n        h := h \\<sqinter> -e \\<sqinter> -e\\<^sup>T\n     OD\n  [ spanning_forest f g ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [symmetric g] \n     f := bot;\n     h := g;\n     WHILE h \\<noteq> bot INV {kruskal_spanning_invariant f g h} \n      VAR {\\<lambda>(e, f, h). card {x. regular x \\<and> x \\<le> - - h}} \n      DO e := minarc h;\n         IF e \\<le> - forest_components f\n          THEN f := f \\<sqinter>\n                    - (top * e * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                    (f \\<sqinter>\n                     top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                    e \n          ELSE SKIP FI;\n         h := h \\<sqinter> - e \\<sqinter> - e\\<^sup>T \n      OD \n     [spanning_forest f g]", "apply vcg_tc_simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. symmetric g \\<Longrightarrow> kruskal_spanning_invariant bot g g\n 2. \\<And>f h.\n       kruskal_spanning_invariant f g h \\<and>\n       h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 3. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "using kruskal_vc_1"], ["proof (prove)\nusing this:\n  symmetric ?g \\<Longrightarrow> kruskal_spanning_invariant bot ?g ?g\n\ngoal (3 subgoals):\n 1. symmetric g \\<Longrightarrow> kruskal_spanning_invariant bot g g\n 2. \\<And>f h.\n       kruskal_spanning_invariant f g h \\<and>\n       h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 3. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_spanning_invariant f g h \\<and>\n       h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "using kruskal_vc_2"], ["proof (prove)\nusing this:\n  \\<lbrakk>kruskal_spanning_invariant ?f ?g ?h; ?h \\<noteq> bot\\<rbrakk>\n  \\<Longrightarrow> (minarc ?h\n                     \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant\n                      (?f \\<sqinter>\n                       - (top * minarc ?h *\n                          ?f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                       (?f \\<sqinter>\n                        top * minarc ?h *\n                        ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                       minarc ?h)\n                      ?g (?h \\<sqinter> - minarc ?h \\<sqinter>\n                          - minarc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - minarc ?h \\<and>\n                          x \\<le> - minarc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h}) \\<and>\n                    (\\<not> minarc ?h\n                            \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant ?f ?g\n                      (?h \\<sqinter> - minarc ?h \\<sqinter>\n                       - minarc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - minarc ?h \\<and>\n                          x \\<le> - minarc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h})\n\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_spanning_invariant f g h \\<and>\n       h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       \\<lbrakk>kruskal_spanning_invariant f g h \\<and> h \\<noteq> bot;\n        \\<And>f g h.\n           \\<lbrakk>kruskal_spanning_invariant f g h;\n            h \\<noteq> bot\\<rbrakk>\n           \\<Longrightarrow> (minarc h\n                              \\<le> - forest_components f \\<longrightarrow>\n                              kruskal_spanning_invariant\n                               (f \\<sqinter>\n                                - (top * minarc h *\n                                   f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                                (f \\<sqinter>\n                                 top * minarc h *\n                                 f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                                minarc h)\n                               g (h \\<sqinter> - minarc h \\<sqinter>\n                                  - minarc h\\<^sup>T) \\<and>\n                              card\n                               {x. regular x \\<and>\n                                   x \\<le> - - h \\<and>\n                                   x \\<le> - minarc h \\<and>\n                                   x \\<le> - minarc h\\<^sup>T}\n                              < card\n                                 {x. regular x \\<and> x \\<le> - - h}) \\<and>\n                             (\\<not> minarc h\n                                     \\<le> - forest_components\n        f \\<longrightarrow>\n                              kruskal_spanning_invariant f g\n                               (h \\<sqinter> - minarc h \\<sqinter>\n                                - minarc h\\<^sup>T) \\<and>\n                              card\n                               {x. regular x \\<and>\n                                   x \\<le> - - h \\<and>\n                                   x \\<le> - minarc h \\<and>\n                                   x \\<le> - minarc h\\<^sup>T}\n                              < card\n                                 {x. regular x \\<and>\n                                     x \\<le> - - h})\\<rbrakk>\n       \\<Longrightarrow> card\n                          {x. regular x \\<and>\n                              x \\<le> - - h \\<and>\n                              x \\<le> - minarc h \\<and>\n                              x \\<le> - minarc h\\<^sup>T}\n                         < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "using kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (2 subgoals):\n 1. \\<And>f h.\n       \\<lbrakk>kruskal_spanning_invariant f g h \\<and> h \\<noteq> bot;\n        \\<And>f g h.\n           \\<lbrakk>kruskal_spanning_invariant f g h;\n            h \\<noteq> bot\\<rbrakk>\n           \\<Longrightarrow> (minarc h\n                              \\<le> - forest_components f \\<longrightarrow>\n                              kruskal_spanning_invariant\n                               (f \\<sqinter>\n                                - (top * minarc h *\n                                   f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                                (f \\<sqinter>\n                                 top * minarc h *\n                                 f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                                minarc h)\n                               g (h \\<sqinter> - minarc h \\<sqinter>\n                                  - minarc h\\<^sup>T) \\<and>\n                              card\n                               {x. regular x \\<and>\n                                   x \\<le> - - h \\<and>\n                                   x \\<le> - minarc h \\<and>\n                                   x \\<le> - minarc h\\<^sup>T}\n                              < card\n                                 {x. regular x \\<and> x \\<le> - - h}) \\<and>\n                             (\\<not> minarc h\n                                     \\<le> - forest_components\n        f \\<longrightarrow>\n                              kruskal_spanning_invariant f g\n                               (h \\<sqinter> - minarc h \\<sqinter>\n                                - minarc h\\<^sup>T) \\<and>\n                              card\n                               {x. regular x \\<and>\n                                   x \\<le> - - h \\<and>\n                                   x \\<le> - minarc h \\<and>\n                                   x \\<le> - minarc h\\<^sup>T}\n                              < card\n                                 {x. regular x \\<and>\n                                     x \\<le> - - h})\\<rbrakk>\n       \\<Longrightarrow> card\n                          {x. regular x \\<and>\n                              x \\<le> - - h \\<and>\n                              x \\<le> - minarc h \\<and>\n                              x \\<le> - minarc h\\<^sup>T}\n                         < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "by auto"], ["", "text \\<open>\nBecause we have shown total correctness, we conclude that a spanning tree exists.\n\\<close>"], ["", "lemma kruskal_exists_spanning:\n  \"symmetric g \\<Longrightarrow> \\<exists>f . spanning_forest f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g \\<Longrightarrow> \\<exists>f. spanning_forest f g", "using tc_extract_function kruskal_spanning"], ["proof (prove)\nusing this:\n  [?p] \n   ?c \n   [?q] \\<Longrightarrow>\n  \\<exists>f. \\<forall>s. s \\<in> ?p \\<longrightarrow> f s \\<in> ?q\n  [symmetric ?g] \n   f := bot;\n   h := ?g;\n   WHILE h \\<noteq> bot INV {kruskal_spanning_invariant f ?g h} \n    VAR {\\<lambda>(e, f, h). card {x. regular x \\<and> x \\<le> - - h}} \n    DO e := minarc h;\n       IF e \\<le> - forest_components f\n        THEN f := f \\<sqinter>\n                  - (top * e * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                  (f \\<sqinter>\n                   top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                  e \n        ELSE SKIP FI;\n       h := h \\<sqinter> - e \\<sqinter> - e\\<^sup>T \n    OD \n   [spanning_forest f ?g]\n\ngoal (1 subgoal):\n 1. symmetric g \\<Longrightarrow> \\<exists>f. spanning_forest f g", "by blast"], ["", "text \\<open>\nThis implies that a minimum spanning tree exists, which is used in the subsequent correctness proof.\n\\<close>"], ["", "lemma kruskal_exists_minimal_spanning:\n  assumes \"symmetric g\"\n    shows \"\\<exists>f . minimum_spanning_forest f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. minimum_spanning_forest f g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f. minimum_spanning_forest f g", "let ?s = \"{ f . spanning_forest f g }\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f. minimum_spanning_forest f g", "have \"\\<exists>m\\<in>?s . \\<forall>z\\<in>?s . sum (m \\<sqinter> g) \\<le> sum (z \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>{f. spanning_forest f g}.\n       \\<forall>z\\<in>{f. spanning_forest f g}.\n          sum_class.sum (m \\<sqinter> g)\n          \\<le> sum_class.sum (z \\<sqinter> g)", "apply (rule finite_set_minimal)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite {f. spanning_forest f g}\n 2. {f. spanning_forest f g} \\<noteq> {}\n 3. \\<forall>x\\<in>{f. spanning_forest f g}.\n       \\<forall>y\\<in>{f. spanning_forest f g}.\n          sum_class.sum (x \\<sqinter> g)\n          \\<le> sum_class.sum (y \\<sqinter> g) \\<or>\n          sum_class.sum (y \\<sqinter> g)\n          \\<le> sum_class.sum (x \\<sqinter> g)", "using finite_regular spanning_forest_def"], ["proof (prove)\nusing this:\n  finite {x. regular x}\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (3 subgoals):\n 1. finite {f. spanning_forest f g}\n 2. {f. spanning_forest f g} \\<noteq> {}\n 3. \\<forall>x\\<in>{f. spanning_forest f g}.\n       \\<forall>y\\<in>{f. spanning_forest f g}.\n          sum_class.sum (x \\<sqinter> g)\n          \\<le> sum_class.sum (y \\<sqinter> g) \\<or>\n          sum_class.sum (y \\<sqinter> g)\n          \\<le> sum_class.sum (x \\<sqinter> g)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. {f. spanning_forest f g} \\<noteq> {}\n 2. \\<forall>x\\<in>{f. spanning_forest f g}.\n       \\<forall>y\\<in>{f. spanning_forest f g}.\n          sum_class.sum (x \\<sqinter> g)\n          \\<le> sum_class.sum (y \\<sqinter> g) \\<or>\n          sum_class.sum (y \\<sqinter> g)\n          \\<le> sum_class.sum (x \\<sqinter> g)", "using assms kruskal_exists_spanning"], ["proof (prove)\nusing this:\n  symmetric g\n  symmetric ?g \\<Longrightarrow> \\<exists>f. spanning_forest f ?g\n\ngoal (2 subgoals):\n 1. {f. spanning_forest f g} \\<noteq> {}\n 2. \\<forall>x\\<in>{f. spanning_forest f g}.\n       \\<forall>y\\<in>{f. spanning_forest f g}.\n          sum_class.sum (x \\<sqinter> g)\n          \\<le> sum_class.sum (y \\<sqinter> g) \\<or>\n          sum_class.sum (y \\<sqinter> g)\n          \\<le> sum_class.sum (x \\<sqinter> g)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{f. spanning_forest f g}.\n       \\<forall>y\\<in>{f. spanning_forest f g}.\n          sum_class.sum (x \\<sqinter> g)\n          \\<le> sum_class.sum (y \\<sqinter> g) \\<or>\n          sum_class.sum (y \\<sqinter> g)\n          \\<le> sum_class.sum (x \\<sqinter> g)", "using sum_linear"], ["proof (prove)\nusing this:\n  sum_class.sum ?x \\<le> sum_class.sum ?y \\<or>\n  sum_class.sum ?y \\<le> sum_class.sum ?x\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{f. spanning_forest f g}.\n       \\<forall>y\\<in>{f. spanning_forest f g}.\n          sum_class.sum (x \\<sqinter> g)\n          \\<le> sum_class.sum (y \\<sqinter> g) \\<or>\n          sum_class.sum (y \\<sqinter> g)\n          \\<le> sum_class.sum (x \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  \\<exists>m\\<in>{f. spanning_forest f g}.\n     \\<forall>z\\<in>{f. spanning_forest f g}.\n        sum_class.sum (m \\<sqinter> g) \\<le> sum_class.sum (z \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. \\<exists>f. minimum_spanning_forest f g", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>m\\<in>{f. spanning_forest f g}.\n     \\<forall>z\\<in>{f. spanning_forest f g}.\n        sum_class.sum (m \\<sqinter> g) \\<le> sum_class.sum (z \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. \\<exists>f. minimum_spanning_forest f g", "using minimum_spanning_forest_def"], ["proof (prove)\nusing this:\n  \\<exists>m\\<in>{f. spanning_forest f g}.\n     \\<forall>z\\<in>{f. spanning_forest f g}.\n        sum_class.sum (m \\<sqinter> g) \\<le> sum_class.sum (z \\<sqinter> g)\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n\ngoal (1 subgoal):\n 1. \\<exists>f. minimum_spanning_forest f g", "by simp"], ["proof (state)\nthis:\n  \\<exists>f. minimum_spanning_forest f g\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nKruskal's minimum spanning tree algorithm terminates and is correct.\nThis is the same algorithm that is used in the previous correctness proof, with the same precondition and variant, but with a different invariant and postcondition.\n\\<close>"], ["", "theorem kruskal:\n  \"VARS e f h\n  [ symmetric g ]\n  f := bot;\n  h := g;\n  WHILE h \\<noteq> bot\n    INV { kruskal_invariant f g h }\n    VAR { card { x . regular x \\<and> x \\<le> --h } }\n     DO e := minarc h;\n        IF e \\<le> -forest_components f THEN\n          f := (f \\<sqinter> -(top * e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> e\n        ELSE\n          SKIP\n        FI;\n        h := h \\<sqinter> -e \\<sqinter> -e\\<^sup>T\n     OD\n  [ minimum_spanning_forest f g ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [symmetric g] \n     f := bot;\n     h := g;\n     WHILE h \\<noteq> bot INV {kruskal_invariant f g h} \n      VAR {\\<lambda>(e, f, h). card {x. regular x \\<and> x \\<le> - - h}} \n      DO e := minarc h;\n         IF e \\<le> - forest_components f\n          THEN f := f \\<sqinter>\n                    - (top * e * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                    (f \\<sqinter>\n                     top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                    e \n          ELSE SKIP FI;\n         h := h \\<sqinter> - e \\<sqinter> - e\\<^sup>T \n      OD \n     [minimum_spanning_forest f g]", "proof vcg_tc_simp"], ["proof (state)\ngoal (3 subgoals):\n 1. symmetric g \\<Longrightarrow> kruskal_invariant bot g g\n 2. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 3. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "assume \"symmetric g\""], ["proof (state)\nthis:\n  symmetric g\n\ngoal (3 subgoals):\n 1. symmetric g \\<Longrightarrow> kruskal_invariant bot g g\n 2. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 3. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "thus \"kruskal_invariant bot g g\""], ["proof (prove)\nusing this:\n  symmetric g\n\ngoal (1 subgoal):\n 1. kruskal_invariant bot g g", "using kruskal_vc_1 kruskal_exists_minimal_spanning kruskal_invariant_def"], ["proof (prove)\nusing this:\n  symmetric g\n  symmetric ?g \\<Longrightarrow> kruskal_spanning_invariant bot ?g ?g\n  symmetric ?g \\<Longrightarrow> \\<exists>f. minimum_spanning_forest f ?g\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n\ngoal (1 subgoal):\n 1. kruskal_invariant bot g g", "by simp"], ["proof (state)\nthis:\n  kruskal_invariant bot g g\n\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "fix f h"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "let ?e = \"minarc h\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "let ?f = \"(f \\<sqinter> -(top * ?e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * ?e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> ?e\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "let ?h = \"h \\<sqinter> -?e \\<sqinter> -?e\\<^sup>T\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "let ?F = \"forest_components f\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "let ?n1 = \"card { x . regular x \\<and> x \\<le> --h }\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "let ?n2 = \"card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -?e \\<and> x \\<le> -?e\\<^sup>T }\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "assume 1: \"kruskal_invariant f g h \\<and> h \\<noteq> bot\""], ["proof (state)\nthis:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "from 1"], ["proof (chain)\npicking this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot", "obtain w where 2: \"minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\""], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        minimum_spanning_forest w g \\<and>\n        f \\<le> w \\<squnion> w\\<^sup>T \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using kruskal_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        minimum_spanning_forest w g \\<and>\n        f \\<le> w \\<squnion> w\\<^sup>T \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "hence 3: \"regular f \\<and> regular w \\<and> regular ?e\""], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. regular f \\<and> regular w \\<and> regular (minarc h)", "using 1"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (1 subgoal):\n 1. regular f \\<and> regular w \\<and> regular (minarc h)", "by (metis kruskal_invariant_def kruskal_spanning_invariant_def minimum_spanning_forest_def spanning_forest_def minarc_regular)"], ["proof (state)\nthis:\n  regular f \\<and> regular w \\<and> regular (minarc h)\n\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_invariant f g h \\<and> h \\<noteq> bot \\<Longrightarrow>\n       (minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant\n         (f \\<sqinter>\n          - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h)\n         g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_invariant f g\n         (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "show \"(?e \\<le> -?F \\<longrightarrow> kruskal_invariant ?f g ?h \\<and> ?n2 < ?n1) \\<and> (\\<not> ?e \\<le> -?F \\<longrightarrow> kruskal_invariant f g ?h \\<and> ?n2 < ?n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_invariant\n      (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h)\n      g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_invariant f g\n      (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "proof (rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?e \\<le> -?F \\<longrightarrow> kruskal_invariant ?f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "assume 4: \"?e \\<le> -?F\""], ["proof (state)\nthis:\n  minarc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "have 5: \"equivalence ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "using 1 kruskal_invariant_def kruskal_spanning_invariant_def forest_components_equivalence spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  injective ?x \\<Longrightarrow> equivalence (forest_components ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "by simp"], ["proof (state)\nthis:\n  equivalence (forest_components f)\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "have \"?e\\<^sup>T * top * ?e\\<^sup>T = ?e\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T", "by (simp add: arc_top_arc minarc_arc)"], ["proof (state)\nthis:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "hence \"?e\\<^sup>T * top * ?e\\<^sup>T \\<le> -?F\""], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T\n\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f", "using 4 5 conv_complement conv_isotone"], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T = minarc h\\<^sup>T\n  minarc h \\<le> - forest_components f\n  equivalence (forest_components f)\n  (- ?x)\\<^sup>T = - ?x\\<^sup>T\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>T \\<le> ?y\\<^sup>T\n\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f", "by fastforce"], ["proof (state)\nthis:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "hence 6: \"?e * ?F * ?e = bot\""], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. minarc h * forest_components f * minarc h = bot", "using le_bot triple_schroeder_p"], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T * top * minarc h\\<^sup>T \\<le> - forest_components f\n  ?a \\<le> bot \\<Longrightarrow> ?a = bot\n  (?x * ?y * ?z \\<le> - ?w) = (?x\\<^sup>T * ?w * ?z\\<^sup>T \\<le> - ?y)\n\ngoal (1 subgoal):\n 1. minarc h * forest_components f * minarc h = bot", "by simp"], ["proof (state)\nthis:\n  minarc h * forest_components f * minarc h = bot\n\ngoal (1 subgoal):\n 1. minarc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"kruskal_invariant ?f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kruskal_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof (unfold kruskal_invariant_def, intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\n 2. \\<exists>w.\n       minimum_spanning_forest w g \\<and>\n       f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h\n       \\<le> w \\<squnion> w\\<^sup>T\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"kruskal_spanning_invariant ?f g ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)", "using 1 4 kruskal_vc_2 kruskal_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  minarc h \\<le> - forest_components f\n  \\<lbrakk>kruskal_spanning_invariant ?f ?g ?h; ?h \\<noteq> bot\\<rbrakk>\n  \\<Longrightarrow> (minarc ?h\n                     \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant\n                      (?f \\<sqinter>\n                       - (top * minarc ?h *\n                          ?f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                       (?f \\<sqinter>\n                        top * minarc ?h *\n                        ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                       minarc ?h)\n                      ?g (?h \\<sqinter> - minarc ?h \\<sqinter>\n                          - minarc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - minarc ?h \\<and>\n                          x \\<le> - minarc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h}) \\<and>\n                    (\\<not> minarc ?h\n                            \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant ?f ?g\n                      (?h \\<sqinter> - minarc ?h \\<sqinter>\n                       - minarc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - minarc ?h \\<and>\n                          x \\<le> - minarc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h})\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n\ngoal (1 subgoal):\n 1. kruskal_spanning_invariant\n     (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      minarc h)\n     g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)", "by simp"], ["proof (state)\nthis:\n  kruskal_spanning_invariant\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n   g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T)\n\ngoal (2 subgoals):\n 1. \\<exists>w.\n       minimum_spanning_forest w g \\<and>\n       f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h\n       \\<le> w \\<squnion> w\\<^sup>T\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>w.\n       minimum_spanning_forest w g \\<and>\n       f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h\n       \\<le> w \\<squnion> w\\<^sup>T\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"\\<exists>w . minimum_spanning_forest w g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>w.\n       minimum_spanning_forest w g \\<and>\n       f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       minarc h\n       \\<le> w \\<squnion> w\\<^sup>T", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "let ?p = \"w \\<sqinter> top * ?e * w\\<^sup>T\\<^sup>\\<star>\""], ["proof (state)\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "let ?v = \"(w \\<sqinter> -(top * ?e * w\\<^sup>T\\<^sup>\\<star>)) \\<squnion> ?p\\<^sup>T\""], ["proof (state)\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 7: \"regular ?p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)", "using 3 regular_closed_star regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  regular f \\<and> regular w \\<and> regular (minarc h)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>\\<star>)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (1 subgoal):\n 1. regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)", "by simp"], ["proof (state)\nthis:\n  regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 8: \"injective ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "apply (rule kruskal_exchange_injective_inv_1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. injective w\n 2. covector (top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n 3. top * minarc h * w\\<^sup>T\\<^sup>\\<star> * w\\<^sup>T\n    \\<le> top * minarc h * w\\<^sup>T\\<^sup>\\<star>\n 4. coreflexive\n     ((top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      w\\<^sup>T * w)", "using 2 minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (4 subgoals):\n 1. injective w\n 2. covector (top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n 3. top * minarc h * w\\<^sup>T\\<^sup>\\<star> * w\\<^sup>T\n    \\<le> top * minarc h * w\\<^sup>T\\<^sup>\\<star>\n 4. coreflexive\n     ((top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      w\\<^sup>T * w)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. covector (top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n 2. top * minarc h * w\\<^sup>T\\<^sup>\\<star> * w\\<^sup>T\n    \\<le> top * minarc h * w\\<^sup>T\\<^sup>\\<star>\n 3. coreflexive\n     ((top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      w\\<^sup>T * w)", "apply (simp add: covector_mult_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. top * minarc h * w\\<^sup>T\\<^sup>\\<star> * w\\<^sup>T\n    \\<le> top * minarc h * w\\<^sup>T\\<^sup>\\<star>\n 2. coreflexive\n     ((top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      w\\<^sup>T * w)", "apply (simp add: comp_associative comp_isotone star.right_plus_below_circ)"], ["proof (prove)\ngoal (1 subgoal):\n 1. coreflexive\n     ((top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      w\\<^sup>T * w)", "using 1 2 kruskal_injective_inv_3 minarc_arc minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  \\<lbrakk>arc ?e; forest ?f\\<rbrakk>\n  \\<Longrightarrow> coreflexive\n                     ((top * ?e * ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n                      (top * ?e * ?f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n                      ?f\\<^sup>T * ?f)\n  ?x \\<noteq> bot \\<longrightarrow> arc (minarc ?x)\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. coreflexive\n     ((top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      w\\<^sup>T * w)", "by simp"], ["proof (state)\nthis:\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 9: \"components g \\<le> forest_components ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "apply (rule kruskal_exchange_spanning_inv_1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n 3. components g \\<le> forest_components w", "using 8"], ["proof (prove)\nusing this:\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (3 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n 3. components g \\<le> forest_components w", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n 2. components g \\<le> forest_components w", "using 7"], ["proof (prove)\nusing this:\n  regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n\ngoal (2 subgoals):\n 1. regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n 2. components g \\<le> forest_components w", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. components g \\<le> forest_components w", "using 2 minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. components g \\<le> forest_components w", "by simp"], ["proof (state)\nthis:\n  components g\n  \\<le> forest_components\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 10: \"spanning_forest ?v g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n     g", "proof (unfold spanning_forest_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. pd_kleene_allegory_class.acyclic\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g\n 4. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 5. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "show \"injective ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "using 8"], ["proof (prove)\nusing this:\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (1 subgoal):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "by simp"], ["proof (state)\nthis:\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g\n 3. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 4. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g\n 3. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 4. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "show \"acyclic ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "apply (rule kruskal_exchange_acyclic_inv_1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. pd_kleene_allegory_class.acyclic w\n 2. covector (top * minarc h * w\\<^sup>T\\<^sup>\\<star>)", "using 2 minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (2 subgoals):\n 1. pd_kleene_allegory_class.acyclic w\n 2. covector (top * minarc h * w\\<^sup>T\\<^sup>\\<star>)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. covector (top * minarc h * w\\<^sup>T\\<^sup>\\<star>)", "by (simp add: covector_mult_closed)"], ["proof (state)\nthis:\n  pd_kleene_allegory_class.acyclic\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (3 subgoals):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "show \"?v \\<le> --g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g", "apply (rule sup_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<le> - - g\n 2. (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g", "using 2 inf.coboundedI1 minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  ?a \\<le> ?c \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (2 subgoals):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<le> - - g\n 2. (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g", "using 1 2"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n    \\<le> - - g", "by (metis kruskal_invariant_def kruskal_spanning_invariant_def conv_complement conv_dist_inf order.trans inf.absorb2 inf.cobounded1 minimum_spanning_forest_def spanning_forest_def)"], ["proof (state)\nthis:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n  \\<le> - - g\n\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "show \"components g \\<le> forest_components ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "using 9"], ["proof (prove)\nusing this:\n  components g\n  \\<le> forest_components\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (1 subgoal):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "by simp"], ["proof (state)\nthis:\n  components g\n  \\<le> forest_components\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (1 subgoal):\n 1. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "show \"regular ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "using 3 regular_closed_star regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  regular f \\<and> regular w \\<and> regular (minarc h)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>\\<star>)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (1 subgoal):\n 1. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "by simp"], ["proof (state)\nthis:\n  regular\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spanning_forest\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n   g\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 11: \"sum (?v \\<sqinter> g) = sum (w \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "have \"sum (?v \\<sqinter> g) = sum (w \\<sqinter> -(top * ?e * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter> g) + sum (?p\\<^sup>T \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) +\n    sum_class.sum\n     ((w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<sqinter>\n      g)", "using 2"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) +\n    sum_class.sum\n     ((w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<sqinter>\n      g)", "by (metis conv_complement conv_top epm_8 inf_import_p inf_top_right regular_closed_top vector_top_closed minimum_spanning_forest_def spanning_forest_def sum_disjoint)"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    g) =\n  sum_class.sum\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) +\n  sum_class.sum\n   ((w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    g) =\n  sum_class.sum\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) +\n  sum_class.sum\n   ((w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "have \"... = sum (w \\<sqinter> -(top * ?e * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter> g) + sum (?p \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) +\n    sum_class.sum\n     ((w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<sqinter>\n      g) =\n    sum_class.sum\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) +\n    sum_class.sum\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> \\<sqinter> g)", "using 1 kruskal_invariant_def kruskal_spanning_invariant_def sum_symmetric"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  ?y = ?y\\<^sup>T \\<Longrightarrow>\n  sum_class.sum (?x\\<^sup>T \\<sqinter> ?y) =\n  sum_class.sum (?x \\<sqinter> ?y)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) +\n    sum_class.sum\n     ((w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<sqinter>\n      g) =\n    sum_class.sum\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) +\n    sum_class.sum\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) +\n  sum_class.sum\n   ((w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<sqinter>\n    g) =\n  sum_class.sum\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) +\n  sum_class.sum\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) +\n  sum_class.sum\n   ((w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<sqinter>\n    g) =\n  sum_class.sum\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) +\n  sum_class.sum\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "have \"... = sum (((w \\<sqinter> -(top * ?e * w\\<^sup>T\\<^sup>\\<star>)) \\<squnion> ?p) \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) +\n    sum_class.sum\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> \\<sqinter> g) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g)", "using inf_commute inf_left_commute sum_disjoint"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?y \\<sqinter> (?x \\<sqinter> ?z)\n  ?x \\<sqinter> ?y = bot \\<Longrightarrow>\n  sum_class.sum ((?x \\<squnion> ?y) \\<sqinter> ?z) =\n  sum_class.sum (?x \\<sqinter> ?z) + sum_class.sum (?y \\<sqinter> ?z)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) +\n    sum_class.sum\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> \\<sqinter> g) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) +\n  sum_class.sum\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> \\<sqinter> g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) +\n  sum_class.sum\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> \\<sqinter> g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "have \"... = sum (w \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "using 3 7 maddux_3_11_pp"], ["proof (prove)\nusing this:\n  regular f \\<and> regular w \\<and> regular (minarc h)\n  regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n  ?x \\<sqinter> - ?y \\<squnion> ?x \\<sqinter> - - ?y = ?x\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n    g) =\n  sum_class.sum (w \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "finally"], ["proof (chain)\npicking this:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    g) =\n  sum_class.sum (w \\<sqinter> g)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    g) =\n  sum_class.sum (w \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g) =\n    sum_class.sum (w \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    g) =\n  sum_class.sum (w \\<sqinter> g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    g) =\n  sum_class.sum (w \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 12: \"?v \\<squnion> ?v\\<^sup>T = w \\<squnion> w\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n    w \\<squnion> w\\<^sup>T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n    w \\<squnion> w\\<^sup>T", "have \"?v \\<squnion> ?v\\<^sup>T = (w \\<sqinter> -?p) \\<squnion> ?p\\<^sup>T \\<squnion> (w\\<^sup>T \\<sqinter> -?p\\<^sup>T) \\<squnion> ?p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n    w \\<sqinter>\n    - (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    w\\<^sup>T \\<sqinter>\n    - (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>", "using conv_complement conv_dist_inf conv_dist_sup inf_import_p sup_assoc"], ["proof (prove)\nusing this:\n  (- ?x)\\<^sup>T = - ?x\\<^sup>T\n  (?x \\<sqinter> ?y)\\<^sup>T = ?x\\<^sup>T \\<sqinter> ?y\\<^sup>T\n  (?x \\<squnion> ?y)\\<^sup>T = ?x\\<^sup>T \\<squnion> ?y\\<^sup>T\n  ?x \\<sqinter> - (?x \\<sqinter> ?y) = ?x \\<sqinter> - ?y\n  ?x \\<squnion> ?y \\<squnion> ?z = ?x \\<squnion> (?y \\<squnion> ?z)\n\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n    w \\<sqinter>\n    - (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    w\\<^sup>T \\<sqinter>\n    - (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n  w \\<sqinter>\n  - (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  w\\<^sup>T \\<sqinter>\n  - (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n    w \\<squnion> w\\<^sup>T", "also"], ["proof (state)\nthis:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n  w \\<sqinter>\n  - (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  w\\<^sup>T \\<sqinter>\n  - (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n    w \\<squnion> w\\<^sup>T", "have \"... = w \\<squnion> w\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter>\n    - (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    w\\<^sup>T \\<sqinter>\n    - (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> =\n    w \\<squnion> w\\<^sup>T", "using 3 7 conv_complement conv_dist_inf inf_import_p maddux_3_11_pp sup_monoid.add_assoc sup_monoid.add_commute"], ["proof (prove)\nusing this:\n  regular f \\<and> regular w \\<and> regular (minarc h)\n  regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n  (- ?x)\\<^sup>T = - ?x\\<^sup>T\n  (?x \\<sqinter> ?y)\\<^sup>T = ?x\\<^sup>T \\<sqinter> ?y\\<^sup>T\n  ?x \\<sqinter> - (?x \\<sqinter> ?y) = ?x \\<sqinter> - ?y\n  ?x \\<sqinter> - ?y \\<squnion> ?x \\<sqinter> - - ?y = ?x\n  ?a \\<squnion> ?b \\<squnion> ?c = ?a \\<squnion> (?b \\<squnion> ?c)\n  ?a \\<squnion> ?b = ?b \\<squnion> ?a\n\ngoal (1 subgoal):\n 1. w \\<sqinter>\n    - (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    w\\<^sup>T \\<sqinter>\n    - (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> =\n    w \\<squnion> w\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  w \\<sqinter>\n  - (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  w\\<^sup>T \\<sqinter>\n  - (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star> =\n  w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n    w \\<squnion> w\\<^sup>T", "finally"], ["proof (chain)\npicking this:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n  w \\<squnion> w\\<^sup>T", "show ?thesis"], ["proof (prove)\nusing this:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n  w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n    w \\<squnion> w\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n  w \\<squnion> w\\<^sup>T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n  w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 13: \"?v * ?e\\<^sup>T = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "apply (rule kruskal_reroot_edge)"], ["proof (prove)\ngoal (2 subgoals):\n 1. injective (minarc h\\<^sup>T * top)\n 2. pd_kleene_allegory_class.acyclic w", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (2 subgoals):\n 1. injective (minarc h\\<^sup>T * top)\n 2. pd_kleene_allegory_class.acyclic w", "apply (simp add: minarc_arc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic w", "using 2 minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic w", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have \"?v \\<sqinter> ?e \\<le> ?v \\<sqinter> top * ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h", "using inf.sup_right_isotone top_left_mult_increasing"], ["proof (prove)\nusing this:\n  ?y \\<le> ?x \\<Longrightarrow> ?z \\<sqinter> ?y \\<le> ?z \\<sqinter> ?x\n  ?x \\<le> top * ?x\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "also"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have \"... \\<le> ?v * (top * ?e)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n          (top * minarc h)\\<^sup>T", "using covector_restrict_comp_conv covector_mult_closed vector_top_closed"], ["proof (prove)\nusing this:\n  covector ?x \\<Longrightarrow> ?y \\<sqinter> ?x \\<le> ?y * ?x\\<^sup>T\n  covector ?x \\<Longrightarrow> covector (?x * ?y)\n  surjective top\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n          (top * minarc h)\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n        (top * minarc h)\\<^sup>T\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "finally"], ["proof (chain)\npicking this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n        (top * minarc h)\\<^sup>T", "have 14: \"?v \\<sqinter> ?e = bot\""], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n        (top * minarc h)\\<^sup>T\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    minarc h =\n    bot", "using 13"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n        (top * minarc h)\\<^sup>T\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    minarc h =\n    bot", "by (metis conv_dist_comp mult_assoc le_bot mult_left_zero)"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h =\n  bot\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "let ?d = \"?v \\<sqinter> top * ?e\\<^sup>T * ?v\\<^sup>T\\<^sup>\\<star> \\<sqinter> ?F * ?e\\<^sup>T * top \\<sqinter> top * ?e * -?F\""], ["proof (state)\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "let ?w = \"(?v \\<sqinter> -?d) \\<squnion> ?e\""], ["proof (state)\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 15: \"regular ?d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)", "using 3 regular_closed_star regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  regular f \\<and> regular w \\<and> regular (minarc h)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>\\<star>)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (1 subgoal):\n 1. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)", "by simp"], ["proof (state)\nthis:\n  regular\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f)\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 16: \"?F \\<le> -?d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forest_components f\n    \\<le> - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)", "apply (rule kruskal_edge_between_components_1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. equivalence (forest_components f)\n 2. mapping (top * minarc h)", "using 5"], ["proof (prove)\nusing this:\n  equivalence (forest_components f)\n\ngoal (2 subgoals):\n 1. equivalence (forest_components f)\n 2. mapping (top * minarc h)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. mapping (top * minarc h)", "using 1 conv_dist_comp minarc_arc mult_assoc"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  (?x * ?y)\\<^sup>T = ?y\\<^sup>T * ?x\\<^sup>T\n  ?x \\<noteq> bot \\<longrightarrow> arc (minarc ?x)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. mapping (top * minarc h)", "by simp"], ["proof (state)\nthis:\n  forest_components f\n  \\<le> - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "have 17: \"f \\<squnion> f\\<^sup>T \\<le> (?v \\<sqinter> -?d \\<sqinter> -?d\\<^sup>T) \\<squnion> (?v\\<^sup>T \\<sqinter> -?d \\<sqinter> -?d\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<squnion> f\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T", "apply (rule kruskal_edge_between_components_2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. forest_components f\n    \\<le> - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\n 2. injective f\n 3. f \\<squnion> f\\<^sup>T\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T", "using 16"], ["proof (prove)\nusing this:\n  forest_components f\n  \\<le> - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\n\ngoal (3 subgoals):\n 1. forest_components f\n    \\<le> - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\n 2. injective f\n 3. f \\<squnion> f\\<^sup>T\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. injective f\n 2. f \\<squnion> f\\<^sup>T\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T", "using 1 kruskal_invariant_def kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (2 subgoals):\n 1. injective f\n 2. f \\<squnion> f\\<^sup>T\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<squnion> f\\<^sup>T\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T", "using 2 12"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n  w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. f \\<squnion> f\\<^sup>T\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T", "by (metis conv_dist_sup conv_involutive conv_isotone le_supI sup_commute)"], ["proof (state)\nthis:\n  f \\<squnion> f\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest ?w g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> ?w \\<squnion> ?w\\<^sup>T", "show \"minimum_spanning_forest ?w g \\<and> ?f \\<le> ?w \\<squnion> ?w\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minimum_spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g \\<and>\n    f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "proof (intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. minimum_spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g\n 2. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "have 18: \"?e\\<^sup>T \\<le> ?v\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply (rule kruskal_edge_arc_1[where g=g and h=h])"], ["proof (prove)\ngoal (5 subgoals):\n 1. minarc h \\<le> - - h\n 2. h \\<le> g\n 3. symmetric g\n 4. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "using minarc_below"], ["proof (prove)\nusing this:\n  minarc ?x \\<le> - - ?x\n\ngoal (5 subgoals):\n 1. minarc h \\<le> - - h\n 2. h \\<le> g\n 3. symmetric g\n 4. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. h \\<le> g\n 2. symmetric g\n 3. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (4 subgoals):\n 1. h \\<le> g\n 2. symmetric g\n 3. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "apply (metis kruskal_invariant_def kruskal_spanning_invariant_def inf_le1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. symmetric g\n 2. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "using 1 kruskal_invariant_def kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (3 subgoals):\n 1. symmetric g\n 2. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "using 9"], ["proof (prove)\nusing this:\n  components g\n  \\<le> forest_components\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "using 13"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot", "by simp"], ["proof (state)\nthis:\n  minarc h\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. minimum_spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g\n 2. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "have 19: \"arc ?d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arc ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f)", "apply (rule kruskal_edge_arc)"], ["proof (prove)\ngoal (9 subgoals):\n 1. equivalence (forest_components f)\n 2. forest\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. arc (minarc h)\n 4. regular (forest_components f)\n 5. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 6. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 7. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 8. minarc h * forest_components f * minarc h = bot\n 9. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 5"], ["proof (prove)\nusing this:\n  equivalence (forest_components f)\n\ngoal (9 subgoals):\n 1. equivalence (forest_components f)\n 2. forest\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. arc (minarc h)\n 4. regular (forest_components f)\n 5. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 6. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 7. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 8. minarc h * forest_components f * minarc h = bot\n 9. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. forest\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. arc (minarc h)\n 3. regular (forest_components f)\n 4. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 5. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 7. minarc h * forest_components f * minarc h = bot\n 8. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 10 spanning_forest_def"], ["proof (prove)\nusing this:\n  spanning_forest\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n   g\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (8 subgoals):\n 1. forest\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. arc (minarc h)\n 3. regular (forest_components f)\n 4. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 5. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 7. minarc h * forest_components f * minarc h = bot\n 8. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply blast"], ["proof (prove)\ngoal (7 subgoals):\n 1. arc (minarc h)\n 2. regular (forest_components f)\n 3. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 4. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 6. minarc h * forest_components f * minarc h = bot\n 7. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (7 subgoals):\n 1. arc (minarc h)\n 2. regular (forest_components f)\n 3. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 4. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 6. minarc h * forest_components f * minarc h = bot\n 7. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply (simp add: minarc_arc)"], ["proof (prove)\ngoal (6 subgoals):\n 1. regular (forest_components f)\n 2. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 3. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 5. minarc h * forest_components f * minarc h = bot\n 6. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 3"], ["proof (prove)\nusing this:\n  regular f \\<and> regular w \\<and> regular (minarc h)\n\ngoal (6 subgoals):\n 1. regular (forest_components f)\n 2. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 3. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 5. minarc h * forest_components f * minarc h = bot\n 6. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply (metis conv_complement pp_dist_star regular_mult_closed)"], ["proof (prove)\ngoal (5 subgoals):\n 1. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 2. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 4. minarc h * forest_components f * minarc h = bot\n 5. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 2 8 12"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T =\n  w \\<squnion> w\\<^sup>T\n\ngoal (5 subgoals):\n 1. forest_components f\n    \\<le> forest_components\n           (forest_components f \\<sqinter>\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T))\n 2. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 4. minarc h * forest_components f * minarc h = bot\n 5. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply (simp add: kruskal_forest_components_inf)"], ["proof (prove)\ngoal (4 subgoals):\n 1. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 3. minarc h * forest_components f * minarc h = bot\n 4. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 10 spanning_forest_def"], ["proof (prove)\nusing this:\n  spanning_forest\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n   g\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (4 subgoals):\n 1. regular\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 3. minarc h * forest_components f * minarc h = bot\n 4. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 2. minarc h * forest_components f * minarc h = bot\n 3. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 13"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T =\n    bot\n 2. minarc h * forest_components f * minarc h = bot\n 3. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. minarc h * forest_components f * minarc h = bot\n 2. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 6"], ["proof (prove)\nusing this:\n  minarc h * forest_components f * minarc h = bot\n\ngoal (2 subgoals):\n 1. minarc h * forest_components f * minarc h = bot\n 2. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "using 18"], ["proof (prove)\nusing this:\n  minarc h\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  arc ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\n\ngoal (2 subgoals):\n 1. minimum_spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g\n 2. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "show \"minimum_spanning_forest ?w g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minimum_spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g", "proof (unfold minimum_spanning_forest_def, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g\n 2. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"(?v \\<sqinter> -?d) * ?e\\<^sup>T \\<le> ?v * ?e\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f)) *\n    minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n          minarc h\\<^sup>T", "using inf_le1 mult_left_isotone"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<le> ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x * ?z \\<le> ?y * ?z\n\ngoal (1 subgoal):\n 1. ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f)) *\n    minarc h\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n          minarc h\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n   - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)) *\n  minarc h\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n        minarc h\\<^sup>T\n\ngoal (2 subgoals):\n 1. spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g\n 2. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "hence \"(?v \\<sqinter> -?d) * ?e\\<^sup>T = bot\""], ["proof (prove)\nusing this:\n  ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n   - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)) *\n  minarc h\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n        minarc h\\<^sup>T\n\ngoal (1 subgoal):\n 1. ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f)) *\n    minarc h\\<^sup>T =\n    bot", "using 13 le_bot"], ["proof (prove)\nusing this:\n  ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n   - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)) *\n  minarc h\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n        minarc h\\<^sup>T\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n  minarc h\\<^sup>T =\n  bot\n  ?a \\<le> bot \\<Longrightarrow> ?a = bot\n\ngoal (1 subgoal):\n 1. ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f)) *\n    minarc h\\<^sup>T =\n    bot", "by simp"], ["proof (state)\nthis:\n  ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n   - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (2 subgoals):\n 1. spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g\n 2. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "hence 20: \"?e * (?v \\<sqinter> -?d)\\<^sup>T = bot\""], ["proof (prove)\nusing this:\n  ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n   - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (1 subgoal):\n 1. minarc h *\n    ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f))\\<^sup>T =\n    bot", "using conv_dist_comp conv_involutive conv_bot"], ["proof (prove)\nusing this:\n  ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n   - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)) *\n  minarc h\\<^sup>T =\n  bot\n  (?x * ?y)\\<^sup>T = ?y\\<^sup>T * ?x\\<^sup>T\n  ?x\\<^sup>T\\<^sup>T = ?x\n  symmetric bot\n\ngoal (1 subgoal):\n 1. minarc h *\n    ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f))\\<^sup>T =\n    bot", "by force"], ["proof (state)\nthis:\n  minarc h *\n  ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n   - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f))\\<^sup>T =\n  bot\n\ngoal (2 subgoals):\n 1. spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g\n 2. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have 21: \"injective ?w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "apply (rule injective_sup)"], ["proof (prove)\ngoal (3 subgoals):\n 1. injective\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f))\n 2. coreflexive\n     (minarc h *\n      ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f))\\<^sup>T)\n 3. injective (minarc h)", "using 8"], ["proof (prove)\nusing this:\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (3 subgoals):\n 1. injective\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f))\n 2. coreflexive\n     (minarc h *\n      ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f))\\<^sup>T)\n 3. injective (minarc h)", "apply (simp add: injective_inf_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. coreflexive\n     (minarc h *\n      ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f))\\<^sup>T)\n 2. injective (minarc h)", "using 20"], ["proof (prove)\nusing this:\n  minarc h *\n  ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n   - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f))\\<^sup>T =\n  bot\n\ngoal (2 subgoals):\n 1. coreflexive\n     (minarc h *\n      ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f))\\<^sup>T)\n 2. injective (minarc h)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. injective (minarc h)", "using 1 arc_injective minarc_arc"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  arc ?x \\<Longrightarrow> injective ?x\n  ?x \\<noteq> bot \\<longrightarrow> arc (minarc ?x)\n\ngoal (1 subgoal):\n 1. injective (minarc h)", "by blast"], ["proof (state)\nthis:\n  injective\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n\ngoal (2 subgoals):\n 1. spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g\n 2. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "show \"spanning_forest ?w g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n     g", "proof (unfold spanning_forest_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. injective\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n 2. pd_kleene_allegory_class.acyclic\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 4. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 5. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "show \"injective ?w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "using 21"], ["proof (prove)\nusing this:\n  injective\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n\ngoal (1 subgoal):\n 1. injective\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "by simp"], ["proof (state)\nthis:\n  injective\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 3. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 4. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 3. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 4. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "show \"acyclic ?w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "apply (rule kruskal_exchange_acyclic_inv_2)"], ["proof (prove)\ngoal (7 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 4. bijective\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T *\n      top)\n 5. bijective (minarc h * top)\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 7. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "using 10 spanning_forest_def"], ["proof (prove)\nusing this:\n  spanning_forest\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n   g\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (7 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 4. bijective\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T *\n      top)\n 5. bijective (minarc h * top)\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 7. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "apply blast"], ["proof (prove)\ngoal (6 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 3. bijective\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T *\n      top)\n 4. bijective (minarc h * top)\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "using 8"], ["proof (prove)\nusing this:\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (6 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 3. bijective\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T *\n      top)\n 4. bijective (minarc h * top)\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 2. bijective\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T *\n      top)\n 3. bijective (minarc h * top)\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "using inf.coboundedI1"], ["proof (prove)\nusing this:\n  ?a \\<le> ?c \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c\n\ngoal (5 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 2. bijective\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T *\n      top)\n 3. bijective (minarc h * top)\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. bijective\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T *\n      top)\n 2. bijective (minarc h * top)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "using 19"], ["proof (prove)\nusing this:\n  arc ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\n\ngoal (4 subgoals):\n 1. bijective\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T *\n      top)\n 2. bijective (minarc h * top)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. bijective (minarc h * top)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (3 subgoals):\n 1. bijective (minarc h * top)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "apply (simp add: minarc_arc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "using inf.cobounded2 inf.coboundedI1"], ["proof (prove)\nusing this:\n  ?a \\<sqinter> ?b \\<le> ?b\n  ?a \\<le> ?c \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c\n\ngoal (2 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "using 13"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot", "by simp"], ["proof (state)\nthis:\n  pd_kleene_allegory_class.acyclic\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "have \"?w \\<le> ?v \\<squnion> ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h", "using inf_le1 sup_left_isotone"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<le> ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?z \\<le> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          minarc h", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h\n  \\<le> w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n        minarc h\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "also"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h\n  \\<le> w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n        minarc h\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "have \"... \\<le> --g \\<squnion> ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> - - g \\<squnion> minarc h", "using 10 sup_left_isotone spanning_forest_def"], ["proof (prove)\nusing this:\n  spanning_forest\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n   g\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?z \\<le> ?y \\<squnion> ?z\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter>\n     top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> - - g \\<squnion> minarc h", "by blast"], ["proof (state)\nthis:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> - - g \\<squnion> minarc h\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "also"], ["proof (state)\nthis:\n  w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> - - g \\<squnion> minarc h\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "have \"... \\<le> --g \\<squnion> --h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - g \\<squnion> minarc h \\<le> - - g \\<squnion> - - h", "by (simp add: le_supI2 minarc_below)"], ["proof (state)\nthis:\n  - - g \\<squnion> minarc h \\<le> - - g \\<squnion> - - h\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "also"], ["proof (state)\nthis:\n  - - g \\<squnion> minarc h \\<le> - - g \\<squnion> - - h\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "have \"... = --g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - g \\<squnion> - - h = - - g", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (1 subgoal):\n 1. - - g \\<squnion> - - h = - - g", "by (metis kruskal_invariant_def kruskal_spanning_invariant_def pp_isotone_inf sup.orderE)"], ["proof (state)\nthis:\n  - - g \\<squnion> - - h = - - g\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g\n 2. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 3. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "finally"], ["proof (chain)\npicking this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h\n  \\<le> - - g", "show \"?w \\<le> --g\""], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h\n  \\<le> - - g\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h\n    \\<le> - - g", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h\n  \\<le> - - g\n\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 2. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 2. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "have 22: \"?d \\<le> (?v \\<sqinter> -?d)\\<^sup>T\\<^sup>\\<star> * ?e\\<^sup>T * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "apply (rule kruskal_exchange_spanning_inv_2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star> *\n    minarc h\\<^sup>T =\n    minarc h\\<^sup>T\n 3. ?f \\<squnion> ?f\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> forest_components ?f * minarc h\\<^sup>T * top", "using 8"], ["proof (prove)\nusing this:\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (4 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star> *\n    minarc h\\<^sup>T =\n    minarc h\\<^sup>T\n 3. ?f \\<squnion> ?f\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> forest_components ?f * minarc h\\<^sup>T * top", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star> *\n    minarc h\\<^sup>T =\n    minarc h\\<^sup>T\n 2. ?f \\<squnion> ?f\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> forest_components ?f * minarc h\\<^sup>T * top", "using 13"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (3 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>\\<star> *\n    minarc h\\<^sup>T =\n    minarc h\\<^sup>T\n 2. ?f \\<squnion> ?f\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> forest_components ?f * minarc h\\<^sup>T * top", "apply (metis semiring.mult_not_zero star_absorb star_simulation_right_equal)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?f \\<squnion> ?f\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> forest_components ?f * minarc h\\<^sup>T * top", "using 17"], ["proof (prove)\nusing this:\n  f \\<squnion> f\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T\n\ngoal (2 subgoals):\n 1. ?f \\<squnion> ?f\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> forest_components ?f * minarc h\\<^sup>T * top", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> forest_components f * minarc h\\<^sup>T * top", "by (simp add: inf.coboundedI1)"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         - ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n        minarc h\\<^sup>T *\n        top\n\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 2. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "have \"components g \\<le> forest_components ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "using 10 spanning_forest_def"], ["proof (prove)\nusing this:\n  spanning_forest\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n   g\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. components g\n    \\<le> forest_components\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)", "by auto"], ["proof (state)\nthis:\n  components g\n  \\<le> forest_components\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 2. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "also"], ["proof (state)\nthis:\n  components g\n  \\<le> forest_components\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 2. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "have \"... \\<le> forest_components ?w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forest_components\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)", "apply (rule kruskal_exchange_forest_components_inv)"], ["proof (prove)\ngoal (8 subgoals):\n 1. injective\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n 2. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)\n 3. minarc h * top * minarc h = minarc h\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 6. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 7. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 8. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "using 21"], ["proof (prove)\nusing this:\n  injective\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n\ngoal (8 subgoals):\n 1. injective\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)\n 2. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)\n 3. minarc h * top * minarc h = minarc h\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 6. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 7. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 8. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)\n 2. minarc h * top * minarc h = minarc h\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 5. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 7. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "using 15"], ["proof (prove)\nusing this:\n  regular\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f)\n\ngoal (7 subgoals):\n 1. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f)\n 2. minarc h * top * minarc h = minarc h\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 5. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 7. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. minarc h * top * minarc h = minarc h\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 4. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (6 subgoals):\n 1. minarc h * top * minarc h = minarc h\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 4. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 6. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "apply (simp add: arc_top_arc minarc_arc)"], ["proof (prove)\ngoal (5 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star>\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 3. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 5. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "apply (simp add: inf.coboundedI1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 2. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "using 13"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n  minarc h\\<^sup>T =\n  bot\n\ngoal (4 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) *\n    minarc h\\<^sup>T *\n    top =\n    bot\n 2. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 4. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "using 8"], ["proof (prove)\nusing this:\n  injective\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n\ngoal (3 subgoals):\n 1. injective\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 3. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n 2. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "apply (simp add: le_infI1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "using 22"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         - ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n        minarc h\\<^sup>T *\n        top\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h *\n              - forest_components f))\\<^sup>T\\<^sup>\\<star> *\n          minarc h\\<^sup>T *\n          top", "by simp"], ["proof (state)\nthis:\n  forest_components\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n  \\<le> forest_components\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h)\n\ngoal (2 subgoals):\n 1. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)\n 2. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "finally"], ["proof (chain)\npicking this:\n  components g\n  \\<le> forest_components\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h)", "show \"components g \\<le> forest_components ?w\""], ["proof (prove)\nusing this:\n  components g\n  \\<le> forest_components\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h)\n\ngoal (1 subgoal):\n 1. components g\n    \\<le> forest_components\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<squnion>\n            minarc h)", "by simp"], ["proof (state)\nthis:\n  components g\n  \\<le> forest_components\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h)\n\ngoal (1 subgoal):\n 1. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "show \"regular ?w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "using 3 7 regular_conv_closed"], ["proof (prove)\nusing this:\n  regular f \\<and> regular w \\<and> regular (minarc h)\n  regular (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. regular\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<squnion>\n      minarc h)", "by simp"], ["proof (state)\nthis:\n  regular\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spanning_forest\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n   g\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have 23: \"?e \\<sqinter> g \\<noteq> bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minarc h \\<sqinter> g \\<noteq> bot", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (1 subgoal):\n 1. minarc h \\<sqinter> g \\<noteq> bot", "by (metis kruskal_invariant_def kruskal_spanning_invariant_def comp_inf.semiring.mult_zero_right inf.sup_monoid.add_assoc inf.sup_monoid.add_commute minarc_bot_iff minarc_meet_bot)"], ["proof (state)\nthis:\n  minarc h \\<sqinter> g \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"g \\<sqinter> -h \\<le> (g \\<sqinter> -h)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<sqinter> - h \\<le> (g \\<sqinter> - h)\\<^sup>\\<star>", "using star.circ_increasing"], ["proof (prove)\nusing this:\n  ?x \\<le> ?x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. g \\<sqinter> - h \\<le> (g \\<sqinter> - h)\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  g \\<sqinter> - h \\<le> (g \\<sqinter> - h)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  g \\<sqinter> - h \\<le> (g \\<sqinter> - h)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... \\<le> (--(g \\<sqinter> -h))\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<sqinter> - h)\\<^sup>\\<star> \\<le> components (g \\<sqinter> - h)", "using pp_increasing star_isotone"], ["proof (prove)\nusing this:\n  ?x \\<le> - - ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>\\<star> \\<le> ?y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (g \\<sqinter> - h)\\<^sup>\\<star> \\<le> components (g \\<sqinter> - h)", "by blast"], ["proof (state)\nthis:\n  (g \\<sqinter> - h)\\<^sup>\\<star> \\<le> components (g \\<sqinter> - h)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  (g \\<sqinter> - h)\\<^sup>\\<star> \\<le> components (g \\<sqinter> - h)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... \\<le> ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. components (g \\<sqinter> - h) \\<le> forest_components f", "using 1 kruskal_invariant_def kruskal_spanning_invariant_def inf.sup_monoid.add_commute spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. components (g \\<sqinter> - h) \\<le> forest_components f", "by simp"], ["proof (state)\nthis:\n  components (g \\<sqinter> - h) \\<le> forest_components f\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "finally"], ["proof (chain)\npicking this:\n  g \\<sqinter> - h \\<le> forest_components f", "have 24: \"g \\<sqinter> -h \\<le> ?F\""], ["proof (prove)\nusing this:\n  g \\<sqinter> - h \\<le> forest_components f\n\ngoal (1 subgoal):\n 1. g \\<sqinter> - h \\<le> forest_components f", "by simp"], ["proof (state)\nthis:\n  g \\<sqinter> - h \\<le> forest_components f\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"?d \\<le> --g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> - - g", "using 10 inf.coboundedI1 spanning_forest_def"], ["proof (prove)\nusing this:\n  spanning_forest\n   (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (w \\<sqinter> top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\n   g\n  ?a \\<le> ?c \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> - - g", "by blast"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - g\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "hence \"?d \\<le> --g \\<sqinter> -?F\""], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - g\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> - - g \\<sqinter> - forest_components f", "using 16 inf.boundedI p_antitone_iff"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - g\n  forest_components f\n  \\<le> - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\n  \\<lbrakk>?a \\<le> ?b; ?a \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> ?b \\<sqinter> ?c\n  (?x \\<le> - ?y) = (?y \\<le> - ?x)\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> - - g \\<sqinter> - forest_components f", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - g \\<sqinter> - forest_components f\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - g \\<sqinter> - forest_components f\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... = --(g \\<sqinter> -?F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - g \\<sqinter> - forest_components f =\n    - - (g \\<sqinter> - forest_components f)", "by simp"], ["proof (state)\nthis:\n  - - g \\<sqinter> - forest_components f =\n  - - (g \\<sqinter> - forest_components f)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  - - g \\<sqinter> - forest_components f =\n  - - (g \\<sqinter> - forest_components f)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... \\<le> --h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - (g \\<sqinter> - forest_components f) \\<le> - - h", "using 24 p_shunting_swap pp_isotone"], ["proof (prove)\nusing this:\n  g \\<sqinter> - h \\<le> forest_components f\n  (?x \\<sqinter> ?y \\<le> - ?z) = (?x \\<sqinter> ?z \\<le> - ?y)\n  ?x \\<le> ?y \\<Longrightarrow> - - ?x \\<le> - - ?y\n\ngoal (1 subgoal):\n 1. - - (g \\<sqinter> - forest_components f) \\<le> - - h", "by fastforce"], ["proof (state)\nthis:\n  - - (g \\<sqinter> - forest_components f) \\<le> - - h\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "finally"], ["proof (chain)\npicking this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - h", "have 25: \"?d \\<le> --h\""], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - h\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f\n    \\<le> - - h", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - h\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"?d = bot \\<longrightarrow> top = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f =\n    bot \\<longrightarrow>\n    top = bot", "using 19"], ["proof (prove)\nusing this:\n  arc ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f =\n    bot \\<longrightarrow>\n    top = bot", "by (metis mult_left_zero mult_right_zero)"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f =\n  bot \\<longrightarrow>\n  top = bot\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "hence \"?d \\<noteq> bot\""], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f =\n  bot \\<longrightarrow>\n  top = bot\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<noteq>\n    bot", "using 1 le_bot"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f =\n  bot \\<longrightarrow>\n  top = bot\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  ?a \\<le> bot \\<Longrightarrow> ?a = bot\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<noteq>\n    bot", "by auto"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f \\<noteq>\n  bot\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "hence 26: \"?d \\<sqinter> h \\<noteq> bot\""], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f \\<noteq>\n  bot\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    h \\<noteq>\n    bot", "using 25"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f \\<noteq>\n  bot\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - h\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    h \\<noteq>\n    bot", "by (metis inf.absorb_iff2 inf_commute pseudo_complement)"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f \\<sqinter>\n  h \\<noteq>\n  bot\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"sum (?e \\<sqinter> g) = sum (?e \\<sqinter> --h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum (minarc h \\<sqinter> g) =\n    sum_class.sum (minarc h \\<sqinter> - - h \\<sqinter> g)", "by (simp add: inf.absorb1 minarc_below)"], ["proof (state)\nthis:\n  sum_class.sum (minarc h \\<sqinter> g) =\n  sum_class.sum (minarc h \\<sqinter> - - h \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum (minarc h \\<sqinter> g) =\n  sum_class.sum (minarc h \\<sqinter> - - h \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... = sum (?e \\<sqinter> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum (minarc h \\<sqinter> - - h \\<sqinter> g) =\n    sum_class.sum (minarc h \\<sqinter> h)", "using 1"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n\ngoal (1 subgoal):\n 1. sum_class.sum (minarc h \\<sqinter> - - h \\<sqinter> g) =\n    sum_class.sum (minarc h \\<sqinter> h)", "by (metis kruskal_invariant_def kruskal_spanning_invariant_def inf.left_commute inf.sup_monoid.add_commute)"], ["proof (state)\nthis:\n  sum_class.sum (minarc h \\<sqinter> - - h \\<sqinter> g) =\n  sum_class.sum (minarc h \\<sqinter> h)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum (minarc h \\<sqinter> - - h \\<sqinter> g) =\n  sum_class.sum (minarc h \\<sqinter> h)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... \\<le> sum (?d \\<sqinter> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum (minarc h \\<sqinter> h)\n    \\<le> sum_class.sum\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f \\<sqinter>\n            h)", "using 19 26 minarc_min"], ["proof (prove)\nusing this:\n  arc ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f \\<sqinter>\n  h \\<noteq>\n  bot\n  arc ?y \\<and> ?y \\<sqinter> ?x \\<noteq> bot \\<longrightarrow>\n  sum_class.sum (minarc ?x \\<sqinter> ?x)\n  \\<le> sum_class.sum (?y \\<sqinter> ?x)\n\ngoal (1 subgoal):\n 1. sum_class.sum (minarc h \\<sqinter> h)\n    \\<le> sum_class.sum\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f \\<sqinter>\n            h)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum (minarc h \\<sqinter> h)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f \\<sqinter>\n          h)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum (minarc h \\<sqinter> h)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f \\<sqinter>\n          h)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... = sum (?d \\<sqinter> (--h \\<sqinter> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      h) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      (- - h \\<sqinter> g))", "using 1 kruskal_invariant_def kruskal_spanning_invariant_def inf_commute"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      h) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      (- - h \\<sqinter> g))", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    h) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    (- - h \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    h) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    (- - h \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... = sum (?d \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      (- - h \\<sqinter> g)) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      g)", "using 25"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  top * minarc h\\<^sup>T *\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h *\n    w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n  forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n  top * minarc h * - forest_components f\n  \\<le> - - h\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      (- - h \\<sqinter> g)) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      g)", "by (simp add: inf.absorb2 inf_assoc inf_commute)"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    (- - h \\<sqinter> g)) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "finally"], ["proof (chain)\npicking this:\n  sum_class.sum (minarc h \\<sqinter> g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f \\<sqinter>\n          g)", "have 27: \"sum (?e \\<sqinter> g) \\<le> sum (?d \\<sqinter> g)\""], ["proof (prove)\nusing this:\n  sum_class.sum (minarc h \\<sqinter> g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f \\<sqinter>\n          g)\n\ngoal (1 subgoal):\n 1. sum_class.sum (minarc h \\<sqinter> g)\n    \\<le> sum_class.sum\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f \\<sqinter>\n            g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum (minarc h \\<sqinter> g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f \\<sqinter>\n          g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"?v \\<sqinter> ?e \\<sqinter> -?d = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    minarc h \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) =\n    bot", "using 14"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h =\n  bot\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    minarc h \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) =\n    bot", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) =\n  bot\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "hence \"sum (?w \\<sqinter> g) = sum (?v \\<sqinter> -?d \\<sqinter> g) + sum (?e \\<sqinter> g)\""], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) =\n  bot\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       minarc h) \\<sqinter>\n      g) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<sqinter>\n      g) +\n    sum_class.sum (minarc h \\<sqinter> g)", "using sum_disjoint inf_commute inf_assoc"], ["proof (prove)\nusing this:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  minarc h \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) =\n  bot\n  ?x \\<sqinter> ?y = bot \\<Longrightarrow>\n  sum_class.sum ((?x \\<squnion> ?y) \\<sqinter> ?z) =\n  sum_class.sum (?x \\<sqinter> ?z) + sum_class.sum (?y \\<sqinter> ?z)\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n  ?x \\<sqinter> ?y \\<sqinter> ?z = ?x \\<sqinter> (?y \\<sqinter> ?z)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       minarc h) \\<sqinter>\n      g) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<sqinter>\n      g) +\n    sum_class.sum (minarc h \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     minarc h) \\<sqinter>\n    g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    g) +\n  sum_class.sum (minarc h \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     minarc h) \\<sqinter>\n    g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    g) +\n  sum_class.sum (minarc h \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... \\<le> sum (?v \\<sqinter> -?d \\<sqinter> g) + sum (?d \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<sqinter>\n      g) +\n    sum_class.sum (minarc h \\<sqinter> g)\n    \\<le> sum_class.sum\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<sqinter>\n            g) +\n          sum_class.sum\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f \\<sqinter>\n            g)", "using 23 27 sum_plus_right_isotone"], ["proof (prove)\nusing this:\n  minarc h \\<sqinter> g \\<noteq> bot\n  sum_class.sum (minarc h \\<sqinter> g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f \\<sqinter>\n          g)\n  ?x \\<noteq> bot \\<and>\n  sum_class.sum ?x \\<le> sum_class.sum ?y \\<longrightarrow>\n  sum_class.sum ?z + sum_class.sum ?x\n  \\<le> sum_class.sum ?z + sum_class.sum ?y\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<sqinter>\n      g) +\n    sum_class.sum (minarc h \\<sqinter> g)\n    \\<le> sum_class.sum\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            - ((w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n               top * minarc h\\<^sup>T *\n               (w \\<sqinter>\n                - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                (w \\<sqinter>\n                 top * minarc h *\n                 w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n               forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n               top * minarc h * - forest_components f) \\<sqinter>\n            g) +\n          sum_class.sum\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f \\<sqinter>\n            g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    g) +\n  sum_class.sum (minarc h \\<sqinter> g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          g) +\n        sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f \\<sqinter>\n          g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    g) +\n  sum_class.sum (minarc h \\<sqinter> g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          g) +\n        sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f \\<sqinter>\n          g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... = sum (((?v \\<sqinter> -?d) \\<squnion> ?d) \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<sqinter>\n      g) +\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      g) =\n    sum_class.sum\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g)", "using sum_disjoint inf_le2 pseudo_complement"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y = bot \\<Longrightarrow>\n  sum_class.sum ((?x \\<squnion> ?y) \\<sqinter> ?z) =\n  sum_class.sum (?x \\<sqinter> ?z) + sum_class.sum (?y \\<sqinter> ?z)\n  ?x \\<sqinter> ?y \\<le> ?y\n  (?x \\<sqinter> ?y = bot) = (?x \\<le> - ?y)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      - ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         top * minarc h\\<^sup>T *\n         (w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h *\n           w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n         forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n         top * minarc h * - forest_components f) \\<sqinter>\n      g) +\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      top * minarc h\\<^sup>T *\n      (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h *\n        w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n      forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n      top * minarc h * - forest_components f \\<sqinter>\n      g) =\n    sum_class.sum\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    g) +\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    g) =\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    g) +\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f \\<sqinter>\n    g) =\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... = sum ((?v \\<squnion> ?d) \\<sqinter> (-?d \\<squnion> ?d) \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      (- ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g)", "by (simp add: sup_inf_distrib2)"], ["proof (state)\nthis:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    (- ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    (- ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... = sum ((?v \\<squnion> ?d) \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      (- ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g)", "using 15"], ["proof (prove)\nusing this:\n  regular\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    top * minarc h\\<^sup>T *\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h *\n      w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n    forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n    top * minarc h * - forest_components f)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      (- ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g)", "by (metis inf_top_right stone)"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    (- ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "also"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    (- ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "have \"... = sum (?v \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n      g) =\n    sum_class.sum\n     ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (w \\<sqinter>\n        top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n      g)", "by (simp add: inf.sup_monoid.add_assoc)"], ["proof (state)\nthis:\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n    g) =\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "finally"], ["proof (chain)\npicking this:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     minarc h) \\<sqinter>\n    g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          g)", "have \"sum (?w \\<sqinter> g) \\<le> sum (?v \\<sqinter> g)\""], ["proof (prove)\nusing this:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     minarc h) \\<sqinter>\n    g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          g)\n\ngoal (1 subgoal):\n 1. sum_class.sum\n     (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       - ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          top * minarc h\\<^sup>T *\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n          forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n          top * minarc h * - forest_components f) \\<squnion>\n       minarc h) \\<sqinter>\n      g)\n    \\<le> sum_class.sum\n           ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            g)", "by simp"], ["proof (state)\nthis:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     minarc h) \\<sqinter>\n    g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "thus \"\\<forall>u . spanning_forest u g \\<longrightarrow> sum (?w \\<sqinter> g) \\<le> sum (u \\<sqinter> g)\""], ["proof (prove)\nusing this:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     minarc h) \\<sqinter>\n    g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          g)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "using 2 11 minimum_spanning_forest_def"], ["proof (prove)\nusing this:\n  sum_class.sum\n   (((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     - ((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        top * minarc h\\<^sup>T *\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n        forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n        top * minarc h * - forest_components f) \\<squnion>\n     minarc h) \\<sqinter>\n    g)\n  \\<le> sum_class.sum\n         ((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          g)\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  sum_class.sum\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    g) =\n  sum_class.sum (w \\<sqinter> g)\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       spanning_forest u g \\<longrightarrow>\n       sum_class.sum\n        (((w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h) \\<sqinter>\n         g)\n       \\<le> sum_class.sum (u \\<sqinter> g)", "by auto"], ["proof (state)\nthis:\n  \\<forall>u.\n     spanning_forest u g \\<longrightarrow>\n     sum_class.sum\n      (((w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        minarc h) \\<sqinter>\n       g)\n     \\<le> sum_class.sum (u \\<sqinter> g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  minimum_spanning_forest\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n   g\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "have \"?f \\<le> f \\<squnion> f\\<^sup>T \\<squnion> ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> f \\<squnion> f\\<^sup>T \\<squnion> minarc h", "using conv_dist_inf inf_le1 sup_left_isotone sup_mono"], ["proof (prove)\nusing this:\n  (?x \\<sqinter> ?y)\\<^sup>T = ?x\\<^sup>T \\<sqinter> ?y\\<^sup>T\n  ?x \\<sqinter> ?y \\<le> ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?z \\<le> ?y \\<squnion> ?z\n  \\<lbrakk>?a \\<le> ?c; ?b \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a \\<squnion> ?b \\<le> ?c \\<squnion> ?d\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> f \\<squnion> f\\<^sup>T \\<squnion> minarc h", "by presburger"], ["proof (state)\nthis:\n  f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> f \\<squnion> f\\<^sup>T \\<squnion> minarc h\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "also"], ["proof (state)\nthis:\n  f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> f \\<squnion> f\\<^sup>T \\<squnion> minarc h\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "have \"... \\<le> (?v \\<sqinter> -?d \\<sqinter> -?d\\<^sup>T) \\<squnion> (?v\\<^sup>T \\<sqinter> -?d \\<sqinter> -?d\\<^sup>T) \\<squnion> ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<squnion> f\\<^sup>T \\<squnion> minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          minarc h", "using 17 sup_left_isotone"], ["proof (prove)\nusing this:\n  f \\<squnion> f\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?z \\<le> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. f \\<squnion> f\\<^sup>T \\<squnion> minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          minarc h", "by simp"], ["proof (state)\nthis:\n  f \\<squnion> f\\<^sup>T \\<squnion> minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        minarc h\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "also"], ["proof (state)\nthis:\n  f \\<squnion> f\\<^sup>T \\<squnion> minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        minarc h\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "have \"... \\<le> (?v \\<sqinter> -?d) \\<squnion> (?v\\<^sup>T \\<sqinter> -?d \\<sqinter> -?d\\<^sup>T) \\<squnion> ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          minarc h", "using inf.cobounded1 sup_inf_distrib2"], ["proof (prove)\nusing this:\n  ?a \\<sqinter> ?b \\<le> ?a\n  ?y \\<sqinter> ?z \\<squnion> ?x =\n  (?y \\<squnion> ?x) \\<sqinter> (?z \\<squnion> ?x)\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n          minarc h", "by presburger"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        minarc h\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "also"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n        minarc h\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "have \"... = ?w \\<squnion> (?v\\<^sup>T \\<sqinter> -?d \\<sqinter> -?d\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n    minarc h =\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T", "by (simp add: sup_assoc sup_commute)"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n  minarc h =\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "also"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T \\<squnion>\n  minarc h =\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "have \"... \\<le> ?w \\<squnion> (?v\\<^sup>T \\<sqinter> -?d\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T", "using inf.sup_right_isotone inf_assoc sup_right_isotone"], ["proof (prove)\nusing this:\n  ?y \\<le> ?x \\<Longrightarrow> ?z \\<sqinter> ?y \\<le> ?z \\<sqinter> ?x\n  ?x \\<sqinter> ?y \\<sqinter> ?z = ?x \\<sqinter> (?y \\<sqinter> ?z)\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<squnion> ?x \\<le> ?z \\<squnion> ?y\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h *\n            w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f)\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        minarc h \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "also"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        minarc h \\<squnion>\n        (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h *\n          w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f)\\<^sup>T\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "have \"... \\<le> ?w \\<squnion> ?w\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "using conv_complement conv_dist_inf conv_dist_sup sup_right_isotone"], ["proof (prove)\nusing this:\n  (- ?x)\\<^sup>T = - ?x\\<^sup>T\n  (?x \\<sqinter> ?y)\\<^sup>T = ?x\\<^sup>T \\<sqinter> ?y\\<^sup>T\n  (?x \\<squnion> ?y)\\<^sup>T = ?x\\<^sup>T \\<squnion> ?y\\<^sup>T\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<squnion> ?x \\<le> ?z \\<squnion> ?y\n\ngoal (1 subgoal):\n 1. (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h \\<squnion>\n    (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f)\\<^sup>T\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f) \\<squnion>\n  minarc h \\<squnion>\n  (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n   (w \\<sqinter>\n    top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T \\<sqinter>\n  - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n     top * minarc h\\<^sup>T *\n     (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (w \\<sqinter>\n       top * minarc h *\n       w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n     forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n     top * minarc h * - forest_components f)\\<^sup>T\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        minarc h \\<squnion>\n        ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         - ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f) \\<squnion>\n         minarc h)\\<^sup>T\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "finally"], ["proof (chain)\npicking this:\n  f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        minarc h \\<squnion>\n        ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         - ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f) \\<squnion>\n         minarc h)\\<^sup>T", "show \"?f \\<le> ?w \\<squnion> ?w\\<^sup>T\""], ["proof (prove)\nusing this:\n  f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        minarc h \\<squnion>\n        ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         - ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f) \\<squnion>\n         minarc h)\\<^sup>T\n\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h\n    \\<le> (w \\<sqinter>\n           - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n           (w \\<sqinter>\n            top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n          - ((w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n             top * minarc h\\<^sup>T *\n             (w \\<sqinter>\n              - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n              (w \\<sqinter>\n               top * minarc h *\n               w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n             forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n             top * minarc h * - forest_components f) \\<squnion>\n          minarc h \\<squnion>\n          ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           - ((w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n              top * minarc h\\<^sup>T *\n              (w \\<sqinter>\n               - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n               (w \\<sqinter>\n                top * minarc h *\n                w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n              forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n              top * minarc h * - forest_components f) \\<squnion>\n           minarc h)\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        minarc h \\<squnion>\n        ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         - ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f) \\<squnion>\n         minarc h)\\<^sup>T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  minimum_spanning_forest\n   ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (w \\<sqinter>\n      top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n    - ((w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n       top * minarc h\\<^sup>T *\n       (w \\<sqinter> - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n        (w \\<sqinter>\n         top * minarc h *\n         w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n       forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n       top * minarc h * - forest_components f) \\<squnion>\n    minarc h)\n   g \\<and>\n  f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (f \\<sqinter> top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  minarc h\n  \\<le> (w \\<sqinter>\n         - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n         (w \\<sqinter>\n          top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n        - ((w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n           top * minarc h\\<^sup>T *\n           (w \\<sqinter>\n            - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (w \\<sqinter>\n             top * minarc h *\n             w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n           forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n           top * minarc h * - forest_components f) \\<squnion>\n        minarc h \\<squnion>\n        ((w \\<sqinter>\n          - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (w \\<sqinter>\n           top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n         - ((w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h * w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T) \\<sqinter>\n            top * minarc h\\<^sup>T *\n            (w \\<sqinter>\n             - (top * minarc h * w\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n             (w \\<sqinter>\n              top * minarc h *\n              w\\<^sup>T\\<^sup>\\<star>)\\<^sup>T)\\<^sup>T\\<^sup>\\<star> \\<sqinter>\n            forest_components f * minarc h\\<^sup>T * top \\<sqinter>\n            top * minarc h * - forest_components f) \\<squnion>\n         minarc h)\\<^sup>T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>w.\n     minimum_spanning_forest w g \\<and>\n     f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (f \\<sqinter>\n      top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     minarc h\n     \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "using 1 kruskal_vc_2 kruskal_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  \\<lbrakk>kruskal_spanning_invariant ?f ?g ?h; ?h \\<noteq> bot\\<rbrakk>\n  \\<Longrightarrow> (minarc ?h\n                     \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant\n                      (?f \\<sqinter>\n                       - (top * minarc ?h *\n                          ?f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                       (?f \\<sqinter>\n                        top * minarc ?h *\n                        ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                       minarc ?h)\n                      ?g (?h \\<sqinter> - minarc ?h \\<sqinter>\n                          - minarc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - minarc ?h \\<and>\n                          x \\<le> - minarc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h}) \\<and>\n                    (\\<not> minarc ?h\n                            \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant ?f ?g\n                      (?h \\<sqinter> - minarc ?h \\<sqinter>\n                       - minarc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - minarc ?h \\<and>\n                          x \\<le> - minarc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h})\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "by auto"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  kruskal_invariant\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n   g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  minarc h \\<le> - forest_components f \\<longrightarrow>\n  kruskal_invariant\n   (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    minarc h)\n   g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"\\<not> ?e \\<le> -?F \\<longrightarrow> kruskal_invariant f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "using 1 kruskal_vc_2 kruskal_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g h \\<and> h \\<noteq> bot\n  \\<lbrakk>kruskal_spanning_invariant ?f ?g ?h; ?h \\<noteq> bot\\<rbrakk>\n  \\<Longrightarrow> (minarc ?h\n                     \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant\n                      (?f \\<sqinter>\n                       - (top * minarc ?h *\n                          ?f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                       (?f \\<sqinter>\n                        top * minarc ?h *\n                        ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                       minarc ?h)\n                      ?g (?h \\<sqinter> - minarc ?h \\<sqinter>\n                          - minarc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - minarc ?h \\<and>\n                          x \\<le> - minarc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h}) \\<and>\n                    (\\<not> minarc ?h\n                            \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant ?f ?g\n                      (?h \\<sqinter> - minarc ?h \\<sqinter>\n                       - minarc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - minarc ?h \\<and>\n                          x \\<le> - minarc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h})\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n\ngoal (1 subgoal):\n 1. \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_invariant f g\n     (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "by auto"], ["proof (state)\nthis:\n  \\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n  kruskal_invariant f g\n   (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (minarc h \\<le> - forest_components f \\<longrightarrow>\n   kruskal_invariant\n    (f \\<sqinter> - (top * minarc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (f \\<sqinter>\n      top * minarc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     minarc h)\n    g (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n   card\n    {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n   < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n  (\\<not> minarc h \\<le> - forest_components f \\<longrightarrow>\n   kruskal_invariant f g\n    (h \\<sqinter> - minarc h \\<sqinter> - minarc h\\<^sup>T) \\<and>\n   card\n    {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - minarc h \\<and> x \\<le> - minarc h\\<^sup>T}\n   < card {x. regular x \\<and> x \\<le> - - h})\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "assume 28: \"kruskal_invariant f g bot\""], ["proof (state)\nthis:\n  kruskal_invariant f g bot\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "hence 29: \"spanning_forest f g\""], ["proof (prove)\nusing this:\n  kruskal_invariant f g bot\n\ngoal (1 subgoal):\n 1. spanning_forest f g", "using kruskal_invariant_def kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. spanning_forest f g", "by auto"], ["proof (state)\nthis:\n  spanning_forest f g\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "from 28"], ["proof (chain)\npicking this:\n  kruskal_invariant f g bot", "obtain w where 30: \"minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\""], ["proof (prove)\nusing this:\n  kruskal_invariant f g bot\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        minimum_spanning_forest w g \\<and>\n        f \\<le> w \\<squnion> w\\<^sup>T \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using kruskal_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g bot\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        minimum_spanning_forest w g \\<and>\n        f \\<le> w \\<squnion> w\\<^sup>T \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "hence \"w = w \\<sqinter> --g\""], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. w = w \\<sqinter> - - g", "by (simp add: inf.absorb1 minimum_spanning_forest_def spanning_forest_def)"], ["proof (state)\nthis:\n  w = w \\<sqinter> - - g\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "also"], ["proof (state)\nthis:\n  w = w \\<sqinter> - - g\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"... \\<le> w \\<sqinter> components g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter> - - g \\<le> w \\<sqinter> components g", "by (metis inf.sup_right_isotone star.circ_increasing)"], ["proof (state)\nthis:\n  w \\<sqinter> - - g \\<le> w \\<sqinter> components g\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "also"], ["proof (state)\nthis:\n  w \\<sqinter> - - g \\<le> w \\<sqinter> components g\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"... \\<le> w \\<sqinter> f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter> components g \\<le> w \\<sqinter> forest_components f", "using 29 spanning_forest_def inf.sup_right_isotone"], ["proof (prove)\nusing this:\n  spanning_forest f g\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n  ?y \\<le> ?x \\<Longrightarrow> ?z \\<sqinter> ?y \\<le> ?z \\<sqinter> ?x\n\ngoal (1 subgoal):\n 1. w \\<sqinter> components g \\<le> w \\<sqinter> forest_components f", "by simp"], ["proof (state)\nthis:\n  w \\<sqinter> components g \\<le> w \\<sqinter> forest_components f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "also"], ["proof (state)\nthis:\n  w \\<sqinter> components g \\<le> w \\<sqinter> forest_components f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"... \\<le> f \\<squnion> f\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter> forest_components f \\<le> f \\<squnion> f\\<^sup>T", "apply (rule cancel_separate_6[where z=w and y=\"w\\<^sup>T\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. injective w\n 2. f\\<^sup>T \\<le> w\\<^sup>T \\<squnion> w\n 3. f \\<le> w\\<^sup>T \\<squnion> w\n 4. injective w\n 5. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "using 30 minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (5 subgoals):\n 1. injective w\n 2. f\\<^sup>T \\<le> w\\<^sup>T \\<squnion> w\n 3. f \\<le> w\\<^sup>T \\<squnion> w\n 4. injective w\n 5. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. f\\<^sup>T \\<le> w\\<^sup>T \\<squnion> w\n 2. f \\<le> w\\<^sup>T \\<squnion> w\n 3. injective w\n 4. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "using 30"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (4 subgoals):\n 1. f\\<^sup>T \\<le> w\\<^sup>T \\<squnion> w\n 2. f \\<le> w\\<^sup>T \\<squnion> w\n 3. injective w\n 4. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "apply (metis conv_dist_inf conv_dist_sup conv_involutive inf.cobounded2 inf.orderE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f \\<le> w\\<^sup>T \\<squnion> w\n 2. injective w\n 3. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "using 30"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (3 subgoals):\n 1. f \\<le> w\\<^sup>T \\<squnion> w\n 2. injective w\n 3. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "apply (simp add: sup_commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. injective w\n 2. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "using 30 minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (2 subgoals):\n 1. injective w\n 2. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "using 30"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. w \\<sqinter> w\\<^sup>T\\<^sup>\\<star> = bot", "by (metis acyclic_star_below_complement comp_inf.mult_right_isotone inf_p le_bot minimum_spanning_forest_def spanning_forest_def)"], ["proof (state)\nthis:\n  w \\<sqinter> forest_components f \\<le> f \\<squnion> f\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "finally"], ["proof (chain)\npicking this:\n  w \\<le> f \\<squnion> f\\<^sup>T", "have 31: \"w \\<le> f \\<squnion> f\\<^sup>T\""], ["proof (prove)\nusing this:\n  w \\<le> f \\<squnion> f\\<^sup>T\n\ngoal (1 subgoal):\n 1. w \\<le> f \\<squnion> f\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  w \\<le> f \\<squnion> f\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"sum (f \\<sqinter> g) = sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum (f \\<sqinter> g) =\n    sum_class.sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g))", "using 30"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n\ngoal (1 subgoal):\n 1. sum_class.sum (f \\<sqinter> g) =\n    sum_class.sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g))", "by (metis inf_absorb2 inf.assoc)"], ["proof (state)\nthis:\n  sum_class.sum (f \\<sqinter> g) =\n  sum_class.sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "also"], ["proof (state)\nthis:\n  sum_class.sum (f \\<sqinter> g) =\n  sum_class.sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"... = sum (w \\<sqinter> (f \\<sqinter> g)) + sum (w\\<^sup>T \\<sqinter> (f \\<sqinter> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g)) =\n    sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n    sum_class.sum (w\\<^sup>T \\<sqinter> (f \\<sqinter> g))", "using 30 inf.commute acyclic_asymmetric sum_disjoint minimum_spanning_forest_def spanning_forest_def"], ["proof (prove)\nusing this:\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n  pd_kleene_allegory_class.acyclic ?w \\<Longrightarrow> asymmetric ?w\n  ?x \\<sqinter> ?y = bot \\<Longrightarrow>\n  sum_class.sum ((?x \\<squnion> ?y) \\<sqinter> ?z) =\n  sum_class.sum (?x \\<sqinter> ?z) + sum_class.sum (?y \\<sqinter> ?z)\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. sum_class.sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g)) =\n    sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n    sum_class.sum (w\\<^sup>T \\<sqinter> (f \\<sqinter> g))", "by simp"], ["proof (state)\nthis:\n  sum_class.sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g)) =\n  sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n  sum_class.sum (w\\<^sup>T \\<sqinter> (f \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "also"], ["proof (state)\nthis:\n  sum_class.sum ((w \\<squnion> w\\<^sup>T) \\<sqinter> (f \\<sqinter> g)) =\n  sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n  sum_class.sum (w\\<^sup>T \\<sqinter> (f \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"... = sum (w \\<sqinter> (f \\<sqinter> g)) + sum (w \\<sqinter> (f\\<^sup>T \\<sqinter> g\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n    sum_class.sum (w\\<^sup>T \\<sqinter> (f \\<sqinter> g)) =\n    sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n    sum_class.sum (w \\<sqinter> (f\\<^sup>T \\<sqinter> g\\<^sup>T))", "by (metis conv_dist_inf conv_involutive sum_conv)"], ["proof (state)\nthis:\n  sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n  sum_class.sum (w\\<^sup>T \\<sqinter> (f \\<sqinter> g)) =\n  sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n  sum_class.sum (w \\<sqinter> (f\\<^sup>T \\<sqinter> g\\<^sup>T))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "also"], ["proof (state)\nthis:\n  sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n  sum_class.sum (w\\<^sup>T \\<sqinter> (f \\<sqinter> g)) =\n  sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n  sum_class.sum (w \\<sqinter> (f\\<^sup>T \\<sqinter> g\\<^sup>T))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"... = sum (f \\<sqinter> (w \\<sqinter> g)) + sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n    sum_class.sum (w \\<sqinter> (f\\<^sup>T \\<sqinter> g\\<^sup>T)) =\n    sum_class.sum (f \\<sqinter> (w \\<sqinter> g)) +\n    sum_class.sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g))", "using 28 inf.commute inf.assoc kruskal_invariant_def kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_invariant f g bot\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n  ?a \\<sqinter> ?b \\<sqinter> ?c = ?a \\<sqinter> (?b \\<sqinter> ?c)\n  kruskal_invariant ?f ?g ?h \\<equiv>\n  kruskal_spanning_invariant ?f ?g ?h \\<and>\n  (\\<exists>w.\n      minimum_spanning_forest w ?g \\<and> ?f \\<le> w \\<squnion> w\\<^sup>T)\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n    sum_class.sum (w \\<sqinter> (f\\<^sup>T \\<sqinter> g\\<^sup>T)) =\n    sum_class.sum (f \\<sqinter> (w \\<sqinter> g)) +\n    sum_class.sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g))", "by simp"], ["proof (state)\nthis:\n  sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n  sum_class.sum (w \\<sqinter> (f\\<^sup>T \\<sqinter> g\\<^sup>T)) =\n  sum_class.sum (f \\<sqinter> (w \\<sqinter> g)) +\n  sum_class.sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "also"], ["proof (state)\nthis:\n  sum_class.sum (w \\<sqinter> (f \\<sqinter> g)) +\n  sum_class.sum (w \\<sqinter> (f\\<^sup>T \\<sqinter> g\\<^sup>T)) =\n  sum_class.sum (f \\<sqinter> (w \\<sqinter> g)) +\n  sum_class.sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"... = sum ((f \\<squnion> f\\<^sup>T) \\<sqinter> (w \\<sqinter> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum (f \\<sqinter> (w \\<sqinter> g)) +\n    sum_class.sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g)) =\n    sum_class.sum ((f \\<squnion> f\\<^sup>T) \\<sqinter> (w \\<sqinter> g))", "using 29 acyclic_asymmetric inf.sup_monoid.add_commute sum_disjoint spanning_forest_def"], ["proof (prove)\nusing this:\n  spanning_forest f g\n  pd_kleene_allegory_class.acyclic ?w \\<Longrightarrow> asymmetric ?w\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n  ?x \\<sqinter> ?y = bot \\<Longrightarrow>\n  sum_class.sum ((?x \\<squnion> ?y) \\<sqinter> ?z) =\n  sum_class.sum (?x \\<sqinter> ?z) + sum_class.sum (?y \\<sqinter> ?z)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. sum_class.sum (f \\<sqinter> (w \\<sqinter> g)) +\n    sum_class.sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g)) =\n    sum_class.sum ((f \\<squnion> f\\<^sup>T) \\<sqinter> (w \\<sqinter> g))", "by simp"], ["proof (state)\nthis:\n  sum_class.sum (f \\<sqinter> (w \\<sqinter> g)) +\n  sum_class.sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g)) =\n  sum_class.sum ((f \\<squnion> f\\<^sup>T) \\<sqinter> (w \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "also"], ["proof (state)\nthis:\n  sum_class.sum (f \\<sqinter> (w \\<sqinter> g)) +\n  sum_class.sum (f\\<^sup>T \\<sqinter> (w \\<sqinter> g)) =\n  sum_class.sum ((f \\<squnion> f\\<^sup>T) \\<sqinter> (w \\<sqinter> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "have \"... = sum (w \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_class.sum ((f \\<squnion> f\\<^sup>T) \\<sqinter> (w \\<sqinter> g)) =\n    sum_class.sum (w \\<sqinter> g)", "using 31"], ["proof (prove)\nusing this:\n  w \\<le> f \\<squnion> f\\<^sup>T\n\ngoal (1 subgoal):\n 1. sum_class.sum ((f \\<squnion> f\\<^sup>T) \\<sqinter> (w \\<sqinter> g)) =\n    sum_class.sum (w \\<sqinter> g)", "by (metis inf_absorb2 inf.assoc)"], ["proof (state)\nthis:\n  sum_class.sum ((f \\<squnion> f\\<^sup>T) \\<sqinter> (w \\<sqinter> g)) =\n  sum_class.sum (w \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       kruskal_invariant f g bot \\<Longrightarrow>\n       minimum_spanning_forest f g", "finally"], ["proof (chain)\npicking this:\n  sum_class.sum (f \\<sqinter> g) = sum_class.sum (w \\<sqinter> g)", "show \"minimum_spanning_forest f g\""], ["proof (prove)\nusing this:\n  sum_class.sum (f \\<sqinter> g) = sum_class.sum (w \\<sqinter> g)\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest f g", "using 29 30 minimum_spanning_forest_def"], ["proof (prove)\nusing this:\n  sum_class.sum (f \\<sqinter> g) = sum_class.sum (w \\<sqinter> g)\n  spanning_forest f g\n  minimum_spanning_forest w g \\<and> f \\<le> w \\<squnion> w\\<^sup>T\n  minimum_spanning_forest ?f ?g \\<equiv>\n  spanning_forest ?f ?g \\<and>\n  (\\<forall>u.\n      spanning_forest u ?g \\<longrightarrow>\n      sum_class.sum (?f \\<sqinter> ?g)\n      \\<le> sum_class.sum (u \\<sqinter> ?g))\n\ngoal (1 subgoal):\n 1. minimum_spanning_forest f g", "by simp"], ["proof (state)\nthis:\n  minimum_spanning_forest f g\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}