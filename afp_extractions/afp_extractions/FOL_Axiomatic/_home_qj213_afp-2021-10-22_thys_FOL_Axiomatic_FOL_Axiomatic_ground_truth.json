{"file_name": "/home/qj213/afp-2021-10-22/thys/FOL_Axiomatic/FOL_Axiomatic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/FOL_Axiomatic", "problem_names": ["lemma shift_eq [simp]: \\<open>n = m \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = x\\<close>", "lemma shift_gt [simp]: \\<open>m < n \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = E m\\<close>", "lemma shift_lt [simp]: \\<open>n < m \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = E (m-1)\\<close>", "lemma shift_commute [simp]: \\<open>E\\<langle>n:y\\<rangle>\\<langle>0:x\\<rangle> = E\\<langle>0:x\\<rangle>\\<langle>n+1:y\\<rangle>\\<close>", "lemma upd_params_tm [simp]: \\<open>f \\<notin> params_tm t \\<Longrightarrow> \\<lparr>E, F(f := x)\\<rparr> t = \\<lparr>E, F\\<rparr> t\\<close>", "lemma upd_params_fm [simp]: \\<open>f \\<notin> params_fm p \\<Longrightarrow> \\<lbrakk>E, F(f := x), G\\<rbrakk> p = \\<lbrakk>E, F, G\\<rbrakk> p\\<close>", "lemma finite_params_tm [simp]: \\<open>finite (params_tm t)\\<close>", "lemma finite_params_fm [simp]: \\<open>finite (params_fm p)\\<close>", "lemma lift_lemma [simp]: \\<open>\\<lparr>E\\<langle>0:x\\<rangle>, F\\<rparr> (\\<^bold>\\<up>t) = \\<lparr>E, F\\<rparr> t\\<close>", "lemma inst_tm_semantics [simp]: \\<open>\\<lparr>E, F\\<rparr> (t\\<llangle>s/m\\<rrangle>) = \\<lparr>E\\<langle>m:\\<lparr>E, F\\<rparr> s\\<rangle>, F\\<rparr> t\\<close>", "lemma inst_fm_semantics [simp]: \\<open>\\<lbrakk>E, F, G\\<rbrakk> (p\\<langle>t/m\\<rangle>) = \\<lbrakk>E\\<langle>m:\\<lparr>E, F\\<rparr> t\\<rangle>, F, G\\<rbrakk> p\\<close>", "lemma size_inst_fm [simp]:\n  \\<open>size_fm (p\\<langle>t/m\\<rangle>) = size_fm p\\<close>", "lemma boolean_semantics: \\<open>boolean (\\<lambda>a. G a \\<circ> map \\<lparr>E, F\\<rparr>) \\<lbrakk>E, F, G\\<rbrakk> = \\<lbrakk>E, F, G\\<rbrakk>\\<close>", "lemma tautology: \\<open>tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\\<close>", "lemmas\n  TA[simp]\n  MP[trans, dest]\n  GR[intro]", "theorem soundness: \\<open>\\<turnstile> p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\\<close>", "lemma AS: \\<open>\\<turnstile> (p \\<^bold>\\<longrightarrow> q \\<^bold>\\<longrightarrow> r) \\<^bold>\\<longrightarrow> (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow> p \\<^bold>\\<longrightarrow> r\\<close>", "lemma AK: \\<open>\\<turnstile> q \\<^bold>\\<longrightarrow> p \\<^bold>\\<longrightarrow> q\\<close>", "lemma Neg: \\<open>\\<turnstile> \\<^bold>\\<not> \\<^bold>\\<not> p \\<^bold>\\<longrightarrow> p\\<close>", "lemma contraposition:\n  \\<open>\\<turnstile> (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow> \\<^bold>\\<not> p\\<close>\n  \\<open>\\<turnstile> (\\<^bold>\\<not> q \\<^bold>\\<longrightarrow> \\<^bold>\\<not> p) \\<^bold>\\<longrightarrow> p \\<^bold>\\<longrightarrow> q\\<close>", "lemma GR': \\<open>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle> \\<^bold>\\<longrightarrow> q \\<Longrightarrow> a \\<notin> params {p, q} \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow> q\\<close>", "lemma Imp3: \\<open>\\<turnstile> (p \\<^bold>\\<longrightarrow> q \\<^bold>\\<longrightarrow> r) \\<^bold>\\<longrightarrow> ((s \\<^bold>\\<longrightarrow> p) \\<^bold>\\<longrightarrow> (s \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow> s \\<^bold>\\<longrightarrow> r)\\<close>", "lemma imply_ImpE: \\<open>\\<turnstile> ps \\<^bold>\\<leadsto> p \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> q\\<close>", "lemma MP' [trans, dest]: \\<open>ps \\<turnstile> p \\<^bold>\\<longrightarrow> q \\<Longrightarrow> ps \\<turnstile> p \\<Longrightarrow> ps \\<turnstile> q\\<close>", "lemma imply_Cons [intro]: \\<open>ps \\<turnstile> q \\<Longrightarrow> p # ps \\<turnstile> q\\<close>", "lemma imply_head [intro]: \\<open>p # ps \\<turnstile> p\\<close>", "lemma imply_lift_Imp [simp]:\n  assumes \\<open>\\<turnstile> p \\<^bold>\\<longrightarrow> q\\<close>\n  shows \\<open>\\<turnstile> p \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> q\\<close>", "lemma add_imply [simp]: \\<open>\\<turnstile> q \\<Longrightarrow> ps \\<turnstile> q\\<close>", "lemma imply_mem [simp]: \\<open>p \\<in> set ps \\<Longrightarrow> ps \\<turnstile> p\\<close>", "lemma deduct1: \\<open>ps \\<turnstile> p \\<^bold>\\<longrightarrow> q \\<Longrightarrow> p # ps \\<turnstile> q\\<close>", "lemma imply_append [iff]: \\<open>(ps @ qs \\<^bold>\\<leadsto> r) = (ps \\<^bold>\\<leadsto> qs \\<^bold>\\<leadsto> r)\\<close>", "lemma imply_swap_append: \\<open>ps @ qs \\<turnstile> r \\<Longrightarrow> qs @ ps \\<turnstile> r\\<close>", "lemma deduct2: \\<open>p # ps \\<turnstile> q \\<Longrightarrow> ps \\<turnstile> p \\<^bold>\\<longrightarrow> q\\<close>", "lemmas deduct [iff] = deduct1 deduct2", "lemma cut [trans, dest]: \\<open>p # ps \\<turnstile> r \\<Longrightarrow> q # ps \\<turnstile> p \\<Longrightarrow> q # ps \\<turnstile> r\\<close>", "lemma Boole: \\<open>(\\<^bold>\\<not> p) # ps \\<turnstile> \\<^bold>\\<bottom> \\<Longrightarrow> ps \\<turnstile> p\\<close>", "lemma imply_weaken: \\<open>ps \\<turnstile> q \\<Longrightarrow> set ps \\<subseteq> set ps' \\<Longrightarrow> ps' \\<turnstile> q\\<close>", "lemma UN_finite_bound:\n  assumes \\<open>finite A\\<close> and \\<open>A \\<subseteq> (\\<Union>n. f n)\\<close>\n  shows \\<open>\\<exists>m :: nat. A \\<subseteq> (\\<Union>n \\<le> m. f n)\\<close>", "lemma split_list:\n  assumes \\<open>x \\<in> set A\\<close>\n  shows \\<open>set (x # removeAll x A) = set A \\<and> x \\<notin> set (removeAll x A)\\<close>", "lemma imply_params_fm: \\<open>params_fm (ps \\<^bold>\\<leadsto> q) = params_fm q \\<union> (\\<Union>p \\<in> set ps. params_fm p)\\<close>", "lemma inconsistent_fm:\n  assumes \\<open>consistent S\\<close> and \\<open>\\<not> consistent ({p} \\<union> S)\\<close>\n  obtains S' where \\<open>set S' \\<subseteq> S\\<close> and \\<open>p # S' \\<turnstile> \\<^bold>\\<bottom>\\<close>", "lemma consistent_add_witness:\n  assumes \\<open>consistent S\\<close> and \\<open>(\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\\<close> and \\<open>a \\<notin> params S\\<close>\n  shows \\<open>consistent ({\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>} \\<union> S)\\<close>", "lemma consistent_add_instance:\n  assumes \\<open>consistent S\\<close> and \\<open>\\<^bold>\\<forall> p \\<in> S\\<close>\n  shows \\<open>consistent ({p\\<langle>t/0\\<rangle>} \\<union> S)\\<close>", "lemma Extend_subset: \\<open>S \\<subseteq> Extend S f\\<close>", "lemma extend_bound: \\<open>(\\<Union>n \\<le> m. extend S f n) = extend S f m\\<close>", "lemma finite_params_witness [simp]: \\<open>finite (params (witness used p))\\<close>", "lemma finite_params_extend [simp]: \\<open>finite (params S) \\<Longrightarrow> finite (params (extend S f n))\\<close>", "lemma consistent_witness:\n  fixes p :: \\<open>('f, 'p) fm\\<close>\n  assumes \\<open>consistent S\\<close> and \\<open>p \\<in> S\\<close> and \\<open>params S \\<subseteq> used\\<close>\n    and \\<open>finite used\\<close> and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>consistent (witness used p \\<union> S)\\<close>", "lemma consistent_extend:\n  fixes f :: \\<open>nat \\<Rightarrow> ('f, 'p) fm\\<close>\n  assumes \\<open>consistent S\\<close> and \\<open>finite (params S)\\<close>\n    and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>consistent (extend S f n)\\<close>", "lemma consistent_Extend:\n  fixes f :: \\<open>nat \\<Rightarrow> ('f, 'p) fm\\<close>\n  assumes \\<open>consistent S\\<close> and \\<open>finite (params S)\\<close>\n    and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>consistent (Extend S f)\\<close>", "lemma maximal_Extend:\n  assumes \\<open>surj f\\<close>\n  shows \\<open>maximal (Extend S f)\\<close>", "lemma saturated_Extend:\n  assumes \\<open>consistent (Extend S f)\\<close> and \\<open>surj f\\<close>\n  shows \\<open>saturated (Extend S f)\\<close>", "lemma semantics_tm_id [simp]:\n  \\<open>\\<lparr>\\<^bold>#, \\<^bold>\\<dagger>\\<rparr> t = t\\<close>", "lemma semantics_tm_id_map [simp]: \\<open>map \\<lparr>\\<^bold>#, \\<^bold>\\<dagger>\\<rparr> ts = ts\\<close>", "theorem Hintikka_model:\n  assumes \\<open>Hintikka H\\<close>\n  shows \\<open>(p \\<in> H \\<longrightarrow> \\<lbrakk>H\\<rbrakk> p) \\<and> ((\\<^bold>\\<not> p) \\<in> H \\<longrightarrow> \\<not> \\<lbrakk>H\\<rbrakk> p)\\<close>", "lemma inconsistent_head:\n  assumes \\<open>consistent S\\<close> and \\<open>maximal S\\<close> and \\<open>p \\<notin> S\\<close>\n  obtains S' where \\<open>set S' \\<subseteq> S\\<close> and \\<open>p # S' \\<turnstile> \\<^bold>\\<bottom>\\<close>", "lemma inconsistent_parts [simp]:\n  assumes \\<open>ps \\<turnstile> \\<^bold>\\<bottom>\\<close> and \\<open>set ps \\<subseteq> S\\<close>\n  shows \\<open>\\<not> consistent S\\<close>", "lemma Hintikka_Extend:\n  fixes H :: \\<open>('f, 'p) fm set\\<close>\n  assumes \\<open>consistent H\\<close> and \\<open>maximal H\\<close> and \\<open>saturated H\\<close>\n    and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>Hintikka H\\<close>", "lemma imply_completeness:\n  fixes p :: \\<open>('f :: countable, 'p :: countable) fm\\<close>\n  assumes \\<open>\\<forall>(E :: _ \\<Rightarrow> 'f tm) F G. Ball X \\<lbrakk>E, F, G\\<rbrakk> \\<longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\\<close>\n    and \\<open>finite (params X)\\<close> and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>\\<exists>ps. set ps \\<subseteq> X \\<and> (ps \\<turnstile> p)\\<close>", "theorem completeness:\n  fixes p :: \\<open>(nat, nat) fm\\<close>\n  assumes \\<open>\\<forall>(E :: nat \\<Rightarrow> nat tm) F G. \\<lbrakk>E, F, G\\<rbrakk> p\\<close>\n  shows \\<open>\\<turnstile> p\\<close>", "theorem main: \\<open>valid p \\<longleftrightarrow> (\\<turnstile> p)\\<close>"], "translations": [["", "lemma shift_eq [simp]: \\<open>n = m \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = x\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. n = m \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = x", "by (simp add: shift_def)"], ["", "lemma shift_gt [simp]: \\<open>m < n \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = E m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = E m", "by (simp add: shift_def)"], ["", "lemma shift_lt [simp]: \\<open>n < m \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = E (m-1)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. n < m \\<Longrightarrow> (E\\<langle>n:x\\<rangle>) m = E (m - 1)", "by (simp add: shift_def)"], ["", "lemma shift_commute [simp]: \\<open>E\\<langle>n:y\\<rangle>\\<langle>0:x\\<rangle> = E\\<langle>0:x\\<rangle>\\<langle>n+1:y\\<rangle>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. E\\<langle>n:y\\<rangle>\\<langle>0:x\\<rangle> =\n    E\\<langle>0:x\\<rangle>\\<langle>n + 1:y\\<rangle>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (E\\<langle>n:y\\<rangle>\\<langle>0:x\\<rangle>) xa =\n       (E\\<langle>0:x\\<rangle>\\<langle>n + 1:y\\<rangle>) xa", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (E\\<langle>n:y\\<rangle>\\<langle>0:x\\<rangle>) xa =\n       (E\\<langle>0:x\\<rangle>\\<langle>n + 1:y\\<rangle>) xa", "show \\<open>(E\\<langle>n:y\\<rangle>\\<langle>0:x\\<rangle>) m = (E\\<langle>0:x\\<rangle>\\<langle>n+1:y\\<rangle>) m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (E\\<langle>n:y\\<rangle>\\<langle>0:x\\<rangle>) m =\n    (E\\<langle>0:x\\<rangle>\\<langle>n + 1:y\\<rangle>) m", "unfolding shift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if m < 0 then if m < n then E m else if m = n then y else E (m - 1)\n     else if m = 0 then x\n          else if m - 1 < n then E (m - 1)\n               else if m - 1 = n then y else E (m - 1 - 1)) =\n    (if m < n + 1 then if m < 0 then E m else if m = 0 then x else E (m - 1)\n     else if m = n + 1 then y\n          else if m - 1 < 0 then E (m - 1)\n               else if m - 1 = 0 then x else E (m - 1 - 1))", "by (cases m) simp_all"], ["proof (state)\nthis:\n  (E\\<langle>n:y\\<rangle>\\<langle>0:x\\<rangle>) m =\n  (E\\<langle>0:x\\<rangle>\\<langle>n + 1:y\\<rangle>) m\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Parameters\\<close>"], ["", "abbreviation \\<open>params S \\<equiv> \\<Union>p \\<in> S. params_fm p\\<close>"], ["", "lemma upd_params_tm [simp]: \\<open>f \\<notin> params_tm t \\<Longrightarrow> \\<lparr>E, F(f := x)\\<rparr> t = \\<lparr>E, F\\<rparr> t\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<notin> params_tm t \\<Longrightarrow>\n    \\<lparr>E, F(f := x)\\<rparr> t = \\<lparr>E, F\\<rparr> t", "by (induct t) (auto cong: map_cong)"], ["", "lemma upd_params_fm [simp]: \\<open>f \\<notin> params_fm p \\<Longrightarrow> \\<lbrakk>E, F(f := x), G\\<rbrakk> p = \\<lbrakk>E, F, G\\<rbrakk> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<notin> params_fm p \\<Longrightarrow>\n    \\<lbrakk>E, F(f := x), G\\<rbrakk> p = \\<lbrakk>E, F, G\\<rbrakk> p", "by (induct p arbitrary: E) (auto cong: map_cong)"], ["", "lemma finite_params_tm [simp]: \\<open>finite (params_tm t)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (params_tm t)", "by (induct t) simp_all"], ["", "lemma finite_params_fm [simp]: \\<open>finite (params_fm p)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (params_fm p)", "by (induct p) simp_all"], ["", "subsection \\<open>Instantiation\\<close>"], ["", "primrec lift_tm (\\<open>\\<^bold>\\<up>\\<close>) where\n  \\<open>\\<^bold>\\<up>(\\<^bold>#n) = \\<^bold>#(n+1)\\<close>\n| \\<open>\\<^bold>\\<up>(\\<^bold>\\<dagger>f ts) = \\<^bold>\\<dagger>f (map \\<^bold>\\<up> ts)\\<close>"], ["", "primrec inst_tm (\\<open>_'\\<llangle>_'/_'\\<rrangle>\\<close> [90, 0, 0] 91) where\n  \\<open>(\\<^bold>#n)\\<llangle>s/m\\<rrangle> = (if n < m then \\<^bold>#n else if n = m then s else \\<^bold>#(n-1))\\<close>\n| \\<open>(\\<^bold>\\<dagger>f ts)\\<llangle>s/m\\<rrangle> = \\<^bold>\\<dagger>f (map (\\<lambda>t. t\\<llangle>s/m\\<rrangle>) ts)\\<close>"], ["", "primrec inst_fm (\\<open>_'\\<langle>_'/_'\\<rangle>\\<close> [90, 0, 0] 91) where\n  \\<open>\\<^bold>\\<bottom>\\<langle>_/_\\<rangle> = \\<^bold>\\<bottom>\\<close>\n| \\<open>(\\<^bold>\\<ddagger>P ts)\\<langle>s/m\\<rangle> = \\<^bold>\\<ddagger>P (map (\\<lambda>t. t\\<llangle>s/m\\<rrangle>) ts)\\<close>\n| \\<open>(p \\<^bold>\\<longrightarrow> q)\\<langle>s/m\\<rangle> = (p\\<langle>s/m\\<rangle> \\<^bold>\\<longrightarrow> q\\<langle>s/m\\<rangle>)\\<close>\n| \\<open>(\\<^bold>\\<forall> p)\\<langle>s/m\\<rangle> = \\<^bold>\\<forall> (p\\<langle>\\<^bold>\\<up>s/m+1\\<rangle>)\\<close>"], ["", "lemma lift_lemma [simp]: \\<open>\\<lparr>E\\<langle>0:x\\<rangle>, F\\<rparr> (\\<^bold>\\<up>t) = \\<lparr>E, F\\<rparr> t\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>E\\<langle>0:x\\<rangle>, F\\<rparr> (\\<^bold>\\<up> t) =\n    \\<lparr>E, F\\<rparr> t", "by (induct t) (auto cong: map_cong)"], ["", "lemma inst_tm_semantics [simp]: \\<open>\\<lparr>E, F\\<rparr> (t\\<llangle>s/m\\<rrangle>) = \\<lparr>E\\<langle>m:\\<lparr>E, F\\<rparr> s\\<rangle>, F\\<rparr> t\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>E, F\\<rparr> (t\\<llangle>s/m\\<rrangle>) =\n    \\<lparr>E\\<langle>m:\\<lparr>E, F\\<rparr> s\\<rangle>, F\\<rparr> t", "by (induct t) (auto cong: map_cong)"], ["", "lemma inst_fm_semantics [simp]: \\<open>\\<lbrakk>E, F, G\\<rbrakk> (p\\<langle>t/m\\<rangle>) = \\<lbrakk>E\\<langle>m:\\<lparr>E, F\\<rparr> t\\<rangle>, F, G\\<rbrakk> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>E, F, G\\<rbrakk> (p\\<langle>t/m\\<rangle>) =\n    \\<lbrakk>E\\<langle>m:\\<lparr>E, F\\<rparr> t\\<rangle>, F, G\\<rbrakk> p", "by (induct p arbitrary: E m t) (auto cong: map_cong)"], ["", "subsection \\<open>Size\\<close>"], ["", "text \\<open>The built-in \\<open>size\\<close> is not invariant under substitution.\\<close>"], ["", "primrec size_fm where\n  \\<open>size_fm \\<^bold>\\<bottom> = 1\\<close>\n| \\<open>size_fm (\\<^bold>\\<ddagger>_ _) = 1\\<close>\n| \\<open>size_fm (p \\<^bold>\\<longrightarrow> q) = 1 + size_fm p + size_fm q\\<close>\n| \\<open>size_fm (\\<^bold>\\<forall> p) = 1 + size_fm p\\<close>"], ["", "lemma size_inst_fm [simp]:\n  \\<open>size_fm (p\\<langle>t/m\\<rangle>) = size_fm p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. FOL_Axiomatic.size_fm (p\\<langle>t/m\\<rangle>) = FOL_Axiomatic.size_fm p", "by (induct p arbitrary: m t) auto"], ["", "section \\<open>Propositional Semantics\\<close>"], ["", "primrec boolean where\n  \\<open>boolean _ _ \\<^bold>\\<bottom> = False\\<close>\n| \\<open>boolean G _ (\\<^bold>\\<ddagger>P ts) = G P ts\\<close>\n| \\<open>boolean G H (p \\<^bold>\\<longrightarrow> q) = (boolean G H p \\<longrightarrow> boolean G H q)\\<close>\n| \\<open>boolean _ H (\\<^bold>\\<forall> p) = H (\\<^bold>\\<forall> p)\\<close>"], ["", "abbreviation \\<open>tautology p \\<equiv> \\<forall>G H. boolean G H p\\<close>"], ["", "proposition \\<open>tautology (\\<^bold>\\<forall> (\\<^bold>\\<ddagger>P [\\<^bold>#0]) \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> (\\<^bold>\\<ddagger>P [\\<^bold>#0]))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tautology\n     (\\<^bold>\\<forall>\n       (\\<^bold>\\<ddagger> P [\\<^bold># 0]) \\<^bold>\\<longrightarrow>\n      \\<^bold>\\<forall> (\\<^bold>\\<ddagger> P [\\<^bold># 0]))", "by simp"], ["", "lemma boolean_semantics: \\<open>boolean (\\<lambda>a. G a \\<circ> map \\<lparr>E, F\\<rparr>) \\<lbrakk>E, F, G\\<rbrakk> = \\<lbrakk>E, F, G\\<rbrakk>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. boolean (\\<lambda>a. G a \\<circ> map \\<lparr>E, F\\<rparr>)\n     \\<lbrakk>E, F, G\\<rbrakk> =\n    \\<lbrakk>E, F, G\\<rbrakk>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       boolean (\\<lambda>a. G a \\<circ> map \\<lparr>E, F\\<rparr>)\n        \\<lbrakk>E, F, G\\<rbrakk> x =\n       \\<lbrakk>E, F, G\\<rbrakk> x", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       boolean (\\<lambda>a. G a \\<circ> map \\<lparr>E, F\\<rparr>)\n        \\<lbrakk>E, F, G\\<rbrakk> x =\n       \\<lbrakk>E, F, G\\<rbrakk> x", "show \\<open>boolean (\\<lambda>a. G a \\<circ> map \\<lparr>E, F\\<rparr>) \\<lbrakk>E, F, G\\<rbrakk> p = \\<lbrakk>E, F, G\\<rbrakk> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. boolean (\\<lambda>a. G a \\<circ> map \\<lparr>E, F\\<rparr>)\n     \\<lbrakk>E, F, G\\<rbrakk> p =\n    \\<lbrakk>E, F, G\\<rbrakk> p", "by (induct p) simp_all"], ["proof (state)\nthis:\n  boolean (\\<lambda>a. G a \\<circ> map \\<lparr>E, F\\<rparr>)\n   \\<lbrakk>E, F, G\\<rbrakk> p =\n  \\<lbrakk>E, F, G\\<rbrakk> p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tautology: \\<open>tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p", "using boolean_semantics"], ["proof (prove)\nusing this:\n  boolean (\\<lambda>a. ?G a \\<circ> map \\<lparr>?E, ?F\\<rparr>)\n   \\<lbrakk>?E, ?F, ?G\\<rbrakk> =\n  \\<lbrakk>?E, ?F, ?G\\<rbrakk>\n\ngoal (1 subgoal):\n 1. tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p", "by metis"], ["", "proposition \\<open>\\<exists>p. (\\<forall>E F G. \\<lbrakk>E, F, G\\<rbrakk> p) \\<and> \\<not> tautology p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p.\n       (\\<forall>E F G. \\<lbrakk>E, F, G\\<rbrakk> p) \\<and>\n       \\<not> tautology p", "by (metis boolean.simps(4) fm.simps(36) semantics_fm.simps(1,3,4))"], ["", "section \\<open>Calculus\\<close>"], ["", "text \\<open>Adapted from System Q1 by Smullyan in First-Order Logic (1968)\\<close>"], ["", "inductive Axiomatic (\\<open>\\<turnstile> _\\<close> [20] 20) where\n  TA: \\<open>tautology p \\<Longrightarrow> \\<turnstile> p\\<close>\n| IA: \\<open>\\<turnstile> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow> p\\<langle>t/0\\<rangle>\\<close>\n| MP: \\<open>\\<turnstile> p \\<^bold>\\<longrightarrow> q \\<Longrightarrow> \\<turnstile> p \\<Longrightarrow> \\<turnstile> q\\<close>\n| GR: \\<open>\\<turnstile> q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle> \\<Longrightarrow> a \\<notin> params {p, q} \\<Longrightarrow> \\<turnstile> q \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> p\\<close>"], ["", "lemmas\n  TA[simp]\n  MP[trans, dest]\n  GR[intro]"], ["", "text \\<open>We simulate assumptions on the lhs of \\<open>\\<turnstile>\\<close> with a chain of implications on the rhs.\\<close>"], ["", "primrec imply (infixr \\<open>\\<^bold>\\<leadsto>\\<close> 26) where\n  \\<open>([] \\<^bold>\\<leadsto> q) = q\\<close>\n| \\<open>(p # ps \\<^bold>\\<leadsto> q) = (p \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> q)\\<close>"], ["", "abbreviation Axiomatic_assms (\\<open>_ \\<turnstile> _\\<close> [20, 20] 20) where\n  \\<open>ps \\<turnstile> q \\<equiv> \\<turnstile> ps \\<^bold>\\<leadsto> q\\<close>"], ["", "section \\<open>Soundness\\<close>"], ["", "theorem soundness: \\<open>\\<turnstile> p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p", "proof (induct p arbitrary: F rule: Axiomatic.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p F. tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\n 2. \\<And>p t F.\n       \\<lbrakk>E, F, G\\<rbrakk>\n        (\\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n         p\\<langle>t/0\\<rangle>)\n 3. \\<And>p q F.\n       \\<lbrakk>\\<turnstile> p \\<^bold>\\<longrightarrow> q;\n        \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> (p \\<^bold>\\<longrightarrow> q);\n        \\<turnstile> p; \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> p\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> q\n 4. \\<And>q p a F.\n       \\<lbrakk>\\<turnstile> q \\<^bold>\\<longrightarrow>\n                             p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>;\n        \\<And>F.\n           \\<lbrakk>E, F, G\\<rbrakk>\n            (q \\<^bold>\\<longrightarrow>\n             p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>);\n        a \\<notin> params {p, q}\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk>\n                          (q \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> p)", "case (GR q p a)"], ["proof (state)\nthis:\n  \\<turnstile> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n  \\<lbrakk>E, ?F, G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n  a \\<notin> params {p, q}\n\ngoal (4 subgoals):\n 1. \\<And>p F. tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\n 2. \\<And>p t F.\n       \\<lbrakk>E, F, G\\<rbrakk>\n        (\\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n         p\\<langle>t/0\\<rangle>)\n 3. \\<And>p q F.\n       \\<lbrakk>\\<turnstile> p \\<^bold>\\<longrightarrow> q;\n        \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> (p \\<^bold>\\<longrightarrow> q);\n        \\<turnstile> p; \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> p\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> q\n 4. \\<And>q p a F.\n       \\<lbrakk>\\<turnstile> q \\<^bold>\\<longrightarrow>\n                             p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>;\n        \\<And>F.\n           \\<lbrakk>E, F, G\\<rbrakk>\n            (q \\<^bold>\\<longrightarrow>\n             p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>);\n        a \\<notin> params {p, q}\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk>\n                          (q \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> p)", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n  \\<lbrakk>E, ?F, G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n  a \\<notin> params {p, q}\n\ngoal (4 subgoals):\n 1. \\<And>p F. tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\n 2. \\<And>p t F.\n       \\<lbrakk>E, F, G\\<rbrakk>\n        (\\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n         p\\<langle>t/0\\<rangle>)\n 3. \\<And>p q F.\n       \\<lbrakk>\\<turnstile> p \\<^bold>\\<longrightarrow> q;\n        \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> (p \\<^bold>\\<longrightarrow> q);\n        \\<turnstile> p; \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> p\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> q\n 4. \\<And>q p a F.\n       \\<lbrakk>\\<turnstile> q \\<^bold>\\<longrightarrow>\n                             p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>;\n        \\<And>F.\n           \\<lbrakk>E, F, G\\<rbrakk>\n            (q \\<^bold>\\<longrightarrow>\n             p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>);\n        a \\<notin> params {p, q}\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk>\n                          (q \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> p)", "from this"], ["proof (chain)\npicking this:\n  \\<turnstile> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n  \\<lbrakk>E, ?F, G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n  a \\<notin> params {p, q}", "have \\<open>\\<lbrakk>E, F(a := x), G\\<rbrakk> (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>)\\<close> for x"], ["proof (prove)\nusing this:\n  \\<turnstile> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n  \\<lbrakk>E, ?F, G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n  a \\<notin> params {p, q}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>E, F(a := x), G\\<rbrakk>\n     (q \\<^bold>\\<longrightarrow>\n      p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>E, F(a := ?x), G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n\ngoal (4 subgoals):\n 1. \\<And>p F. tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\n 2. \\<And>p t F.\n       \\<lbrakk>E, F, G\\<rbrakk>\n        (\\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n         p\\<langle>t/0\\<rangle>)\n 3. \\<And>p q F.\n       \\<lbrakk>\\<turnstile> p \\<^bold>\\<longrightarrow> q;\n        \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> (p \\<^bold>\\<longrightarrow> q);\n        \\<turnstile> p; \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> p\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> q\n 4. \\<And>q p a F.\n       \\<lbrakk>\\<turnstile> q \\<^bold>\\<longrightarrow>\n                             p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>;\n        \\<And>F.\n           \\<lbrakk>E, F, G\\<rbrakk>\n            (q \\<^bold>\\<longrightarrow>\n             p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>);\n        a \\<notin> params {p, q}\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk>\n                          (q \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> p)", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n  \\<lbrakk>E, ?F, G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n  a \\<notin> params {p, q}\n  \\<lbrakk>E, F(a := ?x), G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n  \\<lbrakk>E, ?F, G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n  a \\<notin> params {p, q}\n  \\<lbrakk>E, F(a := ?x), G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>E, F, G\\<rbrakk>\n     (q \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> p)", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>E, F, G\\<rbrakk>\n   (q \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> p)\n\ngoal (3 subgoals):\n 1. \\<And>p F. tautology p \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\n 2. \\<And>p t F.\n       \\<lbrakk>E, F, G\\<rbrakk>\n        (\\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n         p\\<langle>t/0\\<rangle>)\n 3. \\<And>p q F.\n       \\<lbrakk>\\<turnstile> p \\<^bold>\\<longrightarrow> q;\n        \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> (p \\<^bold>\\<longrightarrow> q);\n        \\<turnstile> p; \\<And>F. \\<lbrakk>E, F, G\\<rbrakk> p\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> q", "qed (auto simp: tautology)"], ["", "corollary \\<open>\\<not> (\\<turnstile> \\<^bold>\\<bottom>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<turnstile> \\<^bold>\\<bottom>)", "using soundness"], ["proof (prove)\nusing this:\n  \\<turnstile> ?p \\<Longrightarrow> \\<lbrakk>?E, ?F, ?G\\<rbrakk> ?p\n\ngoal (1 subgoal):\n 1. \\<not> (\\<turnstile> \\<^bold>\\<bottom>)", "by fastforce"], ["", "section \\<open>Derived Rules\\<close>"], ["", "lemma AS: \\<open>\\<turnstile> (p \\<^bold>\\<longrightarrow> q \\<^bold>\\<longrightarrow> r) \\<^bold>\\<longrightarrow> (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow> p \\<^bold>\\<longrightarrow> r\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> (p \\<^bold>\\<longrightarrow>\n                  q \\<^bold>\\<longrightarrow> r) \\<^bold>\\<longrightarrow>\n                 (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow>\n                 p \\<^bold>\\<longrightarrow> r", "by auto"], ["", "lemma AK: \\<open>\\<turnstile> q \\<^bold>\\<longrightarrow> p \\<^bold>\\<longrightarrow> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> q \\<^bold>\\<longrightarrow> p \\<^bold>\\<longrightarrow> q", "by auto"], ["", "lemma Neg: \\<open>\\<turnstile> \\<^bold>\\<not> \\<^bold>\\<not> p \\<^bold>\\<longrightarrow> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<not> p \\<^bold>\\<longrightarrow> p", "by auto"], ["", "lemma contraposition:\n  \\<open>\\<turnstile> (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow> \\<^bold>\\<not> p\\<close>\n  \\<open>\\<turnstile> (\\<^bold>\\<not> q \\<^bold>\\<longrightarrow> \\<^bold>\\<not> p) \\<^bold>\\<longrightarrow> p \\<^bold>\\<longrightarrow> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow>\n                 \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n                 \\<^bold>\\<not> p &&&\n    \\<turnstile> (\\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n                  \\<^bold>\\<not> p) \\<^bold>\\<longrightarrow>\n                 p \\<^bold>\\<longrightarrow> q", "by (auto intro: TA)"], ["", "lemma GR': \\<open>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle> \\<^bold>\\<longrightarrow> q \\<Longrightarrow> a \\<notin> params {p, q} \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n              []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                          q;\n     a \\<notin> params {p, q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n             p \\<^bold>\\<longrightarrow>\n                                   q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n              []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                          q;\n     a \\<notin> params {p, q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n             p \\<^bold>\\<longrightarrow>\n                                   q", "assume *: \\<open>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle> \\<^bold>\\<longrightarrow> q\\<close> and a: \\<open>a \\<notin> params {p, q}\\<close>"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n   []/0\\<rangle> \\<^bold>\\<longrightarrow>\n               q\n  a \\<notin> params {p, q}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n              []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                          q;\n     a \\<notin> params {p, q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n             p \\<^bold>\\<longrightarrow>\n                                   q", "have \\<open>\\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow> \\<^bold>\\<not> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n                 \\<^bold>\\<not> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n                    []/0\\<rangle>", "using * contraposition(1)"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n   []/0\\<rangle> \\<^bold>\\<longrightarrow>\n               q\n  \\<turnstile> (?p \\<^bold>\\<longrightarrow> ?q) \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<not> ?q \\<^bold>\\<longrightarrow> \\<^bold>\\<not> ?p\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n                 \\<^bold>\\<not> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n                    []/0\\<rangle>", "by fast"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<not> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n                  []/0\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n              []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                          q;\n     a \\<notin> params {p, q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n             p \\<^bold>\\<longrightarrow>\n                                   q", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<not> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n                  []/0\\<rangle>", "have \\<open>\\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>\\<close>"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<not> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n                  []/0\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n                 p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>", "by (meson AK AS MP Neg)"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n              []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                          q;\n     a \\<notin> params {p, q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n             p \\<^bold>\\<longrightarrow>\n                                   q", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>", "have \\<open>\\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> p\\<close>"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n                 \\<^bold>\\<forall> p", "using a"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>\n  a \\<notin> params {p, q}\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n                 \\<^bold>\\<forall> p", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<forall> p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n              []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                          q;\n     a \\<notin> params {p, q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n             p \\<^bold>\\<longrightarrow>\n                                   q", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<forall> p", "have \\<open>\\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow> \\<^bold>\\<not> \\<^bold>\\<not> q\\<close>"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<forall> p\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n                                 p \\<^bold>\\<longrightarrow>\n                 \\<^bold>\\<not> \\<^bold>\\<not> q", "using contraposition(1)"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> q \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<forall> p\n  \\<turnstile> (?p \\<^bold>\\<longrightarrow> ?q) \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<not> ?q \\<^bold>\\<longrightarrow> \\<^bold>\\<not> ?p\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n                                 p \\<^bold>\\<longrightarrow>\n                 \\<^bold>\\<not> \\<^bold>\\<not> q", "by fast"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<not> \\<^bold>\\<not> q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n              []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                          q;\n     a \\<notin> params {p, q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n             p \\<^bold>\\<longrightarrow>\n                                   q", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<not> \\<^bold>\\<not> q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               \\<^bold>\\<not> \\<^bold>\\<not> q\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n                                 p \\<^bold>\\<longrightarrow>\n                 q", "by (meson AK AS MP Neg)"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Imp3: \\<open>\\<turnstile> (p \\<^bold>\\<longrightarrow> q \\<^bold>\\<longrightarrow> r) \\<^bold>\\<longrightarrow> ((s \\<^bold>\\<longrightarrow> p) \\<^bold>\\<longrightarrow> (s \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow> s \\<^bold>\\<longrightarrow> r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> (p \\<^bold>\\<longrightarrow>\n                  q \\<^bold>\\<longrightarrow> r) \\<^bold>\\<longrightarrow>\n                 (s \\<^bold>\\<longrightarrow> p) \\<^bold>\\<longrightarrow>\n                 (s \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow>\n                 s \\<^bold>\\<longrightarrow> r", "by auto"], ["", "lemma imply_ImpE: \\<open>\\<turnstile> ps \\<^bold>\\<leadsto> p \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> ps \\<^bold>\\<leadsto> p \\<^bold>\\<longrightarrow>\n                 ps \\<^bold>\\<leadsto>\n                 (p \\<^bold>\\<longrightarrow> q) \\<^bold>\\<longrightarrow>\n                 ps \\<^bold>\\<leadsto> q", "by (induct ps) (auto intro: Imp3 MP)"], ["", "lemma MP' [trans, dest]: \\<open>ps \\<turnstile> p \\<^bold>\\<longrightarrow> q \\<Longrightarrow> ps \\<turnstile> p \\<Longrightarrow> ps \\<turnstile> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<turnstile> p \\<^bold>\\<longrightarrow> q;\n     ps \\<turnstile> p\\<rbrakk>\n    \\<Longrightarrow> ps \\<turnstile> q", "using imply_ImpE"], ["proof (prove)\nusing this:\n  \\<turnstile> ?ps \\<^bold>\\<leadsto> ?p \\<^bold>\\<longrightarrow>\n               ?ps \\<^bold>\\<leadsto>\n               (?p \\<^bold>\\<longrightarrow> ?q) \\<^bold>\\<longrightarrow>\n               ?ps \\<^bold>\\<leadsto> ?q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<turnstile> p \\<^bold>\\<longrightarrow> q;\n     ps \\<turnstile> p\\<rbrakk>\n    \\<Longrightarrow> ps \\<turnstile> q", "by fast"], ["", "lemma imply_Cons [intro]: \\<open>ps \\<turnstile> q \\<Longrightarrow> p # ps \\<turnstile> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ps \\<turnstile> q \\<Longrightarrow> p # ps \\<turnstile> q", "by (auto intro: MP AK)"], ["", "lemma imply_head [intro]: \\<open>p # ps \\<turnstile> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. p # ps \\<turnstile> p", "proof (induct ps)"], ["proof (state)\ngoal (2 subgoals):\n 1. [p] \\<turnstile> p\n 2. \\<And>a ps.\n       p # ps \\<turnstile> p \\<Longrightarrow> p # a # ps \\<turnstile> p", "case (Cons q ps)"], ["proof (state)\nthis:\n  p # ps \\<turnstile> p\n\ngoal (2 subgoals):\n 1. [p] \\<turnstile> p\n 2. \\<And>a ps.\n       p # ps \\<turnstile> p \\<Longrightarrow> p # a # ps \\<turnstile> p", "then"], ["proof (chain)\npicking this:\n  p # ps \\<turnstile> p", "show ?case"], ["proof (prove)\nusing this:\n  p # ps \\<turnstile> p\n\ngoal (1 subgoal):\n 1. p # q # ps \\<turnstile> p", "by (metis AK MP' imply.simps(1-2))"], ["proof (state)\nthis:\n  p # q # ps \\<turnstile> p\n\ngoal (1 subgoal):\n 1. [p] \\<turnstile> p", "qed auto"], ["", "lemma imply_lift_Imp [simp]:\n  assumes \\<open>\\<turnstile> p \\<^bold>\\<longrightarrow> q\\<close>\n  shows \\<open>\\<turnstile> p \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> p \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> q", "using assms MP MP' imply_head"], ["proof (prove)\nusing this:\n  \\<turnstile> p \\<^bold>\\<longrightarrow> q\n  \\<lbrakk>\\<turnstile> ?p \\<^bold>\\<longrightarrow> ?q;\n   \\<turnstile> ?p\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile> ?q\n  \\<lbrakk>?ps \\<turnstile> ?p \\<^bold>\\<longrightarrow> ?q;\n   ?ps \\<turnstile> ?p\\<rbrakk>\n  \\<Longrightarrow> ?ps \\<turnstile> ?q\n  ?p # ?ps \\<turnstile> ?p\n\ngoal (1 subgoal):\n 1. \\<turnstile> p \\<^bold>\\<longrightarrow> ps \\<^bold>\\<leadsto> q", "by (metis imply.simps(2))"], ["", "lemma add_imply [simp]: \\<open>\\<turnstile> q \\<Longrightarrow> ps \\<turnstile> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> q \\<Longrightarrow> ps \\<turnstile> q", "using MP imply_head"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile> ?p \\<^bold>\\<longrightarrow> ?q;\n   \\<turnstile> ?p\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile> ?q\n  ?p # ?ps \\<turnstile> ?p\n\ngoal (1 subgoal):\n 1. \\<turnstile> q \\<Longrightarrow> ps \\<turnstile> q", "by (auto simp del: TA)"], ["", "lemma imply_mem [simp]: \\<open>p \\<in> set ps \\<Longrightarrow> ps \\<turnstile> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> set ps \\<Longrightarrow> ps \\<turnstile> p", "proof (induct ps)"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<in> set [] \\<Longrightarrow> [] \\<turnstile> p\n 2. \\<And>a ps.\n       \\<lbrakk>p \\<in> set ps \\<Longrightarrow> ps \\<turnstile> p;\n        p \\<in> set (a # ps)\\<rbrakk>\n       \\<Longrightarrow> a # ps \\<turnstile> p", "case (Cons q ps)"], ["proof (state)\nthis:\n  p \\<in> set ps \\<Longrightarrow> ps \\<turnstile> p\n  p \\<in> set (q # ps)\n\ngoal (2 subgoals):\n 1. p \\<in> set [] \\<Longrightarrow> [] \\<turnstile> p\n 2. \\<And>a ps.\n       \\<lbrakk>p \\<in> set ps \\<Longrightarrow> ps \\<turnstile> p;\n        p \\<in> set (a # ps)\\<rbrakk>\n       \\<Longrightarrow> a # ps \\<turnstile> p", "then"], ["proof (chain)\npicking this:\n  p \\<in> set ps \\<Longrightarrow> ps \\<turnstile> p\n  p \\<in> set (q # ps)", "show ?case"], ["proof (prove)\nusing this:\n  p \\<in> set ps \\<Longrightarrow> ps \\<turnstile> p\n  p \\<in> set (q # ps)\n\ngoal (1 subgoal):\n 1. q # ps \\<turnstile> p", "by (metis imply_Cons imply_head set_ConsD)"], ["proof (state)\nthis:\n  q # ps \\<turnstile> p\n\ngoal (1 subgoal):\n 1. p \\<in> set [] \\<Longrightarrow> [] \\<turnstile> p", "qed simp"], ["", "lemma deduct1: \\<open>ps \\<turnstile> p \\<^bold>\\<longrightarrow> q \\<Longrightarrow> p # ps \\<turnstile> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ps \\<turnstile> p \\<^bold>\\<longrightarrow> q \\<Longrightarrow>\n    p # ps \\<turnstile> q", "by (meson MP' imply_Cons imply_head)"], ["", "lemma imply_append [iff]: \\<open>(ps @ qs \\<^bold>\\<leadsto> r) = (ps \\<^bold>\\<leadsto> qs \\<^bold>\\<leadsto> r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ps @ qs \\<^bold>\\<leadsto> r) =\n    (ps \\<^bold>\\<leadsto> qs \\<^bold>\\<leadsto> r)", "by (induct ps) simp_all"], ["", "lemma imply_swap_append: \\<open>ps @ qs \\<turnstile> r \\<Longrightarrow> qs @ ps \\<turnstile> r\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ps @ qs \\<turnstile> r \\<Longrightarrow> qs @ ps \\<turnstile> r", "proof (induct qs arbitrary: ps)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ps.\n       ps @ [] \\<turnstile> r \\<Longrightarrow> [] @ ps \\<turnstile> r\n 2. \\<And>a qs ps.\n       \\<lbrakk>\\<And>ps.\n                   ps @ qs \\<turnstile> r \\<Longrightarrow>\n                   qs @ ps \\<turnstile> r;\n        ps @ a # qs \\<turnstile> r\\<rbrakk>\n       \\<Longrightarrow> (a # qs) @ ps \\<turnstile> r", "case (Cons q qs)"], ["proof (state)\nthis:\n  ?ps @ qs \\<turnstile> r \\<Longrightarrow> qs @ ?ps \\<turnstile> r\n  ps @ q # qs \\<turnstile> r\n\ngoal (2 subgoals):\n 1. \\<And>ps.\n       ps @ [] \\<turnstile> r \\<Longrightarrow> [] @ ps \\<turnstile> r\n 2. \\<And>a qs ps.\n       \\<lbrakk>\\<And>ps.\n                   ps @ qs \\<turnstile> r \\<Longrightarrow>\n                   qs @ ps \\<turnstile> r;\n        ps @ a # qs \\<turnstile> r\\<rbrakk>\n       \\<Longrightarrow> (a # qs) @ ps \\<turnstile> r", "then"], ["proof (chain)\npicking this:\n  ?ps @ qs \\<turnstile> r \\<Longrightarrow> qs @ ?ps \\<turnstile> r\n  ps @ q # qs \\<turnstile> r", "show ?case"], ["proof (prove)\nusing this:\n  ?ps @ qs \\<turnstile> r \\<Longrightarrow> qs @ ?ps \\<turnstile> r\n  ps @ q # qs \\<turnstile> r\n\ngoal (1 subgoal):\n 1. (q # qs) @ ps \\<turnstile> r", "by (metis deduct1 imply.simps(2) imply_append)"], ["proof (state)\nthis:\n  (q # qs) @ ps \\<turnstile> r\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       ps @ [] \\<turnstile> r \\<Longrightarrow> [] @ ps \\<turnstile> r", "qed simp"], ["", "lemma deduct2: \\<open>p # ps \\<turnstile> q \\<Longrightarrow> ps \\<turnstile> p \\<^bold>\\<longrightarrow> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. p # ps \\<turnstile> q \\<Longrightarrow>\n    ps \\<turnstile> p \\<^bold>\\<longrightarrow> q", "by (metis imply.simps(1-2) imply_append imply_swap_append)"], ["", "lemmas deduct [iff] = deduct1 deduct2"], ["", "lemma cut [trans, dest]: \\<open>p # ps \\<turnstile> r \\<Longrightarrow> q # ps \\<turnstile> p \\<Longrightarrow> q # ps \\<turnstile> r\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p # ps \\<turnstile> r; q # ps \\<turnstile> p\\<rbrakk>\n    \\<Longrightarrow> q # ps \\<turnstile> r", "by (meson MP' deduct(2) imply_Cons)"], ["", "lemma Boole: \\<open>(\\<^bold>\\<not> p) # ps \\<turnstile> \\<^bold>\\<bottom> \\<Longrightarrow> ps \\<turnstile> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> p) # ps \\<turnstile> \\<^bold>\\<bottom> \\<Longrightarrow>\n    ps \\<turnstile> p", "by (meson MP' Neg add_imply deduct(2))"], ["", "lemma imply_weaken: \\<open>ps \\<turnstile> q \\<Longrightarrow> set ps \\<subseteq> set ps' \\<Longrightarrow> ps' \\<turnstile> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<turnstile> q; set ps \\<subseteq> set ps'\\<rbrakk>\n    \\<Longrightarrow> ps' \\<turnstile> q", "proof (induct ps arbitrary: q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>[] \\<turnstile> q; set [] \\<subseteq> set ps'\\<rbrakk>\n       \\<Longrightarrow> ps' \\<turnstile> q\n 2. \\<And>a ps q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>ps \\<turnstile> q;\n                    set ps \\<subseteq> set ps'\\<rbrakk>\n                   \\<Longrightarrow> ps' \\<turnstile> q;\n        a # ps \\<turnstile> q; set (a # ps) \\<subseteq> set ps'\\<rbrakk>\n       \\<Longrightarrow> ps' \\<turnstile> q", "case (Cons p ps)"], ["proof (state)\nthis:\n  \\<lbrakk>ps \\<turnstile> ?q; set ps \\<subseteq> set ps'\\<rbrakk>\n  \\<Longrightarrow> ps' \\<turnstile> ?q\n  p # ps \\<turnstile> q\n  set (p # ps) \\<subseteq> set ps'\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>[] \\<turnstile> q; set [] \\<subseteq> set ps'\\<rbrakk>\n       \\<Longrightarrow> ps' \\<turnstile> q\n 2. \\<And>a ps q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>ps \\<turnstile> q;\n                    set ps \\<subseteq> set ps'\\<rbrakk>\n                   \\<Longrightarrow> ps' \\<turnstile> q;\n        a # ps \\<turnstile> q; set (a # ps) \\<subseteq> set ps'\\<rbrakk>\n       \\<Longrightarrow> ps' \\<turnstile> q", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>ps \\<turnstile> ?q; set ps \\<subseteq> set ps'\\<rbrakk>\n  \\<Longrightarrow> ps' \\<turnstile> ?q\n  p # ps \\<turnstile> q\n  set (p # ps) \\<subseteq> set ps'", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>ps \\<turnstile> ?q; set ps \\<subseteq> set ps'\\<rbrakk>\n  \\<Longrightarrow> ps' \\<turnstile> ?q\n  p # ps \\<turnstile> q\n  set (p # ps) \\<subseteq> set ps'\n\ngoal (1 subgoal):\n 1. ps' \\<turnstile> q", "by (metis MP' deduct(2) imply_mem insert_subset list.simps(15))"], ["proof (state)\nthis:\n  ps' \\<turnstile> q\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>[] \\<turnstile> q; set [] \\<subseteq> set ps'\\<rbrakk>\n       \\<Longrightarrow> ps' \\<turnstile> q", "qed simp"], ["", "section \\<open>Consistent\\<close>"], ["", "definition \\<open>consistent S \\<equiv> \\<nexists>S'. set S' \\<subseteq> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\\<close>"], ["", "lemma UN_finite_bound:\n  assumes \\<open>finite A\\<close> and \\<open>A \\<subseteq> (\\<Union>n. f n)\\<close>\n  shows \\<open>\\<exists>m :: nat. A \\<subseteq> (\\<Union>n \\<le> m. f n)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. A \\<subseteq> \\<Union> (f ` {..m})", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> \\<Union> (range f)\n\ngoal (1 subgoal):\n 1. \\<exists>m. A \\<subseteq> \\<Union> (f ` {..m})", "proof (induct rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n    \\<exists>m. {} \\<subseteq> \\<Union> (f ` {..m})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n        \\<exists>m. F \\<subseteq> \\<Union> (f ` {..m});\n        insert x F \\<subseteq> \\<Union> (range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m.\n                            insert x F \\<subseteq> \\<Union> (f ` {..m})", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  x \\<notin> A\n  A \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n  \\<exists>m. A \\<subseteq> \\<Union> (f ` {..m})\n  insert x A \\<subseteq> \\<Union> (range f)\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n    \\<exists>m. {} \\<subseteq> \\<Union> (f ` {..m})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n        \\<exists>m. F \\<subseteq> \\<Union> (f ` {..m});\n        insert x F \\<subseteq> \\<Union> (range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m.\n                            insert x F \\<subseteq> \\<Union> (f ` {..m})", "then"], ["proof (chain)\npicking this:\n  finite A\n  x \\<notin> A\n  A \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n  \\<exists>m. A \\<subseteq> \\<Union> (f ` {..m})\n  insert x A \\<subseteq> \\<Union> (range f)", "obtain m where \\<open>A \\<subseteq> (\\<Union>n \\<le> m. f n)\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  x \\<notin> A\n  A \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n  \\<exists>m. A \\<subseteq> \\<Union> (f ` {..m})\n  insert x A \\<subseteq> \\<Union> (range f)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        A \\<subseteq> \\<Union> (f ` {..m}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  A \\<subseteq> \\<Union> (f ` {..m})\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n    \\<exists>m. {} \\<subseteq> \\<Union> (f ` {..m})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n        \\<exists>m. F \\<subseteq> \\<Union> (f ` {..m});\n        insert x F \\<subseteq> \\<Union> (range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m.\n                            insert x F \\<subseteq> \\<Union> (f ` {..m})", "then"], ["proof (chain)\npicking this:\n  A \\<subseteq> \\<Union> (f ` {..m})", "have \\<open>A \\<subseteq> (\\<Union>n \\<le> (m + k). f n)\\<close> for k"], ["proof (prove)\nusing this:\n  A \\<subseteq> \\<Union> (f ` {..m})\n\ngoal (1 subgoal):\n 1. A \\<subseteq> \\<Union> (f ` {..m + k})", "by fastforce"], ["proof (state)\nthis:\n  A \\<subseteq> \\<Union> (f ` {..m + ?k})\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n    \\<exists>m. {} \\<subseteq> \\<Union> (f ` {..m})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n        \\<exists>m. F \\<subseteq> \\<Union> (f ` {..m});\n        insert x F \\<subseteq> \\<Union> (range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m.\n                            insert x F \\<subseteq> \\<Union> (f ` {..m})", "moreover"], ["proof (state)\nthis:\n  A \\<subseteq> \\<Union> (f ` {..m + ?k})\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n    \\<exists>m. {} \\<subseteq> \\<Union> (f ` {..m})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n        \\<exists>m. F \\<subseteq> \\<Union> (f ` {..m});\n        insert x F \\<subseteq> \\<Union> (range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m.\n                            insert x F \\<subseteq> \\<Union> (f ` {..m})", "obtain m' where \\<open>x \\<in> f m'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m'. x \\<in> f m' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using insert(4)"], ["proof (prove)\nusing this:\n  insert x A \\<subseteq> \\<Union> (range f)\n\ngoal (1 subgoal):\n 1. (\\<And>m'. x \\<in> f m' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> f m'\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n    \\<exists>m. {} \\<subseteq> \\<Union> (f ` {..m})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n        \\<exists>m. F \\<subseteq> \\<Union> (f ` {..m});\n        insert x F \\<subseteq> \\<Union> (range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m.\n                            insert x F \\<subseteq> \\<Union> (f ` {..m})", "ultimately"], ["proof (chain)\npicking this:\n  A \\<subseteq> \\<Union> (f ` {..m + ?k})\n  x \\<in> f m'", "have \\<open>{x} \\<union> A \\<subseteq> (\\<Union>n \\<le> m + m'. f n)\\<close>"], ["proof (prove)\nusing this:\n  A \\<subseteq> \\<Union> (f ` {..m + ?k})\n  x \\<in> f m'\n\ngoal (1 subgoal):\n 1. {x} \\<union> A \\<subseteq> \\<Union> (f ` {..m + m'})", "by auto"], ["proof (state)\nthis:\n  {x} \\<union> A \\<subseteq> \\<Union> (f ` {..m + m'})\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n    \\<exists>m. {} \\<subseteq> \\<Union> (f ` {..m})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n        \\<exists>m. F \\<subseteq> \\<Union> (f ` {..m});\n        insert x F \\<subseteq> \\<Union> (range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m.\n                            insert x F \\<subseteq> \\<Union> (f ` {..m})", "then"], ["proof (chain)\npicking this:\n  {x} \\<union> A \\<subseteq> \\<Union> (f ` {..m + m'})", "show ?case"], ["proof (prove)\nusing this:\n  {x} \\<union> A \\<subseteq> \\<Union> (f ` {..m + m'})\n\ngoal (1 subgoal):\n 1. \\<exists>m. insert x A \\<subseteq> \\<Union> (f ` {..m})", "by blast"], ["proof (state)\nthis:\n  \\<exists>m. insert x A \\<subseteq> \\<Union> (f ` {..m})\n\ngoal (1 subgoal):\n 1. {} \\<subseteq> \\<Union> (range f) \\<Longrightarrow>\n    \\<exists>m. {} \\<subseteq> \\<Union> (f ` {..m})", "qed simp"], ["", "lemma split_list:\n  assumes \\<open>x \\<in> set A\\<close>\n  shows \\<open>set (x # removeAll x A) = set A \\<and> x \\<notin> set (removeAll x A)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (x # removeAll x A) = set A \\<and> x \\<notin> set (removeAll x A)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> set A\n\ngoal (1 subgoal):\n 1. set (x # removeAll x A) = set A \\<and> x \\<notin> set (removeAll x A)", "by auto"], ["", "lemma imply_params_fm: \\<open>params_fm (ps \\<^bold>\\<leadsto> q) = params_fm q \\<union> (\\<Union>p \\<in> set ps. params_fm p)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. params_fm (ps \\<^bold>\\<leadsto> q) =\n    params_fm q \\<union> params (set ps)", "by (induct ps) auto"], ["", "lemma inconsistent_fm:\n  assumes \\<open>consistent S\\<close> and \\<open>\\<not> consistent ({p} \\<union> S)\\<close>\n  obtains S' where \\<open>set S' \\<subseteq> S\\<close> and \\<open>p # S' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain S' where S': \\<open>set S' \\<subseteq> {p} \\<union> S\\<close> \\<open>p \\<in> set S'\\<close> \\<open>S' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> {p} \\<union> S; p \\<in> set S';\n         S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  consistent S\n  \\<not> consistent ({p} \\<union> S)\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> {p} \\<union> S; p \\<in> set S';\n         S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<nexists>S'.\n     set S' \\<subseteq> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n  \\<not> (\\<nexists>S'.\n             set S' \\<subseteq> {p} \\<union> S \\<and>\n             (S' \\<turnstile> \\<^bold>\\<bottom>))\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> {p} \\<union> S; p \\<in> set S';\n         S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  set S' \\<subseteq> {p} \\<union> S\n  p \\<in> set S'\n  S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  set S' \\<subseteq> {p} \\<union> S\n  p \\<in> set S'\n  S' \\<turnstile> \\<^bold>\\<bottom>", "obtain S'' where S'': \\<open>set (p # S'') = set S'\\<close> \\<open>p \\<notin> set S''\\<close>"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> {p} \\<union> S\n  p \\<in> set S'\n  S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<And>S''.\n        \\<lbrakk>set (p # S'') = set S'; p \\<notin> set S''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using split_list"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> {p} \\<union> S\n  p \\<in> set S'\n  S' \\<turnstile> \\<^bold>\\<bottom>\n  ?x \\<in> set ?A \\<Longrightarrow>\n  set (?x # removeAll ?x ?A) = set ?A \\<and>\n  ?x \\<notin> set (removeAll ?x ?A)\n\ngoal (1 subgoal):\n 1. (\\<And>S''.\n        \\<lbrakk>set (p # S'') = set S'; p \\<notin> set S''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  set (p # S'') = set S'\n  p \\<notin> set S''\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  set (p # S'') = set S'\n  p \\<notin> set S''", "have \\<open>p # S'' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  set (p # S'') = set S'\n  p \\<notin> set S''\n\ngoal (1 subgoal):\n 1. p # S'' \\<turnstile> \\<^bold>\\<bottom>", "using \\<open>S' \\<turnstile> \\<^bold>\\<bottom>\\<close> imply_weaken"], ["proof (prove)\nusing this:\n  set (p # S'') = set S'\n  p \\<notin> set S''\n  S' \\<turnstile> \\<^bold>\\<bottom>\n  \\<lbrakk>?ps \\<turnstile> ?q; set ?ps \\<subseteq> set ?ps'\\<rbrakk>\n  \\<Longrightarrow> ?ps' \\<turnstile> ?q\n\ngoal (1 subgoal):\n 1. p # S'' \\<turnstile> \\<^bold>\\<bottom>", "by blast"], ["proof (state)\nthis:\n  p # S'' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  p # S'' \\<turnstile> \\<^bold>\\<bottom>", "show ?thesis"], ["proof (prove)\nusing this:\n  p # S'' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. thesis", "using that S'' S'(1)"], ["proof (prove)\nusing this:\n  p # S'' \\<turnstile> \\<^bold>\\<bottom>\n  \\<lbrakk>set ?S' \\<subseteq> S;\n   p # ?S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  set (p # S'') = set S'\n  p \\<notin> set S''\n  set S' \\<subseteq> {p} \\<union> S\n\ngoal (1 subgoal):\n 1. thesis", "by (metis Diff_insert_absorb Diff_subset_conv list.simps(15))"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma consistent_add_witness:\n  assumes \\<open>consistent S\\<close> and \\<open>(\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\\<close> and \\<open>a \\<notin> params S\\<close>\n  shows \\<open>consistent ({\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>} \\<union> S)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent\n     ({\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>} \\<union>\n      S)", "unfolding consistent_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "assume \\<open>\\<exists>S'. set S' \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>} \\<union> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\\<close>"], ["proof (state)\nthis:\n  \\<exists>S'.\n     set S'\n     \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n      []/0\\<rangle>} \\<union>\n                 S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>S'.\n     set S'\n     \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n      []/0\\<rangle>} \\<union>\n                 S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)", "obtain S' where \\<open>set S' \\<subseteq> S\\<close> and \\<open>(\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>) # S' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>S'.\n     set S'\n     \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n      []/0\\<rangle>} \\<union>\n                 S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) #\n         S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms inconsistent_fm"], ["proof (prove)\nusing this:\n  \\<exists>S'.\n     set S'\n     \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n      []/0\\<rangle>} \\<union>\n                 S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n  consistent S\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n  a \\<notin> params S\n  \\<lbrakk>consistent ?S; \\<not> consistent ({?p} \\<union> ?S);\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) #\n         S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<exists>S'.\n     set S'\n     \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n      []/0\\<rangle>} \\<union>\n                 S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n  \\<nexists>S'.\n     set S' \\<subseteq> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n  a \\<notin> params S\n  \\<lbrakk>\\<nexists>S'.\n              set S' \\<subseteq> ?S \\<and>\n              (S' \\<turnstile> \\<^bold>\\<bottom>);\n   \\<not> (\\<nexists>S'.\n              set S' \\<subseteq> {?p} \\<union> ?S \\<and>\n              (S' \\<turnstile> \\<^bold>\\<bottom>));\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) #\n         S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  set S' \\<subseteq> S\n  (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) #\n  S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  set S' \\<subseteq> S\n  (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) #\n  S' \\<turnstile> \\<^bold>\\<bottom>", "have \\<open>\\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle> \\<^bold>\\<longrightarrow> S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> S\n  (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) #\n  S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n     []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                 S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>", "by simp"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n   []/0\\<rangle> \\<^bold>\\<longrightarrow>\n               S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n   []/0\\<rangle> \\<^bold>\\<longrightarrow>\n               S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "have \\<open>a \\<notin> params_fm p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> params_fm p", "using assms(2-3)"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n  a \\<notin> params S\n\ngoal (1 subgoal):\n 1. a \\<notin> params_fm p", "by auto"], ["proof (state)\nthis:\n  a \\<notin> params_fm p\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  a \\<notin> params_fm p\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "have \\<open>\\<forall>p \\<in> set S'. a \\<notin> params_fm p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>set S'. a \\<notin> params_fm p", "using \\<open>set S' \\<subseteq> S\\<close> assms(3)"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> S\n  a \\<notin> params S\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>set S'. a \\<notin> params_fm p", "by auto"], ["proof (state)\nthis:\n  \\<forall>p\\<in>set S'. a \\<notin> params_fm p\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>p\\<in>set S'. a \\<notin> params_fm p", "have \\<open>a \\<notin> params_fm (S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>set S'. a \\<notin> params_fm p\n\ngoal (1 subgoal):\n 1. a \\<notin> params_fm (S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>)", "by (simp add: imply_params_fm)"], ["proof (state)\nthis:\n  a \\<notin> params_fm (S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n   []/0\\<rangle> \\<^bold>\\<longrightarrow>\n               S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\n  a \\<notin> params_fm p\n  a \\<notin> params_fm (S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>)", "have \\<open>\\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow> S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n   []/0\\<rangle> \\<^bold>\\<longrightarrow>\n               S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\n  a \\<notin> params_fm p\n  a \\<notin> params_fm (S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n                                 p \\<^bold>\\<longrightarrow>\n                 S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>", "using GR'"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n   []/0\\<rangle> \\<^bold>\\<longrightarrow>\n               S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\n  a \\<notin> params_fm p\n  a \\<notin> params_fm (S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>)\n  \\<lbrakk>\\<turnstile> \\<^bold>\\<not> ?p\\<langle>\\<^bold>\\<dagger> ?a\n             []/0\\<rangle> \\<^bold>\\<longrightarrow>\n                        ?q;\n   ?a \\<notin> params {?p, ?q}\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n           ?p \\<^bold>\\<longrightarrow>\n                                 ?q\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall>\n                                 p \\<^bold>\\<longrightarrow>\n                 S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>", "by fast"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>", "have \\<open>(\\<^bold>\\<not> \\<^bold>\\<forall> p) # S' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<not> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               S' \\<^bold>\\<leadsto> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> \\<^bold>\\<forall> p) # S' \\<turnstile> \\<^bold>\\<bottom>", "by simp"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) # S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) # S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "have \\<open>set ((\\<^bold>\\<not> \\<^bold>\\<forall> p) # S') \\<subseteq> S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set ((\\<^bold>\\<not> \\<^bold>\\<forall> p) # S') \\<subseteq> S", "using \\<open>set S' \\<subseteq> S\\<close> assms(2)"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> S\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n\ngoal (1 subgoal):\n 1. set ((\\<^bold>\\<not> \\<^bold>\\<forall> p) # S') \\<subseteq> S", "by simp"], ["proof (state)\nthis:\n  set ((\\<^bold>\\<not> \\<^bold>\\<forall> p) # S') \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n        []/0\\<rangle>} \\<union>\n                   S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) # S' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> \\<^bold>\\<forall> p) # S') \\<subseteq> S", "show False"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) # S' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> \\<^bold>\\<forall> p) # S') \\<subseteq> S\n\ngoal (1 subgoal):\n 1. False", "using assms(1)"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) # S' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> \\<^bold>\\<forall> p) # S') \\<subseteq> S\n  consistent S\n\ngoal (1 subgoal):\n 1. False", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) # S' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> \\<^bold>\\<forall> p) # S') \\<subseteq> S\n  \\<nexists>S'.\n     set S' \\<subseteq> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma consistent_add_instance:\n  assumes \\<open>consistent S\\<close> and \\<open>\\<^bold>\\<forall> p \\<in> S\\<close>\n  shows \\<open>consistent ({p\\<langle>t/0\\<rangle>} \\<union> S)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent ({p\\<langle>t/0\\<rangle>} \\<union> S)", "unfolding consistent_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "assume \\<open>\\<exists>S'. set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\\<close>"], ["proof (state)\nthis:\n  \\<exists>S'.\n     set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>S'.\n     set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)", "obtain S' where \\<open>set S' \\<subseteq> S\\<close> and \\<open>p\\<langle>t/0\\<rangle> # S' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>S'.\n     set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p\\<langle>t/0\\<rangle> # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms inconsistent_fm"], ["proof (prove)\nusing this:\n  \\<exists>S'.\n     set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n  consistent S\n  \\<^bold>\\<forall> p \\<in> S\n  \\<lbrakk>consistent ?S; \\<not> consistent ({?p} \\<union> ?S);\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p\\<langle>t/0\\<rangle> # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<exists>S'.\n     set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n  \\<nexists>S'.\n     set S' \\<subseteq> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n  \\<^bold>\\<forall> p \\<in> S\n  \\<lbrakk>\\<nexists>S'.\n              set S' \\<subseteq> ?S \\<and>\n              (S' \\<turnstile> \\<^bold>\\<bottom>);\n   \\<not> (\\<nexists>S'.\n              set S' \\<subseteq> {?p} \\<union> ?S \\<and>\n              (S' \\<turnstile> \\<^bold>\\<bottom>));\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p\\<langle>t/0\\<rangle> # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  set S' \\<subseteq> S\n  p\\<langle>t/0\\<rangle> # S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  set S' \\<subseteq> S\n  p\\<langle>t/0\\<rangle> # S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "have \\<open>\\<turnstile> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow> p\\<langle>t/0\\<rangle>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n                 p\\<langle>t/0\\<rangle>", "using IA"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<^bold>\\<forall> ?p \\<^bold>\\<longrightarrow>\n               ?p\\<langle>?t/0\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n                 p\\<langle>t/0\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<turnstile> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               p\\<langle>t/0\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  set S' \\<subseteq> S\n  p\\<langle>t/0\\<rangle> # S' \\<turnstile> \\<^bold>\\<bottom>\n  \\<turnstile> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               p\\<langle>t/0\\<rangle>", "have \\<open>\\<^bold>\\<forall> p # S' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> S\n  p\\<langle>t/0\\<rangle> # S' \\<turnstile> \\<^bold>\\<bottom>\n  \\<turnstile> \\<^bold>\\<forall> p \\<^bold>\\<longrightarrow>\n               p\\<langle>t/0\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<forall> p # S' \\<turnstile> \\<^bold>\\<bottom>", "by (meson add_imply cut deduct(1))"], ["proof (state)\nthis:\n  \\<^bold>\\<forall> p # S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<^bold>\\<forall> p # S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "have \\<open>set ((\\<^bold>\\<forall> p) # S') \\<subseteq> S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (\\<^bold>\\<forall> p # S') \\<subseteq> S", "using \\<open>set S' \\<subseteq> S\\<close> assms(2)"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> S\n  \\<^bold>\\<forall> p \\<in> S\n\ngoal (1 subgoal):\n 1. set (\\<^bold>\\<forall> p # S') \\<subseteq> S", "by simp"], ["proof (state)\nthis:\n  set (\\<^bold>\\<forall> p # S') \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<exists>S'.\n       set S' \\<subseteq> {p\\<langle>t/0\\<rangle>} \\<union> S \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<^bold>\\<forall> p # S' \\<turnstile> \\<^bold>\\<bottom>\n  set (\\<^bold>\\<forall> p # S') \\<subseteq> S", "show False"], ["proof (prove)\nusing this:\n  \\<^bold>\\<forall> p # S' \\<turnstile> \\<^bold>\\<bottom>\n  set (\\<^bold>\\<forall> p # S') \\<subseteq> S\n\ngoal (1 subgoal):\n 1. False", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<^bold>\\<forall> p # S' \\<turnstile> \\<^bold>\\<bottom>\n  set (\\<^bold>\\<forall> p # S') \\<subseteq> S\n  consistent S\n\ngoal (1 subgoal):\n 1. False", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<^bold>\\<forall> p # S' \\<turnstile> \\<^bold>\\<bottom>\n  set (\\<^bold>\\<forall> p # S') \\<subseteq> S\n  \\<nexists>S'.\n     set S' \\<subseteq> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Extension\\<close>"], ["", "fun witness where\n  \\<open>witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) = {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>(SOME a. a \\<notin> used) []/0\\<rangle>}\\<close>\n| \\<open>witness _ _ = {}\\<close>"], ["", "primrec extend where\n  \\<open>extend S f 0 = S\\<close>\n| \\<open>extend S f (Suc n) =\n   (let Sn = extend S f n in\n     if consistent ({f n} \\<union> Sn)\n     then witness (params ({f n} \\<union> Sn)) (f n) \\<union> {f n} \\<union> Sn\n     else Sn)\\<close>"], ["", "definition \\<open>Extend S f \\<equiv> \\<Union>n. extend S f n\\<close>"], ["", "lemma Extend_subset: \\<open>S \\<subseteq> Extend S f\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> Extend S f", "unfolding Extend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> \\<Union> (range (extend S f))", "by (metis Union_upper extend.simps(1) range_eqI)"], ["", "lemma extend_bound: \\<open>(\\<Union>n \\<le> m. extend S f n) = extend S f m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (extend S f ` {..m}) = extend S f m", "by (induct m) (simp_all add: atMost_Suc Let_def)"], ["", "lemma finite_params_witness [simp]: \\<open>finite (params (witness used p))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (params (witness used p))", "by (induct used p rule: witness.induct) simp_all"], ["", "lemma finite_params_extend [simp]: \\<open>finite (params S) \\<Longrightarrow> finite (params (extend S f n))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (params S) \\<Longrightarrow> finite (params (extend S f n))", "by (induct n) (simp_all add: Let_def)"], ["", "lemma consistent_witness:\n  fixes p :: \\<open>('f, 'p) fm\\<close>\n  assumes \\<open>consistent S\\<close> and \\<open>p \\<in> S\\<close> and \\<open>params S \\<subseteq> used\\<close>\n    and \\<open>finite used\\<close> and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>consistent (witness used p \\<union> S)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent (witness used p \\<union> S)", "using assms"], ["proof (prove)\nusing this:\n  consistent S\n  p \\<in> S\n  params S \\<subseteq> used\n  finite used\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. consistent (witness used p \\<union> S)", "proof (induct used p rule: witness.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>used p.\n       \\<lbrakk>consistent S; (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S;\n        params S \\<subseteq> used; finite used; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness used\n                            (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union>\n                           S)\n 2. \\<And>uu_.\n       \\<lbrakk>consistent S; \\<^bold>\\<bottom> \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ \\<^bold>\\<bottom> \\<union> S)\n 3. \\<And>uu_ v va.\n       \\<lbrakk>consistent S; \\<^bold>\\<ddagger> v va \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ (\\<^bold>\\<ddagger> v va) \\<union> S)\n 4. \\<And>uu_ va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 5. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<ddagger> vb vc \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<ddagger> vb\n                              vc \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 6. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        ((vb \\<^bold>\\<longrightarrow> vc) \\<^bold>\\<longrightarrow> va)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            ((vb \\<^bold>\\<longrightarrow>\n                              vc) \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 7. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<ddagger> vb vc) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<ddagger> vb vc) \\<union>\n                           S)\n 8. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> vb \\<^bold>\\<longrightarrow> vc)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             vb \\<^bold>\\<longrightarrow> vc) \\<union>\n                           S)\n 9. \\<And>uu_ v vb.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> vb) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<forall> vb) \\<union>\n                           S)\n 10. \\<And>uu_ v.\n        \\<lbrakk>consistent S; \\<^bold>\\<forall> v \\<in> S;\n         params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n        \\<Longrightarrow> consistent\n                           (witness uu_ (\\<^bold>\\<forall> v) \\<union> S)", "case (1 used p)"], ["proof (state)\nthis:\n  consistent S\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n  params S \\<subseteq> used\n  finite used\n  infinite UNIV\n\ngoal (10 subgoals):\n 1. \\<And>used p.\n       \\<lbrakk>consistent S; (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S;\n        params S \\<subseteq> used; finite used; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness used\n                            (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union>\n                           S)\n 2. \\<And>uu_.\n       \\<lbrakk>consistent S; \\<^bold>\\<bottom> \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ \\<^bold>\\<bottom> \\<union> S)\n 3. \\<And>uu_ v va.\n       \\<lbrakk>consistent S; \\<^bold>\\<ddagger> v va \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ (\\<^bold>\\<ddagger> v va) \\<union> S)\n 4. \\<And>uu_ va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 5. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<ddagger> vb vc \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<ddagger> vb\n                              vc \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 6. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        ((vb \\<^bold>\\<longrightarrow> vc) \\<^bold>\\<longrightarrow> va)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            ((vb \\<^bold>\\<longrightarrow>\n                              vc) \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 7. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<ddagger> vb vc) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<ddagger> vb vc) \\<union>\n                           S)\n 8. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> vb \\<^bold>\\<longrightarrow> vc)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             vb \\<^bold>\\<longrightarrow> vc) \\<union>\n                           S)\n 9. \\<And>uu_ v vb.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> vb) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<forall> vb) \\<union>\n                           S)\n 10. \\<And>uu_ v.\n        \\<lbrakk>consistent S; \\<^bold>\\<forall> v \\<in> S;\n         params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n        \\<Longrightarrow> consistent\n                           (witness uu_ (\\<^bold>\\<forall> v) \\<union> S)", "moreover"], ["proof (state)\nthis:\n  consistent S\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n  params S \\<subseteq> used\n  finite used\n  infinite UNIV\n\ngoal (10 subgoals):\n 1. \\<And>used p.\n       \\<lbrakk>consistent S; (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S;\n        params S \\<subseteq> used; finite used; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness used\n                            (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union>\n                           S)\n 2. \\<And>uu_.\n       \\<lbrakk>consistent S; \\<^bold>\\<bottom> \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ \\<^bold>\\<bottom> \\<union> S)\n 3. \\<And>uu_ v va.\n       \\<lbrakk>consistent S; \\<^bold>\\<ddagger> v va \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ (\\<^bold>\\<ddagger> v va) \\<union> S)\n 4. \\<And>uu_ va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 5. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<ddagger> vb vc \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<ddagger> vb\n                              vc \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 6. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        ((vb \\<^bold>\\<longrightarrow> vc) \\<^bold>\\<longrightarrow> va)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            ((vb \\<^bold>\\<longrightarrow>\n                              vc) \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 7. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<ddagger> vb vc) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<ddagger> vb vc) \\<union>\n                           S)\n 8. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> vb \\<^bold>\\<longrightarrow> vc)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             vb \\<^bold>\\<longrightarrow> vc) \\<union>\n                           S)\n 9. \\<And>uu_ v vb.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> vb) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<forall> vb) \\<union>\n                           S)\n 10. \\<And>uu_ v.\n        \\<lbrakk>consistent S; \\<^bold>\\<forall> v \\<in> S;\n         params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n        \\<Longrightarrow> consistent\n                           (witness uu_ (\\<^bold>\\<forall> v) \\<union> S)", "have \\<open>\\<exists>a. a \\<notin> used\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<notin> used", "using 1(4-) ex_new_if_finite"], ["proof (prove)\nusing this:\n  finite used\n  infinite UNIV\n  \\<lbrakk>infinite UNIV; finite ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. a \\<notin> ?A\n\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<notin> used", "by blast"], ["proof (state)\nthis:\n  \\<exists>a. a \\<notin> used\n\ngoal (10 subgoals):\n 1. \\<And>used p.\n       \\<lbrakk>consistent S; (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S;\n        params S \\<subseteq> used; finite used; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness used\n                            (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union>\n                           S)\n 2. \\<And>uu_.\n       \\<lbrakk>consistent S; \\<^bold>\\<bottom> \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ \\<^bold>\\<bottom> \\<union> S)\n 3. \\<And>uu_ v va.\n       \\<lbrakk>consistent S; \\<^bold>\\<ddagger> v va \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ (\\<^bold>\\<ddagger> v va) \\<union> S)\n 4. \\<And>uu_ va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 5. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<ddagger> vb vc \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<ddagger> vb\n                              vc \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 6. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        ((vb \\<^bold>\\<longrightarrow> vc) \\<^bold>\\<longrightarrow> va)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            ((vb \\<^bold>\\<longrightarrow>\n                              vc) \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 7. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<ddagger> vb vc) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<ddagger> vb vc) \\<union>\n                           S)\n 8. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> vb \\<^bold>\\<longrightarrow> vc)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             vb \\<^bold>\\<longrightarrow> vc) \\<union>\n                           S)\n 9. \\<And>uu_ v vb.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> vb) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<forall> vb) \\<union>\n                           S)\n 10. \\<And>uu_ v.\n        \\<lbrakk>consistent S; \\<^bold>\\<forall> v \\<in> S;\n         params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n        \\<Longrightarrow> consistent\n                           (witness uu_ (\\<^bold>\\<forall> v) \\<union> S)", "ultimately"], ["proof (chain)\npicking this:\n  consistent S\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n  params S \\<subseteq> used\n  finite used\n  infinite UNIV\n  \\<exists>a. a \\<notin> used", "obtain a where a: \\<open>witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) = {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>}\\<close> and \\<open>a \\<notin> used\\<close>"], ["proof (prove)\nusing this:\n  consistent S\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n  params S \\<subseteq> used\n  finite used\n  infinite UNIV\n  \\<exists>a. a \\<notin> used\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) =\n                 {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n      []/0\\<rangle>};\n         a \\<notin> used\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis someI_ex witness.simps(1))"], ["proof (state)\nthis:\n  witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) =\n  {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>}\n  a \\<notin> used\n\ngoal (10 subgoals):\n 1. \\<And>used p.\n       \\<lbrakk>consistent S; (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S;\n        params S \\<subseteq> used; finite used; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness used\n                            (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union>\n                           S)\n 2. \\<And>uu_.\n       \\<lbrakk>consistent S; \\<^bold>\\<bottom> \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ \\<^bold>\\<bottom> \\<union> S)\n 3. \\<And>uu_ v va.\n       \\<lbrakk>consistent S; \\<^bold>\\<ddagger> v va \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ (\\<^bold>\\<ddagger> v va) \\<union> S)\n 4. \\<And>uu_ va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 5. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<ddagger> vb vc \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<ddagger> vb\n                              vc \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 6. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        ((vb \\<^bold>\\<longrightarrow> vc) \\<^bold>\\<longrightarrow> va)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            ((vb \\<^bold>\\<longrightarrow>\n                              vc) \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 7. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<ddagger> vb vc) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<ddagger> vb vc) \\<union>\n                           S)\n 8. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> vb \\<^bold>\\<longrightarrow> vc)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             vb \\<^bold>\\<longrightarrow> vc) \\<union>\n                           S)\n 9. \\<And>uu_ v vb.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> vb) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<forall> vb) \\<union>\n                           S)\n 10. \\<And>uu_ v.\n        \\<lbrakk>consistent S; \\<^bold>\\<forall> v \\<in> S;\n         params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n        \\<Longrightarrow> consistent\n                           (witness uu_ (\\<^bold>\\<forall> v) \\<union> S)", "then"], ["proof (chain)\npicking this:\n  witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) =\n  {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>}\n  a \\<notin> used", "have \\<open>a \\<notin> params S\\<close>"], ["proof (prove)\nusing this:\n  witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) =\n  {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>}\n  a \\<notin> used\n\ngoal (1 subgoal):\n 1. a \\<notin> params S", "using 1(3)"], ["proof (prove)\nusing this:\n  witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) =\n  {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>}\n  a \\<notin> used\n  params S \\<subseteq> used\n\ngoal (1 subgoal):\n 1. a \\<notin> params S", "by fast"], ["proof (state)\nthis:\n  a \\<notin> params S\n\ngoal (10 subgoals):\n 1. \\<And>used p.\n       \\<lbrakk>consistent S; (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S;\n        params S \\<subseteq> used; finite used; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness used\n                            (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union>\n                           S)\n 2. \\<And>uu_.\n       \\<lbrakk>consistent S; \\<^bold>\\<bottom> \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ \\<^bold>\\<bottom> \\<union> S)\n 3. \\<And>uu_ v va.\n       \\<lbrakk>consistent S; \\<^bold>\\<ddagger> v va \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ (\\<^bold>\\<ddagger> v va) \\<union> S)\n 4. \\<And>uu_ va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 5. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<ddagger> vb vc \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<ddagger> vb\n                              vc \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 6. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        ((vb \\<^bold>\\<longrightarrow> vc) \\<^bold>\\<longrightarrow> va)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            ((vb \\<^bold>\\<longrightarrow>\n                              vc) \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 7. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<ddagger> vb vc) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<ddagger> vb vc) \\<union>\n                           S)\n 8. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> vb \\<^bold>\\<longrightarrow> vc)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             vb \\<^bold>\\<longrightarrow> vc) \\<union>\n                           S)\n 9. \\<And>uu_ v vb.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> vb) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<forall> vb) \\<union>\n                           S)\n 10. \\<And>uu_ v.\n        \\<lbrakk>consistent S; \\<^bold>\\<forall> v \\<in> S;\n         params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n        \\<Longrightarrow> consistent\n                           (witness uu_ (\\<^bold>\\<forall> v) \\<union> S)", "then"], ["proof (chain)\npicking this:\n  a \\<notin> params S", "show ?case"], ["proof (prove)\nusing this:\n  a \\<notin> params S\n\ngoal (1 subgoal):\n 1. consistent\n     (witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union> S)", "using 1(1-2) a(1) consistent_add_witness"], ["proof (prove)\nusing this:\n  a \\<notin> params S\n  consistent S\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S\n  witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) =\n  {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>}\n  \\<lbrakk>consistent ?S; (\\<^bold>\\<not> \\<^bold>\\<forall> ?p) \\<in> ?S;\n   ?a \\<notin> params ?S\\<rbrakk>\n  \\<Longrightarrow> consistent\n                     ({\\<^bold>\\<not> ?p\\<langle>\\<^bold>\\<dagger> ?a\n            []/0\\<rangle>} \\<union>\n                      ?S)\n\ngoal (1 subgoal):\n 1. consistent\n     (witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union> S)", "by metis"], ["proof (state)\nthis:\n  consistent (witness used (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<union> S)\n\ngoal (9 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>consistent S; \\<^bold>\\<bottom> \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ \\<^bold>\\<bottom> \\<union> S)\n 2. \\<And>uu_ v va.\n       \\<lbrakk>consistent S; \\<^bold>\\<ddagger> v va \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ (\\<^bold>\\<ddagger> v va) \\<union> S)\n 3. \\<And>uu_ va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<bottom> \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 4. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        (\\<^bold>\\<ddagger> vb vc \\<^bold>\\<longrightarrow> va) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (\\<^bold>\\<ddagger> vb\n                              vc \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 5. \\<And>uu_ vb vc va.\n       \\<lbrakk>consistent S;\n        ((vb \\<^bold>\\<longrightarrow> vc) \\<^bold>\\<longrightarrow> va)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            ((vb \\<^bold>\\<longrightarrow>\n                              vc) \\<^bold>\\<longrightarrow>\n                             va) \\<union>\n                           S)\n 6. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<ddagger> vb vc) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<ddagger> vb vc) \\<union>\n                           S)\n 7. \\<And>uu_ v vb vc.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> vb \\<^bold>\\<longrightarrow> vc)\n        \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             vb \\<^bold>\\<longrightarrow> vc) \\<union>\n                           S)\n 8. \\<And>uu_ v vb.\n       \\<lbrakk>consistent S;\n        (v \\<^bold>\\<longrightarrow> \\<^bold>\\<forall> vb) \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_\n                            (v \\<^bold>\\<longrightarrow>\n                             \\<^bold>\\<forall> vb) \\<union>\n                           S)\n 9. \\<And>uu_ v.\n       \\<lbrakk>consistent S; \\<^bold>\\<forall> v \\<in> S;\n        params S \\<subseteq> uu_; finite uu_; infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent\n                          (witness uu_ (\\<^bold>\\<forall> v) \\<union> S)", "qed (auto simp: assms)"], ["", "lemma consistent_extend:\n  fixes f :: \\<open>nat \\<Rightarrow> ('f, 'p) fm\\<close>\n  assumes \\<open>consistent S\\<close> and \\<open>finite (params S)\\<close>\n    and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>consistent (extend S f n)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent (extend S f n)", "using assms"], ["proof (prove)\nusing this:\n  consistent S\n  finite (params S)\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. consistent (extend S f n)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>consistent S; finite (params S); infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> consistent (extend S f 0)\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>consistent S; finite (params S);\n                 infinite UNIV\\<rbrakk>\n                \\<Longrightarrow> consistent (extend S f n);\n        consistent S; finite (params S); infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent (extend S f (Suc n))", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>consistent S; finite (params S); infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> consistent (extend S f n)\n  consistent S\n  finite (params S)\n  infinite UNIV\n\ngoal (2 subgoals):\n 1. \\<lbrakk>consistent S; finite (params S); infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> consistent (extend S f 0)\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>consistent S; finite (params S);\n                 infinite UNIV\\<rbrakk>\n                \\<Longrightarrow> consistent (extend S f n);\n        consistent S; finite (params S); infinite UNIV\\<rbrakk>\n       \\<Longrightarrow> consistent (extend S f (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>consistent S; finite (params S); infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> consistent (extend S f n)\n  consistent S\n  finite (params S)\n  infinite UNIV", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>consistent S; finite (params S); infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> consistent (extend S f n)\n  consistent S\n  finite (params S)\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. consistent (extend S f (Suc n))", "using consistent_witness[where S=\\<open>{f n} \\<union> _\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>consistent S; finite (params S); infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> consistent (extend S f n)\n  consistent S\n  finite (params S)\n  infinite UNIV\n  \\<lbrakk>consistent ({f n} \\<union> ?uu4); ?p \\<in> {f n} \\<union> ?uu4;\n   params ({f n} \\<union> ?uu4) \\<subseteq> ?used; finite ?used;\n   infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> consistent\n                     (witness ?used ?p \\<union> ({f n} \\<union> ?uu4))\n\ngoal (1 subgoal):\n 1. consistent (extend S f (Suc n))", "by (auto simp: Let_def)"], ["proof (state)\nthis:\n  consistent (extend S f (Suc n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>consistent S; finite (params S); infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> consistent (extend S f 0)", "qed simp"], ["", "lemma consistent_Extend:\n  fixes f :: \\<open>nat \\<Rightarrow> ('f, 'p) fm\\<close>\n  assumes \\<open>consistent S\\<close> and \\<open>finite (params S)\\<close>\n    and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>consistent (Extend S f)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent (Extend S f)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> consistent (Extend S f) \\<Longrightarrow> False", "assume \\<open>\\<not> consistent (Extend S f)\\<close>"], ["proof (state)\nthis:\n  \\<not> consistent (Extend S f)\n\ngoal (1 subgoal):\n 1. \\<not> consistent (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> consistent (Extend S f)", "obtain S' where \\<open>S' \\<turnstile> \\<^bold>\\<bottom>\\<close> and \\<open>set S' \\<subseteq> Extend S f\\<close>"], ["proof (prove)\nusing this:\n  \\<not> consistent (Extend S f)\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>S' \\<turnstile> \\<^bold>\\<bottom>;\n         set S' \\<subseteq> Extend S f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<nexists>S'.\n             set S' \\<subseteq> Extend S f \\<and>\n             (S' \\<turnstile> \\<^bold>\\<bottom>))\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>S' \\<turnstile> \\<^bold>\\<bottom>;\n         set S' \\<subseteq> Extend S f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  S' \\<turnstile> \\<^bold>\\<bottom>\n  set S' \\<subseteq> Extend S f\n\ngoal (1 subgoal):\n 1. \\<not> consistent (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  S' \\<turnstile> \\<^bold>\\<bottom>\n  set S' \\<subseteq> Extend S f", "obtain m where \\<open>set S' \\<subseteq> (\\<Union>n \\<le> m. extend S f n)\\<close>"], ["proof (prove)\nusing this:\n  S' \\<turnstile> \\<^bold>\\<bottom>\n  set S' \\<subseteq> Extend S f\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        set S' \\<subseteq> \\<Union> (extend S f ` {..m}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding Extend_def"], ["proof (prove)\nusing this:\n  S' \\<turnstile> \\<^bold>\\<bottom>\n  set S' \\<subseteq> \\<Union> (range (extend S f))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        set S' \\<subseteq> \\<Union> (extend S f ` {..m}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using UN_finite_bound"], ["proof (prove)\nusing this:\n  S' \\<turnstile> \\<^bold>\\<bottom>\n  set S' \\<subseteq> \\<Union> (range (extend S f))\n  \\<lbrakk>finite ?A; ?A \\<subseteq> \\<Union> (range ?f)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>m. ?A \\<subseteq> \\<Union> (?f ` {..m})\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        set S' \\<subseteq> \\<Union> (extend S f ` {..m}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis List.finite_set)"], ["proof (state)\nthis:\n  set S' \\<subseteq> \\<Union> (extend S f ` {..m})\n\ngoal (1 subgoal):\n 1. \\<not> consistent (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  set S' \\<subseteq> \\<Union> (extend S f ` {..m})", "have \\<open>set S' \\<subseteq> extend S f m\\<close>"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> \\<Union> (extend S f ` {..m})\n\ngoal (1 subgoal):\n 1. set S' \\<subseteq> extend S f m", "using extend_bound"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> \\<Union> (extend S f ` {..m})\n  \\<Union> (extend ?S ?f ` {..?m}) = extend ?S ?f ?m\n\ngoal (1 subgoal):\n 1. set S' \\<subseteq> extend S f m", "by blast"], ["proof (state)\nthis:\n  set S' \\<subseteq> extend S f m\n\ngoal (1 subgoal):\n 1. \\<not> consistent (Extend S f) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  set S' \\<subseteq> extend S f m\n\ngoal (1 subgoal):\n 1. \\<not> consistent (Extend S f) \\<Longrightarrow> False", "have \\<open>consistent (extend S f m)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent (extend S f m)", "using assms consistent_extend"], ["proof (prove)\nusing this:\n  consistent S\n  finite (params S)\n  infinite UNIV\n  \\<lbrakk>consistent ?S; finite (params ?S); infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> consistent (extend ?S ?f ?n)\n\ngoal (1 subgoal):\n 1. consistent (extend S f m)", "by blast"], ["proof (state)\nthis:\n  consistent (extend S f m)\n\ngoal (1 subgoal):\n 1. \\<not> consistent (Extend S f) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  set S' \\<subseteq> extend S f m\n  consistent (extend S f m)", "show False"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> extend S f m\n  consistent (extend S f m)\n\ngoal (1 subgoal):\n 1. False", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> extend S f m\n  \\<nexists>S'.\n     set S' \\<subseteq> extend S f m \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>S' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  set S' \\<subseteq> extend S f m\n  \\<nexists>S'.\n     set S' \\<subseteq> extend S f m \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n  S' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Maximal\\<close>"], ["", "definition \\<open>maximal S \\<equiv> \\<forall>p. p \\<notin> S \\<longrightarrow> \\<not> consistent ({p} \\<union> S)\\<close>"], ["", "lemma maximal_Extend:\n  assumes \\<open>surj f\\<close>\n  shows \\<open>maximal (Extend S f)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. maximal (Extend S f)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "assume \\<open>\\<not> maximal (Extend S f)\\<close>"], ["proof (state)\nthis:\n  \\<not> maximal (Extend S f)\n\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> maximal (Extend S f)", "obtain p where\n    \\<open>p \\<notin> Extend S f\\<close> and \\<open>consistent ({p} \\<union> Extend S f)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> maximal (Extend S f)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<notin> Extend S f;\n         consistent ({p} \\<union> Extend S f)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding maximal_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>p.\n             p \\<notin> Extend S f \\<longrightarrow>\n             \\<not> consistent ({p} \\<union> Extend S f))\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<notin> Extend S f;\n         consistent ({p} \\<union> Extend S f)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms consistent_Extend"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>p.\n             p \\<notin> Extend S f \\<longrightarrow>\n             \\<not> consistent ({p} \\<union> Extend S f))\n  surj f\n  \\<lbrakk>consistent ?S; finite (params ?S); infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> consistent (Extend ?S ?f)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<notin> Extend S f;\n         consistent ({p} \\<union> Extend S f)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p \\<notin> Extend S f\n  consistent ({p} \\<union> Extend S f)\n\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "obtain k where k: \\<open>f k = p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. f k = p \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using \\<open>surj f\\<close>"], ["proof (prove)\nusing this:\n  surj f\n\ngoal (1 subgoal):\n 1. (\\<And>k. f k = p \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding surj_def"], ["proof (prove)\nusing this:\n  \\<forall>y. \\<exists>x. y = f x\n\ngoal (1 subgoal):\n 1. (\\<And>k. f k = p \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  f k = p\n\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f k = p", "have \\<open>p \\<notin> extend S f (Suc k)\\<close>"], ["proof (prove)\nusing this:\n  f k = p\n\ngoal (1 subgoal):\n 1. p \\<notin> extend S f (Suc k)", "using \\<open>p \\<notin> Extend S f\\<close>"], ["proof (prove)\nusing this:\n  f k = p\n  p \\<notin> Extend S f\n\ngoal (1 subgoal):\n 1. p \\<notin> extend S f (Suc k)", "unfolding Extend_def"], ["proof (prove)\nusing this:\n  f k = p\n  p \\<notin> \\<Union> (range (extend S f))\n\ngoal (1 subgoal):\n 1. p \\<notin> extend S f (Suc k)", "by blast"], ["proof (state)\nthis:\n  p \\<notin> extend S f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p \\<notin> extend S f (Suc k)", "have \\<open>\\<not> consistent ({p} \\<union> extend S f k)\\<close>"], ["proof (prove)\nusing this:\n  p \\<notin> extend S f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> consistent ({p} \\<union> extend S f k)", "using k"], ["proof (prove)\nusing this:\n  p \\<notin> extend S f (Suc k)\n  f k = p\n\ngoal (1 subgoal):\n 1. \\<not> consistent ({p} \\<union> extend S f k)", "by (auto simp: Let_def)"], ["proof (state)\nthis:\n  \\<not> consistent ({p} \\<union> extend S f k)\n\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> consistent ({p} \\<union> extend S f k)\n\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "have \\<open>{p} \\<union> extend S f k \\<subseteq> {p} \\<union> Extend S f\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. {p} \\<union> extend S f k \\<subseteq> {p} \\<union> Extend S f", "unfolding Extend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {p} \\<union> extend S f k\n    \\<subseteq> {p} \\<union> \\<Union> (range (extend S f))", "by blast"], ["proof (state)\nthis:\n  {p} \\<union> extend S f k \\<subseteq> {p} \\<union> Extend S f\n\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> consistent ({p} \\<union> extend S f k)\n  {p} \\<union> extend S f k \\<subseteq> {p} \\<union> Extend S f", "have \\<open>\\<not> consistent ({p} \\<union> Extend S f)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> consistent ({p} \\<union> extend S f k)\n  {p} \\<union> extend S f k \\<subseteq> {p} \\<union> Extend S f\n\ngoal (1 subgoal):\n 1. \\<not> consistent ({p} \\<union> Extend S f)", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<nexists>S'.\n             set S' \\<subseteq> {p} \\<union> extend S f k \\<and>\n             (S' \\<turnstile> \\<^bold>\\<bottom>))\n  {p} \\<union> extend S f k \\<subseteq> {p} \\<union> Extend S f\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>S'.\n               set S' \\<subseteq> {p} \\<union> Extend S f \\<and>\n               (S' \\<turnstile> \\<^bold>\\<bottom>))", "by auto"], ["proof (state)\nthis:\n  \\<not> consistent ({p} \\<union> Extend S f)\n\ngoal (1 subgoal):\n 1. \\<not> maximal (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> consistent ({p} \\<union> Extend S f)", "show False"], ["proof (prove)\nusing this:\n  \\<not> consistent ({p} \\<union> Extend S f)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>consistent ({p} \\<union> Extend S f)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> consistent ({p} \\<union> Extend S f)\n  consistent ({p} \\<union> Extend S f)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Saturation\\<close>"], ["", "definition \\<open>saturated S \\<equiv> \\<forall>p. (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> S \\<longrightarrow> (\\<exists>a. (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>) \\<in> S)\\<close>"], ["", "lemma saturated_Extend:\n  assumes \\<open>consistent (Extend S f)\\<close> and \\<open>surj f\\<close>\n  shows \\<open>saturated (Extend S f)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. saturated (Extend S f)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "assume \\<open>\\<not> saturated (Extend S f)\\<close>"], ["proof (state)\nthis:\n  \\<not> saturated (Extend S f)\n\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> saturated (Extend S f)", "obtain p where p: \\<open>(\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> Extend S f\\<close> \\<open>\\<nexists>a. (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>) \\<in> Extend S f\\<close>"], ["proof (prove)\nusing this:\n  \\<not> saturated (Extend S f)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> Extend S f;\n         \\<nexists>a.\n            (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n            \\<in> Extend S f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding saturated_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>p.\n             (\\<^bold>\\<not> \\<^bold>\\<forall> p)\n             \\<in> Extend S f \\<longrightarrow>\n             (\\<exists>a.\n                 (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a\n      []/0\\<rangle>)\n                 \\<in> Extend S f))\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> Extend S f;\n         \\<nexists>a.\n            (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n            \\<in> Extend S f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> Extend S f\n  \\<nexists>a.\n     (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n     \\<in> Extend S f\n\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "obtain k where k: \\<open>f k = (\\<^bold>\\<not> \\<^bold>\\<forall> p)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f k = (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>surj f\\<close>"], ["proof (prove)\nusing this:\n  surj f\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f k = (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding surj_def"], ["proof (prove)\nusing this:\n  \\<forall>y. \\<exists>x. y = f x\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f k = (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  f k = (\\<^bold>\\<not> \\<^bold>\\<forall> p)\n\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "have \\<open>extend S f k \\<subseteq> Extend S f\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. extend S f k \\<subseteq> Extend S f", "unfolding Extend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. extend S f k \\<subseteq> \\<Union> (range (extend S f))", "by auto"], ["proof (state)\nthis:\n  extend S f k \\<subseteq> Extend S f\n\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  extend S f k \\<subseteq> Extend S f", "have \\<open>consistent ({\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union> extend S f k)\\<close>"], ["proof (prove)\nusing this:\n  extend S f k \\<subseteq> Extend S f\n\ngoal (1 subgoal):\n 1. consistent ({\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union> extend S f k)", "using assms(1) p(1)"], ["proof (prove)\nusing this:\n  extend S f k \\<subseteq> Extend S f\n  consistent (Extend S f)\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> Extend S f\n\ngoal (1 subgoal):\n 1. consistent ({\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union> extend S f k)", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  extend S f k \\<subseteq> Extend S f\n  \\<nexists>S'.\n     set S' \\<subseteq> Extend S f \\<and>\n     (S' \\<turnstile> \\<^bold>\\<bottom>)\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> Extend S f\n\ngoal (1 subgoal):\n 1. \\<nexists>S'.\n       set S'\n       \\<subseteq> {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union>\n                   extend S f k \\<and>\n       (S' \\<turnstile> \\<^bold>\\<bottom>)", "by blast"], ["proof (state)\nthis:\n  consistent ({\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union> extend S f k)\n\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  consistent ({\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union> extend S f k)", "have \\<open>\\<exists>a. extend S f (Suc k) = {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>} \\<union> {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union> extend S f k\\<close>"], ["proof (prove)\nusing this:\n  consistent ({\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union> extend S f k)\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       extend S f (Suc k) =\n       {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>} \\<union>\n       {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union>\n       extend S f k", "using k"], ["proof (prove)\nusing this:\n  consistent ({\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union> extend S f k)\n  f k = (\\<^bold>\\<not> \\<^bold>\\<forall> p)\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       extend S f (Suc k) =\n       {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>} \\<union>\n       {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union>\n       extend S f k", "by (auto simp: Let_def)"], ["proof (state)\nthis:\n  \\<exists>a.\n     extend S f (Suc k) =\n     {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>} \\<union>\n     {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union>\n     extend S f k\n\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<exists>a.\n     extend S f (Suc k) =\n     {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>} \\<union>\n     {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union>\n     extend S f k\n\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "have \\<open>extend S f (Suc k) \\<subseteq> Extend S f\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. extend S f (Suc k) \\<subseteq> Extend S f", "unfolding Extend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. extend S f (Suc k) \\<subseteq> \\<Union> (range (extend S f))", "by blast"], ["proof (state)\nthis:\n  extend S f (Suc k) \\<subseteq> Extend S f\n\ngoal (1 subgoal):\n 1. \\<not> saturated (Extend S f) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>a.\n     extend S f (Suc k) =\n     {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>} \\<union>\n     {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union>\n     extend S f k\n  extend S f (Suc k) \\<subseteq> Extend S f", "show False"], ["proof (prove)\nusing this:\n  \\<exists>a.\n     extend S f (Suc k) =\n     {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>} \\<union>\n     {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union>\n     extend S f k\n  extend S f (Suc k) \\<subseteq> Extend S f\n\ngoal (1 subgoal):\n 1. False", "using p(2)"], ["proof (prove)\nusing this:\n  \\<exists>a.\n     extend S f (Suc k) =\n     {\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>} \\<union>\n     {\\<^bold>\\<not> \\<^bold>\\<forall> p} \\<union>\n     extend S f k\n  extend S f (Suc k) \\<subseteq> Extend S f\n  \\<nexists>a.\n     (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n     \\<in> Extend S f\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Hintikka\\<close>"], ["", "locale Hintikka =\n  fixes H :: \\<open>('f, 'p) fm set\\<close>\n  assumes\n    NoFalsity: \\<open>\\<^bold>\\<bottom> \\<notin> H\\<close> and\n    Basic: \\<open>\\<^bold>\\<ddagger>P ts \\<in> H \\<Longrightarrow> (\\<^bold>\\<not> \\<^bold>\\<ddagger>P ts) \\<notin> H\\<close> and\n    ImpP: \\<open>(p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow> (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\\<close> and\n    ImpN: \\<open>(\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H \\<Longrightarrow> p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\\<close> and\n    UniP: \\<open>\\<^bold>\\<forall> p \\<in> H \\<Longrightarrow> \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\\<close> and\n    UniN: \\<open>(\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow> \\<exists>a. (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>) \\<in> H\\<close>"], ["", "subsection \\<open>Model Existence\\<close>"], ["", "abbreviation (input) \\<open>sat H P ts \\<equiv> Pre P ts \\<in> H\\<close>"], ["", "abbreviation hmodel (\\<open>\\<lbrakk>_\\<rbrakk>\\<close>) where \\<open>\\<lbrakk>H\\<rbrakk> \\<equiv> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, sat H\\<rbrakk>\\<close>"], ["", "lemma semantics_tm_id [simp]:\n  \\<open>\\<lparr>\\<^bold>#, \\<^bold>\\<dagger>\\<rparr> t = t\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>\\<^bold>#, \\<^bold>\\<dagger>\\<rparr> t = t", "by (induct t) (auto cong: map_cong)"], ["", "lemma semantics_tm_id_map [simp]: \\<open>map \\<lparr>\\<^bold>#, \\<^bold>\\<dagger>\\<rparr> ts = ts\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. map \\<lparr>\\<^bold>#, \\<^bold>\\<dagger>\\<rparr> ts = ts", "by (auto cong: map_cong)"], ["", "theorem Hintikka_model:\n  assumes \\<open>Hintikka H\\<close>\n  shows \\<open>(p \\<in> H \\<longrightarrow> \\<lbrakk>H\\<rbrakk> p) \\<and> ((\\<^bold>\\<not> p) \\<in> H \\<longrightarrow> \\<not> \\<lbrakk>H\\<rbrakk> p)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<in> H \\<longrightarrow>\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n      p) \\<and>\n    ((\\<^bold>\\<not> p) \\<in> H \\<longrightarrow>\n     \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n             p)", "proof (induct p rule: wf_induct[where r=\\<open>measure size_fm\\<close>])"], ["proof (state)\ngoal (2 subgoals):\n 1. wf (measure FOL_Axiomatic.size_fm)\n 2. \\<And>x.\n       \\<forall>y.\n          (y, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n          (y \\<in> H \\<longrightarrow>\n           \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            y) \\<and>\n          ((\\<^bold>\\<not> y) \\<in> H \\<longrightarrow>\n           \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                   y) \\<Longrightarrow>\n       (x \\<in> H \\<longrightarrow>\n        \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n            \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n         x) \\<and>\n       ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow>\n        \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                   \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                x)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. wf (measure FOL_Axiomatic.size_fm)\n 2. \\<And>x.\n       \\<forall>y.\n          (y, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n          (y \\<in> H \\<longrightarrow>\n           \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            y) \\<and>\n          ((\\<^bold>\\<not> y) \\<in> H \\<longrightarrow>\n           \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                   y) \\<Longrightarrow>\n       (x \\<in> H \\<longrightarrow>\n        \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n            \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n         x) \\<and>\n       ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow>\n        \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                   \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                x)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (measure FOL_Axiomatic.size_fm)", ".."], ["proof (state)\nthis:\n  wf (measure FOL_Axiomatic.size_fm)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y.\n          (y, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n          (y \\<in> H \\<longrightarrow>\n           \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            y) \\<and>\n          ((\\<^bold>\\<not> y) \\<in> H \\<longrightarrow>\n           \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                   y) \\<Longrightarrow>\n       (x \\<in> H \\<longrightarrow>\n        \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n            \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n         x) \\<and>\n       ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow>\n        \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                   \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y.\n          (y, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n          (y \\<in> H \\<longrightarrow>\n           \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            y) \\<and>\n          ((\\<^bold>\\<not> y) \\<in> H \\<longrightarrow>\n           \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                   y) \\<Longrightarrow>\n       (x \\<in> H \\<longrightarrow>\n        \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n            \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n         x) \\<and>\n       ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow>\n        \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                   \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y.\n          (y, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n          (y \\<in> H \\<longrightarrow>\n           \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            y) \\<and>\n          ((\\<^bold>\\<not> y) \\<in> H \\<longrightarrow>\n           \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                   y) \\<Longrightarrow>\n       (x \\<in> H \\<longrightarrow>\n        \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n            \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n         x) \\<and>\n       ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow>\n        \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                   \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                x)", "assume ih: \\<open>\\<forall>q. (q, x) \\<in> measure size_fm \\<longrightarrow> (q \\<in> H \\<longrightarrow> \\<lbrakk>H\\<rbrakk> q) \\<and> ((\\<^bold>\\<not> q) \\<in> H \\<longrightarrow> \\<not> \\<lbrakk>H\\<rbrakk> q)\\<close>"], ["proof (state)\nthis:\n  \\<forall>q.\n     (q, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n     (q \\<in> H \\<longrightarrow>\n      \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n       q) \\<and>\n     ((\\<^bold>\\<not> q) \\<in> H \\<longrightarrow>\n      \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n              q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y.\n          (y, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n          (y \\<in> H \\<longrightarrow>\n           \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            y) \\<and>\n          ((\\<^bold>\\<not> y) \\<in> H \\<longrightarrow>\n           \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                   y) \\<Longrightarrow>\n       (x \\<in> H \\<longrightarrow>\n        \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n            \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n         x) \\<and>\n       ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow>\n        \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                   \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                x)", "show \\<open>(x \\<in> H \\<longrightarrow> \\<lbrakk>H\\<rbrakk> x) \\<and> ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow> \\<not> \\<lbrakk>H\\<rbrakk> x)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> H \\<longrightarrow>\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n      x) \\<and>\n    ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow>\n     \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n             x)", "proof (cases x; safe del: notI)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<lbrakk>x = \\<^bold>\\<bottom>; \\<^bold>\\<bottom> \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                       \\<^bold>\\<bottom>\n 2. \\<lbrakk>x = \\<^bold>\\<bottom>;\n     (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                 ts.\n                                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                              \\<^bold>\\<bottom>\n 3. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 4. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 5. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 6. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 7. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 8. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "case Falsity"], ["proof (state)\nthis:\n  x = \\<^bold>\\<bottom>\n\ngoal (8 subgoals):\n 1. \\<lbrakk>x = \\<^bold>\\<bottom>; \\<^bold>\\<bottom> \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                       \\<^bold>\\<bottom>\n 2. \\<lbrakk>x = \\<^bold>\\<bottom>;\n     (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                 ts.\n                                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                              \\<^bold>\\<bottom>\n 3. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 4. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 5. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 6. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 7. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 8. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "assume \\<open>\\<^bold>\\<bottom> \\<in> H\\<close>"], ["proof (state)\nthis:\n  \\<^bold>\\<bottom> \\<in> H\n\ngoal (8 subgoals):\n 1. \\<lbrakk>x = \\<^bold>\\<bottom>; \\<^bold>\\<bottom> \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                       \\<^bold>\\<bottom>\n 2. \\<lbrakk>x = \\<^bold>\\<bottom>;\n     (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                 ts.\n                                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                              \\<^bold>\\<bottom>\n 3. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 4. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 5. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 6. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 7. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 8. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  \\<^bold>\\<bottom> \\<in> H", "have False"], ["proof (prove)\nusing this:\n  \\<^bold>\\<bottom> \\<in> H\n\ngoal (1 subgoal):\n 1. False", "using assms Hintikka.NoFalsity"], ["proof (prove)\nusing this:\n  \\<^bold>\\<bottom> \\<in> H\n  Hintikka H\n  Hintikka ?H \\<Longrightarrow> \\<^bold>\\<bottom> \\<notin> ?H\n\ngoal (1 subgoal):\n 1. False", "by fast"], ["proof (state)\nthis:\n  False\n\ngoal (8 subgoals):\n 1. \\<lbrakk>x = \\<^bold>\\<bottom>; \\<^bold>\\<bottom> \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                       \\<^bold>\\<bottom>\n 2. \\<lbrakk>x = \\<^bold>\\<bottom>;\n     (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                 ts.\n                                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                              \\<^bold>\\<bottom>\n 3. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 4. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 5. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 6. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 7. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 8. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  False", "show \\<open>\\<lbrakk>H\\<rbrakk> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n     \\<^bold>\\<bottom>", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n   \\<^bold>\\<bottom>\n\ngoal (7 subgoals):\n 1. \\<lbrakk>x = \\<^bold>\\<bottom>;\n     (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                 ts.\n                                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                              \\<^bold>\\<bottom>\n 2. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 3. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 4. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 5. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 6. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 7. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>x = \\<^bold>\\<bottom>;\n     (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                 ts.\n                                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                              \\<^bold>\\<bottom>\n 2. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 3. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 4. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 5. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 6. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 7. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "case Falsity"], ["proof (state)\nthis:\n  x = \\<^bold>\\<bottom>\n\ngoal (7 subgoals):\n 1. \\<lbrakk>x = \\<^bold>\\<bottom>;\n     (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                 ts.\n                                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                              \\<^bold>\\<bottom>\n 2. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 3. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 4. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 5. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 6. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 7. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "assume \\<open>(\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\n\ngoal (7 subgoals):\n 1. \\<lbrakk>x = \\<^bold>\\<bottom>;\n     (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\\<rbrakk>\n    \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                 ts.\n                                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                              \\<^bold>\\<bottom>\n 2. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 3. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 4. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 5. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 6. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 7. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H", "show \\<open>\\<not> \\<lbrakk>H\\<rbrakk> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<bottom>) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            \\<^bold>\\<bottom>", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n             \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n          \\<^bold>\\<bottom>\n\ngoal (6 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 6. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 6. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "case (Pre P ts)"], ["proof (state)\nthis:\n  x = \\<^bold>\\<ddagger> P ts\n\ngoal (6 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 6. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "assume \\<open>\\<^bold>\\<ddagger>P ts \\<in> H\\<close>"], ["proof (state)\nthis:\n  \\<^bold>\\<ddagger> P ts \\<in> H\n\ngoal (6 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        \\<^bold>\\<ddagger> x21 x22 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 6. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  \\<^bold>\\<ddagger> P ts \\<in> H", "show \\<open>\\<lbrakk>H\\<rbrakk> (\\<^bold>\\<ddagger>P ts)\\<close>"], ["proof (prove)\nusing this:\n  \\<^bold>\\<ddagger> P ts \\<in> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n     (\\<^bold>\\<ddagger> P ts)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n   (\\<^bold>\\<ddagger> P ts)\n\ngoal (5 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "case (Pre P ts)"], ["proof (state)\nthis:\n  x = \\<^bold>\\<ddagger> P ts\n\ngoal (5 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "assume \\<open>(\\<^bold>\\<not> \\<^bold>\\<ddagger>P ts) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\n\ngoal (5 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H", "have \\<open>\\<not> sat H P ts\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<ddagger> P ts \\<notin> H", "using assms Hintikka.Basic"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\n  Hintikka H\n  \\<lbrakk>Hintikka ?H; \\<^bold>\\<ddagger> ?P ?ts \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> (\\<^bold>\\<not> \\<^bold>\\<ddagger> ?P ?ts) \\<notin> ?H\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<ddagger> P ts \\<notin> H", "by fast"], ["proof (state)\nthis:\n  \\<^bold>\\<ddagger> P ts \\<notin> H\n\ngoal (5 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x = \\<^bold>\\<ddagger> x21 x22;\n        (\\<^bold>\\<not> \\<^bold>\\<ddagger> x21 x22) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<ddagger> x21 x22)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 5. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  \\<^bold>\\<ddagger> P ts \\<notin> H", "show \\<open>\\<not> \\<lbrakk>H\\<rbrakk> (\\<^bold>\\<ddagger>P ts)\\<close>"], ["proof (prove)\nusing this:\n  \\<^bold>\\<ddagger> P ts \\<notin> H\n\ngoal (1 subgoal):\n 1. \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            (\\<^bold>\\<ddagger> P ts)", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n             \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n          (\\<^bold>\\<ddagger> P ts)\n\ngoal (4 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "case (Imp p q)"], ["proof (state)\nthis:\n  x = (p \\<^bold>\\<longrightarrow> q)\n\ngoal (4 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "assume \\<open>(p \\<^bold>\\<longrightarrow> q) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (p \\<^bold>\\<longrightarrow> q) \\<in> H\n\ngoal (4 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  (p \\<^bold>\\<longrightarrow> q) \\<in> H", "have \\<open>(\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\\<close>"], ["proof (prove)\nusing this:\n  (p \\<^bold>\\<longrightarrow> q) \\<in> H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H", "using assms Hintikka.ImpP"], ["proof (prove)\nusing this:\n  (p \\<^bold>\\<longrightarrow> q) \\<in> H\n  Hintikka H\n  \\<lbrakk>Hintikka ?H; (?p \\<^bold>\\<longrightarrow> ?q) \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> (\\<^bold>\\<not> ?p) \\<in> ?H \\<or> ?q \\<in> ?H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H", "by blast"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n\ngoal (4 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (x31 \\<^bold>\\<longrightarrow> x32) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 4. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H", "show \\<open>\\<lbrakk>H\\<rbrakk> (p \\<^bold>\\<longrightarrow> q)\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n     (p \\<^bold>\\<longrightarrow> q)", "using ih Imp"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n  \\<forall>q.\n     (q, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n     (q \\<in> H \\<longrightarrow>\n      \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n       q) \\<and>\n     ((\\<^bold>\\<not> q) \\<in> H \\<longrightarrow>\n      \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n              q)\n  x = (p \\<^bold>\\<longrightarrow> q)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n     (p \\<^bold>\\<longrightarrow> q)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n   (p \\<^bold>\\<longrightarrow> q)\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "case (Imp p q)"], ["proof (state)\nthis:\n  x = (p \\<^bold>\\<longrightarrow> q)\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "assume \\<open>(\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H", "have \\<open>p \\<in> H\\<close> and \\<open>(\\<^bold>\\<not> q) \\<in> H\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H\n\ngoal (1 subgoal):\n 1. p \\<in> H &&& (\\<^bold>\\<not> q) \\<in> H", "using assms Hintikka.ImpN"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H\n  Hintikka H\n  \\<lbrakk>Hintikka ?H;\n   (\\<^bold>\\<not> (?p \\<^bold>\\<longrightarrow> ?q)) \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?p \\<in> ?H \\<and> (\\<^bold>\\<not> ?q) \\<in> ?H\n\ngoal (1 subgoal):\n 1. p \\<in> H &&& (\\<^bold>\\<not> q) \\<in> H", "by blast+"], ["proof (state)\nthis:\n  p \\<in> H\n  (\\<^bold>\\<not> q) \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>x = (x31 \\<^bold>\\<longrightarrow> x32);\n        (\\<^bold>\\<not> (x31 \\<^bold>\\<longrightarrow> x32))\n        \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (x31 \\<^bold>\\<longrightarrow> x32)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 3. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  p \\<in> H\n  (\\<^bold>\\<not> q) \\<in> H", "show \\<open>\\<not> \\<lbrakk>H\\<rbrakk> (p \\<^bold>\\<longrightarrow> q)\\<close>"], ["proof (prove)\nusing this:\n  p \\<in> H\n  (\\<^bold>\\<not> q) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            (p \\<^bold>\\<longrightarrow> q)", "using ih Imp"], ["proof (prove)\nusing this:\n  p \\<in> H\n  (\\<^bold>\\<not> q) \\<in> H\n  \\<forall>q.\n     (q, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n     (q \\<in> H \\<longrightarrow>\n      \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n       q) \\<and>\n     ((\\<^bold>\\<not> q) \\<in> H \\<longrightarrow>\n      \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n              q)\n  x = (p \\<^bold>\\<longrightarrow> q)\n\ngoal (1 subgoal):\n 1. \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            (p \\<^bold>\\<longrightarrow> q)", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n             \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n          (p \\<^bold>\\<longrightarrow> q)\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "case (Uni p)"], ["proof (state)\nthis:\n  x = \\<^bold>\\<forall> p\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "assume \\<open>\\<^bold>\\<forall> p \\<in> H\\<close>"], ["proof (state)\nthis:\n  \\<^bold>\\<forall> p \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  \\<^bold>\\<forall> p \\<in> H", "have \\<open>\\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\\<close>"], ["proof (prove)\nusing this:\n  \\<^bold>\\<forall> p \\<in> H\n\ngoal (1 subgoal):\n 1. \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H", "using assms Hintikka.UniP"], ["proof (prove)\nusing this:\n  \\<^bold>\\<forall> p \\<in> H\n  Hintikka H\n  \\<lbrakk>Hintikka ?H; \\<^bold>\\<forall> ?p \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> \\<forall>t. ?p\\<langle>t/0\\<rangle> \\<in> ?H\n\ngoal (1 subgoal):\n 1. \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H", "by metis"], ["proof (state)\nthis:\n  \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "moreover"], ["proof (state)\nthis:\n  \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "have \\<open>(p\\<langle>t/0\\<rangle>, \\<^bold>\\<forall> p) \\<in> measure size_fm\\<close> for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p\\<langle>t/0\\<rangle>, \\<^bold>\\<forall> p)\n    \\<in> measure FOL_Axiomatic.size_fm", "by simp"], ["proof (state)\nthis:\n  (p\\<langle>?t/0\\<rangle>, \\<^bold>\\<forall> p)\n  \\<in> measure FOL_Axiomatic.size_fm\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n  (p\\<langle>?t/0\\<rangle>, \\<^bold>\\<forall> p)\n  \\<in> measure FOL_Axiomatic.size_fm", "have \\<open>\\<forall>t. \\<lbrakk>H\\<rbrakk> (p\\<langle>t/0\\<rangle>)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n  (p\\<langle>?t/0\\<rangle>, \\<^bold>\\<forall> p)\n  \\<in> measure FOL_Axiomatic.size_fm\n\ngoal (1 subgoal):\n 1. \\<forall>t.\n       \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n           \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n        (p\\<langle>t/0\\<rangle>)", "using ih Uni"], ["proof (prove)\nusing this:\n  \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n  (p\\<langle>?t/0\\<rangle>, \\<^bold>\\<forall> p)\n  \\<in> measure FOL_Axiomatic.size_fm\n  \\<forall>q.\n     (q, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n     (q \\<in> H \\<longrightarrow>\n      \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n       q) \\<and>\n     ((\\<^bold>\\<not> q) \\<in> H \\<longrightarrow>\n      \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n              q)\n  x = \\<^bold>\\<forall> p\n\ngoal (1 subgoal):\n 1. \\<forall>t.\n       \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n           \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n        (p\\<langle>t/0\\<rangle>)", "by blast"], ["proof (state)\nthis:\n  \\<forall>t.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n      (p\\<langle>t/0\\<rangle>)\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        \\<^bold>\\<forall> x4 \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                             ts. \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                          (\\<^bold>\\<forall> x4)\n 2. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  \\<forall>t.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n      (p\\<langle>t/0\\<rangle>)", "show \\<open>\\<lbrakk>H\\<rbrakk> (\\<^bold>\\<forall> p)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>t.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n      (p\\<langle>t/0\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n     (\\<^bold>\\<forall> p)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n   (\\<^bold>\\<forall> p)\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "case (Uni p)"], ["proof (state)\nthis:\n  x = \\<^bold>\\<forall> p\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "assume \\<open>(\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H", "have \\<open>\\<exists>t. (\\<^bold>\\<not> p\\<langle>t/0\\<rangle>) \\<in> H\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<exists>t. (\\<^bold>\\<not> p\\<langle>t/0\\<rangle>) \\<in> H", "using assms Hintikka.UniN"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\n  Hintikka H\n  \\<lbrakk>Hintikka ?H;\n   (\\<^bold>\\<not> \\<^bold>\\<forall> ?p) \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       (\\<^bold>\\<not> ?p\\<langle>\\<^bold>\\<dagger> a\n             []/0\\<rangle>)\n                       \\<in> ?H\n\ngoal (1 subgoal):\n 1. \\<exists>t. (\\<^bold>\\<not> p\\<langle>t/0\\<rangle>) \\<in> H", "by blast"], ["proof (state)\nthis:\n  \\<exists>t. (\\<^bold>\\<not> p\\<langle>t/0\\<rangle>) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "moreover"], ["proof (state)\nthis:\n  \\<exists>t. (\\<^bold>\\<not> p\\<langle>t/0\\<rangle>) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "have \\<open>(p\\<langle>t/0\\<rangle>, \\<^bold>\\<forall> p) \\<in> measure size_fm\\<close> for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p\\<langle>t/0\\<rangle>, \\<^bold>\\<forall> p)\n    \\<in> measure FOL_Axiomatic.size_fm", "by simp"], ["proof (state)\nthis:\n  (p\\<langle>?t/0\\<rangle>, \\<^bold>\\<forall> p)\n  \\<in> measure FOL_Axiomatic.size_fm\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>t. (\\<^bold>\\<not> p\\<langle>t/0\\<rangle>) \\<in> H\n  (p\\<langle>?t/0\\<rangle>, \\<^bold>\\<forall> p)\n  \\<in> measure FOL_Axiomatic.size_fm", "have \\<open>\\<exists>t. \\<not> \\<lbrakk>H\\<rbrakk> (p\\<langle>t/0\\<rangle>)\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>t. (\\<^bold>\\<not> p\\<langle>t/0\\<rangle>) \\<in> H\n  (p\\<langle>?t/0\\<rangle>, \\<^bold>\\<forall> p)\n  \\<in> measure FOL_Axiomatic.size_fm\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                  \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n               (p\\<langle>t/0\\<rangle>)", "using ih Uni"], ["proof (prove)\nusing this:\n  \\<exists>t. (\\<^bold>\\<not> p\\<langle>t/0\\<rangle>) \\<in> H\n  (p\\<langle>?t/0\\<rangle>, \\<^bold>\\<forall> p)\n  \\<in> measure FOL_Axiomatic.size_fm\n  \\<forall>q.\n     (q, x) \\<in> measure FOL_Axiomatic.size_fm \\<longrightarrow>\n     (q \\<in> H \\<longrightarrow>\n      \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n          \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n       q) \\<and>\n     ((\\<^bold>\\<not> q) \\<in> H \\<longrightarrow>\n      \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                 \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n              q)\n  x = \\<^bold>\\<forall> p\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                  \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n               (p\\<langle>t/0\\<rangle>)", "by blast"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n             (p\\<langle>t/0\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>x = \\<^bold>\\<forall> x4;\n        (\\<^bold>\\<not> \\<^bold>\\<forall> x4) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P\n                                    ts.\n                                    \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n                                 (\\<^bold>\\<forall> x4)", "then"], ["proof (chain)\npicking this:\n  \\<exists>t.\n     \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n             (p\\<langle>t/0\\<rangle>)", "show \\<open>\\<not> \\<lbrakk>H\\<rbrakk> (\\<^bold>\\<forall> p)\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>t.\n     \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n                \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n             (p\\<langle>t/0\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n               \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n            (\\<^bold>\\<forall> p)", "by simp"], ["proof (state)\nthis:\n  \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n             \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n          (\\<^bold>\\<forall> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<in> H \\<longrightarrow>\n   \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n       \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n    x) \\<and>\n  ((\\<^bold>\\<not> x) \\<in> H \\<longrightarrow>\n   \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n              \\<^bold>\\<ddagger> P ts \\<in> H\\<rbrakk>\n           x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Maximal Consistent Sets are Hintikka Sets\\<close>"], ["", "lemma inconsistent_head:\n  assumes \\<open>consistent S\\<close> and \\<open>maximal S\\<close> and \\<open>p \\<notin> S\\<close>\n  obtains S' where \\<open>set S' \\<subseteq> S\\<close> and \\<open>p # S' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms inconsistent_fm"], ["proof (prove)\nusing this:\n  consistent S\n  maximal S\n  p \\<notin> S\n  \\<lbrakk>consistent ?S; \\<not> consistent ({?p} \\<union> ?S);\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding consistent_def maximal_def"], ["proof (prove)\nusing this:\n  \\<nexists>S'.\n     set S' \\<subseteq> S \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n  \\<forall>p.\n     p \\<notin> S \\<longrightarrow>\n     \\<not> (\\<nexists>S'.\n                set S' \\<subseteq> {p} \\<union> S \\<and>\n                (S' \\<turnstile> \\<^bold>\\<bottom>))\n  p \\<notin> S\n  \\<lbrakk>\\<nexists>S'.\n              set S' \\<subseteq> ?S \\<and>\n              (S' \\<turnstile> \\<^bold>\\<bottom>);\n   \\<not> (\\<nexists>S'.\n              set S' \\<subseteq> {?p} \\<union> ?S \\<and>\n              (S' \\<turnstile> \\<^bold>\\<bottom>));\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>set S' \\<subseteq> S;\n         p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["", "lemma inconsistent_parts [simp]:\n  assumes \\<open>ps \\<turnstile> \\<^bold>\\<bottom>\\<close> and \\<open>set ps \\<subseteq> S\\<close>\n  shows \\<open>\\<not> consistent S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> consistent S", "using assms"], ["proof (prove)\nusing this:\n  ps \\<turnstile> \\<^bold>\\<bottom>\n  set ps \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<not> consistent S", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  ps \\<turnstile> \\<^bold>\\<bottom>\n  set ps \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>S'.\n               set S' \\<subseteq> S \\<and>\n               (S' \\<turnstile> \\<^bold>\\<bottom>))", "by blast"], ["", "lemma Hintikka_Extend:\n  fixes H :: \\<open>('f, 'p) fm set\\<close>\n  assumes \\<open>consistent H\\<close> and \\<open>maximal H\\<close> and \\<open>saturated H\\<close>\n    and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>Hintikka H\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hintikka H", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<^bold>\\<bottom> \\<notin> H\n 2. \\<And>P ts.\n       \\<^bold>\\<ddagger> P ts \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<notin> H\n 3. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 4. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 5. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 6. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "show \\<open>\\<^bold>\\<bottom> \\<notin> H\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>\\<bottom> \\<notin> H", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bold>\\<bottom> \\<in> H \\<Longrightarrow> False", "assume \\<open>\\<^bold>\\<bottom> \\<in> H\\<close>"], ["proof (state)\nthis:\n  \\<^bold>\\<bottom> \\<in> H\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<bottom> \\<in> H \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<^bold>\\<bottom> \\<in> H\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<bottom> \\<in> H \\<Longrightarrow> False", "have \\<open>[\\<^bold>\\<bottom>] \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<^bold>\\<bottom>] \\<turnstile> \\<^bold>\\<bottom>", "by blast"], ["proof (state)\nthis:\n  [\\<^bold>\\<bottom>] \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<bottom> \\<in> H \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<^bold>\\<bottom> \\<in> H\n  [\\<^bold>\\<bottom>] \\<turnstile> \\<^bold>\\<bottom>", "have \\<open>\\<not> consistent H\\<close>"], ["proof (prove)\nusing this:\n  \\<^bold>\\<bottom> \\<in> H\n  [\\<^bold>\\<bottom>] \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<not> consistent H", "using inconsistent_parts[where ps=\\<open>[\\<^bold>\\<bottom>]\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>\\<bottom> \\<in> H\n  [\\<^bold>\\<bottom>] \\<turnstile> \\<^bold>\\<bottom>\n  \\<lbrakk>[\\<^bold>\\<bottom>] \\<turnstile> \\<^bold>\\<bottom>;\n   set [\\<^bold>\\<bottom>] \\<subseteq> ?S\\<rbrakk>\n  \\<Longrightarrow> \\<not> consistent ?S\n\ngoal (1 subgoal):\n 1. \\<not> consistent H", "by simp"], ["proof (state)\nthis:\n  \\<not> consistent H\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<bottom> \\<in> H \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> consistent H", "show False"], ["proof (prove)\nusing this:\n  \\<not> consistent H\n\ngoal (1 subgoal):\n 1. False", "using \\<open>consistent H\\<close>"], ["proof (prove)\nusing this:\n  \\<not> consistent H\n  consistent H\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<^bold>\\<bottom> \\<notin> H\n\ngoal (5 subgoals):\n 1. \\<And>P ts.\n       \\<^bold>\\<ddagger> P ts \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<notin> H\n 2. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 3. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 4. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 5. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P ts.\n       \\<^bold>\\<ddagger> P ts \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<notin> H\n 2. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 3. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 4. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 5. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "fix P ts"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P ts.\n       \\<^bold>\\<ddagger> P ts \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<notin> H\n 2. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 3. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 4. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 5. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "assume \\<open>\\<^bold>\\<ddagger>P ts \\<in> H\\<close>"], ["proof (state)\nthis:\n  \\<^bold>\\<ddagger> P ts \\<in> H\n\ngoal (5 subgoals):\n 1. \\<And>P ts.\n       \\<^bold>\\<ddagger> P ts \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<notin> H\n 2. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 3. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 4. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 5. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "show \\<open>(\\<^bold>\\<not> \\<^bold>\\<ddagger>P ts) \\<notin> H\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<notin> H", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H \\<Longrightarrow> False", "assume \\<open>(\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H \\<Longrightarrow> False", "have \\<open>[\\<^bold>\\<ddagger>P ts, \\<^bold>\\<not> \\<^bold>\\<ddagger>P ts] \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<^bold>\\<ddagger> P ts,\n     \\<^bold>\\<not> \\<^bold>\\<ddagger> P ts] \\<turnstile> \\<^bold>\\<bottom>", "by auto"], ["proof (state)\nthis:\n  [\\<^bold>\\<ddagger> P ts,\n   \\<^bold>\\<not> \\<^bold>\\<ddagger> P ts] \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\n  [\\<^bold>\\<ddagger> P ts,\n   \\<^bold>\\<not> \\<^bold>\\<ddagger> P ts] \\<turnstile> \\<^bold>\\<bottom>", "have \\<open>\\<not> consistent H\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\n  [\\<^bold>\\<ddagger> P ts,\n   \\<^bold>\\<not> \\<^bold>\\<ddagger> P ts] \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<not> consistent H", "using \\<open>\\<^bold>\\<ddagger>P ts \\<in> H\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H\n  [\\<^bold>\\<ddagger> P ts,\n   \\<^bold>\\<not> \\<^bold>\\<ddagger> P ts] \\<turnstile> \\<^bold>\\<bottom>\n  \\<^bold>\\<ddagger> P ts \\<in> H\n\ngoal (1 subgoal):\n 1. \\<not> consistent H", "by fastforce"], ["proof (state)\nthis:\n  \\<not> consistent H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<in> H \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> consistent H", "show False"], ["proof (prove)\nusing this:\n  \\<not> consistent H\n\ngoal (1 subgoal):\n 1. False", "using \\<open>consistent H\\<close>"], ["proof (prove)\nusing this:\n  \\<not> consistent H\n  consistent H\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<ddagger> P ts) \\<notin> H\n\ngoal (4 subgoals):\n 1. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 2. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 3. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 4. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 2. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 3. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 4. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "fix p q"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 2. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 3. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 4. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "assume *: \\<open>(p \\<^bold>\\<longrightarrow> q) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (p \\<^bold>\\<longrightarrow> q) \\<in> H\n\ngoal (4 subgoals):\n 1. \\<And>p q.\n       (p \\<^bold>\\<longrightarrow> q) \\<in> H \\<Longrightarrow>\n       (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n 2. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 3. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 4. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "show \\<open>(\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H", "proof (rule disjCI, rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "assume \\<open>q \\<notin> H\\<close>"], ["proof (state)\nthis:\n  q \\<notin> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  q \\<notin> H", "obtain Hq' where Hq': \\<open>q # Hq' \\<turnstile> \\<^bold>\\<bottom>\\<close> \\<open>set Hq' \\<subseteq> H\\<close>"], ["proof (prove)\nusing this:\n  q \\<notin> H\n\ngoal (1 subgoal):\n 1. (\\<And>Hq'.\n        \\<lbrakk>q # Hq' \\<turnstile> \\<^bold>\\<bottom>;\n         set Hq' \\<subseteq> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms inconsistent_head"], ["proof (prove)\nusing this:\n  q \\<notin> H\n  consistent H\n  maximal H\n  saturated H\n  infinite UNIV\n  \\<lbrakk>consistent ?S; maximal ?S; ?p \\<notin> ?S;\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>Hq'.\n        \\<lbrakk>q # Hq' \\<turnstile> \\<^bold>\\<bottom>;\n         set Hq' \\<subseteq> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  q # Hq' \\<turnstile> \\<^bold>\\<bottom>\n  set Hq' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "assume \\<open>(\\<^bold>\\<not> p) \\<notin> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> p) \\<notin> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> p) \\<notin> H", "obtain Hp' where Hp': \\<open>(\\<^bold>\\<not> p) # Hp' \\<turnstile> \\<^bold>\\<bottom>\\<close> \\<open>set Hp' \\<subseteq> H\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> p) \\<notin> H\n\ngoal (1 subgoal):\n 1. (\\<And>Hp'.\n        \\<lbrakk>(\\<^bold>\\<not> p) # Hp' \\<turnstile> \\<^bold>\\<bottom>;\n         set Hp' \\<subseteq> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms inconsistent_head"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> p) \\<notin> H\n  consistent H\n  maximal H\n  saturated H\n  infinite UNIV\n  \\<lbrakk>consistent ?S; maximal ?S; ?p \\<notin> ?S;\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>Hp'.\n        \\<lbrakk>(\\<^bold>\\<not> p) # Hp' \\<turnstile> \\<^bold>\\<bottom>;\n         set Hp' \\<subseteq> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> p) # Hp' \\<turnstile> \\<^bold>\\<bottom>\n  set Hp' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "let ?H' = \\<open>Hp' @ Hq'\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "have H': \\<open>set ?H' = set Hp' \\<union> set Hq'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (Hp' @ Hq') = set Hp' \\<union> set Hq'", "by simp"], ["proof (state)\nthis:\n  set (Hp' @ Hq') = set Hp' \\<union> set Hq'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  set (Hp' @ Hq') = set Hp' \\<union> set Hq'", "have \\<open>set Hp' \\<subseteq> set ?H'\\<close> and \\<open>set Hq' \\<subseteq> set ?H'\\<close>"], ["proof (prove)\nusing this:\n  set (Hp' @ Hq') = set Hp' \\<union> set Hq'\n\ngoal (1 subgoal):\n 1. set Hp' \\<subseteq> set (Hp' @ Hq') &&&\n    set Hq' \\<subseteq> set (Hp' @ Hq')", "by blast+"], ["proof (state)\nthis:\n  set Hp' \\<subseteq> set (Hp' @ Hq')\n  set Hq' \\<subseteq> set (Hp' @ Hq')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  set Hp' \\<subseteq> set (Hp' @ Hq')\n  set Hq' \\<subseteq> set (Hp' @ Hq')", "have \\<open>(\\<^bold>\\<not> p) # ?H' \\<turnstile> \\<^bold>\\<bottom>\\<close> and \\<open>q # ?H' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  set Hp' \\<subseteq> set (Hp' @ Hq')\n  set Hq' \\<subseteq> set (Hp' @ Hq')\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> p) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom> &&&\n    q # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>", "using Hp'(1) Hq'(1) deduct imply_weaken"], ["proof (prove)\nusing this:\n  set Hp' \\<subseteq> set (Hp' @ Hq')\n  set Hq' \\<subseteq> set (Hp' @ Hq')\n  (\\<^bold>\\<not> p) # Hp' \\<turnstile> \\<^bold>\\<bottom>\n  q # Hq' \\<turnstile> \\<^bold>\\<bottom>\n  ?ps \\<turnstile> ?p \\<^bold>\\<longrightarrow> ?q \\<Longrightarrow>\n  ?p # ?ps \\<turnstile> ?q\n  ?p # ?ps \\<turnstile> ?q \\<Longrightarrow>\n  ?ps \\<turnstile> ?p \\<^bold>\\<longrightarrow> ?q\n  \\<lbrakk>?ps \\<turnstile> ?q; set ?ps \\<subseteq> set ?ps'\\<rbrakk>\n  \\<Longrightarrow> ?ps' \\<turnstile> ?q\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> p) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom> &&&\n    q # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>", "by metis+"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> p) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  q # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> p) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  q # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>", "have \\<open>(p \\<^bold>\\<longrightarrow> q) # ?H' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> p) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  q # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. (p \\<^bold>\\<longrightarrow> q) #\n    Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>", "using Boole imply_Cons imply_head MP' cut"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> p) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  q # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  (\\<^bold>\\<not> ?p) # ?ps \\<turnstile> \\<^bold>\\<bottom> \\<Longrightarrow>\n  ?ps \\<turnstile> ?p\n  ?ps \\<turnstile> ?q \\<Longrightarrow> ?p # ?ps \\<turnstile> ?q\n  ?p # ?ps \\<turnstile> ?p\n  \\<lbrakk>?ps \\<turnstile> ?p \\<^bold>\\<longrightarrow> ?q;\n   ?ps \\<turnstile> ?p\\<rbrakk>\n  \\<Longrightarrow> ?ps \\<turnstile> ?q\n  \\<lbrakk>?p # ?ps \\<turnstile> ?r; ?q # ?ps \\<turnstile> ?p\\<rbrakk>\n  \\<Longrightarrow> ?q # ?ps \\<turnstile> ?r\n\ngoal (1 subgoal):\n 1. (p \\<^bold>\\<longrightarrow> q) #\n    Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>", "by metis"], ["proof (state)\nthis:\n  (p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "have \\<open>set ((p \\<^bold>\\<longrightarrow> q) # ?H') \\<subseteq> H\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set ((p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq') \\<subseteq> H", "using \\<open>q \\<notin> H\\<close> *(1) H' Hp'(2) Hq'(2)"], ["proof (prove)\nusing this:\n  q \\<notin> H\n  (p \\<^bold>\\<longrightarrow> q) \\<in> H\n  set (Hp' @ Hq') = set Hp' \\<union> set Hq'\n  set Hp' \\<subseteq> H\n  set Hq' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. set ((p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq') \\<subseteq> H", "by auto"], ["proof (state)\nthis:\n  set ((p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq') \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<notin> H; (\\<^bold>\\<not> p) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  set ((p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq') \\<subseteq> H", "show False"], ["proof (prove)\nusing this:\n  (p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  set ((p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq') \\<subseteq> H\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  set ((p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq') \\<subseteq> H\n  consistent H\n  maximal H\n  saturated H\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. False", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  (p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq' \\<turnstile> \\<^bold>\\<bottom>\n  set ((p \\<^bold>\\<longrightarrow> q) # Hp' @ Hq') \\<subseteq> H\n  \\<nexists>S'.\n     set S' \\<subseteq> H \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n  maximal H\n  saturated H\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> p) \\<in> H \\<or> q \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 2. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 3. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 2. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 3. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "fix p q"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 2. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 3. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "assume *: \\<open>(\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>p q.\n       (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q))\n       \\<in> H \\<Longrightarrow>\n       p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n 2. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 3. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "show \\<open>p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H", "proof (rule conjI; rule ccontr)"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<notin> H \\<Longrightarrow> False\n 2. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "assume \\<open>p \\<notin> H\\<close>"], ["proof (state)\nthis:\n  p \\<notin> H\n\ngoal (2 subgoals):\n 1. p \\<notin> H \\<Longrightarrow> False\n 2. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p \\<notin> H", "obtain H' where S': \\<open>p # H' \\<turnstile> \\<^bold>\\<bottom>\\<close> \\<open>set H' \\<subseteq> H\\<close>"], ["proof (prove)\nusing this:\n  p \\<notin> H\n\ngoal (1 subgoal):\n 1. (\\<And>H'.\n        \\<lbrakk>p # H' \\<turnstile> \\<^bold>\\<bottom>;\n         set H' \\<subseteq> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms inconsistent_head"], ["proof (prove)\nusing this:\n  p \\<notin> H\n  consistent H\n  maximal H\n  saturated H\n  infinite UNIV\n  \\<lbrakk>consistent ?S; maximal ?S; ?p \\<notin> ?S;\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>H'.\n        \\<lbrakk>p # H' \\<turnstile> \\<^bold>\\<bottom>;\n         set H' \\<subseteq> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  p # H' \\<turnstile> \\<^bold>\\<bottom>\n  set H' \\<subseteq> H\n\ngoal (2 subgoals):\n 1. p \\<notin> H \\<Longrightarrow> False\n 2. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  p # H' \\<turnstile> \\<^bold>\\<bottom>\n  set H' \\<subseteq> H\n\ngoal (2 subgoals):\n 1. p \\<notin> H \\<Longrightarrow> False\n 2. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "have \\<open>(\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H' \\<turnstile> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H' \\<turnstile> p", "by auto"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H' \\<turnstile> p\n\ngoal (2 subgoals):\n 1. p \\<notin> H \\<Longrightarrow> False\n 2. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  p # H' \\<turnstile> \\<^bold>\\<bottom>\n  set H' \\<subseteq> H\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H' \\<turnstile> p", "have \\<open>(\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  p # H' \\<turnstile> \\<^bold>\\<bottom>\n  set H' \\<subseteq> H\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H' \\<turnstile> p\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n    H' \\<turnstile> \\<^bold>\\<bottom>", "by blast"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (2 subgoals):\n 1. p \\<notin> H \\<Longrightarrow> False\n 2. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (2 subgoals):\n 1. p \\<notin> H \\<Longrightarrow> False\n 2. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "have \\<open>set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H')\n    \\<subseteq> H", "using *(1) S'(2)"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H\n  set H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H')\n    \\<subseteq> H", "by simp"], ["proof (state)\nthis:\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\n\ngoal (2 subgoals):\n 1. p \\<notin> H \\<Longrightarrow> False\n 2. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H", "show False"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\n  consistent H\n  maximal H\n  saturated H\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. False", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\n  \\<nexists>S'.\n     set S' \\<subseteq> H \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n  maximal H\n  saturated H\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "assume \\<open>(\\<^bold>\\<not> q) \\<notin> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> q) \\<notin> H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> q) \\<notin> H", "obtain H' where H': \\<open>(\\<^bold>\\<not> q) # H' \\<turnstile> \\<^bold>\\<bottom>\\<close> \\<open>set H' \\<subseteq> H\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> q) \\<notin> H\n\ngoal (1 subgoal):\n 1. (\\<And>H'.\n        \\<lbrakk>(\\<^bold>\\<not> q) # H' \\<turnstile> \\<^bold>\\<bottom>;\n         set H' \\<subseteq> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms inconsistent_head"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> q) \\<notin> H\n  consistent H\n  maximal H\n  saturated H\n  infinite UNIV\n  \\<lbrakk>consistent ?S; maximal ?S; ?p \\<notin> ?S;\n   \\<And>S'.\n      \\<lbrakk>set S' \\<subseteq> ?S;\n       ?p # S' \\<turnstile> \\<^bold>\\<bottom>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>H'.\n        \\<lbrakk>(\\<^bold>\\<not> q) # H' \\<turnstile> \\<^bold>\\<bottom>;\n         set H' \\<subseteq> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> q) # H' \\<turnstile> \\<^bold>\\<bottom>\n  set H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> q) # H' \\<turnstile> \\<^bold>\\<bottom>\n  set H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "have \\<open>(\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H' \\<turnstile> \\<^bold>\\<not> q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n    H' \\<turnstile> \\<^bold>\\<not> q", "by auto"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<not> q\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> q) # H' \\<turnstile> \\<^bold>\\<bottom>\n  set H' \\<subseteq> H\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<not> q", "have \\<open>(\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H' \\<turnstile> \\<^bold>\\<bottom>\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> q) # H' \\<turnstile> \\<^bold>\\<bottom>\n  set H' \\<subseteq> H\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<not> q\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n    H' \\<turnstile> \\<^bold>\\<bottom>", "by blast"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "have \\<open>set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H')\n    \\<subseteq> H", "using *(1) H'(2)"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) \\<in> H\n  set H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H')\n    \\<subseteq> H", "by simp"], ["proof (state)\nthis:\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> q) \\<notin> H \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H", "show False"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\n  consistent H\n  maximal H\n  saturated H\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. False", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) #\n  H' \\<turnstile> \\<^bold>\\<bottom>\n  set ((\\<^bold>\\<not> (p \\<^bold>\\<longrightarrow> q)) # H') \\<subseteq> H\n  \\<nexists>S'.\n     set S' \\<subseteq> H \\<and> (S' \\<turnstile> \\<^bold>\\<bottom>)\n  maximal H\n  saturated H\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> H \\<and> (\\<^bold>\\<not> q) \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 2. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 2. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 2. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "assume \\<open>\\<^bold>\\<forall> p \\<in> H\\<close>"], ["proof (state)\nthis:\n  \\<^bold>\\<forall> p \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<^bold>\\<forall> p \\<in> H \\<Longrightarrow>\n       \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n 2. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "then"], ["proof (chain)\npicking this:\n  \\<^bold>\\<forall> p \\<in> H", "show \\<open>\\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\\<close>"], ["proof (prove)\nusing this:\n  \\<^bold>\\<forall> p \\<in> H\n\ngoal (1 subgoal):\n 1. \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H", "using assms consistent_add_instance"], ["proof (prove)\nusing this:\n  \\<^bold>\\<forall> p \\<in> H\n  consistent H\n  maximal H\n  saturated H\n  infinite UNIV\n  \\<lbrakk>consistent ?S; \\<^bold>\\<forall> ?p \\<in> ?S\\<rbrakk>\n  \\<Longrightarrow> consistent ({?p\\<langle>?t/0\\<rangle>} \\<union> ?S)\n\ngoal (1 subgoal):\n 1. \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H", "unfolding maximal_def"], ["proof (prove)\nusing this:\n  \\<^bold>\\<forall> p \\<in> H\n  consistent H\n  \\<forall>p.\n     p \\<notin> H \\<longrightarrow> \\<not> consistent ({p} \\<union> H)\n  saturated H\n  infinite UNIV\n  \\<lbrakk>consistent ?S; \\<^bold>\\<forall> ?p \\<in> ?S\\<rbrakk>\n  \\<Longrightarrow> consistent ({?p\\<langle>?t/0\\<rangle>} \\<union> ?S)\n\ngoal (1 subgoal):\n 1. \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H", "by blast"], ["proof (state)\nthis:\n  \\<forall>t. p\\<langle>t/0\\<rangle> \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "assume \\<open>(\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\\<close>"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<Longrightarrow>\n       \\<exists>a.\n          (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n          \\<in> H", "then"], ["proof (chain)\npicking this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H", "show \\<open>\\<exists>a. (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger>a []/0\\<rangle>) \\<in> H\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) \\<in> H", "using \\<open>saturated H\\<close>"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\n  saturated H\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) \\<in> H", "unfolding saturated_def"], ["proof (prove)\nusing this:\n  (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H\n  \\<forall>p.\n     (\\<^bold>\\<not> \\<^bold>\\<forall> p) \\<in> H \\<longrightarrow>\n     (\\<exists>a.\n         (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>)\n         \\<in> H)\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) \\<in> H", "by fast"], ["proof (state)\nthis:\n  \\<exists>a.\n     (\\<^bold>\\<not> p\\<langle>\\<^bold>\\<dagger> a []/0\\<rangle>) \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Countable Formulas\\<close>"], ["", "instance tm :: (countable) countable"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a tm, countable_class)", "by countable_datatype"], ["", "instance fm :: (countable, countable) countable"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(('a, 'b) fm, countable_class)", "by countable_datatype"], ["", "section \\<open>Completeness\\<close>"], ["", "lemma imply_completeness:\n  fixes p :: \\<open>('f :: countable, 'p :: countable) fm\\<close>\n  assumes \\<open>\\<forall>(E :: _ \\<Rightarrow> 'f tm) F G. Ball X \\<lbrakk>E, F, G\\<rbrakk> \\<longrightarrow> \\<lbrakk>E, F, G\\<rbrakk> p\\<close>\n    and \\<open>finite (params X)\\<close> and \\<open>infinite (UNIV :: 'f set)\\<close>\n  shows \\<open>\\<exists>ps. set ps \\<subseteq> X \\<and> (ps \\<turnstile> p)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps. set ps \\<subseteq> X \\<and> (ps \\<turnstile> p)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "assume \\<open>\\<nexists>ps. set ps \\<subseteq> X \\<and> (ps \\<turnstile> p)\\<close>"], ["proof (state)\nthis:\n  \\<nexists>ps. set ps \\<subseteq> X \\<and> (ps \\<turnstile> p)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<nexists>ps. set ps \\<subseteq> X \\<and> (ps \\<turnstile> p)", "have *: \\<open>\\<nexists>ps. set ps \\<subseteq> X \\<and> ((\\<^bold>\\<not> p) # ps \\<turnstile> \\<^bold>\\<bottom>)\\<close>"], ["proof (prove)\nusing this:\n  \\<nexists>ps. set ps \\<subseteq> X \\<and> (ps \\<turnstile> p)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and>\n       ((\\<^bold>\\<not> p) # ps \\<turnstile> \\<^bold>\\<bottom>)", "using Boole"], ["proof (prove)\nusing this:\n  \\<nexists>ps. set ps \\<subseteq> X \\<and> (ps \\<turnstile> p)\n  (\\<^bold>\\<not> ?p) # ?ps \\<turnstile> \\<^bold>\\<bottom> \\<Longrightarrow>\n  ?ps \\<turnstile> ?p\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and>\n       ((\\<^bold>\\<not> p) # ps \\<turnstile> \\<^bold>\\<bottom>)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>ps.\n     set ps \\<subseteq> X \\<and>\n     ((\\<^bold>\\<not> p) # ps \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "let ?S = \\<open>{\\<^bold>\\<not> p} \\<union> X\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "let ?H = \\<open>Extend ?S from_nat\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "have \\<open>consistent ?S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent ({\\<^bold>\\<not> p} \\<union> X)", "using *"], ["proof (prove)\nusing this:\n  \\<nexists>ps.\n     set ps \\<subseteq> X \\<and>\n     ((\\<^bold>\\<not> p) # ps \\<turnstile> \\<^bold>\\<bottom>)\n\ngoal (1 subgoal):\n 1. consistent ({\\<^bold>\\<not> p} \\<union> X)", "by (metis consistent_def imply_Cons inconsistent_fm)"], ["proof (state)\nthis:\n  consistent ({\\<^bold>\\<not> p} \\<union> X)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  consistent ({\\<^bold>\\<not> p} \\<union> X)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "have \\<open>finite (params ?S)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (params ({\\<^bold>\\<not> p} \\<union> X))", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>E F G.\n     Ball X \\<lbrakk>E, F, G\\<rbrakk> \\<longrightarrow>\n     \\<lbrakk>E, F, G\\<rbrakk> p\n  finite (params X)\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. finite (params ({\\<^bold>\\<not> p} \\<union> X))", "by simp"], ["proof (state)\nthis:\n  finite (params ({\\<^bold>\\<not> p} \\<union> X))\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  consistent ({\\<^bold>\\<not> p} \\<union> X)\n  finite (params ({\\<^bold>\\<not> p} \\<union> X))", "have \\<open>consistent ?H\\<close> and \\<open>maximal ?H\\<close>"], ["proof (prove)\nusing this:\n  consistent ({\\<^bold>\\<not> p} \\<union> X)\n  finite (params ({\\<^bold>\\<not> p} \\<union> X))\n\ngoal (1 subgoal):\n 1. consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat) &&&\n    maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)", "using assms(3) consistent_Extend maximal_Extend surj_from_nat"], ["proof (prove)\nusing this:\n  consistent ({\\<^bold>\\<not> p} \\<union> X)\n  finite (params ({\\<^bold>\\<not> p} \\<union> X))\n  infinite UNIV\n  \\<lbrakk>consistent ?S; finite (params ?S); infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> consistent (Extend ?S ?f)\n  surj ?f \\<Longrightarrow> maximal (Extend ?S ?f)\n  surj from_nat\n\ngoal (1 subgoal):\n 1. consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat) &&&\n    maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)", "by blast+"], ["proof (state)\nthis:\n  consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)", "have \\<open>saturated ?H\\<close>"], ["proof (prove)\nusing this:\n  consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n\ngoal (1 subgoal):\n 1. saturated (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)", "using saturated_Extend"], ["proof (prove)\nusing this:\n  consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  \\<lbrakk>consistent (Extend ?S ?f); surj ?f\\<rbrakk>\n  \\<Longrightarrow> saturated (Extend ?S ?f)\n\ngoal (1 subgoal):\n 1. saturated (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)", "by fastforce"], ["proof (state)\nthis:\n  saturated (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  saturated (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)", "have \\<open>Hintikka ?H\\<close>"], ["proof (prove)\nusing this:\n  consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  saturated (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n\ngoal (1 subgoal):\n 1. Hintikka (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)", "using assms(3) Hintikka_Extend"], ["proof (prove)\nusing this:\n  consistent (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  maximal (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  saturated (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n  infinite UNIV\n  \\<lbrakk>consistent ?H; maximal ?H; saturated ?H; infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> Hintikka ?H\n\ngoal (1 subgoal):\n 1. Hintikka (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)", "by blast"], ["proof (state)\nthis:\n  Hintikka (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "have \\<open>\\<lbrakk>?H\\<rbrakk> p\\<close> if \\<open>p \\<in> ?S\\<close> for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts\n        \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n     p", "using that Extend_subset Hintikka_model \\<open>Hintikka ?H\\<close>"], ["proof (prove)\nusing this:\n  p \\<in> {\\<^bold>\\<not> p} \\<union> X\n  ?S \\<subseteq> Extend ?S ?f\n  Hintikka ?H \\<Longrightarrow>\n  (?p \\<in> ?H \\<longrightarrow>\n   \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n       \\<^bold>\\<ddagger> P ts \\<in> ?H\\<rbrakk>\n    ?p) \\<and>\n  ((\\<^bold>\\<not> ?p) \\<in> ?H \\<longrightarrow>\n   \\<not> \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n              \\<^bold>\\<ddagger> P ts \\<in> ?H\\<rbrakk>\n           ?p)\n  Hintikka (Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts\n        \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n     p", "by blast"], ["proof (state)\nthis:\n  ?p \\<in> {\\<^bold>\\<not> p} \\<union> X \\<Longrightarrow>\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   ?p\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  ?p \\<in> {\\<^bold>\\<not> p} \\<union> X \\<Longrightarrow>\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   ?p", "have \\<open>\\<lbrakk>?H\\<rbrakk> (\\<^bold>\\<not> p)\\<close> and \\<open>\\<forall>q \\<in> X. \\<lbrakk>?H\\<rbrakk> q\\<close>"], ["proof (prove)\nusing this:\n  ?p \\<in> {\\<^bold>\\<not> p} \\<union> X \\<Longrightarrow>\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   ?p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts\n        \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n     (\\<^bold>\\<not> p) &&&\n    \\<forall>q\\<in>X.\n       \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n           \\<^bold>\\<ddagger> P ts\n           \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n        q", "by blast+"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   (\\<^bold>\\<not> p)\n  \\<forall>q\\<in>X.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts\n         \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n      q\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   (\\<^bold>\\<not> p)\n  \\<forall>q\\<in>X.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts\n         \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n      q\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   (\\<^bold>\\<not> p)\n  \\<forall>q\\<in>X.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts\n         \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n      q", "have \\<open>\\<lbrakk>?H\\<rbrakk> p\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   (\\<^bold>\\<not> p)\n  \\<forall>q\\<in>X.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts\n         \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n      q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts\n        \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n     p", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   (\\<^bold>\\<not> p)\n  \\<forall>q\\<in>X.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts\n         \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n      q\n  \\<forall>E F G.\n     Ball X \\<lbrakk>E, F, G\\<rbrakk> \\<longrightarrow>\n     \\<lbrakk>E, F, G\\<rbrakk> p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n        \\<^bold>\\<ddagger> P ts\n        \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n     p", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   p\n\ngoal (1 subgoal):\n 1. \\<nexists>ps.\n       set ps \\<subseteq> X \\<and> (ps \\<turnstile> p) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   (\\<^bold>\\<not> p)\n  \\<forall>q\\<in>X.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts\n         \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n      q\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   p", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   (\\<^bold>\\<not> p)\n  \\<forall>q\\<in>X.\n     \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n         \\<^bold>\\<ddagger> P ts\n         \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n      q\n  \\<lbrakk>\\<^bold>#, \\<^bold>\\<dagger>, \\<lambda>P ts.\n      \\<^bold>\\<ddagger> P ts\n      \\<in> Extend ({\\<^bold>\\<not> p} \\<union> X) from_nat\\<rbrakk>\n   p\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem completeness:\n  fixes p :: \\<open>(nat, nat) fm\\<close>\n  assumes \\<open>\\<forall>(E :: nat \\<Rightarrow> nat tm) F G. \\<lbrakk>E, F, G\\<rbrakk> p\\<close>\n  shows \\<open>\\<turnstile> p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> p", "using assms imply_completeness[where X=\\<open>{}\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>E F G. \\<lbrakk>E, F, G\\<rbrakk> p\n  \\<lbrakk>\\<forall>E F G.\n              Ball {} \\<lbrakk>E, F, G\\<rbrakk> \\<longrightarrow>\n              \\<lbrakk>E, F, G\\<rbrakk> ?p;\n   finite (params {}); infinite UNIV\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ps.\n                       set ps \\<subseteq> {} \\<and> (ps \\<turnstile> ?p)\n\ngoal (1 subgoal):\n 1. \\<turnstile> p", "by auto"], ["", "section \\<open>Main Result\\<close>"], ["", "abbreviation valid :: \\<open>(nat, nat) fm \\<Rightarrow> bool\\<close> where\n  \\<open>valid p \\<equiv> \\<forall>(E :: nat \\<Rightarrow> nat tm) F G. \\<lbrakk>E, F, G\\<rbrakk> p\\<close>"], ["", "theorem main: \\<open>valid p \\<longleftrightarrow> (\\<turnstile> p)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. valid p = (\\<turnstile> p)", "using completeness soundness"], ["proof (prove)\nusing this:\n  valid ?p \\<Longrightarrow> \\<turnstile> ?p\n  \\<turnstile> ?p \\<Longrightarrow> \\<lbrakk>?E, ?F, ?G\\<rbrakk> ?p\n\ngoal (1 subgoal):\n 1. valid p = (\\<turnstile> p)", "by blast"], ["", "end"]]}