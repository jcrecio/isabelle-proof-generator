{"file_name": "/home/qj213/afp-2021-10-22/thys/BytecodeLogicJmlTypes/MultiStep.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/BytecodeLogicJmlTypes", "problem_names": ["lemma ZeroHeightMultiElimAux[rule_format]:\n  \"(M, l, s, k, ll, r) \\<in> MStep \\<Longrightarrow> 0=k \\<longrightarrow> (r=s \\<and> ll=l)\"", "lemma ZeroHeightMultiElim: \"(M,l,s,0,ll,r) \\<in> MStep \\<Longrightarrow> r=s \\<and> ll=l\"", "lemma MultiSplitAux[rule_format]:\n  \"(M, l, s, k, ll, t) \\<in> MStep \\<Longrightarrow> \n    1 \\<le> k \\<longrightarrow> (\\<exists> n m r l1. (M,l,s,n,l1,r):Step \\<and> \n                        (M,l1,r,m,ll,t):MStep \\<and> Suc m +n =k)\"", "lemma MultiSplit:\n  \"\\<lbrakk>(M, l, s, k, ll, t) \\<in> MStep; 1 \\<le> k\\<rbrakk> \\<Longrightarrow>\n  \\<exists> n m r l1. (M,l,s,n,l1,r):Step \\<and> (M,l1,r,m,ll,t):MStep \\<and> Suc m + n =k\"", "lemma MStep_returnElimAux[rule_format]:\n\"(M,l,s,k,ll,t) \\<in> MStep \\<Longrightarrow> \n (get_ins M l = Some vreturn \\<longrightarrow> t=s \\<and> ll=l)\"", "lemma MStep_returnElim:\n  \"\\<lbrakk>(M,l,s,k,ll,t) \\<in> MStep; get_ins M l = Some vreturn\\<rbrakk> \\<Longrightarrow> t=s \\<and> ll = l\"", "lemma MultiAppAux[rule_format]:\n\"(M,l,s,k,l1,r):MStep \\<Longrightarrow> \n  (\\<forall> n t l2. (M,l1,r,n,l2,t):Step \\<longrightarrow> (M,l,s,Suc k+n,l2,t):MStep)\"", "lemma MultiApp:\n  \"\\<lbrakk>(M,l,s,k,l1,r):MStep; (M,l1,r,n,l2,t):Step\\<rbrakk> \\<Longrightarrow> (M,l,s,Suc k+n,l2,t):MStep\"", "lemma MStep_Compose_Aux:\"(M,l,s,n,l1,r):MStep \\<Longrightarrow> (\\<forall> k t l2. (M,l1,r,k,l2,t):MStep \\<longrightarrow> (M,l,s,n + k,l2,t):MStep)\"", "lemma MStep_Compose:\n  \"\\<lbrakk>(M,l,s,n,l1,r):MStep; (M,l1,r,k,l2,t):MStep; nk=n+k\\<rbrakk> \n  \\<Longrightarrow> (M,l,s,nk,l2,t):MStep\"", "lemma MStep_Exec1_Aux[rule_format]:\n\"(M, l, s, kb, l1, t) \\<in> MStep \\<Longrightarrow> \n (\\<forall> hh v . (\\<exists> k . (M, l, s, k, hh, v) \\<in> Exec) \\<longrightarrow> (\\<exists> n. (M, l1, t, n, hh, v) \\<in> Exec))\"", "lemma MStep_Exec1:\n  \"\\<lbrakk>(M, l, s, kb, l1, t) \\<in> MStep; (M, l, s, k, hh, v) \\<in> Exec\\<rbrakk> \n  \\<Longrightarrow> \\<exists> n. (M, l1, t, n, hh, v) \\<in> Exec\"", "lemma MStep_Exec2_Aux[rule_format]:\n\"(M, l, s, kb, l1, t) \\<in> MStep \\<Longrightarrow> \n (\\<forall> hh v . (\\<exists> k . (M, l1, t, k, hh, v) \\<in> Exec) \\<longrightarrow> (\\<exists> n. (M, l, s, n, hh, v) \\<in> Exec))\"", "lemma MStep_Exec2:\n  \"\\<lbrakk> (M, l, s, kb, l1, t) \\<in> MStep; (M, l1, t, k, hh, v) \\<in> Exec\\<rbrakk> \n  \\<Longrightarrow> \\<exists> n. (M, l, s, n, hh, v) \\<in> Exec\""], "translations": [["", "lemma ZeroHeightMultiElimAux[rule_format]:\n  \"(M, l, s, k, ll, r) \\<in> MStep \\<Longrightarrow> 0=k \\<longrightarrow> (r=s \\<and> ll=l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, k, ll, r) \\<in> MStep \\<Longrightarrow>\n    0 = k \\<longrightarrow> r = s \\<and> ll = l", "by (erule MStep.induct, simp_all)"], ["", "(*>*)"], ["", "lemma ZeroHeightMultiElim: \"(M,l,s,0,ll,r) \\<in> MStep \\<Longrightarrow> r=s \\<and> ll=l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, 0, ll, r) \\<in> MStep \\<Longrightarrow> r = s \\<and> ll = l", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, 0, ll, r) \\<in> MStep \\<Longrightarrow> r = s \\<and> ll = l", "by (erule ZeroHeightMultiElimAux, simp)"], ["", "(*>*)\n(*<*)"], ["", "lemma MultiSplitAux[rule_format]:\n  \"(M, l, s, k, ll, t) \\<in> MStep \\<Longrightarrow> \n    1 \\<le> k \\<longrightarrow> (\\<exists> n m r l1. (M,l,s,n,l1,r):Step \\<and> \n                        (M,l1,r,m,ll,t):MStep \\<and> Suc m +n =k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, k, ll, t) \\<in> MStep \\<Longrightarrow>\n    1 \\<le> k \\<longrightarrow>\n    (\\<exists>n m r l1.\n        (M, l, s, n, l1, r) \\<in> Step \\<and>\n        (M, l1, r, m, ll, t) \\<in> MStep \\<and> Suc m + n = k)", "apply (erule MStep.induct, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m a aa b l1a.\n            (M, l1, r, n, l1a, a, aa, b) \\<in> Step \\<and>\n            (M, l1a, (a, aa, b), m, l2, t) \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        m = Suc (k + n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m a aa b l1.\n                            (M, l, s, na, l1, a, aa, b) \\<in> Step \\<and>\n                            (M, l1, (a, aa, b), m, l2, t) \\<in> MStep \\<and>\n                            m + na = k + n", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply (case_tac k, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb l2 af ag bc.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), 0, l2, af, ag, bc)\n        \\<in> MStep\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = n\n 2. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply (drule ZeroHeightMultiElim[simplified], clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       \\<exists>na m af ag bc l1a.\n          ((a, aa, b), l, (ab, ac, ba), na, l1a, af, ag, bc)\n          \\<in> Step \\<and>\n          ((a, aa, b), l1a, (af, ag, bc), m, l1, ad, ae, bb)\n          \\<in> MStep \\<and>\n          m + na = n\n 2. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply (rule, rule,rule, rule,rule, rule, rule, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       ((a, aa, b), l1, (ad, ae, bb), ?m16 a aa b l ab ac ba n l1 ad ae bb,\n        l1, ad, ae, bb)\n       \\<in> MStep \\<and>\n       ?m16 a aa b l ab ac ba n l1 ad ae bb + n = n\n 2. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply (rule,rule MS_zero)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       ?m16 a aa b l ab ac ba n l1 ad ae bb = 0\n 2. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       (ad, ae, bb) = (ad, ae, bb)\n 3. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       l1 = l1\n 4. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       ?m16 a aa b l ab ac ba n l1 ad ae bb + n = n\n 5. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       (ad, ae, bb) = (ad, ae, bb)\n 2. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       l1 = l1\n 3. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       0 + n = n\n 4. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       l1 = l1\n 2. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       0 + n = n\n 3. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb.\n       ((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb)\n       \\<in> Step \\<Longrightarrow>\n       0 + n = n\n 2. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na m ad ae bb l1.\n                            ((a, aa, b), l, (ab, ac, ba), na, l1, ad, ae,\n                             bb)\n                            \\<in> Step \\<and>\n                            ((a, aa, b), l1, (ad, ae, bb), m, l2, af, ag,\n                             bc)\n                            \\<in> MStep \\<and>\n                            m + na = k + n", "apply (rule, rule,rule, rule,rule, rule,rule,assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> ((a, aa, b), l1, (ad, ae, bb),\n                          ?m39 a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc\n                           nat,\n                          l2, af, ag, bc)\n                         \\<in> MStep \\<and>\n                         ?m39 a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc\n                          nat +\n                         n =\n                         k + n", "apply (rule,assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc nat.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        Suc 0 \\<le> k \\<longrightarrow>\n        (\\<exists>n m ab ac ba l1a.\n            ((a, aa, b), l1, (ad, ae, bb), n, l1a, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), l1a, (ab, ac, ba), m, l2, af, ag, bc)\n            \\<in> MStep \\<and>\n            Suc (m + n) = k);\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> k + n = k + n", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma MultiSplit:\n  \"\\<lbrakk>(M, l, s, k, ll, t) \\<in> MStep; 1 \\<le> k\\<rbrakk> \\<Longrightarrow>\n  \\<exists> n m r l1. (M,l,s,n,l1,r):Step \\<and> (M,l1,r,m,ll,t):MStep \\<and> Suc m + n =k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, k, ll, t) \\<in> MStep; 1 \\<le> k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n m r l1.\n                         (M, l, s, n, l1, r) \\<in> Step \\<and>\n                         (M, l1, r, m, ll, t) \\<in> MStep \\<and>\n                         Suc m + n = k", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, k, ll, t) \\<in> MStep; 1 \\<le> k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n m r l1.\n                         (M, l, s, n, l1, r) \\<in> Step \\<and>\n                         (M, l1, r, m, ll, t) \\<in> MStep \\<and>\n                         Suc m + n = k", "by (erule MultiSplitAux, assumption)"], ["", "(*>*)\n\n(*<*)"], ["", "lemma MStep_returnElimAux[rule_format]:\n\"(M,l,s,k,ll,t) \\<in> MStep \\<Longrightarrow> \n (get_ins M l = Some vreturn \\<longrightarrow> t=s \\<and> ll=l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, k, ll, t) \\<in> MStep \\<Longrightarrow>\n    get_ins M l = Some vreturn \\<longrightarrow> t = s \\<and> ll = l", "apply (erule MStep.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k t s ll l M.\n       \\<lbrakk>k = 0; t = s; ll = l\\<rbrakk>\n       \\<Longrightarrow> get_ins M l = Some vreturn \\<longrightarrow>\n                         t = s \\<and> ll = l\n 2. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        get_ins M l1 = Some vreturn \\<longrightarrow> t = r \\<and> l2 = l1;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> get_ins M l = Some vreturn \\<longrightarrow>\n                         t = s \\<and> l2 = l", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        get_ins M l1 = Some vreturn \\<longrightarrow> t = r \\<and> l2 = l1;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> get_ins M l = Some vreturn \\<longrightarrow>\n                         t = s \\<and> l2 = l", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc.\n       \\<lbrakk>((a, aa, b), l, (ab, ac, ba), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        get_ins (a, aa, b) l1 = Some vreturn \\<longrightarrow>\n        af = ad \\<and> ag = ae \\<and> bc = bb \\<and> l2 = l1;\n        get_ins (a, aa, b) l = Some vreturn\\<rbrakk>\n       \\<Longrightarrow> af = ab \\<and> ag = ac \\<and> bc = ba \\<and> l2 = l", "apply (drule RetElim1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc.\n       \\<lbrakk>((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc)\n                \\<in> MStep;\n        get_ins (a, aa, b) l1 = Some vreturn \\<longrightarrow>\n        af = ad \\<and> ag = ae \\<and> bc = bb \\<and> l2 = l1;\n        get_ins (a, aa, b) l = Some vreturn\\<rbrakk>\n       \\<Longrightarrow> get_ins (a, aa, b) l = Some vreturn\n 2. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc.\n       \\<lbrakk>((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc)\n                \\<in> MStep;\n        get_ins (a, aa, b) l1 = Some vreturn \\<longrightarrow>\n        af = ad \\<and> ag = ae \\<and> bc = bb \\<and> l2 = l1;\n        get_ins (a, aa, b) l = Some vreturn; False\\<rbrakk>\n       \\<Longrightarrow> af = ab \\<and> ag = ac \\<and> bc = ba \\<and> l2 = l", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc.\n       \\<lbrakk>((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc)\n                \\<in> MStep;\n        get_ins (a, aa, b) l1 = Some vreturn \\<longrightarrow>\n        af = ad \\<and> ag = ae \\<and> bc = bb \\<and> l2 = l1;\n        get_ins (a, aa, b) l = Some vreturn; False\\<rbrakk>\n       \\<Longrightarrow> af = ab \\<and> ag = ac \\<and> bc = ba \\<and> l2 = l", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma MStep_returnElim:\n  \"\\<lbrakk>(M,l,s,k,ll,t) \\<in> MStep; get_ins M l = Some vreturn\\<rbrakk> \\<Longrightarrow> t=s \\<and> ll = l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, k, ll, t) \\<in> MStep;\n     get_ins M l = Some vreturn\\<rbrakk>\n    \\<Longrightarrow> t = s \\<and> ll = l", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, k, ll, t) \\<in> MStep;\n     get_ins M l = Some vreturn\\<rbrakk>\n    \\<Longrightarrow> t = s \\<and> ll = l", "by (erule MStep_returnElimAux, assumption)"], ["", "(*>*)\n\n(*<*)"], ["", "lemma MultiAppAux[rule_format]:\n\"(M,l,s,k,l1,r):MStep \\<Longrightarrow> \n  (\\<forall> n t l2. (M,l1,r,n,l2,t):Step \\<longrightarrow> (M,l,s,Suc k+n,l2,t):MStep)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, k, l1, r) \\<in> MStep \\<Longrightarrow>\n    \\<forall>n t l2.\n       (M, l1, r, n, l2, t) \\<in> Step \\<longrightarrow>\n       (M, l, s, Suc k + n, l2, t) \\<in> MStep", "apply (erule MStep.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k t s ll l M.\n       \\<lbrakk>k = 0; t = s; ll = l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n ta l2.\n                            (M, ll, t, n, l2, ta)\n                            \\<in> Step \\<longrightarrow>\n                            (M, l, s, Suc k + n, l2, ta) \\<in> MStep\n 2. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n ta l2a.\n                            (M, l2, t, n, l2a, ta)\n                            \\<in> Step \\<longrightarrow>\n                            (M, l, s, Suc m + n, l2a, ta) \\<in> MStep", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ab ac ba l ad ae bb n af ag bc l2.\n       ((ad, ae, bb), l, (ab, ac, ba), n, l2, af, ag, bc)\n       \\<in> Step \\<Longrightarrow>\n       ((ad, ae, bb), l, (ab, ac, ba), Suc n, l2, af, ag, bc) \\<in> MStep\n 2. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n ta l2a.\n                            (M, l2, t, n, l2a, ta)\n                            \\<in> Step \\<longrightarrow>\n                            (M, l, s, Suc m + n, l2a, ta) \\<in> MStep", "apply (erule MS_step)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ab ac ba l ad ae bb n af ag bc l2.\n       ((ad, ae, bb), l2, (af, ag, bc),\n        ?k20 ab ac ba l ad ae bb n af ag bc l2, l2, af, ag, bc)\n       \\<in> MStep\n 2. \\<And>ab ac ba l ad ae bb n af ag bc l2.\n       Suc n = Suc (?k20 ab ac ba l ad ae bb n af ag bc l2) + n\n 3. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n ta l2a.\n                            (M, l2, t, n, l2a, ta)\n                            \\<in> Step \\<longrightarrow>\n                            (M, l, s, Suc m + n, l2a, ta) \\<in> MStep", "apply (rule MS_zero)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ab ac ba l ad ae bb n af ag bc l2.\n       ?k20 ab ac ba l ad ae bb n af ag bc l2 = 0\n 2. \\<And>ab ac ba l ad ae bb n af ag bc l2. (af, ag, bc) = (af, ag, bc)\n 3. \\<And>ab ac ba l ad ae bb n af ag bc l2. l2 = l2\n 4. \\<And>ab ac ba l ad ae bb n af ag bc l2.\n       Suc n = Suc (?k20 ab ac ba l ad ae bb n af ag bc l2) + n\n 5. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n ta l2a.\n                            (M, l2, t, n, l2a, ta)\n                            \\<in> Step \\<longrightarrow>\n                            (M, l, s, Suc m + n, l2a, ta) \\<in> MStep", "apply (simp,simp, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n ta l2a.\n                            (M, l2, t, n, l2a, ta)\n                            \\<in> Step \\<longrightarrow>\n                            (M, l, s, Suc m + n, l2a, ta) \\<in> MStep", "apply (rule, rule, rule, rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n; (M, l2, t, na, l2a, ta) \\<in> Step\\<rbrakk>\n       \\<Longrightarrow> (M, l, s, Suc m + na, l2a, ta) \\<in> MStep", "apply (erule MS_step)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n; (M, l2, t, na, l2a, ta) \\<in> Step\\<rbrakk>\n       \\<Longrightarrow> (M, l1, r, ?k36 M l s n l1 r k l2 t m na ta l2a,\n                          l2a, ta)\n                         \\<in> MStep\n 2. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n; (M, l2, t, na, l2a, ta) \\<in> Step\\<rbrakk>\n       \\<Longrightarrow> Suc m + na =\n                         Suc (?k36 M l s n l1 r k l2 t m na ta l2a) + n", "apply (erule_tac x=na in allE, erule_tac x=ta in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, na, l2a, ta) \\<in> Step;\n        \\<forall>l2a.\n           (M, l2, t, na, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + na, l2a, ta) \\<in> MStep\\<rbrakk>\n       \\<Longrightarrow> (M, l1, r, ?k36 M l s n l1 r k l2 t m na ta l2a,\n                          l2a, ta)\n                         \\<in> MStep\n 2. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n; (M, l2, t, na, l2a, ta) \\<in> Step\\<rbrakk>\n       \\<Longrightarrow> Suc m + na =\n                         Suc (?k36 M l s n l1 r k l2 t m na ta l2a) + n", "apply (erule_tac x=l2a in allE , erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, na, l2a, ta) \\<in> Step\\<rbrakk>\n       \\<Longrightarrow> (M, l2, t, na, l2a, ta) \\<in> Step\n 2. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, na, l2a, ta) \\<in> Step;\n        (M, l1, r, Suc k + na, l2a, ta) \\<in> MStep\\<rbrakk>\n       \\<Longrightarrow> (M, l1, r, ?k36 M l s n l1 r k l2 t m na ta l2a,\n                          l2a, ta)\n                         \\<in> MStep\n 3. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n; (M, l2, t, na, l2a, ta) \\<in> Step\\<rbrakk>\n       \\<Longrightarrow> Suc m + na =\n                         Suc (?k36 M l s n l1 r k l2 t m na ta l2a) + n", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, na, l2a, ta) \\<in> Step;\n        (M, l1, r, Suc k + na, l2a, ta) \\<in> MStep\\<rbrakk>\n       \\<Longrightarrow> (M, l1, r, ?k36 M l s n l1 r k l2 t m na ta l2a,\n                          l2a, ta)\n                         \\<in> MStep\n 2. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n; (M, l2, t, na, l2a, ta) \\<in> Step\\<rbrakk>\n       \\<Longrightarrow> Suc m + na =\n                         Suc (?k36 M l s n l1 r k l2 t m na ta l2a) + n", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m na ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>n ta l2a.\n           (M, l2, t, n, l2a, ta) \\<in> Step \\<longrightarrow>\n           (M, l1, r, Suc k + n, l2a, ta) \\<in> MStep;\n        m = Suc k + n; (M, l2, t, na, l2a, ta) \\<in> Step\\<rbrakk>\n       \\<Longrightarrow> Suc m + na = Suc (Suc k + na) + n", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma MultiApp:\n  \"\\<lbrakk>(M,l,s,k,l1,r):MStep; (M,l1,r,n,l2,t):Step\\<rbrakk> \\<Longrightarrow> (M,l,s,Suc k+n,l2,t):MStep\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, k, l1, r) \\<in> MStep;\n     (M, l1, r, n, l2, t) \\<in> Step\\<rbrakk>\n    \\<Longrightarrow> (M, l, s, Suc k + n, l2, t) \\<in> MStep", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, k, l1, r) \\<in> MStep;\n     (M, l1, r, n, l2, t) \\<in> Step\\<rbrakk>\n    \\<Longrightarrow> (M, l, s, Suc k + n, l2, t) \\<in> MStep", "by (erule MultiAppAux, assumption)"], ["", "(*>*)\n\n(*<*)"], ["", "lemma MStep_Compose_Aux:\"(M,l,s,n,l1,r):MStep \\<Longrightarrow> (\\<forall> k t l2. (M,l1,r,k,l2,t):MStep \\<longrightarrow> (M,l,s,n + k,l2,t):MStep)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, n, l1, r) \\<in> MStep \\<Longrightarrow>\n    \\<forall>k t l2.\n       (M, l1, r, k, l2, t) \\<in> MStep \\<longrightarrow>\n       (M, l, s, n + k, l2, t) \\<in> MStep", "apply (erule MStep.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k t s ll l M.\n       \\<lbrakk>k = 0; t = s; ll = l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ka ta l2.\n                            (M, ll, t, ka, l2, ta)\n                            \\<in> MStep \\<longrightarrow>\n                            (M, l, s, k + ka, l2, ta) \\<in> MStep\n 2. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>ka ta l2a.\n           (M, l2, t, ka, l2a, ta) \\<in> MStep \\<longrightarrow>\n           (M, l1, r, k + ka, l2a, ta) \\<in> MStep;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k ta l2a.\n                            (M, l2, t, k, l2a, ta)\n                            \\<in> MStep \\<longrightarrow>\n                            (M, l, s, m + k, l2a, ta) \\<in> MStep", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>ka ta l2a.\n           (M, l2, t, ka, l2a, ta) \\<in> MStep \\<longrightarrow>\n           (M, l1, r, k + ka, l2a, ta) \\<in> MStep;\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k ta l2a.\n                            (M, l2, t, k, l2a, ta)\n                            \\<in> MStep \\<longrightarrow>\n                            (M, l, s, m + k, l2a, ta) \\<in> MStep", "apply (rule, rule, rule, rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m ka ta l2a.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>ka ta l2a.\n           (M, l2, t, ka, l2a, ta) \\<in> MStep \\<longrightarrow>\n           (M, l1, r, k + ka, l2a, ta) \\<in> MStep;\n        m = Suc k + n; (M, l2, t, ka, l2a, ta) \\<in> MStep\\<rbrakk>\n       \\<Longrightarrow> (M, l, s, m + ka, l2a, ta) \\<in> MStep", "apply (erule_tac x=ka in allE, erule_tac x=ta in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m ka ta l2a.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, l2a, ta) \\<in> MStep;\n        \\<forall>l2a.\n           (M, l2, t, ka, l2a, ta) \\<in> MStep \\<longrightarrow>\n           (M, l1, r, k + ka, l2a, ta) \\<in> MStep\\<rbrakk>\n       \\<Longrightarrow> (M, l, s, m + ka, l2a, ta) \\<in> MStep", "apply (erule_tac x=l2a in allE, erule impE, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m ka ta l2a.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, l2a, ta) \\<in> MStep;\n        (M, l1, r, k + ka, l2a, ta) \\<in> MStep\\<rbrakk>\n       \\<Longrightarrow> (M, l, s, m + ka, l2a, ta) \\<in> MStep", "apply (erule MS_step, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m ka ta l2a.\n       \\<lbrakk>(M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, l2a, ta) \\<in> MStep;\n        (M, l1, r, k + ka, l2a, ta) \\<in> MStep\\<rbrakk>\n       \\<Longrightarrow> m + ka = Suc (k + ka) + n", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma MStep_Compose:\n  \"\\<lbrakk>(M,l,s,n,l1,r):MStep; (M,l1,r,k,l2,t):MStep; nk=n+k\\<rbrakk> \n  \\<Longrightarrow> (M,l,s,nk,l2,t):MStep\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, n, l1, r) \\<in> MStep;\n     (M, l1, r, k, l2, t) \\<in> MStep; nk = n + k\\<rbrakk>\n    \\<Longrightarrow> (M, l, s, nk, l2, t) \\<in> MStep", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, n, l1, r) \\<in> MStep;\n     (M, l1, r, k, l2, t) \\<in> MStep; nk = n + k\\<rbrakk>\n    \\<Longrightarrow> (M, l, s, nk, l2, t) \\<in> MStep", "by (drule MStep_Compose_Aux, fastforce)"], ["", "(*>*)"], ["", "text\\<open>Here are two simple lemmas relating the operational judgements.\\<close>"], ["", "(*<*)"], ["", "lemma MStep_Exec1_Aux[rule_format]:\n\"(M, l, s, kb, l1, t) \\<in> MStep \\<Longrightarrow> \n (\\<forall> hh v . (\\<exists> k . (M, l, s, k, hh, v) \\<in> Exec) \\<longrightarrow> (\\<exists> n. (M, l1, t, n, hh, v) \\<in> Exec))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, kb, l1, t) \\<in> MStep \\<Longrightarrow>\n    \\<forall>hh v.\n       (\\<exists>k. (M, l, s, k, hh, v) \\<in> Exec) \\<longrightarrow>\n       (\\<exists>n. (M, l1, t, n, hh, v) \\<in> Exec)", "apply (erule MStep.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k t s ll l M.\n       \\<lbrakk>k = 0; t = s; ll = l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>hh v.\n                            (\\<exists>k.\n                                (M, l, s, k, hh, v)\n                                \\<in> Exec) \\<longrightarrow>\n                            (\\<exists>n. (M, ll, t, n, hh, v) \\<in> Exec)\n 2. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>hh v.\n           (\\<exists>k. (M, l1, r, k, hh, v) \\<in> Exec) \\<longrightarrow>\n           (\\<exists>n. (M, l2, t, n, hh, v) \\<in> Exec);\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>hh v.\n                            (\\<exists>k.\n                                (M, l, s, k, hh, v)\n                                \\<in> Exec) \\<longrightarrow>\n                            (\\<exists>n. (M, l2, t, n, hh, v) \\<in> Exec)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>hh v.\n           (\\<exists>k. (M, l1, r, k, hh, v) \\<in> Exec) \\<longrightarrow>\n           (\\<exists>n. (M, l2, t, n, hh, v) \\<in> Exec);\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>hh v.\n                            (\\<exists>k.\n                                (M, l, s, k, hh, v)\n                                \\<in> Exec) \\<longrightarrow>\n                            (\\<exists>n. (M, l2, t, n, hh, v) \\<in> Exec)", "apply (rule, rule, rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m hh v.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>hh v.\n           (\\<exists>k. (M, l1, r, k, hh, v) \\<in> Exec) \\<longrightarrow>\n           (\\<exists>n. (M, l2, t, n, hh, v) \\<in> Exec);\n        m = Suc k + n; \\<exists>k. (M, l, s, k, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. (M, l2, t, n, hh, v) \\<in> Exec", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m hh v ka.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>hh v.\n           (\\<exists>k. (M, l1, r, k, hh, v) \\<in> Exec) \\<longrightarrow>\n           (\\<exists>n. (M, l2, t, n, hh, v) \\<in> Exec);\n        m = Suc k + n; (M, l, s, ka, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. (M, l2, t, n, hh, v) \\<in> Exec", "apply (erule_tac x=hh in allE, erule_tac x=v in allE, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m hh v ka.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l, s, ka, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. (M, l1, r, k, hh, v) \\<in> Exec", "apply (case_tac s, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l ab ac ba n l1 ad ae bb k l2 af ag bc m hh v ka ah bd c.\n       \\<lbrakk>((a, aa, b), l, (ah, bd, c), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        ((a, aa, b), l, (ah, bd, c), ka, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec", "apply (drule ExecElim1, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l n l1 ad ae bb k l2 af ag bc hh v ka ah bd c.\n       \\<lbrakk>((a, aa, b), l, (ah, bd, c), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        get_ins (a, aa, b) l = Some vreturn \\<and>\n        (\\<exists>ops. ah = v # ops) \\<and> ka = Suc 0 \\<and> hh = c \\<or>\n        (\\<exists>n m ab ac ba ll.\n            ((a, aa, b), l, (ah, bd, c), n, ll, ab, ac, ba)\n            \\<in> Step \\<and>\n            ((a, aa, b), ll, (ab, ac, ba), m, hh, v) \\<in> Exec \\<and>\n            ka = Suc (max n m))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa b l n l1 ad ae bb k l2 af ag bc hh v ka ah bd c.\n       \\<lbrakk>((a, aa, b), l, (ah, bd, c), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        get_ins (a, aa, b) l = Some vreturn \\<and>\n        (\\<exists>ops. ah = v # ops) \\<and>\n        ka = Suc 0 \\<and> hh = c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec\n 2. \\<And>a aa b l n l1 ad ae bb k l2 af ag bc hh v ka ah bd c.\n       \\<lbrakk>((a, aa, b), l, (ah, bd, c), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        \\<exists>n m ab ac ba ll.\n           ((a, aa, b), l, (ah, bd, c), n, ll, ab, ac, ba) \\<in> Step \\<and>\n           ((a, aa, b), ll, (ab, ac, ba), m, hh, v) \\<in> Exec \\<and>\n           ka = Suc (max n m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa b l n l1 ad ae bb k l2 af ag bc hh v bd ops.\n       \\<lbrakk>((a, aa, b), l, (v # ops, bd, hh), n, l1, ad, ae, bb)\n                \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        get_ins (a, aa, b) l = Some vreturn\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec\n 2. \\<And>a aa b l n l1 ad ae bb k l2 af ag bc hh v ka ah bd c.\n       \\<lbrakk>((a, aa, b), l, (ah, bd, c), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        \\<exists>n m ab ac ba ll.\n           ((a, aa, b), l, (ah, bd, c), n, ll, ab, ac, ba) \\<in> Step \\<and>\n           ((a, aa, b), ll, (ab, ac, ba), m, hh, v) \\<in> Exec \\<and>\n           ka = Suc (max n m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec", "apply (drule RetElim1, simp,simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l n l1 ad ae bb k l2 af ag bc hh v ka ah bd c.\n       \\<lbrakk>((a, aa, b), l, (ah, bd, c), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        \\<exists>n m ab ac ba ll.\n           ((a, aa, b), l, (ah, bd, c), n, ll, ab, ac, ba) \\<in> Step \\<and>\n           ((a, aa, b), ll, (ab, ac, ba), m, hh, v) \\<in> Exec \\<and>\n           ka = Suc (max n m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l n l1 ad ae bb k l2 af ag bc hh v ah bd c na m ab ac ba\n       ll.\n       \\<lbrakk>((a, aa, b), l, (ah, bd, c), n, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc) \\<in> MStep;\n        ((a, aa, b), l, (ah, bd, c), na, ll, ab, ac, ba) \\<in> Step;\n        ((a, aa, b), ll, (ab, ac, ba), m, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec", "apply (drule Step_determ, assumption, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b l l1 ad ae bb k l2 af ag bc hh v ah bd c na m.\n       \\<lbrakk>((a, aa, b), l1, (ad, ae, bb), k, l2, af, ag, bc)\n                \\<in> MStep;\n        ((a, aa, b), l, (ah, bd, c), na, l1, ad, ae, bb) \\<in> Step;\n        ((a, aa, b), l1, (ad, ae, bb), m, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            ((a, aa, b), l1, (ad, ae, bb), k, hh, v)\n                            \\<in> Exec", "apply (rule, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma MStep_Exec1:\n  \"\\<lbrakk>(M, l, s, kb, l1, t) \\<in> MStep; (M, l, s, k, hh, v) \\<in> Exec\\<rbrakk> \n  \\<Longrightarrow> \\<exists> n. (M, l1, t, n, hh, v) \\<in> Exec\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, kb, l1, t) \\<in> MStep;\n     (M, l, s, k, hh, v) \\<in> Exec\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. (M, l1, t, n, hh, v) \\<in> Exec", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, kb, l1, t) \\<in> MStep;\n     (M, l, s, k, hh, v) \\<in> Exec\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. (M, l1, t, n, hh, v) \\<in> Exec", "by (erule MStep_Exec1_Aux, fast)"], ["", "(*>*)\n\n(*<*)"], ["", "lemma MStep_Exec2_Aux[rule_format]:\n\"(M, l, s, kb, l1, t) \\<in> MStep \\<Longrightarrow> \n (\\<forall> hh v . (\\<exists> k . (M, l1, t, k, hh, v) \\<in> Exec) \\<longrightarrow> (\\<exists> n. (M, l, s, n, hh, v) \\<in> Exec))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, l, s, kb, l1, t) \\<in> MStep \\<Longrightarrow>\n    \\<forall>hh v.\n       (\\<exists>k. (M, l1, t, k, hh, v) \\<in> Exec) \\<longrightarrow>\n       (\\<exists>n. (M, l, s, n, hh, v) \\<in> Exec)", "apply (erule MStep.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k t s ll l M.\n       \\<lbrakk>k = 0; t = s; ll = l\\<rbrakk>\n       \\<Longrightarrow> \\<forall>hh v.\n                            (\\<exists>k.\n                                (M, ll, t, k, hh, v)\n                                \\<in> Exec) \\<longrightarrow>\n                            (\\<exists>n. (M, l, s, n, hh, v) \\<in> Exec)\n 2. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>hh v.\n           (\\<exists>k. (M, l2, t, k, hh, v) \\<in> Exec) \\<longrightarrow>\n           (\\<exists>n. (M, l1, r, n, hh, v) \\<in> Exec);\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>hh v.\n                            (\\<exists>k.\n                                (M, l2, t, k, hh, v)\n                                \\<in> Exec) \\<longrightarrow>\n                            (\\<exists>n. (M, l, s, n, hh, v) \\<in> Exec)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>hh v.\n           (\\<exists>k. (M, l2, t, k, hh, v) \\<in> Exec) \\<longrightarrow>\n           (\\<exists>n. (M, l1, r, n, hh, v) \\<in> Exec);\n        m = Suc k + n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>hh v.\n                            (\\<exists>k.\n                                (M, l2, t, k, hh, v)\n                                \\<in> Exec) \\<longrightarrow>\n                            (\\<exists>n. (M, l, s, n, hh, v) \\<in> Exec)", "apply (rule, rule, rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m hh v.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>hh v.\n           (\\<exists>k. (M, l2, t, k, hh, v) \\<in> Exec) \\<longrightarrow>\n           (\\<exists>n. (M, l1, r, n, hh, v) \\<in> Exec);\n        m = Suc k + n; \\<exists>k. (M, l2, t, k, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. (M, l, s, n, hh, v) \\<in> Exec", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m hh v ka.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep;\n        \\<forall>hh v.\n           (\\<exists>k. (M, l2, t, k, hh, v) \\<in> Exec) \\<longrightarrow>\n           (\\<exists>n. (M, l1, r, n, hh, v) \\<in> Exec);\n        m = Suc k + n; (M, l2, t, ka, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. (M, l, s, n, hh, v) \\<in> Exec", "apply (erule_tac x=hh in allE, erule_tac x=v in allE, erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M l s n l1 r k l2 t m hh v ka.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. (M, l2, t, k, hh, v) \\<in> Exec\n 2. \\<And>M l s n l1 r k l2 t m hh v ka.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, hh, v) \\<in> Exec;\n        \\<exists>n. (M, l1, r, n, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. (M, l, s, n, hh, v) \\<in> Exec", "apply (rule, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m hh v ka.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, hh, v) \\<in> Exec;\n        \\<exists>n. (M, l1, r, n, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. (M, l, s, n, hh, v) \\<in> Exec", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m hh v ka na.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, hh, v) \\<in> Exec;\n        (M, l1, r, na, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. (M, l, s, n, hh, v) \\<in> Exec", "apply (rule, rule Run)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>M l s n l1 r k l2 t m hh v ka na.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, hh, v) \\<in> Exec;\n        (M, l1, r, na, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> (M, l, s, ?n22 M l s n l1 r k l2 t m hh v ka na,\n                          ?ll22 M l s n l1 r k l2 t m hh v ka na,\n                          ?t22 M l s n l1 r k l2 t m hh v ka na)\n                         \\<in> Step\n 2. \\<And>M l s n l1 r k l2 t m hh v ka na.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, hh, v) \\<in> Exec;\n        (M, l1, r, na, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> (M, ?ll22 M l s n l1 r k l2 t m hh v ka na,\n                          ?t22 M l s n l1 r k l2 t m hh v ka na,\n                          ?m22 M l s n l1 r k l2 t m hh v ka na, hh, v)\n                         \\<in> Exec\n 3. \\<And>M l s n l1 r k l2 t m hh v ka na.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, hh, v) \\<in> Exec;\n        (M, l1, r, na, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> ?n20 M l s n l1 r k l2 t m hh v ka na =\n                         max (?n22 M l s n l1 r k l2 t m hh v ka na)\n                          (?m22 M l s n l1 r k l2 t m hh v ka na) +\n                         1", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M l s n l1 r k l2 t m hh v ka na.\n       \\<lbrakk>(M, l, s, n, l1, r) \\<in> Step;\n        (M, l1, r, k, l2, t) \\<in> MStep; m = Suc k + n;\n        (M, l2, t, ka, hh, v) \\<in> Exec;\n        (M, l1, r, na, hh, v) \\<in> Exec\\<rbrakk>\n       \\<Longrightarrow> ?n20 M l s n l1 r k l2 t m hh v ka na =\n                         max n na + 1", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma MStep_Exec2:\n  \"\\<lbrakk> (M, l, s, kb, l1, t) \\<in> MStep; (M, l1, t, k, hh, v) \\<in> Exec\\<rbrakk> \n  \\<Longrightarrow> \\<exists> n. (M, l, s, n, hh, v) \\<in> Exec\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, kb, l1, t) \\<in> MStep;\n     (M, l1, t, k, hh, v) \\<in> Exec\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. (M, l, s, n, hh, v) \\<in> Exec", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(M, l, s, kb, l1, t) \\<in> MStep;\n     (M, l1, t, k, hh, v) \\<in> Exec\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. (M, l, s, n, hh, v) \\<in> Exec", "by (erule MStep_Exec2_Aux, fast)"], ["", "(*>*)"], ["", "text\\<open>Finally, the definition of the non-height-indexed relation.\\<close>"], ["", "definition MS::\"Mbody \\<Rightarrow> Label \\<Rightarrow> State \\<Rightarrow> Label \\<Rightarrow> State \\<Rightarrow> bool\"\nwhere \"MS M l s ll t = (\\<exists> k . (M,l,s,k,ll,t):MStep)\""], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}