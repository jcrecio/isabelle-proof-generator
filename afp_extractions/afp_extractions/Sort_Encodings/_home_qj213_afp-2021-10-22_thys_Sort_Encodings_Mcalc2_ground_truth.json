{"file_name": "/home/qj213/afp-2021-10-22/thys/Sort_Encodings/Mcalc2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Sort_Encodings", "problem_names": ["lemma in_nv2T: \"x \\<in> nv2T T \\<longleftrightarrow> T = Var x\"", "lemma nv2T_vars[simp]: \"x \\<in> nv2T T \\<Longrightarrow> x \\<in> vars T\"", "lemma nv2L_varsL[simp]:\nassumes \"x \\<in> nv2L l\" shows \"x \\<in> varsL l\"", "lemma nv2C_varsC[simp]: \"x \\<in> nv2C c \\<Longrightarrow> x \\<in> varsC c\"", "lemma mcalc2_iff:\n\"\\<sigma> \\<turnstile>2 c \\<longleftrightarrow>\n infTp \\<sigma> \\<or> (\\<forall> l x. l \\<in> set c \\<and> x \\<in> nv2L l \\<and> tpOfV x = \\<sigma> \\<longrightarrow> isGuard x (grdOf c l x))\"", "lemma wtL_grdOf[simp]:\nassumes \"c \\<in> \\<Phi>\" and \"l \\<in> set c\" and \"x \\<in> nv2L l\" and \"\\<not> infTp (tpOfV x)\"\nshows \"wtL (grdOf c l x)\""], "translations": [["", "lemma in_nv2T: \"x \\<in> nv2T T \\<longleftrightarrow> T = Var x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> nv2T T) = (T = Var x)", "apply(cases T)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1. T = Var x1 \\<Longrightarrow> (x \\<in> nv2T T) = (T = Var x)\n 2. \\<And>x21 x22.\n       T = Fn x21 x22 \\<Longrightarrow> (x \\<in> nv2T T) = (T = Var x)", "apply (metis equals0D nv2T.simps singleton_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       T = Fn x21 x22 \\<Longrightarrow> (x \\<in> nv2T T) = (T = Var x)", "by simp"], ["", "lemma nv2T_vars[simp]: \"x \\<in> nv2T T \\<Longrightarrow> x \\<in> vars T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> nv2T T \\<Longrightarrow> x \\<in> vars T", "by (induct T, auto split: if_splits)"], ["", "lemma nv2L_varsL[simp]:\nassumes \"x \\<in> nv2L l\" shows \"x \\<in> varsL l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> varsL l", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. l = Pos x1 \\<Longrightarrow> x \\<in> varsL l\n 2. \\<And>x2. l = Neg x2 \\<Longrightarrow> x \\<in> varsL l", "case (Pos at)"], ["proof (state)\nthis:\n  l = Pos at\n\ngoal (2 subgoals):\n 1. \\<And>x1. l = Pos x1 \\<Longrightarrow> x \\<in> varsL l\n 2. \\<And>x2. l = Neg x2 \\<Longrightarrow> x \\<in> varsL l", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> varsL l", "proof(cases at)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12. at = Eq x11 x12 \\<Longrightarrow> x \\<in> varsL l\n 2. \\<And>x21 x22. at = Pr x21 x22 \\<Longrightarrow> x \\<in> varsL l", "case (Pr p Tl)"], ["proof (state)\nthis:\n  at = Pr p Tl\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12. at = Eq x11 x12 \\<Longrightarrow> x \\<in> varsL l\n 2. \\<And>x21 x22. at = Pr x21 x22 \\<Longrightarrow> x \\<in> varsL l", "thus ?thesis"], ["proof (prove)\nusing this:\n  at = Pr p Tl\n\ngoal (1 subgoal):\n 1. x \\<in> varsL l", "using assms"], ["proof (prove)\nusing this:\n  at = Pr p Tl\n  x \\<in> nv2L l\n\ngoal (1 subgoal):\n 1. x \\<in> varsL l", "unfolding Pos"], ["proof (prove)\nusing this:\n  at = Pr p Tl\n  x \\<in> nv2L (Pos at)\n\ngoal (1 subgoal):\n 1. x \\<in> varsL (Pos at)", "apply(cases \"pol (tpOfV x) p\", simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>xa\\<in>set Tl. x \\<in> nv2T xa;\n     pol (tpOfV x) p = Fext; at = Pr p Tl\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xa\\<in>set Tl. x \\<in> vars xa", "by (metis nv2T_vars)"], ["proof (state)\nthis:\n  x \\<in> varsL l\n\ngoal (1 subgoal):\n 1. \\<And>x11 x12. at = Eq x11 x12 \\<Longrightarrow> x \\<in> varsL l", "qed(insert assms, unfold Pos, auto)"], ["proof (state)\nthis:\n  x \\<in> varsL l\n\ngoal (1 subgoal):\n 1. \\<And>x2. l = Neg x2 \\<Longrightarrow> x \\<in> varsL l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. l = Neg x2 \\<Longrightarrow> x \\<in> varsL l", "case (Neg at)"], ["proof (state)\nthis:\n  l = Neg at\n\ngoal (1 subgoal):\n 1. \\<And>x2. l = Neg x2 \\<Longrightarrow> x \\<in> varsL l", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> varsL l", "proof(cases at)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12. at = Eq x11 x12 \\<Longrightarrow> x \\<in> varsL l\n 2. \\<And>x21 x22. at = Pr x21 x22 \\<Longrightarrow> x \\<in> varsL l", "case (Pr p Tl)"], ["proof (state)\nthis:\n  at = Pr p Tl\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12. at = Eq x11 x12 \\<Longrightarrow> x \\<in> varsL l\n 2. \\<And>x21 x22. at = Pr x21 x22 \\<Longrightarrow> x \\<in> varsL l", "thus ?thesis"], ["proof (prove)\nusing this:\n  at = Pr p Tl\n\ngoal (1 subgoal):\n 1. x \\<in> varsL l", "using assms"], ["proof (prove)\nusing this:\n  at = Pr p Tl\n  x \\<in> nv2L l\n\ngoal (1 subgoal):\n 1. x \\<in> varsL l", "unfolding Neg"], ["proof (prove)\nusing this:\n  at = Pr p Tl\n  x \\<in> nv2L (Neg at)\n\ngoal (1 subgoal):\n 1. x \\<in> varsL (Neg at)", "apply(cases \"pol (tpOfV x) p\", simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>xa\\<in>set Tl. x \\<in> nv2T xa;\n     pol (tpOfV x) p = Text; at = Pr p Tl\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xa\\<in>set Tl. x \\<in> vars xa", "by (metis nv2T_vars)"], ["proof (state)\nthis:\n  x \\<in> varsL l\n\ngoal (1 subgoal):\n 1. \\<And>x11 x12. at = Eq x11 x12 \\<Longrightarrow> x \\<in> varsL l", "qed(insert assms, unfold Neg, auto)"], ["proof (state)\nthis:\n  x \\<in> varsL l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nv2C_varsC[simp]: \"x \\<in> nv2C c \\<Longrightarrow> x \\<in> varsC c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> nv2C c \\<Longrightarrow> x \\<in> varsC c", "unfolding varsC_def nv2C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<Union> (set (map nv2L c)) \\<Longrightarrow>\n    x \\<in> \\<Union> (set (map varsL c))", "by (induct c, auto)"], ["", "subsection\\<open>The calculus\\<close>"], ["", "text\\<open>The notion of a literal being a guard for a (typed) variable:\\<close>"], ["", "fun isGuard :: \"var \\<Rightarrow> ('fsym,'psym) lit \\<Rightarrow> bool\" where\n\"isGuard x (Pos (Eq T1 T2)) \\<longleftrightarrow> False\"\n|\n\"isGuard x (Neg (Eq T1 T2)) \\<longleftrightarrow>\n (T1 = Var x \\<and> (\\<exists> f Tl. T2 = Fn f Tl)) \\<or>\n (T2 = Var x \\<and> (\\<exists> f Tl. T1 = Fn f Tl))\"\n|\n\"isGuard x (Pos (Pr p Tl)) \\<longleftrightarrow> x \\<in> \\<Union> (set (map nv2T Tl)) \\<and> pol (tpOfV x) p = Text\"\n|\n\"isGuard x (Neg (Pr p Tl)) \\<longleftrightarrow> x \\<in> \\<Union> (set (map nv2T Tl)) \\<and> pol (tpOfV x) p = Fext\""], ["", "text\\<open>The monotonicity calculus from the Classen et. al. paper, applied\nto non-infinite types only: it checks that any variable in any literal of any clause\nis indeed guarded by its guard:\\<close>"], ["", "inductive mcalc2 (infix \"\\<turnstile>2\" 40) where\n [simp]: \"infTp \\<sigma> \\<Longrightarrow> \\<sigma> \\<turnstile>2 c\"\n|[simp]: \"(\\<And> l x. \\<lbrakk>l \\<in> set c; x \\<in> nv2L l; tpOfV x = \\<sigma>\\<rbrakk>\n         \\<Longrightarrow> isGuard x (grdOf c l x)) \\<Longrightarrow> \\<sigma> \\<turnstile>2 c\""], ["", "lemma mcalc2_iff:\n\"\\<sigma> \\<turnstile>2 c \\<longleftrightarrow>\n infTp \\<sigma> \\<or> (\\<forall> l x. l \\<in> set c \\<and> x \\<in> nv2L l \\<and> tpOfV x = \\<sigma> \\<longrightarrow> isGuard x (grdOf c l x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma> \\<turnstile>2 c) =\n    (infTp \\<sigma> \\<or>\n     (\\<forall>l x.\n         l \\<in> set c \\<and>\n         x \\<in> nv2L l \\<and> tpOfV x = \\<sigma> \\<longrightarrow>\n         isGuard x (grdOf c l x)))", "unfolding mcalc2.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>\\<sigma>' ca.\n         \\<sigma> = \\<sigma>' \\<and> c = ca \\<and> infTp \\<sigma>') \\<or>\n     (\\<exists>ca \\<sigma>'.\n         \\<sigma> = \\<sigma>' \\<and>\n         c = ca \\<and>\n         (\\<forall>x xa.\n             x \\<in> set ca \\<longrightarrow>\n             xa \\<in> nv2L x \\<longrightarrow>\n             tpOfV xa = \\<sigma>' \\<longrightarrow>\n             isGuard xa (grdOf ca x xa)))) =\n    (infTp \\<sigma> \\<or>\n     (\\<forall>l x.\n         l \\<in> set c \\<and>\n         x \\<in> nv2L l \\<and> tpOfV x = \\<sigma> \\<longrightarrow>\n         isGuard x (grdOf c l x)))", "by auto"], ["", "end"], ["", "(* context ProblemIk *)"], ["", "locale ProblemIkPolMcalc2 = ProblemIkPol wtFsym wtPsym arOf resOf parOf \\<Phi> infTp pol grdOf\nfor wtFsym :: \"'fsym \\<Rightarrow> bool\" and wtPsym :: \"'psym \\<Rightarrow> bool\"\nand arOf :: \"'fsym \\<Rightarrow> 'tp list\"\nand resOf and parOf and \\<Phi> and infTp and pol and grdOf\n+ assumes\n(* well-definednedd of the guard: *)\n    grdOf: \"\\<And> c l x. \\<lbrakk>c \\<in> \\<Phi>; l \\<in> set c; x \\<in> nv2L l; \\<not> infTp (tpOfV x)\\<rbrakk>\n                     \\<Longrightarrow> grdOf c l x \\<in> set c\"\nand mcalc2: \"\\<And> \\<sigma> c. c \\<in> \\<Phi> \\<Longrightarrow> \\<sigma> \\<turnstile>2 c\"\nbegin"], ["", "lemma wtL_grdOf[simp]:\nassumes \"c \\<in> \\<Phi>\" and \"l \\<in> set c\" and \"x \\<in> nv2L l\" and \"\\<not> infTp (tpOfV x)\"\nshows \"wtL (grdOf c l x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wtL (grdOf c l x)", "using grdOf[OF assms]"], ["proof (prove)\nusing this:\n  grdOf c l x \\<in> set c\n\ngoal (1 subgoal):\n 1. wtL (grdOf c l x)", "by (metis assms list_all_iff wtC_def wtPB_def wt_\\<Phi>)"], ["", "end"], ["", "locale ModelIkPolMcalc2 =\nModelIk wtFsym wtPsym arOf resOf parOf \\<Phi> infTp intT intF intP +\nProblemIkPolMcalc2 wtFsym wtPsym arOf resOf parOf \\<Phi> infTp pol grdOf\nfor wtFsym :: \"'fsym \\<Rightarrow> bool\" and wtPsym :: \"'psym \\<Rightarrow> bool\"\nand arOf :: \"'fsym \\<Rightarrow> 'tp list\"\nand resOf and parOf and \\<Phi> and infTp pol and grdOf and intT and intF and intP"], ["", "end"]]}