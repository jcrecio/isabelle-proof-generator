{"file_name": "/home/qj213/afp-2021-10-22/thys/Sort_Encodings/E.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Sort_Encodings", "problem_names": ["lemma wt[simp]: \"M.wt T \\<Longrightarrow> wt T\"", "lemma wtA[simp]: \"M.wtA at \\<Longrightarrow> wtA at\"", "lemma wtL[simp]: \"M.wtL l \\<Longrightarrow> wtL l\"", "lemma wtC[simp]: \"M.wtC c \\<Longrightarrow> wtC c\"", "lemma wtPB[simp]: \"M.wtPB \\<Phi> \\<Longrightarrow> wtPB \\<Phi>\"", "lemma wtE[simp]: \"M.wtE \\<xi> \\<Longrightarrow> U.wtE \\<xi>\"", "lemma int_e[simp]: \"U.int \\<xi> T = M.int \\<xi> T\"", "lemma int_o_e[simp]: \"U.int \\<xi> = M.int \\<xi>\"", "lemma satA_e[simp]: \"U.satA \\<xi> at \\<longleftrightarrow> M.satA \\<xi> at\"", "lemma satL_e[simp]: \"U.satL \\<xi> l \\<longleftrightarrow> M.satL \\<xi> l\"", "lemma satC_e[simp]: \"U.satC \\<xi> c \\<longleftrightarrow> M.satC \\<xi> c\"", "lemma satPB_e[simp]: \"U.satPB \\<xi> \\<Phi> \\<longleftrightarrow> M.satPB \\<xi> \\<Phi>\"", "theorem completeness:\nassumes \"U.SAT \\<Phi>\"  shows \"M.SAT \\<Phi>\"", "theorem M_U_completeness: \"MModel (\\<lambda>\\<sigma>::'tp. D) intF intP\"", "lemma wtE[simp]: \"U.wtE \\<xi> \\<Longrightarrow> F.wtE \\<xi>\"", "lemma int_e[simp]: \"U.int \\<xi> T = F.int \\<xi> T\"", "lemma int_o_e[simp]: \"U.int \\<xi> = F.int \\<xi>\"", "lemma satA_e[simp]: \"U.satA \\<xi> at \\<longleftrightarrow> F.satA \\<xi> at\"", "lemma satL_e[simp]: \"U.satL \\<xi> l \\<longleftrightarrow> F.satL \\<xi> l\"", "lemma satC_e[simp]: \"U.satC \\<xi> c \\<longleftrightarrow> F.satC \\<xi> c\"", "lemma satPB_e[simp]: \"U.satPB \\<xi> \\<Phi> \\<longleftrightarrow> F.satPB \\<xi> \\<Phi>\"", "theorem soundness: \"U.SAT \\<Phi>\"", "lemma U_Model:\n\"CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf) \\<Phi> (intT any) intF intP\"", "theorem M_U_soundness:\n\"CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf) \\<Phi>\n  (InfModel.intTF (any::'tp))\n  (InfModel.intFF arOf resOf intTI intFI) (InfModel.intPF parOf intTI intPI)\""], "translations": [["", "lemma wt[simp]: \"M.wt T \\<Longrightarrow> wt T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M.wt T \\<Longrightarrow> local.wt T", "by (induct T, auto simp add: list_all_iff)"], ["", "lemma wtA[simp]: \"M.wtA at \\<Longrightarrow> wtA at\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M.wtA at \\<Longrightarrow> local.wtA at", "apply(cases at)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       \\<lbrakk>M.wtA at; at = Eq x11 x12\\<rbrakk>\n       \\<Longrightarrow> local.wtA at\n 2. \\<And>x21 x22.\n       \\<lbrakk>M.wtA at; at = Pr x21 x22\\<rbrakk>\n       \\<Longrightarrow> local.wtA at", "by (auto simp add: list_all_iff)"], ["", "lemma wtL[simp]: \"M.wtL l \\<Longrightarrow> wtL l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M.wtL l \\<Longrightarrow> local.wtL l", "apply(cases l)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>M.wtL l; l = Pos x1\\<rbrakk> \\<Longrightarrow> local.wtL l\n 2. \\<And>x2.\n       \\<lbrakk>M.wtL l; l = Neg x2\\<rbrakk> \\<Longrightarrow> local.wtL l", "by auto"], ["", "lemma wtC[simp]: \"M.wtC c \\<Longrightarrow> wtC c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M.wtC c \\<Longrightarrow> local.wtC c", "unfolding M.wtC_def wtC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all M.wtL c \\<Longrightarrow> list_all local.wtL c", "by (induct c, auto)"], ["", "lemma wtPB[simp]: \"M.wtPB \\<Phi> \\<Longrightarrow> wtPB \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M.wtPB \\<Phi> \\<Longrightarrow> local.wtPB \\<Phi>", "unfolding M.wtPB_def wtPB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ball \\<Phi> M.wtC \\<Longrightarrow> Ball \\<Phi> local.wtC", "by auto"], ["", "end"], ["", "(* context M_Signature *)"], ["", "subsection\\<open>Completeness\\<close>"], ["", "(* In our implicitly-typed setting, ``e\" is just the identity. *)"], ["", "text\\<open>The next puts together an M$\\_$signature with a structure for its U.flattened signature:\\<close>"], ["", "locale UM_Struct =\nM? : M_Signature wtFsym wtPsym arOf resOf parOf +\nU? : CU.Struct wtFsym wtPsym \"length o arOf\" \"length o parOf\" D intF intP\nfor wtFsym :: \"'fsym \\<Rightarrow> bool\" and wtPsym :: \"'psym \\<Rightarrow> bool\"\nand arOf :: \"'fsym \\<Rightarrow> 'tp list\"\nand resOf and parOf and D and intF and intP"], ["", "sublocale UM_Struct < M? : M.Struct where intT = \"\\<lambda> \\<sigma>. D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M.Struct wtFsym wtPsym arOf resOf (\\<lambda>\\<sigma>. D) intF intP", "apply standard"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma>. \\<exists>a. D a\n 2. \\<And>f al.\n       \\<lbrakk>wtFsym f;\n        list_all2 (\\<lambda>\\<sigma>. D) (arOf f) al\\<rbrakk>\n       \\<Longrightarrow> D (intF f al)\n 3. intP = intP", "apply(rule NE_D)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f al.\n       \\<lbrakk>wtFsym f;\n        list_all2 (\\<lambda>\\<sigma>. D) (arOf f) al\\<rbrakk>\n       \\<Longrightarrow> D (intF f al)\n 2. intP = intP", "unfolding list_all2_list_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f al.\n       \\<lbrakk>wtFsym f;\n        length (arOf f) = length al \\<and> list_all D al\\<rbrakk>\n       \\<Longrightarrow> D (intF f al)\n 2. intP = intP", "apply(rule intF)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>f al.\n       \\<lbrakk>wtFsym f;\n        length (arOf f) = length al \\<and> list_all D al\\<rbrakk>\n       \\<Longrightarrow> wtFsym f\n 2. \\<And>f al.\n       \\<lbrakk>wtFsym f;\n        length (arOf f) = length al \\<and> list_all D al\\<rbrakk>\n       \\<Longrightarrow> length al = (length \\<circ> arOf) f\n 3. \\<And>f al.\n       \\<lbrakk>wtFsym f;\n        length (arOf f) = length al \\<and> list_all D al\\<rbrakk>\n       \\<Longrightarrow> list_all D al\n 4. intP = intP", "by auto"], ["", "context UM_Struct begin"], ["", "lemma wtE[simp]: \"M.wtE \\<xi> \\<Longrightarrow> U.wtE \\<xi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M.wtE \\<xi> \\<Longrightarrow> U.wtE \\<xi>", "unfolding U.wtE_def M.wtE_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. D (\\<xi> x) \\<Longrightarrow> \\<forall>x. D (\\<xi> x)", "by auto"], ["", "lemma int_e[simp]: \"U.int \\<xi> T = M.int \\<xi> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.int \\<xi> T = M.int \\<xi> T", "by (induct T, simp_all add: list_all_iff) (metis map_eq_conv)"], ["", "lemma int_o_e[simp]: \"U.int \\<xi> = M.int \\<xi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.int \\<xi> = M.int \\<xi>", "unfolding int_e fun_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. M.int \\<xi> x = M.int \\<xi> x", "by simp"], ["", "lemma satA_e[simp]: \"U.satA \\<xi> at \\<longleftrightarrow> M.satA \\<xi> at\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.satA \\<xi> at = M.satA \\<xi> at", "by (cases at) auto"], ["", "lemma satL_e[simp]: \"U.satL \\<xi> l \\<longleftrightarrow> M.satL \\<xi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.satL \\<xi> l = M.satL \\<xi> l", "apply(cases l)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1. l = Pos x1 \\<Longrightarrow> U.satL \\<xi> l = M.satL \\<xi> l\n 2. \\<And>x2. l = Neg x2 \\<Longrightarrow> U.satL \\<xi> l = M.satL \\<xi> l", "by auto"], ["", "lemma satC_e[simp]: \"U.satC \\<xi> c \\<longleftrightarrow> M.satC \\<xi> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.satC \\<xi> c = M.satC \\<xi> c", "unfolding M.satC_def U.satC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_ex (U.satL \\<xi>) c = list_ex (M.satL \\<xi>) c", "by (induct c, simp_all)"], ["", "lemma satPB_e[simp]: \"U.satPB \\<xi> \\<Phi> \\<longleftrightarrow> M.satPB \\<xi> \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.satPB \\<xi> \\<Phi> = M.satPB \\<xi> \\<Phi>", "unfolding M.satPB_def U.satPB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>c\\<in>\\<Phi>. U.satC \\<xi> c) =\n    (\\<forall>c\\<in>\\<Phi>. M.satC \\<xi> c)", "by auto"], ["", "theorem completeness:\nassumes \"U.SAT \\<Phi>\"  shows \"M.SAT \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M.SAT \\<Phi>", "using assms"], ["proof (prove)\nusing this:\n  U.SAT \\<Phi>\n\ngoal (1 subgoal):\n 1. M.SAT \\<Phi>", "unfolding M.SAT_def satPB_e U.SAT_def"], ["proof (prove)\nusing this:\n  \\<forall>\\<xi>. U.wtE \\<xi> \\<longrightarrow> M.satPB \\<xi> \\<Phi>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<xi>. M.wtE \\<xi> \\<longrightarrow> M.satPB \\<xi> \\<Phi>", "by auto"], ["", "end"], ["", "(* context UM_Struct *)"], ["", "locale UM_Model =\n  M_Problem wtFsym wtPsym arOf resOf parOf \\<Phi> +\n  UM_Struct wtFsym wtPsym arOf resOf parOf D intF intP +\n  CU.Model wtFsym wtPsym  \"length o arOf\" \"length o parOf\" \\<Phi>\n          D intF intP\nfor wtFsym :: \"'fsym \\<Rightarrow> bool\" and wtPsym :: \"'psym \\<Rightarrow> bool\"\nand arOf :: \"'fsym \\<Rightarrow> 'tp list\"\nand resOf and parOf and \\<Phi> and D and intF and intP\nbegin"], ["", "theorem M_U_completeness: \"MModel (\\<lambda>\\<sigma>::'tp. D) intF intP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MModel (\\<lambda>\\<sigma>. D) intF intP", "apply standard"], ["proof (prove)\ngoal (1 subgoal):\n 1. M.SAT \\<Phi>", "apply(rule completeness[OF SAT])"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "(* context UM_Model *)"], ["", "text\\<open>Global statement of completeness : UM$\\_$Model consists\nof an M.problem and an U.model satisfying the U.translation of this problem.\nIt is stated that it yields a model for the M.problem.\\<close>"], ["", "sublocale UM_Model < CM.Model where intT = \"\\<lambda> \\<sigma>. D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MModel (\\<lambda>\\<sigma>. D) intF intP", "using M_U_completeness"], ["proof (prove)\nusing this:\n  MModel (\\<lambda>\\<sigma>. D) intF intP\n\ngoal (1 subgoal):\n 1. MModel (\\<lambda>\\<sigma>. D) intF intP", "."], ["", "subsection\\<open>Soundness for monotonic problems\\<close>"], ["", "sublocale M_FullStruct < U? : CU.Struct\nwhere arOf = \"length o arOf\" and parOf = \"length o parOf\" and D = \"intT any\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CU.Struct wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf)\n     (intT any) intF intP", "apply standard"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>a. intT any a\n 2. \\<And>f al.\n       \\<lbrakk>wtFsym f; length al = (length \\<circ> arOf) f;\n        list_all (intT any) al\\<rbrakk>\n       \\<Longrightarrow> intT any (intF f al)\n 3. length \\<circ> parOf = length \\<circ> parOf \\<and>\n    intF = intF \\<and> intP = intP", "apply(rule NE_intT)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f al.\n       \\<lbrakk>wtFsym f; length al = (length \\<circ> arOf) f;\n        list_all (intT any) al\\<rbrakk>\n       \\<Longrightarrow> intT any (intF f al)\n 2. length \\<circ> parOf = length \\<circ> parOf \\<and>\n    intF = intF \\<and> intP = intP", "apply (rule full2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. length \\<circ> parOf = length \\<circ> parOf \\<and>\n    intF = intF \\<and> intP = intP", "unfolding full_True list_all2_list_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. length \\<circ> parOf = length \\<circ> parOf \\<and>\n    intF = intF \\<and> intP = intP", "by auto"], ["", "context M_FullModel begin"], ["", "lemma wtE[simp]: \"U.wtE \\<xi> \\<Longrightarrow> F.wtE \\<xi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.wtE \\<xi> \\<Longrightarrow> F.wtE \\<xi>", "unfolding U.wtE_def F.wtE_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. intT any (\\<xi> x) \\<Longrightarrow>\n    \\<forall>x. intT (tpOfV x) (\\<xi> x)", "by auto"], ["", "lemma int_e[simp]: \"U.int \\<xi> T = F.int \\<xi> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.int \\<xi> T = F.int \\<xi> T", "by (induct T, simp_all add: list_all_iff) (metis map_eq_conv)"], ["", "lemma int_o_e[simp]: \"U.int \\<xi> = F.int \\<xi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.int \\<xi> = F.int \\<xi>", "unfolding fun_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. U.int \\<xi> x = F.int \\<xi> x", "by auto"], ["", "lemma satA_e[simp]: \"U.satA \\<xi> at \\<longleftrightarrow> F.satA \\<xi> at\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.satA \\<xi> at = F.satA \\<xi> at", "by (cases at) auto"], ["", "lemma satL_e[simp]: \"U.satL \\<xi> l \\<longleftrightarrow> F.satL \\<xi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.satL \\<xi> l = F.satL \\<xi> l", "by (cases l) auto"], ["", "lemma satC_e[simp]: \"U.satC \\<xi> c \\<longleftrightarrow> F.satC \\<xi> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.satC \\<xi> c = F.satC \\<xi> c", "unfolding F.satC_def U.satC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_ex (U.satL \\<xi>) c = list_ex (F.satL \\<xi>) c", "by (induct c, simp_all)"], ["", "lemma satPB_e[simp]: \"U.satPB \\<xi> \\<Phi> \\<longleftrightarrow> F.satPB \\<xi> \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.satPB \\<xi> \\<Phi> = F.satPB \\<xi> \\<Phi>", "unfolding F.satPB_def U.satPB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>c\\<in>\\<Phi>. U.satC \\<xi> c) =\n    (\\<forall>c\\<in>\\<Phi>. F.satC \\<xi> c)", "by auto"], ["", "theorem soundness: \"U.SAT \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U.SAT \\<Phi>", "unfolding U.SAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<xi>. U.wtE \\<xi> \\<longrightarrow> U.satPB \\<xi> \\<Phi>", "using sat_\\<Phi> satPB_e"], ["proof (prove)\nusing this:\n  F.wtE ?\\<xi> \\<Longrightarrow> F.satPB ?\\<xi> \\<Phi>\n  U.satPB ?\\<xi> \\<Phi> = F.satPB ?\\<xi> \\<Phi>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<xi>. U.wtE \\<xi> \\<longrightarrow> U.satPB \\<xi> \\<Phi>", "by auto"], ["", "lemma U_Model:\n\"CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf) \\<Phi> (intT any) intF intP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf)\n     \\<Phi> (intT any) intF intP", "by standard (rule wtPB[OF wt_\\<Phi>], rule soundness)"], ["", "end"], ["", "(* context M_FullModel *)"], ["", "sublocale M_FullModel < CU.Model\nwhere arOf = \"length o arOf\" and parOf = \"length o parOf\" and D = \"intT any\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf)\n     \\<Phi> (intT any) intF intP", "using U_Model"], ["proof (prove)\nusing this:\n  CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf) \\<Phi>\n   (intT any) intF intP\n\ngoal (1 subgoal):\n 1. CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf)\n     \\<Phi> (intT any) intF intP", "."], ["", "context M_MonotModel begin"], ["", "theorem M_U_soundness:\n\"CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf) \\<Phi>\n  (InfModel.intTF (any::'tp))\n  (InfModel.intFF arOf resOf intTI intFI) (InfModel.intPF parOf intTI intPI)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf)\n     \\<Phi> (InfModel.intTF any) local.M.intFF local.M.intPF", "apply(rule M_FullModel.U_Model)"], ["proof (prove)\ngoal (1 subgoal):\n 1. M_FullModel wtFsym wtPsym arOf ?resOf parOf \\<Phi> InfModel.intTF\n     local.M.intFF local.M.intPF", "unfolding M_FullModel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. FullModel wtFsym wtPsym arOf ?resOf parOf \\<Phi> InfModel.intTF\n     local.M.intFF local.M.intPF", "apply(rule InfModel.FullModel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. IInfModel intTI intFI intPI", "apply(rule MonotModel.InfModelI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. MonotModel wtFsym wtPsym arOf resOf parOf \\<Phi> ?intT4 ?intF4 ?intP4", ".."], ["", "end"], ["", "(* context M_MonotModel *)"], ["", "text\\<open>Global statement of the soundness theorem: M$\\_$MonotModel consists\nof a monotonic F.problem satisfied by an F.model.\nIt is stated that this yields an U.Model for the translated problem.\\<close>"], ["", "sublocale M_MonotModel < CU.Model\nwhere arOf = \"length o arOf\" and parOf = \"length o parOf\"\nand \\<Phi> = \\<Phi> and D = \"intTF (any::'tp)\" and intF = intFF and intP = intPF"], ["proof (prove)\ngoal (1 subgoal):\n 1. CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf)\n     \\<Phi> (InfModel.intTF any) local.M.intFF local.M.intPF", "using M_U_soundness"], ["proof (prove)\nusing this:\n  CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf) \\<Phi>\n   (InfModel.intTF any) local.M.intFF local.M.intPF\n\ngoal (1 subgoal):\n 1. CU.Model wtFsym wtPsym (length \\<circ> arOf) (length \\<circ> parOf)\n     \\<Phi> (InfModel.intTF any) local.M.intFF local.M.intPF", "."], ["", "end"]]}