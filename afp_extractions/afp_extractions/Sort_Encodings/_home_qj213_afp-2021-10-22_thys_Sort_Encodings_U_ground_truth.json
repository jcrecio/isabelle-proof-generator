{"file_name": "/home/qj213/afp-2021-10-22/thys/Sort_Encodings/U.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Sort_Encodings", "problem_names": ["lemma wt_induct[elim, consumes 1, case_names Var Fn, induct pred: wt]:\nassumes T: \"wt T\"\nand Var: \"\\<And> x. \\<phi> (Var x)\"\nand Fn:\n\"\\<And> f Tl.\n   \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl; list_all \\<phi> Tl\\<rbrakk>\n \\<Longrightarrow> \\<phi> (Fn f Tl)\"\nshows \"\\<phi> T\"", "lemma wtSB_wt[simp]: \"wtSB \\<pi> \\<Longrightarrow> wt (\\<pi> x)\"", "lemma wt_subst[simp]:\nassumes \"wtSB \\<pi>\" and \"wt T\"\nshows \"wt (subst \\<pi> T)\"", "lemma wtSB_o:\nassumes 1: \"wtSB \\<pi>1\" and 2: \"wtSB \\<pi>2\"\nshows \"wtSB (subst \\<pi>1 o \\<pi>2)\"", "lemma wtTE_D[simp]: \"wtE \\<xi> \\<Longrightarrow> D (\\<xi> x)\"", "lemma wt_int:\nassumes wtE: \"wtE \\<xi>\" and wt_T: \"wt T\"\nshows \"D (int \\<xi> T)\"", "lemma int_cong:\nassumes \"\\<And>x. x \\<in> vars T \\<Longrightarrow> \\<xi>1 x = \\<xi>2 x\"\nshows \"int \\<xi>1 T = int \\<xi>2 T\"", "lemma int_o:\n\"int (int \\<xi> o \\<rho>) T = int \\<xi> (subst \\<rho> T)\"", "lemmas int_subst = int_o[symmetric]", "lemma int_o_subst:\n\"int \\<xi> o subst \\<rho> = int (int \\<xi> o \\<rho>)\"", "lemma wtE_o:\nassumes 1: \"wtE \\<xi>\" and 2: \"wtSB \\<rho>\"\nshows \"wtE (int \\<xi> o \\<rho>)\""], "translations": [["", "lemma wt_induct[elim, consumes 1, case_names Var Fn, induct pred: wt]:\nassumes T: \"wt T\"\nand Var: \"\\<And> x. \\<phi> (Var x)\"\nand Fn:\n\"\\<And> f Tl.\n   \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl; list_all \\<phi> Tl\\<rbrakk>\n \\<Longrightarrow> \\<phi> (Fn f Tl)\"\nshows \"\\<phi> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> T", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<phi> T", "have \"wt T \\<longrightarrow> \\<phi> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt T \\<longrightarrow> \\<phi> T", "apply (induct T)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. wt (Var x) \\<longrightarrow> \\<phi> (Var x)\n 2. \\<And>f Tl.\n       list_all (\\<lambda>a. wt a \\<longrightarrow> \\<phi> a)\n        Tl \\<Longrightarrow>\n       wt (Fn f Tl) \\<longrightarrow> \\<phi> (Fn f Tl)", "using Var Fn"], ["proof (prove)\nusing this:\n  \\<phi> (Var ?x)\n  \\<lbrakk>wtFsym ?f; list_all wt ?Tl; arOf ?f = length ?Tl;\n   list_all \\<phi> ?Tl\\<rbrakk>\n  \\<Longrightarrow> \\<phi> (Fn ?f ?Tl)\n\ngoal (2 subgoals):\n 1. \\<And>x. wt (Var x) \\<longrightarrow> \\<phi> (Var x)\n 2. \\<And>f Tl.\n       list_all (\\<lambda>a. wt a \\<longrightarrow> \\<phi> a)\n        Tl \\<Longrightarrow>\n       wt (Fn f Tl) \\<longrightarrow> \\<phi> (Fn f Tl)", "by (auto simp: list_all_iff)"], ["proof (state)\nthis:\n  wt T \\<longrightarrow> \\<phi> T\n\ngoal (1 subgoal):\n 1. \\<phi> T", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt T \\<longrightarrow> \\<phi> T\n\ngoal (1 subgoal):\n 1. \\<phi> T", "using T"], ["proof (prove)\nusing this:\n  wt T \\<longrightarrow> \\<phi> T\n  wt T\n\ngoal (1 subgoal):\n 1. \\<phi> T", "by auto"], ["proof (state)\nthis:\n  \\<phi> T\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Well-typed substitutions *)"], ["", "definition \"wtSB \\<pi> \\<equiv> \\<forall> x. wt (\\<pi> x)\""], ["", "lemma wtSB_wt[simp]: \"wtSB \\<pi> \\<Longrightarrow> wt (\\<pi> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wtSB \\<pi> \\<Longrightarrow> wt (\\<pi> x)", "unfolding wtSB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. wt (\\<pi> x) \\<Longrightarrow> wt (\\<pi> x)", "by auto"], ["", "lemma wt_subst[simp]:\nassumes \"wtSB \\<pi>\" and \"wt T\"\nshows \"wt (subst \\<pi> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (subst \\<pi> T)", "using assms"], ["proof (prove)\nusing this:\n  wtSB \\<pi>\n  wt T\n\ngoal (1 subgoal):\n 1. wt (subst \\<pi> T)", "by (induct T) (auto simp: list_all_length)"], ["", "lemma wtSB_o:\nassumes 1: \"wtSB \\<pi>1\" and 2: \"wtSB \\<pi>2\"\nshows \"wtSB (subst \\<pi>1 o \\<pi>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wtSB (subst \\<pi>1 \\<circ> \\<pi>2)", "using 2"], ["proof (prove)\nusing this:\n  wtSB \\<pi>2\n\ngoal (1 subgoal):\n 1. wtSB (subst \\<pi>1 \\<circ> \\<pi>2)", "unfolding wtSB_def"], ["proof (prove)\nusing this:\n  \\<forall>x. wt (\\<pi>2 x)\n\ngoal (1 subgoal):\n 1. \\<forall>x. wt ((subst \\<pi>1 \\<circ> \\<pi>2) x)", "using 1"], ["proof (prove)\nusing this:\n  \\<forall>x. wt (\\<pi>2 x)\n  wtSB \\<pi>1\n\ngoal (1 subgoal):\n 1. \\<forall>x. wt ((subst \\<pi>1 \\<circ> \\<pi>2) x)", "by auto"], ["", "end"], ["", "(* context Signature *)"], ["", "subsection \\<open>Structures\\<close>"], ["", "(* Environment *)"], ["", "type_synonym 'univ env = \"var \\<Rightarrow> 'univ\""], ["", "(* Structure *)"], ["", "locale Struct = Signature wtFsym wtPsym arOf parOf\nfor wtFsym and wtPsym\nand arOf :: \"'fsym \\<Rightarrow> nat\"\nand parOf :: \"'psym \\<Rightarrow> nat\"\n+\nfixes\n    D :: \"'univ \\<Rightarrow> bool\"\nand intF :: \"'fsym \\<Rightarrow> 'univ list \\<Rightarrow> 'univ\"\nand intP :: \"'psym \\<Rightarrow> 'univ list \\<Rightarrow> bool\"\nassumes\nNE_D: \"NE D\" and\nintF: \"\\<lbrakk>wtFsym f; length al = arOf f; list_all D al\\<rbrakk> \\<Longrightarrow> D (intF f al)\"\nand\ndummy: \"parOf = parOf \\<and> intF = intF \\<and> intP = intP\"\nbegin"], ["", "(* Well-typed environment *)"], ["", "definition \"wtE \\<xi> \\<equiv> \\<forall> x. D (\\<xi> x)\""], ["", "lemma wtTE_D[simp]: \"wtE \\<xi> \\<Longrightarrow> D (\\<xi> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wtE \\<xi> \\<Longrightarrow> D (\\<xi> x)", "unfolding wtE_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. D (\\<xi> x) \\<Longrightarrow> D (\\<xi> x)", "by simp"], ["", "(* Interpretation of terms: *)"], ["", "fun int where\n\"int \\<xi> (Var x) = \\<xi> x\"\n|\n\"int \\<xi> (Fn f Tl) = intF f (map (int \\<xi>) Tl)\""], ["", "(* Soundness of typing w.r.t. interpretation: *)"], ["", "lemma wt_int:\nassumes wtE: \"wtE \\<xi>\" and wt_T: \"wt T\"\nshows \"D (int \\<xi> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (int \\<xi> T)", "using wt_T"], ["proof (prove)\nusing this:\n  wt T\n\ngoal (1 subgoal):\n 1. D (int \\<xi> T)", "apply(induct T)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. D (int \\<xi> (Var x))\n 2. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> D (int \\<xi> (Fn f Tl))", "apply (metis int.simps(1) wtE wtE_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> D (int \\<xi> (Fn f Tl))", "unfolding int.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> D (intF f (map (int \\<xi>) Tl))", "apply(rule intF)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> wtFsym f\n 2. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> length (map (int \\<xi>) Tl) = arOf f\n 3. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> list_all D (map (int \\<xi>) Tl)", "unfolding list_all_map comp_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> wtFsym f\n 2. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> length (map (int \\<xi>) Tl) = arOf f\n 3. \\<And>f Tl.\n       \\<lbrakk>wtFsym f; list_all wt Tl; arOf f = length Tl;\n        list_all (\\<lambda>a. D (int \\<xi> a)) Tl\\<rbrakk>\n       \\<Longrightarrow> list_all (\\<lambda>x. D (int \\<xi> x)) Tl", "by auto"], ["", "lemma int_cong:\nassumes \"\\<And>x. x \\<in> vars T \\<Longrightarrow> \\<xi>1 x = \\<xi>2 x\"\nshows \"int \\<xi>1 T = int \\<xi>2 T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int \\<xi>1 T = int \\<xi>2 T", "using assms"], ["proof (prove)\nusing this:\n  ?x2 \\<in> vars T \\<Longrightarrow> \\<xi>1 ?x2 = \\<xi>2 ?x2\n\ngoal (1 subgoal):\n 1. int \\<xi>1 T = int \\<xi>2 T", "apply(induct T)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<And>xa.\n           xa \\<in> vars (Var x) \\<Longrightarrow>\n           \\<xi>1 xa = \\<xi>2 xa) \\<Longrightarrow>\n       int \\<xi>1 (Var x) = int \\<xi>2 (Var x)\n 2. \\<And>f Tl.\n       \\<lbrakk>list_all\n                 (\\<lambda>a.\n                     (\\<forall>x.\n                         x \\<in> vars a \\<longrightarrow>\n                         \\<xi>1 x = \\<xi>2 x) \\<longrightarrow>\n                     int \\<xi>1 a = int \\<xi>2 a)\n                 Tl;\n        \\<And>x.\n           x \\<in> vars (Fn f Tl) \\<Longrightarrow>\n           \\<xi>1 x = \\<xi>2 x\\<rbrakk>\n       \\<Longrightarrow> int \\<xi>1 (Fn f Tl) = int \\<xi>2 (Fn f Tl)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f Tl.\n       \\<lbrakk>list_all\n                 (\\<lambda>a.\n                     (\\<forall>x.\n                         x \\<in> vars a \\<longrightarrow>\n                         \\<xi>1 x = \\<xi>2 x) \\<longrightarrow>\n                     int \\<xi>1 a = int \\<xi>2 a)\n                 Tl;\n        \\<And>x.\n           \\<exists>xa\\<in>set Tl. x \\<in> vars xa \\<Longrightarrow>\n           \\<xi>1 x = \\<xi>2 x\\<rbrakk>\n       \\<Longrightarrow> intF f (map (int \\<xi>1) Tl) =\n                         intF f (map (int \\<xi>2) Tl)", "unfolding list_all_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f Tl.\n       \\<lbrakk>\\<forall>a\\<in>set Tl.\n                   (\\<forall>x.\n                       x \\<in> vars a \\<longrightarrow>\n                       \\<xi>1 x = \\<xi>2 x) \\<longrightarrow>\n                   int \\<xi>1 a = int \\<xi>2 a;\n        \\<And>x.\n           \\<exists>xa\\<in>set Tl. x \\<in> vars xa \\<Longrightarrow>\n           \\<xi>1 x = \\<xi>2 x\\<rbrakk>\n       \\<Longrightarrow> intF f (map (int \\<xi>1) Tl) =\n                         intF f (map (int \\<xi>2) Tl)", "using map_ext"], ["proof (prove)\nusing this:\n  (\\<And>x. x \\<in> set ?xs \\<longrightarrow> ?f x = ?g x) \\<Longrightarrow>\n  map ?f ?xs = map ?g ?xs\n\ngoal (1 subgoal):\n 1. \\<And>f Tl.\n       \\<lbrakk>\\<forall>a\\<in>set Tl.\n                   (\\<forall>x.\n                       x \\<in> vars a \\<longrightarrow>\n                       \\<xi>1 x = \\<xi>2 x) \\<longrightarrow>\n                   int \\<xi>1 a = int \\<xi>2 a;\n        \\<And>x.\n           \\<exists>xa\\<in>set Tl. x \\<in> vars xa \\<Longrightarrow>\n           \\<xi>1 x = \\<xi>2 x\\<rbrakk>\n       \\<Longrightarrow> intF f (map (int \\<xi>1) Tl) =\n                         intF f (map (int \\<xi>2) Tl)", "by metis"], ["", "lemma int_o:\n\"int (int \\<xi> o \\<rho>) T = int \\<xi> (subst \\<rho> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (int \\<xi> \\<circ> \\<rho>) T = int \\<xi> (subst \\<rho> T)", "apply(induct T)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       int (int \\<xi> \\<circ> \\<rho>) (Var x) =\n       int \\<xi> (subst \\<rho> (Var x))\n 2. \\<And>f Tl.\n       list_all\n        (\\<lambda>a.\n            int (int \\<xi> \\<circ> \\<rho>) a = int \\<xi> (subst \\<rho> a))\n        Tl \\<Longrightarrow>\n       int (int \\<xi> \\<circ> \\<rho>) (Fn f Tl) =\n       int \\<xi> (subst \\<rho> (Fn f Tl))", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f Tl.\n       list_all\n        (\\<lambda>a.\n            int (\\<lambda>a. int \\<xi> (\\<rho> a)) a =\n            int \\<xi> (subst \\<rho> a))\n        Tl \\<Longrightarrow>\n       intF f (map (int (\\<lambda>a. int \\<xi> (\\<rho> a))) Tl) =\n       intF f (map (int \\<xi> \\<circ> subst \\<rho>) Tl)", "unfolding list_all_iff o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f Tl.\n       \\<forall>a\\<in>set Tl.\n          int (\\<lambda>a. int \\<xi> (\\<rho> a)) a =\n          int \\<xi> (subst \\<rho> a) \\<Longrightarrow>\n       intF f (map (int (\\<lambda>a. int \\<xi> (\\<rho> a))) Tl) =\n       intF f (map (\\<lambda>x. int \\<xi> (subst \\<rho> x)) Tl)", "using map_ext"], ["proof (prove)\nusing this:\n  (\\<And>x. x \\<in> set ?xs \\<longrightarrow> ?f x = ?g x) \\<Longrightarrow>\n  map ?f ?xs = map ?g ?xs\n\ngoal (1 subgoal):\n 1. \\<And>f Tl.\n       \\<forall>a\\<in>set Tl.\n          int (\\<lambda>a. int \\<xi> (\\<rho> a)) a =\n          int \\<xi> (subst \\<rho> a) \\<Longrightarrow>\n       intF f (map (int (\\<lambda>a. int \\<xi> (\\<rho> a))) Tl) =\n       intF f (map (\\<lambda>x. int \\<xi> (subst \\<rho> x)) Tl)", "by (metis (lifting, no_types))"], ["", "lemmas int_subst = int_o[symmetric]"], ["", "lemma int_o_subst:\n\"int \\<xi> o subst \\<rho> = int (int \\<xi> o \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int \\<xi> \\<circ> subst \\<rho> = int (int \\<xi> \\<circ> \\<rho>)", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (int \\<xi> \\<circ> subst \\<rho>) x = int (int \\<xi> \\<circ> \\<rho>) x", "apply(subst comp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. int \\<xi> (subst \\<rho> x) = int (int \\<xi> \\<circ> \\<rho>) x", "unfolding int_o[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       int (int \\<xi> \\<circ> \\<rho>) x = int (int \\<xi> \\<circ> \\<rho>) x", ".."], ["", "lemma wtE_o:\nassumes 1: \"wtE \\<xi>\" and 2: \"wtSB \\<rho>\"\nshows \"wtE (int \\<xi> o \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wtE (int \\<xi> \\<circ> \\<rho>)", "unfolding wtE_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. D ((int \\<xi> \\<circ> \\<rho>) x)", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. D ((int \\<xi> \\<circ> \\<rho>) x)", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. D (int \\<xi> (\\<rho> x))", "apply(rule wt_int[OF 1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. wt (\\<rho> x)", "using 2"], ["proof (prove)\nusing this:\n  wtSB \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>x. wt (\\<rho> x)", "by auto"], ["", "end"], ["", "context Signature begin"], ["", "text\\<open>Well-typed (i.e., well-formed) atoms, literals, caluses and problems:\\<close>"], ["", "fun wtA where\n\"wtA (Eq T1 T2) \\<longleftrightarrow> wt T1 \\<and> wt T2\"\n|\n\"wtA (Pr p Tl) \\<longleftrightarrow> wtPsym p \\<and> list_all wt Tl \\<and> parOf p = length Tl\""], ["", "fun wtL where\n\"wtL (Pos a) \\<longleftrightarrow> wtA a\"\n|\n\"wtL (Neg a) \\<longleftrightarrow> wtA a\""], ["", "definition \"wtC \\<equiv> list_all wtL\""], ["", "definition \"wtPB \\<Phi> \\<equiv> \\<forall> c \\<in> \\<Phi>. wtC c\""], ["", "end"], ["", "(* context Signature *)"], ["", "context Struct begin"], ["", "(* Satisfaction of atoms: *)"], ["", "fun satA where\n\"satA \\<xi> (Eq T1 T2) \\<longleftrightarrow> int \\<xi> T1 = int \\<xi> T2\"\n|\n\"satA \\<xi> (Pr r Tl) \\<longleftrightarrow> intP r (map (int \\<xi>) Tl)\""], ["", "(* Satisfaction literals: *)"], ["", "fun satL where\n\"satL \\<xi> (Pos a) \\<longleftrightarrow> satA \\<xi> a\"\n|\n\"satL \\<xi> (Neg a) \\<longleftrightarrow> \\<not> satA \\<xi> a\""], ["", "(* Satisfaction of clauses: *)"], ["", "definition \"satC \\<xi> \\<equiv> list_ex (satL \\<xi>)\""], ["", "(* satisfaction of problems *)"], ["", "definition \"satPB \\<xi> \\<Phi> \\<equiv> \\<forall> c \\<in> \\<Phi>. satC \\<xi> c\""], ["", "definition \"SAT \\<Phi> \\<equiv> \\<forall> \\<xi>. wtE \\<xi> \\<longrightarrow> satPB \\<xi> \\<Phi>\""], ["", "end"], ["", "(* context Struct *)"], ["", "subsection\\<open>Problems\\<close>"], ["", "locale Problem = Signature wtFsym wtPsym arOf parOf\nfor wtFsym and wtPsym\nand arOf :: \"'fsym \\<Rightarrow> nat\"\nand parOf :: \"'psym \\<Rightarrow> nat\"\n+\nfixes \\<Phi> :: \"('fsym, 'psym) prob\"\nassumes wt_\\<Phi>: \"wtPB \\<Phi>\""], ["", "subsection\\<open>Models of a problem\\<close>"], ["", "locale Model =\n  Problem wtFsym wtPsym arOf parOf \\<Phi> +\n  Struct wtFsym wtPsym arOf parOf D intF intP\nfor wtFsym and wtPsym\nand arOf :: \"'fsym \\<Rightarrow> nat\"\nand parOf :: \"'psym \\<Rightarrow> nat\"\nand \\<Phi> :: \"('fsym, 'psym) prob\"\nand D :: \"'univ \\<Rightarrow> bool\"\nand intF :: \"'fsym \\<Rightarrow> 'univ list \\<Rightarrow> 'univ\"\nand intP :: \"'psym \\<Rightarrow> 'univ list \\<Rightarrow> bool\"\n+\nassumes SAT: \"SAT \\<Phi>\""], ["", "end"]]}