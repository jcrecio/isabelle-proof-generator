{"file_name": "/home/qj213/afp-2021-10-22/thys/C2KA_DistributedSystems/CKA.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/C2KA_DistributedSystems", "problem_names": ["lemma inf_add_K_right: \"a \\<le>\\<^sub>\\<K> a + b\"", "lemma inf_add_K_left: \"a \\<le>\\<^sub>\\<K> b + a\"", "lemma par_comm: \"a * b = b * a\"", "lemma exchange_2: \"(a*b) ; (c*d) \\<le>\\<^sub>\\<K> (a;c) * (b;d)\"", "lemma seq_inf_par: \"a ; b \\<le>\\<^sub>\\<K> a * b\"", "lemma add_seq_inf_par: \"a;b + b;a \\<le>\\<^sub>\\<K> a*b\"", "lemma exchange_3: \"(a*b) ; c \\<le>\\<^sub>\\<K> a * (b;c)\"", "lemma exchange_4: \"a ; (b*c) \\<le>\\<^sub>\\<K> (a;b) * c\"", "lemma seqstar_inf_parstar: \"a\\<^sup>; \\<le>\\<^sub>\\<K> a\\<^sup>*\""], "translations": [["", "lemma inf_add_K_right: \"a \\<le>\\<^sub>\\<K> a + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> a + b", "unfolding leq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + (a + b) = a + b", "by (simp add:  add_assoc[symmetric])"], ["", "lemma inf_add_K_left: \"a \\<le>\\<^sub>\\<K> b + a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b + a", "by (simp only: add_commute, fact inf_add_K_right)"], ["", "end"], ["", "class dioid = semiring + one + zero + join_semilattice +\n  assumes par_onel [simp]: \"1 * x = x\"\n  and par_oner [simp]: \"x * 1 = x\"\n  and add_zerol [simp]: \"0 + x = x\"\n  and annil [simp]: \"0 * x = 0\"\n  and annir [simp]: \"x * 0 = 0\""], ["", "class kleene_algebra = dioid + \n  fixes star :: \"'a \\<Rightarrow> 'a\" (\"_\\<^sup>*\" [101] 100)\n  assumes star_unfoldl: \"1 + x * x\\<^sup>* \\<le>\\<^sub>\\<K> x\\<^sup>*\"  \n  and star_unfoldr: \"1 + x\\<^sup>* * x \\<le>\\<^sub>\\<K> x\\<^sup>*\"\n  and star_inductl: \"z + x * y \\<le>\\<^sub>\\<K> y \\<Longrightarrow> x\\<^sup>* * z \\<le>\\<^sub>\\<K> y\"\n  and star_inductr: \"z + y * x \\<le>\\<^sub>\\<K> y \\<Longrightarrow> z * x\\<^sup>* \\<le>\\<^sub>\\<K> y\""], ["", "class cka = kleene_algebra +\n  fixes seq :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" (infixl \";\" 70)\n  and seqstar :: \"'a \\<Rightarrow> 'a\" (\"_\\<^sup>;\" [101] 100)\n  assumes seq_assoc: \"x ; (y ; z) = (x ; y) ; z\"\n  and seq_rident [simp]: \"x ; 1 = x\"\n  and seq_lident [simp]: \"1 ; x = x\"\n  and seq_rdistrib [simp]: \"(x + y);z = x;z + y;z\"\n  and seq_ldistrib [simp]: \"x;(y + z) = x;y + x;z\"\n  and seq_annir [simp]: \"x ; 0 = 0\"\n  and seq_annil [simp]: \"0 ; x = 0\" \n  and seqstar_unfoldl: \"1 + x ; x\\<^sup>; \\<le>\\<^sub>\\<K> x\\<^sup>;\"  \n  and seqstar_unfoldr: \"1 + x\\<^sup>; ; x \\<le>\\<^sub>\\<K> x\\<^sup>;\"\n  and seqstar_inductl: \"z + x ; y \\<le>\\<^sub>\\<K> y \\<Longrightarrow> x\\<^sup>; ; z \\<le>\\<^sub>\\<K> y\"\n  and seqstar_inductr: \"z + y ; x \\<le>\\<^sub>\\<K> y \\<Longrightarrow> z ; x\\<^sup>; \\<le>\\<^sub>\\<K> y\"\n  and exchange: \"(a*b) ; (c*d) \\<le>\\<^sub>\\<K> (b;c) * (a;d)\"\nbegin"], ["", "interpretation cka: kleene_algebra plus less_eq less \"1\" \"0\" seq seqstar"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.kleene_algebra (+) (\\<le>) (<) (1::'a) (0::'a) (;) seqstar", "by (unfold_locales, simp_all add: seq_assoc seqstar_unfoldl seqstar_unfoldr seqstar_inductl seqstar_inductr)"], ["", "lemma par_comm: \"a * b = b * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b = b * a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a * b = b * a", "have \"(b*a) ; (1*1) \\<le>\\<^sub>\\<K> (a;1) * (b;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b * a ; ((1::'a) * (1::'a)) \\<le> a ; (1::'a) * (b ; (1::'a))", "by (simp only:  exchange)"], ["proof (state)\nthis:\n  b * a ; ((1::'a) * (1::'a)) \\<le> a ; (1::'a) * (b ; (1::'a))\n\ngoal (1 subgoal):\n 1. a * b = b * a", "hence \"b * a \\<le>\\<^sub>\\<K> a * b\""], ["proof (prove)\nusing this:\n  b * a ; ((1::'a) * (1::'a)) \\<le> a ; (1::'a) * (b ; (1::'a))\n\ngoal (1 subgoal):\n 1. b * a \\<le> a * b", "by (simp)"], ["proof (state)\nthis:\n  b * a \\<le> a * b\n\ngoal (1 subgoal):\n 1. a * b = b * a", "hence \"a * b \\<le>\\<^sub>\\<K> b * a \\<longleftrightarrow> a * b  = b * a\""], ["proof (prove)\nusing this:\n  b * a \\<le> a * b\n\ngoal (1 subgoal):\n 1. (a * b \\<le> b * a) = (a * b = b * a)", "by (rule antisym_conv)"], ["proof (state)\nthis:\n  (a * b \\<le> b * a) = (a * b = b * a)\n\ngoal (1 subgoal):\n 1. a * b = b * a", "moreover"], ["proof (state)\nthis:\n  (a * b \\<le> b * a) = (a * b = b * a)\n\ngoal (1 subgoal):\n 1. a * b = b * a", "have \"a * b \\<le>\\<^sub>\\<K> b * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b \\<le> b * a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a * b \\<le> b * a", "have \"(a*b) ; (1*1) \\<le>\\<^sub>\\<K> (b;1) * (a;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b ; ((1::'a) * (1::'a)) \\<le> b ; (1::'a) * (a ; (1::'a))", "by (rule  exchange)"], ["proof (state)\nthis:\n  a * b ; ((1::'a) * (1::'a)) \\<le> b ; (1::'a) * (a ; (1::'a))\n\ngoal (1 subgoal):\n 1. a * b \\<le> b * a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a * b ; ((1::'a) * (1::'a)) \\<le> b ; (1::'a) * (a ; (1::'a))\n\ngoal (1 subgoal):\n 1. a * b \\<le> b * a", "by (simp)"], ["proof (state)\nthis:\n  a * b \\<le> b * a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a * b \\<le> b * a\n\ngoal (1 subgoal):\n 1. a * b = b * a", "ultimately"], ["proof (chain)\npicking this:\n  (a * b \\<le> b * a) = (a * b = b * a)\n  a * b \\<le> b * a", "show ?thesis"], ["proof (prove)\nusing this:\n  (a * b \\<le> b * a) = (a * b = b * a)\n  a * b \\<le> b * a\n\ngoal (1 subgoal):\n 1. a * b = b * a", "by (auto)"], ["proof (state)\nthis:\n  a * b = b * a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exchange_2: \"(a*b) ; (c*d) \\<le>\\<^sub>\\<K> (a;c) * (b;d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b ; (c * d) \\<le> a ; c * (b ; d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a * b ; (c * d) \\<le> a ; c * (b ; d)", "have \"(b*a) ; (c*d) \\<le>\\<^sub>\\<K> (a;c) * (b;d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b * a ; (c * d) \\<le> a ; c * (b ; d)", "by (rule exchange)"], ["proof (state)\nthis:\n  b * a ; (c * d) \\<le> a ; c * (b ; d)\n\ngoal (1 subgoal):\n 1. a * b ; (c * d) \\<le> a ; c * (b ; d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  b * a ; (c * d) \\<le> a ; c * (b ; d)\n\ngoal (1 subgoal):\n 1. a * b ; (c * d) \\<le> a ; c * (b ; d)", "by (simp add: par_comm)"], ["proof (state)\nthis:\n  a * b ; (c * d) \\<le> a ; c * (b ; d)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_inf_par: \"a ; b \\<le>\\<^sub>\\<K> a * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ; b \\<le> a * b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a ; b \\<le> a * b", "have \"(1*a) ; (1*b) \\<le>\\<^sub>\\<K> (a;1) * (1;b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) * a ; ((1::'a) * b) \\<le> a ; (1::'a) * ((1::'a) ; b)", "by (rule exchange)"], ["proof (state)\nthis:\n  (1::'a) * a ; ((1::'a) * b) \\<le> a ; (1::'a) * ((1::'a) ; b)\n\ngoal (1 subgoal):\n 1. a ; b \\<le> a * b", "thus ?thesis"], ["proof (prove)\nusing this:\n  (1::'a) * a ; ((1::'a) * b) \\<le> a ; (1::'a) * ((1::'a) ; b)\n\ngoal (1 subgoal):\n 1. a ; b \\<le> a * b", "by simp"], ["proof (state)\nthis:\n  a ; b \\<le> a * b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_seq_inf_par: \"a;b + b;a \\<le>\\<^sub>\\<K> a*b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ; b + b ; a \\<le> a * b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a ; b + b ; a \\<le> a * b", "have \"a;b \\<le>\\<^sub>\\<K> a*b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ; b \\<le> a * b", "by (rule seq_inf_par)"], ["proof (state)\nthis:\n  a ; b \\<le> a * b\n\ngoal (1 subgoal):\n 1. a ; b + b ; a \\<le> a * b", "moreover"], ["proof (state)\nthis:\n  a ; b \\<le> a * b\n\ngoal (1 subgoal):\n 1. a ; b + b ; a \\<le> a * b", "have \"b;a \\<le>\\<^sub>\\<K> b*a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b ; a \\<le> b * a", "by (rule seq_inf_par)"], ["proof (state)\nthis:\n  b ; a \\<le> b * a\n\ngoal (1 subgoal):\n 1. a ; b + b ; a \\<le> a * b", "ultimately"], ["proof (chain)\npicking this:\n  a ; b \\<le> a * b\n  b ; a \\<le> b * a", "have \"a;b + b;a \\<le>\\<^sub>\\<K> a*b + b*a\""], ["proof (prove)\nusing this:\n  a ; b \\<le> a * b\n  b ; a \\<le> b * a\n\ngoal (1 subgoal):\n 1. a ; b + b ; a \\<le> a * b + b * a", "by (simp add: add_mono)"], ["proof (state)\nthis:\n  a ; b + b ; a \\<le> a * b + b * a\n\ngoal (1 subgoal):\n 1. a ; b + b ; a \\<le> a * b", "thus ?thesis"], ["proof (prove)\nusing this:\n  a ; b + b ; a \\<le> a * b + b * a\n\ngoal (1 subgoal):\n 1. a ; b + b ; a \\<le> a * b", "by (simp add: par_comm)"], ["proof (state)\nthis:\n  a ; b + b ; a \\<le> a * b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exchange_3: \"(a*b) ; c \\<le>\\<^sub>\\<K> a * (b;c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b ; c \\<le> a * (b ; c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a * b ; c \\<le> a * (b ; c)", "have \"(a*b) ; (1*c) \\<le>\\<^sub>\\<K> (a;1) * (b;c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b ; ((1::'a) * c) \\<le> a ; (1::'a) * (b ; c)", "by (rule exchange_2)"], ["proof (state)\nthis:\n  a * b ; ((1::'a) * c) \\<le> a ; (1::'a) * (b ; c)\n\ngoal (1 subgoal):\n 1. a * b ; c \\<le> a * (b ; c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  a * b ; ((1::'a) * c) \\<le> a ; (1::'a) * (b ; c)\n\ngoal (1 subgoal):\n 1. a * b ; c \\<le> a * (b ; c)", "by simp"], ["proof (state)\nthis:\n  a * b ; c \\<le> a * (b ; c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exchange_4: \"a ; (b*c) \\<le>\\<^sub>\\<K> (a;b) * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ; (b * c) \\<le> a ; b * c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a ; (b * c) \\<le> a ; b * c", "have \"(1*a) ; (b*c) \\<le>\\<^sub>\\<K> (a;b) * (1;c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) * a ; (b * c) \\<le> a ; b * ((1::'a) ; c)", "by (rule exchange)"], ["proof (state)\nthis:\n  (1::'a) * a ; (b * c) \\<le> a ; b * ((1::'a) ; c)\n\ngoal (1 subgoal):\n 1. a ; (b * c) \\<le> a ; b * c", "thus ?thesis"], ["proof (prove)\nusing this:\n  (1::'a) * a ; (b * c) \\<le> a ; b * ((1::'a) ; c)\n\ngoal (1 subgoal):\n 1. a ; (b * c) \\<le> a ; b * c", "by simp"], ["proof (state)\nthis:\n  a ; (b * c) \\<le> a ; b * c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqstar_inf_parstar: \"a\\<^sup>; \\<le>\\<^sub>\\<K> a\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sup>; \\<le> a\\<^sup>*", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a\\<^sup>; \\<le> a\\<^sup>*", "have \"a ; a\\<^sup>* \\<le>\\<^sub>\\<K> a * a\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ; a\\<^sup>* \\<le> a * a\\<^sup>*", "by (rule seq_inf_par)"], ["proof (state)\nthis:\n  a ; a\\<^sup>* \\<le> a * a\\<^sup>*\n\ngoal (1 subgoal):\n 1. a\\<^sup>; \\<le> a\\<^sup>*", "hence \"1 + a ; a\\<^sup>* \\<le>\\<^sub>\\<K> 1 + a * a\\<^sup>*\""], ["proof (prove)\nusing this:\n  a ; a\\<^sup>* \\<le> a * a\\<^sup>*\n\ngoal (1 subgoal):\n 1. (1::'a) + a ; a\\<^sup>* \\<le> (1::'a) + a * a\\<^sup>*", "by (simp add: add_left_mono)"], ["proof (state)\nthis:\n  (1::'a) + a ; a\\<^sup>* \\<le> (1::'a) + a * a\\<^sup>*\n\ngoal (1 subgoal):\n 1. a\\<^sup>; \\<le> a\\<^sup>*", "hence \"1 + a ; a\\<^sup>* \\<le>\\<^sub>\\<K> a\\<^sup>*\""], ["proof (prove)\nusing this:\n  (1::'a) + a ; a\\<^sup>* \\<le> (1::'a) + a * a\\<^sup>*\n\ngoal (1 subgoal):\n 1. (1::'a) + a ; a\\<^sup>* \\<le> a\\<^sup>*", "by (simp add: star_unfoldl order_trans)"], ["proof (state)\nthis:\n  (1::'a) + a ; a\\<^sup>* \\<le> a\\<^sup>*\n\ngoal (1 subgoal):\n 1. a\\<^sup>; \\<le> a\\<^sup>*", "hence \"a\\<^sup>; ; 1 \\<le>\\<^sub>\\<K> a\\<^sup>*\""], ["proof (prove)\nusing this:\n  (1::'a) + a ; a\\<^sup>* \\<le> a\\<^sup>*\n\ngoal (1 subgoal):\n 1. a\\<^sup>; ; (1::'a) \\<le> a\\<^sup>*", "by (rule seqstar_inductl)"], ["proof (state)\nthis:\n  a\\<^sup>; ; (1::'a) \\<le> a\\<^sup>*\n\ngoal (1 subgoal):\n 1. a\\<^sup>; \\<le> a\\<^sup>*", "thus ?thesis"], ["proof (prove)\nusing this:\n  a\\<^sup>; ; (1::'a) \\<le> a\\<^sup>*\n\ngoal (1 subgoal):\n 1. a\\<^sup>; \\<le> a\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  a\\<^sup>; \\<le> a\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}