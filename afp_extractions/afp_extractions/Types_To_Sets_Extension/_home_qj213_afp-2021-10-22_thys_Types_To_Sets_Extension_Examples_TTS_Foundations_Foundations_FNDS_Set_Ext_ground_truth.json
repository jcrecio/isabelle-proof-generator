{"file_name": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension/Examples/TTS_Foundations/Foundations/FNDS_Set_Ext.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension", "problem_names": ["lemma Ex1_transfer[transfer_rule]:\n  includes lifting_syntax\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\"\n  shows \"((A ===> (=)) ===> (=)) (\\<lambda>P. (\\<exists>!x\\<in>(Collect (Domainp A)). P x)) Ex1\""], "translations": [["", "lemma Ex1_transfer[transfer_rule]:\n  includes lifting_syntax\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\"\n  shows \"((A ===> (=)) ===> (=)) (\\<lambda>P. (\\<exists>!x\\<in>(Collect (Domainp A)). P x)) Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> (=)) ===> (=))\n     (\\<lambda>P. \\<exists>!x. x \\<in> Collect (Domainp A) \\<and> P x) Ex1", "unfolding Ex1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> (=)) ===> (=))\n     (\\<lambda>P.\n         \\<exists>x.\n            (x \\<in> Collect (Domainp A) \\<and> P x) \\<and>\n            (\\<forall>y.\n                y \\<in> Collect (Domainp A) \\<and> P y \\<longrightarrow>\n                y = x))\n     (\\<lambda>P.\n         \\<exists>x. P x \\<and> (\\<forall>y. P y \\<longrightarrow> y = x))", "apply transfer_prover_start"], ["proof (prove)\ngoal (6 subgoals):\n 1. Transfer.Rel (A ===> A ===> ?Ri13) ?ad13 (=)\n 2. Transfer.Rel ((=) ===> ?Ri13 ===> ?Rh13) ?ac13 (\\<longrightarrow>)\n 3. Transfer.Rel ((A ===> ?Rh13) ===> ?Rg13) ?ab13 All\n 4. Transfer.Rel ((=) ===> ?Rg13 ===> ?Re13) ?aa13 (\\<and>)\n 5. Transfer.Rel ((A ===> ?Re13) ===> (=)) ?a13 Ex\n 6. (\\<lambda>P.\n        \\<exists>x.\n           (x \\<in> Collect (Domainp A) \\<and> P x) \\<and>\n           (\\<forall>y.\n               y \\<in> Collect (Domainp A) \\<and> P y \\<longrightarrow>\n               y = x)) =\n    (\\<lambda>P.\n        ?a13\n         (\\<lambda>x.\n             ?aa13 (P x) (?ab13 (\\<lambda>y. ?ac13 (P y) (?ad13 y x)))))", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>P.\n        \\<exists>x.\n           (x \\<in> Collect (Domainp A) \\<and> P x) \\<and>\n           (\\<forall>y.\n               y \\<in> Collect (Domainp A) \\<and> P y \\<longrightarrow>\n               y = x)) =\n    (\\<lambda>P.\n        \\<exists>x\\<in>Collect (Domainp A).\n           P x \\<and>\n           (\\<forall>y\\<in>Collect (Domainp A).\n               P y \\<longrightarrow> y = x))", "by blast"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}