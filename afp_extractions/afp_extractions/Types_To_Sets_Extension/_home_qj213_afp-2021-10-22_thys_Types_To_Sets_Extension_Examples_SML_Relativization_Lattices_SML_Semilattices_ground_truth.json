{"file_name": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension/Examples/SML_Relativization/Lattices/SML_Semilattices.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension", "problem_names": ["lemma semilattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> A) ===> (=)) \n      (\\<lambda>f. semilattice_ow (Collect (Domainp A)) f) semilattice\"", "lemma semilattice_set_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> A) ===> (=)) \n      (\\<lambda>f. semilattice_set_ow (Collect (Domainp A)) f) semilattice_set\"", "lemma inf_closed'[simp]: \"\\<forall>x\\<in>U. \\<forall>y\\<in>U. x \\<sqinter>\\<^sub>o\\<^sub>w y \\<in> U\"", "lemma sup_closed'[simp]: \"\\<forall>x\\<in>U. \\<forall>y\\<in>U. x \\<squnion>\\<^sub>o\\<^sub>w y \\<in> U\"", "lemma semilattice_order_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    ) (semilattice_order_ow (Collect (Domainp A))) semilattice_order\"", "lemma semilattice_order_set_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    ) (semilattice_order_set_ow (Collect (Domainp A))) semilattice_order_set\"", "lemma semilattice_inf_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    ) (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf\"", "lemma semilattice_sup_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    ) (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup\"", "lemma semilattice_neutral_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> A) ===> A ===> (=))\n      (semilattice_neutral_ow (Collect (Domainp A))) semilattice_neutr\"", "lemma semilattice_neutr_order_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      A ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    )\n    (semilattice_neutral_order_ow (Collect (Domainp A))) \n    semilattice_neutr_order\"", "lemma bounded_semilattice_inf_top_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      A ===> \n      (=)\n    ) \n    (bounded_semilattice_inf_top_ow (Collect (Domainp A))) \n    class.bounded_semilattice_inf_top\"", "lemma bounded_semilattice_sup_bot_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      A ===> \n      (=)\n    ) \n    (bounded_semilattice_sup_bot_ow (Collect (Domainp A))) \n    class.bounded_semilattice_sup_bot\""], "translations": [["", "lemma semilattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> A) ===> (=)) \n      (\\<lambda>f. semilattice_ow (Collect (Domainp A)) f) semilattice\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===> (=)) (semilattice_ow (Collect (Domainp A)))\n     semilattice", "unfolding\n    semilattice_ow_def semilattice_def \n    semilattice_ow_axioms_def semilattice_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===> (=))\n     (\\<lambda>f.\n         abel_semigroup_ow (Collect (Domainp A)) f \\<and>\n         (\\<forall>x.\n             x \\<in> Collect (Domainp A) \\<longrightarrow> f x x = x))\n     (\\<lambda>f. abel_semigroup f \\<and> (\\<forall>a. f a a = a))", "apply transfer_prover_start"], ["proof (prove)\ngoal (5 subgoals):\n 1. Transfer.Rel (A ===> A ===> ?Rh11) ?ac11 (=)\n 2. Transfer.Rel ((A ===> ?Rh11) ===> ?Rf11) ?ab11 All\n 3. Transfer.Rel ((A ===> A ===> A) ===> ?Re11) ?aa11 abel_semigroup\n 4. Transfer.Rel (?Re11 ===> ?Rf11 ===> (=)) ?a11 (\\<and>)\n 5. (\\<lambda>f.\n        abel_semigroup_ow (Collect (Domainp A)) f \\<and>\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow> f x x = x)) =\n    (\\<lambda>f. ?a11 (?aa11 f) (?ab11 (\\<lambda>a. ?ac11 (f a a) a)))", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f.\n        abel_semigroup_ow (Collect (Domainp A)) f \\<and>\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow> f x x = x)) =\n    (\\<lambda>f.\n        abel_semigroup_ow (Collect (Domainp A)) f \\<and>\n        (\\<forall>a\\<in>Collect (Domainp A). f a a = a))", "by simp"], ["", "lemma semilattice_set_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> A) ===> (=)) \n      (\\<lambda>f. semilattice_set_ow (Collect (Domainp A)) f) semilattice_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===> (=)) (semilattice_set_ow (Collect (Domainp A)))\n     semilattice_set", "unfolding semilattice_set_ow_def semilattice_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===> (=)) (semilattice_ow (Collect (Domainp A)))\n     semilattice", "by transfer_prover"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context semilattice_ow \nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  substituting semilattice_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma left_idem:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w (a \\<^bold>*\\<^sub>o\\<^sub>w b) = a \\<^bold>*\\<^sub>o\\<^sub>w b\"\n    is semilattice.left_idem"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma right_idem:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w b = a \\<^bold>*\\<^sub>o\\<^sub>w b\"\n    is semilattice.right_idem"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "subsection\\<open>Simple upper and lower semilattices\\<close>"], ["", "subsubsection\\<open>Definitions and common properties\\<close>"], ["", "locale semilattice_order_ow = semilattice_ow U f \n  for U :: \"'al set\" and f  +\n  fixes le :: \"['al, 'al] \\<Rightarrow> bool\" (infix \\<open>\\<le>\\<^sub>o\\<^sub>w\\<close> 50)\n    and ls :: \"['al, 'al] \\<Rightarrow> bool\" (infix \\<open><\\<^sub>o\\<^sub>w\\<close> 50)\n  assumes order_iff: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> a \\<le>\\<^sub>o\\<^sub>w b \\<longleftrightarrow> a = a \\<^bold>*\\<^sub>o\\<^sub>w b\"\n    and strict_order_iff: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> a <\\<^sub>o\\<^sub>w b \\<longleftrightarrow> a = a \\<^bold>*\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b\"\nbegin"], ["", "sublocale ordering_ow U \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordering_ow U (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                         (a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b)\n 2. \\<And>a. a \\<in> U \\<Longrightarrow> a \\<le>\\<^sub>o\\<^sub>w a\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U; a \\<le>\\<^sub>o\\<^sub>w b;\n        b \\<le>\\<^sub>o\\<^sub>w a\\<rbrakk>\n       \\<Longrightarrow> a = b\n 4. \\<And>a b c.\n       \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U; a \\<le>\\<^sub>o\\<^sub>w b;\n        b \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n       \\<Longrightarrow> a \\<le>\\<^sub>o\\<^sub>w c", "show \"\\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk> \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) = (a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b)\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                      (a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b)", "apply standard"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; a <\\<^sub>o\\<^sub>w b\\<rbrakk>\n    \\<Longrightarrow> a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b\n 2. \\<lbrakk>a \\<in> U; b \\<in> U;\n     a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> a <\\<^sub>o\\<^sub>w b", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; a <\\<^sub>o\\<^sub>w b\\<rbrakk>\n    \\<Longrightarrow> a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b", "by (auto simp: commute order_iff strict_order_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U;\n     a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> a <\\<^sub>o\\<^sub>w b", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U;\n     a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> a <\\<^sub>o\\<^sub>w b", "by (auto simp: order_iff strict_order_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (?a <\\<^sub>o\\<^sub>w ?b) =\n                    (?a \\<le>\\<^sub>o\\<^sub>w ?b \\<and> ?a \\<noteq> ?b)\n\ngoal (3 subgoals):\n 1. \\<And>a. a \\<in> U \\<Longrightarrow> a \\<le>\\<^sub>o\\<^sub>w a\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U; a \\<le>\\<^sub>o\\<^sub>w b;\n        b \\<le>\\<^sub>o\\<^sub>w a\\<rbrakk>\n       \\<Longrightarrow> a = b\n 3. \\<And>a b c.\n       \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U; a \\<le>\\<^sub>o\\<^sub>w b;\n        b \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n       \\<Longrightarrow> a \\<le>\\<^sub>o\\<^sub>w c", "show \"x \\<in> U \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w x", "by (simp add: order_iff)"], ["proof (state)\nthis:\n  ?x \\<in> U \\<Longrightarrow> ?x \\<le>\\<^sub>o\\<^sub>w ?x\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U; a \\<le>\\<^sub>o\\<^sub>w b;\n        b \\<le>\\<^sub>o\\<^sub>w a\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U; a \\<le>\\<^sub>o\\<^sub>w b;\n        b \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n       \\<Longrightarrow> a \\<le>\\<^sub>o\\<^sub>w c", "show \"\\<lbrakk> x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y; y \\<le>\\<^sub>o\\<^sub>w z \\<rbrakk> \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z\" for x y z"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n     y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n    \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n     y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n    \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z", "assume \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\" and \"x \\<le>\\<^sub>o\\<^sub>w y\" and \"y \\<le>\\<^sub>o\\<^sub>w z\""], ["proof (state)\nthis:\n  x \\<in> U\n  y \\<in> U\n  z \\<in> U\n  x \\<le>\\<^sub>o\\<^sub>w y\n  y \\<le>\\<^sub>o\\<^sub>w z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n     y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n    \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z", "note xy = order_iff[THEN iffD1, OF \\<open>x \\<in> U\\<close> \\<open>y \\<in> U\\<close> \\<open>x \\<le>\\<^sub>o\\<^sub>w y\\<close>]"], ["proof (state)\nthis:\n  x = x \\<^bold>*\\<^sub>o\\<^sub>w y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n     y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n    \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z", "note yz = order_iff[THEN iffD1, OF \\<open>y \\<in> U\\<close> \\<open>z \\<in> U\\<close> \\<open>y \\<le>\\<^sub>o\\<^sub>w z\\<close>]"], ["proof (state)\nthis:\n  y = y \\<^bold>*\\<^sub>o\\<^sub>w z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n     y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n    \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z", "note xz = assoc[OF \\<open>x \\<in> U\\<close> \\<open>y \\<in> U\\<close> \\<open>z \\<in> U\\<close>, folded xy yz, symmetric]"], ["proof (state)\nthis:\n  x = x \\<^bold>*\\<^sub>o\\<^sub>w z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n     y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n    \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>\\<^sub>o\\<^sub>w z", "by (rule order_iff[THEN iffD2, OF \\<open>x \\<in> U\\<close> \\<open>z \\<in> U\\<close> xz])"], ["proof (state)\nthis:\n  x \\<le>\\<^sub>o\\<^sub>w z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> U; ?y \\<in> U; ?z \\<in> U; ?x \\<le>\\<^sub>o\\<^sub>w ?y;\n   ?y \\<le>\\<^sub>o\\<^sub>w ?z\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le>\\<^sub>o\\<^sub>w ?z\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U; a \\<le>\\<^sub>o\\<^sub>w b;\n        b \\<le>\\<^sub>o\\<^sub>w a\\<rbrakk>\n       \\<Longrightarrow> a = b", "show \"\\<lbrakk> x \\<in> U; y \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y; y \\<le>\\<^sub>o\\<^sub>w x \\<rbrakk> \\<Longrightarrow> x = y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; y \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n     y \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk>\n    \\<Longrightarrow> x = y", "by (fastforce simp: commute order_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> U; ?y \\<in> U; ?x \\<le>\\<^sub>o\\<^sub>w ?y;\n   ?y \\<le>\\<^sub>o\\<^sub>w ?x\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal:\nNo subgoals!", "qed"], ["", "notation le (infix \"\\<le>\\<^sub>o\\<^sub>w\" 50)\n  and ls (infix \"<\\<^sub>o\\<^sub>w\" 50)"], ["", "end"], ["", "locale semilattice_order_set_ow = \n  semilattice_order_ow U f le ls + semilattice_set_ow U f\n  for U :: \"'al set\" and f le ls"], ["", "locale inf_ow =\n  fixes U :: \"'al set\" and inf (infixl \\<open>\\<sqinter>\\<^sub>o\\<^sub>w\\<close> 70)\n  assumes inf_closed[simp]: \"\\<lbrakk> x \\<in> U; y \\<in> U \\<rbrakk> \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w y \\<in> U\"\nbegin"], ["", "notation inf (infixl \\<open>\\<sqinter>\\<^sub>o\\<^sub>w\\<close> 70)"], ["", "lemma inf_closed'[simp]: \"\\<forall>x\\<in>U. \\<forall>y\\<in>U. x \\<sqinter>\\<^sub>o\\<^sub>w y \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>U.\n       \\<forall>y\\<in>U. x \\<sqinter>\\<^sub>o\\<^sub>w y \\<in> U", "by simp"], ["", "end"], ["", "locale inf_pair_ow = inf\\<^sub>1: inf_ow U\\<^sub>1 inf\\<^sub>1 + inf\\<^sub>2: inf_ow U\\<^sub>2 inf\\<^sub>2\n  for U\\<^sub>1 :: \"'al set\" and inf\\<^sub>1\n    and U\\<^sub>2 :: \"'bl set\" and inf\\<^sub>2\nbegin"], ["", "notation inf\\<^sub>1 (infixl \\<open>\\<sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1\\<close> 70)"], ["", "notation inf\\<^sub>2 (infixl \\<open>\\<sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2\\<close> 70)"], ["", "end"], ["", "locale semilattice_inf_ow = inf_ow U inf + order_ow U le ls \n  for U :: \"'al set\" and inf le ls  +\n  assumes inf_le1[simp]: \"\\<lbrakk> x \\<in> U; y \\<in> U \\<rbrakk> \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w y \\<le>\\<^sub>o\\<^sub>w x\"\n    and inf_le2[simp]: \"\\<lbrakk> x \\<in> U; y \\<in> U \\<rbrakk> \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w y \\<le>\\<^sub>o\\<^sub>w y\"\n    and inf_greatest: \n      \"\\<lbrakk> x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y; x \\<le>\\<^sub>o\\<^sub>w z \\<rbrakk> \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w y \\<sqinter>\\<^sub>o\\<^sub>w z\"\nbegin"], ["", "sublocale inf: semilattice_order_ow U \\<open>(\\<sqinter>\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilattice_order_ow U (\\<sqinter>\\<^sub>o\\<^sub>w)\n     (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w)", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b \\<in> U\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                         b \\<sqinter>\\<^sub>o\\<^sub>w\n                         c =\n                         a \\<sqinter>\\<^sub>o\\<^sub>w\n                         (b \\<sqinter>\\<^sub>o\\<^sub>w c)\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b =\n                         b \\<sqinter>\\<^sub>o\\<^sub>w a\n 4. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x\n 5. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a \\<le>\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b)\n 6. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show *: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b \\<in> U\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b \\<in> U", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> ?a \\<sqinter>\\<^sub>o\\<^sub>w ?b \\<in> U\n\ngoal (5 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                         b \\<sqinter>\\<^sub>o\\<^sub>w\n                         c =\n                         a \\<sqinter>\\<^sub>o\\<^sub>w\n                         (b \\<sqinter>\\<^sub>o\\<^sub>w c)\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b =\n                         b \\<sqinter>\\<^sub>o\\<^sub>w a\n 3. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a \\<le>\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b)\n 5. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show **: \"\\<lbrakk> a \\<in> U; b \\<in> U; c \\<in> U \\<rbrakk> \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c = a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c)\" \n    for a b c"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "assume \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\""], ["proof (state)\nthis:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have ab_c: \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c \\<in> U\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c \\<in> U", "by simp"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c \\<in> U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have a_bc: \"a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<in> U\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<in> U", "by simp"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<in> U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c \\<le>\\<^sub>o\\<^sub>w b\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n    c \\<le>\\<^sub>o\\<^sub>w\n    b", "by (meson * inf_le1 inf_le2 order_trans)"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "moreover"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c \\<le>\\<^sub>o\\<^sub>w c\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n    c \\<le>\\<^sub>o\\<^sub>w\n    c", "by simp"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "ultimately"], ["proof (chain)\npicking this:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  b\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  c", "have abc_le_bc: \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c \\<le>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c\""], ["proof (prove)\nusing this:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  b\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  c\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n    c \\<le>\\<^sub>o\\<^sub>w\n    b \\<sqinter>\\<^sub>o\\<^sub>w c", "by (rule inf_greatest[OF ab_c \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>])"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  b \\<sqinter>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have abc_le_a: \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c \\<le>\\<^sub>o\\<^sub>w a\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n    c \\<le>\\<^sub>o\\<^sub>w\n    a", "by (meson inf_le1 order_trans inf_closed)"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "note lhs = \n      inf_greatest[OF ab_c \\<open>a \\<in> U\\<close> *[OF \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>] abc_le_a abc_le_bc]"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have \"a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w a\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w\n    (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n    a", "by (meson * inf_le1 order_trans)"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "moreover"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have \"a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w b\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w\n    (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n    b", "by (meson * inf_le1 inf_le2 order_trans)"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "ultimately"], ["proof (chain)\npicking this:\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  a\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  b", "have abc_le_bc: \"a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w a \\<sqinter>\\<^sub>o\\<^sub>w b\""], ["proof (prove)\nusing this:\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  a\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  b\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w\n    (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n    a \\<sqinter>\\<^sub>o\\<^sub>w b", "by (rule inf_greatest[OF a_bc \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close>])"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  a \\<sqinter>\\<^sub>o\\<^sub>w b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have abc_le_a: \"a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w c\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w\n    (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n    c", "by (meson inf_le2 order_trans inf_closed)"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "note rhs =\n      inf_greatest[OF a_bc *[OF \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close>] \\<open>c \\<in> U\\<close> abc_le_bc abc_le_a]"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w\n  (b \\<sqinter>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w\n                      b \\<sqinter>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<sqinter>\\<^sub>o\\<^sub>w\n                      (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "show \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c = a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c =\n    a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c)", "by (rule antisym[OF ab_c a_bc lhs rhs])"], ["proof (state)\nthis:\n  a \\<sqinter>\\<^sub>o\\<^sub>w b \\<sqinter>\\<^sub>o\\<^sub>w c =\n  a \\<sqinter>\\<^sub>o\\<^sub>w (b \\<sqinter>\\<^sub>o\\<^sub>w c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U; ?c \\<in> U\\<rbrakk>\n  \\<Longrightarrow> ?a \\<sqinter>\\<^sub>o\\<^sub>w\n                    ?b \\<sqinter>\\<^sub>o\\<^sub>w\n                    ?c =\n                    ?a \\<sqinter>\\<^sub>o\\<^sub>w\n                    (?b \\<sqinter>\\<^sub>o\\<^sub>w ?c)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b =\n                         b \\<sqinter>\\<^sub>o\\<^sub>w a\n 2. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a \\<le>\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b)\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show ***: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b = b \\<sqinter>\\<^sub>o\\<^sub>w a\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter>\\<^sub>o\\<^sub>w b =\n                      b \\<sqinter>\\<^sub>o\\<^sub>w a", "by (simp add: eq_iff inf_greatest)"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> ?a \\<sqinter>\\<^sub>o\\<^sub>w ?b =\n                    ?b \\<sqinter>\\<^sub>o\\<^sub>w ?a\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a \\<le>\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b)\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show ****: \"x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x", "assume \"x \\<in> U\""], ["proof (state)\nthis:\n  x \\<in> U\n\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x", "have \"x \\<sqinter>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x", "by (simp add: \\<open>x \\<in> U\\<close>)"], ["proof (state)\nthis:\n  x \\<sqinter>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x\n\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x", "moreover"], ["proof (state)\nthis:\n  x \\<sqinter>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x\n\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x", "have \"x \\<le>\\<^sub>o\\<^sub>w x \\<sqinter>\\<^sub>o\\<^sub>w x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>\\<^sub>o\\<^sub>w x \\<sqinter>\\<^sub>o\\<^sub>w x", "by (simp add: \\<open>x \\<in> U\\<close> inf_greatest)"], ["proof (state)\nthis:\n  x \\<le>\\<^sub>o\\<^sub>w x \\<sqinter>\\<^sub>o\\<^sub>w x\n\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w x = x", "ultimately"], ["proof (chain)\npicking this:\n  x \\<sqinter>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x\n  x \\<le>\\<^sub>o\\<^sub>w x \\<sqinter>\\<^sub>o\\<^sub>w x", "show \"x \\<sqinter>\\<^sub>o\\<^sub>w x = x\""], ["proof (prove)\nusing this:\n  x \\<sqinter>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x\n  x \\<le>\\<^sub>o\\<^sub>w x \\<sqinter>\\<^sub>o\\<^sub>w x\n\ngoal (1 subgoal):\n 1. x \\<sqinter>\\<^sub>o\\<^sub>w x = x", "by (simp add: \\<open>x \\<in> U\\<close> antisym)"], ["proof (state)\nthis:\n  x \\<sqinter>\\<^sub>o\\<^sub>w x = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> U \\<Longrightarrow> ?x \\<sqinter>\\<^sub>o\\<^sub>w ?x = ?x\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a \\<le>\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b)\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show *****: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> (a \\<le>\\<^sub>o\\<^sub>w b) = (a = a \\<sqinter>\\<^sub>o\\<^sub>w b)\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> (a \\<le>\\<^sub>o\\<^sub>w b) =\n                      (a = a \\<sqinter>\\<^sub>o\\<^sub>w b)", "by (metis * *** eq_iff inf_greatest inf_le1 inf_le2)"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (?a \\<le>\\<^sub>o\\<^sub>w ?b) =\n                    (?a = ?a \\<sqinter>\\<^sub>o\\<^sub>w ?b)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                         (a = a \\<sqinter>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) = (a = a \\<sqinter>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b)\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> (a <\\<^sub>o\\<^sub>w b) =\n                      (a = a \\<sqinter>\\<^sub>o\\<^sub>w b \\<and>\n                       a \\<noteq> b)", "by (simp add: ***** less_le)"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (?a <\\<^sub>o\\<^sub>w ?b) =\n                    (?a = ?a \\<sqinter>\\<^sub>o\\<^sub>w ?b \\<and>\n                     ?a \\<noteq> ?b)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale Inf_fin: semilattice_order_set_ow U \\<open>(\\<sqinter>\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilattice_order_set_ow U (\\<sqinter>\\<^sub>o\\<^sub>w)\n     (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w)", ".."], ["", "end"], ["", "locale semilattice_inf_pair_ow = \n  sl_inf\\<^sub>1: semilattice_inf_ow U\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 +\n  sl_inf\\<^sub>2: semilattice_inf_ow U\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2\n  for U\\<^sub>1 :: \"'al set\" and inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1\n    and U\\<^sub>2 :: \"'bl set\" and inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2\nbegin"], ["", "sublocale inf_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_pair_ow U\\<^sub>1 inf\\<^sub>1 U\\<^sub>2 inf\\<^sub>2", ".."], ["", "sublocale order_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. order_pair_ow U\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 U\\<^sub>2 le\\<^sub>2\n     ls\\<^sub>2", ".."], ["", "end"], ["", "locale sup_ow =\n  fixes U :: \"'ao set\" and sup :: \"['ao, 'ao] \\<Rightarrow> 'ao\" (infixl \\<open>\\<squnion>\\<^sub>o\\<^sub>w\\<close> 70)\n  assumes sup_closed[simp]: \"\\<lbrakk> x \\<in> U; y \\<in> U \\<rbrakk> \\<Longrightarrow> sup x y \\<in> U\"\nbegin"], ["", "notation sup (infixl \\<open>\\<squnion>\\<^sub>o\\<^sub>w\\<close> 70)"], ["", "lemma sup_closed'[simp]: \"\\<forall>x\\<in>U. \\<forall>y\\<in>U. x \\<squnion>\\<^sub>o\\<^sub>w y \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>U.\n       \\<forall>y\\<in>U. x \\<squnion>\\<^sub>o\\<^sub>w y \\<in> U", "by simp"], ["", "end"], ["", "locale sup_pair_ow = sup\\<^sub>1: sup_ow U\\<^sub>1 sup\\<^sub>1 + sup\\<^sub>2: sup_ow U\\<^sub>2 sup\\<^sub>2\n  for U\\<^sub>1 :: \"'al set\" and sup\\<^sub>1\n    and U\\<^sub>2 :: \"'bl set\" and sup\\<^sub>2\nbegin"], ["", "notation sup\\<^sub>1 (infixl \\<open>\\<squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1\\<close> 70)"], ["", "notation sup\\<^sub>2 (infixl \\<open>\\<squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2\\<close> 70)"], ["", "end"], ["", "locale semilattice_sup_ow = sup_ow U sup + order_ow U le ls \n  for U :: \"'al set\" and sup le ls + \n  assumes sup_ge1[simp]: \"\\<lbrakk> x \\<in> U; y \\<in> U \\<rbrakk> \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w y\"\n    and sup_ge2[simp]: \"\\<lbrakk> y \\<in> U; x \\<in> U \\<rbrakk> \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w y\"\n    and sup_least: \n      \"\\<lbrakk> y \\<in> U; x \\<in> U; z \\<in> U; y \\<le>\\<^sub>o\\<^sub>w x; z \\<le>\\<^sub>o\\<^sub>w x \\<rbrakk> \\<Longrightarrow> y \\<squnion>\\<^sub>o\\<^sub>w z \\<le>\\<^sub>o\\<^sub>w x\"\nbegin"], ["", "sublocale sup: semilattice_order_ow U \\<open>(\\<squnion>\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<ge>\\<^sub>o\\<^sub>w)\\<close> \\<open>(>\\<^sub>o\\<^sub>w)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilattice_order_ow U (\\<squnion>\\<^sub>o\\<^sub>w)\n     (\\<lambda>x y. y \\<le>\\<^sub>o\\<^sub>w x)\n     (\\<lambda>x y. y <\\<^sub>o\\<^sub>w x)", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b \\<in> U\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                         b \\<squnion>\\<^sub>o\\<^sub>w\n                         c =\n                         a \\<squnion>\\<^sub>o\\<^sub>w\n                         (b \\<squnion>\\<^sub>o\\<^sub>w c)\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b =\n                         b \\<squnion>\\<^sub>o\\<^sub>w a\n 4. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x\n 5. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b \\<le>\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b)\n 6. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b <\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show *: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b \\<in> U\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b \\<in> U", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> ?a \\<squnion>\\<^sub>o\\<^sub>w ?b \\<in> U\n\ngoal (5 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                         b \\<squnion>\\<^sub>o\\<^sub>w\n                         c =\n                         a \\<squnion>\\<^sub>o\\<^sub>w\n                         (b \\<squnion>\\<^sub>o\\<^sub>w c)\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b =\n                         b \\<squnion>\\<^sub>o\\<^sub>w a\n 3. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b \\<le>\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b)\n 5. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b <\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show **: \n    \"\\<lbrakk> a \\<in> U; b \\<in> U; c \\<in> U \\<rbrakk> \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c = a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\" for a b c"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "assume \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\""], ["proof (state)\nthis:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have ab_c: \"a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c \\<in> U\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c \\<in> U", "by simp"], ["proof (state)\nthis:\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c \\<in> U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have a_bc: \"a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c) \\<in> U\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c) \\<in> U", "by simp"], ["proof (state)\nthis:\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c) \\<in> U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have \"b \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. b \\<le>\\<^sub>o\\<^sub>w\n    a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c", "by (meson order_trans sup_ge1 sup_ge2 sup_closed')"], ["proof (state)\nthis:\n  b \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "moreover"], ["proof (state)\nthis:\n  b \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have \"c \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. c \\<le>\\<^sub>o\\<^sub>w\n    a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c", "by simp"], ["proof (state)\nthis:\n  c \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n  c \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c", "have ab_le_abc: \"b \\<squnion>\\<^sub>o\\<^sub>w c \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\""], ["proof (prove)\nusing this:\n  b \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n  c \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. b \\<squnion>\\<^sub>o\\<^sub>w c \\<le>\\<^sub>o\\<^sub>w\n    a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c", "by (rule sup_least[OF \\<open>b \\<in> U\\<close> ab_c \\<open>c \\<in> U\\<close>])"], ["proof (state)\nthis:\n  b \\<squnion>\\<^sub>o\\<^sub>w c \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have a_le_abc: \"a \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<le>\\<^sub>o\\<^sub>w\n    a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c", "by (meson \"*\" order_trans sup_ge1)"], ["proof (state)\nthis:\n  a \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "note rhs = \n      sup_least[OF \\<open>a \\<in> U\\<close> ab_c *[OF \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>] a_le_abc ab_le_abc]"], ["proof (state)\nthis:\n  a \\<squnion>\\<^sub>o\\<^sub>w\n  (b \\<squnion>\\<^sub>o\\<^sub>w c) \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have \"a \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. a \\<le>\\<^sub>o\\<^sub>w\n    a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)", "by simp"], ["proof (state)\nthis:\n  a \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "moreover"], ["proof (state)\nthis:\n  a \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have \"b \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. b \\<le>\\<^sub>o\\<^sub>w\n    a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)", "by (meson order_trans sup_ge1 sup_ge2 sup_closed')"], ["proof (state)\nthis:\n  b \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "ultimately"], ["proof (chain)\npicking this:\n  a \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n  b \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)", "have ab_le_abc: \"a \\<squnion>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\""], ["proof (prove)\nusing this:\n  a \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n  b \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n\ngoal (1 subgoal):\n 1. a \\<squnion>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w\n    a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)", "by (rule sup_least[OF \\<open>a \\<in> U\\<close> a_bc \\<open>b \\<in> U\\<close>])"], ["proof (state)\nthis:\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "from \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close> \\<open>c \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U", "have c_le_abc: \"c \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\""], ["proof (prove)\nusing this:\n  a \\<in> U\n  b \\<in> U\n  c \\<in> U\n\ngoal (1 subgoal):\n 1. c \\<le>\\<^sub>o\\<^sub>w\n    a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)", "by (meson \"*\" order_trans sup_ge2)"], ["proof (state)\nthis:\n  c \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "note lhs =\n      sup_least[OF *[OF \\<open>a \\<in> U\\<close> \\<open>b \\<in> U\\<close>] a_bc \\<open>c \\<in> U\\<close> ab_le_abc c_le_abc]"], ["proof (state)\nthis:\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w\n  c \\<le>\\<^sub>o\\<^sub>w\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w\n                      b \\<squnion>\\<^sub>o\\<^sub>w\n                      c =\n                      a \\<squnion>\\<^sub>o\\<^sub>w\n                      (b \\<squnion>\\<^sub>o\\<^sub>w c)", "show \"a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c = a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c =\n    a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)", "by (rule antisym[OF ab_c a_bc lhs rhs])"], ["proof (state)\nthis:\n  a \\<squnion>\\<^sub>o\\<^sub>w b \\<squnion>\\<^sub>o\\<^sub>w c =\n  a \\<squnion>\\<^sub>o\\<^sub>w (b \\<squnion>\\<^sub>o\\<^sub>w c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U; ?c \\<in> U\\<rbrakk>\n  \\<Longrightarrow> ?a \\<squnion>\\<^sub>o\\<^sub>w\n                    ?b \\<squnion>\\<^sub>o\\<^sub>w\n                    ?c =\n                    ?a \\<squnion>\\<^sub>o\\<^sub>w\n                    (?b \\<squnion>\\<^sub>o\\<^sub>w ?c)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b =\n                         b \\<squnion>\\<^sub>o\\<^sub>w a\n 2. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b \\<le>\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b)\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b <\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show ***: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b = b \\<squnion>\\<^sub>o\\<^sub>w a\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion>\\<^sub>o\\<^sub>w b =\n                      b \\<squnion>\\<^sub>o\\<^sub>w a", "by (simp add: eq_iff sup_least)"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> ?a \\<squnion>\\<^sub>o\\<^sub>w ?b =\n                    ?b \\<squnion>\\<^sub>o\\<^sub>w ?a\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b \\<le>\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b)\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b <\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show ****: \"x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x", "assume \"x \\<in> U\""], ["proof (state)\nthis:\n  x \\<in> U\n\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x", "have \"x \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w x", "by (simp add: \\<open>x \\<in> U\\<close>)"], ["proof (state)\nthis:\n  x \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w x\n\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x", "moreover"], ["proof (state)\nthis:\n  x \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w x\n\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x", "have \"x \\<squnion>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x", "by (simp add: \\<open>x \\<in> U\\<close> sup_least)"], ["proof (state)\nthis:\n  x \\<squnion>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x\n\ngoal (1 subgoal):\n 1. x \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w x = x", "ultimately"], ["proof (chain)\npicking this:\n  x \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w x\n  x \\<squnion>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x", "show \"x \\<squnion>\\<^sub>o\\<^sub>w x = x\""], ["proof (prove)\nusing this:\n  x \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w x\n  x \\<squnion>\\<^sub>o\\<^sub>w x \\<le>\\<^sub>o\\<^sub>w x\n\ngoal (1 subgoal):\n 1. x \\<squnion>\\<^sub>o\\<^sub>w x = x", "by (simp add: \\<open>x \\<in> U\\<close> antisym)"], ["proof (state)\nthis:\n  x \\<squnion>\\<^sub>o\\<^sub>w x = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> U \\<Longrightarrow> ?x \\<squnion>\\<^sub>o\\<^sub>w ?x = ?x\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b \\<le>\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b)\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b <\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show *****: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> (a \\<ge>\\<^sub>o\\<^sub>w b) = (a = a \\<squnion>\\<^sub>o\\<^sub>w b)\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> (b \\<le>\\<^sub>o\\<^sub>w a) =\n                      (a = a \\<squnion>\\<^sub>o\\<^sub>w b)", "by (metis *** sup_ge2 sup_least eq_iff eq_refl sup_closed')"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (?b \\<le>\\<^sub>o\\<^sub>w ?a) =\n                    (?a = ?a \\<squnion>\\<^sub>o\\<^sub>w ?b)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (b <\\<^sub>o\\<^sub>w a) =\n                         (a = a \\<squnion>\\<^sub>o\\<^sub>w b \\<and>\n                          a \\<noteq> b)", "show \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> (a >\\<^sub>o\\<^sub>w b) = (a = a \\<squnion>\\<^sub>o\\<^sub>w b \\<and> a \\<noteq> b)\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U\\<rbrakk>\n    \\<Longrightarrow> (b <\\<^sub>o\\<^sub>w a) =\n                      (a = a \\<squnion>\\<^sub>o\\<^sub>w b \\<and>\n                       a \\<noteq> b)", "by (auto simp: ***** less_le)"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> U; ?b \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (?b <\\<^sub>o\\<^sub>w ?a) =\n                    (?a = ?a \\<squnion>\\<^sub>o\\<^sub>w ?b \\<and>\n                     ?a \\<noteq> ?b)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale Sup_fin: semilattice_order_set_ow U sup \"(\\<ge>\\<^sub>o\\<^sub>w)\" \"(>\\<^sub>o\\<^sub>w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semilattice_order_set_ow U (\\<squnion>\\<^sub>o\\<^sub>w)\n     (\\<lambda>x y. y \\<le>\\<^sub>o\\<^sub>w x)\n     (\\<lambda>x y. y <\\<^sub>o\\<^sub>w x)", ".."], ["", "end"], ["", "locale semilattice_sup_pair_ow = \n  sl_sup\\<^sub>1: semilattice_sup_ow U\\<^sub>1 sup\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 +\n  sl_sup\\<^sub>2: semilattice_sup_ow U\\<^sub>2 sup\\<^sub>2 le\\<^sub>2 ls\\<^sub>2\n  for U\\<^sub>1 :: \"'al set\" and sup\\<^sub>1 le\\<^sub>1 ls\\<^sub>1\n    and U\\<^sub>2 :: \"'bl set\" and sup\\<^sub>2 le\\<^sub>2 ls\\<^sub>2\nbegin"], ["", "sublocale sup_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_pair_ow U\\<^sub>1 sup\\<^sub>1 U\\<^sub>2 sup\\<^sub>2", ".."], ["", "sublocale order_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. order_pair_ow U\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 U\\<^sub>2 le\\<^sub>2\n     ls\\<^sub>2", ".."], ["", "end"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma semilattice_order_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    ) (semilattice_order_ow (Collect (Domainp A))) semilattice_order\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_order_ow (Collect (Domainp A))) semilattice_order", "unfolding\n    semilattice_order_ow_def semilattice_order_def \n    semilattice_order_ow_axioms_def semilattice_order_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (\\<lambda>f le ls.\n         semilattice_ow (Collect (Domainp A)) f \\<and>\n         (\\<forall>a b.\n             a \\<in> Collect (Domainp A) \\<longrightarrow>\n             b \\<in> Collect (Domainp A) \\<longrightarrow>\n             le a b = (a = f a b)) \\<and>\n         (\\<forall>a b.\n             a \\<in> Collect (Domainp A) \\<longrightarrow>\n             b \\<in> Collect (Domainp A) \\<longrightarrow>\n             ls a b = (a = f a b \\<and> a \\<noteq> b)))\n     (\\<lambda>f less_eq less.\n         semilattice f \\<and>\n         (\\<forall>a b. less_eq a b = (a = f a b)) \\<and>\n         (\\<forall>a b. less a b = (a = f a b \\<and> a \\<noteq> b)))", "apply transfer_prover_start"], ["proof (prove)\ngoal (15 subgoals):\n 1. Transfer.Rel (A ===> A ===> ?Ru33) ?am33 (=)\n 2. Transfer.Rel (?Ru33 ===> ?Rt33) ?al33 Not\n 3. Transfer.Rel (A ===> A ===> ?Rs33) ?ak33 (=)\n 4. Transfer.Rel (?Rs33 ===> ?Rt33 ===> ?Rr33) ?aj33 (\\<and>)\n 5. Transfer.Rel ((=) ===> ?Rr33 ===> ?Rq33) ?ai33 (=)\n 6. Transfer.Rel ((A ===> ?Rq33) ===> ?Rp33) ?ah33 All\n 7. Transfer.Rel ((A ===> ?Rp33) ===> ?Rl33) ?ag33 All\n 8. Transfer.Rel (A ===> A ===> ?Ro33) ?af33 (=)\n 9. Transfer.Rel ((=) ===> ?Ro33 ===> ?Rn33) ?ae33 (=)\n 10. Transfer.Rel ((A ===> ?Rn33) ===> ?Rm33) ?ad33 All\nA total of 15 subgoals...", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f le ls.\n        semilattice_ow (Collect (Domainp A)) f \\<and>\n        (\\<forall>a b.\n            a \\<in> Collect (Domainp A) \\<longrightarrow>\n            b \\<in> Collect (Domainp A) \\<longrightarrow>\n            le a b = (a = f a b)) \\<and>\n        (\\<forall>a b.\n            a \\<in> Collect (Domainp A) \\<longrightarrow>\n            b \\<in> Collect (Domainp A) \\<longrightarrow>\n            ls a b = (a = f a b \\<and> a \\<noteq> b))) =\n    (\\<lambda>f less_eq less.\n        semilattice_ow (Collect (Domainp A)) f \\<and>\n        (\\<forall>a\\<in>Collect (Domainp A).\n            \\<forall>b\\<in>Collect (Domainp A).\n               less_eq a b = (a = f a b)) \\<and>\n        (\\<forall>a\\<in>Collect (Domainp A).\n            \\<forall>b\\<in>Collect (Domainp A).\n               less a b = (a = f a b \\<and> a \\<noteq> b)))", "by simp"], ["", "lemma semilattice_order_set_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    ) (semilattice_order_set_ow (Collect (Domainp A))) semilattice_order_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_order_set_ow (Collect (Domainp A))) semilattice_order_set", "unfolding semilattice_order_set_ow_def semilattice_order_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (\\<lambda>f le ls.\n         semilattice_order_ow (Collect (Domainp A)) f le ls \\<and>\n         semilattice_set_ow (Collect (Domainp A)) f)\n     (\\<lambda>f less_eq less.\n         semilattice_order f less_eq less \\<and> semilattice_set f)", "apply transfer_prover_start"], ["proof (prove)\ngoal (4 subgoals):\n 1. Transfer.Rel ((A ===> A ===> A) ===> ?Rg9) ?ab9 semilattice_set\n 2. Transfer.Rel\n     ((A ===> A ===> A) ===>\n      (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> ?Rf9)\n     ?aa9 semilattice_order\n 3. Transfer.Rel (?Rf9 ===> ?Rg9 ===> (=)) ?a9 (\\<and>)\n 4. (\\<lambda>f le ls.\n        semilattice_order_ow (Collect (Domainp A)) f le ls \\<and>\n        semilattice_set_ow (Collect (Domainp A)) f) =\n    (\\<lambda>f less_eq less. ?a9 (?aa9 f less_eq less) (?ab9 f))", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f le ls.\n        semilattice_order_ow (Collect (Domainp A)) f le ls \\<and>\n        semilattice_set_ow (Collect (Domainp A)) f) =\n    (\\<lambda>f less_eq less.\n        semilattice_order_ow (Collect (Domainp A)) f less_eq less \\<and>\n        semilattice_set_ow (Collect (Domainp A)) f)", "by simp"], ["", "lemma semilattice_inf_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    ) (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf", "let ?P = \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (=)\n    )\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf", "let ?semilattice_ow = \"semilattice_inf_ow (Collect (Domainp A))\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf", "let ?rf_UNIV = \n    \"(\\<lambda>inf::['b, 'b] \\<Rightarrow> 'b. (\\<forall>x y. x \\<in> UNIV \\<longrightarrow> y \\<in> UNIV \\<longrightarrow> inf x y \\<in> UNIV))\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf", "have \n    \"?P \n    ?semilattice_ow \n    (\\<lambda>inf le ls. ?rf_UNIV inf \\<and> class.semilattice_inf inf le ls)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_inf_ow (Collect (Domainp A)))\n     (\\<lambda>inf le ls.\n         (\\<forall>x y.\n             x \\<in> UNIV \\<longrightarrow>\n             y \\<in> UNIV \\<longrightarrow> inf x y \\<in> UNIV) \\<and>\n         class.semilattice_inf inf le ls)", "unfolding \n      class.semilattice_inf_def semilattice_inf_ow_def \n      class.semilattice_inf_axioms_def semilattice_inf_ow_axioms_def\n      inf_ow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (\\<lambda>inf le ls.\n         (\\<forall>x y.\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             inf x y \\<in> Collect (Domainp A)) \\<and>\n         order_ow (Collect (Domainp A)) le ls \\<and>\n         (\\<forall>x y.\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             le (inf x y) x) \\<and>\n         (\\<forall>x y.\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             le (inf x y) y) \\<and>\n         (\\<forall>x y z.\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             z \\<in> Collect (Domainp A) \\<longrightarrow>\n             le x y \\<longrightarrow>\n             le x z \\<longrightarrow> le x (inf y z)))\n     (\\<lambda>inf le ls.\n         (\\<forall>x y.\n             x \\<in> UNIV \\<longrightarrow>\n             y \\<in> UNIV \\<longrightarrow> inf x y \\<in> UNIV) \\<and>\n         class.order le ls \\<and>\n         (\\<forall>x y. le (inf x y) x) \\<and>\n         (\\<forall>x y. le (inf x y) y) \\<and>\n         (\\<forall>x y z.\n             le x y \\<longrightarrow>\n             le x z \\<longrightarrow> le x (inf y z)))", "apply transfer_prover_start"], ["proof (prove)\ngoal (25 subgoals):\n 1. Transfer.Rel ((=) ===> (=) ===> ?Rac54) ?aw54 (\\<longrightarrow>)\n 2. Transfer.Rel ((=) ===> ?Rac54 ===> ?Rab54) ?av54 (\\<longrightarrow>)\n 3. Transfer.Rel ((A ===> ?Rab54) ===> ?Raa54) ?au54 All\n 4. Transfer.Rel ((A ===> ?Raa54) ===> ?Rz54) ?at54 All\n 5. Transfer.Rel ((A ===> ?Rz54) ===> ?Rx54) ?as54 All\n 6. Transfer.Rel ((A ===> (=)) ===> ?Ry54) ?ar54 All\n 7. Transfer.Rel ((A ===> ?Ry54) ===> ?Rw54) ?aq54 All\n 8. Transfer.Rel (?Rw54 ===> ?Rx54 ===> ?Ru54) ?ap54 (\\<and>)\n 9. Transfer.Rel ((A ===> (=)) ===> ?Rv54) ?ao54 All\n 10. Transfer.Rel ((A ===> ?Rv54) ===> ?Rt54) ?an54 All\nA total of 25 subgoals...", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>inf le ls.\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            inf x y \\<in> Collect (Domainp A)) \\<and>\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            le (inf x y) x) \\<and>\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            le (inf x y) y) \\<and>\n        (\\<forall>x y z.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            z \\<in> Collect (Domainp A) \\<longrightarrow>\n            le x y \\<longrightarrow>\n            le x z \\<longrightarrow> le x (inf y z))) =\n    (\\<lambda>inf le ls.\n        (\\<forall>x\\<in>Collect (Domainp A).\n            \\<forall>y\\<in>Collect (Domainp A).\n               x \\<in> Collect (Domainp A) \\<longrightarrow>\n               y \\<in> Collect (Domainp A) \\<longrightarrow>\n               inf x y \\<in> Collect (Domainp A)) \\<and>\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x\\<in>Collect (Domainp A).\n            \\<forall>y\\<in>Collect (Domainp A). le (inf x y) x) \\<and>\n        (\\<forall>x\\<in>Collect (Domainp A).\n            \\<forall>y\\<in>Collect (Domainp A). le (inf x y) y) \\<and>\n        (\\<forall>x\\<in>Collect (Domainp A).\n            \\<forall>y\\<in>Collect (Domainp A).\n               \\<forall>z\\<in>Collect (Domainp A).\n                  le x y \\<longrightarrow>\n                  le x z \\<longrightarrow> le x (inf y z)))", "unfolding Ball_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>inf le ls.\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            inf x y \\<in> Collect (Domainp A)) \\<and>\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            le (inf x y) x) \\<and>\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            le (inf x y) y) \\<and>\n        (\\<forall>x y z.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            z \\<in> Collect (Domainp A) \\<longrightarrow>\n            le x y \\<longrightarrow>\n            le x z \\<longrightarrow> le x (inf y z))) =\n    (\\<lambda>inf le ls.\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>xa.\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                x \\<in> Collect (Domainp A) \\<longrightarrow>\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                inf x xa \\<in> Collect (Domainp A))) \\<and>\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>xa.\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                le (inf x xa) x)) \\<and>\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>xa.\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                le (inf x xa) xa)) \\<and>\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>xa.\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                (\\<forall>xb.\n                    xb \\<in> Collect (Domainp A) \\<longrightarrow>\n                    le x xa \\<longrightarrow>\n                    le x xb \\<longrightarrow> le x (inf xa xb)))))", "by fastforce"], ["proof (state)\nthis:\n  ((A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n   (semilattice_inf_ow (Collect (Domainp A)))\n   (\\<lambda>inf le ls.\n       (\\<forall>x y.\n           x \\<in> UNIV \\<longrightarrow>\n           y \\<in> UNIV \\<longrightarrow> inf x y \\<in> UNIV) \\<and>\n       class.semilattice_inf inf le ls)\n\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf", "then"], ["proof (chain)\npicking this:\n  ((A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n   (semilattice_inf_ow (Collect (Domainp A)))\n   (\\<lambda>inf le ls.\n       (\\<forall>x y.\n           x \\<in> UNIV \\<longrightarrow>\n           y \\<in> UNIV \\<longrightarrow> inf x y \\<in> UNIV) \\<and>\n       class.semilattice_inf inf le ls)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n   (semilattice_inf_ow (Collect (Domainp A)))\n   (\\<lambda>inf le ls.\n       (\\<forall>x y.\n           x \\<in> UNIV \\<longrightarrow>\n           y \\<in> UNIV \\<longrightarrow> inf x y \\<in> UNIV) \\<and>\n       class.semilattice_inf inf le ls)\n\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf", "by simp"], ["proof (state)\nthis:\n  ((A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n   (semilattice_inf_ow (Collect (Domainp A))) class.semilattice_inf\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma semilattice_sup_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    ) (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup", "let ?P = \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (=)\n    )\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup", "let ?semilattice_ow = \"semilattice_sup_ow (Collect (Domainp A))\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup", "let ?rf_UNIV = \n    \"(\\<lambda>sup::['b, 'b] \\<Rightarrow> 'b. (\\<forall>x y. x \\<in> UNIV \\<longrightarrow> y \\<in> UNIV \\<longrightarrow> sup x y \\<in> UNIV))\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup", "have \n    \"?P \n    ?semilattice_ow \n    (\\<lambda>sup le ls. ?rf_UNIV sup \\<and> class.semilattice_sup sup le ls)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_sup_ow (Collect (Domainp A)))\n     (\\<lambda>sup le ls.\n         (\\<forall>x y.\n             x \\<in> UNIV \\<longrightarrow>\n             y \\<in> UNIV \\<longrightarrow> sup x y \\<in> UNIV) \\<and>\n         class.semilattice_sup sup le ls)", "unfolding \n    class.semilattice_sup_def semilattice_sup_ow_def \n    class.semilattice_sup_axioms_def semilattice_sup_ow_axioms_def\n    sup_ow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (\\<lambda>sup le ls.\n         (\\<forall>x y.\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             sup x y \\<in> Collect (Domainp A)) \\<and>\n         order_ow (Collect (Domainp A)) le ls \\<and>\n         (\\<forall>x y.\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             le x (sup x y)) \\<and>\n         (\\<forall>y x.\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             le y (sup x y)) \\<and>\n         (\\<forall>y x z.\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             z \\<in> Collect (Domainp A) \\<longrightarrow>\n             le y x \\<longrightarrow>\n             le z x \\<longrightarrow> le (sup y z) x))\n     (\\<lambda>sup le ls.\n         (\\<forall>x y.\n             x \\<in> UNIV \\<longrightarrow>\n             y \\<in> UNIV \\<longrightarrow> sup x y \\<in> UNIV) \\<and>\n         class.order le ls \\<and>\n         (\\<forall>x y. le x (sup x y)) \\<and>\n         (\\<forall>y x. le y (sup x y)) \\<and>\n         (\\<forall>y x z.\n             le y x \\<longrightarrow>\n             le z x \\<longrightarrow> le (sup y z) x))", "apply transfer_prover_start"], ["proof (prove)\ngoal (25 subgoals):\n 1. Transfer.Rel ((=) ===> (=) ===> ?Rac54) ?aw54 (\\<longrightarrow>)\n 2. Transfer.Rel ((=) ===> ?Rac54 ===> ?Rab54) ?av54 (\\<longrightarrow>)\n 3. Transfer.Rel ((A ===> ?Rab54) ===> ?Raa54) ?au54 All\n 4. Transfer.Rel ((A ===> ?Raa54) ===> ?Rz54) ?at54 All\n 5. Transfer.Rel ((A ===> ?Rz54) ===> ?Rx54) ?as54 All\n 6. Transfer.Rel ((A ===> (=)) ===> ?Ry54) ?ar54 All\n 7. Transfer.Rel ((A ===> ?Ry54) ===> ?Rw54) ?aq54 All\n 8. Transfer.Rel (?Rw54 ===> ?Rx54 ===> ?Ru54) ?ap54 (\\<and>)\n 9. Transfer.Rel ((A ===> (=)) ===> ?Rv54) ?ao54 All\n 10. Transfer.Rel ((A ===> ?Rv54) ===> ?Rt54) ?an54 All\nA total of 25 subgoals...", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>sup le ls.\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            sup x y \\<in> Collect (Domainp A)) \\<and>\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            le x (sup x y)) \\<and>\n        (\\<forall>y x.\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            le y (sup x y)) \\<and>\n        (\\<forall>y x z.\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            z \\<in> Collect (Domainp A) \\<longrightarrow>\n            le y x \\<longrightarrow>\n            le z x \\<longrightarrow> le (sup y z) x)) =\n    (\\<lambda>sup le ls.\n        (\\<forall>x\\<in>Collect (Domainp A).\n            \\<forall>y\\<in>Collect (Domainp A).\n               x \\<in> Collect (Domainp A) \\<longrightarrow>\n               y \\<in> Collect (Domainp A) \\<longrightarrow>\n               sup x y \\<in> Collect (Domainp A)) \\<and>\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x\\<in>Collect (Domainp A).\n            \\<forall>y\\<in>Collect (Domainp A). le x (sup x y)) \\<and>\n        (\\<forall>y\\<in>Collect (Domainp A).\n            \\<forall>x\\<in>Collect (Domainp A). le y (sup x y)) \\<and>\n        (\\<forall>y\\<in>Collect (Domainp A).\n            \\<forall>x\\<in>Collect (Domainp A).\n               \\<forall>z\\<in>Collect (Domainp A).\n                  le y x \\<longrightarrow>\n                  le z x \\<longrightarrow> le (sup y z) x))", "unfolding Ball_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>sup le ls.\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            sup x y \\<in> Collect (Domainp A)) \\<and>\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            le x (sup x y)) \\<and>\n        (\\<forall>y x.\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            le y (sup x y)) \\<and>\n        (\\<forall>y x z.\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            z \\<in> Collect (Domainp A) \\<longrightarrow>\n            le y x \\<longrightarrow>\n            le z x \\<longrightarrow> le (sup y z) x)) =\n    (\\<lambda>sup le ls.\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>xa.\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                x \\<in> Collect (Domainp A) \\<longrightarrow>\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                sup x xa \\<in> Collect (Domainp A))) \\<and>\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>xa.\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                le x (sup x xa))) \\<and>\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>xa.\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                le x (sup xa x))) \\<and>\n        (\\<forall>x.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>xa.\n                xa \\<in> Collect (Domainp A) \\<longrightarrow>\n                (\\<forall>xb.\n                    xb \\<in> Collect (Domainp A) \\<longrightarrow>\n                    le x xa \\<longrightarrow>\n                    le xb xa \\<longrightarrow> le (sup x xb) xa))))", "by fastforce"], ["proof (state)\nthis:\n  ((A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n   (semilattice_sup_ow (Collect (Domainp A)))\n   (\\<lambda>sup le ls.\n       (\\<forall>x y.\n           x \\<in> UNIV \\<longrightarrow>\n           y \\<in> UNIV \\<longrightarrow> sup x y \\<in> UNIV) \\<and>\n       class.semilattice_sup sup le ls)\n\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup", "then"], ["proof (chain)\npicking this:\n  ((A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n   (semilattice_sup_ow (Collect (Domainp A)))\n   (\\<lambda>sup le ls.\n       (\\<forall>x y.\n           x \\<in> UNIV \\<longrightarrow>\n           y \\<in> UNIV \\<longrightarrow> sup x y \\<in> UNIV) \\<and>\n       class.semilattice_sup sup le ls)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n   (semilattice_sup_ow (Collect (Domainp A)))\n   (\\<lambda>sup le ls.\n       (\\<forall>x y.\n           x \\<in> UNIV \\<longrightarrow>\n           y \\<in> UNIV \\<longrightarrow> sup x y \\<in> UNIV) \\<and>\n       class.semilattice_sup sup le ls)\n\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup", "by simp"], ["proof (state)\nthis:\n  ((A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n   (semilattice_sup_ow (Collect (Domainp A))) class.semilattice_sup\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context semilattice_order_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting semilattice_order_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma cobounded1:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w a\"\n    is semilattice_order.cobounded1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma cobounded2:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w b\"\n    is semilattice_order.cobounded2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma absorb_iff1:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"(a \\<le>\\<^sub>o\\<^sub>w b) = (a \\<^bold>*\\<^sub>o\\<^sub>w b = a)\"\n    is semilattice_order.absorb_iff1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma absorb_iff2:\n  assumes \"b \\<in> U\" and \"a \\<in> U\"\n  shows \"(b \\<le>\\<^sub>o\\<^sub>w a) = (a \\<^bold>*\\<^sub>o\\<^sub>w b = b)\"\n    is semilattice_order.absorb_iff2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma strict_coboundedI1:\n  assumes \"a \\<in> U\" and \"c \\<in> U\" and \"b \\<in> U\" and \"a <\\<^sub>o\\<^sub>w c\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b <\\<^sub>o\\<^sub>w c\"\n    is semilattice_order.strict_coboundedI1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma strict_coboundedI2:\n  assumes \"b \\<in> U\" and \"c \\<in> U\" and \"a \\<in> U\" and \"b <\\<^sub>o\\<^sub>w c\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b <\\<^sub>o\\<^sub>w c\"\n    is semilattice_order.strict_coboundedI2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma absorb1:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"a \\<le>\\<^sub>o\\<^sub>w b\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b = a\"\n    is semilattice_order.absorb1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma coboundedI1:\n  assumes \"a \\<in> U\" and \"c \\<in> U\" and \"b \\<in> U\" and \"a \\<le>\\<^sub>o\\<^sub>w c\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w c\"\n    is semilattice_order.coboundedI1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma absorb2:\n  assumes \"b \\<in> U\" and \"a \\<in> U\" and \"b \\<le>\\<^sub>o\\<^sub>w a\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b = b\"\n    is semilattice_order.absorb2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma coboundedI2:\n  assumes \"b \\<in> U\" and \"c \\<in> U\" and \"a \\<in> U\" and \"b \\<le>\\<^sub>o\\<^sub>w c\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w c\"\n    is semilattice_order.coboundedI2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma orderI:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"a = a \\<^bold>*\\<^sub>o\\<^sub>w b\"\n  shows \"a \\<le>\\<^sub>o\\<^sub>w b\"\n    is semilattice_order.orderI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bounded_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\"\n  shows \"(a \\<le>\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w c) = (a \\<le>\\<^sub>o\\<^sub>w b \\<and> a \\<le>\\<^sub>o\\<^sub>w c)\"\n    is semilattice_order.bounded_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma boundedI:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"a \\<le>\\<^sub>o\\<^sub>w b\" and \"a \\<le>\\<^sub>o\\<^sub>w c\"\n  shows \"a \\<le>\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w c\"\n    is semilattice_order.boundedI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma orderE:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"  and \"a \\<le>\\<^sub>o\\<^sub>w b\" and \"a = a \\<^bold>*\\<^sub>o\\<^sub>w b \\<Longrightarrow> thesis\"\n  shows thesis\n    is semilattice_order.orderE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma mono:\n  assumes \"a \\<in> U\"\n    and \"c \\<in> U\"\n    and \"b \\<in> U\"\n    and \"d \\<in> U\"\n    and \"a \\<le>\\<^sub>o\\<^sub>w c\"\n    and \"b \\<le>\\<^sub>o\\<^sub>w d\"\n  shows \"a \\<^bold>*\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w c \\<^bold>*\\<^sub>o\\<^sub>w d\"\n    is semilattice_order.mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma strict_boundedE:\n  assumes \"a \\<in> U\"\n    and \"b \\<in> U\"\n    and \"c \\<in> U\"\n    and \"a <\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w c\"\n  obtains \"a <\\<^sub>o\\<^sub>w b\" and \"a <\\<^sub>o\\<^sub>w c\"\n    given semilattice_order.strict_boundedE"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U;\n     a <\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w c;\n     \\<lbrakk>a <\\<^sub>o\\<^sub>w b; a <\\<^sub>o\\<^sub>w c\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a <\\<^sub>o\\<^sub>w b; a <\\<^sub>o\\<^sub>w c\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<And>a b c thesis.\n        \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U;\n         a <\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w c;\n         \\<lbrakk>a <\\<^sub>o\\<^sub>w b; a <\\<^sub>o\\<^sub>w c\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "tts_lemma boundedE:\n  assumes \"a \\<in> U\"\n    and \"b \\<in> U\"\n    and \"c \\<in> U\"\n    and \"a \\<le>\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w c\"\n  obtains \"a \\<le>\\<^sub>o\\<^sub>w b\" and \"a \\<le>\\<^sub>o\\<^sub>w c\"\n    given semilattice_order.boundedE"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U;\n     a \\<le>\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w c;\n     \\<lbrakk>a \\<le>\\<^sub>o\\<^sub>w b; a \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a \\<le>\\<^sub>o\\<^sub>w b; a \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<And>a b c thesis.\n        \\<lbrakk>a \\<in> U; b \\<in> U; c \\<in> U;\n         a \\<le>\\<^sub>o\\<^sub>w b \\<^bold>*\\<^sub>o\\<^sub>w c;\n         \\<lbrakk>a \\<le>\\<^sub>o\\<^sub>w b;\n          a \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "end"], ["", "end"], ["", "context semilattice_inf_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting semilattice_inf_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma le_iff_inf:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(x \\<le>\\<^sub>o\\<^sub>w y) = (x \\<sqinter>\\<^sub>o\\<^sub>w y = x)\"\n    is semilattice_inf_class.le_iff_inf"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma less_infI1:\n  assumes \"a \\<in> U\" and \"x \\<in> U\" and \"b \\<in> U\" and \"a <\\<^sub>o\\<^sub>w x\"\n  shows \"a \\<sqinter>\\<^sub>o\\<^sub>w b <\\<^sub>o\\<^sub>w x\"\n    is semilattice_inf_class.less_infI1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma less_infI2:\n  assumes \"b \\<in> U\" and \"x \\<in> U\" and \"a \\<in> U\" and \"b <\\<^sub>o\\<^sub>w x\"\n  shows \"a \\<sqinter>\\<^sub>o\\<^sub>w b <\\<^sub>o\\<^sub>w x\"\n    is semilattice_inf_class.less_infI2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_infI1:\n  assumes \"a \\<in> U\" and \"x \\<in> U\" and \"b \\<in> U\" and \"a \\<le>\\<^sub>o\\<^sub>w x\"\n  shows \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w x\"\n    is semilattice_inf_class.le_infI1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_infI2:\n  assumes \"b \\<in> U\" and \"x \\<in> U\" and \"a \\<in> U\" and \"b \\<le>\\<^sub>o\\<^sub>w x\"\n  shows \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w x\"\n    is semilattice_inf_class.le_infI2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_inf_iff:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\"\n  shows \"(x \\<le>\\<^sub>o\\<^sub>w y \\<sqinter>\\<^sub>o\\<^sub>w z) = (x \\<le>\\<^sub>o\\<^sub>w y \\<and> x \\<le>\\<^sub>o\\<^sub>w z)\"\n    is semilattice_inf_class.le_inf_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_infI:\n  assumes \"x \\<in> U\" and \"a \\<in> U\" and \"b \\<in> U\" and \"x \\<le>\\<^sub>o\\<^sub>w a\" and \"x \\<le>\\<^sub>o\\<^sub>w b\"\n  shows \"x \\<le>\\<^sub>o\\<^sub>w a \\<sqinter>\\<^sub>o\\<^sub>w b\"\n    is semilattice_inf_class.le_infI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_infE:\n  assumes \"x \\<in> U\"\n    and \"a \\<in> U\"\n    and \"b \\<in> U\"\n    and \"x \\<le>\\<^sub>o\\<^sub>w a \\<sqinter>\\<^sub>o\\<^sub>w b\"\n    and \"\\<lbrakk>x \\<le>\\<^sub>o\\<^sub>w a; x \\<le>\\<^sub>o\\<^sub>w b\\<rbrakk> \\<Longrightarrow> P\"\n  shows P\n    is semilattice_inf_class.le_infE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma inf_mono:\n  assumes \"a \\<in> U\"\n    and \"c \\<in> U\"\n    and \"b \\<in> U\"\n    and \"d \\<in> U\"\n    and \"a \\<le>\\<^sub>o\\<^sub>w c\"\n    and \"b \\<le>\\<^sub>o\\<^sub>w d\"\n  shows \"a \\<sqinter>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w c \\<sqinter>\\<^sub>o\\<^sub>w d\"\n    is semilattice_inf_class.inf_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "context semilattice_sup_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting semilattice_sup_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma le_iff_sup:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(x \\<le>\\<^sub>o\\<^sub>w y) = (x \\<squnion>\\<^sub>o\\<^sub>w y = y)\"\n    is semilattice_sup_class.le_iff_sup"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma less_supI1:\n  assumes \"x \\<in> U\" and \"a \\<in> U\" and \"b \\<in> U\" and \"x <\\<^sub>o\\<^sub>w a\"\n  shows \"x <\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w b\"\n    is semilattice_sup_class.less_supI1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma less_supI2:\n  assumes \"x \\<in> U\" and \"b \\<in> U\" and \"a \\<in> U\" and \"x <\\<^sub>o\\<^sub>w b\"\n  shows \"x <\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w b\"\n    is semilattice_sup_class.less_supI2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_supI1:\n  assumes \"x \\<in> U\" and \"a \\<in> U\" and \"b \\<in> U\" and \"x \\<le>\\<^sub>o\\<^sub>w a\"\n  shows \"x \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w b\"\n    is semilattice_sup_class.le_supI1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_supI2:\n  assumes \"x \\<in> U\" and \"b \\<in> U\" and \"a \\<in> U\" and \"x \\<le>\\<^sub>o\\<^sub>w b\"\n  shows \"x \\<le>\\<^sub>o\\<^sub>w a \\<squnion>\\<^sub>o\\<^sub>w b\"\n    is semilattice_sup_class.le_supI2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_sup_iff:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\"\n  shows \"(x \\<squnion>\\<^sub>o\\<^sub>w y \\<le>\\<^sub>o\\<^sub>w z) = (x \\<le>\\<^sub>o\\<^sub>w z \\<and> y \\<le>\\<^sub>o\\<^sub>w z)\"\n    is semilattice_sup_class.le_sup_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_supI:\n  assumes \"a \\<in> U\" and \"x \\<in> U\" and \"b \\<in> U\" and \"a \\<le>\\<^sub>o\\<^sub>w x\" and \"b \\<le>\\<^sub>o\\<^sub>w x\"\n  shows \"a \\<squnion>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w x\"\n    is semilattice_sup_class.le_supI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_supE:\n  assumes \"a \\<in> U\"\n    and \"b \\<in> U\"\n    and \"x \\<in> U\"\n    and \"a \\<squnion>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w x\"\n    and \"\\<lbrakk>a \\<le>\\<^sub>o\\<^sub>w x; b \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk> \\<Longrightarrow> P\"\n  shows P\n    is semilattice_sup_class.le_supE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma sup_unique:\n  assumes \"\\<forall>x\\<in>U. \\<forall>y\\<in>U. f x y \\<in> U\"\n    and \"x \\<in> U\"\n    and \"y \\<in> U\"\n    and \"\\<And>x y. \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk> \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w f x y\"\n    and \"\\<And>x y. \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk> \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w f x y\"\n    and \"\\<And>x y z. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; y \\<le>\\<^sub>o\\<^sub>w x; z \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk> \\<Longrightarrow> f y z \\<le>\\<^sub>o\\<^sub>w x\"\n  shows \"x \\<squnion>\\<^sub>o\\<^sub>w y = f x y\"\n    is semilattice_sup_class.sup_unique"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma sup_mono:\n  assumes \"a \\<in> U\"\n    and \"c \\<in> U\"\n    and \"b \\<in> U\"\n    and \"d \\<in> U\"\n    and \"a \\<le>\\<^sub>o\\<^sub>w c\"\n    and \"b \\<le>\\<^sub>o\\<^sub>w d\"\n  shows \"a \\<squnion>\\<^sub>o\\<^sub>w b \\<le>\\<^sub>o\\<^sub>w c \\<squnion>\\<^sub>o\\<^sub>w d\"\n    is semilattice_sup_class.sup_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "subsection\\<open>Bounded semilattices\\<close>"], ["", "subsubsection\\<open>Definitions and common properties\\<close>"], ["", "locale semilattice_neutral_ow = semilattice_ow U f + comm_monoid_ow U f z\n  for U :: \"'al set\" and f z"], ["", "locale semilattice_neutral_order_ow = \n  sl_neut: semilattice_neutral_ow U f z + \n  sl_ord: semilattice_order_ow U f le ls\n  for U :: \"'al set\" and f z le ls \nbegin"], ["", "sublocale order_top_ow U \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close> \\<open>\\<^bold>1\\<^sub>o\\<^sub>w\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. order_top_ow U (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w)\n     \\<^bold>1\\<^sub>o\\<^sub>w", "apply unfold_locales"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (x <\\<^sub>o\\<^sub>w y) =\n                         (x \\<le>\\<^sub>o\\<^sub>w y \\<and>\n                          \\<not> y \\<le>\\<^sub>o\\<^sub>w x)\n 2. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n        y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n       \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n        y \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 5. \\<^bold>1\\<^sub>o\\<^sub>w \\<in> U\n 6. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<le>\\<^sub>o\\<^sub>w \\<^bold>1\\<^sub>o\\<^sub>w", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> U; y_ \\<in> U\\<rbrakk>\n    \\<Longrightarrow> (x_ <\\<^sub>o\\<^sub>w y_) =\n                      (x_ \\<le>\\<^sub>o\\<^sub>w y_ \\<and>\n                       \\<not> y_ \\<le>\\<^sub>o\\<^sub>w x_)", "by (auto simp: antisym sl_ord.strict_iff_order sl_ord.antisym)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n        y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n       \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n        y \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<^bold>1\\<^sub>o\\<^sub>w \\<in> U\n 5. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<le>\\<^sub>o\\<^sub>w \\<^bold>1\\<^sub>o\\<^sub>w", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> U \\<Longrightarrow> x_ \\<le>\\<^sub>o\\<^sub>w x_", "by (auto simp: sl_ord.order_iff)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n        y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk>\n       \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n        y \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<^bold>1\\<^sub>o\\<^sub>w \\<in> U\n 4. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<le>\\<^sub>o\\<^sub>w \\<^bold>1\\<^sub>o\\<^sub>w", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> U; y_ \\<in> U; z_ \\<in> U;\n     x_ \\<le>\\<^sub>o\\<^sub>w y_; y_ \\<le>\\<^sub>o\\<^sub>w z_\\<rbrakk>\n    \\<Longrightarrow> x_ \\<le>\\<^sub>o\\<^sub>w z_", "by (auto intro: sl_ord.trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U; x \\<le>\\<^sub>o\\<^sub>w y;\n        y \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<^bold>1\\<^sub>o\\<^sub>w \\<in> U\n 3. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<le>\\<^sub>o\\<^sub>w \\<^bold>1\\<^sub>o\\<^sub>w", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> U; y_ \\<in> U; x_ \\<le>\\<^sub>o\\<^sub>w y_;\n     y_ \\<le>\\<^sub>o\\<^sub>w x_\\<rbrakk>\n    \\<Longrightarrow> x_ = y_", "by (auto simp: sl_ord.antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<^bold>1\\<^sub>o\\<^sub>w \\<in> U\n 2. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<le>\\<^sub>o\\<^sub>w \\<^bold>1\\<^sub>o\\<^sub>w", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>1\\<^sub>o\\<^sub>w \\<in> U", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<le>\\<^sub>o\\<^sub>w \\<^bold>1\\<^sub>o\\<^sub>w", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. a_ \\<in> U \\<Longrightarrow>\n    a_ \\<le>\\<^sub>o\\<^sub>w \\<^bold>1\\<^sub>o\\<^sub>w", "by (simp add: sl_ord.absorb_iff1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "locale bounded_semilattice_inf_top_ow =\n  semilattice_inf_ow U inf le ls + order_top_ow U le ls top\n  for U :: \"'al set\" and inf le ls top \nbegin"], ["", "sublocale inf_top: semilattice_neutral_order_ow U \\<open>(\\<sqinter>\\<^sub>o\\<^sub>w)\\<close> \\<open>\\<top>\\<^sub>o\\<^sub>w\\<close> \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilattice_neutral_order_ow U (\\<sqinter>\\<^sub>o\\<^sub>w)\n     \\<top>\\<^sub>o\\<^sub>w (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w)", "apply unfold_locales"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<top>\\<^sub>o\\<^sub>w \\<in> U\n 2. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<sqinter>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w = a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<top>\\<^sub>o\\<^sub>w \\<in> U", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<sqinter>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w = a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. a_ \\<in> U \\<Longrightarrow>\n    a_ \\<sqinter>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w = a_", "using top_greatest"], ["proof (prove)\nusing this:\n  ?a \\<in> U \\<Longrightarrow>\n  ?a \\<le>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w\n\ngoal (1 subgoal):\n 1. a_ \\<in> U \\<Longrightarrow>\n    a_ \\<sqinter>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w = a_", "by (simp add: inf.order_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "locale bounded_semilattice_sup_bot_ow = \n  semilattice_sup_ow U sup le ls + order_bot_ow U bot le ls\n  for U :: \"'al set\" and sup le ls bot\nbegin"], ["", "sublocale sup_bot: semilattice_neutral_order_ow U \\<open>(\\<squnion>\\<^sub>o\\<^sub>w)\\<close> \\<open>\\<bottom>\\<^sub>o\\<^sub>w\\<close> \\<open>(\\<ge>\\<^sub>o\\<^sub>w)\\<close> \\<open>(>\\<^sub>o\\<^sub>w)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilattice_neutral_order_ow U (\\<squnion>\\<^sub>o\\<^sub>w)\n     \\<bottom>\\<^sub>o\\<^sub>w (\\<lambda>x y. y \\<le>\\<^sub>o\\<^sub>w x)\n     (\\<lambda>x y. y <\\<^sub>o\\<^sub>w x)", "by unfold_locales (simp_all add: sup.absorb1)"], ["", "end"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma semilattice_neutral_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> A) ===> A ===> (=))\n      (semilattice_neutral_ow (Collect (Domainp A))) semilattice_neutr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===> A ===> (=))\n     (semilattice_neutral_ow (Collect (Domainp A))) semilattice_neutr", "unfolding semilattice_neutral_ow_def semilattice_neutr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===> A ===> (=))\n     (\\<lambda>f z.\n         semilattice_ow (Collect (Domainp A)) f \\<and>\n         comm_monoid_ow (Collect (Domainp A)) f z)\n     (\\<lambda>f z. semilattice f \\<and> comm_monoid f z)", "by transfer_prover"], ["", "lemma semilattice_neutr_order_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      A ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (=)\n    )\n    (semilattice_neutral_order_ow (Collect (Domainp A))) \n    semilattice_neutr_order\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     A ===> (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (semilattice_neutral_order_ow (Collect (Domainp A)))\n     semilattice_neutr_order", "unfolding semilattice_neutral_order_ow_def semilattice_neutr_order_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     A ===> (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (\\<lambda>f z le ls.\n         semilattice_neutral_ow (Collect (Domainp A)) f z \\<and>\n         semilattice_order_ow (Collect (Domainp A)) f le ls)\n     (\\<lambda>f z less_eq less.\n         semilattice_neutr f z \\<and> semilattice_order f less_eq less)", "by transfer_prover"], ["", "lemma bounded_semilattice_inf_top_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      A ===> \n      (=)\n    ) \n    (bounded_semilattice_inf_top_ow (Collect (Domainp A))) \n    class.bounded_semilattice_inf_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> A ===> (=))\n     (bounded_semilattice_inf_top_ow (Collect (Domainp A)))\n     class.bounded_semilattice_inf_top", "unfolding\n    bounded_semilattice_inf_top_ow_def class.bounded_semilattice_inf_top_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> A ===> (=))\n     (\\<lambda>inf le ls top.\n         semilattice_inf_ow (Collect (Domainp A)) inf le ls \\<and>\n         order_top_ow (Collect (Domainp A)) le ls top)\n     (\\<lambda>inf less_eq less top.\n         class.semilattice_inf inf less_eq less \\<and>\n         class.order_top less_eq less top)", "by transfer_prover"], ["", "lemma bounded_semilattice_sup_bot_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      A ===> \n      (=)\n    ) \n    (bounded_semilattice_sup_bot_ow (Collect (Domainp A))) \n    class.bounded_semilattice_sup_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> A ===> (=))\n     (bounded_semilattice_sup_bot_ow (Collect (Domainp A)))\n     class.bounded_semilattice_sup_bot", "unfolding\n    bounded_semilattice_sup_bot_ow_def class.bounded_semilattice_sup_bot_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> A ===> (=))\n     (\\<lambda>sup le ls bot.\n         semilattice_sup_ow (Collect (Domainp A)) sup le ls \\<and>\n         order_bot_ow (Collect (Domainp A)) bot le ls)\n     (\\<lambda>sup less_eq less bot.\n         class.semilattice_sup sup less_eq less \\<and>\n         class.order_bot bot less_eq less)", "by transfer_prover"], ["", "end"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}