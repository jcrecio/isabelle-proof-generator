{"file_name": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension/Examples/SML_Relativization/Lattices/SML_Complete_Lattices.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension", "problem_names": ["lemma Inf_closed'[simp]: \"\\<forall>x\\<subseteq>U. \\<Sqinter>\\<^sub>o\\<^sub>w x \\<in> U\"", "lemma Sup_closed'[simp]: \"\\<forall>x\\<subseteq>U. \\<Squnion>\\<^sub>o\\<^sub>w x \\<in> U\"", "lemma complete_lattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (rel_set A ===> A) ===> \n      (rel_set A ===> A) ===>\n      (A ===> A ===> A) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> A) ===> \n      A ===> A ===>\n      (=)\n    )\n    (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice\"", "lemmas [transfer_rule] =\n  image_transfer[where ?'a='b]", "lemmas [transfer_rule] =\n  image_transfer[where ?'a='b]", "lemmas [transfer_rule] =\n  image_transfer[where ?'a='b]\n  image_transfer[where ?'a='c]", "lemma INF_commute:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\" and \"B \\<subseteq> U\\<^sub>3\" and \"A \\<subseteq> U\\<^sub>2\" \n  shows \n    \"\\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\"", "lemma SUP_commute:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\" and \"B \\<subseteq> U\\<^sub>3\" and \"A \\<subseteq> U\\<^sub>2\"\n  shows \n    \"\\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) = \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\"", "lemma SUP_mono:\n  assumes \"A \\<subseteq> U\\<^sub>2\" \n    and \"B \\<subseteq> U\\<^sub>3\" \n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" \n    and \"\\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\"\n    and \"\\<And>n. n \\<in> A \\<Longrightarrow> \\<exists>m\\<in>B. f n \\<le>\\<^sub>o\\<^sub>w g m\" \n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\"", "lemma INF_mono:\n  assumes \"B \\<subseteq> U\\<^sub>2\" \n    and \"A \\<subseteq> U\\<^sub>3\" \n    and \"\\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\" \n    and \"\\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\"\n    and \"\\<And>m. m \\<in> B \\<Longrightarrow> \\<exists>n\\<in>A. f n \\<le>\\<^sub>o\\<^sub>w g m\" \n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\"", "lemmas [transfer_rule] =\n  image_transfer[where ?'a='c]"], "translations": [["", "lemma Inf_closed'[simp]: \"\\<forall>x\\<subseteq>U. \\<Sqinter>\\<^sub>o\\<^sub>w x \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<subseteq>U. \\<Sqinter>\\<^sub>o\\<^sub>w x \\<in> U", "using Inf_closed"], ["proof (prove)\nusing this:\n  \\<Sqinter>\\<^sub>o\\<^sub>w ` Pow U \\<subseteq> U\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<subseteq>U. \\<Sqinter>\\<^sub>o\\<^sub>w x \\<in> U", "by blast"], ["", "end"], ["", "locale Inf_pair_ow = Inf\\<^sub>1: Inf_ow U\\<^sub>1 Inf\\<^sub>1 + Inf\\<^sub>2: Inf_ow U\\<^sub>2 Inf\\<^sub>2 \n  for U\\<^sub>1 :: \"'al set\" and Inf\\<^sub>1 and U\\<^sub>2 :: \"'bl set\" and Inf\\<^sub>2\nbegin"], ["", "notation Inf\\<^sub>1 (\\<open>\\<Sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1\\<close>)"], ["", "notation Inf\\<^sub>2 (\\<open>\\<Sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2\\<close>)"], ["", "end"], ["", "locale Sup_ow = \n  fixes U :: \"'al set\" and Sup (\\<open>\\<Squnion>\\<^sub>o\\<^sub>w\\<close>)\n  assumes Sup_closed[simp]: \"\\<Squnion>\\<^sub>o\\<^sub>w ` Pow U \\<subseteq> U\"\nbegin"], ["", "notation Sup (\\<open>\\<Squnion>\\<^sub>o\\<^sub>w\\<close>)"], ["", "lemma Sup_closed'[simp]: \"\\<forall>x\\<subseteq>U. \\<Squnion>\\<^sub>o\\<^sub>w x \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<subseteq>U. \\<Squnion>\\<^sub>o\\<^sub>w x \\<in> U", "using Sup_closed"], ["proof (prove)\nusing this:\n  \\<Squnion>\\<^sub>o\\<^sub>w ` Pow U \\<subseteq> U\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<subseteq>U. \\<Squnion>\\<^sub>o\\<^sub>w x \\<in> U", "by blast"], ["", "end"], ["", "locale Sup_pair_ow = Sup\\<^sub>1: Sup_ow U\\<^sub>1 Sup\\<^sub>1 + Sup\\<^sub>2: Sup_ow U\\<^sub>2 Sup\\<^sub>2 \n  for U\\<^sub>1 :: \"'al set\" and Sup\\<^sub>1 and U\\<^sub>2 :: \"'bl set\" and Sup\\<^sub>2\nbegin"], ["", "notation Sup\\<^sub>1 (\\<open>\\<Squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1\\<close>)"], ["", "notation Sup\\<^sub>2 (\\<open>\\<Squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2\\<close>)"], ["", "end"], ["", "locale complete_lattice_ow =\n  lattice_ow U inf le ls sup +\n  Inf_ow U Inf + \n  Sup_ow U Sup + \n  bot_ow U bot + \n  top_ow U top\n  for U :: \"'al set\" and Inf  Sup inf le ls sup bot top +\n  assumes Inf_lower: \"\\<lbrakk> A \\<subseteq> U; x \\<in> A \\<rbrakk> \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w x\"\n    and Inf_greatest: \n      \"\\<lbrakk> A \\<subseteq> U; z \\<in> U; (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le>\\<^sub>o\\<^sub>w x) \\<rbrakk> \\<Longrightarrow> z \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w A\"\n    and Sup_upper: \"\\<lbrakk> x \\<in> A; A \\<subseteq> U \\<rbrakk> \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w A\"\n    and Sup_least: \n      \"\\<lbrakk> A \\<subseteq> U; z \\<in> U; (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w z) \\<rbrakk> \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w z\"\n    and Inf_empty[simp]: \"\\<Sqinter>\\<^sub>o\\<^sub>w {} = \\<top>\\<^sub>o\\<^sub>w\"\n    and Sup_empty[simp]: \"\\<Squnion>\\<^sub>o\\<^sub>w {} = \\<bottom>\\<^sub>o\\<^sub>w\"\nbegin"], ["", "sublocale bounded_lattice_ow U \\<open>(\\<sqinter>\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<squnion>\\<^sub>o\\<^sub>w)\\<close> \\<open>\\<bottom>\\<^sub>o\\<^sub>w\\<close> \\<open>\\<top>\\<^sub>o\\<^sub>w\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_lattice_ow U (\\<sqinter>\\<^sub>o\\<^sub>w)\n     (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w)\n     (\\<squnion>\\<^sub>o\\<^sub>w) \\<bottom>\\<^sub>o\\<^sub>w\n     \\<top>\\<^sub>o\\<^sub>w", "apply standard"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       \\<bottom>\\<^sub>o\\<^sub>w \\<le>\\<^sub>o\\<^sub>w a\n 2. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<le>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. a_ \\<in> U \\<Longrightarrow>\n    \\<bottom>\\<^sub>o\\<^sub>w \\<le>\\<^sub>o\\<^sub>w a_", "using Sup_least"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> U; ?z \\<in> U;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w ?z\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w ?A \\<le>\\<^sub>o\\<^sub>w ?z\n\ngoal (1 subgoal):\n 1. a_ \\<in> U \\<Longrightarrow>\n    \\<bottom>\\<^sub>o\\<^sub>w \\<le>\\<^sub>o\\<^sub>w a_", "by force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> U \\<Longrightarrow>\n       a \\<le>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. a_ \\<in> U \\<Longrightarrow>\n    a_ \\<le>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w", "using Inf_greatest"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> U; ?z \\<in> U;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?z \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk>\n  \\<Longrightarrow> ?z \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w ?A\n\ngoal (1 subgoal):\n 1. a_ \\<in> U \\<Longrightarrow>\n    a_ \\<le>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w", "by fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "tts_register_sbts \\<open>\\<bottom>\\<^sub>o\\<^sub>w\\<close> | U"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<bottom>\\<^sub>o\\<^sub>w rcdt", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<bottom>\\<^sub>o\\<^sub>w rcdt", "assume ALA: \"Domainp ALA = (\\<lambda>x. x \\<in> U)\""], ["proof (state)\nthis:\n  Domainp ALA = (\\<lambda>x. x \\<in> U)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<bottom>\\<^sub>o\\<^sub>w rcdt", "have \"Domainp ALA \\<bottom>\\<^sub>o\\<^sub>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp ALA \\<bottom>\\<^sub>o\\<^sub>w", "unfolding ALA"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom>\\<^sub>o\\<^sub>w \\<in> U", "by simp"], ["proof (state)\nthis:\n  Domainp ALA \\<bottom>\\<^sub>o\\<^sub>w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<bottom>\\<^sub>o\\<^sub>w rcdt", "then"], ["proof (chain)\npicking this:\n  Domainp ALA \\<bottom>\\<^sub>o\\<^sub>w", "obtain bot' where \"ALA \\<bottom>\\<^sub>o\\<^sub>w bot'\""], ["proof (prove)\nusing this:\n  Domainp ALA \\<bottom>\\<^sub>o\\<^sub>w\n\ngoal (1 subgoal):\n 1. (\\<And>bot'.\n        ALA \\<bottom>\\<^sub>o\\<^sub>w bot' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ALA \\<bottom>\\<^sub>o\\<^sub>w bot'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<bottom>\\<^sub>o\\<^sub>w rcdt", "then"], ["proof (chain)\npicking this:\n  ALA \\<bottom>\\<^sub>o\\<^sub>w bot'", "show \"\\<exists>bot'. ALA \\<bottom>\\<^sub>o\\<^sub>w bot'\""], ["proof (prove)\nusing this:\n  ALA \\<bottom>\\<^sub>o\\<^sub>w bot'\n\ngoal (1 subgoal):\n 1. \\<exists>bot'. ALA \\<bottom>\\<^sub>o\\<^sub>w bot'", "by auto"], ["proof (state)\nthis:\n  \\<exists>bot'. ALA \\<bottom>\\<^sub>o\\<^sub>w bot'\n\ngoal:\nNo subgoals!", "qed"], ["", "tts_register_sbts \\<open>\\<top>\\<^sub>o\\<^sub>w\\<close> | U"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<top>\\<^sub>o\\<^sub>w rcdt", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<top>\\<^sub>o\\<^sub>w rcdt", "assume ALA: \"Domainp ALA = (\\<lambda>x. x \\<in> U)\""], ["proof (state)\nthis:\n  Domainp ALA = (\\<lambda>x. x \\<in> U)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<top>\\<^sub>o\\<^sub>w rcdt", "have \"Domainp ALA \\<top>\\<^sub>o\\<^sub>w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp ALA \\<top>\\<^sub>o\\<^sub>w", "unfolding ALA"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<top>\\<^sub>o\\<^sub>w \\<in> U", "by simp"], ["proof (state)\nthis:\n  Domainp ALA \\<top>\\<^sub>o\\<^sub>w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<top>\\<^sub>o\\<^sub>w rcdt", "then"], ["proof (chain)\npicking this:\n  Domainp ALA \\<top>\\<^sub>o\\<^sub>w", "obtain top' where \"ALA \\<top>\\<^sub>o\\<^sub>w top'\""], ["proof (prove)\nusing this:\n  Domainp ALA \\<top>\\<^sub>o\\<^sub>w\n\ngoal (1 subgoal):\n 1. (\\<And>top'.\n        ALA \\<top>\\<^sub>o\\<^sub>w top' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ALA \\<top>\\<^sub>o\\<^sub>w top'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALA = (\\<lambda>x. x \\<in> U); bi_unique ALA;\n     right_total ALA\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALA \\<top>\\<^sub>o\\<^sub>w rcdt", "then"], ["proof (chain)\npicking this:\n  ALA \\<top>\\<^sub>o\\<^sub>w top'", "show \"\\<exists>top'. ALA \\<top>\\<^sub>o\\<^sub>w top'\""], ["proof (prove)\nusing this:\n  ALA \\<top>\\<^sub>o\\<^sub>w top'\n\ngoal (1 subgoal):\n 1. \\<exists>top'. ALA \\<top>\\<^sub>o\\<^sub>w top'", "by auto"], ["proof (state)\nthis:\n  \\<exists>top'. ALA \\<top>\\<^sub>o\\<^sub>w top'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale complete_lattice_pair_ow = \n  cl\\<^sub>1: complete_lattice_ow U\\<^sub>1 Inf\\<^sub>1 Sup\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1 bot\\<^sub>1 top\\<^sub>1 + \n  cl\\<^sub>2: complete_lattice_ow U\\<^sub>2 Inf\\<^sub>2 Sup\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2 bot\\<^sub>2 top\\<^sub>2 \n  for U\\<^sub>1 :: \"'al set\" and Inf\\<^sub>1 Sup\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1 bot\\<^sub>1 top\\<^sub>1\n    and U\\<^sub>2 :: \"'bl set\" and Inf\\<^sub>2 Sup\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2 bot\\<^sub>2 top\\<^sub>2\nbegin"], ["", "sublocale bounded_lattice_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_lattice_pair_ow U\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1\n     sup\\<^sub>1 bot\\<^sub>1 top\\<^sub>1 U\\<^sub>2 inf\\<^sub>2 le\\<^sub>2\n     ls\\<^sub>2 sup\\<^sub>2 bot\\<^sub>2 top\\<^sub>2", ".."], ["", "sublocale Inf_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pair_ow U\\<^sub>1 Inf\\<^sub>1 U\\<^sub>2 Inf\\<^sub>2", ".."], ["", "sublocale Sup_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pair_ow U\\<^sub>1 Sup\\<^sub>1 U\\<^sub>2 Sup\\<^sub>2", ".."], ["", "end"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma complete_lattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (rel_set A ===> A) ===> \n      (rel_set A ===> A) ===>\n      (A ===> A ===> A) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> A) ===> \n      A ===> A ===>\n      (=)\n    )\n    (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice", "let ?P = \n    \"(\n      (rel_set A ===> A) ===> \n      (rel_set A ===> A) ===>\n      (A ===> A ===> A) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> A) ===> \n      A ===> A ===>\n      (=)\n    )\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice", "let ?complete_lattice_ow = \"(complete_lattice_ow (Collect (Domainp A)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice", "let ?Inf_Sup_UNIV = \n    \"(\\<lambda>F'::'b set \\<Rightarrow> 'b. (F' ` Pow UNIV \\<subseteq> UNIV))\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice", "have rrng:\n    \"((A2 \\<and> A3 \\<and> A4 \\<and> A5 \\<and> A1 \\<and> A6 \\<and> A7 \\<and> A8 \\<and> A9 \\<and> A10 \\<and> A11) = F') \\<Longrightarrow>\n    ((A1 \\<and> A2 \\<and> A3 \\<and> A4 \\<and> A5 \\<and> A6 \\<and> A7 \\<and> A8 \\<and> A9 \\<and> A10 \\<and> A11) = F')\"\n    for A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 F'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A2 \\<and>\n     A3 \\<and>\n     A4 \\<and>\n     A5 \\<and>\n     A1 \\<and> A6 \\<and> A7 \\<and> A8 \\<and> A9 \\<and> A10 \\<and> A11) =\n    F' \\<Longrightarrow>\n    (A1 \\<and>\n     A2 \\<and>\n     A3 \\<and>\n     A4 \\<and>\n     A5 \\<and> A6 \\<and> A7 \\<and> A8 \\<and> A9 \\<and> A10 \\<and> A11) =\n    F'", "by auto"], ["proof (state)\nthis:\n  (?A2.1 \\<and>\n   ?A3.1 \\<and>\n   ?A4.1 \\<and>\n   ?A5.1 \\<and>\n   ?A1.1 \\<and>\n   ?A6.1 \\<and>\n   ?A7.1 \\<and> ?A8.1 \\<and> ?A9.1 \\<and> ?A10.1 \\<and> ?A11.1) =\n  ?F'1 \\<Longrightarrow>\n  (?A1.1 \\<and>\n   ?A2.1 \\<and>\n   ?A3.1 \\<and>\n   ?A4.1 \\<and>\n   ?A5.1 \\<and>\n   ?A6.1 \\<and>\n   ?A7.1 \\<and> ?A8.1 \\<and> ?A9.1 \\<and> ?A10.1 \\<and> ?A11.1) =\n  ?F'1\n\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice", "have \n    \"?P \n      ?complete_lattice_ow\n      (\n        \\<lambda>Inf Sup inf le ls sup bot top. \n          ?Inf_Sup_UNIV Inf \\<and> ?Inf_Sup_UNIV Sup \\<and> bot \\<in> UNIV \\<and> top \\<in> UNIV \\<and>\n          class.complete_lattice Inf Sup inf le ls sup bot top\n      )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A)))\n     (\\<lambda>Inf Sup inf le ls sup bot top.\n         Inf ` Pow UNIV \\<subseteq> UNIV \\<and>\n         Sup ` Pow UNIV \\<subseteq> UNIV \\<and>\n         bot \\<in> UNIV \\<and>\n         top \\<in> UNIV \\<and>\n         class.complete_lattice Inf Sup inf le ls sup bot top)", "unfolding \n      complete_lattice_ow_def class.complete_lattice_def\n      complete_lattice_ow_axioms_def class.complete_lattice_axioms_def\n      Inf_ow_def Sup_ow_def bot_ow_def top_ow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (\\<lambda>Inf Sup inf le ls sup bot top.\n         (lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n          Inf ` Pow (Collect (Domainp A))\n          \\<subseteq> Collect (Domainp A) \\<and>\n          Sup ` Pow (Collect (Domainp A))\n          \\<subseteq> Collect (Domainp A)) \\<and>\n         bot \\<in> Collect (Domainp A) \\<and>\n         top \\<in> Collect (Domainp A) \\<and>\n         ((\\<forall>Aa x.\n              Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n              x \\<in> Aa \\<longrightarrow> le (Inf Aa) x) \\<and>\n          (\\<forall>Aa z.\n              Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n              z \\<in> Collect (Domainp A) \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf Aa)) \\<and>\n          (\\<forall>x Aa.\n              x \\<in> Aa \\<longrightarrow>\n              Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n              le x (Sup Aa))) \\<and>\n         (\\<forall>Aa z.\n             Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n             z \\<in> Collect (Domainp A) \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n             le (Sup Aa) z) \\<and>\n         Inf {} = top \\<and> Sup {} = bot)\n     (\\<lambda>Inf Sup inf le ls sup bot top.\n         Inf ` Pow UNIV \\<subseteq> UNIV \\<and>\n         Sup ` Pow UNIV \\<subseteq> UNIV \\<and>\n         bot \\<in> UNIV \\<and>\n         top \\<in> UNIV \\<and>\n         class.lattice inf le ls sup \\<and>\n         ((\\<forall>x A. x \\<in> A \\<longrightarrow> le (Inf A) x) \\<and>\n          (\\<forall>A z.\n              (\\<forall>x.\n                  x \\<in> A \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf A)) \\<and>\n          (\\<forall>x A. x \\<in> A \\<longrightarrow> le x (Sup A))) \\<and>\n         (\\<forall>A z.\n             (\\<forall>x.\n                 x \\<in> A \\<longrightarrow> le x z) \\<longrightarrow>\n             le (Sup A) z) \\<and>\n         Inf {} = top \\<and> Sup {} = bot)", "apply transfer_prover_start"], ["proof (prove)\ngoal (50 subgoals):\n 1. Transfer.Rel (rel_set A) ?bv93 {}\n 2. Transfer.Rel (A ===> A ===> ?Rbf93) ?bu93 (=)\n 3. Transfer.Rel (rel_set A) ?bt93 {}\n 4. Transfer.Rel (A ===> A ===> ?Rbe93) ?bs93 (=)\n 5. Transfer.Rel (?Rbe93 ===> ?Rbf93 ===> ?Ray93) ?br93 (\\<and>)\n 6. Transfer.Rel (A ===> rel_set A ===> ?Rbd93) ?bq93 (\\<in>)\n 7. Transfer.Rel (?Rbd93 ===> (=) ===> ?Rbc93) ?bp93 (\\<longrightarrow>)\n 8. Transfer.Rel ((A ===> ?Rbc93) ===> ?Rbb93) ?bo93 All\n 9. Transfer.Rel (?Rbb93 ===> (=) ===> ?Rba93) ?bn93 (\\<longrightarrow>)\n 10. Transfer.Rel ((A ===> ?Rba93) ===> ?Raz93) ?bm93 All\nA total of 50 subgoals...", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>Inf Sup inf le ls sup bot top.\n        (lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n         Inf ` Pow (Collect (Domainp A))\n         \\<subseteq> Collect (Domainp A) \\<and>\n         Sup ` Pow (Collect (Domainp A))\n         \\<subseteq> Collect (Domainp A)) \\<and>\n        bot \\<in> Collect (Domainp A) \\<and>\n        top \\<in> Collect (Domainp A) \\<and>\n        ((\\<forall>Aa x.\n             Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n             x \\<in> Aa \\<longrightarrow> le (Inf Aa) x) \\<and>\n         (\\<forall>Aa z.\n             Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n             z \\<in> Collect (Domainp A) \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n             le z (Inf Aa)) \\<and>\n         (\\<forall>x Aa.\n             x \\<in> Aa \\<longrightarrow>\n             Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n             le x (Sup Aa))) \\<and>\n        (\\<forall>Aa z.\n            Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n            z \\<in> Collect (Domainp A) \\<longrightarrow>\n            (\\<forall>x.\n                x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n            le (Sup Aa) z) \\<and>\n        Inf {} = top \\<and> Sup {} = bot) =\n    (\\<lambda>Inf Sup inf le ls sup bot top.\n        Inf ` Pow (Collect (Domainp A))\n        \\<subseteq> Collect (Domainp A) \\<and>\n        Sup ` Pow (Collect (Domainp A))\n        \\<subseteq> Collect (Domainp A) \\<and>\n        bot \\<in> Collect (Domainp A) \\<and>\n        top \\<in> Collect (Domainp A) \\<and>\n        lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n        ((\\<forall>x\\<in>Collect (Domainp A).\n             \\<forall>A\\<in>{Aa. Ball Aa (Domainp A)}.\n                x \\<in> A \\<longrightarrow> le (Inf A) x) \\<and>\n         (\\<forall>Aa\\<in>{Aa. Ball Aa (Domainp A)}.\n             \\<forall>z\\<in>Collect (Domainp A).\n                (\\<forall>x\\<in>Collect (Domainp A).\n                    x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n                le z (Inf Aa)) \\<and>\n         (\\<forall>x\\<in>Collect (Domainp A).\n             \\<forall>A\\<in>{Aa. Ball Aa (Domainp A)}.\n                x \\<in> A \\<longrightarrow> le x (Sup A))) \\<and>\n        (\\<forall>Aa\\<in>{Aa. Ball Aa (Domainp A)}.\n            \\<forall>z\\<in>Collect (Domainp A).\n               (\\<forall>x\\<in>Collect (Domainp A).\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z) \\<and>\n        Inf {} = top \\<and> Sup {} = bot)", "apply(simp, intro ext, rule rrng, intro arg_cong2[where f=\"(\\<and>)\"])"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top.\n       (Inf ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A)) =\n       (Inf ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A))\n 2. \\<And>Inf Sup inf le ls sup bot top.\n       (Sup ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A)) =\n       (Sup ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A))\n 3. \\<And>Inf Sup inf le ls sup bot top. Domainp A bot = Domainp A bot\n 4. \\<And>Inf Sup inf le ls sup bot top. Domainp A top = Domainp A top\n 5. \\<And>Inf Sup inf le ls sup bot top.\n       lattice_ow (Collect (Domainp A)) inf le ls sup =\n       lattice_ow (Collect (Domainp A)) inf le ls sup\n 6. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>x. x \\<in> Aa \\<longrightarrow> le (Inf Aa) x) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le (Inf Aa) x))\n 7. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf Aa)) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n               le z (Inf Aa)))\n 8. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>x Aa.\n           x \\<in> Aa \\<longrightarrow>\n           Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n           le x (Sup Aa)) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le x (Sup Aa)))\n 9. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 10. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Inf_ ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A)) =\n    (Inf_ ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A))", "unfolding Ball_Collect"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Inf_ ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A)) =\n    (Inf_ ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A))", "by simp"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top.\n       (Sup ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A)) =\n       (Sup ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A))\n 2. \\<And>Inf Sup inf le ls sup bot top. Domainp A bot = Domainp A bot\n 3. \\<And>Inf Sup inf le ls sup bot top. Domainp A top = Domainp A top\n 4. \\<And>Inf Sup inf le ls sup bot top.\n       lattice_ow (Collect (Domainp A)) inf le ls sup =\n       lattice_ow (Collect (Domainp A)) inf le ls sup\n 5. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>x. x \\<in> Aa \\<longrightarrow> le (Inf Aa) x) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le (Inf Aa) x))\n 6. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf Aa)) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n               le z (Inf Aa)))\n 7. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>x Aa.\n           x \\<in> Aa \\<longrightarrow>\n           Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n           le x (Sup Aa)) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le x (Sup Aa)))\n 8. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 9. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 10. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Sup_ ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A)) =\n    (Sup_ ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A))", "unfolding Ball_Collect"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Sup_ ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A)) =\n    (Sup_ ` Pow (Collect (Domainp A)) \\<subseteq> Collect (Domainp A))", "by simp"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top. Domainp A bot = Domainp A bot\n 2. \\<And>Inf Sup inf le ls sup bot top. Domainp A top = Domainp A top\n 3. \\<And>Inf Sup inf le ls sup bot top.\n       lattice_ow (Collect (Domainp A)) inf le ls sup =\n       lattice_ow (Collect (Domainp A)) inf le ls sup\n 4. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>x. x \\<in> Aa \\<longrightarrow> le (Inf Aa) x) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le (Inf Aa) x))\n 5. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf Aa)) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n               le z (Inf Aa)))\n 6. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>x Aa.\n           x \\<in> Aa \\<longrightarrow>\n           Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n           le x (Sup Aa)) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le x (Sup Aa)))\n 7. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 8. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 9. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp A bot_ = Domainp A bot_", "by simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top. Domainp A top = Domainp A top\n 2. \\<And>Inf Sup inf le ls sup bot top.\n       lattice_ow (Collect (Domainp A)) inf le ls sup =\n       lattice_ow (Collect (Domainp A)) inf le ls sup\n 3. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>x. x \\<in> Aa \\<longrightarrow> le (Inf Aa) x) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le (Inf Aa) x))\n 4. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf Aa)) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n               le z (Inf Aa)))\n 5. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>x Aa.\n           x \\<in> Aa \\<longrightarrow>\n           Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n           le x (Sup Aa)) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le x (Sup Aa)))\n 6. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 7. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 8. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp A top_ = Domainp A top_", "by simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top.\n       lattice_ow (Collect (Domainp A)) inf le ls sup =\n       lattice_ow (Collect (Domainp A)) inf le ls sup\n 2. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>x. x \\<in> Aa \\<longrightarrow> le (Inf Aa) x) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le (Inf Aa) x))\n 3. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf Aa)) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n               le z (Inf Aa)))\n 4. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>x Aa.\n           x \\<in> Aa \\<longrightarrow>\n           Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n           le x (Sup Aa)) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le x (Sup Aa)))\n 5. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 6. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 7. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. lattice_ow (Collect (Domainp A)) inf_ le_ ls_ sup_ =\n    lattice_ow (Collect (Domainp A)) inf_ le_ ls_ sup_", "by simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>x. x \\<in> Aa \\<longrightarrow> le (Inf Aa) x) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le (Inf Aa) x))\n 2. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf Aa)) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n               le z (Inf Aa)))\n 3. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>x Aa.\n           x \\<in> Aa \\<longrightarrow>\n           Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n           le x (Sup Aa)) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le x (Sup Aa)))\n 4. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 5. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 6. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n        \\<forall>x. x \\<in> Aa \\<longrightarrow> le_ (Inf_ Aa) x) =\n    (\\<forall>x.\n        Domainp A x \\<longrightarrow>\n        (\\<forall>Aa.\n            Ball Aa (Domainp A) \\<longrightarrow>\n            x \\<in> Aa \\<longrightarrow> le_ (Inf_ Aa) x))", "unfolding Ball_Collect[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>Aa.\n        Ball Aa (Domainp A) \\<longrightarrow>\n        (\\<forall>x. x \\<in> Aa \\<longrightarrow> le_ (Inf_ Aa) x)) =\n    (\\<forall>x.\n        Domainp A x \\<longrightarrow>\n        (\\<forall>Aa.\n            Ball Aa (Domainp A) \\<longrightarrow>\n            x \\<in> Aa \\<longrightarrow> le_ (Inf_ Aa) x))", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n              le z (Inf Aa)) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le z x) \\<longrightarrow>\n               le z (Inf Aa)))\n 2. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>x Aa.\n           x \\<in> Aa \\<longrightarrow>\n           Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n           le x (Sup Aa)) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le x (Sup Aa)))\n 3. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 4. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 5. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n        \\<forall>z.\n           Domainp A z \\<longrightarrow>\n           (\\<forall>x.\n               x \\<in> Aa \\<longrightarrow> le_ z x) \\<longrightarrow>\n           le_ z (Inf_ Aa)) =\n    (\\<forall>Aa.\n        Ball Aa (Domainp A) \\<longrightarrow>\n        (\\<forall>z.\n            Domainp A z \\<longrightarrow>\n            (\\<forall>x.\n                Domainp A x \\<longrightarrow>\n                x \\<in> Aa \\<longrightarrow> le_ z x) \\<longrightarrow>\n            le_ z (Inf_ Aa)))", "unfolding Ball_Collect[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>Aa.\n        Ball Aa (Domainp A) \\<longrightarrow>\n        (\\<forall>z.\n            Domainp A z \\<longrightarrow>\n            (\\<forall>x.\n                x \\<in> Aa \\<longrightarrow> le_ z x) \\<longrightarrow>\n            le_ z (Inf_ Aa))) =\n    (\\<forall>Aa.\n        Ball Aa (Domainp A) \\<longrightarrow>\n        (\\<forall>z.\n            Domainp A z \\<longrightarrow>\n            (\\<forall>x.\n                Domainp A x \\<longrightarrow>\n                x \\<in> Aa \\<longrightarrow> le_ z x) \\<longrightarrow>\n            le_ z (Inf_ Aa)))", "by metis"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>x Aa.\n           x \\<in> Aa \\<longrightarrow>\n           Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n           le x (Sup Aa)) =\n       (\\<forall>x.\n           Domainp A x \\<longrightarrow>\n           (\\<forall>Aa.\n               Ball Aa (Domainp A) \\<longrightarrow>\n               x \\<in> Aa \\<longrightarrow> le x (Sup Aa)))\n 2. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 3. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 4. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x Aa.\n        x \\<in> Aa \\<longrightarrow>\n        Aa \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n        le_ x (Sup_ Aa)) =\n    (\\<forall>x.\n        Domainp A x \\<longrightarrow>\n        (\\<forall>Aa.\n            Ball Aa (Domainp A) \\<longrightarrow>\n            x \\<in> Aa \\<longrightarrow> le_ x (Sup_ Aa)))", "unfolding Ball_Collect[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x Aa.\n        x \\<in> Aa \\<longrightarrow>\n        Ball Aa (Domainp A) \\<longrightarrow> le_ x (Sup_ Aa)) =\n    (\\<forall>x.\n        Domainp A x \\<longrightarrow>\n        (\\<forall>Aa.\n            Ball Aa (Domainp A) \\<longrightarrow>\n            x \\<in> Aa \\<longrightarrow> le_ x (Sup_ Aa)))", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top.\n       (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n           \\<forall>z.\n              Domainp A z \\<longrightarrow>\n              (\\<forall>x.\n                  x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n              le (Sup Aa) z) =\n       (\\<forall>Aa.\n           Ball Aa (Domainp A) \\<longrightarrow>\n           (\\<forall>z.\n               Domainp A z \\<longrightarrow>\n               (\\<forall>x.\n                   Domainp A x \\<longrightarrow>\n                   x \\<in> Aa \\<longrightarrow> le x z) \\<longrightarrow>\n               le (Sup Aa) z))\n 2. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 3. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>Aa\\<subseteq>Collect (Domainp A).\n        \\<forall>z.\n           Domainp A z \\<longrightarrow>\n           (\\<forall>x.\n               x \\<in> Aa \\<longrightarrow> le_ x z) \\<longrightarrow>\n           le_ (Sup_ Aa) z) =\n    (\\<forall>Aa.\n        Ball Aa (Domainp A) \\<longrightarrow>\n        (\\<forall>z.\n            Domainp A z \\<longrightarrow>\n            (\\<forall>x.\n                Domainp A x \\<longrightarrow>\n                x \\<in> Aa \\<longrightarrow> le_ x z) \\<longrightarrow>\n            le_ (Sup_ Aa) z))", "unfolding Ball_Collect[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>Aa.\n        Ball Aa (Domainp A) \\<longrightarrow>\n        (\\<forall>z.\n            Domainp A z \\<longrightarrow>\n            (\\<forall>x.\n                x \\<in> Aa \\<longrightarrow> le_ x z) \\<longrightarrow>\n            le_ (Sup_ Aa) z)) =\n    (\\<forall>Aa.\n        Ball Aa (Domainp A) \\<longrightarrow>\n        (\\<forall>z.\n            Domainp A z \\<longrightarrow>\n            (\\<forall>x.\n                Domainp A x \\<longrightarrow>\n                x \\<in> Aa \\<longrightarrow> le_ x z) \\<longrightarrow>\n            le_ (Sup_ Aa) z))", "by metis"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Inf Sup inf le ls sup bot top. (Inf {} = top) = (Inf {} = top)\n 2. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Inf_ {} = top_) = (Inf_ {} = top_)", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Inf Sup inf le ls sup bot top. (Sup {} = bot) = (Sup {} = bot)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Sup_ {} = bota_) = (Sup_ {} = bota_)", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((rel_set A ===> A) ===>\n   (rel_set A ===> A) ===>\n   (A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n   (complete_lattice_ow (Collect (Domainp A)))\n   (\\<lambda>Inf Sup inf le ls sup bot top.\n       Inf ` Pow UNIV \\<subseteq> UNIV \\<and>\n       Sup ` Pow UNIV \\<subseteq> UNIV \\<and>\n       bot \\<in> UNIV \\<and>\n       top \\<in> UNIV \\<and>\n       class.complete_lattice Inf Sup inf le ls sup bot top)\n\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice", "then"], ["proof (chain)\npicking this:\n  ((rel_set A ===> A) ===>\n   (rel_set A ===> A) ===>\n   (A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n   (complete_lattice_ow (Collect (Domainp A)))\n   (\\<lambda>Inf Sup inf le ls sup bot top.\n       Inf ` Pow UNIV \\<subseteq> UNIV \\<and>\n       Sup ` Pow UNIV \\<subseteq> UNIV \\<and>\n       bot \\<in> UNIV \\<and>\n       top \\<in> UNIV \\<and>\n       class.complete_lattice Inf Sup inf le ls sup bot top)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((rel_set A ===> A) ===>\n   (rel_set A ===> A) ===>\n   (A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n   (complete_lattice_ow (Collect (Domainp A)))\n   (\\<lambda>Inf Sup inf le ls sup bot top.\n       Inf ` Pow UNIV \\<subseteq> UNIV \\<and>\n       Sup ` Pow UNIV \\<subseteq> UNIV \\<and>\n       bot \\<in> UNIV \\<and>\n       top \\<in> UNIV \\<and>\n       class.complete_lattice Inf Sup inf le ls sup bot top)\n\ngoal (1 subgoal):\n 1. ((rel_set A ===> A) ===>\n     (rel_set A ===> A) ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice", "by simp"], ["proof (state)\nthis:\n  ((rel_set A ===> A) ===>\n   (rel_set A ===> A) ===>\n   (A ===> A ===> A) ===>\n   (A ===> A ===> (=)) ===>\n   (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n   (complete_lattice_ow (Collect (Domainp A))) class.complete_lattice\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context complete_lattice_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating \\<open>?a \\<in> ?A\\<close> and \\<open>?A \\<subseteq> ?B\\<close> through auto\n  applying [OF Inf_closed' Sup_closed' inf_closed' sup_closed']\nbegin"], ["", "tts_lemma Inf_atLeast:\n  assumes \"x \\<in> U\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w {x..\\<^sub>o\\<^sub>w} = x\"\n  is complete_lattice_class.Inf_atLeast"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_atMost:\n  assumes \"x \\<in> U\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w {..\\<^sub>o\\<^sub>wx} = \\<bottom>\\<^sub>o\\<^sub>w\"\n    is complete_lattice_class.Inf_atMost"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_atLeast:\n  assumes \"x \\<in> U\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w {x..\\<^sub>o\\<^sub>w} = \\<top>\\<^sub>o\\<^sub>w\"\n  is complete_lattice_class.Sup_atLeast"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_atMost:\n  assumes \"y \\<in> U\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w {..\\<^sub>o\\<^sub>wy} = y\"\n    is complete_lattice_class.Sup_atMost"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_insert:\n  assumes \"a \\<in> U\" and \"A \\<subseteq> U\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (insert a A) = a \\<sqinter>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w A\"\n    is complete_lattice_class.Inf_insert"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_insert:\n  assumes \"a \\<in> U\" and \"A \\<subseteq> U\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (insert a A) = a \\<squnion>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w A\"\n    is complete_lattice_class.Sup_insert"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_atMostLessThan:\n  assumes \"x \\<in> U\" and \"\\<top>\\<^sub>o\\<^sub>w <\\<^sub>o\\<^sub>w x\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w {..<\\<^sub>o\\<^sub>wx} = \\<bottom>\\<^sub>o\\<^sub>w\"\n    is complete_lattice_class.Inf_atMostLessThan"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_greaterThanAtLeast:\n  assumes \"x \\<in> U\" and \"x <\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w {x<\\<^sub>o\\<^sub>w..} = \\<top>\\<^sub>o\\<^sub>w\"\n    is complete_lattice_class.Sup_greaterThanAtLeast"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_Inf_iff:\n  assumes \"b \\<in> U\" and \"A \\<subseteq> U\"\n  shows \"(b \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w A) = Ball A ((\\<le>\\<^sub>o\\<^sub>w) b)\"\n    is complete_lattice_class.le_Inf_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_le_iff:\n  assumes \"A \\<subseteq> U\" and \"b \\<in> U\"\n  shows \"(\\<Squnion>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w b) = (\\<forall>x\\<in>A. x \\<le>\\<^sub>o\\<^sub>w b)\"\n    is complete_lattice_class.Sup_le_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_atLeastLessThan:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"x <\\<^sub>o\\<^sub>w y\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {x..<y}) = x\"\n    is complete_lattice_class.Inf_atLeastLessThan"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_greaterThanAtMost:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"x <\\<^sub>o\\<^sub>w y\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w {x<\\<^sub>o\\<^sub>w..y} = y\"\n    is complete_lattice_class.Sup_greaterThanAtMost"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_atLeastAtMost:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"x \\<le>\\<^sub>o\\<^sub>w y\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w {x..\\<^sub>o\\<^sub>wy} = x\"\nis complete_lattice_class.Inf_atLeastAtMost"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_atLeastAtMost:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"x \\<le>\\<^sub>o\\<^sub>w y\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w {x..\\<^sub>o\\<^sub>wy} = y\"\n    is complete_lattice_class.Sup_atLeastAtMost"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_lower2:\n  assumes \"A \\<subseteq> U\" and \"v \\<in> U\" and \"u \\<in> A\" and \"u \\<le>\\<^sub>o\\<^sub>w v\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w v\"\n  is complete_lattice_class.Inf_lower2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_upper2:\n  assumes \"A \\<subseteq> U\" and \"v \\<in> U\" and \"u \\<in> A\" and \"v \\<le>\\<^sub>o\\<^sub>w u\"\n  shows \"v \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w A\"\n    is complete_lattice_class.Sup_upper2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_less_eq:\n  assumes \"A \\<subseteq> U\" and \"u \\<in> U\" and \"\\<And>v. v \\<in> A \\<Longrightarrow> v \\<le>\\<^sub>o\\<^sub>w u\" and \"A \\<noteq> {}\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w u\"\n  given complete_lattice_class.Inf_less_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U; u \\<in> U;\n     \\<And>v. v \\<in> A \\<Longrightarrow> v \\<le>\\<^sub>o\\<^sub>w u;\n     A \\<noteq> {};\n     \\<And>A u.\n        \\<lbrakk>A \\<subseteq> U; u \\<in> U;\n         \\<And>v.\n            \\<lbrakk>v \\<in> U; v \\<in> A\\<rbrakk>\n            \\<Longrightarrow> v \\<le>\\<^sub>o\\<^sub>w u;\n         A \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w\n                          u\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w u", "by auto"], ["", "tts_lemma less_eq_Sup:\n  assumes \"A \\<subseteq> U\" and \"u \\<in> U\" and \"\\<And>v. v \\<in> A \\<Longrightarrow> u \\<le>\\<^sub>o\\<^sub>w v\" and \"A \\<noteq> {}\"\n  shows \"u \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w A\"\n  given complete_lattice_class.less_eq_Sup"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U; u \\<in> U;\n     \\<And>v. v \\<in> A \\<Longrightarrow> u \\<le>\\<^sub>o\\<^sub>w v;\n     A \\<noteq> {};\n     \\<And>A u.\n        \\<lbrakk>A \\<subseteq> U; u \\<in> U;\n         \\<And>v.\n            \\<lbrakk>v \\<in> U; v \\<in> A\\<rbrakk>\n            \\<Longrightarrow> u \\<le>\\<^sub>o\\<^sub>w v;\n         A \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> u \\<le>\\<^sub>o\\<^sub>w\n                          \\<Squnion>\\<^sub>o\\<^sub>w A\\<rbrakk>\n    \\<Longrightarrow> u \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w A", "by auto"], ["", "tts_lemma Sup_eqI:\n  assumes \"A \\<subseteq> U\"\n    and \"x \\<in> U\"\n    and \"\\<And>y. y \\<in> A \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w x\"\n    and \"\\<And>y. \\<lbrakk>y \\<in> U; \\<And>z. z \\<in> A \\<Longrightarrow> z \\<le>\\<^sub>o\\<^sub>w y\\<rbrakk> \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w y\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w A = x\"\n    given complete_lattice_class.Sup_eqI"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U; x \\<in> U;\n     \\<And>y. y \\<in> A \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w x;\n     \\<And>y.\n        \\<lbrakk>y \\<in> U;\n         \\<And>z.\n            z \\<in> A \\<Longrightarrow> z \\<le>\\<^sub>o\\<^sub>w y\\<rbrakk>\n        \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w y;\n     \\<And>A x.\n        \\<lbrakk>A \\<subseteq> U; x \\<in> U;\n         \\<And>y.\n            \\<lbrakk>y \\<in> U; y \\<in> A\\<rbrakk>\n            \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w x;\n         \\<And>y.\n            \\<lbrakk>y \\<in> U;\n             \\<And>z.\n                \\<lbrakk>z \\<in> U; z \\<in> A\\<rbrakk>\n                \\<Longrightarrow> z \\<le>\\<^sub>o\\<^sub>w y\\<rbrakk>\n            \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w y\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w A = x\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w A = x", "by (simp add: Sup_least Sup_upper order.antisym)"], ["", "tts_lemma Inf_eqI:\n  assumes \"A \\<subseteq> U\"\n    and \"x \\<in> U\"\n    and \"\\<And>i. i \\<in> A \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w i\"\n    and \"\\<And>y. \\<lbrakk>y \\<in> U; \\<And>i. i \\<in> A \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w i\\<rbrakk> \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w x\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w A = x\"\n    given complete_lattice_class.Inf_eqI"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U; x \\<in> U;\n     \\<And>i. i \\<in> A \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w i;\n     \\<And>y.\n        \\<lbrakk>y \\<in> U;\n         \\<And>i.\n            i \\<in> A \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w i\\<rbrakk>\n        \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w x;\n     \\<And>A x.\n        \\<lbrakk>A \\<subseteq> U; x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w i;\n         \\<And>y.\n            \\<lbrakk>y \\<in> U;\n             \\<And>i.\n                \\<lbrakk>i \\<in> U; i \\<in> A\\<rbrakk>\n                \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w i\\<rbrakk>\n            \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w A = x\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w A = x", "by (simp add: subset_eq)"], ["", "tts_lemma Inf_union_distrib:\n  assumes \"A \\<subseteq> U\" and \"B \\<subseteq> U\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (A \\<union> B) = \\<Sqinter>\\<^sub>o\\<^sub>w A \\<sqinter>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w B\"\n    is complete_lattice_class.Inf_union_distrib"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_union_distrib:\n  assumes \"A \\<subseteq> U\" and \"B \\<subseteq> U\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (A \\<union> B) = \\<Squnion>\\<^sub>o\\<^sub>w A \\<squnion>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w B\"\n    is complete_lattice_class.Sup_union_distrib"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_inter_less_eq:\n  assumes \"A \\<subseteq> U\" and \"B \\<subseteq> U\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (A \\<inter> B) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w A \\<sqinter>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w B\"\n    is complete_lattice_class.Sup_inter_less_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma less_eq_Inf_inter:\n  assumes \"A \\<subseteq> U\" and \"B \\<subseteq> U\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w A \\<squnion>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w B \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (A \\<inter> B)\"\n    is complete_lattice_class.less_eq_Inf_inter"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_subset_mono:\n  assumes \"B \\<subseteq> U\" and \"A \\<subseteq> B\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w B\"\n    is complete_lattice_class.Sup_subset_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_superset_mono:\n  assumes \"A \\<subseteq> U\" and \"B \\<subseteq> A\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w B\"\n    is complete_lattice_class.Inf_superset_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_bot_conv:\n  assumes \"A \\<subseteq> U\" \n  shows \n    \"(\\<Squnion>\\<^sub>o\\<^sub>w A = \\<bottom>\\<^sub>o\\<^sub>w) = (\\<forall>x\\<in>A. x = \\<bottom>\\<^sub>o\\<^sub>w)\"\n    \"(\\<bottom>\\<^sub>o\\<^sub>w = \\<Squnion>\\<^sub>o\\<^sub>w A) = (\\<forall>x\\<in>A. x = \\<bottom>\\<^sub>o\\<^sub>w)\"\n    is complete_lattice_class.Sup_bot_conv"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_top_conv:\n  assumes \"A \\<subseteq> U\"\n  shows \n    \"(\\<Sqinter>\\<^sub>o\\<^sub>w A = \\<top>\\<^sub>o\\<^sub>w) = (\\<forall>x\\<in>A. x = \\<top>\\<^sub>o\\<^sub>w)\" \n    \"(\\<top>\\<^sub>o\\<^sub>w = \\<Sqinter>\\<^sub>o\\<^sub>w A) = (\\<forall>x\\<in>A. x = \\<top>\\<^sub>o\\<^sub>w)\"\n    is complete_lattice_class.Inf_top_conv"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Inf_le_Sup:\n  assumes \"A \\<subseteq> U\" and \"A \\<noteq> {}\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w A\"\n    is complete_lattice_class.Inf_le_Sup"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma INF_UNIV_bool_expand:\n  assumes \"range A \\<subseteq> U\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (range A) = A True \\<sqinter>\\<^sub>o\\<^sub>w A False\"\n    is complete_lattice_class.INF_UNIV_bool_expand"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_UNIV_bool_expand:\n  assumes \"range A \\<subseteq> U\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (range A) = A True \\<squnion>\\<^sub>o\\<^sub>w A False\"\n    is complete_lattice_class.SUP_UNIV_bool_expand"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_mono:\n  assumes \"A \\<subseteq> U\" and \"B \\<subseteq> U\" and \"\\<And>a. a \\<in> A \\<Longrightarrow> Bex B ((\\<le>\\<^sub>o\\<^sub>w) a)\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w B\"\n    given complete_lattice_class.Sup_mono"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U; B \\<subseteq> U;\n     \\<And>a. a \\<in> A \\<Longrightarrow> Bex B ((\\<le>\\<^sub>o\\<^sub>w) a);\n     \\<And>A B.\n        \\<lbrakk>A \\<subseteq> U; B \\<subseteq> U;\n         \\<And>a.\n            \\<lbrakk>a \\<in> U; a \\<in> A\\<rbrakk>\n            \\<Longrightarrow> Bex B ((\\<le>\\<^sub>o\\<^sub>w) a)\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w\n                          \\<Squnion>\\<^sub>o\\<^sub>w B\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w\n                      \\<Squnion>\\<^sub>o\\<^sub>w B", "by simp"], ["", "tts_lemma Inf_mono:\n  assumes \"B \\<subseteq> U\"\n    and \"A \\<subseteq> U\"\n    and \"\\<And>b. b \\<in> B \\<Longrightarrow> \\<exists>x\\<in>A. x \\<le>\\<^sub>o\\<^sub>w b\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w B\"\n    given complete_lattice_class.Inf_mono"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> U; A \\<subseteq> U;\n     \\<And>b.\n        b \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. x \\<le>\\<^sub>o\\<^sub>w b;\n     \\<And>B A.\n        \\<lbrakk>B \\<subseteq> U; A \\<subseteq> U;\n         \\<And>b.\n            \\<lbrakk>b \\<in> U; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>a\\<in>A.\n                                 a \\<le>\\<^sub>o\\<^sub>w b\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w\n                          \\<Sqinter>\\<^sub>o\\<^sub>w B\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w A \\<le>\\<^sub>o\\<^sub>w\n                      \\<Sqinter>\\<^sub>o\\<^sub>w B", "by simp"], ["", "tts_lemma Sup_Inf_le:\n  assumes \"A \\<subseteq> Pow U\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w \n    (\n      \\<Sqinter>\\<^sub>o\\<^sub>w ` {x. x \\<subseteq> U \\<and> (\\<exists>f\\<in>{f. f ` Pow U \\<subseteq> U}. x = f ` A \\<and> (\\<forall>Y\\<in>A. f Y \\<in> Y))}\n    ) \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (\\<Squnion>\\<^sub>o\\<^sub>w ` A)\"\n    is complete_lattice_class.Sup_Inf_le"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty \n  applying [\n    OF Inf_closed' Sup_closed' inf_closed' sup_closed' bot_closed top_closed\n    ]\nbegin"], ["", "tts_lemma Inf_UNIV: \"\\<Sqinter>\\<^sub>o\\<^sub>w U = \\<bottom>\\<^sub>o\\<^sub>w\"\n    is complete_lattice_class.Inf_UNIV"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Sup_UNIV: \"\\<Squnion>\\<^sub>o\\<^sub>w U = \\<top>\\<^sub>o\\<^sub>w\"\n    is complete_lattice_class.Sup_UNIV"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "context \n  fixes U\\<^sub>2 :: \"'b set\"\nbegin"], ["", "lemmas [transfer_rule] =\n  image_transfer[where ?'a='b]"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through (insert Sup_least, auto)\nbegin"], ["", "tts_lemma SUP_upper2:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"u \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"i \\<in> A\"\n    and \"u \\<le>\\<^sub>o\\<^sub>w f i\"\n  shows \"u \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (f ` A)\"\n  is complete_lattice_class.SUP_upper2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma INF_lower2:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"u \\<in> U\"\n    and \"i \\<in> A\"\n    and \"f i \\<le>\\<^sub>o\\<^sub>w u\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w u\"\n  is complete_lattice_class.INF_lower2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma less_INF_D:\n  assumes \"y \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"A \\<subseteq> U\\<^sub>2\"\n    and \"y <\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A)\"\n    and \"i \\<in> A\"\n  shows \"y <\\<^sub>o\\<^sub>w f i\"\n  is complete_lattice_class.less_INF_D"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_lessD:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"A \\<subseteq> U\\<^sub>2\"\n    and \"y \\<in> U\"\n    and \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) <\\<^sub>o\\<^sub>w y\"\n    and \"i \\<in> A\"\n  shows \"f i <\\<^sub>o\\<^sub>w y\"\n  is complete_lattice_class.SUP_lessD"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_le_iff:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"A \\<subseteq> U\\<^sub>2\" and \"u \\<in> U\"\n  shows \"(\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w u) = (\\<forall>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w u)\"\n    is complete_lattice_class.SUP_le_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through (auto dest: top_le)\nbegin"], ["", "tts_lemma INF_eqI:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"x \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"\\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk> \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w f i\"\n    and \"\\<And>y. \\<lbrakk>y \\<in> U; \\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk> \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk> \\<Longrightarrow> y \\<le>\\<^sub>o\\<^sub>w x\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = x\"\n  is complete_lattice_class.INF_eqI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through (auto simp: sup_bot.eq_iff)\nbegin"], ["", "tts_lemma SUP_eqI:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"x \\<in> U\"\n    and \"\\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk> \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w x\"\n    and \"\\<And>y. \\<lbrakk>y \\<in> U; \\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk> \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w y\\<rbrakk> \\<Longrightarrow> x \\<le>\\<^sub>o\\<^sub>w y\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = x\"\n    is complete_lattice_class.SUP_eqI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through simp\nbegin"], ["", "tts_lemma INF_le_SUP:\n  assumes \"A \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"A \\<noteq> {}\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (f ` A)\"\n  is complete_lattice_class.INF_le_SUP"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma INF_inf_const1:\n  assumes \"I \\<subseteq> U\\<^sub>2\" and \"x \\<in> U\" and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"I \\<noteq> {}\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. x \\<sqinter>\\<^sub>o\\<^sub>w f i) ` I) = x \\<sqinter>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I)\"\n    is complete_lattice_class.INF_inf_const1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma INF_inf_const2:\n  assumes \"I \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"x \\<in> U\" and \"I \\<noteq> {}\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i \\<sqinter>\\<^sub>o\\<^sub>w x) ` I) = \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) \\<sqinter>\\<^sub>o\\<^sub>w x\"\n    is complete_lattice_class.INF_inf_const2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through auto\nbegin"], ["", "tts_lemma INF_eq_const:\n  assumes \"I \\<subseteq> U\\<^sub>2\" \n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" \n    and \"I \\<noteq> {}\"\n    and \"\\<And>i. i \\<in> I \\<Longrightarrow> f i = x\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\"\n    given complete_lattice_class.INF_eq_const"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x;\n     \\<And>I U\\<^sub>2 f x.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i = x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x;\n     \\<And>I U\\<^sub>2 f x.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i = x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x", "assume \n    \"\\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {}; \\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk> \\<Longrightarrow> f i = x\\<rbrakk> \\<Longrightarrow> \n      \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\"\n    for I :: \"'a set\" and U\\<^sub>2 f x"], ["proof (state)\nthis:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i = ?x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?I) = ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x;\n     \\<And>I U\\<^sub>2 f x.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i = x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i = ?x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?I) = ?x", "have \n    \"\\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk> \\<Longrightarrow> \n      \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i = ?x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?I) = ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x", "by presburger"], ["proof (state)\nthis:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x;\n     \\<And>I U\\<^sub>2 f x.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i = x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x", "show \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\n  I \\<subseteq> U\\<^sub>2\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  I \\<noteq> {}\n  ?i \\<in> I \\<Longrightarrow> f ?i = x\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x", "by simp"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "tts_lemma SUP_eq_const:\n  assumes \"I \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"I \\<noteq> {}\"\n    and \"\\<And>i. i \\<in> I \\<Longrightarrow> f i = x\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\"\n    given complete_lattice_class.SUP_eq_const"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x;\n     \\<And>I U\\<^sub>2 f x.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i = x\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x;\n     \\<And>I U\\<^sub>2 f x.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i = x\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x", "assume \n    \"\\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {}; \\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk> \\<Longrightarrow> f i = x\\<rbrakk> \\<Longrightarrow> \n      \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\"\n    for I :: \"'a set\" and U\\<^sub>2 f x"], ["proof (state)\nthis:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i = ?x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?I) = ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x;\n     \\<And>I U\\<^sub>2 f x.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i = x\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i = ?x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?I) = ?x", "have \n    \"\\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk> \\<Longrightarrow> \n      \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i = ?x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?I) = ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x", "by presburger"], ["proof (state)\nthis:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x;\n     \\<And>I U\\<^sub>2 f x.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i = x\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x", "show \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   I \\<noteq> {}; \\<And>i. i \\<in> I \\<Longrightarrow> f i = x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\n  I \\<subseteq> U\\<^sub>2\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  I \\<noteq> {}\n  ?i \\<in> I \\<Longrightarrow> f ?i = x\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x", "by simp"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "tts_lemma SUP_eq_iff:\n  assumes \"I \\<subseteq> U\\<^sub>2\"\n    and \"c \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"I \\<noteq> {}\"\n    and \"\\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\"\n  shows \"(\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\"\n    given complete_lattice_class.SUP_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n     \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>I U\\<^sub>2 c f.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n        \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                          (\\<forall>i\\<in>I. f i = c)\\<rbrakk>\n    \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n     \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>I U\\<^sub>2 c f.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n        \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                          (\\<forall>i\\<in>I. f i = c)\\<rbrakk>\n    \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "assume \n    \"\\<lbrakk>\n      I \\<subseteq> U\\<^sub>2; \n      c \\<in> U; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      I \\<noteq> {}; \n      \\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk> \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\n    \\<rbrakk> \\<Longrightarrow>  (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\"\n    for I :: \"'a set\" and U\\<^sub>2 c f"], ["proof (state)\nthis:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2; ?c \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?c \\<le>\\<^sub>o\\<^sub>w ?f i\\<rbrakk>\n  \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?I) = ?c) =\n                    (\\<forall>x\\<in>?I. ?f x = ?c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n     \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>I U\\<^sub>2 c f.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n        \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                          (\\<forall>i\\<in>I. f i = c)\\<rbrakk>\n    \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2; ?c \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?c \\<le>\\<^sub>o\\<^sub>w ?f i\\<rbrakk>\n  \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?I) = ?c) =\n                    (\\<forall>x\\<in>?I. ?f x = ?c)", "have \n    \"\\<lbrakk>\n      I \\<subseteq> U\\<^sub>2; \n      c \\<in> U; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      I \\<noteq> {}; \n      \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\n    \\<rbrakk> \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2; ?c \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?c \\<le>\\<^sub>o\\<^sub>w ?f i\\<rbrakk>\n  \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?I) = ?c) =\n                    (\\<forall>x\\<in>?I. ?f x = ?c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n     \\<And>i.\n        i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n    \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "by presburger"], ["proof (state)\nthis:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n   \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n  \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                    (\\<forall>x\\<in>I. f x = c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n     \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>I U\\<^sub>2 c f.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n        \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                          (\\<forall>i\\<in>I. f i = c)\\<rbrakk>\n    \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n   \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n  \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                    (\\<forall>x\\<in>I. f x = c)", "show \"(\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n   \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n  \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                    (\\<forall>x\\<in>I. f x = c)\n\ngoal (1 subgoal):\n 1. (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; c \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; I \\<noteq> {};\n   \\<And>i. i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n  \\<Longrightarrow> (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                    (\\<forall>x\\<in>I. f x = c)\n  I \\<subseteq> U\\<^sub>2\n  c \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  I \\<noteq> {}\n  ?i \\<in> I \\<Longrightarrow> c \\<le>\\<^sub>o\\<^sub>w f ?i\n\ngoal (1 subgoal):\n 1. (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)", "by auto"], ["proof (state)\nthis:\n  (\\<Squnion>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\n\ngoal:\nNo subgoals!", "qed"], ["", "tts_lemma INF_eq_iff:\n  assumes \"I \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"c \\<in> U\"\n    and \"I \\<noteq> {}\"\n    and \"\\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\"\n  shows \"(\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\"\n    given complete_lattice_class.INF_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     c \\<in> U; I \\<noteq> {};\n     \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c;\n     \\<And>I U\\<^sub>2 f c.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; c \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n        \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                          (\\<forall>i\\<in>I. f i = c)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     c \\<in> U; I \\<noteq> {};\n     \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c;\n     \\<And>I U\\<^sub>2 f c.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; c \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n        \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                          (\\<forall>i\\<in>I. f i = c)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "assume \n    \"\\<lbrakk>\n      I \\<subseteq> U\\<^sub>2; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; c \\<in> U; \n      I \\<noteq> {}; \n      \\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk> \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\n    \\<rbrakk> \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\"\n    for I :: \"'a set\" and U\\<^sub>2 f c"], ["proof (state)\nthis:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?c \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i \\<le>\\<^sub>o\\<^sub>w ?c\\<rbrakk>\n  \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?I) = ?c) =\n                    (\\<forall>x\\<in>?I. ?f x = ?c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     c \\<in> U; I \\<noteq> {};\n     \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c;\n     \\<And>I U\\<^sub>2 f c.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; c \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n        \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                          (\\<forall>i\\<in>I. f i = c)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?c \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i \\<le>\\<^sub>o\\<^sub>w ?c\\<rbrakk>\n  \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?I) = ?c) =\n                    (\\<forall>x\\<in>?I. ?f x = ?c)", "have \n    \"\\<lbrakk>\n      I \\<subseteq> U\\<^sub>2; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; c \\<in> U; \n      I \\<noteq> {}; \n      \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\n    \\<rbrakk> \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?I \\<subseteq> ?U\\<^sub>2;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U; ?c \\<in> U; ?I \\<noteq> {};\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?I\\<rbrakk>\n      \\<Longrightarrow> ?f i \\<le>\\<^sub>o\\<^sub>w ?c\\<rbrakk>\n  \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?I) = ?c) =\n                    (\\<forall>x\\<in>?I. ?f x = ?c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     c \\<in> U; I \\<noteq> {};\n     \\<And>i.\n        i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n    \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "by presburger"], ["proof (state)\nthis:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   c \\<in> U; I \\<noteq> {};\n   \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n  \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                    (\\<forall>x\\<in>I. f x = c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     c \\<in> U; I \\<noteq> {};\n     \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c;\n     \\<And>I U\\<^sub>2 f c.\n        \\<lbrakk>I \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; c \\<in> U; I \\<noteq> {};\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk>\n            \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n        \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                          (\\<forall>i\\<in>I. f i = c)\\<rbrakk>\n    \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                      (\\<forall>x\\<in>I. f x = c)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   c \\<in> U; I \\<noteq> {};\n   \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n  \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                    (\\<forall>x\\<in>I. f x = c)", "show \"(\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   c \\<in> U; I \\<noteq> {};\n   \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n  \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                    (\\<forall>x\\<in>I. f x = c)\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   c \\<in> U; I \\<noteq> {};\n   \\<And>i. i \\<in> I \\<Longrightarrow> f i \\<le>\\<^sub>o\\<^sub>w c\\<rbrakk>\n  \\<Longrightarrow> (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) =\n                    (\\<forall>x\\<in>I. f x = c)\n  I \\<subseteq> U\\<^sub>2\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  c \\<in> U\n  I \\<noteq> {}\n  ?i \\<in> I \\<Longrightarrow> f ?i \\<le>\\<^sub>o\\<^sub>w c\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)", "by auto"], ["proof (state)\nthis:\n  (\\<Sqinter>\\<^sub>o\\<^sub>w (f ` I) = c) = (\\<forall>x\\<in>I. f x = c)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context \n  fixes U\\<^sub>2 :: \"'b set\"\nbegin"], ["", "lemmas [transfer_rule] =\n  image_transfer[where ?'a='b]"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through (auto simp: sup_bot.top_unique top_le intro: Sup_least)\nbegin"], ["", "tts_lemma INF_insert:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"a \\<in> U\\<^sub>2\" and \"A \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` insert a A) = f a \\<sqinter>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A)\"\n  is complete_lattice_class.INF_insert"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_insert:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"a \\<in> U\\<^sub>2\" and \"A \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` insert a A) = f a \\<squnion>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (f ` A)\"\n    is complete_lattice_class.SUP_insert"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_INF_iff:\n  assumes \"u \\<in> U\" and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"A \\<subseteq> U\\<^sub>2\"\n  shows \"(u \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A)) = (\\<forall>x\\<in>A. u \\<le>\\<^sub>o\\<^sub>w f x)\"\n  is complete_lattice_class.le_INF_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma INF_union:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. M x \\<in> U\" and \"A \\<subseteq> U\\<^sub>2\" and \"B \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (M ` (A \\<union> B)) = \\<Sqinter>\\<^sub>o\\<^sub>w (M ` A) \\<sqinter>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (M ` B)\"\n    is complete_lattice_class.INF_union"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_union:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. M x \\<in> U\" and \"A \\<subseteq> U\\<^sub>2\" and \"B \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (M ` (A \\<union> B)) = \\<Squnion>\\<^sub>o\\<^sub>w (M ` A) \\<squnion>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (M ` B)\"\n  is complete_lattice_class.SUP_union"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_bot_conv:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. B x \\<in> U\" and \"A \\<subseteq> U\\<^sub>2\"\n  shows \n    \"(\\<Squnion>\\<^sub>o\\<^sub>w (B ` A) = \\<bottom>\\<^sub>o\\<^sub>w) = (\\<forall>x\\<in>A. B x = \\<bottom>\\<^sub>o\\<^sub>w)\"\n    \"(\\<bottom>\\<^sub>o\\<^sub>w = \\<Squnion>\\<^sub>o\\<^sub>w (B ` A)) = (\\<forall>x\\<in>A. B x = \\<bottom>\\<^sub>o\\<^sub>w)\"\n  is complete_lattice_class.SUP_bot_conv"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma INF_top_conv:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. B x \\<in> U\" and \"A \\<subseteq> U\\<^sub>2\"\n  shows \n    \"(\\<Sqinter>\\<^sub>o\\<^sub>w (B ` A) = \\<top>\\<^sub>o\\<^sub>w) = (\\<forall>x\\<in>A. B x = \\<top>\\<^sub>o\\<^sub>w)\"\n    \"(\\<top>\\<^sub>o\\<^sub>w = \\<Sqinter>\\<^sub>o\\<^sub>w (B ` A)) = (\\<forall>x\\<in>A. B x = \\<top>\\<^sub>o\\<^sub>w)\"\n  is complete_lattice_class.INF_top_conv"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_upper:\n  assumes \"A \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"i \\<in> A\"\n  shows \"f i \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (f ` A)\"\n  is complete_lattice_class.SUP_upper"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma INF_lower:\n  assumes \"A \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"i \\<in> A\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w f i\"\n  is complete_lattice_class.INF_lower"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma INF_inf_distrib:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"A \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<sqinter>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (g ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>a. f a \\<sqinter>\\<^sub>o\\<^sub>w g a) ` A)\"\n    is complete_lattice_class.INF_inf_distrib"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_sup_distrib:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" and \"A \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<squnion>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (g ` A) = \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>a. f a \\<squnion>\\<^sub>o\\<^sub>w g a) ` A)\"\n    is complete_lattice_class.SUP_sup_distrib"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_subset_mono:\n  assumes \"B \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\"\n    and \"A \\<subseteq> B\"\n    and \"\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\"\n    given complete_lattice_class.SUP_subset_mono"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n     \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>B f g A.\n        \\<lbrakk>B \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> A\\<rbrakk>\n            \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                           (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                          \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n     \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>B f g A.\n        \\<lbrakk>B \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> A\\<rbrakk>\n            \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                           (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                          \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "assume \n    \"\\<lbrakk>\n      B \\<subseteq> U\\<^sub>2; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; \n      A \\<subseteq> B; \n      \\<And>x. \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> A\\<rbrakk> \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\n    \\<rbrakk> \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\"\n    for B :: \"'b set\" and f g A"], ["proof (state)\nthis:\n  \\<lbrakk>?B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. ?g x \\<in> U; ?A \\<subseteq> ?B;\n   \\<And>x.\n      \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?f x \\<le>\\<^sub>o\\<^sub>w ?g x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                     (?f ` ?A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Squnion>\\<^sub>o\\<^sub>w (?g ` ?B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n     \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>B f g A.\n        \\<lbrakk>B \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> A\\<rbrakk>\n            \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                           (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                          \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. ?g x \\<in> U; ?A \\<subseteq> ?B;\n   \\<And>x.\n      \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?f x \\<le>\\<^sub>o\\<^sub>w ?g x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                     (?f ` ?A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Squnion>\\<^sub>o\\<^sub>w (?g ` ?B)", "have\n    \"\\<lbrakk>\n      B \\<subseteq> U\\<^sub>2; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; \n      A \\<subseteq> B; \n      \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\n    \\<rbrakk> \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. ?g x \\<in> U; ?A \\<subseteq> ?B;\n   \\<And>x.\n      \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?f x \\<le>\\<^sub>o\\<^sub>w ?g x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                     (?f ` ?A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Squnion>\\<^sub>o\\<^sub>w (?g ` ?B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n     \\<And>x.\n        x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n   \\<And>x.\n      x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n     \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>B f g A.\n        \\<lbrakk>B \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> A\\<rbrakk>\n            \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                           (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                          \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n   \\<And>x.\n      x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "show \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n   \\<And>x.\n      x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>B \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; A \\<subseteq> B;\n   \\<And>x.\n      x \\<in> A \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n  B \\<subseteq> U\\<^sub>2\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\n  A \\<subseteq> B\n  ?x \\<in> A \\<Longrightarrow> f ?x \\<le>\\<^sub>o\\<^sub>w g ?x\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "by blast"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "tts_lemma INF_superset_mono:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\"\n    and \"B \\<subseteq> A\"\n    and \"\\<And>x. \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk> \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\"\n    given complete_lattice_class.INF_superset_mono"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n     \\<And>x.\n        \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk>\n        \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>A f g B.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk>\n            \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                           (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                          \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n     \\<And>x.\n        \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk>\n        \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>A f g B.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk>\n            \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                           (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                          \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "assume \n    \"\\<lbrakk>\n      A \\<subseteq> U\\<^sub>2; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; \n      B \\<subseteq> A; \n      \\<And>x. \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk> \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\n    \\<rbrakk> \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\"\n    for A :: \"'b set\" and f g B"], ["proof (state)\nthis:\n  \\<lbrakk>?A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. ?g x \\<in> U; ?B \\<subseteq> ?A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> ?f x \\<le>\\<^sub>o\\<^sub>w ?g x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                     (?f ` ?A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (?g ` ?B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n     \\<And>x.\n        \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk>\n        \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>A f g B.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk>\n            \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                           (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                          \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. ?g x \\<in> U; ?B \\<subseteq> ?A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> ?f x \\<le>\\<^sub>o\\<^sub>w ?g x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                     (?f ` ?A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (?g ` ?B)", "have\n    \"\\<lbrakk>\n      A \\<subseteq> U\\<^sub>2; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; \n      B \\<subseteq> A; \n      \\<And>x. x \\<in> B \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\n    \\<rbrakk> \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. ?g x \\<in> U; ?B \\<subseteq> ?A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> ?f x \\<le>\\<^sub>o\\<^sub>w ?g x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                     (?f ` ?A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (?g ` ?B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n     \\<And>x.\n        x \\<in> B \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n   \\<And>x.\n      x \\<in> B \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n     \\<And>x.\n        \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk>\n        \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>A f g B.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U\\<^sub>2; x \\<in> B\\<rbrakk>\n            \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                           (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                          \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w\n                       (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n   \\<And>x.\n      x \\<in> B \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "show \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n   \\<And>x.\n      x \\<in> B \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U; B \\<subseteq> A;\n   \\<And>x.\n      x \\<in> B \\<Longrightarrow> f x \\<le>\\<^sub>o\\<^sub>w g x\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n  A \\<subseteq> U\\<^sub>2\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\n  B \\<subseteq> A\n  \\<lbrakk>?x \\<in> U\\<^sub>2; ?x \\<in> B\\<rbrakk>\n  \\<Longrightarrow> f ?x \\<le>\\<^sub>o\\<^sub>w g ?x\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "by blast"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "tts_lemma INF_absorb:\n  assumes \"I \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. A x \\<in> U\" and \"k \\<in> I\"\n  shows \"A k \\<sqinter>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (A ` I) = \\<Sqinter>\\<^sub>o\\<^sub>w (A ` I)\"\n    is complete_lattice_class.INF_absorb"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_absorb:\n  assumes \"I \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. A x \\<in> U\" and \"k \\<in> I\"\n  shows \"A k \\<squnion>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (A ` I) = \\<Squnion>\\<^sub>o\\<^sub>w (A ` I)\"\n    is complete_lattice_class.SUP_absorb"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "context \n  fixes f :: \"'b \\<Rightarrow> 'al\" and U\\<^sub>2 :: \"'b set\"\n  assumes f[transfer_rule]: \"\\<forall>x \\<in> U\\<^sub>2. f x = \\<bottom>\\<^sub>o\\<^sub>w\"\nbegin"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  sbterms: (\\<open>Orderings.bot::?'a::complete_lattice\\<close> to \\<open>\\<bottom>\\<^sub>o\\<^sub>w\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through simp\nbegin"], ["", "tts_lemma SUP_bot:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = \\<bottom>\\<^sub>o\\<^sub>w\"\n    is complete_lattice_class.SUP_bot[folded const_fun_def]"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "context \n  fixes f :: \"'b \\<Rightarrow> 'al\" and U\\<^sub>2 :: \"'b set\"\n  assumes f[transfer_rule]: \"\\<forall>x \\<in> U\\<^sub>2. f x = \\<top>\\<^sub>o\\<^sub>w\"\nbegin"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  sbterms: (\\<open>Orderings.top::?'a::complete_lattice\\<close> to \\<open>\\<top>\\<^sub>o\\<^sub>w\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through simp\nbegin"], ["", "tts_lemma INF_top:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = \\<top>\\<^sub>o\\<^sub>w\"\n  is complete_lattice_class.INF_top[folded const_fun_def]"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "context \n  fixes f :: \"'b \\<Rightarrow> 'al\" and c and F and U\\<^sub>2 :: \"'b set\"\n  assumes c_closed[transfer_rule]: \"c \\<in> U\"\n  assumes f[transfer_rule]: \"\\<forall>x \\<in> U\\<^sub>2. f x = c\"\nbegin"], ["", "tts_register_sbts \\<open>c\\<close> | U"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALC = (\\<lambda>x. x \\<in> U); bi_unique ALC;\n     right_total ALC\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALC c rcdt", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALC = (\\<lambda>x. x \\<in> U); bi_unique ALC;\n     right_total ALC\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALC c rcdt", "assume ALC: \"Domainp ALC = (\\<lambda>x. x \\<in> U)\""], ["proof (state)\nthis:\n  Domainp ALC = (\\<lambda>x. x \\<in> U)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALC = (\\<lambda>x. x \\<in> U); bi_unique ALC;\n     right_total ALC\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALC c rcdt", "have \"Domainp ALC c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp ALC c", "unfolding ALC"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> U", "by (simp add: c_closed)"], ["proof (state)\nthis:\n  Domainp ALC c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALC = (\\<lambda>x. x \\<in> U); bi_unique ALC;\n     right_total ALC\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALC c rcdt", "then"], ["proof (chain)\npicking this:\n  Domainp ALC c", "obtain c' where \"ALC c c'\""], ["proof (prove)\nusing this:\n  Domainp ALC c\n\ngoal (1 subgoal):\n 1. (\\<And>c'. ALC c c' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  ALC c c'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp ALC = (\\<lambda>x. x \\<in> U); bi_unique ALC;\n     right_total ALC\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt. ALC c rcdt", "then"], ["proof (chain)\npicking this:\n  ALC c c'", "show \"\\<exists>c'. ALC c c'\""], ["proof (prove)\nusing this:\n  ALC c c'\n\ngoal (1 subgoal):\n 1. \\<exists>c'. ALC c c'", "by auto"], ["proof (state)\nthis:\n  \\<exists>c'. ALC c c'\n\ngoal:\nNo subgoals!", "qed"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  sbterms: (\\<open>?c::?'a::complete_lattice\\<close> to \\<open>c\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through simp\nbegin"], ["", "tts_lemma INF_constant:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = (if A = {} then \\<top>\\<^sub>o\\<^sub>w else c)\"\n    is complete_lattice_class.INF_constant[folded const_fun_def]"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_constant:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = (if A = {} then \\<bottom>\\<^sub>o\\<^sub>w else c)\"\n    is complete_lattice_class.SUP_constant[folded const_fun_def]"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  sbterms: (\\<open>?f::?'a::complete_lattice\\<close> to \\<open>c\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  eliminating through simp\nbegin"], ["", "tts_lemma INF_const:\n  assumes \"A \\<subseteq> U\\<^sub>2\" and \"A \\<noteq> {}\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. c) ` A) = c\"\n    is complete_lattice_class.INF_const"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma SUP_const:\n  assumes \"A \\<subseteq> U\\<^sub>2\" and \"A \\<noteq> {}\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. c) ` A) = c\"\n    is complete_lattice_class.SUP_const"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "end"], ["", "context complete_lattice_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>) and (?'c to \\<open>U\\<^sub>3::'c set\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty  \n  eliminating \\<open>?U \\<noteq> {}\\<close> through (force simp: subset_iff INF_top equals0D)\n  applying [\n    OF Inf_closed' Sup_closed' inf_closed' sup_closed' bot_closed top_closed\n    ]\nbegin"], ["", "tts_lemma SUP_eq:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"B \\<subseteq> U\\<^sub>3\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f (x::'a) \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\"\n    and \"\\<And>i. i \\<in> A \\<Longrightarrow> \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x\"\n    and \"\\<And>j. j \\<in> B \\<Longrightarrow> \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\"\n    given complete_lattice_class.SUP_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x;\n     \\<And>A U\\<^sub>2 B U\\<^sub>3 f g.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> \\<exists>j\\<in>B.\n                                 f i \\<le>\\<^sub>o\\<^sub>w g j;\n         \\<And>j.\n            \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i\\<in>A.\n                                 g j \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                          \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x;\n     \\<And>A U\\<^sub>2 B U\\<^sub>3 f g.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> \\<exists>j\\<in>B.\n                                 f i \\<le>\\<^sub>o\\<^sub>w g j;\n         \\<And>j.\n            \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i\\<in>A.\n                                 g j \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                          \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "assume \n    \"\\<lbrakk>\n      A \\<subseteq> U\\<^sub>2; \n      B \\<subseteq> U\\<^sub>3; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U; \n      \\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk> \\<Longrightarrow> \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x; \n      \\<And>j. \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk> \\<Longrightarrow> \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x\n    \\<rbrakk> \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\"\n    for A :: \"'a set\" and U\\<^sub>2 and B :: \"'b set\" and U\\<^sub>3 f g"], ["proof (state)\nthis:\n  \\<lbrakk>?A \\<subseteq> ?U\\<^sub>2; ?B \\<subseteq> ?U\\<^sub>3;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>3. ?g x \\<in> U;\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?B. ?f i \\<le>\\<^sub>o\\<^sub>w ?g x;\n   \\<And>j.\n      \\<lbrakk>j \\<in> ?U\\<^sub>3; j \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?A.\n                           ?g j \\<le>\\<^sub>o\\<^sub>w ?f x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?A) =\n                    \\<Squnion>\\<^sub>o\\<^sub>w (?g ` ?B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x;\n     \\<And>A U\\<^sub>2 B U\\<^sub>3 f g.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> \\<exists>j\\<in>B.\n                                 f i \\<le>\\<^sub>o\\<^sub>w g j;\n         \\<And>j.\n            \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i\\<in>A.\n                                 g j \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                          \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?A \\<subseteq> ?U\\<^sub>2; ?B \\<subseteq> ?U\\<^sub>3;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>3. ?g x \\<in> U;\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?B. ?f i \\<le>\\<^sub>o\\<^sub>w ?g x;\n   \\<And>j.\n      \\<lbrakk>j \\<in> ?U\\<^sub>3; j \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?A.\n                           ?g j \\<le>\\<^sub>o\\<^sub>w ?f x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?A) =\n                    \\<Squnion>\\<^sub>o\\<^sub>w (?g ` ?B)", "have\n    \"\\<lbrakk>\n      A \\<subseteq> U\\<^sub>2; \n      B \\<subseteq> U\\<^sub>3; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U; \n      \\<And>i. i \\<in> A \\<Longrightarrow> \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x; \n      \\<And>j. j \\<in> B \\<Longrightarrow> \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x\n    \\<rbrakk> \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?U\\<^sub>2; ?B \\<subseteq> ?U\\<^sub>3;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>3. ?g x \\<in> U;\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?B. ?f i \\<le>\\<^sub>o\\<^sub>w ?g x;\n   \\<And>j.\n      \\<lbrakk>j \\<in> ?U\\<^sub>3; j \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?A.\n                           ?g j \\<le>\\<^sub>o\\<^sub>w ?f x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (?f ` ?A) =\n                    \\<Squnion>\\<^sub>o\\<^sub>w (?g ` ?B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n   \\<And>i.\n      i \\<in> A \\<Longrightarrow>\n      \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n   \\<And>j.\n      j \\<in> B \\<Longrightarrow>\n      \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x;\n     \\<And>A U\\<^sub>2 B U\\<^sub>3 f g.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> \\<exists>j\\<in>B.\n                                 f i \\<le>\\<^sub>o\\<^sub>w g j;\n         \\<And>j.\n            \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i\\<in>A.\n                                 g j \\<le>\\<^sub>o\\<^sub>w f i\\<rbrakk>\n        \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                          \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n   \\<And>i.\n      i \\<in> A \\<Longrightarrow>\n      \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n   \\<And>j.\n      j \\<in> B \\<Longrightarrow>\n      \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "show \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n   \\<And>i.\n      i \\<in> A \\<Longrightarrow>\n      \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n   \\<And>j.\n      j \\<in> B \\<Longrightarrow>\n      \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n   \\<And>i.\n      i \\<in> A \\<Longrightarrow>\n      \\<exists>x\\<in>B. f i \\<le>\\<^sub>o\\<^sub>w g x;\n   \\<And>j.\n      j \\<in> B \\<Longrightarrow>\n      \\<exists>x\\<in>A. g j \\<le>\\<^sub>o\\<^sub>w f x\\<rbrakk>\n  \\<Longrightarrow> \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) =\n                    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n  A \\<subseteq> U\\<^sub>2\n  B \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\n  ?i \\<in> A \\<Longrightarrow>\n  \\<exists>x\\<in>B. f ?i \\<le>\\<^sub>o\\<^sub>w g x\n  ?j \\<in> B \\<Longrightarrow>\n  \\<exists>x\\<in>A. g ?j \\<le>\\<^sub>o\\<^sub>w f x\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "by simp"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) = \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "tts_lemma INF_eq:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"B \\<subseteq> U\\<^sub>3\"\n    and \"\\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f (x::'a) \\<in> U\"\n    and \"\\<And>i. i \\<in> A \\<Longrightarrow> \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i\"\n    and \"\\<And>j. j \\<in> B \\<Longrightarrow> \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\"\n    given complete_lattice_class.INF_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j;\n     \\<And>A U\\<^sub>2 B U\\<^sub>3 g f.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n         \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> \\<exists>j\\<in>B.\n                                 g j \\<le>\\<^sub>o\\<^sub>w f i;\n         \\<And>j.\n            \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i\\<in>A.\n                                 f i \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                          \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j;\n     \\<And>A U\\<^sub>2 B U\\<^sub>3 g f.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n         \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> \\<exists>j\\<in>B.\n                                 g j \\<le>\\<^sub>o\\<^sub>w f i;\n         \\<And>j.\n            \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i\\<in>A.\n                                 f i \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                          \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "assume \n    \"\\<lbrakk>\n      A \\<subseteq> U\\<^sub>2; \n      B \\<subseteq> U\\<^sub>3; \n      \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      \\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk> \\<Longrightarrow> \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i; \n      \\<And>j. \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk> \\<Longrightarrow> \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j\n    \\<rbrakk> \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\"\n    for A :: \"'a set\" and U\\<^sub>2 and B :: \"'b set\" and U\\<^sub>3 g f"], ["proof (state)\nthis:\n  \\<lbrakk>?A \\<subseteq> ?U\\<^sub>2; ?B \\<subseteq> ?U\\<^sub>3;\n   \\<forall>x\\<in>?U\\<^sub>3. ?g x \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U;\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?B. ?g x \\<le>\\<^sub>o\\<^sub>w ?f i;\n   \\<And>j.\n      \\<lbrakk>j \\<in> ?U\\<^sub>3; j \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?A.\n                           ?f x \\<le>\\<^sub>o\\<^sub>w ?g j\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?A) =\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (?g ` ?B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j;\n     \\<And>A U\\<^sub>2 B U\\<^sub>3 g f.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n         \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> \\<exists>j\\<in>B.\n                                 g j \\<le>\\<^sub>o\\<^sub>w f i;\n         \\<And>j.\n            \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i\\<in>A.\n                                 f i \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                          \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?A \\<subseteq> ?U\\<^sub>2; ?B \\<subseteq> ?U\\<^sub>3;\n   \\<forall>x\\<in>?U\\<^sub>3. ?g x \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U;\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?B. ?g x \\<le>\\<^sub>o\\<^sub>w ?f i;\n   \\<And>j.\n      \\<lbrakk>j \\<in> ?U\\<^sub>3; j \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?A.\n                           ?f x \\<le>\\<^sub>o\\<^sub>w ?g j\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?A) =\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (?g ` ?B)", "have\n    \"\\<lbrakk>\n      A \\<subseteq> U\\<^sub>2; \n      B \\<subseteq> U\\<^sub>3; \n      \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U; \n      \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U; \n      \\<And>i. i \\<in> A \\<Longrightarrow> \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i; \n      \\<And>j. j \\<in> B \\<Longrightarrow> \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j\n    \\<rbrakk> \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?U\\<^sub>2; ?B \\<subseteq> ?U\\<^sub>3;\n   \\<forall>x\\<in>?U\\<^sub>3. ?g x \\<in> U;\n   \\<forall>x\\<in>?U\\<^sub>2. ?f x \\<in> U;\n   \\<And>i.\n      \\<lbrakk>i \\<in> ?U\\<^sub>2; i \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?B. ?g x \\<le>\\<^sub>o\\<^sub>w ?f i;\n   \\<And>j.\n      \\<lbrakk>j \\<in> ?U\\<^sub>3; j \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> \\<exists>x\\<in>?A.\n                           ?f x \\<le>\\<^sub>o\\<^sub>w ?g j\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (?f ` ?A) =\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (?g ` ?B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n   \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<And>i.\n      i \\<in> A \\<Longrightarrow>\n      \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n   \\<And>j.\n      j \\<in> B \\<Longrightarrow>\n      \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n     \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n     \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n     \\<And>i.\n        i \\<in> A \\<Longrightarrow>\n        \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n     \\<And>j.\n        j \\<in> B \\<Longrightarrow>\n        \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j;\n     \\<And>A U\\<^sub>2 B U\\<^sub>3 g f.\n        \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n         \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n         \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n         \\<And>i.\n            \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> A\\<rbrakk>\n            \\<Longrightarrow> \\<exists>j\\<in>B.\n                                 g j \\<le>\\<^sub>o\\<^sub>w f i;\n         \\<And>j.\n            \\<lbrakk>j \\<in> U\\<^sub>3; j \\<in> B\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i\\<in>A.\n                                 f i \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n        \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                          \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                      \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n   \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<And>i.\n      i \\<in> A \\<Longrightarrow>\n      \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n   \\<And>j.\n      j \\<in> B \\<Longrightarrow>\n      \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "show \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n   \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<And>i.\n      i \\<in> A \\<Longrightarrow>\n      \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n   \\<And>j.\n      j \\<in> B \\<Longrightarrow>\n      \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<subseteq> U\\<^sub>2; B \\<subseteq> U\\<^sub>3;\n   \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U;\n   \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U;\n   \\<And>i.\n      i \\<in> A \\<Longrightarrow>\n      \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f i;\n   \\<And>j.\n      j \\<in> B \\<Longrightarrow>\n      \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g j\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) =\n                    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n  A \\<subseteq> U\\<^sub>2\n  B \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  ?i \\<in> A \\<Longrightarrow>\n  \\<exists>x\\<in>B. g x \\<le>\\<^sub>o\\<^sub>w f ?i\n  ?j \\<in> B \\<Longrightarrow>\n  \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g ?j\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "by simp"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "context complete_lattice_ow\nbegin"], ["", "context \n  fixes U\\<^sub>2 :: \"'b set\" and U\\<^sub>3 :: \"'c set\"\nbegin"], ["", "lemmas [transfer_rule] =\n  image_transfer[where ?'a='b]\n  image_transfer[where ?'a='c]"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>) and (?'c to \\<open>U\\<^sub>3::'c set\\<close>)\n  rewriting ctr_simps\n  substituting complete_lattice_ow_axioms and sup_bot.sl_neut.not_empty\n  applying [\n    OF _ _ Inf_closed' Sup_closed' inf_closed' sup_closed' bot_closed top_closed\n    ]\nbegin"], ["", "tts_lemma ne_INF_commute:\n  assumes \"U\\<^sub>2 \\<noteq> {}\"\n    and \"U\\<^sub>3 \\<noteq> {}\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f (x::'b) y \\<in> U\"\n    and \"B \\<subseteq> U\\<^sub>3\"\n    and \"A \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. \\<Sqinter>\\<^sub>o\\<^sub>w (f i ` B)) ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\"\n    is complete_lattice_class.INF_commute"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma ne_SUP_commute:\n  assumes \"U\\<^sub>2 \\<noteq> {}\"\n    and \"U\\<^sub>3 \\<noteq> {}\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f (x::'b) y \\<in> U\"\n    and \"B \\<subseteq> U\\<^sub>3\"\n    and \"A \\<subseteq> U\\<^sub>2\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. \\<Squnion>\\<^sub>o\\<^sub>w (f i ` B)) ` A) = \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\"\n    is complete_lattice_class.SUP_commute"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma ne_SUP_mono:\n  assumes \"U\\<^sub>2 \\<noteq> {}\"\n    and \"U\\<^sub>3 \\<noteq> {}\"\n    and \"A \\<subseteq> U\\<^sub>2\"\n    and \"B \\<subseteq> U\\<^sub>3\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f (x::'b) \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\"\n    and \"\\<And>n. \\<lbrakk>n \\<in> U\\<^sub>2; n \\<in> A\\<rbrakk> \\<Longrightarrow> \\<exists>x\\<in>B. f n \\<le>\\<^sub>o\\<^sub>w g x\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\"\n    is complete_lattice_class.SUP_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma ne_INF_mono:\n  assumes \"U\\<^sub>2 \\<noteq> {}\"\n    and \"U\\<^sub>3 \\<noteq> {}\"\n    and \"B \\<subseteq> U\\<^sub>2\"\n    and \"A \\<subseteq> U\\<^sub>3\"\n    and \"\\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. g (x::'b) \\<in> U\"\n    and \"\\<And>m. \\<lbrakk>m \\<in> U\\<^sub>2; m \\<in> B\\<rbrakk> \\<Longrightarrow> \\<exists>x\\<in>A. f x \\<le>\\<^sub>o\\<^sub>w g m\"\n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\"\n    is complete_lattice_class.INF_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "lemma INF_commute:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\" and \"B \\<subseteq> U\\<^sub>3\" and \"A \\<subseteq> U\\<^sub>2\" \n  shows \n    \"\\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) = \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "proof(cases \\<open>U\\<^sub>2 = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>2 = {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)\n 2. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "case True"], ["proof (state)\nthis:\n  U\\<^sub>2 = {}\n\ngoal (2 subgoals):\n 1. U\\<^sub>2 = {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)\n 2. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "then"], ["proof (chain)\npicking this:\n  U\\<^sub>2 = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  U\\<^sub>2 = {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "using assms"], ["proof (prove)\nusing this:\n  U\\<^sub>2 = {}\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n  B \\<subseteq> U\\<^sub>3\n  A \\<subseteq> U\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "by (simp add: inf_top.sl_neut.neutral_map Inf_top_conv(2))"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "case ne_U\\<^sub>2: False"], ["proof (state)\nthis:\n  U\\<^sub>2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "proof(cases \\<open>U\\<^sub>3 = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>3 = {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)\n 2. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "case True"], ["proof (state)\nthis:\n  U\\<^sub>3 = {}\n\ngoal (2 subgoals):\n 1. U\\<^sub>3 = {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)\n 2. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "from assms(2)"], ["proof (chain)\npicking this:\n  B \\<subseteq> U\\<^sub>3", "have \"B = {}\""], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>3\n\ngoal (1 subgoal):\n 1. B = {}", "unfolding True"], ["proof (prove)\nusing this:\n  B \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. B = {}", "by simp"], ["proof (state)\nthis:\n  B = {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "unfolding \\<open>B = {}\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` {})) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      {})", "by (force intro: INF_top)"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "case False"], ["proof (state)\nthis:\n  U\\<^sub>3 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "from ne_U\\<^sub>2 False assms"], ["proof (chain)\npicking this:\n  U\\<^sub>2 \\<noteq> {}\n  U\\<^sub>3 \\<noteq> {}\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n  B \\<subseteq> U\\<^sub>3\n  A \\<subseteq> U\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  U\\<^sub>2 \\<noteq> {}\n  U\\<^sub>3 \\<noteq> {}\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n  B \\<subseteq> U\\<^sub>3\n  A \\<subseteq> U\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Sqinter>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "by (rule ne_INF_commute)"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Sqinter>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Sqinter>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Sqinter>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SUP_commute:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\" and \"B \\<subseteq> U\\<^sub>3\" and \"A \\<subseteq> U\\<^sub>2\"\n  shows \n    \"\\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) = \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "proof(cases \\<open>U\\<^sub>2 = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>2 = {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)\n 2. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "case True"], ["proof (state)\nthis:\n  U\\<^sub>2 = {}\n\ngoal (2 subgoals):\n 1. U\\<^sub>2 = {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)\n 2. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "from assms(3)"], ["proof (chain)\npicking this:\n  A \\<subseteq> U\\<^sub>2", "have \"A = {}\""], ["proof (prove)\nusing this:\n  A \\<subseteq> U\\<^sub>2\n\ngoal (1 subgoal):\n 1. A = {}", "unfolding True"], ["proof (prove)\nusing this:\n  A \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. A = {}", "by simp"], ["proof (state)\nthis:\n  A = {}\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "from assms(2)"], ["proof (chain)\npicking this:\n  B \\<subseteq> U\\<^sub>3", "show ?thesis"], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "unfolding \\<open>A = {}\\<close>"], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` {}) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` {})) `\n      B)", "by (simp add: sup_bot.sl_neut.neutral_map inf_absorb1 SUP_bot)"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "case ne_U\\<^sub>2: False"], ["proof (state)\nthis:\n  U\\<^sub>2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "proof(cases \\<open>U\\<^sub>3 = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>3 = {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)\n 2. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "case True"], ["proof (state)\nthis:\n  U\\<^sub>3 = {}\n\ngoal (2 subgoals):\n 1. U\\<^sub>3 = {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)\n 2. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "from assms(2)"], ["proof (chain)\npicking this:\n  B \\<subseteq> U\\<^sub>3", "have \"B = {}\""], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>3\n\ngoal (1 subgoal):\n 1. B = {}", "unfolding True"], ["proof (prove)\nusing this:\n  B \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. B = {}", "by simp"], ["proof (state)\nthis:\n  B = {}\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "unfolding \\<open>B = {}\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` {})) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      {})", "by (simp add: sup_bot.sl_neut.neutral_map Sup_bot_conv(1))"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "case False"], ["proof (state)\nthis:\n  U\\<^sub>3 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "from ne_U\\<^sub>2 False assms"], ["proof (chain)\npicking this:\n  U\\<^sub>2 \\<noteq> {}\n  U\\<^sub>3 \\<noteq> {}\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n  B \\<subseteq> U\\<^sub>3\n  A \\<subseteq> U\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  U\\<^sub>2 \\<noteq> {}\n  U\\<^sub>3 \\<noteq> {}\n  \\<forall>x\\<in>U\\<^sub>2. \\<forall>y\\<in>U\\<^sub>3. f x y \\<in> U\n  B \\<subseteq> U\\<^sub>3\n  A \\<subseteq> U\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n    \\<Squnion>\\<^sub>o\\<^sub>w\n     ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) `\n      B)", "by (rule ne_SUP_commute)"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>x. \\<Squnion>\\<^sub>o\\<^sub>w (f x ` B)) ` A) =\n  \\<Squnion>\\<^sub>o\\<^sub>w\n   ((\\<lambda>j. \\<Squnion>\\<^sub>o\\<^sub>w ((\\<lambda>i. f i j) ` A)) ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SUP_mono:\n  assumes \"A \\<subseteq> U\\<^sub>2\" \n    and \"B \\<subseteq> U\\<^sub>3\" \n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\" \n    and \"\\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\"\n    and \"\\<And>n. n \\<in> A \\<Longrightarrow> \\<exists>m\\<in>B. f n \\<le>\\<^sub>o\\<^sub>w g m\" \n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "proof(cases \\<open>U\\<^sub>2 = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>2 = {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n 2. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "case True"], ["proof (state)\nthis:\n  U\\<^sub>2 = {}\n\ngoal (2 subgoals):\n 1. U\\<^sub>2 = {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n 2. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "from assms(1)"], ["proof (chain)\npicking this:\n  A \\<subseteq> U\\<^sub>2", "have \"A = {}\""], ["proof (prove)\nusing this:\n  A \\<subseteq> U\\<^sub>2\n\ngoal (1 subgoal):\n 1. A = {}", "unfolding True"], ["proof (prove)\nusing this:\n  A \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. A = {}", "by simp"], ["proof (state)\nthis:\n  A = {}\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "have \"f ` A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = {}", "unfolding \\<open>A = {}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {} = {}", "by simp"], ["proof (state)\nthis:\n  f ` A = {}\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "from assms(2,4)"], ["proof (chain)\npicking this:\n  B \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U", "show ?thesis"], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "unfolding \\<open>f ` A = {}\\<close>"], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w {} \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "by (simp add: image_subset_iff in_mono)"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "case ne_U\\<^sub>2: False"], ["proof (state)\nthis:\n  U\\<^sub>2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "proof(cases \\<open>U\\<^sub>3 = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>3 = {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n 2. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "case True"], ["proof (state)\nthis:\n  U\\<^sub>3 = {}\n\ngoal (2 subgoals):\n 1. U\\<^sub>3 = {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n 2. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "from assms(2)"], ["proof (chain)\npicking this:\n  B \\<subseteq> U\\<^sub>3", "have \"B = {}\""], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>3\n\ngoal (1 subgoal):\n 1. B = {}", "unfolding True"], ["proof (prove)\nusing this:\n  B \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. B = {}", "by simp"], ["proof (state)\nthis:\n  B = {}\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "have \"g ` B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` B = {}", "unfolding \\<open>B = {}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` {} = {}", "by simp"], ["proof (state)\nthis:\n  g ` B = {}\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "from assms(1,3,5)"], ["proof (chain)\npicking this:\n  A \\<subseteq> U\\<^sub>2\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  ?n \\<in> A \\<Longrightarrow>\n  \\<exists>m\\<in>B. f ?n \\<le>\\<^sub>o\\<^sub>w g m", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<subseteq> U\\<^sub>2\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  ?n \\<in> A \\<Longrightarrow>\n  \\<exists>m\\<in>B. f ?n \\<le>\\<^sub>o\\<^sub>w g m\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "unfolding \\<open>g ` B = {}\\<close> \\<open>B = {}\\<close>"], ["proof (prove)\nusing this:\n  A \\<subseteq> U\\<^sub>2\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  ?n \\<in> A \\<Longrightarrow>\n  \\<exists>m\\<in>{}. f ?n \\<le>\\<^sub>o\\<^sub>w g m\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` {})", "by (force simp: subset_iff)"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "case False"], ["proof (state)\nthis:\n  U\\<^sub>3 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "from ne_U\\<^sub>2 False assms"], ["proof (chain)\npicking this:\n  U\\<^sub>2 \\<noteq> {}\n  U\\<^sub>3 \\<noteq> {}\n  A \\<subseteq> U\\<^sub>2\n  B \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\n  ?n \\<in> A \\<Longrightarrow>\n  \\<exists>m\\<in>B. f ?n \\<le>\\<^sub>o\\<^sub>w g m", "show ?thesis"], ["proof (prove)\nusing this:\n  U\\<^sub>2 \\<noteq> {}\n  U\\<^sub>3 \\<noteq> {}\n  A \\<subseteq> U\\<^sub>2\n  B \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>3. g x \\<in> U\n  ?n \\<in> A \\<Longrightarrow>\n  \\<exists>m\\<in>B. f ?n \\<le>\\<^sub>o\\<^sub>w g m\n\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)", "by (rule ne_SUP_mono)"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Squnion>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Squnion>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma INF_mono:\n  assumes \"B \\<subseteq> U\\<^sub>2\" \n    and \"A \\<subseteq> U\\<^sub>3\" \n    and \"\\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\" \n    and \"\\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\"\n    and \"\\<And>m. m \\<in> B \\<Longrightarrow> \\<exists>n\\<in>A. f n \\<le>\\<^sub>o\\<^sub>w g m\" \n  shows \"\\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "proof(cases \\<open>U\\<^sub>2 = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>2 = {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n 2. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "case True"], ["proof (state)\nthis:\n  U\\<^sub>2 = {}\n\ngoal (2 subgoals):\n 1. U\\<^sub>2 = {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n 2. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "from assms(1)"], ["proof (chain)\npicking this:\n  B \\<subseteq> U\\<^sub>2", "have \"B = {}\""], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>2\n\ngoal (1 subgoal):\n 1. B = {}", "unfolding True"], ["proof (prove)\nusing this:\n  B \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. B = {}", "by simp"], ["proof (state)\nthis:\n  B = {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "have \"g ` B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` B = {}", "unfolding \\<open>B = {}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` {} = {}", "by simp"], ["proof (state)\nthis:\n  g ` B = {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "from assms(2,3)"], ["proof (chain)\npicking this:\n  A \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. f x \\<in> U", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "unfolding \\<open>g ` B = {}\\<close>"], ["proof (prove)\nusing this:\n  A \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w {}", "by (simp add: image_subset_iff in_mono)"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "case ne_U\\<^sub>2: False"], ["proof (state)\nthis:\n  U\\<^sub>2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U\\<^sub>2 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "proof(cases \\<open>U\\<^sub>3 = {}\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>3 = {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n 2. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "case True"], ["proof (state)\nthis:\n  U\\<^sub>3 = {}\n\ngoal (2 subgoals):\n 1. U\\<^sub>3 = {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n 2. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "from assms(2)"], ["proof (chain)\npicking this:\n  A \\<subseteq> U\\<^sub>3", "have \"A = {}\""], ["proof (prove)\nusing this:\n  A \\<subseteq> U\\<^sub>3\n\ngoal (1 subgoal):\n 1. A = {}", "unfolding True"], ["proof (prove)\nusing this:\n  A \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. A = {}", "by simp"], ["proof (state)\nthis:\n  A = {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "have \"f ` A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = {}", "unfolding \\<open>A = {}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {} = {}", "by simp"], ["proof (state)\nthis:\n  f ` A = {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "from assms"], ["proof (chain)\npicking this:\n  B \\<subseteq> U\\<^sub>2\n  A \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\n  ?m \\<in> B \\<Longrightarrow>\n  \\<exists>n\\<in>A. f n \\<le>\\<^sub>o\\<^sub>w g ?m", "show ?thesis"], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>2\n  A \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\n  ?m \\<in> B \\<Longrightarrow>\n  \\<exists>n\\<in>A. f n \\<le>\\<^sub>o\\<^sub>w g ?m\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "unfolding \\<open>f ` A = {}\\<close> \\<open>A = {}\\<close>"], ["proof (prove)\nusing this:\n  B \\<subseteq> U\\<^sub>2\n  {} \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\n  ?m \\<in> B \\<Longrightarrow>\n  \\<exists>n\\<in>{}. f n \\<le>\\<^sub>o\\<^sub>w g ?m\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` {}) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "by (auto simp: subset_iff) fastforce"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "case False"], ["proof (state)\nthis:\n  U\\<^sub>3 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U\\<^sub>3 \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "from ne_U\\<^sub>2 False assms"], ["proof (chain)\npicking this:\n  U\\<^sub>2 \\<noteq> {}\n  U\\<^sub>3 \\<noteq> {}\n  B \\<subseteq> U\\<^sub>2\n  A \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\n  ?m \\<in> B \\<Longrightarrow>\n  \\<exists>n\\<in>A. f n \\<le>\\<^sub>o\\<^sub>w g ?m", "show ?thesis"], ["proof (prove)\nusing this:\n  U\\<^sub>2 \\<noteq> {}\n  U\\<^sub>3 \\<noteq> {}\n  B \\<subseteq> U\\<^sub>2\n  A \\<subseteq> U\\<^sub>3\n  \\<forall>x\\<in>U\\<^sub>3. f x \\<in> U\n  \\<forall>x\\<in>U\\<^sub>2. g x \\<in> U\n  ?m \\<in> B \\<Longrightarrow>\n  \\<exists>n\\<in>A. f n \\<le>\\<^sub>o\\<^sub>w g ?m\n\ngoal (1 subgoal):\n 1. \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n    \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)", "by (rule ne_INF_mono)"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter>\\<^sub>o\\<^sub>w (f ` A) \\<le>\\<^sub>o\\<^sub>w\n  \\<Sqinter>\\<^sub>o\\<^sub>w (g ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context complete_lattice_pair_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U\\<^sub>1) and (?'b to U\\<^sub>2) \n  rewriting ctr_simps\n  substituting cl\\<^sub>1.complete_lattice_ow_axioms\n    and cl\\<^sub>2.complete_lattice_ow_axioms\n    and cl\\<^sub>1.inf_top.sl_neut.not_empty\n    and cl\\<^sub>2.inf_top.sl_neut.not_empty\n  applying \n    [\n      OF \n        cl\\<^sub>1.Inf_closed' \n        cl\\<^sub>1.Sup_closed' \n        cl\\<^sub>1.inf_closed'   \n        cl\\<^sub>1.sup_closed'\n        cl\\<^sub>1.bot_closed\n        cl\\<^sub>1.top_closed\n        cl\\<^sub>2.Inf_closed' \n        cl\\<^sub>2.Sup_closed' \n        cl\\<^sub>2.inf_closed'   \n        cl\\<^sub>2.sup_closed'\n        cl\\<^sub>2.bot_closed\n        cl\\<^sub>2.top_closed\n    ]\nbegin"], ["", "tts_lemma mono_Inf:\n  assumes \"\\<forall>x\\<in>U\\<^sub>1. f x \\<in> U\\<^sub>2\"\n    and \"A \\<subseteq> U\\<^sub>1\"\n    and \"on U\\<^sub>1 with (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) : \\<guillemotleft>mono\\<guillemotright> f\"\n  shows \"f (\\<Sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1 A) \\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 \\<Sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 (f ` A)\"\n    is complete_lattice_class.mono_Inf"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma mono_Sup:\n  assumes \"\\<forall>x\\<in>U\\<^sub>1. f x \\<in> U\\<^sub>2\"\n    and \"A \\<subseteq> U\\<^sub>1\"\n    and \"on U\\<^sub>1 with (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) : \\<guillemotleft>mono\\<guillemotright> f\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 (f ` A) \\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 f (\\<Squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1 A)\"\n    is complete_lattice_class.mono_Sup"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "context \n  fixes U\\<^sub>3 :: \"'c set\"\nbegin"], ["", "lemmas [transfer_rule] =\n  image_transfer[where ?'a='c]"], ["", "tts_context\n  tts: (?'a to U\\<^sub>1) and (?'b to U\\<^sub>2) and (?'c to \\<open>U\\<^sub>3::'c set\\<close>) \n  rewriting ctr_simps\n  substituting cl\\<^sub>1.complete_lattice_ow_axioms\n    and cl\\<^sub>2.complete_lattice_ow_axioms\n    and cl\\<^sub>1.inf_top.sl_neut.not_empty\n    and cl\\<^sub>2.inf_top.sl_neut.not_empty\n  eliminating through (simp add: image_subset_iff image_subset_iff')\n  applying \n    [\n      OF \n        _\n        cl\\<^sub>1.Inf_closed' \n        cl\\<^sub>1.Sup_closed' \n        cl\\<^sub>1.inf_closed'   \n        cl\\<^sub>1.sup_closed'\n        cl\\<^sub>1.bot_closed\n        cl\\<^sub>1.top_closed\n        cl\\<^sub>2.Inf_closed' \n        cl\\<^sub>2.Sup_closed' \n        cl\\<^sub>2.inf_closed'   \n        cl\\<^sub>2.sup_closed'\n        cl\\<^sub>2.bot_closed\n        cl\\<^sub>2.top_closed\n    ]\nbegin"], ["", "tts_lemma mono_SUP:\n  assumes \"U\\<^sub>3 \\<noteq> {}\"\n    and \"\\<forall>x\\<in>U\\<^sub>1. f x \\<in> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>3. A x \\<in> U\\<^sub>1\"\n    and \"I \\<subseteq> U\\<^sub>3\"\n    and \"on U\\<^sub>1 with (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) : \\<guillemotleft>mono\\<guillemotright> f\"\n  shows \"\\<Squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 ((\\<lambda>x. f (A x)) ` I) \\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 f (\\<Squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1 (A ` I))\"\n    is complete_lattice_class.mono_SUP"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma mono_INF:\n  assumes \"U\\<^sub>3 \\<noteq> {}\"\n    and \"\\<forall>x\\<in>U\\<^sub>1. f x \\<in> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>3. A x \\<in> U\\<^sub>1\"\n    and \"I \\<subseteq> U\\<^sub>3\"\n    and \"on U\\<^sub>1 with (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) : \\<guillemotleft>mono\\<guillemotright> f\"\n  shows \"f (\\<Sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1 (A ` I)) \\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 \\<Sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 ((\\<lambda>x. f (A x)) ` I)\"\n    is complete_lattice_class.mono_INF"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "end"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}