{"file_name": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension/Examples/TTS_Foundations/Algebra/Set_Semigroups.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension", "problem_names": ["lemma op_closed'[simp]: \"\\<forall>x\\<in>U. \\<forall>y\\<in>U. x \\<oplus>\\<^sub>a y \\<in> U\"", "lemma semigroup_ow[ud_with]: \"semigroup = semigroup_ow UNIV\"", "lemma semigroup_pair_ow[ud_with]: \n  \"semigroup_pair = (\\<lambda>f\\<^sub>a f\\<^sub>b. semigroup_pair_ow UNIV f\\<^sub>a UNIV f\\<^sub>b)\"", "lemma semigroup_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(rel_set A ===> (A ===> A ===> A) ===> (=)) semigroup_ow semigroup_ow\"", "lemma semigroup_pair_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \n    \"bi_unique A\" \"right_total A\" \"bi_unique B\" \"right_total B\"\n  shows \n    \"(\n      rel_set A ===> (A ===> A ===> A) ===>  \n      rel_set B ===> (B ===> B ===> B) ===> \n      (=)\n    ) \n    semigroup_pair_ow semigroup_pair_ow\"", "lemma comm_semigroup_ow[ud_with]: \"comm_semigroup = comm_semigroup_ow UNIV\"", "lemma comm_semigroup_pair_ow[ud_with]: \n  \"comm_semigroup_pair = (\\<lambda>f\\<^sub>a f\\<^sub>b. comm_semigroup_pair_ow UNIV f\\<^sub>a UNIV f\\<^sub>b)\"", "lemma comm_semigroup_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(rel_set A ===> (A ===> A ===> A) ===> (=)) \n      comm_semigroup_ow comm_semigroup_ow\"", "lemma comm_semigroup_pair_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \n    \"bi_unique A\" \"right_total A\" \"bi_unique B\" \"right_total B\"\n  shows \n    \"(\n      rel_set A ===> (A ===> A ===> A) ===>  \n      rel_set B ===> (B ===> B ===> B) ===> \n      (=)\n    ) \n    comm_semigroup_pair_ow comm_semigroup_pair_ow\"", "lemma cancel_semigroup_ow[ud_with]: \n  \"cancel_semigroup = cancel_semigroup_ow UNIV\"", "lemma cancel_semigroup_pair_ow[ud_with]: \n  \"cancel_semigroup_pair = (\\<lambda>f\\<^sub>a f\\<^sub>b. cancel_semigroup_pair_ow UNIV f\\<^sub>a UNIV f\\<^sub>b)\"", "lemma cancel_semigroup_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(rel_set A ===> (A ===> A ===> A) ===> (=)) \n      cancel_semigroup_ow cancel_semigroup_ow\"", "lemma cancel_semigroup_pair_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \n    \"bi_unique A\" \"right_total A\" \"bi_unique B\" \"right_total B\"\n  shows \n    \"(\n      rel_set A ===> (A ===> A ===> A) ===>  \n      rel_set B ===> (B ===> B ===> B) ===> \n      (=)\n    ) cancel_semigroup_pair_ow cancel_semigroup_pair_ow\"", "lemma cancel_comm_semigroup_ow[ud_with]: \n  \"cancel_comm_semigroup = cancel_comm_semigroup_ow UNIV\"", "lemma cancel_comm_semigroup_pair_ow[ud_with]: \n  \"cancel_comm_semigroup_pair = \n    (\\<lambda>f\\<^sub>a fi\\<^sub>a f\\<^sub>b fi\\<^sub>b. cancel_comm_semigroup_pair_ow UNIV f\\<^sub>a fi\\<^sub>a UNIV f\\<^sub>b fi\\<^sub>b)\"", "lemma cancel_comm_semigroup_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(rel_set A ===> (A ===> A ===> A) ===> (A ===> A ===> A) ===> (=)) \n      cancel_comm_semigroup_ow cancel_comm_semigroup_ow\"", "lemma cancel_comm_semigroup_pair_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \n    \"bi_unique A\" \"right_total A\" \"bi_unique B\" \"right_total B\"\n  shows \n    \"(\n      rel_set A ===> (A ===> A ===> A) ===> (A ===> A ===> A) ===>  \n      rel_set B ===> (B ===> B ===> B) ===> (B ===> B ===> B) ===> \n      (=)\n    ) cancel_comm_semigroup_pair_ow cancel_comm_semigroup_pair_ow\""], "translations": [["", "lemma op_closed'[simp]: \"\\<forall>x\\<in>U. \\<forall>y\\<in>U. x \\<oplus>\\<^sub>a y \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>U. \\<forall>y\\<in>U. x \\<oplus>\\<^sub>a y \\<in> U", "by (simp add: op_closed)"], ["", "tts_register_sbts \\<open>(\\<oplus>\\<^sub>a)\\<close> | U"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Domainp AB = (\\<lambda>x. x \\<in> U); bi_unique AB;\n     right_total AB\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rcdt.\n                         rel_fun AB (rel_fun AB AB) (\\<oplus>\\<^sub>a) rcdt", "by (rule tts_AA_A_transfer[OF op_closed])"], ["", "end"], ["", "subsection\\<open>Simple semigroups\\<close>"], ["", "subsubsection\\<open>Definitions\\<close>"], ["", "text\\<open>Abstract semigroup.\\<close>"], ["", "locale semigroup_ow = binary_op_ow U f for U :: \"'a set\" and f +\n  assumes assoc[tts_ac_simps]: \n    \"\\<lbrakk> a \\<in> U; b \\<in> U; c \\<in> U \\<rbrakk> \\<Longrightarrow> f (f a b) c = f a (f b c)\""], ["", "locale semigroup_syntax_ow = binary_op_syntax_ow U f for U :: \"'a set\" and f"], ["", "text\\<open>Concrete syntax.\\<close>"], ["", "locale semigroup_add_ow = semigroup_ow U plus for U :: \"'a set\" and plus\nbegin"], ["", "sublocale plus_ow U plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. plus_ow U plus", ".."], ["", "end"], ["", "locale semigroup_mult_ow = semigroup_ow U times for U :: \"'a set\" and times\nbegin"], ["", "sublocale times_ow U times"], ["proof (prove)\ngoal (1 subgoal):\n 1. times_ow U times", ".."], ["", "end"], ["", "text\\<open>Pairs.\\<close>"], ["", "locale semigroup_pair_ow = alg\\<^sub>a: semigroup_ow U\\<^sub>a f\\<^sub>a + alg\\<^sub>b: semigroup_ow U\\<^sub>b f\\<^sub>b \n  for U\\<^sub>a :: \"'a set\" and f\\<^sub>a and U\\<^sub>b :: \"'b set\" and f\\<^sub>b\nbegin"], ["", "sublocale binary_op_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b"], ["proof (prove)\ngoal (1 subgoal):\n 1. binary_op_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b", ".."], ["", "sublocale rev: semigroup_pair_ow U\\<^sub>b f\\<^sub>b U\\<^sub>a f\\<^sub>a"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup_pair_ow U\\<^sub>b f\\<^sub>b U\\<^sub>a f\\<^sub>a", ".."], ["", "end"], ["", "locale semigroup_pair_syntax_ow = binary_op_pair_syntax_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b\n  for U\\<^sub>a :: \"'a set\" and f\\<^sub>a and U\\<^sub>b :: \"'b set\" and f\\<^sub>b"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "lemma semigroup_ow[ud_with]: \"semigroup = semigroup_ow UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Type_Semigroups.semigroup = semigroup_ow UNIV", "unfolding \n    semigroup_def semigroup_ow_def semigroup_ow_axioms_def binary_op_ow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f. \\<forall>a b c. f (f a b) c = f a (f b c)) =\n    (\\<lambda>f.\n        (\\<forall>x y.\n            x \\<in> UNIV \\<longrightarrow>\n            y \\<in> UNIV \\<longrightarrow> f x y \\<in> UNIV) \\<and>\n        (\\<forall>a b c.\n            a \\<in> UNIV \\<longrightarrow>\n            b \\<in> UNIV \\<longrightarrow>\n            c \\<in> UNIV \\<longrightarrow> f (f a b) c = f a (f b c)))", "by simp"], ["", "lemma semigroup_pair_ow[ud_with]: \n  \"semigroup_pair = (\\<lambda>f\\<^sub>a f\\<^sub>b. semigroup_pair_ow UNIV f\\<^sub>a UNIV f\\<^sub>b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup_pair =\n    (\\<lambda>f\\<^sub>a. semigroup_pair_ow UNIV f\\<^sub>a UNIV)", "unfolding semigroup_pair_def semigroup_pair_ow_def ud_with"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f\\<^sub>a f\\<^sub>b.\n        semigroup_ow UNIV f\\<^sub>a \\<and> semigroup_ow UNIV f\\<^sub>b) =\n    (\\<lambda>f\\<^sub>a f\\<^sub>b.\n        semigroup_ow UNIV f\\<^sub>a \\<and> semigroup_ow UNIV f\\<^sub>b)", "by simp"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma semigroup_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(rel_set A ===> (A ===> A ===> A) ===> (=)) semigroup_ow semigroup_ow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set A ===> (A ===> A ===> A) ===> (=)) semigroup_ow semigroup_ow", "by \n    (\n      ow_locale_transfer locale_defs: \n        semigroup_ow_def semigroup_ow_axioms_def binary_op_ow_def\n    )"], ["", "lemma semigroup_pair_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \n    \"bi_unique A\" \"right_total A\" \"bi_unique B\" \"right_total B\"\n  shows \n    \"(\n      rel_set A ===> (A ===> A ===> A) ===>  \n      rel_set B ===> (B ===> B ===> B) ===> \n      (=)\n    ) \n    semigroup_pair_ow semigroup_pair_ow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set A ===>\n     (A ===> A ===> A) ===> rel_set B ===> (B ===> B ===> B) ===> (=))\n     semigroup_pair_ow semigroup_pair_ow", "by (ow_locale_transfer locale_defs: semigroup_pair_ow_def)"], ["", "end"], ["", "subsection\\<open>Commutative semigroups\\<close>"], ["", "subsubsection\\<open>Definitions\\<close>"], ["", "text\\<open>Abstract commutative semigroup.\\<close>"], ["", "locale comm_semigroup_ow = semigroup_ow U f for U :: \"'a set\" and f +\n  assumes commute[tts_ac_simps]: \"a \\<in> U \\<Longrightarrow> b \\<in> U \\<Longrightarrow> f a b = f b a\""], ["", "locale comm_semigroup_syntax_ow = semigroup_syntax_ow U f \n  for U :: \"'a set\" and f"], ["", "text\\<open>Concrete syntax.\\<close>"], ["", "locale comm_semigroup_add_ow = comm_semigroup_ow U plus \n  for U :: \"'a set\" and plus\nbegin"], ["", "sublocale semigroup_add_ow U plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup_add_ow U plus", ".."], ["", "end"], ["", "locale comm_semigroup_mult_ow = comm_semigroup_ow U times \n  for U :: \"'a set\" and times\nbegin"], ["", "sublocale semigroup_mult_ow U times"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup_mult_ow U times", ".."], ["", "end"], ["", "text\\<open>Pairs.\\<close>"], ["", "locale comm_semigroup_pair_ow = \n  alg\\<^sub>a: comm_semigroup_ow U\\<^sub>a f\\<^sub>a + alg\\<^sub>b: comm_semigroup_ow U\\<^sub>b f\\<^sub>b  \n  for U\\<^sub>a :: \"'a set\" and f\\<^sub>a and U\\<^sub>b :: \"'b set\" and f\\<^sub>b\nbegin"], ["", "sublocale semigroup_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b", ".."], ["", "sublocale rev: comm_semigroup_pair_ow U\\<^sub>b f\\<^sub>b U\\<^sub>a f\\<^sub>a"], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_semigroup_pair_ow U\\<^sub>b f\\<^sub>b U\\<^sub>a f\\<^sub>a", ".."], ["", "end"], ["", "locale comm_semigroup_pair_syntax_ow = semigroup_pair_syntax_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b\n  for U\\<^sub>a :: \"'a set\" and f\\<^sub>a and U\\<^sub>b :: \"'b set\" and f\\<^sub>b"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "lemma comm_semigroup_ow[ud_with]: \"comm_semigroup = comm_semigroup_ow UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_semigroup = comm_semigroup_ow UNIV", "unfolding \n    comm_semigroup_def comm_semigroup_axioms_def\n    comm_semigroup_ow_def comm_semigroup_ow_axioms_def \n    ud_with"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f. semigroup_ow UNIV f \\<and> (\\<forall>a b. f a b = f b a)) =\n    (\\<lambda>f.\n        semigroup_ow UNIV f \\<and>\n        (\\<forall>a b.\n            a \\<in> UNIV \\<longrightarrow>\n            b \\<in> UNIV \\<longrightarrow> f a b = f b a))", "by simp"], ["", "lemma comm_semigroup_pair_ow[ud_with]: \n  \"comm_semigroup_pair = (\\<lambda>f\\<^sub>a f\\<^sub>b. comm_semigroup_pair_ow UNIV f\\<^sub>a UNIV f\\<^sub>b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_semigroup_pair =\n    (\\<lambda>f\\<^sub>a. comm_semigroup_pair_ow UNIV f\\<^sub>a UNIV)", "unfolding comm_semigroup_pair_def comm_semigroup_pair_ow_def ud_with"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f\\<^sub>a f\\<^sub>b.\n        comm_semigroup_ow UNIV f\\<^sub>a \\<and>\n        comm_semigroup_ow UNIV f\\<^sub>b) =\n    (\\<lambda>f\\<^sub>a f\\<^sub>b.\n        comm_semigroup_ow UNIV f\\<^sub>a \\<and>\n        comm_semigroup_ow UNIV f\\<^sub>b)", "by simp"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma comm_semigroup_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(rel_set A ===> (A ===> A ===> A) ===> (=)) \n      comm_semigroup_ow comm_semigroup_ow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set A ===> (A ===> A ===> A) ===> (=)) comm_semigroup_ow\n     comm_semigroup_ow", "by \n    (\n      ow_locale_transfer locale_defs: \n        comm_semigroup_ow_def comm_semigroup_ow_axioms_def\n    )"], ["", "lemma comm_semigroup_pair_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \n    \"bi_unique A\" \"right_total A\" \"bi_unique B\" \"right_total B\"\n  shows \n    \"(\n      rel_set A ===> (A ===> A ===> A) ===>  \n      rel_set B ===> (B ===> B ===> B) ===> \n      (=)\n    ) \n    comm_semigroup_pair_ow comm_semigroup_pair_ow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set A ===>\n     (A ===> A ===> A) ===> rel_set B ===> (B ===> B ===> B) ===> (=))\n     comm_semigroup_pair_ow comm_semigroup_pair_ow", "by (ow_locale_transfer locale_defs: comm_semigroup_pair_ow_def)"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context comm_semigroup_ow\nbegin"], ["", "interpretation comm_semigroup_syntax_ow"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_context\n  tts: (?'a to U)\n  substituting comm_semigroup_ow_axioms\n  eliminating through auto\nbegin"], ["", "tts_lemma left_commute:\n  assumes \"b \\<in> U\"\n    and \"a \\<in> U\"\n    and \"c \\<in> U\"\n  shows \"b \\<oplus>\\<^sub>a (a \\<oplus>\\<^sub>a c) = a \\<oplus>\\<^sub>a (b \\<oplus>\\<^sub>a c)\"\n    is comm_semigroup.left_commute"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "subsection\\<open>Cancellative semigroups\\<close>"], ["", "subsubsection\\<open>Definitions\\<close>"], ["", "text\\<open>Abstract cancellative semigroup.\\<close>"], ["", "locale cancel_semigroup_ow = semigroup_ow U f for U :: \"'a set\" and f +\n  assumes add_left_imp_eq: \n    \"\\<lbrakk> a \\<in> U; b \\<in> U; c \\<in> U; f a b = f a c \\<rbrakk> \\<Longrightarrow> b = c\"\n  assumes add_right_imp_eq: \n    \"\\<lbrakk> b \\<in> U; a \\<in> U; c \\<in> U; f b a = f c a \\<rbrakk> \\<Longrightarrow> b = c\""], ["", "locale cancel_semigroup_syntax_ow = semigroup_syntax_ow U f \n  for U :: \"'a set\" and f"], ["", "text\\<open>Concrete syntax.\\<close>"], ["", "locale cancel_semigroup_add_ow = cancel_semigroup_ow U plus \n  for U :: \"'a set\" and plus\nbegin"], ["", "sublocale semigroup_add_ow U plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup_add_ow U plus", ".."], ["", "end"], ["", "locale cancel_semigroup_mult_ow = cancel_semigroup_ow U times \n  for U :: \"'a set\" and times\nbegin"], ["", "sublocale semigroup_mult_ow U times"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup_mult_ow U times", ".."], ["", "end"], ["", "text\\<open>Pairs.\\<close>"], ["", "locale cancel_semigroup_pair_ow = \n  alg\\<^sub>a: cancel_semigroup_ow U\\<^sub>a f\\<^sub>a + alg\\<^sub>b: cancel_semigroup_ow U\\<^sub>b f\\<^sub>b \n  for U\\<^sub>a :: \"'a set\" and f\\<^sub>a and U\\<^sub>b :: \"'b set\" and f\\<^sub>b\nbegin"], ["", "sublocale semigroup_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b", ".."], ["", "sublocale rev: cancel_semigroup_pair_ow U\\<^sub>b f\\<^sub>b U\\<^sub>a f\\<^sub>a"], ["proof (prove)\ngoal (1 subgoal):\n 1. cancel_semigroup_pair_ow U\\<^sub>b f\\<^sub>b U\\<^sub>a f\\<^sub>a", ".."], ["", "end"], ["", "locale cancel_semigroup_pair_syntax_ow = semigroup_pair_syntax_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b\n  for U\\<^sub>a :: \"'a set\" and f\\<^sub>a and U\\<^sub>b :: \"'b set\" and f\\<^sub>b"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "lemma cancel_semigroup_ow[ud_with]: \n  \"cancel_semigroup = cancel_semigroup_ow UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cancel_semigroup = cancel_semigroup_ow UNIV", "unfolding \n    cancel_semigroup_def cancel_semigroup_axioms_def\n    cancel_semigroup_ow_def cancel_semigroup_ow_axioms_def \n    ud_with"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f.\n        semigroup_ow UNIV f \\<and>\n        (\\<forall>a b c. f a b = f a c \\<longrightarrow> b = c) \\<and>\n        (\\<forall>b a c. f b a = f c a \\<longrightarrow> b = c)) =\n    (\\<lambda>f.\n        semigroup_ow UNIV f \\<and>\n        (\\<forall>a b c.\n            a \\<in> UNIV \\<longrightarrow>\n            b \\<in> UNIV \\<longrightarrow>\n            c \\<in> UNIV \\<longrightarrow>\n            f a b = f a c \\<longrightarrow> b = c) \\<and>\n        (\\<forall>b a c.\n            b \\<in> UNIV \\<longrightarrow>\n            a \\<in> UNIV \\<longrightarrow>\n            c \\<in> UNIV \\<longrightarrow>\n            f b a = f c a \\<longrightarrow> b = c))", "by simp"], ["", "lemma cancel_semigroup_pair_ow[ud_with]: \n  \"cancel_semigroup_pair = (\\<lambda>f\\<^sub>a f\\<^sub>b. cancel_semigroup_pair_ow UNIV f\\<^sub>a UNIV f\\<^sub>b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cancel_semigroup_pair =\n    (\\<lambda>f\\<^sub>a. cancel_semigroup_pair_ow UNIV f\\<^sub>a UNIV)", "unfolding cancel_semigroup_pair_def cancel_semigroup_pair_ow_def ud_with"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f\\<^sub>a f\\<^sub>b.\n        cancel_semigroup_ow UNIV f\\<^sub>a \\<and>\n        cancel_semigroup_ow UNIV f\\<^sub>b) =\n    (\\<lambda>f\\<^sub>a f\\<^sub>b.\n        cancel_semigroup_ow UNIV f\\<^sub>a \\<and>\n        cancel_semigroup_ow UNIV f\\<^sub>b)", "by simp"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma cancel_semigroup_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(rel_set A ===> (A ===> A ===> A) ===> (=)) \n      cancel_semigroup_ow cancel_semigroup_ow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set A ===> (A ===> A ===> A) ===> (=)) cancel_semigroup_ow\n     cancel_semigroup_ow", "by \n    (\n      ow_locale_transfer locale_defs: \n        cancel_semigroup_ow_def cancel_semigroup_ow_axioms_def\n    )"], ["", "lemma cancel_semigroup_pair_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \n    \"bi_unique A\" \"right_total A\" \"bi_unique B\" \"right_total B\"\n  shows \n    \"(\n      rel_set A ===> (A ===> A ===> A) ===>  \n      rel_set B ===> (B ===> B ===> B) ===> \n      (=)\n    ) cancel_semigroup_pair_ow cancel_semigroup_pair_ow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set A ===>\n     (A ===> A ===> A) ===> rel_set B ===> (B ===> B ===> B) ===> (=))\n     cancel_semigroup_pair_ow cancel_semigroup_pair_ow", "by (ow_locale_transfer locale_defs: cancel_semigroup_pair_ow_def)"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context cancel_semigroup_ow\nbegin"], ["", "interpretation cancel_semigroup_syntax_ow"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting cancel_semigroup_ow_axioms\n  eliminating through auto\nbegin"], ["", "tts_lemma add_right_cancel:\n  assumes \"b \\<in> U\" and \"a \\<in> U\" and \"c \\<in> U\"\n  shows \"(b \\<oplus>\\<^sub>a a = c \\<oplus>\\<^sub>a a) = (b = c)\"\n    is cancel_semigroup.add_right_cancel"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma add_left_cancel:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\"\n  shows \"(a \\<oplus>\\<^sub>a b = a \\<oplus>\\<^sub>a c) = (b = c)\"\n    is cancel_semigroup.add_left_cancel"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma inj_on_add':\n  assumes \"a \\<in> U\" and \"A \\<subseteq> U\"\n  shows \"inj_on (\\<lambda>b. b \\<oplus>\\<^sub>a a) A\"\n    is cancel_semigroup.inj_on_add'"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma inj_on_add:\n  assumes \"a \\<in> U\" and \"A \\<subseteq> U\"\n  shows \"inj_on ((\\<oplus>\\<^sub>a) a) A\"\n    is cancel_semigroup.inj_on_add"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bij_betw_add:\n  assumes \"a \\<in> U\" and \"A \\<subseteq> U\" and \"B \\<subseteq> U\"\n  shows \"bij_betw ((\\<oplus>\\<^sub>a) a) A B = ((\\<oplus>\\<^sub>a) a ` A = B)\"\n    is cancel_semigroup.bij_betw_add"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "subsection\\<open>Cancellative commutative semigroups\\<close>"], ["", "subsubsection\\<open>Definitions\\<close>"], ["", "text\\<open>Abstract cancellative commutative semigroups.\\<close>"], ["", "locale cancel_comm_semigroup_ow = comm_semigroup_ow U f + binary_op_ow U fi \n  for U :: \"'a set\" and f fi +\n  assumes add_diff_cancel_left'[simp]: \"\\<lbrakk> a \\<in> U; b \\<in> U \\<rbrakk> \\<Longrightarrow> fi (f a b) a = b\"\n    and diff_diff_add[tts_algebra_simps, tts_field_simps]: \n    \"\\<lbrakk> a \\<in> U; b \\<in> U; c \\<in> U \\<rbrakk> \\<Longrightarrow> fi (fi a b) c = fi a (f b c)\""], ["", "locale cancel_comm_semigroup_syntax_ow = \n  comm_semigroup_syntax_ow U f + binary_op_base_ow U fi \n  for U :: \"'a set\" and f fi \nbegin"], ["", "notation fi (infixl \\<open>\\<ominus>\\<^sub>a\\<close> 65)"], ["", "end"], ["", "text\\<open>Concrete syntax.\\<close>"], ["", "locale cancel_comm_semigroup_add_ow = cancel_comm_semigroup_ow U plus minus \n  for U :: \"'a set\" and plus minus\nbegin"], ["", "sublocale comm_semigroup_add_ow U plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_semigroup_add_ow U plus", ".."], ["", "sublocale minus_ow U minus"], ["proof (prove)\ngoal (1 subgoal):\n 1. minus_ow U minus", ".."], ["", "end"], ["", "locale cancel_comm_semigroup_mult = cancel_comm_semigroup_ow U times divide \n  for U :: \"'a set\" and times divide\nbegin"], ["", "sublocale comm_semigroup_mult_ow U times"], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_semigroup_mult_ow U times", ".."], ["", "sublocale divide_ow U divide"], ["proof (prove)\ngoal (1 subgoal):\n 1. divide_ow U divide", ".."], ["", "end"], ["", "text\\<open>Pairs.\\<close>"], ["", "locale cancel_comm_semigroup_pair_ow = \n  alg\\<^sub>a: cancel_comm_semigroup_ow U\\<^sub>a f\\<^sub>a fi\\<^sub>a + \n  alg\\<^sub>b: cancel_comm_semigroup_ow U\\<^sub>b f\\<^sub>b fi\\<^sub>b\n  for U\\<^sub>a :: \"'a set\" and f\\<^sub>a fi\\<^sub>a and U\\<^sub>b :: \"'b set\" and f\\<^sub>b fi\\<^sub>b\nbegin"], ["", "sublocale comm_semigroup_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b"], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_semigroup_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b", ".."], ["", "sublocale rev: cancel_comm_semigroup_pair_ow U\\<^sub>b f\\<^sub>b fi\\<^sub>b U\\<^sub>a f\\<^sub>a fi\\<^sub>a"], ["proof (prove)\ngoal (1 subgoal):\n 1. cancel_comm_semigroup_pair_ow U\\<^sub>b f\\<^sub>b fi\\<^sub>b U\\<^sub>a\n     f\\<^sub>a fi\\<^sub>a", ".."], ["", "end"], ["", "locale cancel_comm_semigroup_pair_syntax_ow = \n  comm_semigroup_pair_syntax_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b + \n  binary_op_ow U\\<^sub>a fi\\<^sub>a + \n  binary_op_ow U\\<^sub>b fi\\<^sub>b\n  for U\\<^sub>a :: \"'a set\" and f\\<^sub>a fi\\<^sub>a and U\\<^sub>b :: \"'b set\" and f\\<^sub>b fi\\<^sub>b\nbegin"], ["", "notation fi\\<^sub>a (infixl \\<open>\\<ominus>\\<^sub>a\\<close> 65)"], ["", "notation fi\\<^sub>b (infixl \\<open>\\<ominus>\\<^sub>b\\<close> 65)"], ["", "end"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "lemma cancel_comm_semigroup_ow[ud_with]: \n  \"cancel_comm_semigroup = cancel_comm_semigroup_ow UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cancel_comm_semigroup = cancel_comm_semigroup_ow UNIV", "unfolding \n    cancel_comm_semigroup_def cancel_comm_semigroup_axioms_def\n    cancel_comm_semigroup_ow_def cancel_comm_semigroup_ow_axioms_def \n    binary_op_ow_def\n    ud_with"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f fi.\n        comm_semigroup_ow UNIV f \\<and>\n        (\\<forall>a b. fi (f a b) a = b) \\<and>\n        (\\<forall>a b c. fi (fi a b) c = fi a (f b c))) =\n    (\\<lambda>f fi.\n        comm_semigroup_ow UNIV f \\<and>\n        (\\<forall>x y.\n            x \\<in> UNIV \\<longrightarrow>\n            y \\<in> UNIV \\<longrightarrow> fi x y \\<in> UNIV) \\<and>\n        (\\<forall>a b.\n            a \\<in> UNIV \\<longrightarrow>\n            b \\<in> UNIV \\<longrightarrow> fi (f a b) a = b) \\<and>\n        (\\<forall>a b c.\n            a \\<in> UNIV \\<longrightarrow>\n            b \\<in> UNIV \\<longrightarrow>\n            c \\<in> UNIV \\<longrightarrow> fi (fi a b) c = fi a (f b c)))", "by simp"], ["", "lemma cancel_comm_semigroup_pair_ow[ud_with]: \n  \"cancel_comm_semigroup_pair = \n    (\\<lambda>f\\<^sub>a fi\\<^sub>a f\\<^sub>b fi\\<^sub>b. cancel_comm_semigroup_pair_ow UNIV f\\<^sub>a fi\\<^sub>a UNIV f\\<^sub>b fi\\<^sub>b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cancel_comm_semigroup_pair =\n    (\\<lambda>f\\<^sub>a fi\\<^sub>a.\n        cancel_comm_semigroup_pair_ow UNIV f\\<^sub>a fi\\<^sub>a UNIV)", "unfolding \n    cancel_comm_semigroup_pair_def cancel_comm_semigroup_pair_ow_def ud_with"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f\\<^sub>a fi\\<^sub>a f\\<^sub>b fi\\<^sub>b.\n        cancel_comm_semigroup_ow UNIV f\\<^sub>a fi\\<^sub>a \\<and>\n        cancel_comm_semigroup_ow UNIV f\\<^sub>b fi\\<^sub>b) =\n    (\\<lambda>f\\<^sub>a fi\\<^sub>a f\\<^sub>b fi\\<^sub>b.\n        cancel_comm_semigroup_ow UNIV f\\<^sub>a fi\\<^sub>a \\<and>\n        cancel_comm_semigroup_ow UNIV f\\<^sub>b fi\\<^sub>b)", "by simp"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma cancel_comm_semigroup_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(rel_set A ===> (A ===> A ===> A) ===> (A ===> A ===> A) ===> (=)) \n      cancel_comm_semigroup_ow cancel_comm_semigroup_ow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set A ===> (A ===> A ===> A) ===> (A ===> A ===> A) ===> (=))\n     cancel_comm_semigroup_ow cancel_comm_semigroup_ow", "by \n    (\n      ow_locale_transfer locale_defs: \n        cancel_comm_semigroup_ow_def \n        cancel_comm_semigroup_ow_axioms_def\n        binary_op_ow_def\n    )"], ["", "lemma cancel_comm_semigroup_pair_ow_transfer[transfer_rule]:\n  assumes [transfer_rule]: \n    \"bi_unique A\" \"right_total A\" \"bi_unique B\" \"right_total B\"\n  shows \n    \"(\n      rel_set A ===> (A ===> A ===> A) ===> (A ===> A ===> A) ===>  \n      rel_set B ===> (B ===> B ===> B) ===> (B ===> B ===> B) ===> \n      (=)\n    ) cancel_comm_semigroup_pair_ow cancel_comm_semigroup_pair_ow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set A ===>\n     (A ===> A ===> A) ===>\n     (A ===> A ===> A) ===>\n     rel_set B ===> (B ===> B ===> B) ===> (B ===> B ===> B) ===> (=))\n     cancel_comm_semigroup_pair_ow cancel_comm_semigroup_pair_ow", "by (ow_locale_transfer locale_defs: cancel_comm_semigroup_pair_ow_def)"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context cancel_comm_semigroup_ow\nbegin"], ["", "interpretation cancel_comm_semigroup_syntax_ow"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_context\n  tts: (?'a to U)\n  sbterms: (\\<open>?f::?'a \\<Rightarrow> ?'a \\<Rightarrow> ?'a\\<close> to f)\n    and (\\<open>?fi::?'a \\<Rightarrow> ?'a \\<Rightarrow> ?'a\\<close> to fi)\n  rewriting ctr_simps\n  substituting cancel_comm_semigroup_ow_axioms\n  eliminating through auto\nbegin"], ["", "tts_lemma add_diff_cancel_right':\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"a \\<oplus>\\<^sub>a b \\<ominus>\\<^sub>a b = a\"\n    is cancel_comm_semigroup.add_diff_cancel_right'"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma add_diff_cancel_right:\n  assumes \"a \\<in> U\" and \"c \\<in> U\" and \"b \\<in> U\"\n  shows \"a \\<oplus>\\<^sub>a c \\<ominus>\\<^sub>a b \\<oplus>\\<^sub>a c = a \\<ominus>\\<^sub>a b\"\n    is cancel_comm_semigroup.add_diff_cancel_right"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma add_diff_cancel_left:\n  assumes \"c \\<in> U\" and \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"c \\<oplus>\\<^sub>a a \\<ominus>\\<^sub>a c \\<oplus>\\<^sub>a b = a \\<ominus>\\<^sub>a b\"\n    is cancel_comm_semigroup.add_diff_cancel_left"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma diff_right_commute:\n  assumes \"a \\<in> U\" and \"c \\<in> U\" and \"b \\<in> U\"\n  shows \"a \\<ominus>\\<^sub>a c \\<ominus>\\<^sub>a b = a \\<ominus>\\<^sub>a b \\<ominus>\\<^sub>a c\"\n    is cancel_comm_semigroup.diff_right_commute"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma cancel_semigroup_axioms:\n  assumes \"U \\<noteq> {}\"\n  shows \"cancel_semigroup_ow U (\\<oplus>\\<^sub>a)\"\n    is cancel_comm_semigroup.cancel_semigroup_axioms"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "sublocale cancel_semigroup_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. cancel_semigroup_ow U (\\<oplus>\\<^sub>a)", "using \n    cancel_semigroup_axioms \n    cancel_semigroup_ow.intro \n    cancel_semigroup_ow_axioms_def \n    semigroup_ow_axioms"], ["proof (prove)\nusing this:\n  U \\<noteq> {} \\<Longrightarrow> cancel_semigroup_ow U (\\<oplus>\\<^sub>a)\n  \\<lbrakk>semigroup_ow ?U ?f; cancel_semigroup_ow_axioms ?U ?f\\<rbrakk>\n  \\<Longrightarrow> cancel_semigroup_ow ?U ?f\n  cancel_semigroup_ow_axioms ?U ?f \\<equiv>\n  (\\<forall>a b c.\n      a \\<in> ?U \\<longrightarrow>\n      b \\<in> ?U \\<longrightarrow>\n      c \\<in> ?U \\<longrightarrow>\n      ?f a b = ?f a c \\<longrightarrow> b = c) \\<and>\n  (\\<forall>b a c.\n      b \\<in> ?U \\<longrightarrow>\n      a \\<in> ?U \\<longrightarrow>\n      c \\<in> ?U \\<longrightarrow> ?f b a = ?f c a \\<longrightarrow> b = c)\n  semigroup_ow U (\\<oplus>\\<^sub>a)\n\ngoal (1 subgoal):\n 1. cancel_semigroup_ow U (\\<oplus>\\<^sub>a)", "by auto"], ["", "end"], ["", "context cancel_comm_semigroup_pair_ow\nbegin"], ["", "sublocale cancel_semigroup_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. cancel_semigroup_pair_ow U\\<^sub>a f\\<^sub>a U\\<^sub>b f\\<^sub>b", ".."], ["", "end"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}