{"file_name": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension/Examples/SML_Relativization/Topology/SML_Topological_Space.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension", "problem_names": ["lemma gto_imp_ss: \"(in_topology_generated_by S on U : \\<guillemotleft>open\\<guillemotright> A) \\<Longrightarrow> A \\<subseteq> U\"", "lemma gt_eq_gto: \"generate_topology = (\\<lambda>S. generate_topology_on S UNIV)\"", "lemma Domainp_fun_rel_eq_subset:\n  fixes A :: \"['a, 'c] \\<Rightarrow> bool\"\n  fixes B :: \"['b, 'd] \\<Rightarrow> bool\"\n  assumes \"bi_unique A\" \"bi_unique B\"\n  shows \n    \"Domainp (A ===> B) = \n      (\\<lambda>f. f ` (Collect (Domainp A)) \\<subseteq> (Collect (Domainp B)))\"", "lemma Ex_rt_bu_transfer[transfer_rule]:\n  fixes A :: \"['a, 'c] \\<Rightarrow> bool\"\n  fixes B :: \"['b, 'd] \\<Rightarrow> bool\"\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \"bi_unique B\"\n  shows \n    \"(((B ===> A) ===> (=)) ===> (=)) \n      (Bex (Collect (\\<lambda>f. f ` (Collect (Domainp B)) \\<subseteq> (Collect (Domainp A))))) \n      Ex\"", "lemma topological_basis_with[ud_with]: \n  \"topological_basis = topological_basis_with open\"", "lemmas vimage_transfer[transfer_rule] = vimage_transfer", "lemma topological_space_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\"\n  shows \n    \"((rel_set A ===> (=)) ===> (=)) \n      (topological_space_ow (Collect (Domainp A))) class.topological_space\"", "lemma generate_topology_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\"\n  shows \n    \"((rel_set (rel_set A)) ===> (rel_set A ===> (=))) \n      (\\<lambda>B. generate_topology_on B (Collect (Domainp A))) generate_topology\"", "lemma topological_basis_with_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((rel_set A ===> (=)) ===> (rel_set (rel_set A)) ===> (=)) \n      (topological_basis_ow (Collect (Domainp A))) topological_basis_with\"", "lemma topological_basis_closed:\n  assumes \"topological_basis_ow U \\<tau> B\"\n  shows \"B \\<subseteq> Pow U\"", "lemma ts_open_eq_ts_open:\n  assumes \"topological_space_ow U \\<tau>'\" and \"\\<And>s. s \\<subseteq> U \\<Longrightarrow> \\<tau>' s = \\<tau> s\"\n  shows \"topological_space_ow U \\<tau>\"", "lemma (in topological_space_ow) topological_basis_closed:\n  assumes \"topological_basis_ow U \\<tau> B\" \n  shows \"B \\<subseteq> Pow U\""], "translations": [["", "lemma gto_imp_ss: \"(in_topology_generated_by S on U : \\<guillemotleft>open\\<guillemotright> A) \\<Longrightarrow> A \\<subseteq> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_topology_generated_by S on U : \\<guillemotleft>open\\<guillemotright> A \\<Longrightarrow>\n    A \\<subseteq> U", "by (induction rule: generate_topology_on.induct) auto"], ["", "lemma gt_eq_gto: \"generate_topology = (\\<lambda>S. generate_topology_on S UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generate_topology = (\\<lambda>S. generate_topology_on S UNIV)", "proof(intro ext iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S x.\n       generate_topology S x \\<Longrightarrow>\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\n 2. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "fix S and x :: \"'a set\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S x.\n       generate_topology S x \\<Longrightarrow>\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\n 2. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "assume \"generate_topology S x\""], ["proof (state)\nthis:\n  generate_topology S x\n\ngoal (2 subgoals):\n 1. \\<And>S x.\n       generate_topology S x \\<Longrightarrow>\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\n 2. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "then"], ["proof (chain)\npicking this:\n  generate_topology S x", "show \"in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\""], ["proof (prove)\nusing this:\n  generate_topology S x\n\ngoal (1 subgoal):\n 1. in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x", "by (induction rule: generate_topology.induct)\n      (simp_all add: UNIV Int UN Basis)"], ["proof (state)\nthis:\n  in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\n\ngoal (1 subgoal):\n 1. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "fix S and x :: \"'a set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "assume gto: \"in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\""], ["proof (state)\nthis:\n  in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\n\ngoal (1 subgoal):\n 1. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "define U where U: \"U = (UNIV::'a set)\""], ["proof (state)\nthis:\n  U = UNIV\n\ngoal (1 subgoal):\n 1. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "from gto"], ["proof (chain)\npicking this:\n  in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x", "have \"generate_topology_on S U x\""], ["proof (prove)\nusing this:\n  in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\n\ngoal (1 subgoal):\n 1. in_topology_generated_by S on U : \\<guillemotleft>open\\<guillemotright> x", "unfolding U"], ["proof (prove)\nusing this:\n  in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x\n\ngoal (1 subgoal):\n 1. in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x", "."], ["proof (state)\nthis:\n  in_topology_generated_by S on U : \\<guillemotleft>open\\<guillemotright> x\n\ngoal (1 subgoal):\n 1. \\<And>S x.\n       in_topology_generated_by S on UNIV : \\<guillemotleft>open\\<guillemotright> x \\<Longrightarrow>\n       generate_topology S x", "from this U"], ["proof (chain)\npicking this:\n  in_topology_generated_by S on U : \\<guillemotleft>open\\<guillemotright> x\n  U = UNIV", "show \"generate_topology S x\""], ["proof (prove)\nusing this:\n  in_topology_generated_by S on U : \\<guillemotleft>open\\<guillemotright> x\n  U = UNIV\n\ngoal (1 subgoal):\n 1. generate_topology S x", "by (induction rule: generate_topology_on.induct)\n      (\n        simp_all add: \n          generate_topology.UNIV \n          generate_topology.Int\n          generate_topology.UN\n          generate_topology.Basis\n      )"], ["proof (state)\nthis:\n  generate_topology S x\n\ngoal:\nNo subgoals!", "qed"], ["", "ud \\<open>topological_space.closed\\<close> (\\<open>(with _ : \\<guillemotleft>closed\\<guillemotright> _)\\<close> [1000, 1000] 10)"], ["", "ud closed' \\<open>closed\\<close>"], ["", "ud \\<open>topological_space.compact\\<close> (\\<open>(with _ : \\<guillemotleft>compact\\<guillemotright> _)\\<close> [1000, 1000] 10)"], ["", "ud compact' \\<open>compact\\<close>"], ["", "ud \\<open>topological_space.connected\\<close> (\\<open>(with _ : \\<guillemotleft>connected\\<guillemotright> _)\\<close> [1000, 1000] 10)"], ["", "ud connected' \\<open>connected\\<close>"], ["", "ud \\<open>topological_space.islimpt\\<close> (\\<open>(with _ : _ \\<guillemotleft>islimpt\\<guillemotright> _)\\<close> [1000, 1000, 1000] 60)"], ["", "ud islimpt' \\<open>topological_space_class.islimpt\\<close>"], ["", "ud \\<open>interior\\<close> (\\<open>(with _ : \\<guillemotleft>interior\\<guillemotright> _)\\<close> [1000, 1000] 10)"], ["", "ud \\<open>closure\\<close> (\\<open>(with _ : \\<guillemotleft>closure\\<guillemotright> _)\\<close> [1000, 1000] 10)"], ["", "ud \\<open>frontier\\<close> (\\<open>(with _ : \\<guillemotleft>frontier\\<guillemotright> _)\\<close> [1000, 1000] 10)"], ["", "ud \\<open>countably_compact\\<close> (\\<open>(with _ : \\<guillemotleft>countably'_compact\\<guillemotright> _)\\<close> [1000, 1000] 10)"], ["", "definition topological_basis_with :: \"['a set \\<Rightarrow> bool, 'a set set] \\<Rightarrow> bool\"\n  (\\<open>(with _ : \\<guillemotleft>topological'_basis\\<guillemotright> _)\\<close> [1000, 1000] 10)\n  where\n  \"(with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B) = \n    (\\<Union>B = UNIV \\<and> (\\<forall>b \\<in> B. \\<tau> b) \\<and> (\\<forall>q. \\<tau> q \\<longrightarrow> (\\<exists>B'\\<subseteq>B. \\<Union>B' = q)))\""], ["", "ctr relativization\n  synthesis ctr_simps\n  assumes [transfer_domain_rule, transfer_rule]: \"Domainp A = (\\<lambda>x. x \\<in> U)\"\n    and [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  trp (?'a A)\n  in closed_ow: closed.with_def \n    (\\<open>(on _ with _ : \\<guillemotleft>closed\\<guillemotright> _)\\<close> [1000, 1000] 10)\n    and compact_ow: compact.with_def\n      (\\<open>(on _ with _ : \\<guillemotleft>compact\\<guillemotright> _)\\<close> [1000, 1000, 1000] 10)\n    and connected_ow: connected.with_def \n      (\\<open>(on _ with _ : \\<guillemotleft>connected\\<guillemotright> _)\\<close> [1000, 1000, 1000] 10)\n    and islimpt_ow: islimpt.with_def \n      (\\<open>(on _ with _ : _ \\<guillemotleft>islimpt\\<guillemotright> _)\\<close> [1000, 1000, 1000, 1000] 10)\n    and interior_ow: interior.with_def\n      (\\<open>(on _ with _ : \\<guillemotleft>interior\\<guillemotright> _)\\<close> [1000, 1000, 1000] 10)\n    and closure_ow: closure.with_def \n      (\\<open>(on _ with _ : \\<guillemotleft>closure\\<guillemotright> _)\\<close> [1000, 1000, 1000] 10)\n    and frontier_ow: frontier.with_def \n      (\\<open>(on _ with _ : \\<guillemotleft>frontier\\<guillemotright> _)\\<close> [1000, 1000, 1000] 10)\n    and countably_compact_ow: countably_compact.with_def\n      (\\<open>(on _ with _ : \\<guillemotleft>countably'_compact\\<guillemotright> _)\\<close> [1000, 1000, 1000] 10)"], ["", "context topological_space_ow\nbegin"], ["", "abbreviation closed where \"closed \\<equiv> closed_ow U \\<tau>\""], ["", "abbreviation compact where \"compact \\<equiv> compact_ow U \\<tau>\""], ["", "abbreviation connected where \"connected \\<equiv> connected_ow U \\<tau>\""], ["", "abbreviation islimpt (infixr \\<open>\\<guillemotleft>islimpt\\<guillemotright>\\<close> 60) \n  where \"x \\<guillemotleft>islimpt\\<guillemotright> S \\<equiv> on U with \\<tau> : x \\<guillemotleft>islimpt\\<guillemotright> S\""], ["", "abbreviation interior where \"interior \\<equiv> interior_ow U \\<tau>\""], ["", "abbreviation closure where \"closure \\<equiv> closure_ow U \\<tau>\""], ["", "abbreviation frontier where \"frontier \\<equiv> frontier_ow U \\<tau>\""], ["", "abbreviation countably_compact \n  where \"countably_compact \\<equiv> countably_compact_ow U \\<tau>\""], ["", "end"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "private"], ["", "lemma Domainp_fun_rel_eq_subset:\n  fixes A :: \"['a, 'c] \\<Rightarrow> bool\"\n  fixes B :: \"['b, 'd] \\<Rightarrow> bool\"\n  assumes \"bi_unique A\" \"bi_unique B\"\n  shows \n    \"Domainp (A ===> B) = \n      (\\<lambda>f. f ` (Collect (Domainp A)) \\<subseteq> (Collect (Domainp B)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp (A ===> B) =\n    (\\<lambda>f. f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B))", "proof(intro ext, standard)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f.\n       Domainp (A ===> B) f \\<Longrightarrow>\n       f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B)\n 2. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "let ?sA = \"Collect (Domainp A)\" and ?sB = \"(Collect (Domainp B))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f.\n       Domainp (A ===> B) f \\<Longrightarrow>\n       f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B)\n 2. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f.\n       Domainp (A ===> B) f \\<Longrightarrow>\n       f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B)\n 2. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "assume \"Domainp (A ===> B) f\""], ["proof (state)\nthis:\n  Domainp (A ===> B) f\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       Domainp (A ===> B) f \\<Longrightarrow>\n       f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B)\n 2. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "show \"f ` ?sA \\<subseteq> ?sB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B)", "proof(clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa b. A xa b \\<Longrightarrow> Domainp B (f xa)", "fix x x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa b. A xa b \\<Longrightarrow> Domainp B (f xa)", "assume \"A x x'\""], ["proof (state)\nthis:\n  A x x'\n\ngoal (1 subgoal):\n 1. \\<And>xa b. A xa b \\<Longrightarrow> Domainp B (f xa)", "from \\<open>Domainp (A ===> B) f\\<close>"], ["proof (chain)\npicking this:\n  Domainp (A ===> B) f", "obtain f' where f': \n      \"A x x' \\<Longrightarrow> B (f x) (f' x')\" for x x'"], ["proof (prove)\nusing this:\n  Domainp (A ===> B) f\n\ngoal (1 subgoal):\n 1. (\\<And>f'.\n        (\\<And>x x'.\n            A x x' \\<Longrightarrow> B (f x) (f' x')) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding rel_fun_def"], ["proof (prove)\nusing this:\n  Domainp\n   (\\<lambda>f g. \\<forall>x y. A x y \\<longrightarrow> B (f x) (g y)) f\n\ngoal (1 subgoal):\n 1. (\\<And>f'.\n        (\\<And>x x'.\n            A x x' \\<Longrightarrow> B (f x) (f' x')) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A ?x ?x' \\<Longrightarrow> B (f ?x) (f' ?x')\n\ngoal (1 subgoal):\n 1. \\<And>xa b. A xa b \\<Longrightarrow> Domainp B (f xa)", "with \\<open>A x x'\\<close>"], ["proof (chain)\npicking this:\n  A x x'\n  A ?x ?x' \\<Longrightarrow> B (f ?x) (f' ?x')", "have \"B (f x) (f' x')\""], ["proof (prove)\nusing this:\n  A x x'\n  A ?x ?x' \\<Longrightarrow> B (f ?x) (f' ?x')\n\ngoal (1 subgoal):\n 1. B (f x) (f' x')", "by simp"], ["proof (state)\nthis:\n  B (f x) (f' x')\n\ngoal (1 subgoal):\n 1. \\<And>xa b. A xa b \\<Longrightarrow> Domainp B (f xa)", "thus \"Domainp B (f x)\""], ["proof (prove)\nusing this:\n  B (f x) (f' x')\n\ngoal (1 subgoal):\n 1. Domainp B (f x)", "by auto"], ["proof (state)\nthis:\n  Domainp B (f x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "let ?sA = \"Collect (Domainp A)\" and ?sB = \"(Collect (Domainp B))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "assume \"f ` ?sA \\<subseteq> ?sB\""], ["proof (state)\nthis:\n  f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "define f' where f': \"f' = (\\<lambda>x'. (THE y'. \\<exists>x. A x x' \\<and> B (f x) y'))\""], ["proof (state)\nthis:\n  f' = (\\<lambda>x'. THE y'. \\<exists>x. A x x' \\<and> B (f x) y')\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "have \"(A ===> B) f f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A ===> B) f f'", "proof(intro rel_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. A x y \\<Longrightarrow> B (f x) (f' y)", "fix x x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. A x y \\<Longrightarrow> B (f x) (f' y)", "assume \"A x x'\""], ["proof (state)\nthis:\n  A x x'\n\ngoal (1 subgoal):\n 1. \\<And>x y. A x y \\<Longrightarrow> B (f x) (f' y)", "then"], ["proof (chain)\npicking this:\n  A x x'", "have \"f x \\<in> ?sB\""], ["proof (prove)\nusing this:\n  A x x'\n\ngoal (1 subgoal):\n 1. f x \\<in> Collect (Domainp B)", "using \\<open>f ` ?sA \\<subseteq> ?sB\\<close>"], ["proof (prove)\nusing this:\n  A x x'\n  f ` Collect (Domainp A) \\<subseteq> Collect (Domainp B)\n\ngoal (1 subgoal):\n 1. f x \\<in> Collect (Domainp B)", "by auto"], ["proof (state)\nthis:\n  f x \\<in> Collect (Domainp B)\n\ngoal (1 subgoal):\n 1. \\<And>x y. A x y \\<Longrightarrow> B (f x) (f' y)", "then"], ["proof (chain)\npicking this:\n  f x \\<in> Collect (Domainp B)", "obtain y' where y': \"B (f x) y'\""], ["proof (prove)\nusing this:\n  f x \\<in> Collect (Domainp B)\n\ngoal (1 subgoal):\n 1. (\\<And>y'. B (f x) y' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by clarsimp"], ["proof (state)\nthis:\n  B (f x) y'\n\ngoal (1 subgoal):\n 1. \\<And>x y. A x y \\<Longrightarrow> B (f x) (f' y)", "have \"f' x' = y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' x' = y'", "unfolding f'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE y'. \\<exists>x. A x x' \\<and> B (f x) y') = y'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x. A x x' \\<and> B (f x) y'\n 2. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "from \\<open>A x x'\\<close> y'"], ["proof (chain)\npicking this:\n  A x x'\n  B (f x) y'", "show \"\\<exists>x. A x x' \\<and> B (f x) y'\""], ["proof (prove)\nusing this:\n  A x x'\n  B (f x) y'\n\ngoal (1 subgoal):\n 1. \\<exists>x. A x x' \\<and> B (f x) y'", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. A x x' \\<and> B (f x) y'\n\ngoal (1 subgoal):\n 1. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "{"], ["proof (state)\nthis:\n  \\<exists>x. A x x' \\<and> B (f x) y'\n\ngoal (1 subgoal):\n 1. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "fix y''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "assume \"\\<exists>x. A x x' \\<and> B (f x) y''\""], ["proof (state)\nthis:\n  \\<exists>x. A x x' \\<and> B (f x) y''\n\ngoal (1 subgoal):\n 1. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. A x x' \\<and> B (f x) y''", "obtain x'' where x'': \"A x'' x' \\<and> B (f x'') y''\""], ["proof (prove)\nusing this:\n  \\<exists>x. A x x' \\<and> B (f x) y''\n\ngoal (1 subgoal):\n 1. (\\<And>x''.\n        A x'' x' \\<and> B (f x'') y'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  A x'' x' \\<and> B (f x'') y''\n\ngoal (1 subgoal):\n 1. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "with assms(1)"], ["proof (chain)\npicking this:\n  bi_unique A\n  A x'' x' \\<and> B (f x'') y''", "have \"x'' = x\""], ["proof (prove)\nusing this:\n  bi_unique A\n  A x'' x' \\<and> B (f x'') y''\n\ngoal (1 subgoal):\n 1. x'' = x", "using \\<open>A x x'\\<close>"], ["proof (prove)\nusing this:\n  bi_unique A\n  A x'' x' \\<and> B (f x'') y''\n  A x x'\n\ngoal (1 subgoal):\n 1. x'' = x", "by (auto dest: bi_uniqueDl)"], ["proof (state)\nthis:\n  x'' = x\n\ngoal (1 subgoal):\n 1. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "with y' x''"], ["proof (chain)\npicking this:\n  B (f x) y'\n  A x'' x' \\<and> B (f x'') y''\n  x'' = x", "have \"y'' = y'\""], ["proof (prove)\nusing this:\n  B (f x) y'\n  A x'' x' \\<and> B (f x'') y''\n  x'' = x\n\ngoal (1 subgoal):\n 1. y'' = y'", "using assms(2)"], ["proof (prove)\nusing this:\n  B (f x) y'\n  A x'' x' \\<and> B (f x'') y''\n  x'' = x\n  bi_unique B\n\ngoal (1 subgoal):\n 1. y'' = y'", "by (auto dest: bi_uniqueDr)"], ["proof (state)\nthis:\n  y'' = y'\n\ngoal (1 subgoal):\n 1. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "}"], ["proof (state)\nthis:\n  \\<exists>x. A x x' \\<and> B (f x) ?y''2 \\<Longrightarrow> ?y''2 = y'\n\ngoal (1 subgoal):\n 1. \\<And>y'a.\n       \\<exists>x. A x x' \\<and> B (f x) y'a \\<Longrightarrow> y'a = y'", "thus \"\\<exists>x. A x x' \\<and> B (f x) y'' \\<Longrightarrow> y'' = y'\" for y''"], ["proof (prove)\nusing this:\n  \\<exists>x. A x x' \\<and> B (f x) ?y''2 \\<Longrightarrow> ?y''2 = y'\n\ngoal (1 subgoal):\n 1. \\<exists>x. A x x' \\<and> B (f x) y'' \\<Longrightarrow> y'' = y'", "by simp"], ["proof (state)\nthis:\n  \\<exists>x. A x x' \\<and> B (f x) ?y'' \\<Longrightarrow> ?y'' = y'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f' x' = y'\n\ngoal (1 subgoal):\n 1. \\<And>x y. A x y \\<Longrightarrow> B (f x) (f' y)", "thus \"B (f x) (f' x')\""], ["proof (prove)\nusing this:\n  f' x' = y'\n\ngoal (1 subgoal):\n 1. B (f x) (f' x')", "using y'"], ["proof (prove)\nusing this:\n  f' x' = y'\n  B (f x) y'\n\ngoal (1 subgoal):\n 1. B (f x) (f' x')", "by simp"], ["proof (state)\nthis:\n  B (f x) (f' x')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (A ===> B) f f'\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f ` Collect (Domainp A)\n       \\<subseteq> Collect (Domainp B) \\<Longrightarrow>\n       Domainp (A ===> B) f", "thus \"Domainp (A ===> B) f\""], ["proof (prove)\nusing this:\n  (A ===> B) f f'\n\ngoal (1 subgoal):\n 1. Domainp (A ===> B) f", "by auto"], ["proof (state)\nthis:\n  Domainp (A ===> B) f\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma Ex_rt_bu_transfer[transfer_rule]:\n  fixes A :: \"['a, 'c] \\<Rightarrow> bool\"\n  fixes B :: \"['b, 'd] \\<Rightarrow> bool\"\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \"bi_unique B\"\n  shows \n    \"(((B ===> A) ===> (=)) ===> (=)) \n      (Bex (Collect (\\<lambda>f. f ` (Collect (Domainp B)) \\<subseteq> (Collect (Domainp A))))) \n      Ex\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((B ===> A) ===> (=)) ===> (=))\n     (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (((B ===> A) ===> (=)) ===> (=))\n     (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex", "from assms(3,1)"], ["proof (chain)\npicking this:\n  bi_unique B\n  bi_unique A", "have domainp_eq_ss:\n    \"Domainp (B ===> A) = \n      (\\<lambda>f. f ` (Collect (Domainp B)) \\<subseteq> (Collect (Domainp A)))\""], ["proof (prove)\nusing this:\n  bi_unique B\n  bi_unique A\n\ngoal (1 subgoal):\n 1. Domainp (B ===> A) =\n    (\\<lambda>f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A))", "by (rule Domainp_fun_rel_eq_subset)"], ["proof (state)\nthis:\n  Domainp (B ===> A) =\n  (\\<lambda>f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A))\n\ngoal (1 subgoal):\n 1. (((B ===> A) ===> (=)) ===> (=))\n     (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex", "have \"right_total (B ===> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_total (B ===> A)", "using assms"], ["proof (prove)\nusing this:\n  bi_unique A\n  right_total A\n  bi_unique B\n\ngoal (1 subgoal):\n 1. right_total (B ===> A)", "by (simp add: bi_unique_alt_def right_total_fun)"], ["proof (state)\nthis:\n  right_total (B ===> A)\n\ngoal (1 subgoal):\n 1. (((B ===> A) ===> (=)) ===> (=))\n     (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex", "then"], ["proof (chain)\npicking this:\n  right_total (B ===> A)", "have     \n    \"(((B ===> A) ===> (=)) ===> (=)) (Bex (Collect (Domainp (B ===> A)))) Ex\""], ["proof (prove)\nusing this:\n  right_total (B ===> A)\n\ngoal (1 subgoal):\n 1. (((B ===> A) ===> (=)) ===> (=)) (Bex (Collect (Domainp (B ===> A)))) Ex", "by (simp add: right_total_Ex_transfer)"], ["proof (state)\nthis:\n  (((B ===> A) ===> (=)) ===> (=)) (Bex (Collect (Domainp (B ===> A)))) Ex\n\ngoal (1 subgoal):\n 1. (((B ===> A) ===> (=)) ===> (=))\n     (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex", "thus ?thesis"], ["proof (prove)\nusing this:\n  (((B ===> A) ===> (=)) ===> (=)) (Bex (Collect (Domainp (B ===> A)))) Ex\n\ngoal (1 subgoal):\n 1. (((B ===> A) ===> (=)) ===> (=))\n     (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex", "unfolding domainp_eq_ss"], ["proof (prove)\nusing this:\n  (((B ===> A) ===> (=)) ===> (=))\n   (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex\n\ngoal (1 subgoal):\n 1. (((B ===> A) ===> (=)) ===> (=))\n     (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex", "by simp"], ["proof (state)\nthis:\n  (((B ===> A) ===> (=)) ===> (=))\n   (Bex {f. f ` Collect (Domainp B) \\<subseteq> Collect (Domainp A)}) Ex\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "definition topological_basis_ow :: \n  \"['a set, 'a set \\<Rightarrow> bool, 'a set set] \\<Rightarrow> bool\"\n  (\\<open>(on _ with _ : \\<guillemotleft>topological'_basis\\<guillemotright> _)\\<close> [1000, 1000, 1000] 10) \n  where\n    \"(on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B) =\n      (\\<Union>B = U \\<and> (\\<forall>b \\<in> B. \\<tau> b) \\<and> (\\<forall>q \\<subseteq> U. \\<tau> q \\<longrightarrow> (\\<exists>B'\\<subseteq> B. \\<Union>B' = q)))\""], ["", "context topological_space\nbegin"], ["", "lemma topological_basis_with[ud_with]: \n  \"topological_basis = topological_basis_with open\""], ["proof (prove)\ngoal (1 subgoal):\n 1. topological_basis = topological_basis_with open", "unfolding topological_basis_def topological_basis_with_def Ball_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>B.\n        (\\<forall>x. x \\<in> B \\<longrightarrow> open x) \\<and>\n        (\\<forall>x.\n            open x \\<longrightarrow>\n            (\\<exists>B'\\<subseteq>B. \\<Union> B' = x))) =\n    (\\<lambda>B.\n        \\<Union> B = UNIV \\<and>\n        (\\<forall>x. x \\<in> B \\<longrightarrow> open x) \\<and>\n        (\\<forall>q.\n            open q \\<longrightarrow>\n            (\\<exists>B'\\<subseteq>B. \\<Union> B' = q)))", "by (intro ext) (metis Union_mono open_UNIV top.extremum_uniqueI)"], ["", "end"], ["", "subsection\\<open>Transfer rules\\<close>"], ["", "text\\<open>Some of the entities that are presented in this subsectionwere \ncopied from \\<^text>\\<open>HOL-Types_To_Sets/Examples/T2_Spaces\\<close>.\\<close>"], ["", "context \n  includes lifting_syntax \nbegin"], ["", "lemmas vimage_transfer[transfer_rule] = vimage_transfer"], ["", "lemma topological_space_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\"\n  shows \n    \"((rel_set A ===> (=)) ===> (=)) \n      (topological_space_ow (Collect (Domainp A))) class.topological_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((rel_set A ===> (=)) ===> (=))\n     (topological_space_ow (Collect (Domainp A))) class.topological_space", "unfolding topological_space_ow_def class.topological_space_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((rel_set A ===> (=)) ===> (=))\n     (\\<lambda>\\<tau>.\n         \\<tau> (Collect (Domainp A)) \\<and>\n         (\\<forall>S T.\n             S \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n             T \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n             \\<tau> S \\<longrightarrow>\n             \\<tau> T \\<longrightarrow> \\<tau> (S \\<inter> T)) \\<and>\n         (\\<forall>K\\<subseteq>Pow (Collect (Domainp A)).\n             Ball K \\<tau> \\<longrightarrow> \\<tau> (\\<Union> K)))\n     (\\<lambda>open.\n         open UNIV \\<and>\n         (\\<forall>S T.\n             open S \\<longrightarrow>\n             open T \\<longrightarrow> open (S \\<inter> T)) \\<and>\n         (\\<forall>K.\n             (\\<forall>S\\<in>K. open S) \\<longrightarrow>\n             open (\\<Union> K)))", "apply transfer_prover_start"], ["proof (prove)\ngoal (13 subgoals):\n 1. Transfer.Rel (?Rl27 ===> rel_set A) ?ak27 \\<Union>\n 2. Transfer.Rel (?Rl27 ===> (rel_set A ===> (=)) ===> ?Rn27) ?aj27 Ball\n 3. Transfer.Rel (?Rn27 ===> (=) ===> ?Rm27) ?ai27 (\\<longrightarrow>)\n 4. Transfer.Rel ((?Rl27 ===> ?Rm27) ===> ?Rh27) ?ah27 All\n 5. Transfer.Rel (rel_set A ===> rel_set A ===> rel_set A) ?ag27 (\\<inter>)\n 6. Transfer.Rel ((=) ===> (=) ===> ?Rk27) ?af27 (\\<longrightarrow>)\n 7. Transfer.Rel ((=) ===> ?Rk27 ===> ?Rj27) ?ae27 (\\<longrightarrow>)\n 8. Transfer.Rel ((rel_set A ===> ?Rj27) ===> ?Ri27) ?ad27 All\n 9. Transfer.Rel ((rel_set A ===> ?Ri27) ===> ?Rg27) ?ac27 All\n 10. Transfer.Rel (?Rg27 ===> ?Rh27 ===> ?Re27) ?ab27 (\\<and>)\nA total of 13 subgoals...", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<tau>.\n        \\<tau> (Collect (Domainp A)) \\<and>\n        (\\<forall>S T.\n            S \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n            T \\<subseteq> Collect (Domainp A) \\<longrightarrow>\n            \\<tau> S \\<longrightarrow>\n            \\<tau> T \\<longrightarrow> \\<tau> (S \\<inter> T)) \\<and>\n        (\\<forall>K\\<subseteq>Pow (Collect (Domainp A)).\n            Ball K \\<tau> \\<longrightarrow> \\<tau> (\\<Union> K))) =\n    (\\<lambda>open.\n        open (Collect (Domainp A)) \\<and>\n        (\\<forall>S\\<in>{Aa. Ball Aa (Domainp A)}.\n            \\<forall>T\\<in>{Aa. Ball Aa (Domainp A)}.\n               open S \\<longrightarrow>\n               open T \\<longrightarrow> open (S \\<inter> T)) \\<and>\n        (\\<forall>K\\<in>{Aa. \\<forall>Aa\\<in>Aa. Ball Aa (Domainp A)}.\n            (\\<forall>S\\<in>K. open S) \\<longrightarrow> open (\\<Union> K)))", "unfolding Pow_def Ball_Collect[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<tau>.\n        \\<tau> (Collect (Domainp A)) \\<and>\n        (\\<forall>S T.\n            Ball S (Domainp A) \\<longrightarrow>\n            Ball T (Domainp A) \\<longrightarrow>\n            \\<tau> S \\<longrightarrow>\n            \\<tau> T \\<longrightarrow> \\<tau> (S \\<inter> T)) \\<and>\n        (\\<forall>K.\n            (\\<forall>B\\<in>K. Ball B (Domainp A)) \\<longrightarrow>\n            Ball K \\<tau> \\<longrightarrow> \\<tau> (\\<Union> K))) =\n    (\\<lambda>open.\n        open (Collect (Domainp A)) \\<and>\n        (\\<forall>S\\<in>{Aa. Ball Aa (Domainp A)}.\n            \\<forall>T\\<in>{Aa. Ball Aa (Domainp A)}.\n               open S \\<longrightarrow>\n               open T \\<longrightarrow> open (S \\<inter> T)) \\<and>\n        (\\<forall>K\\<in>{Aa. \\<forall>Aa\\<in>Aa. Ball Aa (Domainp A)}.\n            (\\<forall>S\\<in>K. open S) \\<longrightarrow> open (\\<Union> K)))", "by auto"], ["", "lemma generate_topology_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\"\n  shows \n    \"((rel_set (rel_set A)) ===> (rel_set A ===> (=))) \n      (\\<lambda>B. generate_topology_on B (Collect (Domainp A))) generate_topology\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set (rel_set A) ===> rel_set A ===> (=))\n     (\\<lambda>B. generate_topology_on B (Collect (Domainp A)))\n     generate_topology", "proof(intro rel_funI, standard)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        in_topology_generated_by x on (Collect\n  (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa\\<rbrakk>\n       \\<Longrightarrow> generate_topology y ya\n 2. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "fix BL BR xl xr"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        in_topology_generated_by x on (Collect\n  (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa\\<rbrakk>\n       \\<Longrightarrow> generate_topology y ya\n 2. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "assume \n    rsrsT_BLR: \"rel_set (rel_set A) BL BR\" and \n    rsT_xl_xr: \"rel_set A xl xr\" and \n    gto: \"generate_topology_on BL (Collect (Domainp A)) xl\""], ["proof (state)\nthis:\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n  in_topology_generated_by BL on (Collect\n                                   (Domainp\n                                     A)) : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal (2 subgoals):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        in_topology_generated_by x on (Collect\n  (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa\\<rbrakk>\n       \\<Longrightarrow> generate_topology y ya\n 2. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "define CDT where CDT: \"CDT = (Collect (Domainp A))\""], ["proof (state)\nthis:\n  CDT = Collect (Domainp A)\n\ngoal (2 subgoals):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        in_topology_generated_by x on (Collect\n  (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa\\<rbrakk>\n       \\<Longrightarrow> generate_topology y ya\n 2. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "with gto"], ["proof (chain)\npicking this:\n  in_topology_generated_by BL on (Collect\n                                   (Domainp\n                                     A)) : \\<guillemotleft>open\\<guillemotright> xl\n  CDT = Collect (Domainp A)", "have gto_CDT: \"generate_topology_on BL CDT xl\""], ["proof (prove)\nusing this:\n  in_topology_generated_by BL on (Collect\n                                   (Domainp\n                                     A)) : \\<guillemotleft>open\\<guillemotright> xl\n  CDT = Collect (Domainp A)\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on CDT : \\<guillemotleft>open\\<guillemotright> xl", "by simp"], ["proof (state)\nthis:\n  in_topology_generated_by BL on CDT : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal (2 subgoals):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        in_topology_generated_by x on (Collect\n  (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa\\<rbrakk>\n       \\<Longrightarrow> generate_topology y ya\n 2. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "from gto_CDT CDT rsrsT_BLR rsT_xl_xr"], ["proof (chain)\npicking this:\n  in_topology_generated_by BL on CDT : \\<guillemotleft>open\\<guillemotright> xl\n  CDT = Collect (Domainp A)\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr", "show \"generate_topology BR xr\""], ["proof (prove)\nusing this:\n  in_topology_generated_by BL on CDT : \\<guillemotleft>open\\<guillemotright> xl\n  CDT = Collect (Domainp A)\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "proof(induction arbitrary: xr rule: generate_topology_on.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>U xr.\n       \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A U xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 2. \\<And>U a b xr.\n       \\<lbrakk>in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> a;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A a xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> b;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A b xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        a \\<subseteq> U; b \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A (a \\<inter> b) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 3. \\<And>K U xr.\n       \\<lbrakk>K \\<subseteq> Pow U;\n        \\<And>k.\n           k \\<in> K \\<Longrightarrow>\n           in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> k;\n        \\<And>k xr.\n           \\<lbrakk>k \\<in> K; U = Collect (Domainp A);\n            rel_set (rel_set A) BL BR; rel_set A k xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A (\\<Union> K) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 4. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "case (UNIV S)"], ["proof (state)\nthis:\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A S xr\n\ngoal (4 subgoals):\n 1. \\<And>U xr.\n       \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A U xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 2. \\<And>U a b xr.\n       \\<lbrakk>in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> a;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A a xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> b;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A b xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        a \\<subseteq> U; b \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A (a \\<inter> b) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 3. \\<And>K U xr.\n       \\<lbrakk>K \\<subseteq> Pow U;\n        \\<And>k.\n           k \\<in> K \\<Longrightarrow>\n           in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> k;\n        \\<And>k xr.\n           \\<lbrakk>k \\<in> K; U = Collect (Domainp A);\n            rel_set (rel_set A) BL BR; rel_set A k xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A (\\<Union> K) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 4. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. generate_topology BR xr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. generate_topology BR xr", "from assms UNIV.prems"], ["proof (chain)\npicking this:\n  bi_unique A\n  right_total A\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A S xr", "have \"xr = UNIV\""], ["proof (prove)\nusing this:\n  bi_unique A\n  right_total A\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A S xr\n\ngoal (1 subgoal):\n 1. xr = UNIV", "by (meson bi_uniqueDr bi_unique_rel_set right_total_UNIV_transfer)"], ["proof (state)\nthis:\n  xr = UNIV\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "thus \"generate_topology BR xr\""], ["proof (prove)\nusing this:\n  xr = UNIV\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "by (simp add: generate_topology.UNIV)"], ["proof (state)\nthis:\n  generate_topology BR xr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  generate_topology BR xr\n\ngoal (3 subgoals):\n 1. \\<And>U a b xr.\n       \\<lbrakk>in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> a;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A a xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> b;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A b xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        a \\<subseteq> U; b \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A (a \\<inter> b) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 2. \\<And>K U xr.\n       \\<lbrakk>K \\<subseteq> Pow U;\n        \\<And>k.\n           k \\<in> K \\<Longrightarrow>\n           in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> k;\n        \\<And>k xr.\n           \\<lbrakk>k \\<in> K; U = Collect (Domainp A);\n            rel_set (rel_set A) BL BR; rel_set A k xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A (\\<Union> K) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 3. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>U a b xr.\n       \\<lbrakk>in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> a;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A a xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> b;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A b xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        a \\<subseteq> U; b \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A (a \\<inter> b) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 2. \\<And>K U xr.\n       \\<lbrakk>K \\<subseteq> Pow U;\n        \\<And>k.\n           k \\<in> K \\<Longrightarrow>\n           in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> k;\n        \\<And>k xr.\n           \\<lbrakk>k \\<in> K; U = Collect (Domainp A);\n            rel_set (rel_set A) BL BR; rel_set A k xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A (\\<Union> K) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 3. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "case (Int S a b)"], ["proof (state)\nthis:\n  in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> a\n  in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> b\n  a \\<subseteq> S\n  b \\<subseteq> S\n  \\<lbrakk>S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n   rel_set A a ?xr\\<rbrakk>\n  \\<Longrightarrow> generate_topology BR ?xr\n  \\<lbrakk>S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n   rel_set A b ?xr\\<rbrakk>\n  \\<Longrightarrow> generate_topology BR ?xr\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A (a \\<inter> b) xr\n\ngoal (3 subgoals):\n 1. \\<And>U a b xr.\n       \\<lbrakk>in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> a;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A a xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> b;\n        \\<And>xr.\n           \\<lbrakk>U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n            rel_set A b xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        a \\<subseteq> U; b \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A (a \\<inter> b) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 2. \\<And>K U xr.\n       \\<lbrakk>K \\<subseteq> Pow U;\n        \\<And>k.\n           k \\<in> K \\<Longrightarrow>\n           in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> k;\n        \\<And>k xr.\n           \\<lbrakk>k \\<in> K; U = Collect (Domainp A);\n            rel_set (rel_set A) BL BR; rel_set A k xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A (\\<Union> K) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 3. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. generate_topology BR xr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. generate_topology BR xr", "from Int.hyps(3) Int.prems(1)"], ["proof (chain)\npicking this:\n  a \\<subseteq> S\n  S = {a. Domainp A a}", "obtain a' where a': \"rel_set A a a'\""], ["proof (prove)\nusing this:\n  a \\<subseteq> S\n  S = {a. Domainp A a}\n\ngoal (1 subgoal):\n 1. (\\<And>a'. rel_set A a a' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Ball_Collect Domainp_iff Domainp_set)"], ["proof (state)\nthis:\n  rel_set A a a'\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "from Int.hyps(4) Int.prems(1)"], ["proof (chain)\npicking this:\n  b \\<subseteq> S\n  S = {a. Domainp A a}", "obtain b' where b': \"rel_set A b b'\""], ["proof (prove)\nusing this:\n  b \\<subseteq> S\n  S = {a. Domainp A a}\n\ngoal (1 subgoal):\n 1. (\\<And>b'. rel_set A b b' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Ball_Collect Domainp_iff Domainp_set)"], ["proof (state)\nthis:\n  rel_set A b b'\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "from Int.prems(1) Int.prems(2) a'"], ["proof (chain)\npicking this:\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A a a'", "have gt_a': \"generate_topology BR a'\""], ["proof (prove)\nusing this:\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A a a'\n\ngoal (1 subgoal):\n 1. generate_topology BR a'", "by (rule Int.IH(1))"], ["proof (state)\nthis:\n  generate_topology BR a'\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "from Int.prems(1) Int.prems(2) b'"], ["proof (chain)\npicking this:\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A b b'", "have gt_b': \"generate_topology BR b'\""], ["proof (prove)\nusing this:\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A b b'\n\ngoal (1 subgoal):\n 1. generate_topology BR b'", "by (rule Int.IH(2))"], ["proof (state)\nthis:\n  generate_topology BR b'\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "from gt_a' gt_b'"], ["proof (chain)\npicking this:\n  generate_topology BR a'\n  generate_topology BR b'", "have \"generate_topology BR (a' \\<inter> b')\""], ["proof (prove)\nusing this:\n  generate_topology BR a'\n  generate_topology BR b'\n\ngoal (1 subgoal):\n 1. generate_topology BR (a' \\<inter> b')", "by (rule generate_topology.Int)"], ["proof (state)\nthis:\n  generate_topology BR (a' \\<inter> b')\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "also"], ["proof (state)\nthis:\n  generate_topology BR (a' \\<inter> b')\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "from assms(1) a' b' Int.prems(3)"], ["proof (chain)\npicking this:\n  bi_unique A\n  rel_set A a a'\n  rel_set A b b'\n  rel_set A (a \\<inter> b) xr", "have \"a' \\<inter> b' = xr\""], ["proof (prove)\nusing this:\n  bi_unique A\n  rel_set A a a'\n  rel_set A b b'\n  rel_set A (a \\<inter> b) xr\n\ngoal (1 subgoal):\n 1. a' \\<inter> b' = xr", "by (rule bi_unique_intersect_r)"], ["proof (state)\nthis:\n  a' \\<inter> b' = xr\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "ultimately"], ["proof (chain)\npicking this:\n  generate_topology BR (a' \\<inter> b')\n  a' \\<inter> b' = xr", "show \"generate_topology BR xr\""], ["proof (prove)\nusing this:\n  generate_topology BR (a' \\<inter> b')\n  a' \\<inter> b' = xr\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "by simp"], ["proof (state)\nthis:\n  generate_topology BR xr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  generate_topology BR xr\n\ngoal (2 subgoals):\n 1. \\<And>K U xr.\n       \\<lbrakk>K \\<subseteq> Pow U;\n        \\<And>k.\n           k \\<in> K \\<Longrightarrow>\n           in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> k;\n        \\<And>k xr.\n           \\<lbrakk>k \\<in> K; U = Collect (Domainp A);\n            rel_set (rel_set A) BL BR; rel_set A k xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A (\\<Union> K) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 2. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>K U xr.\n       \\<lbrakk>K \\<subseteq> Pow U;\n        \\<And>k.\n           k \\<in> K \\<Longrightarrow>\n           in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> k;\n        \\<And>k xr.\n           \\<lbrakk>k \\<in> K; U = Collect (Domainp A);\n            rel_set (rel_set A) BL BR; rel_set A k xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A (\\<Union> K) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 2. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "case (UN K S)"], ["proof (state)\nthis:\n  K \\<subseteq> Pow S\n  ?k \\<in> K \\<Longrightarrow>\n  in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> ?k\n  \\<lbrakk>?k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n   rel_set A ?k ?xr\\<rbrakk>\n  \\<Longrightarrow> generate_topology BR ?xr\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A (\\<Union> K) xr\n\ngoal (2 subgoals):\n 1. \\<And>K U xr.\n       \\<lbrakk>K \\<subseteq> Pow U;\n        \\<And>k.\n           k \\<in> K \\<Longrightarrow>\n           in_topology_generated_by BL on U : \\<guillemotleft>open\\<guillemotright> k;\n        \\<And>k xr.\n           \\<lbrakk>k \\<in> K; U = Collect (Domainp A);\n            rel_set (rel_set A) BL BR; rel_set A k xr\\<rbrakk>\n           \\<Longrightarrow> generate_topology BR xr;\n        U = Collect (Domainp A); rel_set (rel_set A) BL BR;\n        rel_set A (\\<Union> K) xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr\n 2. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "thus ?case"], ["proof (prove)\nusing this:\n  K \\<subseteq> Pow S\n  ?k \\<in> K \\<Longrightarrow>\n  in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> ?k\n  \\<lbrakk>?k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n   rel_set A ?k ?xr\\<rbrakk>\n  \\<Longrightarrow> generate_topology BR ?xr\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A (\\<Union> K) xr\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<subseteq> Pow S;\n     \\<And>k.\n        k \\<in> K \\<Longrightarrow>\n        in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> k;\n     \\<And>k xr.\n        \\<lbrakk>k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n         rel_set A k xr\\<rbrakk>\n        \\<Longrightarrow> generate_topology BR xr;\n     S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n     rel_set A (\\<Union> K) xr\\<rbrakk>\n    \\<Longrightarrow> generate_topology BR xr", "define K' where K': \"K' = {(x, y). rel_set A x y} `` K\" (is \"K' = ?K'\")"], ["proof (state)\nthis:\n  K' = {(x, y). rel_set A x y} `` K\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<subseteq> Pow S;\n     \\<And>k.\n        k \\<in> K \\<Longrightarrow>\n        in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> k;\n     \\<And>k xr.\n        \\<lbrakk>k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n         rel_set A k xr\\<rbrakk>\n        \\<Longrightarrow> generate_topology BR xr;\n     S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n     rel_set A (\\<Union> K) xr\\<rbrakk>\n    \\<Longrightarrow> generate_topology BR xr", "have Union_ss_CDT: \"\\<Union>K \\<subseteq> Collect (Domainp A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> K \\<subseteq> Collect (Domainp A)", "by (metis CollectI Domainp.DomainI UN.prems(3) rel_setD1 subsetI)"], ["proof (state)\nthis:\n  \\<Union> K \\<subseteq> Collect (Domainp A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<subseteq> Pow S;\n     \\<And>k.\n        k \\<in> K \\<Longrightarrow>\n        in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> k;\n     \\<And>k xr.\n        \\<lbrakk>k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n         rel_set A k xr\\<rbrakk>\n        \\<Longrightarrow> generate_topology BR xr;\n     S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n     rel_set A (\\<Union> K) xr\\<rbrakk>\n    \\<Longrightarrow> generate_topology BR xr", "from assms(1) Union_ss_CDT UN.prems(3)"], ["proof (chain)\npicking this:\n  bi_unique A\n  \\<Union> K \\<subseteq> Collect (Domainp A)\n  rel_set A (\\<Union> K) xr", "have \"\\<Union>?K' = xr\""], ["proof (prove)\nusing this:\n  bi_unique A\n  \\<Union> K \\<subseteq> Collect (Domainp A)\n  rel_set A (\\<Union> K) xr\n\ngoal (1 subgoal):\n 1. \\<Union> ({(x, y). rel_set A x y} `` K) = xr", "by (rule bi_unique_Union_r)"], ["proof (state)\nthis:\n  \\<Union> ({(x, y). rel_set A x y} `` K) = xr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<subseteq> Pow S;\n     \\<And>k.\n        k \\<in> K \\<Longrightarrow>\n        in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> k;\n     \\<And>k xr.\n        \\<lbrakk>k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n         rel_set A k xr\\<rbrakk>\n        \\<Longrightarrow> generate_topology BR xr;\n     S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n     rel_set A (\\<Union> K) xr\\<rbrakk>\n    \\<Longrightarrow> generate_topology BR xr", "then"], ["proof (chain)\npicking this:\n  \\<Union> ({(x, y). rel_set A x y} `` K) = xr", "have UK_eq_xr: \"\\<Union>K' = xr\""], ["proof (prove)\nusing this:\n  \\<Union> ({(x, y). rel_set A x y} `` K) = xr\n\ngoal (1 subgoal):\n 1. \\<Union> K' = xr", "unfolding K'"], ["proof (prove)\nusing this:\n  \\<Union> ({(x, y). rel_set A x y} `` K) = xr\n\ngoal (1 subgoal):\n 1. \\<Union> ({(x, y). rel_set A x y} `` K) = xr", "."], ["proof (state)\nthis:\n  \\<Union> K' = xr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<subseteq> Pow S;\n     \\<And>k.\n        k \\<in> K \\<Longrightarrow>\n        in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> k;\n     \\<And>k xr.\n        \\<lbrakk>k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n         rel_set A k xr\\<rbrakk>\n        \\<Longrightarrow> generate_topology BR xr;\n     S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n     rel_set A (\\<Union> K) xr\\<rbrakk>\n    \\<Longrightarrow> generate_topology BR xr", "have \"k' \\<in> K' \\<Longrightarrow> generate_topology BR k'\" for k'"], ["proof (prove)\ngoal (1 subgoal):\n 1. k' \\<in> K' \\<Longrightarrow> generate_topology BR k'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k' \\<in> K' \\<Longrightarrow> generate_topology BR k'", "assume k'_in_K': \"k' \\<in> K'\""], ["proof (state)\nthis:\n  k' \\<in> K'\n\ngoal (1 subgoal):\n 1. k' \\<in> K' \\<Longrightarrow> generate_topology BR k'", "then"], ["proof (chain)\npicking this:\n  k' \\<in> K'", "obtain k where k: \"rel_set A k k'\""], ["proof (prove)\nusing this:\n  k' \\<in> K'\n\ngoal (1 subgoal):\n 1. (\\<And>k. rel_set A k k' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding K'"], ["proof (prove)\nusing this:\n  k' \\<in> {(x, y). rel_set A x y} `` K\n\ngoal (1 subgoal):\n 1. (\\<And>k. rel_set A k k' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  rel_set A k k'\n\ngoal (1 subgoal):\n 1. k' \\<in> K' \\<Longrightarrow> generate_topology BR k'", "from assms(1)"], ["proof (chain)\npicking this:\n  bi_unique A", "have \"bi_unique (rel_set A)\""], ["proof (prove)\nusing this:\n  bi_unique A\n\ngoal (1 subgoal):\n 1. bi_unique (rel_set A)", "by (rule bi_unique_rel_set)"], ["proof (state)\nthis:\n  bi_unique (rel_set A)\n\ngoal (1 subgoal):\n 1. k' \\<in> K' \\<Longrightarrow> generate_topology BR k'", "with k"], ["proof (chain)\npicking this:\n  rel_set A k k'\n  bi_unique (rel_set A)", "have \"\\<exists>!k. rel_set A k k'\""], ["proof (prove)\nusing this:\n  rel_set A k k'\n  bi_unique (rel_set A)\n\ngoal (1 subgoal):\n 1. \\<exists>!k. rel_set A k k'", "by (meson bi_uniqueDl)"], ["proof (state)\nthis:\n  \\<exists>!k. rel_set A k k'\n\ngoal (1 subgoal):\n 1. k' \\<in> K' \\<Longrightarrow> generate_topology BR k'", "with k'_in_K' k"], ["proof (chain)\npicking this:\n  k' \\<in> K'\n  rel_set A k k'\n  \\<exists>!k. rel_set A k k'", "have k_in_K: \"k \\<in> K\""], ["proof (prove)\nusing this:\n  k' \\<in> K'\n  rel_set A k k'\n  \\<exists>!k. rel_set A k k'\n\ngoal (1 subgoal):\n 1. k \\<in> K", "unfolding K'"], ["proof (prove)\nusing this:\n  k' \\<in> {(x, y). rel_set A x y} `` K\n  rel_set A k k'\n  \\<exists>!k. rel_set A k k'\n\ngoal (1 subgoal):\n 1. k \\<in> K", "by auto"], ["proof (state)\nthis:\n  k \\<in> K\n\ngoal (1 subgoal):\n 1. k' \\<in> K' \\<Longrightarrow> generate_topology BR k'", "from k_in_K UN.prems(1,2) k"], ["proof (chain)\npicking this:\n  k \\<in> K\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A k k'", "show \"generate_topology BR k'\""], ["proof (prove)\nusing this:\n  k \\<in> K\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A k k'\n\ngoal (1 subgoal):\n 1. generate_topology BR k'", "by (rule UN.IH)"], ["proof (state)\nthis:\n  generate_topology BR k'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?k' \\<in> K' \\<Longrightarrow> generate_topology BR ?k'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<subseteq> Pow S;\n     \\<And>k.\n        k \\<in> K \\<Longrightarrow>\n        in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> k;\n     \\<And>k xr.\n        \\<lbrakk>k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n         rel_set A k xr\\<rbrakk>\n        \\<Longrightarrow> generate_topology BR xr;\n     S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n     rel_set A (\\<Union> K) xr\\<rbrakk>\n    \\<Longrightarrow> generate_topology BR xr", "then"], ["proof (chain)\npicking this:\n  ?k' \\<in> K' \\<Longrightarrow> generate_topology BR ?k'", "have \"generate_topology BR (\\<Union>K')\""], ["proof (prove)\nusing this:\n  ?k' \\<in> K' \\<Longrightarrow> generate_topology BR ?k'\n\ngoal (1 subgoal):\n 1. generate_topology BR (\\<Union> K')", "by (rule generate_topology.UN)"], ["proof (state)\nthis:\n  generate_topology BR (\\<Union> K')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<subseteq> Pow S;\n     \\<And>k.\n        k \\<in> K \\<Longrightarrow>\n        in_topology_generated_by BL on S : \\<guillemotleft>open\\<guillemotright> k;\n     \\<And>k xr.\n        \\<lbrakk>k \\<in> K; S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n         rel_set A k xr\\<rbrakk>\n        \\<Longrightarrow> generate_topology BR xr;\n     S = {a. Domainp A a}; rel_set (rel_set A) BL BR;\n     rel_set A (\\<Union> K) xr\\<rbrakk>\n    \\<Longrightarrow> generate_topology BR xr", "with UK_eq_xr"], ["proof (chain)\npicking this:\n  \\<Union> K' = xr\n  generate_topology BR (\\<Union> K')", "show \"generate_topology BR xr\""], ["proof (prove)\nusing this:\n  \\<Union> K' = xr\n  generate_topology BR (\\<Union> K')\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "by simp"], ["proof (state)\nthis:\n  generate_topology BR xr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  generate_topology BR xr\n\ngoal (1 subgoal):\n 1. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "case (Basis xl S)"], ["proof (state)\nthis:\n  xl \\<in> BL\n  xl \\<subseteq> S\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n\ngoal (1 subgoal):\n 1. \\<And>s U xr.\n       \\<lbrakk>s \\<in> BL; s \\<subseteq> U; U = Collect (Domainp A);\n        rel_set (rel_set A) BL BR; rel_set A s xr\\<rbrakk>\n       \\<Longrightarrow> generate_topology BR xr", "thus ?case"], ["proof (prove)\nusing this:\n  xl \\<in> BL\n  xl \\<subseteq> S\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "using assms(1)"], ["proof (prove)\nusing this:\n  xl \\<in> BL\n  xl \\<subseteq> S\n  S = {a. Domainp A a}\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n  bi_unique A\n\ngoal (1 subgoal):\n 1. generate_topology BR xr", "by (metis Int_absorb1 bi_unique_intersect_r generate_topology.Basis \n          rel_setD1 subset_refl)"], ["proof (state)\nthis:\n  generate_topology BR xr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  generate_topology BR xr\n\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "fix BL BR xl xr"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "assume rsrsT_BLR: \"rel_set (rel_set A) BL BR\" \n    and rsT_xl_xr: \"rel_set A xl xr\" \n    and gt: \"generate_topology BR xr\""], ["proof (state)\nthis:\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n  generate_topology BR xr\n\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>rel_set (rel_set A) x y; rel_set A xa ya;\n        generate_topology y ya\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by x on (Collect\n                   (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xa", "from gt rsrsT_BLR rsT_xl_xr"], ["proof (chain)\npicking this:\n  generate_topology BR xr\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr", "show \n    \"generate_topology_on BL (Collect (Domainp A)) xl\""], ["proof (prove)\nusing this:\n  generate_topology BR xr\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on (Collect\n                                     (Domainp\n A)) : \\<guillemotleft>open\\<guillemotright> xl", "proof(induction arbitrary: xl rule: generate_topology.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xl.\n       \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl UNIV\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 2. \\<And>a b xl.\n       \\<lbrakk>generate_topology BR a;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl a\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        generate_topology BR b;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl b\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (a \\<inter> b)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 3. \\<And>K xl.\n       \\<lbrakk>\\<And>k. k \\<in> K \\<Longrightarrow> generate_topology BR k;\n        \\<And>k xl.\n           \\<lbrakk>k \\<in> K; rel_set (rel_set A) BL BR;\n            rel_set A xl k\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 4. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "case UNIV"], ["proof (state)\nthis:\n  rel_set (rel_set A) BL BR\n  rel_set A xl UNIV\n\ngoal (4 subgoals):\n 1. \\<And>xl.\n       \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl UNIV\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 2. \\<And>a b xl.\n       \\<lbrakk>generate_topology BR a;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl a\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        generate_topology BR b;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl b\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (a \\<inter> b)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 3. \\<And>K xl.\n       \\<lbrakk>\\<And>k. k \\<in> K \\<Longrightarrow> generate_topology BR k;\n        \\<And>k xl.\n           \\<lbrakk>k \\<in> K; rel_set (rel_set A) BL BR;\n            rel_set A xl k\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 4. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "thus ?case"], ["proof (prove)\nusing this:\n  rel_set (rel_set A) BL BR\n  rel_set A xl UNIV\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "using assms"], ["proof (prove)\nusing this:\n  rel_set (rel_set A) BL BR\n  rel_set A xl UNIV\n  bi_unique A\n  right_total A\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "by (metis bi_uniqueDl bi_unique_rel_set generate_topology_on.simps \n          right_total_UNIV_transfer)"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {a. Domainp A\na} : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal (3 subgoals):\n 1. \\<And>a b xl.\n       \\<lbrakk>generate_topology BR a;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl a\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        generate_topology BR b;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl b\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (a \\<inter> b)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 2. \\<And>K xl.\n       \\<lbrakk>\\<And>k. k \\<in> K \\<Longrightarrow> generate_topology BR k;\n        \\<And>k xl.\n           \\<lbrakk>k \\<in> K; rel_set (rel_set A) BL BR;\n            rel_set A xl k\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 3. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b xl.\n       \\<lbrakk>generate_topology BR a;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl a\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        generate_topology BR b;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl b\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (a \\<inter> b)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 2. \\<And>K xl.\n       \\<lbrakk>\\<And>k. k \\<in> K \\<Longrightarrow> generate_topology BR k;\n        \\<And>k xl.\n           \\<lbrakk>k \\<in> K; rel_set (rel_set A) BL BR;\n            rel_set A xl k\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 3. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "case (Int a' b')"], ["proof (state)\nthis:\n  generate_topology BR a'\n  generate_topology BR b'\n  \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A ?xl a'\\<rbrakk>\n  \\<Longrightarrow> in_topology_generated_by BL on {a.\n              Domainp A a} : \\<guillemotleft>open\\<guillemotright> ?xl\n  \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A ?xl b'\\<rbrakk>\n  \\<Longrightarrow> in_topology_generated_by BL on {a.\n              Domainp A a} : \\<guillemotleft>open\\<guillemotright> ?xl\n  rel_set (rel_set A) BL BR\n  rel_set A xl (a' \\<inter> b')\n\ngoal (3 subgoals):\n 1. \\<And>a b xl.\n       \\<lbrakk>generate_topology BR a;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl a\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        generate_topology BR b;\n        \\<And>xl.\n           \\<lbrakk>rel_set (rel_set A) BL BR; rel_set A xl b\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (a \\<inter> b)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 2. \\<And>K xl.\n       \\<lbrakk>\\<And>k. k \\<in> K \\<Longrightarrow> generate_topology BR k;\n        \\<And>k xl.\n           \\<lbrakk>k \\<in> K; rel_set (rel_set A) BL BR;\n            rel_set A xl k\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 3. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "from assms(2)"], ["proof (chain)\npicking this:\n  right_total A", "obtain a where a: \"rel_set A a a'\""], ["proof (prove)\nusing this:\n  right_total A\n\ngoal (1 subgoal):\n 1. (\\<And>a. rel_set A a a' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson right_totalE right_total_rel_set)"], ["proof (state)\nthis:\n  rel_set A a a'\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "from assms(2)"], ["proof (chain)\npicking this:\n  right_total A", "obtain b where b: \"rel_set A b b'\""], ["proof (prove)\nusing this:\n  right_total A\n\ngoal (1 subgoal):\n 1. (\\<And>b. rel_set A b b' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson right_totalE right_total_rel_set)"], ["proof (state)\nthis:\n  rel_set A b b'\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "from Int.prems(1) a"], ["proof (chain)\npicking this:\n  rel_set (rel_set A) BL BR\n  rel_set A a a'", "have gto_a: \n        \"generate_topology_on BL {x. Domainp A x} a\""], ["proof (prove)\nusing this:\n  rel_set (rel_set A) BL BR\n  rel_set A a a'\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> a", "by (rule Int.IH(1))"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> a\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "from Int.prems(1) b"], ["proof (chain)\npicking this:\n  rel_set (rel_set A) BL BR\n  rel_set A b b'", "have gto_b: \n        \"generate_topology_on BL {x. Domainp A x} b\""], ["proof (prove)\nusing this:\n  rel_set (rel_set A) BL BR\n  rel_set A b b'\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> b", "by (rule Int.IH(2))"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> b\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "from a"], ["proof (chain)\npicking this:\n  rel_set A a a'", "have a_ss_DT: \"a \\<subseteq> {x. Domainp A x}\""], ["proof (prove)\nusing this:\n  rel_set A a a'\n\ngoal (1 subgoal):\n 1. a \\<subseteq> {x. Domainp A x}", "by auto (meson Domainp.DomainI rel_setD1)"], ["proof (state)\nthis:\n  a \\<subseteq> {x. Domainp A x}\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "from b"], ["proof (chain)\npicking this:\n  rel_set A b b'", "have b_ss_DT: \"b \\<subseteq> {x. Domainp A x}\""], ["proof (prove)\nusing this:\n  rel_set A b b'\n\ngoal (1 subgoal):\n 1. b \\<subseteq> {x. Domainp A x}", "by auto (meson Domainp.DomainI rel_setD1)"], ["proof (state)\nthis:\n  b \\<subseteq> {x. Domainp A x}\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "from gto_a gto_b a_ss_DT b_ss_DT"], ["proof (chain)\npicking this:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> a\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> b\n  a \\<subseteq> {x. Domainp A x}\n  b \\<subseteq> {x. Domainp A x}", "have \n        \"generate_topology_on BL {x. Domainp A x} (a \\<inter> b)\""], ["proof (prove)\nusing this:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> a\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> b\n  a \\<subseteq> {x. Domainp A x}\n  b \\<subseteq> {x. Domainp A x}\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> (a \\<inter> b)", "by (rule generate_topology_on.Int)"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> (a \\<inter> b)\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "also"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> (a \\<inter> b)\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "from assms(1) a b Int.prems(2)"], ["proof (chain)\npicking this:\n  bi_unique A\n  rel_set A a a'\n  rel_set A b b'\n  rel_set A xl (a' \\<inter> b')", "have \"a \\<inter> b = xl\""], ["proof (prove)\nusing this:\n  bi_unique A\n  rel_set A a a'\n  rel_set A b b'\n  rel_set A xl (a' \\<inter> b')\n\ngoal (1 subgoal):\n 1. a \\<inter> b = xl", "by (rule bi_unique_intersect_l)"], ["proof (state)\nthis:\n  a \\<inter> b = xl\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "ultimately"], ["proof (chain)\npicking this:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> (a \\<inter> b)\n  a \\<inter> b = xl", "show \"generate_topology_on BL {a. Domainp A a} xl\""], ["proof (prove)\nusing this:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> (a \\<inter> b)\n  a \\<inter> b = xl\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "by simp"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {a. Domainp A\na} : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {a. Domainp A\na} : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal (2 subgoals):\n 1. \\<And>K xl.\n       \\<lbrakk>\\<And>k. k \\<in> K \\<Longrightarrow> generate_topology BR k;\n        \\<And>k xl.\n           \\<lbrakk>k \\<in> K; rel_set (rel_set A) BL BR;\n            rel_set A xl k\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 2. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>K xl.\n       \\<lbrakk>\\<And>k. k \\<in> K \\<Longrightarrow> generate_topology BR k;\n        \\<And>k xl.\n           \\<lbrakk>k \\<in> K; rel_set (rel_set A) BL BR;\n            rel_set A xl k\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 2. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "case (UN K')"], ["proof (state)\nthis:\n  ?k \\<in> K' \\<Longrightarrow> generate_topology BR ?k\n  \\<lbrakk>?k \\<in> K'; rel_set (rel_set A) BL BR; rel_set A ?xl ?k\\<rbrakk>\n  \\<Longrightarrow> in_topology_generated_by BL on {a.\n              Domainp A a} : \\<guillemotleft>open\\<guillemotright> ?xl\n  rel_set (rel_set A) BL BR\n  rel_set A xl (\\<Union> K')\n\ngoal (2 subgoals):\n 1. \\<And>K xl.\n       \\<lbrakk>\\<And>k. k \\<in> K \\<Longrightarrow> generate_topology BR k;\n        \\<And>k xl.\n           \\<lbrakk>k \\<in> K; rel_set (rel_set A) BL BR;\n            rel_set A xl k\\<rbrakk>\n           \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                        (Domainp\n                          A)) : \\<guillemotleft>open\\<guillemotright> xl;\n        rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K)\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl\n 2. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "thus ?case"], ["proof (prove)\nusing this:\n  ?k \\<in> K' \\<Longrightarrow> generate_topology BR ?k\n  \\<lbrakk>?k \\<in> K'; rel_set (rel_set A) BL BR; rel_set A ?xl ?k\\<rbrakk>\n  \\<Longrightarrow> in_topology_generated_by BL on {a.\n              Domainp A a} : \\<guillemotleft>open\\<guillemotright> ?xl\n  rel_set (rel_set A) BL BR\n  rel_set A xl (\\<Union> K')\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "define K where K: \"K = {(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K'\" \n        (is \"K = ?K\")"], ["proof (state)\nthis:\n  K = {(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "from assms(2)"], ["proof (chain)\npicking this:\n  right_total A", "have Union_ss_CRT: \"\\<Union>K' \\<subseteq> Collect (Rangep A)\""], ["proof (prove)\nusing this:\n  right_total A\n\ngoal (1 subgoal):\n 1. \\<Union> K' \\<subseteq> Collect (Rangep A)", "by (auto simp add: Domainp_iff right_total_def)"], ["proof (state)\nthis:\n  \\<Union> K' \\<subseteq> Collect (Rangep A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "from assms(1) Union_ss_CRT UN.prems(2)"], ["proof (chain)\npicking this:\n  bi_unique A\n  \\<Union> K' \\<subseteq> Collect (Rangep A)\n  rel_set A xl (\\<Union> K')", "have \"\\<Union>?K = xl\""], ["proof (prove)\nusing this:\n  bi_unique A\n  \\<Union> K' \\<subseteq> Collect (Rangep A)\n  rel_set A xl (\\<Union> K')\n\ngoal (1 subgoal):\n 1. \\<Union> ({(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K') = xl", "by (rule bi_unique_Union_l)"], ["proof (state)\nthis:\n  \\<Union> ({(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K') = xl\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "then"], ["proof (chain)\npicking this:\n  \\<Union> ({(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K') = xl", "have UK_eq_xr: \"\\<Union>K = xl\""], ["proof (prove)\nusing this:\n  \\<Union> ({(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K') = xl\n\ngoal (1 subgoal):\n 1. \\<Union> K = xl", "unfolding K"], ["proof (prove)\nusing this:\n  \\<Union> ({(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K') = xl\n\ngoal (1 subgoal):\n 1. \\<Union> ({(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K') = xl", "."], ["proof (state)\nthis:\n  \\<Union> K = xl\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "then"], ["proof (chain)\npicking this:\n  \\<Union> K = xl", "have \"K \\<subseteq> Pow xl\""], ["proof (prove)\nusing this:\n  \\<Union> K = xl\n\ngoal (1 subgoal):\n 1. K \\<subseteq> Pow xl", "by blast"], ["proof (state)\nthis:\n  K \\<subseteq> Pow xl\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "moreover"], ["proof (state)\nthis:\n  K \\<subseteq> Pow xl\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "from UN.prems(2)"], ["proof (chain)\npicking this:\n  rel_set A xl (\\<Union> K')", "have \"xl \\<subseteq> {x. Domainp A x}\""], ["proof (prove)\nusing this:\n  rel_set A xl (\\<Union> K')\n\ngoal (1 subgoal):\n 1. xl \\<subseteq> {x. Domainp A x}", "unfolding rel_set_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>xl. Bex (\\<Union> K') (A x)) \\<and>\n  (\\<forall>y\\<in>\\<Union> K'. \\<exists>x\\<in>xl. A x y)\n\ngoal (1 subgoal):\n 1. xl \\<subseteq> {x. Domainp A x}", "by blast"], ["proof (state)\nthis:\n  xl \\<subseteq> {x. Domainp A x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "ultimately"], ["proof (chain)\npicking this:\n  K \\<subseteq> Pow xl\n  xl \\<subseteq> {x. Domainp A x}", "have UN_prem_1: \"K \\<subseteq> Pow {x. Domainp A x}\""], ["proof (prove)\nusing this:\n  K \\<subseteq> Pow xl\n  xl \\<subseteq> {x. Domainp A x}\n\ngoal (1 subgoal):\n 1. K \\<subseteq> Pow {x. Domainp A x}", "by auto"], ["proof (state)\nthis:\n  K \\<subseteq> Pow {x. Domainp A x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "have UN_prem_2:\n        \"k \\<in> K \\<Longrightarrow> generate_topology_on BL {x. Domainp A x} k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "assume k_in_K: \"k \\<in> K\""], ["proof (state)\nthis:\n  k \\<in> K\n\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "with UN_prem_1"], ["proof (chain)\npicking this:\n  K \\<subseteq> Pow {x. Domainp A x}\n  k \\<in> K", "have k_ss_DT: \"k \\<subseteq> {x. Domainp A x}\""], ["proof (prove)\nusing this:\n  K \\<subseteq> Pow {x. Domainp A x}\n  k \\<in> K\n\ngoal (1 subgoal):\n 1. k \\<subseteq> {x. Domainp A x}", "by auto"], ["proof (state)\nthis:\n  k \\<subseteq> {x. Domainp A x}\n\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "with k_in_K"], ["proof (chain)\npicking this:\n  k \\<in> K\n  k \\<subseteq> {x. Domainp A x}", "obtain k' where k': \"rel_set (\\<lambda>y x. A x y) k' k\""], ["proof (prove)\nusing this:\n  k \\<in> K\n  k \\<subseteq> {x. Domainp A x}\n\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        rel_set (\\<lambda>y x. A x y) k' k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding K Ball_Collect[symmetric]"], ["proof (prove)\nusing this:\n  k \\<in> {(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K'\n  Ball k (Domainp A)\n\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        rel_set (\\<lambda>y x. A x y) k' k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  rel_set (\\<lambda>y x. A x y) k' k\n\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "from assms(1)"], ["proof (chain)\npicking this:\n  bi_unique A", "have \"bi_unique (\\<lambda>y x. A x y)\""], ["proof (prove)\nusing this:\n  bi_unique A\n\ngoal (1 subgoal):\n 1. bi_unique (\\<lambda>y x. A x y)", "unfolding bi_unique_def"], ["proof (prove)\nusing this:\n  (\\<forall>x y z.\n      A x y \\<longrightarrow> A x z \\<longrightarrow> y = z) \\<and>\n  (\\<forall>x y z. A x z \\<longrightarrow> A y z \\<longrightarrow> x = y)\n\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        A y x \\<longrightarrow> A z x \\<longrightarrow> y = z) \\<and>\n    (\\<forall>x y z. A z x \\<longrightarrow> A z y \\<longrightarrow> x = y)", "by simp"], ["proof (state)\nthis:\n  bi_unique (\\<lambda>y x. A x y)\n\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "then"], ["proof (chain)\npicking this:\n  bi_unique (\\<lambda>y x. A x y)", "have \"bi_unique (rel_set (\\<lambda>y x. A x y))\""], ["proof (prove)\nusing this:\n  bi_unique (\\<lambda>y x. A x y)\n\ngoal (1 subgoal):\n 1. bi_unique (rel_set (\\<lambda>y x. A x y))", "by (rule bi_unique_rel_set)"], ["proof (state)\nthis:\n  bi_unique (rel_set (\\<lambda>y x. A x y))\n\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "with k'"], ["proof (chain)\npicking this:\n  rel_set (\\<lambda>y x. A x y) k' k\n  bi_unique (rel_set (\\<lambda>y x. A x y))", "have \"\\<exists>!k'. rel_set (\\<lambda>y x. A x y) k' k\""], ["proof (prove)\nusing this:\n  rel_set (\\<lambda>y x. A x y) k' k\n  bi_unique (rel_set (\\<lambda>y x. A x y))\n\ngoal (1 subgoal):\n 1. \\<exists>!k'. rel_set (\\<lambda>y x. A x y) k' k", "by (meson bi_uniqueDl)"], ["proof (state)\nthis:\n  \\<exists>!k'. rel_set (\\<lambda>y x. A x y) k' k\n\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "with k_in_K k'"], ["proof (chain)\npicking this:\n  k \\<in> K\n  rel_set (\\<lambda>y x. A x y) k' k\n  \\<exists>!k'. rel_set (\\<lambda>y x. A x y) k' k", "have k'_in_K': \"k' \\<in> K'\""], ["proof (prove)\nusing this:\n  k \\<in> K\n  rel_set (\\<lambda>y x. A x y) k' k\n  \\<exists>!k'. rel_set (\\<lambda>y x. A x y) k' k\n\ngoal (1 subgoal):\n 1. k' \\<in> K'", "unfolding K"], ["proof (prove)\nusing this:\n  k \\<in> {(x, y). rel_set (\\<lambda>y x. A x y) x y} `` K'\n  rel_set (\\<lambda>y x. A x y) k' k\n  \\<exists>!k'. rel_set (\\<lambda>y x. A x y) k' k\n\ngoal (1 subgoal):\n 1. k' \\<in> K'", "by blast"], ["proof (state)\nthis:\n  k' \\<in> K'\n\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "from k'"], ["proof (chain)\npicking this:\n  rel_set (\\<lambda>y x. A x y) k' k", "have rsT_kk': \"rel_set A k k'\""], ["proof (prove)\nusing this:\n  rel_set (\\<lambda>y x. A x y) k' k\n\ngoal (1 subgoal):\n 1. rel_set A k k'", "unfolding rel_set_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>k'. \\<exists>xa\\<in>k. A xa x) \\<and>\n  (\\<forall>y\\<in>k. Bex k' (A y))\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>k. Bex k' (A x)) \\<and>\n    (\\<forall>y\\<in>k'. \\<exists>x\\<in>k. A x y)", "by auto"], ["proof (state)\nthis:\n  rel_set A k k'\n\ngoal (1 subgoal):\n 1. k \\<in> K \\<Longrightarrow>\n    in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "from k'_in_K' UN.prems(1) rsT_kk'"], ["proof (chain)\npicking this:\n  k' \\<in> K'\n  rel_set (rel_set A) BL BR\n  rel_set A k k'", "show \n          \"generate_topology_on BL {x. Domainp A x} k\""], ["proof (prove)\nusing this:\n  k' \\<in> K'\n  rel_set (rel_set A) BL BR\n  rel_set A k k'\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> k", "by (rule UN.IH)"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?k \\<in> K \\<Longrightarrow>\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> ?k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "from UN_prem_1 UN_prem_2"], ["proof (chain)\npicking this:\n  K \\<subseteq> Pow {x. Domainp A x}\n  ?k \\<in> K \\<Longrightarrow>\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> ?k", "have \n        \"generate_topology_on BL {x. Domainp A x} (\\<Union>K)\""], ["proof (prove)\nusing this:\n  K \\<subseteq> Pow {x. Domainp A x}\n  ?k \\<in> K \\<Longrightarrow>\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> ?k\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {x. Domainp A\n  x} : \\<guillemotleft>open\\<guillemotright> (\\<Union> K)", "by (rule generate_topology_on.UN)"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> (\\<Union> K)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k. k \\<in> K' \\<Longrightarrow> generate_topology BR k;\n     \\<And>k xl.\n        \\<lbrakk>k \\<in> K'; rel_set (rel_set A) BL BR;\n         rel_set A xl k\\<rbrakk>\n        \\<Longrightarrow> in_topology_generated_by BL on {a.\n                    Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl;\n     rel_set (rel_set A) BL BR; rel_set A xl (\\<Union> K')\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "with UK_eq_xr"], ["proof (chain)\npicking this:\n  \\<Union> K = xl\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> (\\<Union> K)", "show \"generate_topology_on BL {a. Domainp A a} xl\""], ["proof (prove)\nusing this:\n  \\<Union> K = xl\n  in_topology_generated_by BL on {x. Domainp A\nx} : \\<guillemotleft>open\\<guillemotright> (\\<Union> K)\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "by simp"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {a. Domainp A\na} : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {a. Domainp A\na} : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal (1 subgoal):\n 1. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "case (Basis xr)"], ["proof (state)\nthis:\n  xr \\<in> BR\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n\ngoal (1 subgoal):\n 1. \\<And>s xl.\n       \\<lbrakk>s \\<in> BR; rel_set (rel_set A) BL BR;\n        rel_set A xl s\\<rbrakk>\n       \\<Longrightarrow> in_topology_generated_by BL on (Collect\n                    (Domainp A)) : \\<guillemotleft>open\\<guillemotright> xl", "thus ?case"], ["proof (prove)\nusing this:\n  xr \\<in> BR\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xr \\<in> BR; rel_set (rel_set A) BL BR;\n     rel_set A xl xr\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "assume xr_in_BR: \"xr \\<in> BR\" \n        and rsrsT_BL_BR: \"rel_set (rel_set A) BL BR\" \n        and rsT_xl_xr: \"rel_set A xl xr\""], ["proof (state)\nthis:\n  xr \\<in> BR\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xr \\<in> BR; rel_set (rel_set A) BL BR;\n     rel_set A xl xr\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "with assms(1)"], ["proof (chain)\npicking this:\n  bi_unique A\n  xr \\<in> BR\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr", "have \"xl \\<in> BL\""], ["proof (prove)\nusing this:\n  bi_unique A\n  xr \\<in> BR\n  rel_set (rel_set A) BL BR\n  rel_set A xl xr\n\ngoal (1 subgoal):\n 1. xl \\<in> BL", "by (metis bi_uniqueDl bi_unique_rel_set rel_setD2)"], ["proof (state)\nthis:\n  xl \\<in> BL\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xr \\<in> BR; rel_set (rel_set A) BL BR;\n     rel_set A xl xr\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "also"], ["proof (state)\nthis:\n  xl \\<in> BL\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xr \\<in> BR; rel_set (rel_set A) BL BR;\n     rel_set A xl xr\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "with rsrsT_BL_BR"], ["proof (chain)\npicking this:\n  rel_set (rel_set A) BL BR\n  xl \\<in> BL", "have \"xl \\<subseteq> {a. Domainp A a}\""], ["proof (prove)\nusing this:\n  rel_set (rel_set A) BL BR\n  xl \\<in> BL\n\ngoal (1 subgoal):\n 1. xl \\<subseteq> {a. Domainp A a}", "unfolding Ball_Collect[symmetric]"], ["proof (prove)\nusing this:\n  rel_set (rel_set A) BL BR\n  xl \\<in> BL\n\ngoal (1 subgoal):\n 1. Ball xl (Domainp A)", "by (meson Domainp.DomainI rel_setD1)"], ["proof (state)\nthis:\n  xl \\<subseteq> {a. Domainp A a}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xr \\<in> BR; rel_set (rel_set A) BL BR;\n     rel_set A xl xr\\<rbrakk>\n    \\<Longrightarrow> in_topology_generated_by BL on {a.\n                Domainp A a} : \\<guillemotleft>open\\<guillemotright> xl", "ultimately"], ["proof (chain)\npicking this:\n  xl \\<in> BL\n  xl \\<subseteq> {a. Domainp A a}", "show \"generate_topology_on BL {a. Domainp A a} xl\""], ["proof (prove)\nusing this:\n  xl \\<in> BL\n  xl \\<subseteq> {a. Domainp A a}\n\ngoal (1 subgoal):\n 1. in_topology_generated_by BL on {a. Domainp A\n  a} : \\<guillemotleft>open\\<guillemotright> xl", "by (rule generate_topology_on.Basis)"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {a. Domainp A\na} : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  in_topology_generated_by BL on {a. Domainp A\na} : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  in_topology_generated_by BL on (Collect\n                                   (Domainp\n                                     A)) : \\<guillemotleft>open\\<guillemotright> xl\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma topological_basis_with_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((rel_set A ===> (=)) ===> (rel_set (rel_set A)) ===> (=)) \n      (topological_basis_ow (Collect (Domainp A))) topological_basis_with\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((rel_set A ===> (=)) ===> rel_set (rel_set A) ===> (=))\n     (topological_basis_ow (Collect (Domainp A))) topological_basis_with", "unfolding topological_basis_ow_def topological_basis_with_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((rel_set A ===> (=)) ===> rel_set (rel_set A) ===> (=))\n     (\\<lambda>\\<tau> B.\n         \\<Union> B = Collect (Domainp A) \\<and>\n         Ball B \\<tau> \\<and>\n         (\\<forall>q\\<subseteq>Collect (Domainp A).\n             \\<tau> q \\<longrightarrow>\n             (\\<exists>B'\\<subseteq>B. \\<Union> B' = q)))\n     (\\<lambda>\\<tau> B.\n         \\<Union> B = UNIV \\<and>\n         Ball B \\<tau> \\<and>\n         (\\<forall>q.\n             \\<tau> q \\<longrightarrow>\n             (\\<exists>B'\\<subseteq>B. \\<Union> B' = q)))", "apply transfer_prover_start"], ["proof (prove)\ngoal (14 subgoals):\n 1. Transfer.Rel (?Ro24 ===> ?Rs24) ?al24 \\<Union>\n 2. Transfer.Rel (?Rs24 ===> rel_set A ===> ?Rr24) ?ak24 (=)\n 3. Transfer.Rel (?Ro24 ===> rel_set (rel_set A) ===> ?Rq24) ?aj24\n     (\\<subseteq>)\n 4. Transfer.Rel (?Rq24 ===> ?Rr24 ===> ?Rp24) ?ai24 (\\<and>)\n 5. Transfer.Rel ((?Ro24 ===> ?Rp24) ===> ?Rn24) ?ah24 Ex\n 6. Transfer.Rel ((=) ===> ?Rn24 ===> ?Rm24) ?ag24 (\\<longrightarrow>)\n 7. Transfer.Rel ((rel_set A ===> ?Rm24) ===> ?Rl24) ?af24 All\n 8. Transfer.Rel (rel_set (rel_set A) ===> (rel_set A ===> (=)) ===> ?Rk24)\n     ?ae24 Ball\n 9. Transfer.Rel (?Rk24 ===> ?Rl24 ===> ?Rg24) ?ad24 (\\<and>)\n 10. Transfer.Rel ?Rj24 ?ac24 UNIV\nA total of 14 subgoals...", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<tau> B.\n        \\<Union> B = Collect (Domainp A) \\<and>\n        Ball B \\<tau> \\<and>\n        (\\<forall>q\\<subseteq>Collect (Domainp A).\n            \\<tau> q \\<longrightarrow>\n            (\\<exists>B'\\<subseteq>B. \\<Union> B' = q))) =\n    (\\<lambda>\\<tau> B.\n        \\<Union> B = Collect (Domainp A) \\<and>\n        Ball B \\<tau> \\<and>\n        (\\<forall>q\\<in>{Aa. Ball Aa (Domainp A)}.\n            \\<tau> q \\<longrightarrow>\n            (\\<exists>B'\\<in>{Aa. \\<forall>Aa\\<in>Aa. Ball Aa (Domainp A)}.\n                B' \\<subseteq> B \\<and> \\<Union> B' = q)))", "unfolding Ball_Collect[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<tau> B.\n        \\<Union> B = Collect (Domainp A) \\<and>\n        Ball B \\<tau> \\<and>\n        (\\<forall>q.\n            Ball q (Domainp A) \\<longrightarrow>\n            \\<tau> q \\<longrightarrow>\n            (\\<exists>B'\\<subseteq>B. \\<Union> B' = q))) =\n    (\\<lambda>\\<tau> B.\n        \\<Union> B = Collect (Domainp A) \\<and>\n        Ball B \\<tau> \\<and>\n        (\\<forall>q\\<in>{Aa. Ball Aa (Domainp A)}.\n            \\<tau> q \\<longrightarrow>\n            (\\<exists>B'\\<in>{Aa. \\<forall>Aa\\<in>Aa. Ball Aa (Domainp A)}.\n                B' \\<subseteq> B \\<and> \\<Union> B' = q)))", "apply(clarsimp, intro ext iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<tau> B.\n       \\<Union> B = Collect (Domainp A) \\<and>\n       (\\<forall>x\\<in>B. \\<tau> x) \\<and>\n       (\\<forall>q.\n           (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n           \\<tau> q \\<longrightarrow>\n           (\\<exists>B'\\<subseteq>B. \\<Union> B' = q)) \\<Longrightarrow>\n       \\<Union> B = Collect (Domainp A) \\<and>\n       (\\<forall>x\\<in>B. \\<tau> x) \\<and>\n       (\\<forall>q.\n           (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n           \\<tau> q \\<longrightarrow>\n           (\\<exists>B'.\n               (\\<forall>Aa\\<in>B'. \\<forall>x\\<in>Aa. Domainp A x) \\<and>\n               B' \\<subseteq> B \\<and> \\<Union> B' = q))\n 2. \\<And>\\<tau> B.\n       \\<Union> B = Collect (Domainp A) \\<and>\n       (\\<forall>x\\<in>B. \\<tau> x) \\<and>\n       (\\<forall>q.\n           (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n           \\<tau> q \\<longrightarrow>\n           (\\<exists>B'.\n               (\\<forall>Aa\\<in>B'. \\<forall>x\\<in>Aa. Domainp A x) \\<and>\n               B' \\<subseteq> B \\<and> \\<Union> B' = q)) \\<Longrightarrow>\n       \\<Union> B = Collect (Domainp A) \\<and>\n       (\\<forall>x\\<in>B. \\<tau> x) \\<and>\n       (\\<forall>q.\n           (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n           \\<tau> q \\<longrightarrow>\n           (\\<exists>B'\\<subseteq>B. \\<Union> B' = q))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> B_ = Collect (Domainp A) \\<and>\n    (\\<forall>x\\<in>B_. \\<tau>_ x) \\<and>\n    (\\<forall>q.\n        (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n        \\<tau>_ q \\<longrightarrow>\n        (\\<exists>B'\\<subseteq>B_. \\<Union> B' = q)) \\<Longrightarrow>\n    \\<Union> B_ = Collect (Domainp A) \\<and>\n    (\\<forall>x\\<in>B_. \\<tau>_ x) \\<and>\n    (\\<forall>q.\n        (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n        \\<tau>_ q \\<longrightarrow>\n        (\\<exists>B'.\n            (\\<forall>Aa\\<in>B'. \\<forall>x\\<in>Aa. Domainp A x) \\<and>\n            B' \\<subseteq> B_ \\<and> \\<Union> B' = q))", "by (metis UnionI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau> B.\n       \\<Union> B = Collect (Domainp A) \\<and>\n       (\\<forall>x\\<in>B. \\<tau> x) \\<and>\n       (\\<forall>q.\n           (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n           \\<tau> q \\<longrightarrow>\n           (\\<exists>B'.\n               (\\<forall>Aa\\<in>B'. \\<forall>x\\<in>Aa. Domainp A x) \\<and>\n               B' \\<subseteq> B \\<and> \\<Union> B' = q)) \\<Longrightarrow>\n       \\<Union> B = Collect (Domainp A) \\<and>\n       (\\<forall>x\\<in>B. \\<tau> x) \\<and>\n       (\\<forall>q.\n           (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n           \\<tau> q \\<longrightarrow>\n           (\\<exists>B'\\<subseteq>B. \\<Union> B' = q))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> B_ = Collect (Domainp A) \\<and>\n    (\\<forall>x\\<in>B_. \\<tau>_ x) \\<and>\n    (\\<forall>q.\n        (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n        \\<tau>_ q \\<longrightarrow>\n        (\\<exists>B'.\n            (\\<forall>Aa\\<in>B'. \\<forall>x\\<in>Aa. Domainp A x) \\<and>\n            B' \\<subseteq> B_ \\<and> \\<Union> B' = q)) \\<Longrightarrow>\n    \\<Union> B_ = Collect (Domainp A) \\<and>\n    (\\<forall>x\\<in>B_. \\<tau>_ x) \\<and>\n    (\\<forall>q.\n        (\\<forall>x\\<in>q. Domainp A x) \\<longrightarrow>\n        \\<tau>_ q \\<longrightarrow>\n        (\\<exists>B'\\<subseteq>B_. \\<Union> B' = q))", "by metis"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "subsection\\<open>Relativization\\<close>"], ["", "tts_context\n  tts: (?'a to \\<open>U\\<^sub>1::'a set\\<close>) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\nbegin"], ["", "tts_lemma generate_topology_Union:\n  assumes \"U\\<^sub>1 \\<noteq> {}\"\n    and \"U\\<^sub>2 \\<noteq> {}\"\n    and \"I \\<subseteq> U\\<^sub>1\"\n    and \"S \\<subseteq> Pow U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>1. K (x::'a) \\<subseteq> U\\<^sub>2\"\n    and \n      \"\\<And>k. \\<lbrakk>k \\<in> U\\<^sub>1; k \\<in> I\\<rbrakk> \\<Longrightarrow> \n        in_topology_generated_by S on U\\<^sub>2 : \\<guillemotleft>open\\<guillemotright> (K k)\"\n  shows \"in_topology_generated_by S on U\\<^sub>2 : \\<guillemotleft>open\\<guillemotright> (\\<Union> (K ` I))\"\n    is generate_topology_Union"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to \\<open>U::'a set\\<close>)\n  rewriting ctr_simps\n  eliminating through\n    (unfold topological_space_ow_def; auto intro: generate_topology_on.intros)\nbegin"], ["", "tts_lemma topological_space_generate_topology:\n  shows \"topological_space_ow U (generate_topology_on S U)\"\n    is topological_space_generate_topology"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "context topological_space_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating through (metis open_UNIV)\nbegin"], ["", "tts_lemma open_empty[simp]:\n  shows \"\\<tau> {}\"\n    is topological_space_class.open_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating through \n    (\n      unfold \n        closed_ow_def \n        compact_ow_def\n        connected_ow_def \n        interior_ow_def \n        closure_ow_def\n        frontier_ow_def, \n      auto\n    )\nbegin"], ["", "tts_lemma closed_empty[simp]: \"closed {}\"\n  is topological_space_class.closed_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_UNIV[simp]: \"closed U\"\n  is topological_space_class.closed_UNIV"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma compact_empty[simp]: \"compact {}\"\n  is topological_space_class.compact_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma connected_empty[simp]: \"connected {}\"\n  is topological_space_class.connected_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_empty[simp]: \"interior {} = {}\"\n  is interior_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_empty[simp]: \"closure {} = {}\"\n  is closure_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_UNIV[simp]: \"closure U = U\"\n  is closure_UNIV"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_empty[simp]: \"frontier {} = {}\"\n  is frontier_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_UNIV[simp]: \"frontier U = {}\"\n  is frontier_UNIV"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating through (auto simp: UNIV inj_on_def)\nbegin"], ["", "tts_lemma connected_Union:\n  assumes \"S \\<subseteq> Pow U\" and \"\\<And>s. s \\<in> S \\<Longrightarrow> connected s\" and \"\\<Inter> S \\<inter> U \\<noteq> {}\"\n  shows \"connected (\\<Union> S)\"\n    given Topological_Spaces.connected_Union"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> Pow U;\n     \\<And>s. s \\<in> S \\<Longrightarrow> local.connected s;\n     \\<Inter> S \\<inter> U \\<noteq> {};\n     \\<And>S.\n        \\<lbrakk>S \\<subseteq> Pow U;\n         \\<And>s.\n            \\<lbrakk>s \\<subseteq> U; s \\<in> S\\<rbrakk>\n            \\<Longrightarrow> local.connected s;\n         \\<Inter> S \\<inter> U \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> local.connected (\\<Union> S)\\<rbrakk>\n    \\<Longrightarrow> local.connected (\\<Union> S)", "by simp"], ["", "tts_lemma connected_Un:\n  assumes \"s \\<subseteq> U\"\n    and \"t \\<subseteq> U\"\n    and \"connected s\"\n    and \"connected t\"\n    and \"s \\<inter> t \\<noteq> {}\"\n  shows \"connected (s \\<union> t)\"\n    is Topological_Spaces.connected_Un"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> and \\<open>?A \\<subseteq> ?B\\<close>\n  through (auto simp: UNIV inj_on_def)\nbegin"], ["", "tts_lemma connected_sing:\n  assumes \"x \\<in> U\"\n  shows \"connected {x}\"\n  is topological_space_class.connected_sing"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma topological_basisE:\n  assumes \"B \\<subseteq> Pow U\"\n    and \"O' \\<subseteq> U\"\n    and \"x \\<in> U\"\n    and \"on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B\"\n    and \"\\<tau> O'\"\n    and \"x \\<in> O'\"\n    and \"\\<And>B'. \\<lbrakk>B' \\<subseteq> U; B' \\<in> B; x \\<in> B'; B' \\<subseteq> O'\\<rbrakk> \\<Longrightarrow> thesis\"\n  shows thesis\nis topological_space_class.topological_basisE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma islimptE:\n  assumes \"x \\<in> U\"\n    and \"S \\<subseteq> U\"\n    and \"T \\<subseteq> U\"\n    and \"x \\<guillemotleft>islimpt\\<guillemotright> S\"\n    and \"x \\<in> T\"\n    and \"\\<tau> T\"\n    and \"\\<And>y. \\<lbrakk>y \\<in> U; y \\<in> S; y \\<in> T; y \\<noteq> x\\<rbrakk> \\<Longrightarrow> thesis\"\n  shows thesis\n    is Elementary_Topology.islimptE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma islimpt_subset:\n  assumes \"x \\<in> U\" and \"T \\<subseteq> U\" and \"x \\<guillemotleft>islimpt\\<guillemotright> S\" and \"S \\<subseteq> T\"\n  shows \"x \\<guillemotleft>islimpt\\<guillemotright> T\"\n    is Elementary_Topology.islimpt_subset"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma islimpt_UNIV_iff:\n  assumes \"x \\<in> U\"\n  shows \"x \\<guillemotleft>islimpt\\<guillemotright> U = (\\<not> \\<tau> {x})\"\n    is Elementary_Topology.islimpt_UNIV_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma islimpt_punctured:\n  assumes \"x \\<in> U\" and \"S \\<subseteq> U\"\n  shows \"x \\<guillemotleft>islimpt\\<guillemotright> S = x \\<guillemotleft>islimpt\\<guillemotright> S - {x}\"\n    is Elementary_Topology.islimpt_punctured"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma islimpt_EMPTY:\n  assumes \"x \\<in> U\"\n  shows \"\\<not> x \\<guillemotleft>islimpt\\<guillemotright> {}\"\n    is Elementary_Topology.islimpt_EMPTY"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma islimpt_Un:\n  assumes \"x \\<in> U\" and \"S \\<subseteq> U\" and \"T \\<subseteq> U\"\n  shows \"x \\<guillemotleft>islimpt\\<guillemotright> S \\<union> T = (x \\<guillemotleft>islimpt\\<guillemotright> S \\<or> x \\<guillemotleft>islimpt\\<guillemotright> T)\"\n    is Elementary_Topology.islimpt_Un"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interiorI:\n  assumes \"x \\<in> U\" and \"S \\<subseteq> U\" and \"\\<tau> T\" and \"x \\<in> T\" and \"T \\<subseteq> S\"\n  shows \"x \\<in> interior S\"\n    is Elementary_Topology.interiorI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma islimpt_in_closure:\n  assumes \"x \\<in> U\" and \"S \\<subseteq> U\"\n  shows \"x \\<guillemotleft>islimpt\\<guillemotright> S = (x \\<in> closure (S - {x}))\"\n    is Elementary_Topology.islimpt_in_closure"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma compact_sing:\n  assumes \"a \\<in> U\"\n  shows \"compact {a}\"\n    is Elementary_Topology.compact_sing"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma compact_insert:\n  assumes \"s \\<subseteq> U\" and \"x \\<in> U\" and \"compact s\"\n  shows \"compact (insert x s)\"\n    is Elementary_Topology.compact_insert"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Un:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"\\<tau> S\" and \"\\<tau> T\"\n  shows \"\\<tau> (S \\<union> T)\"\n    is topological_space_class.open_Un"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Inter:\n  assumes \"S \\<subseteq> Pow U\" and \"finite S\" and \"Ball S \\<tau>\"\n  shows \"\\<tau> (\\<Inter> S \\<inter> U)\"\n    is topological_space_class.open_Inter"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma openI:\n  assumes \"S \\<subseteq> U\" and \"\\<And>x. \\<lbrakk>x \\<in> U; x \\<in> S\\<rbrakk> \\<Longrightarrow> \\<exists>y\\<subseteq>U. \\<tau> y \\<and> y \\<subseteq> S \\<and> x \\<in> y\"\n  shows \"\\<tau> S\"\n    given topological_space_class.openI"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> U;\n     \\<And>x.\n        \\<lbrakk>x \\<in> U; x \\<in> S\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y\\<subseteq>U.\n                             \\<tau> y \\<and>\n                             y \\<subseteq> S \\<and> x \\<in> y;\n     \\<And>S.\n        \\<lbrakk>S \\<subseteq> U;\n         \\<And>x.\n            \\<lbrakk>x \\<in> U; x \\<in> S\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T\\<in>Pow U.\n                                 \\<tau> T \\<and>\n                                 T \\<subseteq> S \\<and> x \\<in> T\\<rbrakk>\n        \\<Longrightarrow> \\<tau> S\\<rbrakk>\n    \\<Longrightarrow> \\<tau> S", "by (meson PowI)"], ["", "tts_lemma closed_Un:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"closed S\" and \"closed T\"\n  shows \"closed (S \\<union> T)\"\n    is topological_space_class.closed_Un"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Int:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"closed S\" and \"closed T\"\n  shows \"closed (S \\<inter> T)\"\n  is topological_space_class.closed_Int"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Collect_conj:\n  assumes \"\\<tau> {x. P x \\<and> x \\<in> U}\" and \"\\<tau> {x. Q x \\<and> x \\<in> U}\"\n  shows \"\\<tau> {x \\<in> U. P x \\<and> Q x}\"\n    is topological_space_class.open_Collect_conj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Collect_disj:\n  assumes \"\\<tau> {x. P x \\<and> x \\<in> U}\"\n    and \"\\<tau> {x. Q x \\<and> x \\<in> U}\"\n  shows \"\\<tau> {x \\<in> U. P x \\<or> Q x}\"\n    is topological_space_class.open_Collect_disj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Collect_imp:\n  assumes \"closed {x. P x \\<and> x \\<in> U}\"\n    and \"\\<tau> {x. Q x \\<and> x \\<in> U}\"\n  shows \"\\<tau> {x \\<in> U. P x \\<longrightarrow> Q x}\"\n    is topological_space_class.open_Collect_imp"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Collect_const: \"\\<tau> {x. P \\<and> x \\<in> U}\"\n    is topological_space_class.open_Collect_const"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Collect_conj:\n  assumes \"closed {x. P x \\<and> x \\<in> U}\" and \"closed {x. Q x \\<and> x \\<in> U}\"\n  shows \"closed {x \\<in> U. P x \\<and> Q x}\"\n    is topological_space_class.closed_Collect_conj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Collect_disj:\n  assumes \"closed {x. P x \\<and> x \\<in> U}\" and \"closed {x. Q x \\<and> x \\<in> U}\"\n  shows \"closed {x \\<in> U. P x \\<or> Q x}\"\n    is topological_space_class.closed_Collect_disj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Collect_imp:\n  assumes \"\\<tau> {x. P x \\<and> x \\<in> U}\" and \"closed {x. Q x \\<and> x \\<in> U}\"\n  shows \"closed {x \\<in> U. P x \\<longrightarrow> Q x}\"\n    is topological_space_class.closed_Collect_imp"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma compact_Int_closed:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"compact S\" and \"closed T\"\n  shows \"compact (S \\<inter> T)\"\n  is topological_space_class.compact_Int_closed"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma compact_diff:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"compact S\" and \"\\<tau> T\"\n  shows \"compact (S - T)\"\n  is topological_space_class.compact_diff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma connectedD:\n  assumes \"U \\<subseteq> U\"\n    and \"V \\<subseteq> U\"\n    and \"connected A\"\n    and \"\\<tau> U\"\n    and \"\\<tau> V\"\n    and \"U \\<inter> (V \\<inter> A) = {}\"\n    and \"A \\<subseteq> U \\<union> V\"\n  shows \"U \\<inter> A = {} \\<or> V \\<inter> A = {}\"\n  is topological_space_class.connectedD"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma topological_basis_open:\n  assumes \"B \\<subseteq> Pow U\" and \"on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B\" and \"X \\<in> B\"\n  shows \"\\<tau> X\"\n    is topological_space_class.topological_basis_open"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma topological_basis_imp_subbasis:\n  assumes \"B \\<subseteq> Pow U\" and \"on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B\"\n  shows \"\\<forall>s\\<subseteq>U. \\<tau> s = (in_topology_generated_by B on U : \\<guillemotleft>open\\<guillemotright> s)\"\n  is topological_space_class.topological_basis_imp_subbasis"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma connected_closedD:\n  assumes \"A \\<subseteq> U\"\n    and \"B \\<subseteq> U\"\n    and \"connected s\"\n    and \"A \\<inter> (B \\<inter> s) = {}\"\n    and \"s \\<subseteq> A \\<union> B\"\n    and \"closed A\"\n    and \"closed B\"\n  shows \"A \\<inter> s = {} \\<or> B \\<inter> s = {}\"\n    is Topological_Spaces.connected_closedD"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma connected_diff_open_from_closed:\n  assumes \"u \\<subseteq> U\"\n    and \"s \\<subseteq> t\"\n    and \"t \\<subseteq> u\"\n    and \"\\<tau> s\"\n    and \"closed t\"\n    and \"connected u\"\n    and \"connected (t - s)\"\n  shows \"connected (u - s)\"\n    is Topological_Spaces.connected_diff_open_from_closed"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_maximal:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> S\" and \"\\<tau> T\"\n  shows \"T \\<subseteq> interior S\"\n    is Elementary_Topology.interior_maximal"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_subset_interior:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"\\<tau> S\"\n  shows \"(S \\<subseteq> interior T) = (S \\<subseteq> T)\"\n    is Elementary_Topology.open_subset_interior"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_mono:\n  assumes \"T \\<subseteq> U\" and \"S \\<subseteq> T\"\n  shows \"interior S \\<subseteq> interior T\"\n    is Elementary_Topology.interior_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_Int:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\"\n  shows \"interior (S \\<inter> T) = interior S \\<inter> interior T\"\n    is Elementary_Topology.interior_Int"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_closed_Un_empty_interior:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"closed S\" and \"interior T = {}\"\n  shows \"interior (S \\<union> T) = interior S\"\n    is Elementary_Topology.interior_closed_Un_empty_interior"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma countably_compact_imp_acc_point:\n  assumes \"local.countably_compact s\"\n    and \"countable t\"\n    and \"infinite t\"\n    and \"t \\<subseteq> s\"\n  shows \"\\<exists>x\\<in>s. \\<forall>U\\<in>Pow U. \\<tau> U \\<and> x \\<in> U \\<longrightarrow> infinite (U \\<inter> t)\"\n    is Elementary_Topology.countably_compact_imp_acc_point"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> \n    through (auto simp: UNIV inj_on_def)\nbegin"], ["", "tts_lemma first_countableI:\n  assumes \"\\<A> \\<subseteq> Pow U\"\n    and \"x \\<in> U\"\n    and \"countable \\<A>\"\n    and \"\\<And>A. \\<lbrakk>A \\<in> \\<A>\\<rbrakk> \\<Longrightarrow> x \\<in> A\"\n    and \"\\<And>A. \\<lbrakk>A \\<in> \\<A>\\<rbrakk> \\<Longrightarrow> \\<tau> A\"\n    and \"\\<And>S. \\<lbrakk>\\<tau> S; x \\<in> S\\<rbrakk> \\<Longrightarrow> \\<exists>A\\<in>\\<A>. A \\<subseteq> S\"\n  shows \"\\<exists>\\<A>\\<in>{f. range f \\<subseteq> Pow U}. \n    (\\<forall>i. \\<tau> (\\<A> (i::nat)) \\<and> x \\<in> \\<A> i) \\<and> \n    (\\<forall>S\\<in>Pow U. \\<tau> S \\<and> x \\<in> S \\<longrightarrow> (\\<exists>i. \\<A> i \\<subseteq> S))\"\n    given topological_space_class.first_countableI"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<A> \\<subseteq> Pow U; x \\<in> U; countable \\<A>;\n     \\<And>A. A \\<in> \\<A> \\<Longrightarrow> x \\<in> A;\n     \\<And>A. A \\<in> \\<A> \\<Longrightarrow> \\<tau> A;\n     \\<And>S.\n        \\<lbrakk>\\<tau> S; x \\<in> S\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A\\<in>\\<A>. A \\<subseteq> S;\n     \\<And>\\<A> x.\n        \\<lbrakk>\\<A> \\<subseteq> Pow U; x \\<in> U; countable \\<A>;\n         \\<And>A.\n            \\<lbrakk>A \\<subseteq> U; A \\<in> \\<A>\\<rbrakk>\n            \\<Longrightarrow> x \\<in> A;\n         \\<And>A.\n            \\<lbrakk>A \\<subseteq> U; A \\<in> \\<A>\\<rbrakk>\n            \\<Longrightarrow> \\<tau> A;\n         \\<And>S.\n            \\<lbrakk>S \\<subseteq> U; \\<tau> S; x \\<in> S\\<rbrakk>\n            \\<Longrightarrow> \\<exists>A\\<in>\\<A>. A \\<subseteq> S\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<A>\\<in>{f. range f \\<subseteq> Pow U}.\n                             (\\<forall>i.\n                                 \\<tau> (\\<A> i) \\<and>\n                                 x \\<in> \\<A> i) \\<and>\n                             (\\<forall>S\\<in>Pow U.\n                                 \\<tau> S \\<and> x \\<in> S \\<longrightarrow>\n                                 (\\<exists>i.\n                                     \\<A> i \\<subseteq> S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<A>\\<in>{f. range f \\<subseteq> Pow U}.\n                         (\\<forall>i.\n                             \\<tau> (\\<A> i) \\<and> x \\<in> \\<A> i) \\<and>\n                         (\\<forall>S\\<in>Pow U.\n                             \\<tau> S \\<and> x \\<in> S \\<longrightarrow>\n                             (\\<exists>i. \\<A> i \\<subseteq> S))", "by auto"], ["", "tts_lemma islimptI:\n  assumes \"x \\<in> U\"\n    and \"S \\<subseteq> U\"\n    and \"\\<And>T. \\<lbrakk>x \\<in> T; \\<tau> T\\<rbrakk> \\<Longrightarrow> \\<exists>y\\<in>S. y \\<in> T \\<and> y \\<noteq> x\"\n  shows \"x \\<guillemotleft>islimpt\\<guillemotright> S\"\n    given Elementary_Topology.islimptI"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; S \\<subseteq> U;\n     \\<And>T.\n        \\<lbrakk>x \\<in> T; \\<tau> T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y\\<in>S. y \\<in> T \\<and> y \\<noteq> x;\n     \\<And>x S.\n        \\<lbrakk>x \\<in> U; S \\<subseteq> U;\n         \\<And>T.\n            \\<lbrakk>T \\<subseteq> U; x \\<in> T; \\<tau> T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>y\\<in>S.\n                                 y \\<in> T \\<and> y \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> x \\<guillemotleft>islimpt\\<guillemotright>\n                          S\\<rbrakk>\n    \\<Longrightarrow> x \\<guillemotleft>islimpt\\<guillemotright> S", "by simp"], ["", "tts_lemma interiorE:\n  assumes \"x \\<in> U\"\n    and \"S \\<subseteq> U\"\n    and \"x \\<in> interior S\"\n    and \"\\<And>T. \\<lbrakk>T \\<subseteq> U; \\<tau> T; x \\<in> T; T \\<subseteq> S\\<rbrakk> \\<Longrightarrow> thesis\"\n  shows thesis\n    is Elementary_Topology.interiorE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_iff_nhds_not_empty:\n  assumes \"x \\<in> U\" and \"X \\<subseteq> U\"\n  shows \n    \"(x \\<in> closure X) = \n      (\\<forall>y\\<subseteq>U. \\<forall>z\\<subseteq>U. z \\<subseteq> y \\<longrightarrow> \\<tau> z \\<longrightarrow> x \\<in> z \\<longrightarrow> X \\<inter> y \\<noteq> {})\"\n    given Elementary_Topology.closure_iff_nhds_not_empty"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> U; X \\<subseteq> U;\n     \\<And>x X.\n        \\<lbrakk>x \\<in> U; X \\<subseteq> U\\<rbrakk>\n        \\<Longrightarrow> (x \\<in> local.closure X) =\n                          (\\<forall>A\\<in>Pow U.\n                              \\<forall>S\\<in>Pow U.\n                                 S \\<subseteq> A \\<longrightarrow>\n                                 \\<tau> S \\<longrightarrow>\n                                 x \\<in> S \\<longrightarrow>\n                                 X \\<inter> A \\<noteq> {})\\<rbrakk>\n    \\<Longrightarrow> (x \\<in> local.closure X) =\n                      (\\<forall>y\\<subseteq>U.\n                          \\<forall>z\\<subseteq>U.\n                             z \\<subseteq> y \\<longrightarrow>\n                             \\<tau> z \\<longrightarrow>\n                             x \\<in> z \\<longrightarrow>\n                             X \\<inter> y \\<noteq> {})", "by auto"], ["", "tts_lemma basis_dense:\n  assumes \"B \\<subseteq> Pow U\"\n    and \"\\<forall>x\\<subseteq>U. f x \\<in> U\"\n    and \"on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B\"\n    and \"\\<And>B'. \\<lbrakk>B' \\<subseteq> U; B' \\<noteq> {}\\<rbrakk> \\<Longrightarrow> f B' \\<in> B'\"\n  shows \"\\<forall>x\\<subseteq>U. \\<tau> x \\<longrightarrow> x \\<noteq> {} \\<longrightarrow> (\\<exists>y\\<in>B. f y \\<in> x)\"\n    given topological_space_class.basis_dense"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> Pow U; \\<forall>x\\<subseteq>U. f x \\<in> U;\n     on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B;\n     \\<And>B'.\n        \\<lbrakk>B' \\<subseteq> U; B' \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> f B' \\<in> B';\n     \\<And>B f.\n        \\<lbrakk>B \\<subseteq> Pow U; \\<forall>x\\<subseteq>U. f x \\<in> U;\n         on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B;\n         \\<And>B'.\n            \\<lbrakk>B' \\<subseteq> U; B' \\<noteq> {}\\<rbrakk>\n            \\<Longrightarrow> f B' \\<in> B'\\<rbrakk>\n        \\<Longrightarrow> \\<forall>X\\<in>Pow U.\n                             \\<tau> X \\<longrightarrow>\n                             X \\<noteq> {} \\<longrightarrow>\n                             (\\<exists>B'\\<in>B. f B' \\<in> X)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<subseteq>U.\n                         \\<tau> x \\<longrightarrow>\n                         x \\<noteq> {} \\<longrightarrow>\n                         (\\<exists>y\\<in>B. f y \\<in> x)", "by auto"], ["", "tts_lemma inj_setminus:\n  assumes \"A \\<subseteq> Pow U\"\n  shows \"inj_on (\\<lambda>S. - S \\<inter> U) A\"\n    is topological_space_class.inj_setminus"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> and \\<open>?S \\<subseteq> U\\<close> through\n    (\n      unfold \n        closed_ow_def \n        compact_ow_def   \n        connected_ow_def \n        interior_ow_def\n        topological_basis_ow_def\n        closure_ow_def \n        frontier_ow_def\n        countably_compact_ow_def,\n      auto \n    )      \nbegin"], ["", "tts_lemma closed_Inter:\n  assumes \"K \\<subseteq> Pow U\" and \"Ball K closed\"\n  shows \"closed (\\<Inter> K \\<inter> U)\"\n  is topological_space_class.closed_Inter"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Union:\n  assumes \"S \\<subseteq> Pow U\" and \"finite S\" and \"Ball S closed\"\n  shows \"closed (\\<Union> S)\"\n  is topological_space_class.closed_Union"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_closed:\n  assumes \"S \\<subseteq> U\"\n  shows \"\\<tau> S = closed (- S \\<inter> U)\"\n    is topological_space_class.open_closed"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_open:\n  shows \"closed S = \\<tau> (- S \\<inter> U)\"\n    is topological_space_class.closed_open"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Diff:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"\\<tau> S\" and \"closed T\"\n  shows \"\\<tau> (S - T)\"\n    is topological_space_class.open_Diff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Diff:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"closed S\" and \"\\<tau> T\"\n  shows \"closed (S - T)\"\n    is topological_space_class.closed_Diff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Compl:\n  assumes \"closed S\"\n  shows \"\\<tau> (- S \\<inter> U)\"\n    is topological_space_class.open_Compl"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Compl:\n  assumes \"S \\<subseteq> U\" and \"\\<tau> S\"\n  shows \"closed (- S \\<inter> U)\"\n    is topological_space_class.closed_Compl"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Collect_neg:\n  assumes \"closed {x \\<in> U. P x}\"\n  shows \"\\<tau> {x \\<in> U. \\<not> P x}\"\n    given topological_space_class.open_Collect_neg"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>local.closed {x \\<in> U. P x};\n     \\<And>P.\n        local.closed {x. P x \\<and> x \\<in> U} \\<Longrightarrow>\n        \\<tau> {x. \\<not> P x \\<and> x \\<in> U}\\<rbrakk>\n    \\<Longrightarrow> \\<tau> {x \\<in> U. \\<not> P x}", "by (simp add: ctr_simps_conj_commute)"], ["", "tts_lemma closed_Collect_neg:\n  assumes \"\\<tau> {x\\<in>U. P x}\"\n  shows \"closed {x\\<in>U. \\<not> P x}\"\n    given topological_space_class.closed_Collect_neg"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<tau> {x \\<in> U. P x};\n     \\<And>P.\n        \\<tau> {x. P x \\<and> x \\<in> U} \\<Longrightarrow>\n        local.closed {x. \\<not> P x \\<and> x \\<in> U}\\<rbrakk>\n    \\<Longrightarrow> local.closed {x \\<in> U. \\<not> P x}", "by (simp add: ctr_simps_conj_commute)"], ["", "tts_lemma closed_Collect_const: \"closed {x \\<in> U. P}\"\n  given topological_space_class.closed_Collect_const"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P. local.closed {x. P \\<and> x \\<in> U}) \\<Longrightarrow>\n    local.closed {x \\<in> U. P}", "by (simp add: ctr_simps_conj_commute)"], ["", "tts_lemma connectedI:\n  assumes \n    \"\\<And>A B. \n      \\<lbrakk>\n        A \\<subseteq> U; \n        B \\<subseteq> U; \n        \\<tau> A; \n        \\<tau> B; \n        A \\<inter> U \\<noteq> {}; \n        B \\<inter> U \\<noteq> {}; \n        A \\<inter> (B \\<inter> U) = {}; \n        U \\<subseteq> A \\<union> B\n      \\<rbrakk> \\<Longrightarrow> False\"\n  shows \"connected U\"\n    is topological_space_class.connectedI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma topological_basis:\n  assumes \"B \\<subseteq> Pow U\" \n  shows \"(on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B) = \n    (\\<forall>x\\<in>Pow U. \\<tau> x = (\\<exists>B'\\<in>Pow (Pow U). B' \\<subseteq> B \\<and> \\<Union> B' = x))\"\n    is topological_space_class.topological_basis"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma topological_basis_iff:\n  assumes \"B \\<subseteq> Pow U\" and \"\\<And>B'. \\<lbrakk>B' \\<subseteq> U; B' \\<in> B\\<rbrakk> \\<Longrightarrow> \\<tau> B'\"\n  shows \"(on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B) = \n    (\\<forall>O'\\<in>Pow U. \\<tau> O' \\<longrightarrow> (\\<forall>x\\<in>O'. \\<exists>B'\\<in>B. B' \\<subseteq> O' \\<and> x \\<in> B'))\"\n    is topological_space_class.topological_basis_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma topological_basisI:\n  assumes \"B \\<subseteq> Pow U\"\n    and \"\\<And>B'. \\<lbrakk>B' \\<subseteq> U; B' \\<in> B\\<rbrakk> \\<Longrightarrow> \\<tau> B'\"\n    and \"\\<And>O' x. \\<lbrakk>O' \\<subseteq> U; x \\<in> U; \\<tau> O'; x \\<in> O'\\<rbrakk> \\<Longrightarrow> \\<exists>y\\<in>B. y \\<subseteq> O' \\<and> x \\<in> y\"\n  shows \"on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B\"\n    is topological_space_class.topological_basisI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_closure:\n  assumes \"S \\<subseteq> U\"\n  shows \"closed (closure S)\"\n    is Elementary_Topology.closed_closure"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_subset: \"S \\<subseteq> closure S\"\n  is Elementary_Topology.closure_subset"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_eq:\n  assumes \"S \\<subseteq> U\"\n  shows \"(closure S = S) = closed S\"\n  is Elementary_Topology.closure_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_closed:\n  assumes \"S \\<subseteq> U\" and \"closed S\"\n  shows \"closure S = S\"\n    is Elementary_Topology.closure_closed"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_closure:\n  assumes \"S \\<subseteq> U\"\n  shows \"closure (closure S) = closure S\"\n  is Elementary_Topology.closure_closure"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_mono:\n  assumes \"T \\<subseteq> U\" and \"S \\<subseteq> T\"\n  shows \"closure S \\<subseteq> closure T\"\n  is Elementary_Topology.closure_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_minimal:\n  assumes \"T \\<subseteq> U\" and \"S \\<subseteq> T\" and \"closed T\"\n  shows \"closure S \\<subseteq> T\"\n  is Elementary_Topology.closure_minimal"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_unique:\n  assumes \"T \\<subseteq> U\"\n    and \"S \\<subseteq> T\"\n    and \"closed T\"\n    and \"\\<And>T'. \\<lbrakk>T' \\<subseteq> U; S \\<subseteq> T'; closed T'\\<rbrakk> \\<Longrightarrow> T \\<subseteq> T'\"\n  shows \"closure S = T\"\n  is Elementary_Topology.closure_unique"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_Un:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\"\n  shows \"closure (S \\<union> T) = closure S \\<union> closure T\"\n    is Elementary_Topology.closure_Un"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_eq_empty: \"(closure S = {}) = (S = {})\"\n  is Elementary_Topology.closure_eq_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_subset_eq:\n  assumes \"S \\<subseteq> U\"\n  shows \"(closure S \\<subseteq> S) = closed S\"\n  is Elementary_Topology.closure_subset_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Int_closure_eq_empty:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"\\<tau> S\"\n  shows \"(S \\<inter> closure T = {}) = (S \\<inter> T = {})\"\n    is Elementary_Topology.open_Int_closure_eq_empty"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Int_closure_subset:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"\\<tau> S\"\n  shows \"S \\<inter> closure T \\<subseteq> closure (S \\<inter> T)\"\n    is Elementary_Topology.open_Int_closure_subset"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_Un_frontier: \"closure S = S \\<union> frontier S\"\n  is Elementary_Topology.closure_Un_frontier"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma compact_imp_countably_compact:\n  assumes \"compact U\"\n  shows \"countably_compact U\"\n    is Elementary_Topology.compact_imp_countably_compact"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating through auto\nbegin"], ["", "tts_lemma Heine_Borel_imp_Bolzano_Weierstrass:\n  assumes \"s \\<subseteq> U\"\n    and \"local.compact s\"\n    and \"infinite t\"\n    and \"t \\<subseteq> s\"\n  shows \"\\<exists>x\\<in>s. x \\<guillemotleft>islimpt\\<guillemotright> t\"\n    is Elementary_Topology.Heine_Borel_imp_Bolzano_Weierstrass"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through\n    (\n      unfold \n        closed_ow_def \n        compact_ow_def   \n        connected_ow_def \n        interior_ow_def\n        topological_basis_ow_def\n        closure_ow_def  \n        frontier_ow_def\n        countably_compact_ow_def, \n      auto simp: connected_iff_const\n    )\nbegin"], ["", "tts_lemma connected_closed:\n  assumes \"s \\<subseteq> U\"\n  shows \"connected s = \n    (\n      \\<not>(\\<exists>A\\<in>Pow U. \\<exists>B\\<in>Pow U. \n        closed A \\<and> \n        closed B \\<and> \n        s \\<subseteq> A \\<union> B \\<and> \n        A \\<inter> (B \\<inter> s) = {} \\<and> \n        A \\<inter> s \\<noteq> {} \\<and> \n        B \\<inter> s \\<noteq> {})\n    )\"\n    is Topological_Spaces.connected_closed"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closure_complement:\n  assumes \"S \\<subseteq> U\"\n  shows \"closure (- S \\<inter> U) = - interior S \\<inter> U\"\n    is Elementary_Topology.closure_complement"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_complement:\n  assumes \"S \\<subseteq> U\"\n  shows \"interior (- S \\<inter> U) = - closure S \\<inter> U\"\n  is Elementary_Topology.interior_complement"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_diff:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\"\n  shows \"interior (S - T) = interior S - closure T\"\n  is Elementary_Topology.interior_diff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma connected_imp_connected_closure:\n  assumes \"S \\<subseteq> U\" and \"connected S\"\n  shows \"connected (closure S)\"\n    is Elementary_Topology.connected_imp_connected_closure"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_closed:\n  assumes \"S \\<subseteq> U\"\n  shows \"closed (frontier S)\"\n    is Elementary_Topology.frontier_closed"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_Int:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\"\n  shows \"frontier (S \\<inter> T) = closure (S \\<inter> T) \\<inter> (frontier S \\<union> frontier T)\"\n    is Elementary_Topology.frontier_Int"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_closures:\n  assumes \"S \\<subseteq> U\"\n  shows \"frontier S = closure S \\<inter> closure (- S \\<inter> U)\"\n    is Elementary_Topology.frontier_closures"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_Int_subset:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\"\n  shows \"frontier (S \\<inter> T) \\<subseteq> frontier S \\<union> frontier T\"\n  is Elementary_Topology.frontier_Int_subset"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_Int_closed:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\" and \"closed S\" and \"closed T\"\n  shows \"frontier (S \\<inter> T) = frontier S \\<inter> T \\<union> S \\<inter> frontier T\"\n  is Elementary_Topology.frontier_Int_closed"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_subset_closed:\n  assumes \"S \\<subseteq> U\" and \"closed S\"\n  shows \"frontier S \\<subseteq> S\"\n  is Elementary_Topology.frontier_subset_closed"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_subset_eq:\n  assumes \"S \\<subseteq> U\"\n  shows \"(frontier S \\<subseteq> S) = closed S\"\n    is Elementary_Topology.frontier_subset_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_complement:\n  assumes \"S \\<subseteq> U\"\n  shows \"frontier (- S \\<inter> U) = frontier S\"\n    is Elementary_Topology.frontier_complement"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_Un_subset:\n  assumes \"S \\<subseteq> U\" and \"T \\<subseteq> U\"\n  shows \"frontier (S \\<union> T) \\<subseteq> frontier S \\<union> frontier T\"\n  is Elementary_Topology.frontier_Un_subset"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_disjoint_eq:\n  assumes \"S \\<subseteq> U\"\n  shows \"(frontier S \\<inter> S = {}) = \\<tau> S\"\n  is Elementary_Topology.frontier_disjoint_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_interiors:\n  assumes \"s \\<subseteq> U\"\n  shows \"frontier s = - interior s \\<inter> U - interior (- s \\<inter> U)\"\nis Elementary_Topology.frontier_interiors"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma frontier_interior_subset:\n  assumes \"S \\<subseteq> U\"\n  shows \"frontier (interior S) \\<subseteq> frontier S\"\n  is Elementary_Topology.frontier_interior_subset"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma compact_Un:\n  assumes \"s \\<subseteq> U\" and \"t \\<subseteq> U\" and \"compact s\" and \"compact t\"\n  shows \"compact (s \\<union> t)\"\n  is Elementary_Topology.compact_Un"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Int_compact:\n  assumes \"s \\<subseteq> U\" and \"t \\<subseteq> U\" and \"closed s\" and \"compact t\"\n  shows \"compact (s \\<inter> t)\"\n    is Elementary_Topology.closed_Int_compact"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma countably_compact_imp_compact:\n  assumes \"U \\<subseteq> U\"\n    and \"B \\<subseteq> Pow U\"\n    and \"countably_compact U\"\n    and \"countable B\"\n    and \"Ball B \\<tau>\"\n    and \"\\<And>T x. \\<lbrakk>T \\<subseteq> U; x \\<in> U; \\<tau> T; x \\<in> T; x \\<in> U\\<rbrakk> \\<Longrightarrow> \\<exists>y\\<in>B. x \\<in> y \\<and> y \\<inter> U \\<subseteq> T\"\n  shows \"compact U\"\n    is Elementary_Topology.countably_compact_imp_compact"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through (insert closure_eq_empty, blast)\nbegin"], ["", "tts_lemma closure_interior:\n  assumes \"S \\<subseteq> U\"\n  shows \"closure S = - interior (- S \\<inter> U) \\<inter> U\"\n    is Elementary_Topology.closure_interior"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context  \n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> \n    through (insert compact_empty, fastforce dest: subset_singletonD)\nbegin"], ["", "tts_lemma compact_Union:\n  assumes \"S \\<subseteq> Pow U\"\n    and \"finite S\"\n    and \"\\<And>T. \\<lbrakk>T \\<subseteq> U; T \\<in> S\\<rbrakk> \\<Longrightarrow> compact T\"\n  shows \"compact (\\<Union> S)\"\n    is Elementary_Topology.compact_Union"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through\n    (\n      insert \n        interior_empty \n        closure_ow_def \n        closed_UNIV \n        compact_empty\n        compact_ow_def,\n      auto\n    )\nbegin"], ["", "tts_lemma compactI:\n  assumes \"s \\<subseteq> U\"\n    and \"\\<And>C. \\<lbrakk>C \\<subseteq> Pow U; Ball C \\<tau>; s \\<subseteq> \\<Union> C\\<rbrakk> \\<Longrightarrow> \n      \\<exists>x\\<subseteq>Pow U. x \\<subseteq> C \\<and> finite x \\<and> s \\<subseteq> \\<Union> x\"\n  shows \"compact s\"\n  given topological_space_class.compactI"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<subseteq> U;\n     \\<And>C.\n        \\<lbrakk>C \\<subseteq> Pow U; Ball C \\<tau>;\n         s \\<subseteq> \\<Union> C\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x\\<subseteq>Pow U.\n                             x \\<subseteq> C \\<and>\n                             finite x \\<and> s \\<subseteq> \\<Union> x;\n     \\<And>s.\n        \\<lbrakk>s \\<subseteq> U;\n         \\<And>C.\n            \\<lbrakk>C \\<subseteq> Pow U; Ball C \\<tau>;\n             s \\<subseteq> \\<Union> C\\<rbrakk>\n            \\<Longrightarrow> \\<exists>C'\\<in>Pow (Pow U).\n                                 C' \\<subseteq> C \\<and>\n                                 finite C' \\<and>\n                                 s \\<subseteq> \\<Union> C'\\<rbrakk>\n        \\<Longrightarrow> local.compact s\\<rbrakk>\n    \\<Longrightarrow> local.compact s", "by (meson PowI)"], ["", "tts_lemma compactE:\n  assumes \"S \\<subseteq> U\"\n    and \"\\<T> \\<subseteq> Pow U\"\n    and \"compact S\"\n    and \"S \\<subseteq> \\<Union> \\<T>\"\n    and \"\\<And>B. B \\<in> \\<T> \\<Longrightarrow> \\<tau> B\"\n    and \"\\<And>\\<T>'. \\<lbrakk>\\<T>' \\<subseteq> Pow U; \\<T>' \\<subseteq> \\<T>; finite \\<T>'; S \\<subseteq> \\<Union> \\<T>'\\<rbrakk> \\<Longrightarrow> thesis\"\n  shows thesis\n    given topological_space_class.compactE"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> U; \\<T> \\<subseteq> Pow U; local.compact S;\n     S \\<subseteq> \\<Union> \\<T>;\n     \\<And>B. B \\<in> \\<T> \\<Longrightarrow> \\<tau> B;\n     \\<And>\\<T>'.\n        \\<lbrakk>\\<T>' \\<subseteq> Pow U; \\<T>' \\<subseteq> \\<T>;\n         finite \\<T>'; S \\<subseteq> \\<Union> \\<T>'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>S \\<T> thesis.\n        \\<lbrakk>S \\<subseteq> U; \\<T> \\<subseteq> Pow U; local.compact S;\n         S \\<subseteq> \\<Union> \\<T>;\n         \\<And>B.\n            \\<lbrakk>B \\<subseteq> U; B \\<in> \\<T>\\<rbrakk>\n            \\<Longrightarrow> \\<tau> B;\n         \\<And>\\<T>'.\n            \\<lbrakk>\\<T>' \\<subseteq> Pow U; \\<T>' \\<subseteq> \\<T>;\n             finite \\<T>'; S \\<subseteq> \\<Union> \\<T>'\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["", "tts_lemma compact_fip:\n  assumes \"U \\<subseteq> U\"\n  shows \"compact U =\n    (\n      \\<forall>x\\<subseteq>Pow U.\n        Ball x closed \\<longrightarrow>\n        (\\<forall>y\\<subseteq>Pow U. y \\<subseteq> x \\<longrightarrow> finite y \\<longrightarrow> U \\<inter> (\\<Inter> y \\<inter> U) \\<noteq> {}) \\<longrightarrow>\n        U \\<inter> (\\<Inter> x \\<inter> U) \\<noteq> {}\n    )\"\n    given topological_space_class.compact_fip"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>U \\<subseteq> U;\n     \\<And>Ua.\n        Ua \\<subseteq> U \\<Longrightarrow>\n        local.compact Ua =\n        (\\<forall>A\\<in>Pow (Pow U).\n            Ball A local.closed \\<longrightarrow>\n            (\\<forall>B\\<in>Pow (Pow U).\n                B \\<subseteq> A \\<longrightarrow>\n                finite B \\<longrightarrow>\n                Ua \\<inter> (\\<Inter> B \\<inter> U) \\<noteq>\n                {}) \\<longrightarrow>\n            Ua \\<inter> (\\<Inter> A \\<inter> U) \\<noteq> {})\\<rbrakk>\n    \\<Longrightarrow> local.compact U =\n                      (\\<forall>x\\<subseteq>Pow U.\n                          Ball x local.closed \\<longrightarrow>\n                          (\\<forall>y\\<subseteq>Pow U.\n                              y \\<subseteq> x \\<longrightarrow>\n                              finite y \\<longrightarrow>\n                              U \\<inter> (\\<Inter> y \\<inter> U) \\<noteq>\n                              {}) \\<longrightarrow>\n                          U \\<inter> (\\<Inter> x \\<inter> U) \\<noteq> {})", "by auto"], ["", "tts_lemma compact_imp_fip:\n  assumes \"S \\<subseteq> U\"\n    and \"Fa \\<subseteq> Pow U\"\n    and \"compact S\"\n    and \"\\<And>T. \\<lbrakk>T \\<subseteq> U; T \\<in> Fa\\<rbrakk> \\<Longrightarrow> closed T\"\n    and \"\\<And>F'. \\<lbrakk>F' \\<subseteq> Pow U; finite F'; F' \\<subseteq> Fa\\<rbrakk> \\<Longrightarrow> S \\<inter> (\\<Inter> F' \\<inter> U) \\<noteq> {}\"\n  shows \"S \\<inter> (\\<Inter> Fa \\<inter> U) \\<noteq> {}\"\n    is topological_space_class.compact_imp_fip"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_limpt:\n  assumes \"S \\<subseteq> U\"\n  shows \"closed S = (\\<forall>x\\<in>U. x \\<guillemotleft>islimpt\\<guillemotright> S \\<longrightarrow> x \\<in> S)\"\n    is Elementary_Topology.closed_limpt"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_interior:\n  assumes \"S \\<subseteq> U\"\n  shows \"\\<tau> (interior S)\"\n    is Elementary_Topology.open_interior"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_subset:\n  assumes \"S \\<subseteq> U\"\n  shows \"interior S \\<subseteq> S\"\n    is Elementary_Topology.interior_subset"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_open:\n  assumes \"S \\<subseteq> U\" and \"\\<tau> S\"\n  shows \"interior S = S\"\n    is Elementary_Topology.interior_open"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_eq:\n  assumes \"S \\<subseteq> U\"\n  shows \"(interior S = S) = \\<tau> S\"\n    is Elementary_Topology.interior_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_UNIV: \"interior U = U\"\n  is Elementary_Topology.interior_UNIV"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_interior:\n  assumes \"S \\<subseteq> U\"\n  shows \"interior (interior S) = interior S\"\n    is Elementary_Topology.interior_interior"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma interior_closure:\n  assumes \"S \\<subseteq> U\"\n  shows \"interior S = - closure (- S \\<inter> U) \\<inter> U\"\n    is Elementary_Topology.interior_closure"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma finite_imp_compact:\n  assumes \"s \\<subseteq> U\" and \"finite s\"\n  shows \"compact s\"\n  is Elementary_Topology.finite_imp_compact"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma countably_compactE:\n  assumes \"s \\<subseteq> U\"\n    and \"C \\<subseteq> Pow U\"\n    and \"countably_compact s\"\n    and \"Ball C \\<tau>\"\n    and \"s \\<subseteq> \\<Union> C\"\n    and \"countable C\"\n    and \"\\<And>C'. \\<lbrakk>C' \\<subseteq> Pow U; C' \\<subseteq> C; finite C'; s \\<subseteq> \\<Union> C'\\<rbrakk> \\<Longrightarrow> thesis\"\n  shows thesis\n    is Elementary_Topology.countably_compactE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> and \\<open>?A \\<subseteq> U\\<close> through (insert interior_empty, auto)\nbegin"], ["", "tts_lemma interior_unique:\n  assumes \"S \\<subseteq> U\"\n    and \"T \\<subseteq> S\"\n    and \"\\<tau> T\"\n    and \"\\<And>T'. \\<lbrakk>T' \\<subseteq> S; \\<tau> T'\\<rbrakk> \\<Longrightarrow> T' \\<subseteq> T\"\n  shows \"interior S = T\"\n    given Elementary_Topology.interior_unique"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> U; T \\<subseteq> S; \\<tau> T;\n     \\<And>T'.\n        \\<lbrakk>T' \\<subseteq> S; \\<tau> T'\\<rbrakk>\n        \\<Longrightarrow> T' \\<subseteq> T;\n     \\<And>S T.\n        \\<lbrakk>S \\<subseteq> U; T \\<subseteq> S; \\<tau> T;\n         \\<And>T'.\n            \\<lbrakk>T' \\<subseteq> U; T' \\<subseteq> S; \\<tau> T'\\<rbrakk>\n            \\<Longrightarrow> T' \\<subseteq> T\\<rbrakk>\n        \\<Longrightarrow> local.interior S = T\\<rbrakk>\n    \\<Longrightarrow> local.interior S = T", "by auto"], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through (simp add: subset_iff filterlim_iff)\nbegin"], ["", "tts_lemma open_UN:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. B x \\<subseteq> U\"\n    and \"\\<forall>x\\<in>A. \\<tau> (B x)\"\n  shows \"\\<tau> (\\<Union> (B ` A))\"\n    is topological_space_class.open_UN"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Collect_ex:\n  assumes \"\\<And>i. i \\<in> U\\<^sub>2 \\<Longrightarrow> \\<tau> {x. P i x \\<and> x \\<in> U}\"\n  shows \"\\<tau> {x \\<in> U. \\<exists>i\\<in>U\\<^sub>2. P i x}\"\n    is open_Collect_ex"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through (unfold closed_ow_def finite_def, auto)\nbegin"], ["", "tts_lemma open_INT:\n  assumes \"A \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. B x \\<subseteq> U\" and \"finite A\" and \"\\<forall>x\\<in>A. \\<tau> (B x)\"\n  shows \"\\<tau> (\\<Inter> (B ` A) \\<inter> U)\"\n    is topological_space_class.open_INT"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_INT:\n  assumes \"A \\<subseteq> U\\<^sub>2\" and \"\\<forall>x\\<in>U\\<^sub>2. B x \\<subseteq> U\" and \"\\<forall>x\\<in>A. closed (B x)\"\n  shows \"closed (\\<Inter> (B ` A) \\<inter> U)\"\n    is topological_space_class.closed_INT"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_UN:\n  assumes \"A \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. B x \\<subseteq> U\"\n    and \"finite A\"\n    and \"\\<forall>x\\<in>A. closed (B x)\"\n  shows \"closed (\\<Union> (B ` A))\"\n    is topological_space_class.closed_UN"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through (insert closed_empty, auto)\nbegin"], ["", "tts_lemma closed_Collect_all:\n  assumes \"\\<And>i. i \\<in> U\\<^sub>2 \\<Longrightarrow> local.closed {x. P i x \\<and> x \\<in> U}\"\n  shows \"local.closed {x \\<in> U. \\<forall>i\\<in>U\\<^sub>2. P i x}\"\n    is topological_space_class.closed_Collect_all"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma compactE_image:\n  assumes \"S \\<subseteq> U\"\n    and \"C \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<subseteq> U\"\n    and \"compact S\"\n    and \"\\<And>T. \\<lbrakk>T \\<in> U\\<^sub>2; T \\<in> C\\<rbrakk> \\<Longrightarrow> \\<tau> (f T)\"\n    and \"S \\<subseteq> \\<Union> (f ` C)\"\n    and \"\\<And>C'. \\<lbrakk>C' \\<subseteq> U\\<^sub>2; C' \\<subseteq> C; finite C'; S \\<subseteq> \\<Union> (f ` C')\\<rbrakk> \\<Longrightarrow> thesis\"\n  shows thesis\n    is topological_space_class.compactE_image"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U) and (?'b to \\<open>U\\<^sub>2::'b set\\<close>)\n  rewriting ctr_simps\n  substituting topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through (simp, blast | simp)\nbegin"], ["", "tts_lemma ne_compact_imp_fip_image:\n  assumes \"s \\<subseteq> U\"\n    and \"I \\<subseteq> U\\<^sub>2\"\n    and \"\\<forall>x\\<in>U\\<^sub>2. f x \\<subseteq> U\"\n    and \"compact s\"\n    and \"\\<And>i. \\<lbrakk>i \\<in> U\\<^sub>2; i \\<in> I\\<rbrakk> \\<Longrightarrow> closed (f i)\"\n    and \"\\<And>I'. \\<lbrakk>I' \\<subseteq> U\\<^sub>2; finite I'; I' \\<subseteq> I\\<rbrakk> \\<Longrightarrow> s \\<inter> (\\<Inter> (f ` I') \\<inter> U) \\<noteq> {}\"\n  shows \"s \\<inter> (\\<Inter> (f ` I) \\<inter> U) \\<noteq> {}\"\n    is topological_space_class.compact_imp_fip_image"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "subsection\\<open>Further results\\<close>"], ["", "lemma topological_basis_closed:\n  assumes \"topological_basis_ow U \\<tau> B\"\n  shows \"B \\<subseteq> Pow U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> Pow U", "using assms"], ["proof (prove)\nusing this:\n  on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> Pow U", "unfolding topological_basis_ow_def"], ["proof (prove)\nusing this:\n  \\<Union> B = U \\<and>\n  Ball B \\<tau> \\<and>\n  (\\<forall>q\\<subseteq>U.\n      \\<tau> q \\<longrightarrow> (\\<exists>B'\\<subseteq>B. \\<Union> B' = q))\n\ngoal (1 subgoal):\n 1. B \\<subseteq> Pow U", "by auto"], ["", "lemma ts_open_eq_ts_open:\n  assumes \"topological_space_ow U \\<tau>'\" and \"\\<And>s. s \\<subseteq> U \\<Longrightarrow> \\<tau>' s = \\<tau> s\"\n  shows \"topological_space_ow U \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. topological_space_ow U \\<tau>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<tau> U\n 2. \\<And>S T.\n       \\<lbrakk>S \\<subseteq> U; T \\<subseteq> U; \\<tau> S;\n        \\<tau> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (S \\<inter> T)\n 3. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau> S\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (\\<Union> K)", "from assms(1)"], ["proof (chain)\npicking this:\n  topological_space_ow U \\<tau>'", "have \"\\<tau>' U\""], ["proof (prove)\nusing this:\n  topological_space_ow U \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<tau>' U", "unfolding topological_space_ow_def"], ["proof (prove)\nusing this:\n  \\<tau>' U \\<and>\n  (\\<forall>S T.\n      S \\<subseteq> U \\<longrightarrow>\n      T \\<subseteq> U \\<longrightarrow>\n      \\<tau>' S \\<longrightarrow>\n      \\<tau>' T \\<longrightarrow> \\<tau>' (S \\<inter> T)) \\<and>\n  (\\<forall>K\\<subseteq>Pow U.\n      (\\<forall>S\\<in>K. \\<tau>' S) \\<longrightarrow> \\<tau>' (\\<Union> K))\n\ngoal (1 subgoal):\n 1. \\<tau>' U", "by simp"], ["proof (state)\nthis:\n  \\<tau>' U\n\ngoal (3 subgoals):\n 1. \\<tau> U\n 2. \\<And>S T.\n       \\<lbrakk>S \\<subseteq> U; T \\<subseteq> U; \\<tau> S;\n        \\<tau> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (S \\<inter> T)\n 3. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau> S\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (\\<Union> K)", "with assms(2)"], ["proof (chain)\npicking this:\n  ?s \\<subseteq> U \\<Longrightarrow> \\<tau>' ?s = \\<tau> ?s\n  \\<tau>' U", "show \"\\<tau> U\""], ["proof (prove)\nusing this:\n  ?s \\<subseteq> U \\<Longrightarrow> \\<tau>' ?s = \\<tau> ?s\n  \\<tau>' U\n\ngoal (1 subgoal):\n 1. \\<tau> U", "by auto"], ["proof (state)\nthis:\n  \\<tau> U\n\ngoal (2 subgoals):\n 1. \\<And>S T.\n       \\<lbrakk>S \\<subseteq> U; T \\<subseteq> U; \\<tau> S;\n        \\<tau> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (S \\<inter> T)\n 2. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau> S\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (\\<Union> K)", "from assms(1)"], ["proof (chain)\npicking this:\n  topological_space_ow U \\<tau>'", "have \"\\<And>S T. \\<lbrakk> S \\<subseteq> U; T \\<subseteq> U; \\<tau>' S; \\<tau>' T \\<rbrakk> \\<Longrightarrow> \\<tau>' (S \\<inter> T)\""], ["proof (prove)\nusing this:\n  topological_space_ow U \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<And>S T.\n       \\<lbrakk>S \\<subseteq> U; T \\<subseteq> U; \\<tau>' S;\n        \\<tau>' T\\<rbrakk>\n       \\<Longrightarrow> \\<tau>' (S \\<inter> T)", "unfolding topological_space_ow_def"], ["proof (prove)\nusing this:\n  \\<tau>' U \\<and>\n  (\\<forall>S T.\n      S \\<subseteq> U \\<longrightarrow>\n      T \\<subseteq> U \\<longrightarrow>\n      \\<tau>' S \\<longrightarrow>\n      \\<tau>' T \\<longrightarrow> \\<tau>' (S \\<inter> T)) \\<and>\n  (\\<forall>K\\<subseteq>Pow U.\n      (\\<forall>S\\<in>K. \\<tau>' S) \\<longrightarrow> \\<tau>' (\\<Union> K))\n\ngoal (1 subgoal):\n 1. \\<And>S T.\n       \\<lbrakk>S \\<subseteq> U; T \\<subseteq> U; \\<tau>' S;\n        \\<tau>' T\\<rbrakk>\n       \\<Longrightarrow> \\<tau>' (S \\<inter> T)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> U; ?T \\<subseteq> U; \\<tau>' ?S;\n   \\<tau>' ?T\\<rbrakk>\n  \\<Longrightarrow> \\<tau>' (?S \\<inter> ?T)\n\ngoal (2 subgoals):\n 1. \\<And>S T.\n       \\<lbrakk>S \\<subseteq> U; T \\<subseteq> U; \\<tau> S;\n        \\<tau> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (S \\<inter> T)\n 2. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau> S\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (\\<Union> K)", "with assms(2)"], ["proof (chain)\npicking this:\n  ?s \\<subseteq> U \\<Longrightarrow> \\<tau>' ?s = \\<tau> ?s\n  \\<lbrakk>?S \\<subseteq> U; ?T \\<subseteq> U; \\<tau>' ?S;\n   \\<tau>' ?T\\<rbrakk>\n  \\<Longrightarrow> \\<tau>' (?S \\<inter> ?T)", "show \"\\<And>S T. \\<lbrakk> S \\<subseteq> U; T \\<subseteq> U; \\<tau> S; \\<tau> T \\<rbrakk> \\<Longrightarrow> \\<tau> (S \\<inter> T)\""], ["proof (prove)\nusing this:\n  ?s \\<subseteq> U \\<Longrightarrow> \\<tau>' ?s = \\<tau> ?s\n  \\<lbrakk>?S \\<subseteq> U; ?T \\<subseteq> U; \\<tau>' ?S;\n   \\<tau>' ?T\\<rbrakk>\n  \\<Longrightarrow> \\<tau>' (?S \\<inter> ?T)\n\ngoal (1 subgoal):\n 1. \\<And>S T.\n       \\<lbrakk>S \\<subseteq> U; T \\<subseteq> U; \\<tau> S;\n        \\<tau> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (S \\<inter> T)", "by (meson Int_lower1 order_trans)"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> U; ?T \\<subseteq> U; \\<tau> ?S; \\<tau> ?T\\<rbrakk>\n  \\<Longrightarrow> \\<tau> (?S \\<inter> ?T)\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau> S\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (\\<Union> K)", "from assms(1)"], ["proof (chain)\npicking this:\n  topological_space_ow U \\<tau>'", "have \"\\<And>K. \\<lbrakk> K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau>' S \\<rbrakk> \\<Longrightarrow> \\<tau>' (\\<Union>K)\""], ["proof (prove)\nusing this:\n  topological_space_ow U \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau>' S\\<rbrakk>\n       \\<Longrightarrow> \\<tau>' (\\<Union> K)", "unfolding topological_space_ow_def"], ["proof (prove)\nusing this:\n  \\<tau>' U \\<and>\n  (\\<forall>S T.\n      S \\<subseteq> U \\<longrightarrow>\n      T \\<subseteq> U \\<longrightarrow>\n      \\<tau>' S \\<longrightarrow>\n      \\<tau>' T \\<longrightarrow> \\<tau>' (S \\<inter> T)) \\<and>\n  (\\<forall>K\\<subseteq>Pow U.\n      (\\<forall>S\\<in>K. \\<tau>' S) \\<longrightarrow> \\<tau>' (\\<Union> K))\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau>' S\\<rbrakk>\n       \\<Longrightarrow> \\<tau>' (\\<Union> K)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?K \\<subseteq> Pow U; \\<forall>S\\<in>?K. \\<tau>' S\\<rbrakk>\n  \\<Longrightarrow> \\<tau>' (\\<Union> ?K)\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau> S\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (\\<Union> K)", "with assms(2)"], ["proof (chain)\npicking this:\n  ?s \\<subseteq> U \\<Longrightarrow> \\<tau>' ?s = \\<tau> ?s\n  \\<lbrakk>?K \\<subseteq> Pow U; \\<forall>S\\<in>?K. \\<tau>' S\\<rbrakk>\n  \\<Longrightarrow> \\<tau>' (\\<Union> ?K)", "show \"\\<And>K. \\<lbrakk> K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau> S \\<rbrakk> \\<Longrightarrow> \\<tau> (\\<Union>K)\""], ["proof (prove)\nusing this:\n  ?s \\<subseteq> U \\<Longrightarrow> \\<tau>' ?s = \\<tau> ?s\n  \\<lbrakk>?K \\<subseteq> Pow U; \\<forall>S\\<in>?K. \\<tau>' S\\<rbrakk>\n  \\<Longrightarrow> \\<tau>' (\\<Union> ?K)\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Pow U; \\<forall>S\\<in>K. \\<tau> S\\<rbrakk>\n       \\<Longrightarrow> \\<tau> (\\<Union> K)", "by (metis Union_Pow_eq Union_mono ctr_simps_subset_pow_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?K \\<subseteq> Pow U; \\<forall>S\\<in>?K. \\<tau> S\\<rbrakk>\n  \\<Longrightarrow> \\<tau> (\\<Union> ?K)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in topological_space_ow) topological_basis_closed:\n  assumes \"topological_basis_ow U \\<tau> B\" \n  shows \"B \\<subseteq> Pow U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> Pow U", "using assms"], ["proof (prove)\nusing this:\n  on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> Pow U", "unfolding topological_basis_with_def"], ["proof (prove)\nusing this:\n  on U with \\<tau> : \\<guillemotleft>topological_basis\\<guillemotright> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> Pow U", "by (rule topological_basis_closed)"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}