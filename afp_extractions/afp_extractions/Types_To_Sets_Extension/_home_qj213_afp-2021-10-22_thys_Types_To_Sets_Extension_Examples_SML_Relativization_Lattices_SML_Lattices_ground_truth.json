{"file_name": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension/Examples/SML_Relativization/Lattices/SML_Lattices.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension", "problem_names": ["lemma lattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> A) ===> \n      (=)\n    )\n    (lattice_ow (Collect (Domainp A))) class.lattice\"", "lemma bounded_lattice_bot_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> A) ===> \n      A ===> \n      (=)\n    ) \n    (bounded_lattice_bot_ow (Collect (Domainp A))) \n    class.bounded_lattice_bot\"", "lemma bounded_lattice_top_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"\n    (\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> A) ===> \n      A ===> \n      (=)\n    ) \n      (bounded_lattice_top_ow (Collect (Domainp A))) \n      class.bounded_lattice_top\"", "lemma bounded_lattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> A) ===> \n      A ===> \n      A ===> \n      (=)\n    ) \n    (bounded_lattice_ow (Collect (Domainp A))) class.bounded_lattice\"", "lemma distrib_lattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> A) ===> \n      (=)\n    )\n    (distrib_lattice_ow (Collect (Domainp A))) class.distrib_lattice\""], "translations": [["", "lemma lattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> A) ===> \n      (=)\n    )\n    (lattice_ow (Collect (Domainp A))) class.lattice\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> (=))\n     (lattice_ow (Collect (Domainp A))) class.lattice", "unfolding class.lattice_def lattice_ow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> (=))\n     (\\<lambda>inf le ls sup.\n         semilattice_inf_ow (Collect (Domainp A)) inf le ls \\<and>\n         semilattice_sup_ow (Collect (Domainp A)) sup le ls)\n     (\\<lambda>inf less_eq less sup.\n         class.semilattice_inf inf less_eq less \\<and>\n         class.semilattice_sup sup less_eq less)", "by transfer_prover"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context lattice_ow \nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting lattice_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma inf_sup_aci:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \n    \"x \\<sqinter>\\<^sub>o\\<^sub>w y = y \\<sqinter>\\<^sub>o\\<^sub>w x\"\n    \"z \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w y \\<sqinter>\\<^sub>o\\<^sub>w z = x \\<sqinter>\\<^sub>o\\<^sub>w (y \\<sqinter>\\<^sub>o\\<^sub>w z)\"\n    \"z \\<in> U \\<Longrightarrow> x \\<sqinter>\\<^sub>o\\<^sub>w (y \\<sqinter>\\<^sub>o\\<^sub>w z) = y \\<sqinter>\\<^sub>o\\<^sub>w (x \\<sqinter>\\<^sub>o\\<^sub>w z)\"\n    \"x \\<sqinter>\\<^sub>o\\<^sub>w (x \\<sqinter>\\<^sub>o\\<^sub>w y) = x \\<sqinter>\\<^sub>o\\<^sub>w y\"\n    \"x \\<squnion>\\<^sub>o\\<^sub>w y = y \\<squnion>\\<^sub>o\\<^sub>w x\"\n    \"z \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w y \\<squnion>\\<^sub>o\\<^sub>w z = x \\<squnion>\\<^sub>o\\<^sub>w (y \\<squnion>\\<^sub>o\\<^sub>w z)\"\n    \"z \\<in> U \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w (y \\<squnion>\\<^sub>o\\<^sub>w z) = y \\<squnion>\\<^sub>o\\<^sub>w (x \\<squnion>\\<^sub>o\\<^sub>w z)\"\n    \"x \\<squnion>\\<^sub>o\\<^sub>w (x \\<squnion>\\<^sub>o\\<^sub>w y) = x \\<squnion>\\<^sub>o\\<^sub>w y\"\n    is lattice_class.inf_sup_aci"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma inf_sup_absorb:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"x \\<sqinter>\\<^sub>o\\<^sub>w (x \\<squnion>\\<^sub>o\\<^sub>w y) = x\"\n    is lattice_class.inf_sup_absorb"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma sup_inf_absorb:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"x \\<squnion>\\<^sub>o\\<^sub>w (x \\<sqinter>\\<^sub>o\\<^sub>w y) = x\"\n    is lattice_class.sup_inf_absorb"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_above_insert:\n  assumes \"a \\<in> U\" and \"A \\<subseteq> U\"\n  shows \"local.bdd_above (insert a A) = local.bdd_above A\"\n    is lattice_class.bdd_above_insert"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_below_insert:\n  assumes \"a \\<in> U\" and \"A \\<subseteq> U\"\n  shows \"local.bdd_below (insert a A) = local.bdd_below A\"\n  is lattice_class.bdd_below_insert"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma distrib_sup_le:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\"\n  shows \"x \\<squnion>\\<^sub>o\\<^sub>w (y \\<sqinter>\\<^sub>o\\<^sub>w z) \\<le>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w y \\<sqinter>\\<^sub>o\\<^sub>w (x \\<squnion>\\<^sub>o\\<^sub>w z)\"\n    is lattice_class.distrib_sup_le"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma distrib_inf_le:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\"\n  shows \"x \\<sqinter>\\<^sub>o\\<^sub>w y \\<squnion>\\<^sub>o\\<^sub>w (x \\<sqinter>\\<^sub>o\\<^sub>w z) \\<le>\\<^sub>o\\<^sub>w x \\<sqinter>\\<^sub>o\\<^sub>w (y \\<squnion>\\<^sub>o\\<^sub>w z)\"\n    is lattice_class.distrib_inf_le"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma distrib_imp1:\n  assumes \"x \\<in> U\"\n    and \"y \\<in> U\"\n    and \"z \\<in> U\"\n    and \n      \"\\<And>x y z. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U\\<rbrakk> \\<Longrightarrow> \n        x \\<sqinter>\\<^sub>o\\<^sub>w (y \\<squnion>\\<^sub>o\\<^sub>w z) = x \\<sqinter>\\<^sub>o\\<^sub>w y \\<squnion>\\<^sub>o\\<^sub>w (x \\<sqinter>\\<^sub>o\\<^sub>w z)\"\n  shows \"x \\<squnion>\\<^sub>o\\<^sub>w (y \\<sqinter>\\<^sub>o\\<^sub>w z) = x \\<squnion>\\<^sub>o\\<^sub>w y \\<sqinter>\\<^sub>o\\<^sub>w (x \\<squnion>\\<^sub>o\\<^sub>w z)\"\n    is lattice_class.distrib_imp1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma distrib_imp2:\n  assumes \"x \\<in> U\"\n    and \"y \\<in> U\"\n    and \"z \\<in> U\"\n    and \n      \"\\<And>x y z. \\<lbrakk>x \\<in> U; y \\<in> U; z \\<in> U\\<rbrakk> \\<Longrightarrow> \n        x \\<squnion>\\<^sub>o\\<^sub>w (y \\<sqinter>\\<^sub>o\\<^sub>w z) = x \\<squnion>\\<^sub>o\\<^sub>w y \\<sqinter>\\<^sub>o\\<^sub>w (x \\<squnion>\\<^sub>o\\<^sub>w z)\"\n  shows \"x \\<sqinter>\\<^sub>o\\<^sub>w (y \\<squnion>\\<^sub>o\\<^sub>w z) = x \\<sqinter>\\<^sub>o\\<^sub>w y \\<squnion>\\<^sub>o\\<^sub>w (x \\<sqinter>\\<^sub>o\\<^sub>w z)\"\n    is lattice_class.distrib_imp2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_above_Un:\n  assumes \"A \\<subseteq> U\" and \"B \\<subseteq> U\"\n  shows \"local.bdd_above (A \\<union> B) = (local.bdd_above A \\<and> local.bdd_above B)\"\n    is lattice_class.bdd_above_Un"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_below_Un:\n  assumes \"A \\<subseteq> U\" and \"B \\<subseteq> U\"\n  shows \"local.bdd_below (A \\<union> B) = (local.bdd_below A \\<and> local.bdd_below B)\"\n    is lattice_class.bdd_below_Un"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_above_image_sup:\n  assumes \"range f \\<subseteq> U\" and \"range g \\<subseteq> U\"\n  shows \"local.bdd_above ((\\<lambda>x. f x \\<squnion>\\<^sub>o\\<^sub>w g x) ` A) = \n    (local.bdd_above (f ` A) \\<and> local.bdd_above (g ` A))\"\n    is lattice_class.bdd_above_image_sup"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_below_image_inf:\n  assumes \"range f \\<subseteq> U\" and \"range g \\<subseteq> U\"\n  shows \"local.bdd_below ((\\<lambda>x. f x \\<sqinter>\\<^sub>o\\<^sub>w g x) ` A) = \n    (local.bdd_below (f ` A) \\<and> local.bdd_below (g ` A))\"\n    is lattice_class.bdd_below_image_inf"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting lattice_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma bdd_above_UN:\n  assumes \"U \\<noteq> {}\" and \"range A \\<subseteq> Pow U\" and \"finite I\"\n  shows \"bdd_above (\\<Union> (A ` I)) = (\\<forall>x\\<in>I. bdd_above (A x))\"\n    is lattice_class.bdd_above_UN"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_below_UN:\n  assumes \"U \\<noteq> {}\" and \"range A \\<subseteq> Pow U\" and \"finite I\"\n  shows \"local.bdd_below (\\<Union> (A ` I)) = (\\<forall>x\\<in>I. local.bdd_below (A x))\"\n    is lattice_class.bdd_below_UN"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_above_finite:\n  assumes \"U \\<noteq> {}\" and \"A \\<subseteq> U\" and \"finite A\"\n  shows \"local.bdd_above A\"\n    is lattice_class.bdd_above_finite"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma bdd_below_finite:\n  assumes \"U \\<noteq> {}\" and \"A \\<subseteq> U\" and \"finite A\"\n  shows \"local.bdd_below A\"\n    is lattice_class.bdd_below_finite"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "subsection\\<open>Bounded lattices\\<close>"], ["", "subsubsection\\<open>Definitions and common properties\\<close>"], ["", "locale bounded_lattice_bot_ow = \n  lattice_ow U inf le ls sup + order_bot_ow U bot le ls\n  for U :: \"'al set\" and inf le ls sup bot\nbegin"], ["", "sublocale bounded_semilattice_sup_bot_ow U \\<open>(\\<squnion>\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close> \\<open>\\<bottom>\\<^sub>o\\<^sub>w\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_semilattice_sup_bot_ow U (\\<squnion>\\<^sub>o\\<^sub>w)\n     (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) \\<bottom>\\<^sub>o\\<^sub>w", ".."], ["", "end"], ["", "locale bounded_lattice_bot_pair_ow = \n  blb\\<^sub>1: bounded_lattice_bot_ow U\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1 bot\\<^sub>1 +\n  blb\\<^sub>2: bounded_lattice_bot_ow U\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2 bot\\<^sub>2\n  for U\\<^sub>1 :: \"'al set\" and inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1 bot\\<^sub>1\n    and U\\<^sub>2 :: \"'bl set\" and inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2 bot\\<^sub>2\nbegin"], ["", "sublocale lattice_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. lattice_pair_ow U\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1\n     U\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2", ".."], ["", "sublocale order_bot_pair_ow U\\<^sub>1 bot\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 U\\<^sub>2 bot\\<^sub>2 le\\<^sub>2 ls\\<^sub>2"], ["proof (prove)\ngoal (1 subgoal):\n 1. order_bot_pair_ow U\\<^sub>1 bot\\<^sub>1\n     (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1)\n     (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) U\\<^sub>2 bot\\<^sub>2\n     (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2)\n     (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2)", ".."], ["", "end"], ["", "locale bounded_lattice_top_ow = \n  lattice_ow U inf le ls sup + order_top_ow U le ls top\n  for U :: \"'al set\" and inf le ls sup top \nbegin"], ["", "sublocale bounded_semilattice_inf_top_ow U \\<open>(\\<sqinter>\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close> \\<open>\\<top>\\<^sub>o\\<^sub>w\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_semilattice_inf_top_ow U (\\<sqinter>\\<^sub>o\\<^sub>w)\n     (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) \\<top>\\<^sub>o\\<^sub>w", ".."], ["", "end"], ["", "locale bounded_lattice_top_pair_ow = \n  blb\\<^sub>1: bounded_lattice_top_ow U\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1 top\\<^sub>1 +\n  blb\\<^sub>2: bounded_lattice_top_ow U\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2 top\\<^sub>2\n  for U\\<^sub>1 :: \"'al set\" and inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1 top\\<^sub>1\n    and U\\<^sub>2 :: \"'bl set\" and inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2 top\\<^sub>2\nbegin"], ["", "sublocale lattice_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. lattice_pair_ow U\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1\n     U\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2", ".."], ["", "sublocale order_top_pair_ow U\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 top\\<^sub>1 U\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 top\\<^sub>2"], ["proof (prove)\ngoal (1 subgoal):\n 1. order_top_pair_ow U\\<^sub>1 (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1)\n     (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) top\\<^sub>1 U\\<^sub>2\n     (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2)\n     (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) top\\<^sub>2", ".."], ["", "end"], ["", "locale bounded_lattice_ow = \n  lattice_ow U inf le ls sup + \n  order_bot_ow U bot le ls + \n  order_top_ow U le ls top\n  for U :: \"'al set\" and inf le ls sup bot top\nbegin"], ["", "sublocale bounded_lattice_bot_ow U \\<open>(\\<sqinter>\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<squnion>\\<^sub>o\\<^sub>w)\\<close> \\<open>\\<bottom>\\<^sub>o\\<^sub>w\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_lattice_bot_ow U (\\<sqinter>\\<^sub>o\\<^sub>w)\n     (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w)\n     (\\<squnion>\\<^sub>o\\<^sub>w) \\<bottom>\\<^sub>o\\<^sub>w", ".."], ["", "sublocale bounded_lattice_top_ow U \\<open>(\\<sqinter>\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<le>\\<^sub>o\\<^sub>w)\\<close> \\<open>(<\\<^sub>o\\<^sub>w)\\<close> \\<open>(\\<squnion>\\<^sub>o\\<^sub>w)\\<close> \\<open>\\<top>\\<^sub>o\\<^sub>w\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_lattice_top_ow U (\\<sqinter>\\<^sub>o\\<^sub>w)\n     (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w)\n     (\\<squnion>\\<^sub>o\\<^sub>w) \\<top>\\<^sub>o\\<^sub>w", ".."], ["", "end"], ["", "locale bounded_lattice_pair_ow = \n  bl\\<^sub>1: bounded_lattice_ow U\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1 bot\\<^sub>1 top\\<^sub>1 +\n  bl\\<^sub>2: bounded_lattice_ow U\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2 bot\\<^sub>2 top\\<^sub>2\n  for U\\<^sub>1 :: \"'al set\" and inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1 sup\\<^sub>1 bot\\<^sub>1 top\\<^sub>1 \n    and U\\<^sub>2 :: \"'bl set\" and inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2 sup\\<^sub>2 bot\\<^sub>2 top\\<^sub>2\nbegin"], ["", "sublocale bounded_lattice_bot_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_lattice_bot_pair_ow U\\<^sub>1 inf\\<^sub>1 le\\<^sub>1 ls\\<^sub>1\n     sup\\<^sub>1 bot\\<^sub>1 U\\<^sub>2 inf\\<^sub>2 le\\<^sub>2 ls\\<^sub>2\n     sup\\<^sub>2 bot\\<^sub>2", ".."], ["", "sublocale bounded_lattice_top_pair_ow"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_lattice_top_pair_ow U\\<^sub>1\n     (\\<sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1)\n     (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1)\n     (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1)\n     (\\<squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) top\\<^sub>1 U\\<^sub>2\n     (\\<sqinter>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2)\n     (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2)\n     (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2)\n     (\\<squnion>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) top\\<^sub>2", ".."], ["", "end"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma bounded_lattice_bot_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> A) ===> \n      A ===> \n      (=)\n    ) \n    (bounded_lattice_bot_ow (Collect (Domainp A))) \n    class.bounded_lattice_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> (=))\n     (bounded_lattice_bot_ow (Collect (Domainp A)))\n     class.bounded_lattice_bot", "unfolding bounded_lattice_bot_ow_def class.bounded_lattice_bot_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> (=))\n     (\\<lambda>inf le ls sup bot.\n         lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n         order_bot_ow (Collect (Domainp A)) bot le ls)\n     (\\<lambda>inf less_eq less sup bot.\n         class.lattice inf less_eq less sup \\<and>\n         class.order_bot bot less_eq less)", "by transfer_prover"], ["", "lemma bounded_lattice_top_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"\n    (\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> A) ===> \n      A ===> \n      (=)\n    ) \n      (bounded_lattice_top_ow (Collect (Domainp A))) \n      class.bounded_lattice_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> (=))\n     (bounded_lattice_top_ow (Collect (Domainp A)))\n     class.bounded_lattice_top", "unfolding bounded_lattice_top_ow_def class.bounded_lattice_top_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> (=))\n     (\\<lambda>inf le ls sup top.\n         lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n         order_top_ow (Collect (Domainp A)) le ls top)\n     (\\<lambda>inf less_eq less sup top.\n         class.lattice inf less_eq less sup \\<and>\n         class.order_top less_eq less top)", "by transfer_prover"], ["", "lemma bounded_lattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> (=)) ===> \n      (A ===> A ===> A) ===> \n      A ===> \n      A ===> \n      (=)\n    ) \n    (bounded_lattice_ow (Collect (Domainp A))) class.bounded_lattice\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (bounded_lattice_ow (Collect (Domainp A))) class.bounded_lattice", "unfolding bounded_lattice_ow_def class.bounded_lattice_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> A ===> A ===> (=))\n     (\\<lambda>inf le ls sup bot top.\n         lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n         order_bot_ow (Collect (Domainp A)) bot le ls \\<and>\n         order_top_ow (Collect (Domainp A)) le ls top)\n     (\\<lambda>inf less_eq less sup bot top.\n         class.lattice inf less_eq less sup \\<and>\n         class.order_bot bot less_eq less \\<and>\n         class.order_top less_eq less top)", "by transfer_prover"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context bounded_lattice_bot_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting bounded_lattice_bot_ow_axioms and sup_bot.sl_neut.not_empty\n  applying [OF inf_closed' sup_closed' bot_closed]\nbegin"], ["", "tts_lemma inf_bot_left:\n  assumes \"x \\<in> U\"\n  shows \"\\<bottom>\\<^sub>o\\<^sub>w \\<sqinter>\\<^sub>o\\<^sub>w x = \\<bottom>\\<^sub>o\\<^sub>w\"\n    is bounded_lattice_bot_class.inf_bot_left"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma inf_bot_right:\n  assumes \"x \\<in> U\"\n  shows \"x \\<sqinter>\\<^sub>o\\<^sub>w \\<bottom>\\<^sub>o\\<^sub>w = \\<bottom>\\<^sub>o\\<^sub>w\"\n    is bounded_lattice_bot_class.inf_bot_right"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "context bounded_lattice_top_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting bounded_lattice_top_ow_axioms and inf_top.sl_neut.not_empty\n  applying [OF inf_closed' sup_closed' top_closed]\nbegin"], ["", "tts_lemma sup_top_left:\n  assumes \"x \\<in> U\"\n  shows \"\\<top>\\<^sub>o\\<^sub>w \\<squnion>\\<^sub>o\\<^sub>w x = \\<top>\\<^sub>o\\<^sub>w\"\n    is bounded_lattice_top_class.sup_top_left"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma sup_top_right:\n  assumes \"x \\<in> U\"\n  shows \"x \\<squnion>\\<^sub>o\\<^sub>w \\<top>\\<^sub>o\\<^sub>w = \\<top>\\<^sub>o\\<^sub>w\"\n    is bounded_lattice_top_class.sup_top_right"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "context bounded_lattice_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting bounded_lattice_ow_axioms \n  applying [OF sup_bot.sl_neut.not_empty, simplified]\nbegin"], ["", "tts_lemma atLeastAtMost_eq_UNIV_iff:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"({x..\\<^sub>o\\<^sub>wy} = U) = (x = \\<bottom>\\<^sub>o\\<^sub>w \\<and> y = \\<top>\\<^sub>o\\<^sub>w)\"\n    is bounded_lattice_class.atLeastAtMost_eq_UNIV_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "subsection\\<open>Distributive lattices\\<close>"], ["", "subsubsection\\<open>Definitions and common properties\\<close>"], ["", "locale distrib_lattice_ow =\n  lattice_ow U inf le ls sup for U :: \"'al set\" and inf le ls sup  +\n  assumes sup_inf_distrib1: \n    \"\\<lbrakk> x \\<in> U; y \\<in> U; z \\<in> U \\<rbrakk> \\<Longrightarrow> x \\<squnion>\\<^sub>o\\<^sub>w (y \\<sqinter>\\<^sub>o\\<^sub>w z) = (x \\<squnion>\\<^sub>o\\<^sub>w y) \\<sqinter>\\<^sub>o\\<^sub>w (x \\<squnion>\\<^sub>o\\<^sub>w z)\""], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma distrib_lattice_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"(\n      (A ===> A ===> A) ===> \n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> A) ===> \n      (=)\n    )\n    (distrib_lattice_ow (Collect (Domainp A))) class.distrib_lattice\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> (=))\n     (distrib_lattice_ow (Collect (Domainp A))) class.distrib_lattice", "unfolding \n    distrib_lattice_ow_def class.distrib_lattice_def  \n    class.distrib_lattice_axioms_def distrib_lattice_ow_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> A) ===>\n     (A ===> A ===> (=)) ===>\n     (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> (=))\n     (\\<lambda>inf le ls sup.\n         lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n         (\\<forall>x y z.\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             z \\<in> Collect (Domainp A) \\<longrightarrow>\n             sup x (inf y z) = inf (sup x y) (sup x z)))\n     (\\<lambda>inf less_eq less sup.\n         class.lattice inf less_eq less sup \\<and>\n         (\\<forall>x y z. sup x (inf y z) = inf (sup x y) (sup x z)))", "apply transfer_prover_start"], ["proof (prove)\ngoal (7 subgoals):\n 1. Transfer.Rel (A ===> A ===> ?Rl24) ?ae24 (=)\n 2. Transfer.Rel ((A ===> ?Rl24) ===> ?Rk24) ?ad24 All\n 3. Transfer.Rel ((A ===> ?Rk24) ===> ?Rj24) ?ac24 All\n 4. Transfer.Rel ((A ===> ?Rj24) ===> ?Rh24) ?ab24 All\n 5. Transfer.Rel\n     ((A ===> A ===> A) ===>\n      (A ===> A ===> (=)) ===>\n      (A ===> A ===> (=)) ===> (A ===> A ===> A) ===> ?Rg24)\n     ?aa24 class.lattice\n 6. Transfer.Rel (?Rg24 ===> ?Rh24 ===> (=)) ?a24 (\\<and>)\n 7. (\\<lambda>inf le ls sup.\n        lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n        (\\<forall>x y z.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            z \\<in> Collect (Domainp A) \\<longrightarrow>\n            sup x (inf y z) = inf (sup x y) (sup x z))) =\n    (\\<lambda>inf less_eq less sup.\n        ?a24 (?aa24 inf less_eq less sup)\n         (?ab24\n           (\\<lambda>x.\n               ?ac24\n                (\\<lambda>y.\n                    ?ad24\n                     (\\<lambda>z.\n                         ?ae24 (sup x (inf y z))\n                          (inf (sup x y) (sup x z)))))))", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>inf le ls sup.\n        lattice_ow (Collect (Domainp A)) inf le ls sup \\<and>\n        (\\<forall>x y z.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            z \\<in> Collect (Domainp A) \\<longrightarrow>\n            sup x (inf y z) = inf (sup x y) (sup x z))) =\n    (\\<lambda>inf less_eq less sup.\n        lattice_ow (Collect (Domainp A)) inf less_eq less sup \\<and>\n        (\\<forall>x\\<in>Collect (Domainp A).\n            \\<forall>y\\<in>Collect (Domainp A).\n               \\<forall>z\\<in>Collect (Domainp A).\n                  sup x (inf y z) = inf (sup x y) (sup x z)))", "by simp"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context distrib_lattice_ow \nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting distrib_lattice_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma inf_sup_distrib1:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\"\n  shows \"x \\<sqinter>\\<^sub>o\\<^sub>w (y \\<squnion>\\<^sub>o\\<^sub>w z) = x \\<sqinter>\\<^sub>o\\<^sub>w y \\<squnion>\\<^sub>o\\<^sub>w (x \\<sqinter>\\<^sub>o\\<^sub>w z)\"\n  is distrib_lattice_class.inf_sup_distrib1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma inf_sup_distrib2:\n  assumes \"y \\<in> U\" and \"z \\<in> U\" and \"x \\<in> U\"\n  shows \"y \\<squnion>\\<^sub>o\\<^sub>w z \\<sqinter>\\<^sub>o\\<^sub>w x = y \\<sqinter>\\<^sub>o\\<^sub>w x \\<squnion>\\<^sub>o\\<^sub>w (z \\<sqinter>\\<^sub>o\\<^sub>w x)\"\n    is distrib_lattice_class.inf_sup_distrib2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma sup_inf_distrib2:\n  assumes \"y \\<in> U\" and \"z \\<in> U\" and \"x \\<in> U\"\n  shows \"y \\<sqinter>\\<^sub>o\\<^sub>w z \\<squnion>\\<^sub>o\\<^sub>w x = y \\<squnion>\\<^sub>o\\<^sub>w x \\<sqinter>\\<^sub>o\\<^sub>w (z \\<squnion>\\<^sub>o\\<^sub>w x)\"\n    is distrib_lattice_class.sup_inf_distrib2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}