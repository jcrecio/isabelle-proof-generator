{"file_name": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension/Examples/SML_Relativization/Lattices/SML_Linorders.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension", "problem_names": ["lemma linorder_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=)) \n      (linorder_ow (Collect (Domainp A))) class.linorder\"", "lemma dense_linorder_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> (=)) ===> (A ===> A ===> (=))  ===> (=)) \n      (dense_linorder_ow (Collect (Domainp A))) class.dense_linorder\""], "translations": [["", "lemma linorder_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=)) \n      (linorder_ow (Collect (Domainp A))) class.linorder\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (linorder_ow (Collect (Domainp A))) class.linorder", "unfolding \n    linorder_ow_def class.linorder_def\n    linorder_ow_axioms_def class.linorder_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (\\<lambda>le ls.\n         order_ow (Collect (Domainp A)) le ls \\<and>\n         (\\<forall>x y.\n             x \\<in> Collect (Domainp A) \\<longrightarrow>\n             y \\<in> Collect (Domainp A) \\<longrightarrow>\n             le x y \\<or> le y x))\n     (\\<lambda>less_eq less.\n         class.order less_eq less \\<and>\n         (\\<forall>x y. less_eq x y \\<or> less_eq y x))", "apply transfer_prover_start"], ["proof (prove)\ngoal (6 subgoals):\n 1. Transfer.Rel ((=) ===> (=) ===> ?Rj15) ?ad15 (\\<or>)\n 2. Transfer.Rel ((A ===> ?Rj15) ===> ?Ri15) ?ac15 All\n 3. Transfer.Rel ((A ===> ?Ri15) ===> ?Rg15) ?ab15 All\n 4. Transfer.Rel ((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> ?Rf15)\n     ?aa15 class.order\n 5. Transfer.Rel (?Rf15 ===> ?Rg15 ===> (=)) ?a15 (\\<and>)\n 6. (\\<lambda>le ls.\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            le x y \\<or> le y x)) =\n    (\\<lambda>less_eq less.\n        ?a15 (?aa15 less_eq less)\n         (?ab15\n           (\\<lambda>x.\n               ?ac15 (\\<lambda>y. ?ad15 (less_eq x y) (less_eq y x)))))", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>le ls.\n        order_ow (Collect (Domainp A)) le ls \\<and>\n        (\\<forall>x y.\n            x \\<in> Collect (Domainp A) \\<longrightarrow>\n            y \\<in> Collect (Domainp A) \\<longrightarrow>\n            le x y \\<or> le y x)) =\n    (\\<lambda>less_eq less.\n        order_ow (Collect (Domainp A)) less_eq less \\<and>\n        (\\<forall>x\\<in>Collect (Domainp A).\n            \\<forall>y\\<in>Collect (Domainp A).\n               less_eq x y \\<or> less_eq y x))", "by simp"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context linorder_ow \nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting linorder_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma le_less_linear:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"x \\<le>\\<^sub>o\\<^sub>w y \\<or> y <\\<^sub>o\\<^sub>w x\"\n  is linorder_class.le_less_linear"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma not_less:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(\\<not> x <\\<^sub>o\\<^sub>w y) = (y \\<le>\\<^sub>o\\<^sub>w x)\"\n    is linorder_class.not_less"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma not_le:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(\\<not> x \\<le>\\<^sub>o\\<^sub>w y) = (y <\\<^sub>o\\<^sub>w x)\"\n    is linorder_class.not_le"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma lessThan_minus_lessThan:\n  assumes \"n \\<in> U\" and \"m \\<in> U\"\n  shows \"{..<\\<^sub>o\\<^sub>wn} - {..<\\<^sub>o\\<^sub>wm} = (on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {m..<n})\"\n    is linorder_class.lessThan_minus_lessThan"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Ici_subset_Ioi_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"({a..\\<^sub>o\\<^sub>w} \\<subseteq> {b<\\<^sub>o\\<^sub>w..}) = (b <\\<^sub>o\\<^sub>w a)\"\n    is linorder_class.Ici_subset_Ioi_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Iic_subset_Iio_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"({..\\<^sub>o\\<^sub>wa} \\<subseteq> {..<\\<^sub>o\\<^sub>wb}) = (a <\\<^sub>o\\<^sub>w b)\"\n    is linorder_class.Iic_subset_Iio_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma leI:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"\\<not> x <\\<^sub>o\\<^sub>w y\"\n  shows \"y \\<le>\\<^sub>o\\<^sub>w x\"\n    is linorder_class.leI"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma not_le_imp_less:\n  assumes \"y \\<in> U\" and \"x \\<in> U\" and \"\\<not> y \\<le>\\<^sub>o\\<^sub>w x\"\n  shows \"x <\\<^sub>o\\<^sub>w y\"\n    is linorder_class.not_le_imp_less"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_atMost:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"{..\\<^sub>o\\<^sub>wa} \\<inter> {..\\<^sub>o\\<^sub>wb} = {..\\<^sub>o\\<^sub>wmin a b}\"\n    is linorder_class.Int_atMost"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma lessThan_Int_lessThan:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"{a<\\<^sub>o\\<^sub>w..} \\<inter> {b<\\<^sub>o\\<^sub>w..} = {max a b<\\<^sub>o\\<^sub>w..}\"\n    is linorder_class.lessThan_Int_lessThan"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma greaterThan_Int_greaterThan:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"{..<\\<^sub>o\\<^sub>wa} \\<inter> {..<\\<^sub>o\\<^sub>wb} = {..<\\<^sub>o\\<^sub>wmin a b}\"\n    is linorder_class.greaterThan_Int_greaterThan"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma less_linear:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"x <\\<^sub>o\\<^sub>w y \\<or> x = y \\<or> y <\\<^sub>o\\<^sub>w x\"\n    is linorder_class.less_linear"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_atLeastAtMostR2:\n  assumes \"a \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"{a..\\<^sub>o\\<^sub>w} \\<inter> {c..\\<^sub>o\\<^sub>wd} = {max a c..\\<^sub>o\\<^sub>wd}\"\n    is linorder_class.Int_atLeastAtMostR2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_atLeastAtMostR1:\n  assumes \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"{..\\<^sub>o\\<^sub>wb} \\<inter> {c..\\<^sub>o\\<^sub>wd} = {c..\\<^sub>o\\<^sub>wmin b d}\"\n    is linorder_class.Int_atLeastAtMostR1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_atLeastAtMostL2:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\"\n  shows \"{a..\\<^sub>o\\<^sub>wb} \\<inter> {c..\\<^sub>o\\<^sub>w} = {max a c..\\<^sub>o\\<^sub>wb}\"\n    is linorder_class.Int_atLeastAtMostL2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_atLeastAtMostL1:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"d \\<in> U\"\n  shows \"{a..\\<^sub>o\\<^sub>wb} \\<inter> {..\\<^sub>o\\<^sub>wd} = {a..\\<^sub>o\\<^sub>wmin b d}\"\n    is linorder_class.Int_atLeastAtMostL1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma neq_iff:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(x \\<noteq> y) = (x <\\<^sub>o\\<^sub>w y \\<or> y <\\<^sub>o\\<^sub>w x)\"\n    is linorder_class.neq_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma not_less_iff_gr_or_eq:\n  assumes \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(\\<not> x <\\<^sub>o\\<^sub>w y) = (y <\\<^sub>o\\<^sub>w x \\<or> x = y)\"\n    is linorder_class.not_less_iff_gr_or_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma max_min_distrib2:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\"\n  shows \"max a (min b c) = min (max a b) (max a c)\"\n    is linorder_class.max_min_distrib2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma max_min_distrib1:\n  assumes \"b \\<in> U\" and \"c \\<in> U\" and \"a \\<in> U\"\n  shows \"max (min b c) a = min (max b a) (max c a)\"\n    is linorder_class.max_min_distrib1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma min_max_distrib2:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\"\n  shows \"min a (max b c) = max (min a b) (min a c)\"\n    is linorder_class.min_max_distrib2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma min_max_distrib1:\n  assumes \"b \\<in> U\" and \"c \\<in> U\" and \"a \\<in> U\"\n  shows \"min (max b c) a = max (min b a) (min c a)\"\n    is linorder_class.min_max_distrib1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma atLeastAtMost_diff_ends:\n  assumes \"a \\<in> U\" and \"b \\<in> U\"\n  shows \"{a..\\<^sub>o\\<^sub>wb} - {a, b} = {a<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wb}\"\n    is linorder_class.atLeastAtMost_diff_ends"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma less_max_iff_disj:\n  assumes \"z \\<in> U\" and \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(z <\\<^sub>o\\<^sub>w max x y) = (z <\\<^sub>o\\<^sub>w x \\<or> z <\\<^sub>o\\<^sub>w y)\"\n    is linorder_class.less_max_iff_disj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma min_less_iff_conj:\n  assumes \"z \\<in> U\" and \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(z <\\<^sub>o\\<^sub>w min x y) = (z <\\<^sub>o\\<^sub>w x \\<and> z <\\<^sub>o\\<^sub>w y)\"\n    is linorder_class.min_less_iff_conj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma max_less_iff_conj:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\"\n  shows \"(max x y <\\<^sub>o\\<^sub>w z) = (x <\\<^sub>o\\<^sub>w z \\<and> y <\\<^sub>o\\<^sub>w z)\"\n    is linorder_class.max_less_iff_conj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma min_less_iff_disj:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\"\n  shows \"(min x y <\\<^sub>o\\<^sub>w z) = (x <\\<^sub>o\\<^sub>w z \\<or> y <\\<^sub>o\\<^sub>w z)\"\n    is linorder_class.min_less_iff_disj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_max_iff_disj:\n  assumes \"z \\<in> U\" and \"x \\<in> U\" and \"y \\<in> U\"\n  shows \"(z \\<le>\\<^sub>o\\<^sub>w max x y) = (z \\<le>\\<^sub>o\\<^sub>w x \\<or> z \\<le>\\<^sub>o\\<^sub>w y)\"\n    is linorder_class.le_max_iff_disj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma min_le_iff_disj:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"z \\<in> U\"\n  shows \"(min x y \\<le>\\<^sub>o\\<^sub>w z) = (x \\<le>\\<^sub>o\\<^sub>w z \\<or> y \\<le>\\<^sub>o\\<^sub>w z)\"\n    is linorder_class.min_le_iff_disj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma antisym_conv3:\n  assumes \"y \\<in> U\" and \"x \\<in> U\" and \"\\<not> y <\\<^sub>o\\<^sub>w x\"\n  shows \"(\\<not> x <\\<^sub>o\\<^sub>w y) = (x = y)\"\n    is linorder_class.antisym_conv3"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_atLeastAtMost:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"{a..\\<^sub>o\\<^sub>wb} \\<inter> {c..\\<^sub>o\\<^sub>wd} = {max a c..\\<^sub>o\\<^sub>wmin b d}\"\n    is linorder_class.Int_atLeastAtMost"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_atLeastLessThan:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \n    \"(on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {a..<b}) \\<inter> (on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {c..<d}) = \n      (on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {(max a c)..<(min b d)})\"\n    is linorder_class.Int_atLeastLessThan"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_greaterThanAtMost:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"{a<\\<^sub>o\\<^sub>w..b} \\<inter> {c<\\<^sub>o\\<^sub>w..d} = {max a c<\\<^sub>o\\<^sub>w..min b d}\"\n    is linorder_class.Int_greaterThanAtMost"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Int_greaterThanLessThan:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"{a<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wb} \\<inter> {c<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wd} = {max a c<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wmin b d}\"\n    is linorder_class.Int_greaterThanLessThan"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_cases:\n  assumes \"x \\<in> U\" and \"y \\<in> U\" and \"x \\<le>\\<^sub>o\\<^sub>w y \\<Longrightarrow> P\" and \"y \\<le>\\<^sub>o\\<^sub>w x \\<Longrightarrow> P\"\n  shows P\n    is linorder_class.le_cases"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma split_max:\n  assumes \"i \\<in> U\" and \"j \\<in> U\"\n  shows \"P (max i j) = ((i \\<le>\\<^sub>o\\<^sub>w j \\<longrightarrow> P j) \\<and> (\\<not> i \\<le>\\<^sub>o\\<^sub>w j \\<longrightarrow> P i))\"\n    is linorder_class.split_max"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma split_min:\n  assumes \"i \\<in> U\" and \"j \\<in> U\"\n  shows \"P (min i j) = ((i \\<le>\\<^sub>o\\<^sub>w j \\<longrightarrow> P i) \\<and> (\\<not> i \\<le>\\<^sub>o\\<^sub>w j \\<longrightarrow> P j))\"\n    is linorder_class.split_min"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Ioc_subset_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"({a<\\<^sub>o\\<^sub>w..b} \\<subseteq> {c<\\<^sub>o\\<^sub>w..d}) = (b \\<le>\\<^sub>o\\<^sub>w a \\<or> b \\<le>\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a)\"\n    is linorder_class.Ioc_subset_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma atLeastLessThan_subset_iff:\n  assumes \"a \\<in> U\"\n    and \"b \\<in> U\"\n    and \"c \\<in> U\"\n    and \"d \\<in> U\"\n    and \"(on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {a..<b}) \\<subseteq> (on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {c..<d})\"\n  shows \"b \\<le>\\<^sub>o\\<^sub>w a \\<or> b \\<le>\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a\"\n    is linorder_class.atLeastLessThan_subset_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Ioc_inj:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"({a<\\<^sub>o\\<^sub>w..b} = {c<\\<^sub>o\\<^sub>w..d}) = (b \\<le>\\<^sub>o\\<^sub>w a \\<and> d \\<le>\\<^sub>o\\<^sub>w c \\<or> a = c \\<and> b = d)\"\n    is linorder_class.Ioc_inj"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma neqE:\n  assumes \"x \\<in> U\"\n    and \"y \\<in> U\"\n    and \"x \\<noteq> y\"\n    and \"x <\\<^sub>o\\<^sub>w y \\<Longrightarrow> R\"\n    and \"y <\\<^sub>o\\<^sub>w x \\<Longrightarrow> R\"\n  shows R\n    is linorder_class.neqE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma Ioc_disjoint:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \n    \"({a<\\<^sub>o\\<^sub>w..b} \\<inter> {c<\\<^sub>o\\<^sub>w..d} = {}) = (b \\<le>\\<^sub>o\\<^sub>w a \\<or> d \\<le>\\<^sub>o\\<^sub>w c \\<or> b \\<le>\\<^sub>o\\<^sub>w c \\<or> d \\<le>\\<^sub>o\\<^sub>w a)\"\n    is linorder_class.Ioc_disjoint"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma linorder_cases:\n  assumes \"x \\<in> U\"\n    and \"y \\<in> U\"\n    and \"x <\\<^sub>o\\<^sub>w y \\<Longrightarrow> P\"\n    and \"x = y \\<Longrightarrow> P\"\n    and \"y <\\<^sub>o\\<^sub>w x \\<Longrightarrow> P\"\n  shows P\n    is linorder_class.linorder_cases"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma le_cases3:\n  assumes \"x \\<in> U\"\n    and \"y \\<in> U\"\n    and \"z \\<in> U\"\n    and \"\\<lbrakk>x \\<le>\\<^sub>o\\<^sub>w y; y \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk> \\<Longrightarrow> P\"\n    and \"\\<lbrakk>y \\<le>\\<^sub>o\\<^sub>w x; x \\<le>\\<^sub>o\\<^sub>w z\\<rbrakk> \\<Longrightarrow> P\"\n    and \"\\<lbrakk>x \\<le>\\<^sub>o\\<^sub>w z; z \\<le>\\<^sub>o\\<^sub>w y\\<rbrakk> \\<Longrightarrow> P\"\n    and \"\\<lbrakk>z \\<le>\\<^sub>o\\<^sub>w y; y \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk> \\<Longrightarrow> P\"\n    and \"\\<lbrakk>y \\<le>\\<^sub>o\\<^sub>w z; z \\<le>\\<^sub>o\\<^sub>w x\\<rbrakk> \\<Longrightarrow> P\"\n    and \"\\<lbrakk>z \\<le>\\<^sub>o\\<^sub>w x; x \\<le>\\<^sub>o\\<^sub>w y\\<rbrakk> \\<Longrightarrow> P\"\n  shows P\n    is linorder_class.le_cases3"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "context order_linorder_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U\\<^sub>2) and (?'b to U\\<^sub>1)\n  rewriting ctr_simps\n  substituting order.order_ow_axioms and lo.linorder_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma strict_mono_imp_inj_on:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\\<^sub>1\"\n    and \"A \\<subseteq> U\\<^sub>2\"\n    and \"on U\\<^sub>2 with (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) : \\<guillemotleft>strict_mono\\<guillemotright> f\"\n  shows \"inj_on f A\"\n    is linorder_class.strict_mono_imp_inj_on"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma strict_mono_eq:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\\<^sub>1\"\n    and \"x \\<in> U\\<^sub>2\"\n    and \"y \\<in> U\\<^sub>2\"\n    and \"on U\\<^sub>2 with (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) : \\<guillemotleft>strict_mono\\<guillemotright> f\"\n  shows \"(f x = f y) = (x = y)\"\n    is linorder_class.strict_mono_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma strict_mono_less:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\\<^sub>1\"\n    and \"x \\<in> U\\<^sub>2\"\n    and \"y \\<in> U\\<^sub>2\"\n    and \"on U\\<^sub>2 with (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) : \\<guillemotleft>strict_mono\\<guillemotright> f\"\n  shows \"(f x <\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1 f y) = (x <\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 y)\"\n    is linorder_class.strict_mono_less"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma strict_mono_less_eq:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\\<^sub>1\"\n    and \"x \\<in> U\\<^sub>2\"\n    and \"y \\<in> U\\<^sub>2\"\n    and \"on U\\<^sub>2 with (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) (<\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) : \\<guillemotleft>strict_mono\\<guillemotright> f\"\n  shows \"(f x \\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1 f y) = (x \\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 y)\"\n    is linorder_class.strict_mono_less_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma mono_strict_invE:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\\<^sub>1\"\n    and \"x \\<in> U\\<^sub>2\"\n    and \"y \\<in> U\\<^sub>2\"\n    and \"on U\\<^sub>2 with (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) : \\<guillemotleft>mono\\<guillemotright> f\"\n    and \"f x <\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1 f y\"\n    and \"x <\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 y \\<Longrightarrow> thesis\"\n  shows thesis\n    is linorder_class.mono_strict_invE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma mono_invE:\n  assumes \"\\<forall>x\\<in>U\\<^sub>2. f x \\<in> U\\<^sub>1\"\n    and \"x \\<in> U\\<^sub>2\"\n    and \"y \\<in> U\\<^sub>2\"\n    and \"on U\\<^sub>2 with (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) : \\<guillemotleft>mono\\<guillemotright> f\"\n    and \"f x <\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1 f y\"\n    and \"x \\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2 y \\<Longrightarrow> thesis\"\n  shows thesis\n    is linorder_class.mono_invE"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "context linorder_pair_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U\\<^sub>1) and (?'b to U\\<^sub>2)\n  rewriting ctr_simps\n  substituting lo\\<^sub>1.linorder_ow_axioms and lo\\<^sub>2.linorder_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma max_of_mono:\n  assumes \"\\<forall>x\\<in>U\\<^sub>1. f x \\<in> U\\<^sub>2\"\n    and \"m \\<in> U\\<^sub>1\"\n    and \"n \\<in> U\\<^sub>1\"\n    and \"on U\\<^sub>1 with (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) : \\<guillemotleft>mono\\<guillemotright> f\"\n  shows \"lo\\<^sub>2.max (f m) (f n) = f (lo\\<^sub>1.max m n)\"\n    is linorder_class.max_of_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma min_of_mono:\n  assumes \"\\<forall>x\\<in>U\\<^sub>1. f x \\<in> U\\<^sub>2\"\n    and \"m \\<in> U\\<^sub>1\"\n    and \"n \\<in> U\\<^sub>1\"\n    and \"on U\\<^sub>1 with (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>2) (\\<le>\\<^sub>o\\<^sub>w\\<^sub>.\\<^sub>1) : \\<guillemotleft>mono\\<guillemotright> f\"\n  shows \"lo\\<^sub>2.min (f m) (f n) = f (lo\\<^sub>1.min m n)\"\n    is linorder_class.min_of_mono"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "subsection\\<open>Dense linear orders\\<close>"], ["", "subsubsection\\<open>Definitions and further properties\\<close>"], ["", "locale dense_linorder_ow = linorder_ow U le ls + dense_order_ow U le ls\n  for U :: \"'ao set\" and le (infix \\<open>\\<le>\\<^sub>o\\<^sub>w\\<close> 50) and ls (infix \\<open><\\<^sub>o\\<^sub>w\\<close> 50)"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma dense_linorder_transfer[transfer_rule]:\n  assumes [transfer_rule]: \"bi_unique A\" \"right_total A\" \n  shows \n    \"((A ===> A ===> (=)) ===> (A ===> A ===> (=))  ===> (=)) \n      (dense_linorder_ow (Collect (Domainp A))) class.dense_linorder\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (dense_linorder_ow (Collect (Domainp A))) class.dense_linorder", "unfolding dense_linorder_ow_def class.dense_linorder_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> (=))\n     (\\<lambda>le ls.\n         linorder_ow (Collect (Domainp A)) le ls \\<and>\n         dense_order_ow (Collect (Domainp A)) le ls)\n     (\\<lambda>less_eq less.\n         class.dense_order less_eq less \\<and> class.linorder less_eq less)", "apply transfer_prover_start"], ["proof (prove)\ngoal (4 subgoals):\n 1. Transfer.Rel ((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> ?Rf9)\n     ?ab9 class.linorder\n 2. Transfer.Rel ((A ===> A ===> (=)) ===> (A ===> A ===> (=)) ===> ?Re9)\n     ?aa9 class.dense_order\n 3. Transfer.Rel (?Re9 ===> ?Rf9 ===> (=)) ?a9 (\\<and>)\n 4. (\\<lambda>le ls.\n        linorder_ow (Collect (Domainp A)) le ls \\<and>\n        dense_order_ow (Collect (Domainp A)) le ls) =\n    (\\<lambda>less_eq less. ?a9 (?aa9 less_eq less) (?ab9 less_eq less))", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>le ls.\n        linorder_ow (Collect (Domainp A)) le ls \\<and>\n        dense_order_ow (Collect (Domainp A)) le ls) =\n    (\\<lambda>less_eq less.\n        dense_order_ow (Collect (Domainp A)) less_eq less \\<and>\n        linorder_ow (Collect (Domainp A)) less_eq less)", "by auto"], ["", "end"], ["", "subsubsection\\<open>Relativization\\<close>"], ["", "context dense_linorder_ow \nbegin"], ["", "tts_context\n  tts: (?'a to U)\n  rewriting ctr_simps\n  substituting dense_linorder_ow_axioms\n  eliminating through simp\nbegin"], ["", "tts_lemma infinite_Icc:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"a <\\<^sub>o\\<^sub>w b\"\n  shows \"infinite {a..\\<^sub>o\\<^sub>wb}\"\n    is dense_linorder_class.infinite_Icc"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma infinite_Ico:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"a <\\<^sub>o\\<^sub>w b\"\n  shows \"infinite (on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {a..<b})\"\n    is dense_linorder_class.infinite_Ico"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma infinite_Ioc:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"a <\\<^sub>o\\<^sub>w b\"\n  shows \"infinite {a<\\<^sub>o\\<^sub>w..b}\"\n    is dense_linorder_class.infinite_Ioc"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma infinite_Ioo:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"a <\\<^sub>o\\<^sub>w b\"\n  shows \"infinite {a<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wb}\"\n    is dense_linorder_class.infinite_Ioo"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma atLeastLessThan_subseteq_atLeastAtMost_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \n    \"((on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {a..<b}) \\<subseteq> {c..\\<^sub>o\\<^sub>wd}) = \n      (a <\\<^sub>o\\<^sub>w b \\<longrightarrow> b \\<le>\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a)\"\n    is dense_linorder_class.atLeastLessThan_subseteq_atLeastAtMost_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma greaterThanAtMost_subseteq_atLeastAtMost_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"({a<\\<^sub>o\\<^sub>w..b} \\<subseteq> {c..\\<^sub>o\\<^sub>wd}) = (a <\\<^sub>o\\<^sub>w b \\<longrightarrow> b \\<le>\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a)\"\n    is dense_linorder_class.greaterThanAtMost_subseteq_atLeastAtMost_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma greaterThanAtMost_subseteq_atLeastLessThan_iff:\n  assumes \"a \\<in> U\"\n    and \"b \\<in> U\"\n    and \"c \\<in> U\"\n    and \"d \\<in> U\"\n  shows \"({a<\\<^sub>o\\<^sub>w..b} \\<subseteq> (on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {c..<d})) = \n    (a <\\<^sub>o\\<^sub>w b \\<longrightarrow> b <\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a)\"\n    is dense_linorder_class.greaterThanAtMost_subseteq_atLeastLessThan_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma greaterThanLessThan_subseteq_atLeastAtMost_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"({a<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wb} \\<subseteq> {c..\\<^sub>o\\<^sub>wd}) = (a <\\<^sub>o\\<^sub>w b \\<longrightarrow> b \\<le>\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a)\"\n    is dense_linorder_class.greaterThanLessThan_subseteq_atLeastAtMost_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma greaterThanLessThan_subseteq_atLeastLessThan_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \n    \"({a<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wb} \\<subseteq> (on U with (\\<le>\\<^sub>o\\<^sub>w) (<\\<^sub>o\\<^sub>w) : {c..<d})) = \n      (a <\\<^sub>o\\<^sub>w b \\<longrightarrow> b \\<le>\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a)\"\n    is dense_linorder_class.greaterThanLessThan_subseteq_atLeastLessThan_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma greaterThanLessThan_subseteq_greaterThanAtMost_iff:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"({a<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wb} \\<subseteq> {c<\\<^sub>o\\<^sub>w..d}) = (a <\\<^sub>o\\<^sub>w b \\<longrightarrow> b \\<le>\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a)\"\n    is dense_linorder_class.greaterThanLessThan_subseteq_greaterThanAtMost_iff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma greaterThanLessThan_subseteq_greaterThanLessThan:\n  assumes \"a \\<in> U\" and \"b \\<in> U\" and \"c \\<in> U\" and \"d \\<in> U\"\n  shows \"({a<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wb} \\<subseteq> {c<\\<^sub>o\\<^sub>w..<\\<^sub>o\\<^sub>wd}) = (a <\\<^sub>o\\<^sub>w b \\<longrightarrow> b \\<le>\\<^sub>o\\<^sub>w d \\<and> c \\<le>\\<^sub>o\\<^sub>w a)\"\n    is dense_linorder_class.greaterThanLessThan_subseteq_greaterThanLessThan"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}