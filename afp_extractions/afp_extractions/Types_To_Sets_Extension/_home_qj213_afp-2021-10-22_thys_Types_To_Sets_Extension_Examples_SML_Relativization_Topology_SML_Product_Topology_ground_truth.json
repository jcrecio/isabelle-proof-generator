{"file_name": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension/Examples/SML_Relativization/Topology/SML_Product_Topology.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Types_To_Sets_Extension", "problem_names": ["lemma (in product_topology_ow) open_with_oo_transfer[transfer_rule]:\n  includes lifting_syntax\n  fixes A :: \"['at, 'a] \\<Rightarrow> bool\"\n    and B :: \"['bt, 'b] \\<Rightarrow> bool\"\n  assumes tdr_U\\<^sub>1[transfer_domain_rule]: \"Domainp A = (\\<lambda>x. x \\<in> U\\<^sub>1)\"\n    and [transfer_rule]: \"bi_unique A\" \"right_total A\"  \n    and tdr_U\\<^sub>2[transfer_domain_rule]: \"Domainp B = (\\<lambda>x. x \\<in> U\\<^sub>2)\"\n    and [transfer_rule]: \"bi_unique B\" \"right_total B\" \n    and \\<tau>\\<^sub>1\\<tau>\\<^sub>1'[transfer_rule]: \"(rel_set A ===> (=)) \\<tau>\\<^sub>1 \\<tau>\\<^sub>1'\"\n    and \\<tau>\\<^sub>2\\<tau>\\<^sub>2'[transfer_rule]: \"(rel_set B ===> (=)) \\<tau>\\<^sub>2 \\<tau>\\<^sub>2'\"\n  shows \"(rel_set (rel_prod A B) ===> (=)) \\<tau> (open_prod.with \\<tau>\\<^sub>2' \\<tau>\\<^sub>1')\""], "translations": [["", "lemma (in product_topology_ow) open_with_oo_transfer[transfer_rule]:\n  includes lifting_syntax\n  fixes A :: \"['at, 'a] \\<Rightarrow> bool\"\n    and B :: \"['bt, 'b] \\<Rightarrow> bool\"\n  assumes tdr_U\\<^sub>1[transfer_domain_rule]: \"Domainp A = (\\<lambda>x. x \\<in> U\\<^sub>1)\"\n    and [transfer_rule]: \"bi_unique A\" \"right_total A\"  \n    and tdr_U\\<^sub>2[transfer_domain_rule]: \"Domainp B = (\\<lambda>x. x \\<in> U\\<^sub>2)\"\n    and [transfer_rule]: \"bi_unique B\" \"right_total B\" \n    and \\<tau>\\<^sub>1\\<tau>\\<^sub>1'[transfer_rule]: \"(rel_set A ===> (=)) \\<tau>\\<^sub>1 \\<tau>\\<^sub>1'\"\n    and \\<tau>\\<^sub>2\\<tau>\\<^sub>2'[transfer_rule]: \"(rel_set B ===> (=)) \\<tau>\\<^sub>2 \\<tau>\\<^sub>2'\"\n  shows \"(rel_set (rel_prod A B) ===> (=)) \\<tau> (open_prod.with \\<tau>\\<^sub>2' \\<tau>\\<^sub>1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set (rel_prod A B) ===> (=)) \\<tau>\n     (open_prod.with \\<tau>\\<^sub>2' \\<tau>\\<^sub>1')", "unfolding open_prod.with_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_set (rel_prod A B) ===> (=)) \\<tau>\n     (\\<lambda>S.\n         \\<forall>x\\<in>S.\n            \\<exists>A B.\n               \\<tau>\\<^sub>1' A \\<and>\n               \\<tau>\\<^sub>2' B \\<and>\n               x \\<in> A \\<times> B \\<and> A \\<times> B \\<subseteq> S)", "apply transfer_prover_start"], ["proof (prove)\ngoal (13 subgoals):\n 1. Transfer.Rel (?Rg25 ===> (?Rt25 ===> ?Ri25) ===> ?Rs25) ?ak25 Sigma\n 2. Transfer.Rel (?Rs25 ===> rel_set (rel_prod A B) ===> ?Rp25) ?aj25\n     (\\<subseteq>)\n 3. Transfer.Rel (?Rg25 ===> (?Rr25 ===> ?Ri25) ===> ?Rq25) ?ai25 Sigma\n 4. Transfer.Rel (?Rd25 ===> ?Rq25 ===> ?Ro25) ?ah25 (\\<in>)\n 5. Transfer.Rel (?Ro25 ===> ?Rp25 ===> ?Rn25) ?ag25 (\\<and>)\n 6. Transfer.Rel (?Ri25 ===> ?Rm25) ?af25 \\<tau>\\<^sub>2'\n 7. Transfer.Rel (?Rm25 ===> ?Rn25 ===> ?Rl25) ?ae25 (\\<and>)\n 8. Transfer.Rel (?Rg25 ===> ?Rk25) ?ad25 \\<tau>\\<^sub>1'\n 9. Transfer.Rel (?Rk25 ===> ?Rl25 ===> ?Rj25) ?ac25 (\\<and>)\n 10. Transfer.Rel ((?Ri25 ===> ?Rj25) ===> ?Rh25) ?ab25 Ex\nA total of 13 subgoals...", "apply transfer_step+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> =\n    (\\<lambda>S.\n        \\<forall>x\\<in>S.\n           \\<exists>A\\<in>{A. \\<forall>x\\<in>A. x \\<in> U\\<^sub>1}.\n              \\<exists>B\\<in>{A. \\<forall>x\\<in>A. x \\<in> U\\<^sub>2}.\n                 \\<tau>\\<^sub>1 A \\<and>\n                 \\<tau>\\<^sub>2 B \\<and>\n                 x \\<in> A \\<times> B \\<and> A \\<times> B \\<subseteq> S)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> =\n    (\\<lambda>S.\n        \\<forall>x\\<in>S.\n           \\<exists>A.\n              (\\<forall>x\\<in>A. x \\<in> U\\<^sub>1) \\<and>\n              \\<tau>\\<^sub>1 A \\<and>\n              (\\<exists>B.\n                  (\\<forall>x\\<in>B. x \\<in> U\\<^sub>2) \\<and>\n                  \\<tau>\\<^sub>2 B \\<and>\n                  x \\<in> A \\<times> B \\<and> A \\<times> B \\<subseteq> S))", "apply(fold subset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> =\n    (\\<lambda>S.\n        \\<forall>x\\<in>S.\n           \\<exists>A\\<subseteq>U\\<^sub>1.\n              \\<tau>\\<^sub>1 A \\<and>\n              (\\<exists>B\\<subseteq>U\\<^sub>2.\n                  \\<tau>\\<^sub>2 B \\<and>\n                  x \\<in> A \\<times> B \\<and> A \\<times> B \\<subseteq> S))", "unfolding open_prod open_ow_def tdr_U\\<^sub>1 tdr_U\\<^sub>2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>S.\n        \\<forall>x\\<in>S.\n           \\<exists>A\\<in>Pow U\\<^sub>1.\n              \\<exists>B\\<in>Pow U\\<^sub>2.\n                 \\<tau>\\<^sub>1 A \\<and>\n                 \\<tau>\\<^sub>2 B \\<and>\n                 A \\<times> B \\<subseteq> S \\<and> x \\<in> A \\<times> B) =\n    (\\<lambda>S.\n        \\<forall>x\\<in>S.\n           \\<exists>A\\<subseteq>U\\<^sub>1.\n              \\<tau>\\<^sub>1 A \\<and>\n              (\\<exists>B\\<subseteq>U\\<^sub>2.\n                  \\<tau>\\<^sub>2 B \\<and>\n                  x \\<in> A \\<times> B \\<and> A \\<times> B \\<subseteq> S))", "by (meson Pow_iff)"], ["", "subsection\\<open>Relativization\\<close>"], ["", "context product_topology_ow\nbegin"], ["", "tts_context\n  tts: (?'a to U\\<^sub>1) and (?'b to U\\<^sub>2)\n  rewriting ctr_simps\n  substituting ts\\<^sub>1.topological_space_ow_axioms \n    and ts\\<^sub>2.topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through (fold tts_implicit, insert closed_empty, simp)\n  applying [folded tts_implicit]\nbegin"], ["", "tts_lemma open_prod_intro:\n  assumes \"S \\<subseteq> U\\<^sub>1 \\<times> U\\<^sub>2\"\n    and \"\\<And>x. \\<lbrakk>x \\<in> U\\<^sub>1 \\<times> U\\<^sub>2; x \\<in> S\\<rbrakk> \\<Longrightarrow> \n      \\<exists>A\\<in>Pow U\\<^sub>1. \\<exists>B\\<in>Pow U\\<^sub>2. \\<tau>\\<^sub>1 A \\<and> \\<tau>\\<^sub>2 B \\<and> A \\<times> B \\<subseteq> S \\<and> x \\<in> A \\<times> B\"\n  shows \"\\<tau> S\"\n    is open_prod_intro"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_Times:\n  assumes \"S \\<subseteq> U\\<^sub>1\" and \"T \\<subseteq> U\\<^sub>2\" and \"\\<tau>\\<^sub>1 S\" and \"\\<tau>\\<^sub>2 T\"\n  shows \"\\<tau> (S \\<times> T)\"\n    is open_Times"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_vimage_fst:\n  assumes \"S \\<subseteq> U\\<^sub>1\" and \"\\<tau>\\<^sub>1 S\"\n  shows \"\\<tau> (fst -` S \\<inter> U\\<^sub>1 \\<times> U\\<^sub>2)\"\n    is open_vimage_fst"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_vimage_fst:\n  assumes \"S \\<subseteq> U\\<^sub>1\" and \"ts\\<^sub>1.closed S\"\n  shows \"closed (fst -` S \\<inter> U\\<^sub>1 \\<times> U\\<^sub>2)\"\n    is closed_vimage_fst"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_Times:\n  assumes \"S \\<subseteq> U\\<^sub>1\" and \"T \\<subseteq> U\\<^sub>2\" and \"ts\\<^sub>1.closed S\" and \"ts\\<^sub>2.closed T\"\n  shows \"closed (S \\<times> T)\"\n    is closed_Times"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_image_fst:\n  assumes \"S \\<subseteq> U\\<^sub>1 \\<times> U\\<^sub>2\" and \"\\<tau> S\"\n  shows \"\\<tau>\\<^sub>1 (fst ` S)\"\n    is open_image_fst"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma open_image_snd:\n  assumes \"S \\<subseteq> U\\<^sub>1 \\<times> U\\<^sub>2\" and \"\\<tau> S\"\n  shows \"\\<tau>\\<^sub>2 (snd ` S)\"\n    is open_image_snd"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'a to U\\<^sub>1) and (?'b to U\\<^sub>2)\n  rewriting ctr_simps\n  substituting ts\\<^sub>1.topological_space_ow_axioms \n    and ts\\<^sub>2.topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> \n    through (fold tts_implicit, unfold connected_ow_def, simp)\n  applying [folded tts_implicit]\nbegin"], ["", "tts_lemma connected_Times:\n  assumes \"S \\<subseteq> U\\<^sub>1\" and \"T \\<subseteq> U\\<^sub>2\" and \"ts\\<^sub>1.connected S\" and \"ts\\<^sub>2.connected T\"\n  shows \"connected (S \\<times> T)\"\n    is connected_Times"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma connected_Times_eq:\n  assumes \"S \\<subseteq> U\\<^sub>1\" and \"T \\<subseteq> U\\<^sub>2\"\n  shows \n    \"connected (S \\<times> T) = (S = {} \\<or> T = {} \\<or> ts\\<^sub>1.connected S \\<and> ts\\<^sub>2.connected T)\"\n  is connected_Times_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "tts_context\n  tts: (?'b to U\\<^sub>1) and (?'a to U\\<^sub>2)\n  rewriting ctr_simps\n  substituting ts\\<^sub>1.topological_space_ow_axioms \n    and ts\\<^sub>2.topological_space_ow_axioms\n  eliminating \\<open>?U \\<noteq> {}\\<close> through (fold tts_implicit, insert closed_empty, simp)\n  applying [folded tts_implicit]\nbegin"], ["", "tts_lemma open_vimage_snd:\n  assumes \"S \\<subseteq> U\\<^sub>2\" and \"\\<tau>\\<^sub>2 S\"\n  shows \"\\<tau> (snd -` S \\<inter> U\\<^sub>1 \\<times> U\\<^sub>2)\"\n    is open_vimage_snd"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "tts_lemma closed_vimage_snd:\n  assumes \"S \\<subseteq> U\\<^sub>2\" and \"ts\\<^sub>2.closed S\"\n  shows \"closed (snd -` S \\<inter> U\\<^sub>1 \\<times> U\\<^sub>2)\"\n    is closed_vimage_snd"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "end"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}