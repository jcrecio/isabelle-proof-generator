{"file_name": "/home/qj213/afp-2021-10-22/thys/Free-Groups/Generators.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Free-Groups", "problem_names": ["lemma (in group) gen_span_closed:\n  assumes \"gens \\<subseteq> carrier G\"\n  shows \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\"", "lemma (in group) gen_subgroup_is_subgroup: \n      \"gens \\<subseteq> carrier G \\<Longrightarrow> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<le> G\"", "lemma (in group) gen_subgroup_is_smallest_containing:\n  assumes \"gens \\<subseteq> carrier G\"\n    shows \"\\<Inter>{H. H \\<le> G \\<and> gens \\<subseteq> H} = \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\"", "lemma hom_unique_on_span:\n  assumes \"group G\"\n      and \"group H\"\n      and \"gens \\<subseteq> carrier G\"\n      and \"h \\<in> hom G H\"\n      and \"h' \\<in> hom G H\"\n      and \"\\<forall>g \\<in> gens. h g = h' g\"\n  shows \"\\<forall>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>. h x = h' x\"", "lemma (in group) hom_unique_by_gens:\n  assumes \"group H\"\n      and gens: \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> = carrier G\"\n      and \"h \\<in> hom G H\"\n      and \"h' \\<in> hom G H\"\n      and \"\\<forall>g \\<in> gens. h g = h' g\"\n  shows \"\\<forall>x \\<in> carrier G. h x = h' x\"", "lemma (in group_hom) hom_span:\n  assumes \"gens \\<subseteq> carrier G\"\n  shows \"h ` (\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>) = \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\"", "lemma (in monoid) m_concat_closed[simp]:\n \"set l \\<subseteq> carrier G \\<Longrightarrow> m_concat l \\<in> carrier G\"", "lemma (in monoid) m_concat_append[simp]:\n  assumes \"set a \\<subseteq> carrier G\"\n      and \"set b \\<subseteq> carrier G\"\n  shows \"m_concat (a@b) = m_concat a \\<otimes> m_concat b\"", "lemma (in monoid) m_concat_cons[simp]:\n  \"\\<lbrakk> x \\<in> carrier G ; set xs \\<subseteq> carrier G \\<rbrakk> \\<Longrightarrow> m_concat (x#xs) = x \\<otimes> m_concat xs\"", "lemma (in monoid) nat_pow_mult1l:\n  assumes x: \"x \\<in> carrier G\"\n  shows \"x \\<otimes> x [^] n = x [^] Suc n\"", "lemma (in monoid) m_concat_power[simp]: \"x \\<in> carrier G \\<Longrightarrow> m_concat (replicate n x) = x [^] n\"", "lemma group_homI[intro]:\n  assumes range: \"h ` (carrier g1) \\<subseteq> carrier g2\"\n      and hom: \"\\<forall>x\\<in>carrier g1. \\<forall>y\\<in>carrier g1. h (x \\<otimes>\\<^bsub>g1\\<^esub> y) = h x \\<otimes>\\<^bsub>g2\\<^esub> h y\"\n  shows \"h \\<in> hom g1 g2\"", "lemma (in group_hom) hom_injI:\n  assumes \"\\<forall>x\\<in>carrier G. h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\\<^bsub>G\\<^esub>\"\n  shows \"inj_on h (carrier G)\"", "lemma (in group_hom) group_hom_isoI:\n  assumes inj1: \"\\<forall>x\\<in>carrier G. h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\\<^bsub>G\\<^esub>\"\n      and surj: \"h ` (carrier G) = carrier H\"\n  shows \"h \\<in> iso G H\"", "lemma group_isoI[intro]:\n  assumes G: \"group G\"\n      and H: \"group H\"\n      and inj1: \"\\<forall>x\\<in>carrier G. h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\\<^bsub>G\\<^esub>\"\n      and surj: \"h ` (carrier G) = carrier H\"\n      and hom: \"\\<forall>x\\<in>carrier G. \\<forall>y\\<in>carrier G. h (x \\<otimes>\\<^bsub>G\\<^esub> y) = h x \\<otimes>\\<^bsub>H\\<^esub> h y\"\n  shows \"h \\<in> iso G H\""], "translations": [["", "lemma (in group) gen_span_closed:\n  assumes \"gens \\<subseteq> carrier G\"\n  shows \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>gens\\<rangle> \\<subseteq> carrier G", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> carrier G", "(* How can I do this in one \"by\" line? *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> carrier G", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> carrier G", "from assms"], ["proof (chain)\npicking this:\n  gens \\<subseteq> carrier G", "show \"x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow> x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  gens \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> carrier G", "by -(induct rule:gen_span.induct, auto)"], ["proof (state)\nthis:\n  x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) gen_subgroup_is_subgroup: \n      \"gens \\<subseteq> carrier G \\<Longrightarrow> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<le> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gens \\<subseteq> carrier G \\<Longrightarrow>\n    \\<langle>gens\\<rangle> \\<le> G", "by(rule subgroupI)(auto intro:gen_span.intros simp add:gen_span_closed)"], ["", "lemma (in group) gen_subgroup_is_smallest_containing:\n  assumes \"gens \\<subseteq> carrier G\"\n    shows \"\\<Inter>{H. H \\<le> G \\<and> gens \\<subseteq> H} = \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H} =\n    \\<langle>gens\\<rangle>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n    \\<subseteq> \\<langle>gens\\<rangle>\n 2. \\<langle>gens\\<rangle>\n    \\<subseteq> \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}", "show \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> \\<Inter>{H. H \\<le> G \\<and> gens \\<subseteq> H}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>gens\\<rangle>\n    \\<subseteq> \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}", "proof(rule Inf_greatest)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {H. H \\<le> G \\<and> gens \\<subseteq> H} \\<Longrightarrow>\n       \\<langle>gens\\<rangle> \\<subseteq> x", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {H. H \\<le> G \\<and> gens \\<subseteq> H} \\<Longrightarrow>\n       \\<langle>gens\\<rangle> \\<subseteq> x", "assume \"H \\<in> {H. H \\<le> G \\<and> gens \\<subseteq> H}\""], ["proof (state)\nthis:\n  H \\<in> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {H. H \\<le> G \\<and> gens \\<subseteq> H} \\<Longrightarrow>\n       \\<langle>gens\\<rangle> \\<subseteq> x", "hence \"H \\<le> G\" and \"gens \\<subseteq> H\""], ["proof (prove)\nusing this:\n  H \\<in> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n\ngoal (1 subgoal):\n 1. H \\<le> G &&& gens \\<subseteq> H", "by auto"], ["proof (state)\nthis:\n  H \\<le> G\n  gens \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {H. H \\<le> G \\<and> gens \\<subseteq> H} \\<Longrightarrow>\n       \\<langle>gens\\<rangle> \\<subseteq> x", "show \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>gens\\<rangle> \\<subseteq> H", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> H", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> H", "from \\<open>H \\<le> G\\<close> and \\<open>gens \\<subseteq> H\\<close>"], ["proof (chain)\npicking this:\n  H \\<le> G\n  gens \\<subseteq> H", "show \"x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow> x \\<in> H\""], ["proof (prove)\nusing this:\n  H \\<le> G\n  gens \\<subseteq> H\n\ngoal (1 subgoal):\n 1. x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> H", "unfolding subgroup_def"], ["proof (prove)\nusing this:\n  (H \\<subseteq> carrier G \\<and>\n   (\\<forall>x y.\n       x \\<in> H \\<longrightarrow>\n       y \\<in> H \\<longrightarrow> x \\<otimes> y \\<in> H)) \\<and>\n  \\<one> \\<in> H \\<and>\n  (\\<forall>x. x \\<in> H \\<longrightarrow> inv x \\<in> H)\n  gens \\<subseteq> H\n\ngoal (1 subgoal):\n 1. x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> H", "by -(induct rule:gen_span.induct, auto)"], ["proof (state)\nthis:\n  x \\<in> \\<langle>gens\\<rangle> \\<Longrightarrow> x \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>gens\\<rangle> \\<subseteq> H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>gens\\<rangle>\n  \\<subseteq> \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n\ngoal (1 subgoal):\n 1. \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n    \\<subseteq> \\<langle>gens\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n    \\<subseteq> \\<langle>gens\\<rangle>", "from \\<open>gens \\<subseteq> carrier G\\<close>"], ["proof (chain)\npicking this:\n  gens \\<subseteq> carrier G", "have \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<le> G\""], ["proof (prove)\nusing this:\n  gens \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<langle>gens\\<rangle> \\<le> G", "by (rule gen_subgroup_is_subgroup)"], ["proof (state)\nthis:\n  \\<langle>gens\\<rangle> \\<le> G\n\ngoal (1 subgoal):\n 1. \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n    \\<subseteq> \\<langle>gens\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>gens\\<rangle> \\<le> G\n\ngoal (1 subgoal):\n 1. \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n    \\<subseteq> \\<langle>gens\\<rangle>", "have \"gens \\<subseteq> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gens \\<subseteq> \\<langle>gens\\<rangle>", "by (auto intro:gen_span.intros)"], ["proof (state)\nthis:\n  gens \\<subseteq> \\<langle>gens\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n    \\<subseteq> \\<langle>gens\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>gens\\<rangle> \\<le> G\n  gens \\<subseteq> \\<langle>gens\\<rangle>", "show \"\\<Inter>{H. H \\<le> G \\<and> gens \\<subseteq> H} \\<subseteq> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<langle>gens\\<rangle> \\<le> G\n  gens \\<subseteq> \\<langle>gens\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n    \\<subseteq> \\<langle>gens\\<rangle>", "by(auto intro:Inter_lower)"], ["proof (state)\nthis:\n  \\<Inter> {H. H \\<le> G \\<and> gens \\<subseteq> H}\n  \\<subseteq> \\<langle>gens\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Generators and homomorphisms\\<close>"], ["", "text \\<open>Two homorphisms agreeing on some elements agree on the span of those elements.\\<close>"], ["", "lemma hom_unique_on_span:\n  assumes \"group G\"\n      and \"group H\"\n      and \"gens \\<subseteq> carrier G\"\n      and \"h \\<in> hom G H\"\n      and \"h' \\<in> hom G H\"\n      and \"\\<forall>g \\<in> gens. h g = h' g\"\n  shows \"\\<forall>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>. h x = h' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>. h x = h' x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n       h x = h' x", "interpret G: group G"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n       h x = h' x", "interpret H: group H"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group H", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n       h x = h' x", "interpret h: group_hom G H h"], ["proof (prove)\ngoal (1 subgoal):\n 1. group_hom G H h", "by unfold_locales fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n       h x = h' x", "interpret h': group_hom G H h'"], ["proof (prove)\ngoal (1 subgoal):\n 1. group_hom G H h'", "by unfold_locales fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n       h x = h' x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n       h x = h' x", "from \\<open>gens \\<subseteq> carrier G\\<close>"], ["proof (chain)\npicking this:\n  gens \\<subseteq> carrier G", "have \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  gens \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G", "by (rule G.gen_span_closed)"], ["proof (state)\nthis:\n  \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n       h x = h' x", "with assms"], ["proof (chain)\npicking this:\n  Group.group G\n  Group.group H\n  gens \\<subseteq> carrier G\n  h \\<in> hom G H\n  h' \\<in> hom G H\n  \\<forall>g\\<in>gens. h g = h' g\n  \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G", "show \"x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow> h x = h' x\""], ["proof (prove)\nusing this:\n  Group.group G\n  Group.group H\n  gens \\<subseteq> carrier G\n  h \\<in> hom G H\n  h' \\<in> hom G H\n  \\<forall>g\\<in>gens. h g = h' g\n  \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n    h x = h' x", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>; Group.group G;\n     Group.group H; gens \\<subseteq> carrier G; h \\<in> hom G H;\n     h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n     \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> h x = h' x", "proof(induct rule:gen_span.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n     h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n     \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> h \\<one>\\<^bsub>G\\<^esub> = h' \\<one>\\<^bsub>G\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> gens; Group.group G; Group.group H;\n        gens \\<subseteq> carrier G; h \\<in> hom G H; h' \\<in> hom G H;\n        \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h x = h' x\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h x = h' x;\n        Group.group G; Group.group H; gens \\<subseteq> carrier G;\n        h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h (inv\\<^bsub>G\\<^esub> x) =\n                         h' (inv\\<^bsub>G\\<^esub> x)\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h x = h' x;\n        y \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h y = h' y;\n        Group.group G; Group.group H; gens \\<subseteq> carrier G;\n        h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         h' (x \\<otimes>\\<^bsub>G\\<^esub> y)", "case (gen_mult x y)"], ["proof (state)\nthis:\n  x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n  \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n   h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n   \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> h x = h' x\n  y \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n  \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n   h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n   \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> h y = h' y\n  Group.group G\n  Group.group H\n  gens \\<subseteq> carrier G\n  h \\<in> hom G H\n  h' \\<in> hom G H\n  \\<forall>g\\<in>gens. h g = h' g\n  \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\n\ngoal (4 subgoals):\n 1. \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n     h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n     \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> h \\<one>\\<^bsub>G\\<^esub> = h' \\<one>\\<^bsub>G\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> gens; Group.group G; Group.group H;\n        gens \\<subseteq> carrier G; h \\<in> hom G H; h' \\<in> hom G H;\n        \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h x = h' x\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h x = h' x;\n        Group.group G; Group.group H; gens \\<subseteq> carrier G;\n        h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h (inv\\<^bsub>G\\<^esub> x) =\n                         h' (inv\\<^bsub>G\\<^esub> x)\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h x = h' x;\n        y \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h y = h' y;\n        Group.group G; Group.group H; gens \\<subseteq> carrier G;\n        h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         h' (x \\<otimes>\\<^bsub>G\\<^esub> y)", "hence x: \"x \\<in> carrier G\" and y: \"y \\<in> carrier G\" and\n            hx: \"h x = h' x\" and hy: \"h y = h' y\""], ["proof (prove)\nusing this:\n  x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n  \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n   h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n   \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> h x = h' x\n  y \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n  \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n   h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n   \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> h y = h' y\n  Group.group G\n  Group.group H\n  gens \\<subseteq> carrier G\n  h \\<in> hom G H\n  h' \\<in> hom G H\n  \\<forall>g\\<in>gens. h g = h' g\n  \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (x \\<in> carrier G &&& y \\<in> carrier G) &&& h x = h' x &&& h y = h' y", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  h x = h' x\n  h y = h' y\n\ngoal (4 subgoals):\n 1. \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n     h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n     \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> h \\<one>\\<^bsub>G\\<^esub> = h' \\<one>\\<^bsub>G\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> gens; Group.group G; Group.group H;\n        gens \\<subseteq> carrier G; h \\<in> hom G H; h' \\<in> hom G H;\n        \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h x = h' x\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h x = h' x;\n        Group.group G; Group.group H; gens \\<subseteq> carrier G;\n        h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h (inv\\<^bsub>G\\<^esub> x) =\n                         h' (inv\\<^bsub>G\\<^esub> x)\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h x = h' x;\n        y \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h y = h' y;\n        Group.group G; Group.group H; gens \\<subseteq> carrier G;\n        h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         h' (x \\<otimes>\\<^bsub>G\\<^esub> y)", "thus \"h (x \\<otimes>\\<^bsub>G\\<^esub> y) = h' (x \\<otimes>\\<^bsub>G\\<^esub> y)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  h x = h' x\n  h y = h' y\n\ngoal (1 subgoal):\n 1. h (x \\<otimes>\\<^bsub>G\\<^esub> y) = h' (x \\<otimes>\\<^bsub>G\\<^esub> y)", "by simp"], ["proof (state)\nthis:\n  h (x \\<otimes>\\<^bsub>G\\<^esub> y) = h' (x \\<otimes>\\<^bsub>G\\<^esub> y)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n     h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n     \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> h \\<one>\\<^bsub>G\\<^esub> = h' \\<one>\\<^bsub>G\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> gens; Group.group G; Group.group H;\n        gens \\<subseteq> carrier G; h \\<in> hom G H; h' \\<in> hom G H;\n        \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h x = h' x\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>;\n        \\<lbrakk>Group.group G; Group.group H; gens \\<subseteq> carrier G;\n         h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n         \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n         \\<subseteq> carrier G\\<rbrakk>\n        \\<Longrightarrow> h x = h' x;\n        Group.group G; Group.group H; gens \\<subseteq> carrier G;\n        h \\<in> hom G H; h' \\<in> hom G H; \\<forall>g\\<in>gens. h g = h' g;\n        \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\n        \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> h (inv\\<^bsub>G\\<^esub> x) =\n                         h' (inv\\<^bsub>G\\<^esub> x)", "qed auto"], ["proof (state)\nthis:\n  x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<Longrightarrow>\n  h x = h' x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Sets of generators\\<close>"], ["", "text \\<open>There is no definition for ``\\<open>gens\\<close> is a generating set of\n\\<open>G\\<close>''. This is easily expressed by \\<open>\\<langle>gens\\<rangle> = carrier G\\<close>.\\<close>"], ["", "text \\<open>The following is an application of \\<open>hom_unique_on_span\\<close> on a\ngenerating set of the whole group.\\<close>"], ["", "lemma (in group) hom_unique_by_gens:\n  assumes \"group H\"\n      and gens: \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> = carrier G\"\n      and \"h \\<in> hom G H\"\n      and \"h' \\<in> hom G H\"\n      and \"\\<forall>g \\<in> gens. h g = h' g\"\n  shows \"\\<forall>x \\<in> carrier G. h x = h' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier G. h x = h' x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> h x = h' x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> h x = h' x", "from gens"], ["proof (chain)\npicking this:\n  \\<langle>gens\\<rangle> = carrier G", "have \"gens \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  \\<langle>gens\\<rangle> = carrier G\n\ngoal (1 subgoal):\n 1. gens \\<subseteq> carrier G", "by (auto intro:gen_span.gen_gens)"], ["proof (state)\nthis:\n  gens \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> h x = h' x", "with assms and group_axioms"], ["proof (chain)\npicking this:\n  Group.group H\n  \\<langle>gens\\<rangle> = carrier G\n  h \\<in> hom G H\n  h' \\<in> hom G H\n  \\<forall>g\\<in>gens. h g = h' g\n  Group.group G\n  gens \\<subseteq> carrier G", "have r: \"\\<forall>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>. h x = h' x\""], ["proof (prove)\nusing this:\n  Group.group H\n  \\<langle>gens\\<rangle> = carrier G\n  h \\<in> hom G H\n  h' \\<in> hom G H\n  \\<forall>g\\<in>gens. h g = h' g\n  Group.group G\n  gens \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>\\<langle>gens\\<rangle>. h x = h' x", "by -(erule hom_unique_on_span, auto)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>\\<langle>gens\\<rangle>. h x = h' x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> h x = h' x", "with gens"], ["proof (chain)\npicking this:\n  \\<langle>gens\\<rangle> = carrier G\n  \\<forall>x\\<in>\\<langle>gens\\<rangle>. h x = h' x", "show \"x \\<in> carrier G \\<Longrightarrow> h x = h' x\""], ["proof (prove)\nusing this:\n  \\<langle>gens\\<rangle> = carrier G\n  \\<forall>x\\<in>\\<langle>gens\\<rangle>. h x = h' x\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G \\<Longrightarrow> h x = h' x", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G \\<Longrightarrow> h x = h' x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group_hom) hom_span:\n  assumes \"gens \\<subseteq> carrier G\"\n  shows \"h ` (\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>) = \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h ` \\<langle>gens\\<rangle> = \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "proof(rule Set.set_eqI, rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> h ` \\<langle>gens\\<rangle> \\<Longrightarrow>\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "from \\<open>gens \\<subseteq> carrier G\\<close>"], ["proof (chain)\npicking this:\n  gens \\<subseteq> carrier G", "have \"\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  gens \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<langle>gens\\<rangle> \\<subseteq> carrier G", "by (rule G.gen_span_closed)"], ["proof (state)\nthis:\n  \\<langle>gens\\<rangle> \\<subseteq> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> h ` \\<langle>gens\\<rangle> \\<Longrightarrow>\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> h ` \\<langle>gens\\<rangle> \\<Longrightarrow>\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "assume \"y \\<in> h ` \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\""], ["proof (state)\nthis:\n  y \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> h ` \\<langle>gens\\<rangle> \\<Longrightarrow>\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "then"], ["proof (chain)\npicking this:\n  y \\<in> h ` \\<langle>gens\\<rangle>", "obtain x where \"x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\" and \"y = h x\""], ["proof (prove)\nusing this:\n  y \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>; y = h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<langle>gens\\<rangle>\n  y = h x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> h ` \\<langle>gens\\<rangle> \\<Longrightarrow>\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "from \\<open>x \\<in> \\<langle>gens\\<rangle>\\<^bsub>G\\<^esub>\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> \\<langle>gens\\<rangle>", "have \"h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\""], ["proof (prove)\nusing this:\n  x \\<in> \\<langle>gens\\<rangle>\n\ngoal (1 subgoal):\n 1. h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "proof(induct x)"], ["proof (state)\ngoal (4 subgoals):\n 1. h \\<one> \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> gens \\<Longrightarrow>\n       h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (inv x)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> \\<langle>gens\\<rangle>;\n        h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes> y)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "case (gen_inv x)"], ["proof (state)\nthis:\n  x \\<in> \\<langle>gens\\<rangle>\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (4 subgoals):\n 1. h \\<one> \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> gens \\<Longrightarrow>\n       h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (inv x)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> \\<langle>gens\\<rangle>;\n        h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes> y)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "hence \"x \\<in> carrier G\" and \"h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\""], ["proof (prove)\nusing this:\n  x \\<in> \\<langle>gens\\<rangle>\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G &&&\n    h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "using \\<open>\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> \\<langle>gens\\<rangle>\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  \\<langle>gens\\<rangle> \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G &&&\n    h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (4 subgoals):\n 1. h \\<one> \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> gens \\<Longrightarrow>\n       h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (inv x)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> \\<langle>gens\\<rangle>;\n        h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes> y)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (1 subgoal):\n 1. h (inv x) \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "by (auto intro:gen_span.intros)"], ["proof (state)\nthis:\n  h (inv x) \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (3 subgoals):\n 1. h \\<one> \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> gens \\<Longrightarrow>\n       h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> \\<langle>gens\\<rangle>;\n        h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes> y)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. h \\<one> \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> gens \\<Longrightarrow>\n       h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> \\<langle>gens\\<rangle>;\n        h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes> y)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "case (gen_mult x y)"], ["proof (state)\nthis:\n  x \\<in> \\<langle>gens\\<rangle>\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> \\<langle>gens\\<rangle>\n  h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (3 subgoals):\n 1. h \\<one> \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> gens \\<Longrightarrow>\n       h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> \\<langle>gens\\<rangle>;\n        h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes> y)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "hence \"x \\<in> carrier G\" and \"h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\"\n    and   \"y \\<in> carrier G\" and \"h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\""], ["proof (prove)\nusing this:\n  x \\<in> \\<langle>gens\\<rangle>\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> \\<langle>gens\\<rangle>\n  h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (1 subgoal):\n 1. (x \\<in> carrier G &&&\n     h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>) &&&\n    y \\<in> carrier G &&&\n    h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "using \\<open>\\<langle>gens\\<rangle>\\<^bsub>G\\<^esub> \\<subseteq> carrier G\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> \\<langle>gens\\<rangle>\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> \\<langle>gens\\<rangle>\n  h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  \\<langle>gens\\<rangle> \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (x \\<in> carrier G &&&\n     h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>) &&&\n    y \\<in> carrier G &&&\n    h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> carrier G\n  h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (3 subgoals):\n 1. h \\<one> \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> gens \\<Longrightarrow>\n       h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>gens\\<rangle>;\n        h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> \\<langle>gens\\<rangle>;\n        h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> h (x \\<otimes> y)\n                         \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> carrier G\n  h y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (1 subgoal):\n 1. h (x \\<otimes> y) \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "by (auto intro:gen_span.intros)"], ["proof (state)\nthis:\n  h (x \\<otimes> y) \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (2 subgoals):\n 1. h \\<one> \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> gens \\<Longrightarrow>\n       h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "qed(auto intro: gen_span.intros)"], ["proof (state)\nthis:\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> h ` \\<langle>gens\\<rangle> \\<Longrightarrow>\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n 2. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "with \\<open>y = h x\\<close>"], ["proof (chain)\npicking this:\n  y = h x\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "show \"y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\""], ["proof (prove)\nusing this:\n  y = h x\n  h x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (1 subgoal):\n 1. y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>", "by simp"], ["proof (state)\nthis:\n  y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n       x \\<in> h ` \\<langle>gens\\<rangle>", "show \"x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n    x \\<in> h ` \\<langle>gens\\<rangle>", "proof(induct x rule:gen_span.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> inv\\<^bsub>H\\<^esub> x\n                         \\<in> h ` \\<langle>gens\\<rangle>\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "case (gen_inv y)"], ["proof (state)\nthis:\n  y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> inv\\<^bsub>H\\<^esub> x\n                         \\<in> h ` \\<langle>gens\\<rangle>\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "then"], ["proof (chain)\npicking this:\n  y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> h ` \\<langle>gens\\<rangle>", "obtain x where \"y = h x\" and \"x \\<in> \\<langle>gens\\<rangle>\""], ["proof (prove)\nusing this:\n  y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>y = h x; x \\<in> \\<langle>gens\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> inv\\<^bsub>H\\<^esub> x\n                         \\<in> h ` \\<langle>gens\\<rangle>\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "moreover"], ["proof (state)\nthis:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> inv\\<^bsub>H\\<^esub> x\n                         \\<in> h ` \\<langle>gens\\<rangle>\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "hence \"x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "using \\<open>gens \\<subseteq> carrier G\\<close>"], ["proof (prove)\nusing this:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  gens \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "by (auto dest:G.gen_span_closed)"], ["proof (state)\nthis:\n  x \\<in> carrier G\n\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> inv\\<^bsub>H\\<^esub> x\n                         \\<in> h ` \\<langle>gens\\<rangle>\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  x \\<in> carrier G", "show ?case"], ["proof (prove)\nusing this:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>H\\<^esub> y \\<in> h ` \\<langle>gens\\<rangle>", "by (auto intro:hom_inv[THEN sym] rev_image_eqI gen_span.gen_inv simp del:group_hom.hom_inv hom_inv)"], ["proof (state)\nthis:\n  inv\\<^bsub>H\\<^esub> y \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "case (gen_mult y y')"], ["proof (state)\nthis:\n  y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> h ` \\<langle>gens\\<rangle>\n  y' \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y' \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "then"], ["proof (chain)\npicking this:\n  y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> h ` \\<langle>gens\\<rangle>\n  y' \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y' \\<in> h ` \\<langle>gens\\<rangle>", "obtain x and x'\n        where \"y = h x\" and \"x \\<in> \\<langle>gens\\<rangle>\"\n        and \"y' = h x'\" and \"x' \\<in> \\<langle>gens\\<rangle>\""], ["proof (prove)\nusing this:\n  y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y \\<in> h ` \\<langle>gens\\<rangle>\n  y' \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>\n  y' \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>x x'.\n        \\<lbrakk>y = h x; x \\<in> \\<langle>gens\\<rangle>; y' = h x';\n         x' \\<in> \\<langle>gens\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  y' = h x'\n  x' \\<in> \\<langle>gens\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "moreover"], ["proof (state)\nthis:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  y' = h x'\n  x' \\<in> \\<langle>gens\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "hence \"x \\<in> carrier G\" and \"x' \\<in> carrier G\""], ["proof (prove)\nusing this:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  y' = h x'\n  x' \\<in> \\<langle>gens\\<rangle>\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G &&& x' \\<in> carrier G", "using \\<open>gens \\<subseteq> carrier G\\<close>"], ["proof (prove)\nusing this:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  y' = h x'\n  x' \\<in> \\<langle>gens\\<rangle>\n  gens \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G &&& x' \\<in> carrier G", "by (auto dest:G.gen_span_closed)"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  x' \\<in> carrier G\n\ngoal (3 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        x \\<in> h ` \\<langle>gens\\<rangle>;\n        y \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub>;\n        y \\<in> h ` \\<langle>gens\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>H\\<^esub> y\n                         \\<in> h ` \\<langle>gens\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  y' = h x'\n  x' \\<in> \\<langle>gens\\<rangle>\n  x \\<in> carrier G\n  x' \\<in> carrier G", "show ?case"], ["proof (prove)\nusing this:\n  y = h x\n  x \\<in> \\<langle>gens\\<rangle>\n  y' = h x'\n  x' \\<in> \\<langle>gens\\<rangle>\n  x \\<in> carrier G\n  x' \\<in> carrier G\n\ngoal (1 subgoal):\n 1. y \\<otimes>\\<^bsub>H\\<^esub> y' \\<in> h ` \\<langle>gens\\<rangle>", "by (auto intro:hom_mult[THEN sym] rev_image_eqI gen_span.gen_mult simp del:group_hom.hom_mult hom_mult)"], ["proof (state)\nthis:\n  y \\<otimes>\\<^bsub>H\\<^esub> y' \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<one>\\<^bsub>H\\<^esub> \\<in> h ` \\<langle>gens\\<rangle>\n 2. \\<And>x.\n       x \\<in> h ` gens \\<Longrightarrow> x \\<in> h ` \\<langle>gens\\<rangle>", "qed(auto intro:rev_image_eqI intro:gen_span.intros)"], ["proof (state)\nthis:\n  x \\<in> \\<langle>h ` gens\\<rangle>\\<^bsub>H\\<^esub> \\<Longrightarrow>\n  x \\<in> h ` \\<langle>gens\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Product of a list of group elements\\<close>"], ["", "text \\<open>Not strictly related to generators of groups, this is still a general\ngroup concept and not related to Free Groups.\\<close>"], ["", "abbreviation (in monoid) m_concat\n  where \"m_concat l \\<equiv> foldr (\\<otimes>) l \\<one>\""], ["", "lemma (in monoid) m_concat_closed[simp]:\n \"set l \\<subseteq> carrier G \\<Longrightarrow> m_concat l \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set l \\<subseteq> carrier G \\<Longrightarrow> m_concat l \\<in> carrier G", "by (induct l, auto)"], ["", "lemma (in monoid) m_concat_append[simp]:\n  assumes \"set a \\<subseteq> carrier G\"\n      and \"set b \\<subseteq> carrier G\"\n  shows \"m_concat (a@b) = m_concat a \\<otimes> m_concat b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m_concat (a @ b) = m_concat a \\<otimes> m_concat b", "using assms"], ["proof (prove)\nusing this:\n  set a \\<subseteq> carrier G\n  set b \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. m_concat (a @ b) = m_concat a \\<otimes> m_concat b", "by(induct a)(auto simp add: m_assoc)"], ["", "lemma (in monoid) m_concat_cons[simp]:\n  \"\\<lbrakk> x \\<in> carrier G ; set xs \\<subseteq> carrier G \\<rbrakk> \\<Longrightarrow> m_concat (x#xs) = x \\<otimes> m_concat xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier G; set xs \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> m_concat (x # xs) = x \\<otimes> m_concat xs", "by(induct xs)(auto simp add: m_assoc)"], ["", "lemma (in monoid) nat_pow_mult1l:\n  assumes x: \"x \\<in> carrier G\"\n  shows \"x \\<otimes> x [^] n = x [^] Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] Suc n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] Suc n", "have \"x \\<otimes> x [^] n = x [^] (1::nat) \\<otimes> x [^] n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] 1 \\<otimes> x [^] n", "using x"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] 1 \\<otimes> x [^] n", "by auto"], ["proof (state)\nthis:\n  x \\<otimes> x [^] n = x [^] 1 \\<otimes> x [^] n\n\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] Suc n", "also"], ["proof (state)\nthis:\n  x \\<otimes> x [^] n = x [^] 1 \\<otimes> x [^] n\n\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] Suc n", "have \"\\<dots> = x [^] (1 + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^] 1 \\<otimes> x [^] n = x [^] (1 + n)", "using x"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x [^] 1 \\<otimes> x [^] n = x [^] (1 + n)", "by (auto dest:nat_pow_mult simp del:One_nat_def)"], ["proof (state)\nthis:\n  x [^] 1 \\<otimes> x [^] n = x [^] (1 + n)\n\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] Suc n", "also"], ["proof (state)\nthis:\n  x [^] 1 \\<otimes> x [^] n = x [^] (1 + n)\n\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] Suc n", "have \"\\<dots> = x [^] Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^] (1 + n) = x [^] Suc n", "by simp"], ["proof (state)\nthis:\n  x [^] (1 + n) = x [^] Suc n\n\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] Suc n", "finally"], ["proof (chain)\npicking this:\n  x \\<otimes> x [^] n = x [^] Suc n", "show \"x \\<otimes> x [^] n = x [^] Suc n\""], ["proof (prove)\nusing this:\n  x \\<otimes> x [^] n = x [^] Suc n\n\ngoal (1 subgoal):\n 1. x \\<otimes> x [^] n = x [^] Suc n", "."], ["proof (state)\nthis:\n  x \\<otimes> x [^] n = x [^] Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in monoid) m_concat_power[simp]: \"x \\<in> carrier G \\<Longrightarrow> m_concat (replicate n x) = x [^] n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier G \\<Longrightarrow> m_concat (replicate n x) = x [^] n", "by(induct n, auto simp add:nat_pow_mult1l)"], ["", "subsection \\<open>Isomorphisms\\<close>"], ["", "text \\<open>A nicer way of proving that something is a group homomorphism or\nisomorphism.\\<close>"], ["", "lemma group_homI[intro]:\n  assumes range: \"h ` (carrier g1) \\<subseteq> carrier g2\"\n      and hom: \"\\<forall>x\\<in>carrier g1. \\<forall>y\\<in>carrier g1. h (x \\<otimes>\\<^bsub>g1\\<^esub> y) = h x \\<otimes>\\<^bsub>g2\\<^esub> h y\"\n  shows \"h \\<in> hom g1 g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> hom g1 g2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> hom g1 g2", "have \"h \\<in> carrier g1 \\<rightarrow> carrier g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> carrier g1 \\<rightarrow> carrier g2", "using range"], ["proof (prove)\nusing this:\n  h ` carrier g1 \\<subseteq> carrier g2\n\ngoal (1 subgoal):\n 1. h \\<in> carrier g1 \\<rightarrow> carrier g2", "by auto"], ["proof (state)\nthis:\n  h \\<in> carrier g1 \\<rightarrow> carrier g2\n\ngoal (1 subgoal):\n 1. h \\<in> hom g1 g2", "thus \"h \\<in> hom g1 g2\""], ["proof (prove)\nusing this:\n  h \\<in> carrier g1 \\<rightarrow> carrier g2\n\ngoal (1 subgoal):\n 1. h \\<in> hom g1 g2", "using hom"], ["proof (prove)\nusing this:\n  h \\<in> carrier g1 \\<rightarrow> carrier g2\n  \\<forall>x\\<in>carrier g1.\n     \\<forall>y\\<in>carrier g1.\n        h (x \\<otimes>\\<^bsub>g1\\<^esub> y) =\n        h x \\<otimes>\\<^bsub>g2\\<^esub> h y\n\ngoal (1 subgoal):\n 1. h \\<in> hom g1 g2", "unfolding hom_def"], ["proof (prove)\nusing this:\n  h \\<in> carrier g1 \\<rightarrow> carrier g2\n  \\<forall>x\\<in>carrier g1.\n     \\<forall>y\\<in>carrier g1.\n        h (x \\<otimes>\\<^bsub>g1\\<^esub> y) =\n        h x \\<otimes>\\<^bsub>g2\\<^esub> h y\n\ngoal (1 subgoal):\n 1. h \\<in> {h \\<in> carrier g1 \\<rightarrow> carrier g2.\n             \\<forall>x\\<in>carrier g1.\n                \\<forall>y\\<in>carrier g1.\n                   h (x \\<otimes>\\<^bsub>g1\\<^esub> y) =\n                   h x \\<otimes>\\<^bsub>g2\\<^esub> h y}", "by auto"], ["proof (state)\nthis:\n  h \\<in> hom g1 g2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group_hom) hom_injI:\n  assumes \"\\<forall>x\\<in>carrier G. h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\\<^bsub>G\\<^esub>\"\n  shows \"inj_on h (carrier G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on h (carrier G)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier G.\n       \\<forall>y\\<in>carrier G. h x = h y \\<longrightarrow> x = y", "proof(rule ballI, rule ballI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G; h x = h y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G; h x = h y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G; h x = h y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume x: \"x\\<in>carrier G\"\n     and y: \"y\\<in>carrier G\"\n     and \"h x = h y\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  h x = h y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G; h x = h y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"h (x \\<otimes> inv y) = \\<one>\\<^bsub>H\\<^esub>\" and \"x \\<otimes> inv y \\<in> carrier G\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  h x = h y\n\ngoal (1 subgoal):\n 1. h (x \\<otimes> inv y) = \\<one>\\<^bsub>H\\<^esub> &&&\n    x \\<otimes> inv y \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  h (x \\<otimes> inv y) = \\<one>\\<^bsub>H\\<^esub>\n  x \\<otimes> inv y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G; h x = h y\\<rbrakk>\n       \\<Longrightarrow> x = y", "with assms"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>carrier G.\n     h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\n  h (x \\<otimes> inv y) = \\<one>\\<^bsub>H\\<^esub>\n  x \\<otimes> inv y \\<in> carrier G", "have \"x \\<otimes> inv y = \\<one>\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>carrier G.\n     h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\n  h (x \\<otimes> inv y) = \\<one>\\<^bsub>H\\<^esub>\n  x \\<otimes> inv y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<otimes> inv y = \\<one>", "by auto"], ["proof (state)\nthis:\n  x \\<otimes> inv y = \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G; h x = h y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"x = y\""], ["proof (prove)\nusing this:\n  x \\<otimes> inv y = \\<one>\n\ngoal (1 subgoal):\n 1. x = y", "using x and y"], ["proof (prove)\nusing this:\n  x \\<otimes> inv y = \\<one>\n  x \\<in> carrier G\n  y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x = y", "by(auto dest: G.inv_equality)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group_hom) group_hom_isoI:\n  assumes inj1: \"\\<forall>x\\<in>carrier G. h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\\<^bsub>G\\<^esub>\"\n      and surj: \"h ` (carrier G) = carrier H\"\n  shows \"h \\<in> iso G H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "from inj1"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>carrier G.\n     h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>", "have \"inj_on h (carrier G)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>carrier G.\n     h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\n\ngoal (1 subgoal):\n 1. inj_on h (carrier G)", "by(auto intro: hom_injI)"], ["proof (state)\nthis:\n  inj_on h (carrier G)\n\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "hence bij: \"bij_betw h (carrier G) (carrier H)\""], ["proof (prove)\nusing this:\n  inj_on h (carrier G)\n\ngoal (1 subgoal):\n 1. bij_betw h (carrier G) (carrier H)", "using surj"], ["proof (prove)\nusing this:\n  inj_on h (carrier G)\n  h ` carrier G = carrier H\n\ngoal (1 subgoal):\n 1. bij_betw h (carrier G) (carrier H)", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on h (carrier G)\n  h ` carrier G = carrier H\n\ngoal (1 subgoal):\n 1. inj_on h (carrier G) \\<and> h ` carrier G = carrier H", "by auto"], ["proof (state)\nthis:\n  bij_betw h (carrier G) (carrier H)\n\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "thus ?thesis"], ["proof (prove)\nusing this:\n  bij_betw h (carrier G) (carrier H)\n\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "unfolding iso_def"], ["proof (prove)\nusing this:\n  bij_betw h (carrier G) (carrier H)\n\ngoal (1 subgoal):\n 1. h \\<in> {h \\<in> hom G H. bij_betw h (carrier G) (carrier H)}", "by auto"], ["proof (state)\nthis:\n  h \\<in> Group.iso G H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma group_isoI[intro]:\n  assumes G: \"group G\"\n      and H: \"group H\"\n      and inj1: \"\\<forall>x\\<in>carrier G. h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow> x = \\<one>\\<^bsub>G\\<^esub>\"\n      and surj: \"h ` (carrier G) = carrier H\"\n      and hom: \"\\<forall>x\\<in>carrier G. \\<forall>y\\<in>carrier G. h (x \\<otimes>\\<^bsub>G\\<^esub> y) = h x \\<otimes>\\<^bsub>H\\<^esub> h y\"\n  shows \"h \\<in> iso G H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "from surj"], ["proof (chain)\npicking this:\n  h ` carrier G = carrier H", "have \"h \\<in> carrier G \\<rightarrow> carrier H\""], ["proof (prove)\nusing this:\n  h ` carrier G = carrier H\n\ngoal (1 subgoal):\n 1. h \\<in> carrier G \\<rightarrow> carrier H", "by auto"], ["proof (state)\nthis:\n  h \\<in> carrier G \\<rightarrow> carrier H\n\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "then"], ["proof (chain)\npicking this:\n  h \\<in> carrier G \\<rightarrow> carrier H", "interpret group_hom G H h"], ["proof (prove)\nusing this:\n  h \\<in> carrier G \\<rightarrow> carrier H\n\ngoal (1 subgoal):\n 1. group_hom G H h", "using G and H and hom"], ["proof (prove)\nusing this:\n  h \\<in> carrier G \\<rightarrow> carrier H\n  Group.group G\n  Group.group H\n  \\<forall>x\\<in>carrier G.\n     \\<forall>y\\<in>carrier G.\n        h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n        h x \\<otimes>\\<^bsub>H\\<^esub> h y\n\ngoal (1 subgoal):\n 1. group_hom G H h", "by (auto intro!: group_hom.intro group_hom_axioms.intro)"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "using assms"], ["proof (prove)\nusing this:\n  Group.group G\n  Group.group H\n  \\<forall>x\\<in>carrier G.\n     h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow>\n     x = \\<one>\\<^bsub>G\\<^esub>\n  h ` carrier G = carrier H\n  \\<forall>x\\<in>carrier G.\n     \\<forall>y\\<in>carrier G.\n        h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n        h x \\<otimes>\\<^bsub>H\\<^esub> h y\n\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "unfolding hom_def"], ["proof (prove)\nusing this:\n  Group.group G\n  Group.group H\n  \\<forall>x\\<in>carrier G.\n     h x = \\<one>\\<^bsub>H\\<^esub> \\<longrightarrow>\n     x = \\<one>\\<^bsub>G\\<^esub>\n  h ` carrier G = carrier H\n  \\<forall>x\\<in>carrier G.\n     \\<forall>y\\<in>carrier G.\n        h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n        h x \\<otimes>\\<^bsub>H\\<^esub> h y\n\ngoal (1 subgoal):\n 1. h \\<in> Group.iso G H", "by (auto intro: group_hom_isoI)"], ["proof (state)\nthis:\n  h \\<in> Group.iso G H\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}