{"file_name": "/home/qj213/afp-2021-10-22/thys/Lambda_Free_RPOs/Lambda_Free_RPO_App.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Lambda_Free_RPOs", "problem_names": ["lemma ext_mono[mono]: \"gt \\<le> gt' \\<Longrightarrow> ext gt \\<le> ext gt'\""], "translations": [["", "lemma ext_mono[mono]: \"gt \\<le> gt' \\<Longrightarrow> ext gt \\<le> ext gt'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gt \\<le> gt' \\<Longrightarrow> ext gt \\<le> ext gt'", "by (simp add: ext.mono ext_ext_compat_list[unfolded ext_compat_list_def, THEN conjunct1])"], ["", "inductive gt :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" (infix \">\\<^sub>t\" 50) where\n  gt_sub: \"is_App t \\<Longrightarrow> (fun t >\\<^sub>t s \\<or> fun t = s) \\<or> (arg t >\\<^sub>t s \\<or> arg t = s) \\<Longrightarrow> t >\\<^sub>t s\"\n| gt_sym_sym: \"g >\\<^sub>s f \\<Longrightarrow> Hd (Sym g) >\\<^sub>t Hd (Sym f)\"\n| gt_sym_app: \"Hd (Sym g) >\\<^sub>t s1 \\<Longrightarrow> Hd (Sym g) >\\<^sub>t s2 \\<Longrightarrow> Hd (Sym g) >\\<^sub>t App s1 s2\"\n| gt_app_app: \"ext (>\\<^sub>t) [t1, t2] [s1, s2] \\<Longrightarrow> App t1 t2 >\\<^sub>t s1 \\<Longrightarrow> App t1 t2 >\\<^sub>t s2 \\<Longrightarrow>\n    App t1 t2 >\\<^sub>t App s1 s2\""], ["", "abbreviation ge :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" (infix \"\\<ge>\\<^sub>t\" 50) where\n  \"t \\<ge>\\<^sub>t s \\<equiv> t >\\<^sub>t s \\<or> t = s\""], ["", "end"], ["", "end"]]}