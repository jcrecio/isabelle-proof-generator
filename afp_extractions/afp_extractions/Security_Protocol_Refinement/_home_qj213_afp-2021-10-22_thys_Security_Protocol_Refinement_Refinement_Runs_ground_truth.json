{"file_name": "/home/qj213/afp-2021-10-22/thys/Security_Protocol_Refinement/Refinement/Runs.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Security_Protocol_Refinement", "problem_names": ["lemma map_runs_empty [simp]: \"map_runs h Map.empty = Map.empty\"", "lemma map_runs_dom [simp]: \"dom (map_runs h runz) = dom runz\"", "lemma map_runs_update [simp]:\n  \"map_runs h (runz(R \\<mapsto> (rol, agts, al))) \n   = (map_runs h runz)(R \\<mapsto> (rol, agts, h rol al))\""], "translations": [["", "lemma map_runs_empty [simp]: \"map_runs h Map.empty = Map.empty\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_runs h Map.empty = Map.empty", "by (rule ext) (auto simp add: map_runs_def)"], ["", "lemma map_runs_dom [simp]: \"dom (map_runs h runz) = dom runz\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (map_runs h runz) = dom runz", "by (auto simp add: map_runs_def split: option.split_asm)"], ["", "lemma map_runs_update [simp]:\n  \"map_runs h (runz(R \\<mapsto> (rol, agts, al))) \n   = (map_runs h runz)(R \\<mapsto> (rol, agts, h rol al))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_runs h (runz(R \\<mapsto> (rol, agts, al))) = map_runs h runz(R \n    \\<mapsto> (rol, agts, h rol al))", "by (auto simp add: map_runs_def)"], ["", "end"]]}