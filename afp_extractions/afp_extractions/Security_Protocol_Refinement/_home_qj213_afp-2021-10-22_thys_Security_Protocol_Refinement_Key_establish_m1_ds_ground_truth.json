{"file_name": "/home/qj213/afp-2021-10-22/thys/Security_Protocol_Refinement/Key_establish/m1_ds.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Security_Protocol_Refinement", "problem_names": ["lemmas m1_loc_defs = \n  m1_def m1_init_def m1_trans_def\n  m1_step1_def m1_step2_def m1_step3_def m1_step4_def m1_step5_def \n  m1_leak_def m1_tick_def", "lemmas m1_defs = m1_loc_defs m1a_defs", "lemma m1_obs_id [simp]: \"obs m1 = id\"", "lemmas m1_inv0_finI = m1_inv0_fin_def [THEN setc_def_to_intro, rule_format]", "lemmas m1_inv0_finE [elim] = m1_inv0_fin_def [THEN setc_def_to_elim, rule_format]", "lemmas m1_inv0_finD = m1_inv0_fin_def [THEN setc_def_to_dest, rule_format]", "lemma PO_m1_inv0_fin_init [iff]:\n  \"init m1 \\<subseteq> m1_inv0_fin\"", "lemma PO_m1_inv0_fin_trans [iff]:\n  \"{m1_inv0_fin} trans m1 {> m1_inv0_fin}\"", "lemma PO_m1_inv0_fin [iff]: \"reach m1 \\<subseteq> m1_inv0_fin\"", "lemmas R1a1_defs = R1a1_def med1a1_def", "lemma PO_m1_step1_refines_m1a_step1:\n  \"{R1a1} \n     (m1a_step1 Ra A B), (m1_step1 Ra A B) \n   {> R1a1}\"", "lemma PO_m1_step2_refines_m1a_step2:\n  \"{R1a1} \n     (m1a_step2 Rb A B), (m1_step2 Rb A B) \n   {> R1a1}\"", "lemma PO_m1_step3_refines_m1a_step3:\n  \"{R1a1} \n     (m1a_step3 Rs A B Kab [aNum Ts]), (m1_step3 Rs A B Kab Ts)\n   {> R1a1}\"", "lemma PO_m1_step4_refines_m1a_step4:\n  \"{R1a1} \n     (m1a_step4 Ra A B Kab [aNum Ts]), (m1_step4 Ra A B Kab Ts) \n   {> R1a1}\"", "lemma PO_m1_step5_refines_m1a_step5:\n  \"{R1a1} \n     (m1a_step5 Rb A B Kab [aNum Ts]), (m1_step5 Rb A B Kab Ts) \n   {> R1a1}\"", "lemma PO_m1_leak_refines_m1a_leak:\n  \"{R1a1} \n     (m1a_leak Rs), (m1_leak Rs) \n   {> R1a1}\"", "lemma PO_m1_tick_refines_m1a_skip:\n  \"{R1a1} \n     Id, (m1_tick T) \n   {> R1a1}\"", "lemmas PO_m1_trans_refines_m1a_trans = \n  PO_m1_step1_refines_m1a_step1 PO_m1_step2_refines_m1a_step2\n  PO_m1_step3_refines_m1a_step3 PO_m1_step4_refines_m1a_step4\n  PO_m1_step5_refines_m1a_step5 PO_m1_leak_refines_m1a_leak \n  PO_m1_tick_refines_m1a_skip", "lemma PO_m1_refines_init_m1a [iff]:\n  \"init m1 \\<subseteq>  R1a1``(init m1a)\"", "lemma PO_m1_refines_trans_m1a [iff]:\n  \"{R1a1} \n     (trans m1a), (trans m1) \n   {> R1a1}\"", "lemma obs_consistent_med1a1 [iff]: \n  \"obs_consistent R1a1 med1a1 m1a m1\"", "lemma PO_m1_refines_m1a [iff]: \n  \"refines R1a1 med1a1 m1a m1\"", "lemma  m1_implements_m1: \"implements med1a1 m1a m1\""], "translations": [["", "lemmas m1_loc_defs = \n  m1_def m1_init_def m1_trans_def\n  m1_step1_def m1_step2_def m1_step3_def m1_step4_def m1_step5_def \n  m1_leak_def m1_tick_def"], ["", "lemmas m1_defs = m1_loc_defs m1a_defs"], ["", "lemma m1_obs_id [simp]: \"obs m1 = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obs m1 = id", "by (simp add: m1_def)"], ["", "(******************************************************************************)"], ["", "subsection \\<open>Invariants\\<close>"], ["", "(******************************************************************************)"], ["", "subsubsection \\<open>inv0: Finite domain\\<close>"], ["", "(******************************************************************************)"], ["", "text \\<open>There are only finitely many runs. This is needed to establish\nthe responder/initiator agreement.\\<close>"], ["", "definition \n  m1_inv0_fin :: \"'x m1_pred\"\nwhere\n  \"m1_inv0_fin \\<equiv> {s. finite (dom (runs s))}\""], ["", "lemmas m1_inv0_finI = m1_inv0_fin_def [THEN setc_def_to_intro, rule_format]"], ["", "lemmas m1_inv0_finE [elim] = m1_inv0_fin_def [THEN setc_def_to_elim, rule_format]"], ["", "lemmas m1_inv0_finD = m1_inv0_fin_def [THEN setc_def_to_dest, rule_format]"], ["", "text \\<open>Invariance proofs.\\<close>"], ["", "lemma PO_m1_inv0_fin_init [iff]:\n  \"init m1 \\<subseteq> m1_inv0_fin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init m1 \\<subseteq> m1_inv0_fin", "by (auto simp add: m1_defs intro!: m1_inv0_finI)"], ["", "lemma PO_m1_inv0_fin_trans [iff]:\n  \"{m1_inv0_fin} trans m1 {> m1_inv0_fin}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {m1_inv0_fin} TS.trans m1 {> m1_inv0_fin}", "by (auto simp add: PO_hoare_defs m1_defs intro!: m1_inv0_finI)"], ["", "lemma PO_m1_inv0_fin [iff]: \"reach m1 \\<subseteq> m1_inv0_fin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach m1 \\<subseteq> m1_inv0_fin", "by (rule inv_rule_incr, auto del: subsetI)"], ["", "(******************************************************************************)"], ["", "subsection \\<open>Refinement of \\<open>m1a\\<close>\\<close>"], ["", "(******************************************************************************)"], ["", "subsubsection \\<open>Simulation relation\\<close>"], ["", "(******************************************************************************)"], ["", "text \\<open>R1a1: The simulation relation and mediator function are identities.\\<close>"], ["", "definition\n  med1a1 :: \"m1_obs \\<Rightarrow> m1a_obs\" where\n  \"med1a1 t \\<equiv> \\<lparr> runs = runs t, leak = leak t \\<rparr>\""], ["", "definition\n  R1a1 :: \"(m1a_state \\<times> m1_state) set\" where\n  \"R1a1 \\<equiv> {(s, t). s = med1a1 t}\""], ["", "lemmas R1a1_defs = R1a1_def med1a1_def"], ["", "subsubsection \\<open>Refinement proof\\<close>"], ["", "(******************************************************************************)"], ["", "lemma PO_m1_step1_refines_m1a_step1:\n  \"{R1a1} \n     (m1a_step1 Ra A B), (m1_step1 Ra A B) \n   {> R1a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R1a1} m1a_step1 Ra A B, m1_step1 Ra A B {> R1a1}", "by (auto simp add: PO_rhoare_defs R1a1_defs m1_defs)"], ["", "lemma PO_m1_step2_refines_m1a_step2:\n  \"{R1a1} \n     (m1a_step2 Rb A B), (m1_step2 Rb A B) \n   {> R1a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R1a1} m1a_step2 Rb A B, m1_step2 Rb A B {> R1a1}", "by (auto simp add: PO_rhoare_defs R1a1_defs m1_defs)"], ["", "lemma PO_m1_step3_refines_m1a_step3:\n  \"{R1a1} \n     (m1a_step3 Rs A B Kab [aNum Ts]), (m1_step3 Rs A B Kab Ts)\n   {> R1a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R1a1} m1a_step3 Rs A B Kab [aNum Ts], m1_step3 Rs A B Kab Ts {> R1a1}", "by (auto simp add: PO_rhoare_defs R1a1_defs m1_defs)"], ["", "lemma PO_m1_step4_refines_m1a_step4:\n  \"{R1a1} \n     (m1a_step4 Ra A B Kab [aNum Ts]), (m1_step4 Ra A B Kab Ts) \n   {> R1a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R1a1} m1a_step4 Ra A B Kab [aNum Ts], m1_step4 Ra A B Kab Ts {> R1a1}", "by (auto simp add: PO_rhoare_defs R1a1_defs m1_defs)"], ["", "lemma PO_m1_step5_refines_m1a_step5:\n  \"{R1a1} \n     (m1a_step5 Rb A B Kab [aNum Ts]), (m1_step5 Rb A B Kab Ts) \n   {> R1a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R1a1} m1a_step5 Rb A B Kab [aNum Ts], m1_step5 Rb A B Kab Ts {> R1a1}", "by (auto simp add: PO_rhoare_defs R1a1_defs m1_defs)"], ["", "lemma PO_m1_leak_refines_m1a_leak:\n  \"{R1a1} \n     (m1a_leak Rs), (m1_leak Rs) \n   {> R1a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R1a1} m1a_leak Rs, m1_leak Rs {> R1a1}", "by (auto simp add: PO_rhoare_defs R1a1_defs m1_defs)"], ["", "lemma PO_m1_tick_refines_m1a_skip:\n  \"{R1a1} \n     Id, (m1_tick T) \n   {> R1a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R1a1} Id, m1_tick T {> R1a1}", "by (auto simp add: PO_rhoare_defs R1a1_defs m1_defs)"], ["", "text \\<open>All together now...\\<close>"], ["", "lemmas PO_m1_trans_refines_m1a_trans = \n  PO_m1_step1_refines_m1a_step1 PO_m1_step2_refines_m1a_step2\n  PO_m1_step3_refines_m1a_step3 PO_m1_step4_refines_m1a_step4\n  PO_m1_step5_refines_m1a_step5 PO_m1_leak_refines_m1a_leak \n  PO_m1_tick_refines_m1a_skip"], ["", "lemma PO_m1_refines_init_m1a [iff]:\n  \"init m1 \\<subseteq>  R1a1``(init m1a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init m1 \\<subseteq> R1a1 `` init m1a", "by (auto simp add: R1a1_defs m1_defs intro!: s0g_secrecyI)"], ["", "lemma PO_m1_refines_trans_m1a [iff]:\n  \"{R1a1} \n     (trans m1a), (trans m1) \n   {> R1a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R1a1} TS.trans m1a, TS.trans m1 {> R1a1}", "apply (auto simp add: m1_def m1_trans_def m1a_def m1a_trans_def\n         intro!: PO_m1_trans_refines_m1a_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb.\n       {R1a1} (\\<Union>x xa xb xc xd.\n                  (\\<Union>xe.\n                      m1a_step1 xb x xa \\<union> m1a_step2 xc x xa \\<union>\n                      \\<Union> (range (m1a_step3 xd x xa xe)) \\<union>\n                      \\<Union> (range (m1a_step4 xb x xa xe)) \\<union>\n                      \\<Union> (range (m1a_step5 xc x xa xe))) \\<union>\n                  m1a_leak xd)\\<^sup>=, m1_step1 xb x xa {> R1a1}\n 2. \\<And>x xa xc.\n       {R1a1} (\\<Union>x xa xb xc xd.\n                  (\\<Union>xe.\n                      m1a_step1 xb x xa \\<union> m1a_step2 xc x xa \\<union>\n                      \\<Union> (range (m1a_step3 xd x xa xe)) \\<union>\n                      \\<Union> (range (m1a_step4 xb x xa xe)) \\<union>\n                      \\<Union> (range (m1a_step5 xc x xa xe))) \\<union>\n                  m1a_leak xd)\\<^sup>=, m1_step2 xc x xa {> R1a1}\n 3. \\<And>x xa xd xe xf.\n       {R1a1} (\\<Union>x xa xb xc xd.\n                  (\\<Union>xe.\n                      m1a_step1 xb x xa \\<union> m1a_step2 xc x xa \\<union>\n                      \\<Union> (range (m1a_step3 xd x xa xe)) \\<union>\n                      \\<Union> (range (m1a_step4 xb x xa xe)) \\<union>\n                      \\<Union> (range (m1a_step5 xc x xa xe))) \\<union>\n                  m1a_leak xd)\\<^sup>=, m1_step3 xd x xa xe xf {> R1a1}", "apply (force intro!: PO_m1_trans_refines_m1a_trans)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Observation consistency.\\<close>"], ["", "lemma obs_consistent_med1a1 [iff]: \n  \"obs_consistent R1a1 med1a1 m1a m1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obs_consistent R1a1 med1a1 m1a m1", "by (auto simp add: obs_consistent_def R1a1_def m1a_def m1_def)"], ["", "text \\<open>Refinement result.\\<close>"], ["", "lemma PO_m1_refines_m1a [iff]: \n  \"refines R1a1 med1a1 m1a m1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refines R1a1 med1a1 m1a m1", "by (rule Refinement_basic) (auto del: subsetI)"], ["", "lemma  m1_implements_m1: \"implements med1a1 m1a m1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implements med1a1 m1a m1", "by (rule refinement_soundness) (fast)"], ["", "end"]]}