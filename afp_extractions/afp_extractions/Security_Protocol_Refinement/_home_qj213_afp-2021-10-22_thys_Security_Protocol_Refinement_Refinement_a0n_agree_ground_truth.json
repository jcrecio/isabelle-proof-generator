{"file_name": "/home/qj213/afp-2021-10-22/thys/Security_Protocol_Refinement/Refinement/a0n_agree.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Security_Protocol_Refinement", "problem_names": ["lemmas a0n_defs = \n  a0n_def a0n_init_def a0n_trans_def \n  a0n_running_def a0n_commit_def a0n_corrupt_def", "lemma a0n_obs [simp]: \"obs a0n= id\"", "lemma a0n_anyP_observable [iff]: \"observable (obs a0n) P\"", "lemmas a0n_inv1_niagreeI = \n  a0n_inv1_niagree_def [THEN setc_def_to_intro, rule_format]", "lemmas a0n_inv1_niagreeE [elim] = \n  a0n_inv1_niagree_def [THEN setc_def_to_elim, rule_format]", "lemmas a0n_inv1_niagreeD = \n  a0n_inv1_niagree_def [THEN setc_def_to_dest, rule_format, rotated 2]", "lemma PO_a0n_inv1_niagree_init [iff]:\n  \"init a0n \\<subseteq> a0n_inv1_niagree\"", "lemma PO_a0n_inv1_niagree_trans [iff]:\n  \"{a0n_inv1_niagree} trans a0n {> a0n_inv1_niagree}\"", "lemma PO_a0n_inv1_niagree [iff]: \"reach a0n \\<subseteq> a0n_inv1_niagree\"", "lemma a0n_obs_inv1_niagree [iff]:\n  \"oreach a0n \\<subseteq> a0n_inv1_niagree\""], "translations": [["", "lemmas a0n_defs = \n  a0n_def a0n_init_def a0n_trans_def \n  a0n_running_def a0n_commit_def a0n_corrupt_def"], ["", "text \\<open>Any property is trivially observable.\\<close>"], ["", "lemma a0n_obs [simp]: \"obs a0n= id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obs a0n = id", "by (simp add: a0n_def)"], ["", "lemma a0n_anyP_observable [iff]: \"observable (obs a0n) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. observable (obs a0n) P", "by (auto)"], ["", "(******************************************************************************)"], ["", "subsection \\<open>Invariants\\<close>"], ["", "(******************************************************************************)"], ["", "subsection \\<open>inv1: non-injective agreement\\<close>"], ["", "(******************************************************************************)"], ["", "text \\<open>This is an extensional variant of Lowe's \\emph{non-injective agreement}\nof the first with the second agent (by convention) in \\<open>h\\<close> on data \n\\<open>d\\<close> [Lowe97]. \n\\<close>"], ["", "definition \n  a0n_inv1_niagree :: \"'ds a0n_state set\" \nwhere\n  \"a0n_inv1_niagree \\<equiv> {s. \\<forall>h d.\n     set h \\<subseteq> good \\<longrightarrow> d \\<notin> corrupted s \\<longrightarrow>\n       signals s (Commit h d) > 0 \\<longrightarrow> signals s (Running h d) > 0\n  }\""], ["", "lemmas a0n_inv1_niagreeI = \n  a0n_inv1_niagree_def [THEN setc_def_to_intro, rule_format]"], ["", "lemmas a0n_inv1_niagreeE [elim] = \n  a0n_inv1_niagree_def [THEN setc_def_to_elim, rule_format]"], ["", "lemmas a0n_inv1_niagreeD = \n  a0n_inv1_niagree_def [THEN setc_def_to_dest, rule_format, rotated 2]"], ["", "text \\<open>Invariance proof.\\<close>"], ["", "lemma PO_a0n_inv1_niagree_init [iff]:\n  \"init a0n \\<subseteq> a0n_inv1_niagree\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init a0n \\<subseteq> a0n_inv1_niagree", "by (auto simp add: a0n_defs intro!: a0n_inv1_niagreeI)"], ["", "lemma PO_a0n_inv1_niagree_trans [iff]:\n  \"{a0n_inv1_niagree} trans a0n {> a0n_inv1_niagree}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a0n_inv1_niagree} TS.trans a0n {> a0n_inv1_niagree}", "apply (auto simp add: PO_hoare_defs a0n_defs intro!: a0n_inv1_niagreeI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>xa xb xc xd.\n       \\<lbrakk>xa \\<in> a0n_inv1_niagree; xd \\<in> set xb;\n        signals xa (Running xb xc) = 0; xd \\<in> bad;\n        set xb \\<subseteq> good; xc \\<notin> corrupted xa\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>h d xa xb xd.\n       \\<lbrakk>xa \\<in> a0n_inv1_niagree; xd \\<in> set xb;\n        signals xa (Running h d) = 0; xd \\<in> bad; set h \\<subseteq> good;\n        d \\<notin> corrupted xa; 0 < signals xa (Commit h d);\n        h \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>h d xa xb xc xd.\n       \\<lbrakk>xa \\<in> a0n_inv1_niagree; xd \\<in> set xb;\n        signals xa (Running h d) = 0; xd \\<in> bad; set h \\<subseteq> good;\n        d \\<notin> corrupted xa; 0 < signals xa (Commit h d);\n        d \\<noteq> xc\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>h d xa xb xc.\n       \\<lbrakk>xa \\<in> a0n_inv1_niagree; xc \\<in> corrupted xa;\n        signals xa (Running h d) = 0; set h \\<subseteq> good;\n        d \\<notin> corrupted xa; 0 < signals xa (Commit h d);\n        h \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>h d xa xc.\n       \\<lbrakk>xa \\<in> a0n_inv1_niagree; xc \\<in> corrupted xa;\n        signals xa (Running h d) = 0; set h \\<subseteq> good;\n        d \\<notin> corrupted xa; 0 < signals xa (Commit h d);\n        d \\<noteq> xc\\<rbrakk>\n       \\<Longrightarrow> False", "apply (auto dest!: a0n_inv1_niagreeD dest: dom_lemmas)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma PO_a0n_inv1_niagree [iff]: \"reach a0n \\<subseteq> a0n_inv1_niagree\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach a0n \\<subseteq> a0n_inv1_niagree", "by (rule inv_rule_basic) (auto)"], ["", "text \\<open>This is also an external invariant.\\<close>"], ["", "lemma a0n_obs_inv1_niagree [iff]:\n  \"oreach a0n \\<subseteq> a0n_inv1_niagree\""], ["proof (prove)\ngoal (1 subgoal):\n 1. oreach a0n \\<subseteq> a0n_inv1_niagree", "apply (rule external_from_internal_invariant, fast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. obs a0n ` reach a0n \\<subseteq> a0n_inv1_niagree", "apply (subst a0n_def, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}