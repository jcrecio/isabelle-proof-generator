{"file_name": "/home/qj213/afp-2021-10-22/thys/Linear_Inequalities/Fundamental_Theorem_Linear_Inequalities.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Linear_Inequalities", "problem_names": ["lemma fundamental_theorem_of_linear_inequalities_A_imp_D:\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n    and b: \"b \\<in> cone A\"\n  shows \"\\<nexists> c. c \\<in> carrier_vec n \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\"", "lemma card_a_I[simp]: \"I \\<subseteq> {0 ..< m} \\<Longrightarrow> card (a ` I) = card I\"", "lemma in_a_I[simp]: \"I \\<subseteq> {0 ..< m} \\<Longrightarrow> i < m \\<Longrightarrow> (a i \\<in> a ` I) = (i \\<in> I)\"", "lemma finite_step_rel: \"finite step_rel\"", "lemma acyclic_imp_goal: \"acyclic step_rel \\<Longrightarrow> goal\"", "lemma acyclic_step_rel: \"acyclic step_rel\"", "lemma fundamental_theorem_neg_C_or_B_in_context:\n  assumes W: \"W = a ` {0 ..< m}\"\n  shows \"(\\<exists> U. U \\<subseteq> W \\<and> card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U. U \\<subseteq> W \\<and>\n           c \\<in> {normal_vector U, - normal_vector U} \\<and>\n           Suc (card U) = n \\<and> lin_indpt U \\<and> (\\<forall>w \\<in> W. 0 \\<le> c \\<bullet> w) \\<and> c \\<bullet> b < 0)\"", "lemma fundamental_theorem_of_linear_inequalities_C_imp_B_full_dim:\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n    and span: \"span A = carrier_vec n\" (* this condition was a wlog in the proof *)\n    and b: \"b \\<in> carrier_vec n\"\n    and C: \"\\<nexists> c B. B \\<subseteq> A \\<and> c \\<in> {normal_vector B, - normal_vector B} \\<and> Suc (card B) = n\n      \\<and> lin_indpt B \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\"\n  shows \"\\<exists> B \\<subseteq> A. lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B\"", "lemma fundamental_theorem_of_linear_inequalities_full_dim: fixes A :: \"'a vec set\"\n  defines \"HyperN \\<equiv> {b. b \\<in> carrier_vec n \\<and> (\\<nexists> B c. B \\<subseteq> A \\<and> c \\<in> {normal_vector B, - normal_vector B}\n      \\<and> Suc (card B) = n \\<and> lin_indpt B \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0)}\"\n  defines \"HyperA \\<equiv> {b. b \\<in> carrier_vec n \\<and> (\\<nexists> c. c \\<in> carrier_vec n \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0)}\"\n  defines \"lin_indpt_cone \\<equiv> \\<Union> { finite_cone B | B. B \\<subseteq> A \\<and> card B = n \\<and> lin_indpt B}\"\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n    and span: \"span A = carrier_vec n\"\n  shows\n    \"cone A = lin_indpt_cone\"\n    \"cone A = HyperN\"\n    \"cone A = HyperA\"", "lemma fundamental_theorem_of_linear_inequalities_C_imp_B:\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n    and b: \"b \\<in> carrier_vec n\"\n    and C: \"\\<nexists> c A'. c \\<in> carrier_vec n\n      \\<and> A' \\<subseteq> A \\<and> Suc (card A') = dim_span (insert b A)\n      \\<and> (\\<forall> a \\<in> A'. c \\<bullet> a = 0)\n      \\<and> lin_indpt A' \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\"\n  shows \"\\<exists> B \\<subseteq> A. lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\"", "lemma fundamental_theorem_of_linear_inequalities: fixes A :: \"'a vec set\"\n  defines \"HyperN \\<equiv> {b. b \\<in> carrier_vec n \\<and> (\\<nexists> c B. c \\<in> carrier_vec n \\<and> B \\<subseteq> A\n      \\<and> Suc (card B) = dim_span (insert b A) \\<and> lin_indpt B\n      \\<and> (\\<forall> a \\<in> B. c \\<bullet> a = 0)\n      \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0)}\"\n  defines \"HyperA \\<equiv> {b. b \\<in> carrier_vec n \\<and> (\\<nexists> c. c \\<in> carrier_vec n \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0)}\"\n  defines \"lin_indpt_cone \\<equiv> \\<Union> { finite_cone B | B. B \\<subseteq> A \\<and> card B = dim_span A \\<and> lin_indpt B}\"\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n  shows\n    \"cone A = lin_indpt_cone\"\n    \"cone A = HyperN\"\n    \"cone A = HyperA\""], "translations": [["", "lemma fundamental_theorem_of_linear_inequalities_A_imp_D:\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n    and b: \"b \\<in> cone A\"\n  shows \"\\<nexists> c. c \\<in> carrier_vec n \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "assume \"\\<exists> c. c \\<in> carrier_vec n \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\""], ["proof (state)\nthis:\n  \\<exists>c.\n     c \\<in> carrier_vec n \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>c.\n     c \\<in> carrier_vec n \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)", "obtain c where c: \"c \\<in> carrier_vec n\"\n    and ai: \"\\<And> ai. ai \\<in> A \\<Longrightarrow> c \\<bullet> ai \\<ge> 0\"\n    and cb: \"c \\<bullet> b < 0\""], ["proof (prove)\nusing this:\n  \\<exists>c.\n     c \\<in> carrier_vec n \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> carrier_vec n;\n         \\<And>ai.\n            ai \\<in> A \\<Longrightarrow> (0::'a) \\<le> c \\<bullet> ai;\n         c \\<bullet> b < (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> carrier_vec n\n  ?ai3 \\<in> A \\<Longrightarrow> (0::'a) \\<le> c \\<bullet> ?ai3\n  c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "from b[unfolded cone_def nonneg_lincomb_def finite_cone_def]"], ["proof (chain)\npicking this:\n  b \\<in> {x. \\<exists>Ws.\n                 finite Ws \\<and>\n                 Ws \\<subseteq> A \\<and>\n                 x \\<in> {b. \\<exists>c.\n                                lincomb c (if finite Ws then Ws else {}) =\n                                b \\<and>\n                                c ` (if finite Ws then Ws else {})\n                                \\<subseteq> Collect ((\\<le>) (0::'a))}}", "obtain l AA where bc: \"b = lincomb l AA\" and l: \"l ` AA \\<subseteq> {x. x \\<ge> 0}\" and AA: \"AA \\<subseteq> A\""], ["proof (prove)\nusing this:\n  b \\<in> {x. \\<exists>Ws.\n                 finite Ws \\<and>\n                 Ws \\<subseteq> A \\<and>\n                 x \\<in> {b. \\<exists>c.\n                                lincomb c (if finite Ws then Ws else {}) =\n                                b \\<and>\n                                c ` (if finite Ws then Ws else {})\n                                \\<subseteq> Collect ((\\<le>) (0::'a))}}\n\ngoal (1 subgoal):\n 1. (\\<And>l AA.\n        \\<lbrakk>b = lincomb l AA; l ` AA \\<subseteq> {x. (0::'a) \\<le> x};\n         AA \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b = lincomb l AA\n  l ` AA \\<subseteq> {x. (0::'a) \\<le> x}\n  AA \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "from cone_carrier[OF A] b"], ["proof (chain)\npicking this:\n  cone A \\<subseteq> carrier_vec n\n  b \\<in> cone A", "have b: \"b \\<in> carrier_vec n\""], ["proof (prove)\nusing this:\n  cone A \\<subseteq> carrier_vec n\n  b \\<in> cone A\n\ngoal (1 subgoal):\n 1. b \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  b \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "have \"0 \\<le> (\\<Sum>ai\\<in>AA. l ai * (c \\<bullet> ai))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> (\\<Sum>ai\\<in>AA. l ai * (c \\<bullet> ai))", "by (intro sum_nonneg mult_nonneg_nonneg, insert l ai AA, auto)"], ["proof (state)\nthis:\n  (0::'a) \\<le> (\\<Sum>ai\\<in>AA. l ai * (c \\<bullet> ai))\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  (0::'a) \\<le> (\\<Sum>ai\\<in>AA. l ai * (c \\<bullet> ai))\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "have \"\\<dots> = (\\<Sum>ai\\<in>AA. l ai * (ai \\<bullet> c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ai\\<in>AA. l ai * (c \\<bullet> ai)) =\n    (\\<Sum>ai\\<in>AA. l ai * (ai \\<bullet> c))", "by (rule sum.cong, insert c A AA comm_scalar_prod, force+)"], ["proof (state)\nthis:\n  (\\<Sum>ai\\<in>AA. l ai * (c \\<bullet> ai)) =\n  (\\<Sum>ai\\<in>AA. l ai * (ai \\<bullet> c))\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  (\\<Sum>ai\\<in>AA. l ai * (c \\<bullet> ai)) =\n  (\\<Sum>ai\\<in>AA. l ai * (ai \\<bullet> c))\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "have \"\\<dots> = (\\<Sum>ai\\<in>AA. ((l ai \\<cdot>\\<^sub>v ai) \\<bullet> c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ai\\<in>AA. l ai * (ai \\<bullet> c)) =\n    (\\<Sum>ai\\<in>AA. (l ai \\<cdot>\\<^sub>v ai) \\<bullet> c)", "by (rule sum.cong, insert smult_scalar_prod_distrib c A AA, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ai\\<in>AA. l ai * (ai \\<bullet> c)) =\n  (\\<Sum>ai\\<in>AA. (l ai \\<cdot>\\<^sub>v ai) \\<bullet> c)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  (\\<Sum>ai\\<in>AA. l ai * (ai \\<bullet> c)) =\n  (\\<Sum>ai\\<in>AA. (l ai \\<cdot>\\<^sub>v ai) \\<bullet> c)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "have \"\\<dots> = b \\<bullet> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ai\\<in>AA. (l ai \\<cdot>\\<^sub>v ai) \\<bullet> c) = b \\<bullet> c", "unfolding bc lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ai\\<in>AA. (l ai \\<cdot>\\<^sub>v ai) \\<bullet> c) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>AA. l v \\<cdot>\\<^sub>v v) \\<bullet> c", "by (subst finsum_scalar_prod_sum[symmetric], insert c A AA, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ai\\<in>AA. (l ai \\<cdot>\\<^sub>v ai) \\<bullet> c) = b \\<bullet> c\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  (\\<Sum>ai\\<in>AA. (l ai \\<cdot>\\<^sub>v ai) \\<bullet> c) = b \\<bullet> c\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "have \"\\<dots> = c \\<bullet> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> c = c \\<bullet> b", "using comm_scalar_prod b c"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v\\<^sub>1 \\<in> carrier_vec ?n;\n   ?v\\<^sub>2 \\<in> carrier_vec ?n\\<rbrakk>\n  \\<Longrightarrow> ?v\\<^sub>1 \\<bullet> ?v\\<^sub>2 =\n                    ?v\\<^sub>2 \\<bullet> ?v\\<^sub>1\n  b \\<in> carrier_vec n\n  c \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<bullet> c = c \\<bullet> b", "by auto"], ["proof (state)\nthis:\n  b \\<bullet> c = c \\<bullet> b\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  b \\<bullet> c = c \\<bullet> b\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "have \"\\<dots> < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<bullet> b < (0::'a)", "by fact"], ["proof (state)\nthis:\n  c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       c \\<in> carrier_vec n \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  (0::'a) < (0::'a)", "show False"], ["proof (prove)\nusing this:\n  (0::'a) < (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The difficult direction is that C implies B. To this end we follow the\n  proof that at least one of B and the negation of C is satisfied.\\<close>"], ["", "context\n  fixes a :: \"nat \\<Rightarrow> 'a vec\"\n    and b :: \"'a vec\"\n    and m :: nat\n  assumes a: \"a ` {0 ..< m} \\<subseteq> carrier_vec n\"\n    and inj_a: \"inj_on a {0 ..< m}\"\n    and b: \"b \\<in> carrier_vec n\"\n    and full_span: \"span (a ` {0 ..< m}) = carrier_vec n\"\nbegin"], ["", "private"], ["", "definition \"goal = ((\\<exists> I. I \\<subseteq> {0 ..< m} \\<and> card (a ` I) = n \\<and> lin_indpt (a ` I) \\<and> b \\<in> finite_cone (a ` I))\n  \\<or> (\\<exists> c I. I \\<subseteq> {0 ..< m} \\<and> c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and> Suc (card (a ` I)) = n\n      \\<and> lin_indpt (a ` I) \\<and> (\\<forall> i < m. c \\<bullet> a i \\<ge> 0) \\<and> c \\<bullet> b < 0))\""], ["", "private"], ["", "lemma card_a_I[simp]: \"I \\<subseteq> {0 ..< m} \\<Longrightarrow> card (a ` I) = card I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> {0..<m} \\<Longrightarrow> card (a ` I) = card I", "by (smt inj_a card_image inj_on_image_eq_iff subset_image_inj subset_refl subset_trans)"], ["", "private"], ["", "lemma in_a_I[simp]: \"I \\<subseteq> {0 ..< m} \\<Longrightarrow> i < m \\<Longrightarrow> (a i \\<in> a ` I) = (i \\<in> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> {0..<m}; i < m\\<rbrakk>\n    \\<Longrightarrow> (a i \\<in> a ` I) = (i \\<in> I)", "using inj_a"], ["proof (prove)\nusing this:\n  inj_on a {0..<m}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<subseteq> {0..<m}; i < m\\<rbrakk>\n    \\<Longrightarrow> (a i \\<in> a ` I) = (i \\<in> I)", "by (meson atLeastLessThan_iff image_eqI inj_on_image_mem_iff zero_le)"], ["", "private"], ["", "definition \"valid_I = { I. card I = n \\<and> lin_indpt (a ` I) \\<and> I \\<subseteq> {0 ..< m}}\""], ["", "private"], ["", "definition cond where \"cond I I' l c h k \\<equiv>\n  b = lincomb l (a ` I) \\<and>\n  h \\<in> I \\<and> l (a h) < 0 \\<and> (\\<forall> h'. h' \\<in> I \\<longrightarrow> h' < h \\<longrightarrow> l (a h') \\<ge> 0) \\<and>\n  c \\<in> carrier_vec n \\<and> span (a ` (I - {h})) = { x. x \\<in> carrier_vec n \\<and> c \\<bullet> x = 0} \\<and> c \\<bullet> b < 0 \\<and>\n  k < m \\<and> c \\<bullet> a k < 0 \\<and> (\\<forall> k'. k' < k \\<longrightarrow> c \\<bullet> a k' \\<ge> 0) \\<and>\n  I' = insert k (I - {h})\""], ["", "private"], ["", "definition \"step_rel = Restr { (I'', I). \\<exists> l c h k. cond I I'' l c h k } valid_I\""], ["", "private"], ["", "lemma finite_step_rel: \"finite step_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite step_rel", "proof (rule finite_subset)"], ["proof (state)\ngoal (2 subgoals):\n 1. step_rel \\<subseteq> ?B\n 2. finite ?B", "show \"step_rel \\<subseteq> (Pow {0 ..< m} \\<times> Pow {0 ..< m})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. step_rel \\<subseteq> Pow {0..<m} \\<times> Pow {0..<m}", "unfolding step_rel_def valid_I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr {(I'', I). \\<exists>l c h. Ex (cond I I'' l c h)}\n     {I. card I = n \\<and> lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}\n    \\<subseteq> Pow {0..<m} \\<times> Pow {0..<m}", "by auto"], ["proof (state)\nthis:\n  step_rel \\<subseteq> Pow {0..<m} \\<times> Pow {0..<m}\n\ngoal (1 subgoal):\n 1. finite (Pow {0..<m} \\<times> Pow {0..<m})", "qed auto"], ["", "private"], ["", "lemma acyclic_imp_goal: \"acyclic step_rel \\<Longrightarrow> goal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. acyclic step_rel \\<Longrightarrow> goal", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "assume ngoal: \"\\<not> goal\""], ["proof (state)\nthis:\n  \\<not> goal\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "(* then the algorithm will not terminate *)"], ["proof (state)\nthis:\n  \\<not> goal\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<not> goal\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "assume I: \"I \\<in> valid_I\""], ["proof (state)\nthis:\n  I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "hence Im: \"I \\<subseteq> {0..<m}\" and\n      lin: \"lin_indpt (a ` I)\" and\n      cardI: \"card I = n\""], ["proof (prove)\nusing this:\n  I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. I \\<subseteq> {0..<m} &&& lin_indpt (a ` I) &&& card I = n", "by (auto simp: valid_I_def)"], ["proof (state)\nthis:\n  I \\<subseteq> {0..<m}\n  lin_indpt (a ` I)\n  card I = n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "let ?D = \"(a ` I)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "have finD: \"finite ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (a ` I)", "using Im infinite_super"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<m}\n  \\<lbrakk>?S \\<subseteq> ?T; infinite ?S\\<rbrakk>\n  \\<Longrightarrow> infinite ?T\n\ngoal (1 subgoal):\n 1. finite (a ` I)", "by blast"], ["proof (state)\nthis:\n  finite (a ` I)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "have carrD: \"?D \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ` I \\<subseteq> carrier_vec n", "using a Im"], ["proof (prove)\nusing this:\n  a ` {0..<m} \\<subseteq> carrier_vec n\n  I \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. a ` I \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  a ` I \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "have cardD: \"card ?D = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (a ` I) = n", "using cardI Im"], ["proof (prove)\nusing this:\n  card I = n\n  I \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. card (a ` I) = n", "by simp"], ["proof (state)\nthis:\n  card (a ` I) = n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "have spanD: \"span ?D = carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.span (a ` I) = carrier_vec n", "by (intro span_carrier_lin_indpt_card_n lin cardD carrD)"], ["proof (state)\nthis:\n  local.span (a ` I) = carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "obtain lamb where b_is_lincomb: \"b = lincomb lamb (a ` I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>lamb.\n        b = lincomb lamb (a ` I) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_in_span[OF fin carrD, of b]"], ["proof (prove)\nusing this:\n  \\<lbrakk>fin_dim; lin_indpt (a ` I); a ` I \\<subseteq> carrier_vec n;\n   b \\<in> local.span (a ` I)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>aa. True \\<and> lincomb aa (a ` I) = b\n\ngoal (1 subgoal):\n 1. (\\<And>lamb.\n        b = lincomb lamb (a ` I) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using spanD b carrD fin_dim lin"], ["proof (prove)\nusing this:\n  \\<lbrakk>fin_dim; lin_indpt (a ` I); a ` I \\<subseteq> carrier_vec n;\n   b \\<in> local.span (a ` I)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>aa. True \\<and> lincomb aa (a ` I) = b\n  local.span (a ` I) = carrier_vec n\n  b \\<in> carrier_vec n\n  a ` I \\<subseteq> carrier_vec n\n  fin_dim\n  lin_indpt (a ` I)\n\ngoal (1 subgoal):\n 1. (\\<And>lamb.\n        b = lincomb lamb (a ` I) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b = lincomb lamb (a ` I)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "define h where \"h = (LEAST h. h \\<in> I \\<and> lamb (a h) < 0)\""], ["proof (state)\nthis:\n  h = (LEAST h. h \\<in> I \\<and> lamb (a h) < (0::'a))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "have \"\\<exists> I'. (I', I) \\<in> step_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I'. (I', I) \\<in> step_rel", "proof (cases \"\\<forall>i\\<in> I . lamb (a i) \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel\n 2. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "case cond1_T: True"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel\n 2. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have goal"], ["proof (prove)\ngoal (1 subgoal):\n 1. goal", "unfolding goal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>I\\<subseteq>{0..<m}.\n        card (a ` I) = n \\<and>\n        lin_indpt (a ` I) \\<and> b \\<in> finite_cone (a ` I)) \\<or>\n    (\\<exists>c I.\n        I \\<subseteq> {0..<m} \\<and>\n        c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n        Suc (card (a ` I)) = n \\<and>\n        lin_indpt (a ` I) \\<and>\n        (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n        c \\<bullet> b < (0::'a))", "by (intro disjI1 exI[of _ I] conjI lin cardI\n            lincomb_in_finite_cone[OF b_is_lincomb finD _ carrD], insert cardI Im cond1_T, auto)"], ["proof (state)\nthis:\n  goal\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel\n 2. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "with ngoal"], ["proof (chain)\npicking this:\n  \\<not> goal\n  goal", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> goal\n  goal\n\ngoal (1 subgoal):\n 1. \\<exists>I'. (I', I) \\<in> step_rel", "by auto"], ["proof (state)\nthis:\n  \\<exists>I'. (I', I) \\<in> step_rel\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "case cond1_F: False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "hence \"\\<exists> h. h \\<in> I \\<and> lamb (a h) < 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i))\n\ngoal (1 subgoal):\n 1. \\<exists>h. h \\<in> I \\<and> lamb (a h) < (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>h. h \\<in> I \\<and> lamb (a h) < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "from LeastI_ex[OF this, folded h_def]"], ["proof (chain)\npicking this:\n  h \\<in> I \\<and> lamb (a h) < (0::'a)", "have h: \"h \\<in> I\" \"lamb (a h) < 0\""], ["proof (prove)\nusing this:\n  h \\<in> I \\<and> lamb (a h) < (0::'a)\n\ngoal (1 subgoal):\n 1. h \\<in> I &&& lamb (a h) < (0::'a)", "by auto"], ["proof (state)\nthis:\n  h \\<in> I\n  lamb (a h) < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "from not_less_Least[of _ \"\\<lambda> h. h \\<in> I \\<and> lamb (a h) < 0\", folded h_def]"], ["proof (chain)\npicking this:\n  ?k < h \\<Longrightarrow> \\<not> (?k \\<in> I \\<and> lamb (a ?k) < (0::'a))", "have h_least: \"\\<forall> k. k \\<in> I \\<longrightarrow> k < h \\<longrightarrow> lamb (a k) \\<ge> 0\""], ["proof (prove)\nusing this:\n  ?k < h \\<Longrightarrow> \\<not> (?k \\<in> I \\<and> lamb (a ?k) < (0::'a))\n\ngoal (1 subgoal):\n 1. \\<forall>k.\n       k \\<in> I \\<longrightarrow>\n       k < h \\<longrightarrow> (0::'a) \\<le> lamb (a k)", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>k.\n     k \\<in> I \\<longrightarrow>\n     k < h \\<longrightarrow> (0::'a) \\<le> lamb (a k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "obtain I' where I'_def: \"I' = I - {h}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I'. I' = I - {h} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I' = I - {h}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "obtain c where c_def: \"c = pos_norm_vec (a ` I') (a h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c = pos_norm_vec (a ` I') (a h) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c = pos_norm_vec (a ` I') (a h)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "let ?D' = \"a ` I'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have I'm: \"I' \\<subseteq> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<m}", "using Im I'_def"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<m}\n  I' = I - {h}\n\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<m}", "by auto"], ["proof (state)\nthis:\n  I' \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have carrD': \" ?D' \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ` I' \\<subseteq> carrier_vec n", "using a Im I'_def"], ["proof (prove)\nusing this:\n  a ` {0..<m} \\<subseteq> carrier_vec n\n  I \\<subseteq> {0..<m}\n  I' = I - {h}\n\ngoal (1 subgoal):\n 1. a ` I' \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  a ` I' \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have finD': \"finite (?D')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (a ` I')", "using Im I'_def subset_eq_atLeast0_lessThan_finite"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<m}\n  I' = I - {h}\n  ?N \\<subseteq> {0..<?n} \\<Longrightarrow> finite ?N\n\ngoal (1 subgoal):\n 1. finite (a ` I')", "by auto"], ["proof (state)\nthis:\n  finite (a ` I')\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have D'subs: \"?D' \\<subseteq> ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ` I' \\<subseteq> a ` I", "using I'_def"], ["proof (prove)\nusing this:\n  I' = I - {h}\n\ngoal (1 subgoal):\n 1. a ` I' \\<subseteq> a ` I", "by auto"], ["proof (state)\nthis:\n  a ` I' \\<subseteq> a ` I\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have linD': \"lin_indpt (?D')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt (a ` I')", "using lin I'_def Im D'subs subset_li_is_li"], ["proof (prove)\nusing this:\n  lin_indpt (a ` I)\n  I' = I - {h}\n  I \\<subseteq> {0..<m}\n  a ` I' \\<subseteq> a ` I\n  \\<lbrakk>lin_indpt ?A; ?B \\<subseteq> ?A\\<rbrakk>\n  \\<Longrightarrow> lin_indpt ?B\n\ngoal (1 subgoal):\n 1. lin_indpt (a ` I')", "by auto"], ["proof (state)\nthis:\n  lin_indpt (a ` I')\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have D'strictsubs: \"?D = ?D' \\<union> {a h}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ` I = a ` I' \\<union> {a h}", "using h I'_def"], ["proof (prove)\nusing this:\n  h \\<in> I\n  lamb (a h) < (0::'a)\n  I' = I - {h}\n\ngoal (1 subgoal):\n 1. a ` I = a ` I' \\<union> {a h}", "by auto"], ["proof (state)\nthis:\n  a ` I = a ` I' \\<union> {a h}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have h_nin_I: \"h \\<notin> I'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<notin> I'", "using h I'_def"], ["proof (prove)\nusing this:\n  h \\<in> I\n  lamb (a h) < (0::'a)\n  I' = I - {h}\n\ngoal (1 subgoal):\n 1. h \\<notin> I'", "by auto"], ["proof (state)\nthis:\n  h \\<notin> I'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have ah_nin_D': \"a h \\<notin> ?D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a h \\<notin> a ` I'", "using h inj_a Im h_nin_I"], ["proof (prove)\nusing this:\n  h \\<in> I\n  lamb (a h) < (0::'a)\n  inj_on a {0..<m}\n  I \\<subseteq> {0..<m}\n  h \\<notin> I'\n\ngoal (1 subgoal):\n 1. a h \\<notin> a ` I'", "by (subst in_a_I, auto simp: I'_def)"], ["proof (state)\nthis:\n  a h \\<notin> a ` I'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have cardD': \"Suc (card (?D')) = n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (card (a ` I')) = n", "using cardD ah_nin_D' D'strictsubs finD'"], ["proof (prove)\nusing this:\n  card (a ` I) = n\n  a h \\<notin> a ` I'\n  a ` I = a ` I' \\<union> {a h}\n  finite (a ` I')\n\ngoal (1 subgoal):\n 1. Suc (card (a ` I')) = n", "by simp"], ["proof (state)\nthis:\n  Suc (card (a ` I')) = n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have ah_carr: \"a h \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a h \\<in> carrier_vec n", "using h a Im"], ["proof (prove)\nusing this:\n  h \\<in> I\n  lamb (a h) < (0::'a)\n  a ` {0..<m} \\<subseteq> carrier_vec n\n  I \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. a h \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  a h \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "note pnv = pos_norm_vec[OF carrD' finD' linD' cardD' c_def]"], ["proof (state)\nthis:\n  c \\<in> carrier_vec n\n  local.span (a ` I') = {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)}\n  \\<lbrakk>a h \\<notin> local.span (a ` I');\n   a h \\<in> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> (0::'a) < c \\<bullet> a h\n  c \\<in> {normal_vector (a ` I'), - normal_vector (a ` I')}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have ah_nin_span: \"a h \\<notin> span ?D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a h \\<notin> local.span (a ` I')", "using D'strictsubs lin_dep_iff_in_span[OF carrD' linD' ah_carr ah_nin_D'] lin"], ["proof (prove)\nusing this:\n  a ` I = a ` I' \\<union> {a h}\n  (a h \\<in> local.span (a ` I')) = lin_dep (a ` I' \\<union> {a h})\n  lin_indpt (a ` I)\n\ngoal (1 subgoal):\n 1. a h \\<notin> local.span (a ` I')", "by auto"], ["proof (state)\nthis:\n  a h \\<notin> local.span (a ` I')\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have cah_ge_zero:\"c \\<bullet> a h > 0\" and \"c \\<in> carrier_vec n\"\n        and cnorm: \"span ?D' = {x \\<in> carrier_vec n. x \\<bullet> c = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<bullet> a h &&&\n    c \\<in> carrier_vec n &&&\n    local.span (a ` I') = {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)}", "using ah_carr ah_nin_span pnv"], ["proof (prove)\nusing this:\n  a h \\<in> carrier_vec n\n  a h \\<notin> local.span (a ` I')\n  c \\<in> carrier_vec n\n  local.span (a ` I') = {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)}\n  \\<lbrakk>a h \\<notin> local.span (a ` I');\n   a h \\<in> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> (0::'a) < c \\<bullet> a h\n  c \\<in> {normal_vector (a ` I'), - normal_vector (a ` I')}\n\ngoal (1 subgoal):\n 1. (0::'a) < c \\<bullet> a h &&&\n    c \\<in> carrier_vec n &&&\n    local.span (a ` I') = {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)}", "by auto"], ["proof (state)\nthis:\n  (0::'a) < c \\<bullet> a h\n  c \\<in> carrier_vec n\n  local.span (a ` I') = {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have ccarr: \"c \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> carrier_vec n", "by fact"], ["proof (state)\nthis:\n  c \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have \"b \\<bullet> c = lincomb lamb (a ` I) \\<bullet> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> c = lincomb lamb (a ` I) \\<bullet> c", "using b_is_lincomb"], ["proof (prove)\nusing this:\n  b = lincomb lamb (a ` I)\n\ngoal (1 subgoal):\n 1. b \\<bullet> c = lincomb lamb (a ` I) \\<bullet> c", "by auto"], ["proof (state)\nthis:\n  b \\<bullet> c = lincomb lamb (a ` I) \\<bullet> c\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "also"], ["proof (state)\nthis:\n  b \\<bullet> c = lincomb lamb (a ` I) \\<bullet> c\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have \"\\<dots> = (\\<Sum>w\\<in> ?D. lamb w * (w \\<bullet> c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb lamb (a ` I) \\<bullet> c =\n    (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c))", "using lincomb_scalar_prod_left[OF carrD, of c lamb] pos_norm_vec ccarr"], ["proof (prove)\nusing this:\n  c \\<in> carrier_vec n \\<Longrightarrow>\n  lincomb lamb (a ` I) \\<bullet> c =\n  (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c))\n  \\<lbrakk>?D \\<subseteq> carrier_vec n; finite ?D; lin_indpt ?D;\n   Suc (card ?D) = n; ?c = pos_norm_vec ?D ?x\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> carrier_vec n\n  \\<lbrakk>?D \\<subseteq> carrier_vec n; finite ?D; lin_indpt ?D;\n   Suc (card ?D) = n; ?c = pos_norm_vec ?D ?x\\<rbrakk>\n  \\<Longrightarrow> local.span ?D =\n                    {x \\<in> carrier_vec n. x \\<bullet> ?c = (0::'a)}\n  \\<lbrakk>?D \\<subseteq> carrier_vec n; finite ?D; lin_indpt ?D;\n   Suc (card ?D) = n; ?c = pos_norm_vec ?D ?x; ?x \\<notin> local.span ?D;\n   ?x \\<in> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> (0::'a) < ?c \\<bullet> ?x\n  \\<lbrakk>?D \\<subseteq> carrier_vec n; finite ?D; lin_indpt ?D;\n   Suc (card ?D) = n; ?c = pos_norm_vec ?D ?x\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> {normal_vector ?D, - normal_vector ?D}\n  c \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. lincomb lamb (a ` I) \\<bullet> c =\n    (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c))", "by blast"], ["proof (state)\nthis:\n  lincomb lamb (a ` I) \\<bullet> c =\n  (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "also"], ["proof (state)\nthis:\n  lincomb lamb (a ` I) \\<bullet> c =\n  (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have \"\\<dots> = lamb (a h) * (a h \\<bullet> c) + (\\<Sum>w\\<in> ?D'. lamb w * (w \\<bullet> c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c)) =\n    lamb (a h) * (a h \\<bullet> c) +\n    (\\<Sum>w\\<in>a ` I'. lamb w * (w \\<bullet> c))", "using sum.insert[OF finD' ah_nin_D', of lamb] D'strictsubs ah_nin_D' finD'"], ["proof (prove)\nusing this:\n  sum lamb (insert (a h) (a ` I')) = lamb (a h) + sum lamb (a ` I')\n  a ` I = a ` I' \\<union> {a h}\n  a h \\<notin> a ` I'\n  finite (a ` I')\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c)) =\n    lamb (a h) * (a h \\<bullet> c) +\n    (\\<Sum>w\\<in>a ` I'. lamb w * (w \\<bullet> c))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c)) =\n  lamb (a h) * (a h \\<bullet> c) +\n  (\\<Sum>w\\<in>a ` I'. lamb w * (w \\<bullet> c))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` I. lamb w * (w \\<bullet> c)) =\n  lamb (a h) * (a h \\<bullet> c) +\n  (\\<Sum>w\\<in>a ` I'. lamb w * (w \\<bullet> c))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have \"(\\<Sum>w\\<in> ?D'. lamb w * (w \\<bullet> c)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` I'. lamb w * (w \\<bullet> c)) = (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>a ` I'. lamb x * (x \\<bullet> c) = (0::'a)", "using span_mem[OF carrD', unfolded cnorm]"], ["proof (prove)\nusing this:\n  ?u \\<in> a ` I' \\<Longrightarrow>\n  ?u \\<in> {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>a ` I'. lamb x * (x \\<bullet> c) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` I'. lamb w * (w \\<bullet> c)) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` I'. lamb w * (w \\<bullet> c)) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have \"lamb (a h) * (a h \\<bullet> c) + 0 < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lamb (a h) * (a h \\<bullet> c) + (0::'a) < (0::'a)", "using cah_ge_zero h(2) comm_scalar_prod[OF ah_carr ccarr]"], ["proof (prove)\nusing this:\n  (0::'a) < c \\<bullet> a h\n  lamb (a h) < (0::'a)\n  a h \\<bullet> c = c \\<bullet> a h\n\ngoal (1 subgoal):\n 1. lamb (a h) * (a h \\<bullet> c) + (0::'a) < (0::'a)", "by (auto intro: mult_neg_pos)"], ["proof (state)\nthis:\n  lamb (a h) * (a h \\<bullet> c) + (0::'a) < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "finally"], ["proof (chain)\npicking this:\n  b \\<bullet> c < (0::'a)", "have cb_le_zero: \"c \\<bullet> b < 0\""], ["proof (prove)\nusing this:\n  b \\<bullet> c < (0::'a)\n\ngoal (1 subgoal):\n 1. c \\<bullet> b < (0::'a)", "using comm_scalar_prod[OF b ccarr]"], ["proof (prove)\nusing this:\n  b \\<bullet> c < (0::'a)\n  b \\<bullet> c = c \\<bullet> b\n\ngoal (1 subgoal):\n 1. c \\<bullet> b < (0::'a)", "by auto"], ["proof (state)\nthis:\n  c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>I. (0::'a) \\<le> lamb (a i)) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I'. (I', I) \\<in> step_rel", "proof (cases \"\\<forall>i < m . c \\<bullet> a i \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel\n 2. \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "case cond2_T: True"], ["proof (state)\nthis:\n  \\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i\n\ngoal (2 subgoals):\n 1. \\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel\n 2. \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "have goal"], ["proof (prove)\ngoal (1 subgoal):\n 1. goal", "unfolding goal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>I\\<subseteq>{0..<m}.\n        card (a ` I) = n \\<and>\n        lin_indpt (a ` I) \\<and> b \\<in> finite_cone (a ` I)) \\<or>\n    (\\<exists>c I.\n        I \\<subseteq> {0..<m} \\<and>\n        c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n        Suc (card (a ` I)) = n \\<and>\n        lin_indpt (a ` I) \\<and>\n        (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n        c \\<bullet> b < (0::'a))", "by (intro disjI2 exI[of _ c] exI[of _ I'] conjI cb_le_zero linD' cond2_T cardD' I'm pnv(4))"], ["proof (state)\nthis:\n  goal\n\ngoal (2 subgoals):\n 1. \\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel\n 2. \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "with ngoal"], ["proof (chain)\npicking this:\n  \\<not> goal\n  goal", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> goal\n  goal\n\ngoal (1 subgoal):\n 1. \\<exists>I'. (I', I) \\<in> step_rel", "by auto"], ["proof (state)\nthis:\n  \\<exists>I'. (I', I) \\<in> step_rel\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "case cond2_F: False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "define k where \"k = (LEAST k. k < m \\<and> c \\<bullet> a k < 0)\""], ["proof (state)\nthis:\n  k = (LEAST k. k < m \\<and> c \\<bullet> a k < (0::'a))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "let ?I'' = \"insert k I'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<Longrightarrow>\n    \\<exists>I'. (I', I) \\<in> step_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I'. (I', I) \\<in> step_rel", "unfolding step_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I'.\n       (I', I)\n       \\<in> Restr {(I'', I). \\<exists>l c h. Ex (cond I I'' l c h)} valid_I", "proof (intro exI[of _ ?I''], standard, unfold mem_Collect_eq split, intro exI)"], ["proof (state)\ngoal (2 subgoals):\n 1. cond I (insert k I') ?l4 ?c5 ?h6 ?x7\n 2. (insert k I', I) \\<in> valid_I \\<times> valid_I", "from LeastI_ex[OF ]"], ["proof (chain)\npicking this:\n  \\<exists>x. ?P x \\<Longrightarrow> ?P (Least ?P)", "have \"\\<exists>k. k < m \\<and> c \\<bullet> a k < 0\""], ["proof (prove)\nusing this:\n  \\<exists>x. ?P x \\<Longrightarrow> ?P (Least ?P)\n\ngoal (1 subgoal):\n 1. \\<exists>k<m. c \\<bullet> a k < (0::'a)", "using cond2_F"], ["proof (prove)\nusing this:\n  \\<exists>x. ?P x \\<Longrightarrow> ?P (Least ?P)\n  \\<not> (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i)\n\ngoal (1 subgoal):\n 1. \\<exists>k<m. c \\<bullet> a k < (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>k<m. c \\<bullet> a k < (0::'a)\n\ngoal (2 subgoals):\n 1. cond I (insert k I') ?l4 ?c5 ?h6 ?x7\n 2. (insert k I', I) \\<in> valid_I \\<times> valid_I", "from LeastI_ex[OF this, folded k_def]"], ["proof (chain)\npicking this:\n  k < m \\<and> c \\<bullet> a k < (0::'a)", "have k: \"k < m\" \"c \\<bullet> a k < 0\""], ["proof (prove)\nusing this:\n  k < m \\<and> c \\<bullet> a k < (0::'a)\n\ngoal (1 subgoal):\n 1. k < m &&& c \\<bullet> a k < (0::'a)", "by auto"], ["proof (state)\nthis:\n  k < m\n  c \\<bullet> a k < (0::'a)\n\ngoal (2 subgoals):\n 1. cond I (insert k I') ?l4 ?c5 ?h6 ?x7\n 2. (insert k I', I) \\<in> valid_I \\<times> valid_I", "show \"cond I ?I'' lamb c h k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cond I (insert k I') lamb c h k", "unfolding cond_def I'_def[symmetric] cnorm"], ["proof (prove)\ngoal (1 subgoal):\n 1. b = lincomb lamb (a ` I) \\<and>\n    h \\<in> I \\<and>\n    lamb (a h) < (0::'a) \\<and>\n    (\\<forall>h'.\n        h' \\<in> I \\<longrightarrow>\n        h' < h \\<longrightarrow> (0::'a) \\<le> lamb (a h')) \\<and>\n    c \\<in> carrier_vec n \\<and>\n    {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)} =\n    {x \\<in> carrier_vec n. c \\<bullet> x = (0::'a)} \\<and>\n    c \\<bullet> b < (0::'a) \\<and>\n    k < m \\<and>\n    c \\<bullet> a k < (0::'a) \\<and>\n    (\\<forall>k'<k. (0::'a) \\<le> c \\<bullet> a k') \\<and>\n    insert k I' = insert k I'", "proof(intro conjI cb_le_zero b_is_lincomb h ccarr h_least refl k)"], ["proof (state)\ngoal (2 subgoals):\n 1. {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)} =\n    {x \\<in> carrier_vec n. c \\<bullet> x = (0::'a)}\n 2. \\<forall>k'<k. (0::'a) \\<le> c \\<bullet> a k'", "show \"{x \\<in> carrier_vec n. x \\<bullet> c = 0} = {x \\<in> carrier_vec n. c \\<bullet> x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)} =\n    {x \\<in> carrier_vec n. c \\<bullet> x = (0::'a)}", "using comm_scalar_prod[OF ccarr]"], ["proof (prove)\nusing this:\n  ?v\\<^sub>2 \\<in> carrier_vec n \\<Longrightarrow>\n  c \\<bullet> ?v\\<^sub>2 = ?v\\<^sub>2 \\<bullet> c\n\ngoal (1 subgoal):\n 1. {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)} =\n    {x \\<in> carrier_vec n. c \\<bullet> x = (0::'a)}", "by auto"], ["proof (state)\nthis:\n  {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)} =\n  {x \\<in> carrier_vec n. c \\<bullet> x = (0::'a)}\n\ngoal (1 subgoal):\n 1. \\<forall>k'<k. (0::'a) \\<le> c \\<bullet> a k'", "from not_less_Least[of _ \"\\<lambda> k. k < m \\<and> c \\<bullet> a k < 0\", folded k_def]"], ["proof (chain)\npicking this:\n  ?k < k \\<Longrightarrow> \\<not> (?k < m \\<and> c \\<bullet> a ?k < (0::'a))", "have \"\\<forall>k' < k . k' > m \\<or> c \\<bullet> a k' \\<ge> 0\""], ["proof (prove)\nusing this:\n  ?k < k \\<Longrightarrow> \\<not> (?k < m \\<and> c \\<bullet> a ?k < (0::'a))\n\ngoal (1 subgoal):\n 1. \\<forall>k'<k. m < k' \\<or> (0::'a) \\<le> c \\<bullet> a k'", "using k(1) less_trans not_less"], ["proof (prove)\nusing this:\n  ?k < k \\<Longrightarrow> \\<not> (?k < m \\<and> c \\<bullet> a ?k < (0::'a))\n  k < m\n  \\<lbrakk>?x < ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>k'<k. m < k' \\<or> (0::'a) \\<le> c \\<bullet> a k'", "by blast"], ["proof (state)\nthis:\n  \\<forall>k'<k. m < k' \\<or> (0::'a) \\<le> c \\<bullet> a k'\n\ngoal (1 subgoal):\n 1. \\<forall>k'<k. (0::'a) \\<le> c \\<bullet> a k'", "then"], ["proof (chain)\npicking this:\n  \\<forall>k'<k. m < k' \\<or> (0::'a) \\<le> c \\<bullet> a k'", "show \"\\<forall>k' < k . c \\<bullet> a k' \\<ge> 0\""], ["proof (prove)\nusing this:\n  \\<forall>k'<k. m < k' \\<or> (0::'a) \\<le> c \\<bullet> a k'\n\ngoal (1 subgoal):\n 1. \\<forall>k'<k. (0::'a) \\<le> c \\<bullet> a k'", "using k(1)"], ["proof (prove)\nusing this:\n  \\<forall>k'<k. m < k' \\<or> (0::'a) \\<le> c \\<bullet> a k'\n  k < m\n\ngoal (1 subgoal):\n 1. \\<forall>k'<k. (0::'a) \\<le> c \\<bullet> a k'", "by auto"], ["proof (state)\nthis:\n  \\<forall>k'<k. (0::'a) \\<le> c \\<bullet> a k'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cond I (insert k I') lamb c h k\n\ngoal (1 subgoal):\n 1. (insert k I', I) \\<in> valid_I \\<times> valid_I", "have \"?I'' \\<in> valid_I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert k I' \\<in> valid_I", "unfolding valid_I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert k I'\n    \\<in> {I. card I = n \\<and>\n              lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}", "proof(standard, intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. card (insert k I') = n\n 2. lin_indpt (a ` insert k I')\n 3. insert k I' \\<subseteq> {0..<m}", "from k a"], ["proof (chain)\npicking this:\n  k < m\n  c \\<bullet> a k < (0::'a)\n  a ` {0..<m} \\<subseteq> carrier_vec n", "have ak_carr: \"a k \\<in> carrier_vec n\""], ["proof (prove)\nusing this:\n  k < m\n  c \\<bullet> a k < (0::'a)\n  a ` {0..<m} \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. a k \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  a k \\<in> carrier_vec n\n\ngoal (3 subgoals):\n 1. card (insert k I') = n\n 2. lin_indpt (a ` insert k I')\n 3. insert k I' \\<subseteq> {0..<m}", "have ak_nin_span: \"a k \\<notin> span ?D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a k \\<notin> local.span (a ` I')", "using k(2) cnorm comm_scalar_prod[OF ak_carr ccarr]"], ["proof (prove)\nusing this:\n  c \\<bullet> a k < (0::'a)\n  local.span (a ` I') = {x \\<in> carrier_vec n. x \\<bullet> c = (0::'a)}\n  a k \\<bullet> c = c \\<bullet> a k\n\ngoal (1 subgoal):\n 1. a k \\<notin> local.span (a ` I')", "by auto"], ["proof (state)\nthis:\n  a k \\<notin> local.span (a ` I')\n\ngoal (3 subgoals):\n 1. card (insert k I') = n\n 2. lin_indpt (a ` insert k I')\n 3. insert k I' \\<subseteq> {0..<m}", "hence ak_nin_D': \"a k \\<notin> ?D'\""], ["proof (prove)\nusing this:\n  a k \\<notin> local.span (a ` I')\n\ngoal (1 subgoal):\n 1. a k \\<notin> a ` I'", "using span_mem[OF carrD']"], ["proof (prove)\nusing this:\n  a k \\<notin> local.span (a ` I')\n  ?u \\<in> a ` I' \\<Longrightarrow> ?u \\<in> local.span (a ` I')\n\ngoal (1 subgoal):\n 1. a k \\<notin> a ` I'", "by auto"], ["proof (state)\nthis:\n  a k \\<notin> a ` I'\n\ngoal (3 subgoals):\n 1. card (insert k I') = n\n 2. lin_indpt (a ` insert k I')\n 3. insert k I' \\<subseteq> {0..<m}", "from lin_dep_iff_in_span[OF carrD' linD' ak_carr ak_nin_D']"], ["proof (chain)\npicking this:\n  (a k \\<in> local.span (a ` I')) = lin_dep (a ` I' \\<union> {a k})", "show \"lin_indpt (a ` ?I'')\""], ["proof (prove)\nusing this:\n  (a k \\<in> local.span (a ` I')) = lin_dep (a ` I' \\<union> {a k})\n\ngoal (1 subgoal):\n 1. lin_indpt (a ` insert k I')", "using ak_nin_span"], ["proof (prove)\nusing this:\n  (a k \\<in> local.span (a ` I')) = lin_dep (a ` I' \\<union> {a k})\n  a k \\<notin> local.span (a ` I')\n\ngoal (1 subgoal):\n 1. lin_indpt (a ` insert k I')", "by auto"], ["proof (state)\nthis:\n  lin_indpt (a ` insert k I')\n\ngoal (2 subgoals):\n 1. card (insert k I') = n\n 2. insert k I' \\<subseteq> {0..<m}", "show \"?I'' \\<subseteq> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert k I' \\<subseteq> {0..<m}", "using I'm k"], ["proof (prove)\nusing this:\n  I' \\<subseteq> {0..<m}\n  k < m\n  c \\<bullet> a k < (0::'a)\n\ngoal (1 subgoal):\n 1. insert k I' \\<subseteq> {0..<m}", "by auto"], ["proof (state)\nthis:\n  insert k I' \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. card (insert k I') = n", "show \"card (insert k I') = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert k I') = n", "using cardD' ak_nin_D' finD'"], ["proof (prove)\nusing this:\n  Suc (card (a ` I')) = n\n  a k \\<notin> a ` I'\n  finite (a ` I')\n\ngoal (1 subgoal):\n 1. card (insert k I') = n", "by (metis \\<open>insert k I' \\<subseteq> {0..<m}\\<close> card_a_I card_insert_disjoint image_insert)"], ["proof (state)\nthis:\n  card (insert k I') = n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert k I' \\<in> valid_I\n\ngoal (1 subgoal):\n 1. (insert k I', I) \\<in> valid_I \\<times> valid_I", "then"], ["proof (chain)\npicking this:\n  insert k I' \\<in> valid_I", "show \"(?I'', I) \\<in> valid_I \\<times> valid_I\""], ["proof (prove)\nusing this:\n  insert k I' \\<in> valid_I\n\ngoal (1 subgoal):\n 1. (insert k I', I) \\<in> valid_I \\<times> valid_I", "using I"], ["proof (prove)\nusing this:\n  insert k I' \\<in> valid_I\n  I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. (insert k I', I) \\<in> valid_I \\<times> valid_I", "by auto"], ["proof (state)\nthis:\n  (insert k I', I) \\<in> valid_I \\<times> valid_I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>I'. (I', I) \\<in> step_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>I'. (I', I) \\<in> step_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>I'. (I', I) \\<in> step_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?I5 \\<in> valid_I \\<Longrightarrow> \\<exists>I'. (I', ?I5) \\<in> step_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "note step = this"], ["proof (state)\nthis:\n  ?I5 \\<in> valid_I \\<Longrightarrow> \\<exists>I'. (I', ?I5) \\<in> step_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  ?I5 \\<in> valid_I \\<Longrightarrow> \\<exists>I'. (I', ?I5) \\<in> step_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "(* create some valid initial set I *)"], ["proof (state)\nthis:\n  ?I5 \\<in> valid_I \\<Longrightarrow> \\<exists>I'. (I', ?I5) \\<in> step_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "from exists_lin_indpt_subset[OF a, unfolded full_span]"], ["proof (chain)\npicking this:\n  \\<exists>Ls.\n     lin_indpt Ls \\<and>\n     local.span Ls = carrier_vec n \\<and> Ls \\<subseteq> a ` {0..<m}", "obtain A where lin: \"lin_indpt A\" and span: \"span A = carrier_vec n\" and Am: \"A \\<subseteq> a ` {0 ..<m}\""], ["proof (prove)\nusing this:\n  \\<exists>Ls.\n     lin_indpt Ls \\<and>\n     local.span Ls = carrier_vec n \\<and> Ls \\<subseteq> a ` {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>lin_indpt A; local.span A = carrier_vec n;\n         A \\<subseteq> a ` {0..<m}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lin_indpt A\n  local.span A = carrier_vec n\n  A \\<subseteq> a ` {0..<m}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "from Am a"], ["proof (chain)\npicking this:\n  A \\<subseteq> a ` {0..<m}\n  a ` {0..<m} \\<subseteq> carrier_vec n", "have A: \"A \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  A \\<subseteq> a ` {0..<m}\n  a ` {0..<m} \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "from lin span A"], ["proof (chain)\npicking this:\n  lin_indpt A\n  local.span A = carrier_vec n\n  A \\<subseteq> carrier_vec n", "have card: \"card A = n\""], ["proof (prove)\nusing this:\n  lin_indpt A\n  local.span A = carrier_vec n\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. card A = n", "using basis_def dim_basis dim_is_n fin_dim_li_fin"], ["proof (prove)\nusing this:\n  lin_indpt A\n  local.span A = carrier_vec n\n  A \\<subseteq> carrier_vec n\n  basis ?A =\n  (lin_indpt ?A \\<and>\n   local.span ?A = carrier_vec n \\<and> ?A \\<subseteq> carrier_vec n)\n  \\<lbrakk>finite ?A; basis ?A\\<rbrakk>\n  \\<Longrightarrow> local.dim = card ?A\n  local.dim = n\n  \\<lbrakk>fin_dim; lin_indpt ?A; ?A \\<subseteq> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. card A = n", "by auto"], ["proof (state)\nthis:\n  card A = n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "from A Am"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier_vec n\n  A \\<subseteq> a ` {0..<m}", "obtain I where  A: \"A = a ` I\" and I: \"I \\<subseteq> {0 ..< m}\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier_vec n\n  A \\<subseteq> a ` {0..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>A = a ` I; I \\<subseteq> {0..<m}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis subset_imageE)"], ["proof (state)\nthis:\n  A = a ` I\n  I \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "have \"I \\<in> valid_I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<in> valid_I", "using I card lin"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<m}\n  card A = n\n  lin_indpt A\n\ngoal (1 subgoal):\n 1. I \\<in> valid_I", "unfolding valid_I_def A"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<m}\n  card (a ` I) = n\n  lin_indpt (a ` I)\n\ngoal (1 subgoal):\n 1. I \\<in> {I. card I = n \\<and>\n                lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}", "by auto"], ["proof (state)\nthis:\n  I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "hence \"\\<exists> I. I \\<in> valid_I\""], ["proof (prove)\nusing this:\n  I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<exists>I. I \\<in> valid_I", ".."], ["proof (state)\nthis:\n  \\<exists>I. I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<exists>I. I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "note init = this"], ["proof (state)\nthis:\n  \\<exists>I. I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "have step_valid: \"(I',I) \\<in> step_rel \\<Longrightarrow> I' \\<in> valid_I\" for I I'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (I', I) \\<in> step_rel \\<Longrightarrow> I' \\<in> valid_I", "unfolding step_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (I', I)\n    \\<in> Restr {(I'', I). \\<exists>l c h. Ex (cond I I'' l c h)}\n           valid_I \\<Longrightarrow>\n    I' \\<in> valid_I", "by auto"], ["proof (state)\nthis:\n  (?I'3, ?I3) \\<in> step_rel \\<Longrightarrow> ?I'3 \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "have \"\\<not> (wf step_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> wf step_rel", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. wf step_rel \\<Longrightarrow> False", "from init"], ["proof (chain)\npicking this:\n  \\<exists>I. I \\<in> valid_I", "obtain I where I: \"I \\<in> valid_I\""], ["proof (prove)\nusing this:\n  \\<exists>I. I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. (\\<And>I. I \\<in> valid_I \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I \\<in> valid_I\n\ngoal (1 subgoal):\n 1. wf step_rel \\<Longrightarrow> False", "assume \"wf step_rel\""], ["proof (state)\nthis:\n  wf step_rel\n\ngoal (1 subgoal):\n 1. wf step_rel \\<Longrightarrow> False", "from this[unfolded wf_eq_minimal, rule_format, OF I] step step_valid"], ["proof (chain)\npicking this:\n  \\<exists>z\\<in>valid_I.\n     \\<forall>y. (y, z) \\<in> step_rel \\<longrightarrow> y \\<notin> valid_I\n  ?I5 \\<in> valid_I \\<Longrightarrow> \\<exists>I'. (I', ?I5) \\<in> step_rel\n  (?I'3, ?I3) \\<in> step_rel \\<Longrightarrow> ?I'3 \\<in> valid_I", "show False"], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>valid_I.\n     \\<forall>y. (y, z) \\<in> step_rel \\<longrightarrow> y \\<notin> valid_I\n  ?I5 \\<in> valid_I \\<Longrightarrow> \\<exists>I'. (I', ?I5) \\<in> step_rel\n  (?I'3, ?I3) \\<in> step_rel \\<Longrightarrow> ?I'3 \\<in> valid_I\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> wf step_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "with wf_iff_acyclic_if_finite[OF finite_step_rel]"], ["proof (chain)\npicking this:\n  wf step_rel = acyclic step_rel\n  \\<not> wf step_rel", "have \"\\<not> acyclic step_rel\""], ["proof (prove)\nusing this:\n  wf step_rel = acyclic step_rel\n  \\<not> wf step_rel\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel", "by auto"], ["proof (state)\nthis:\n  \\<not> acyclic step_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>acyclic step_rel; \\<not> goal\\<rbrakk> \\<Longrightarrow> False", "thus \"acyclic step_rel \\<Longrightarrow> False\""], ["proof (prove)\nusing this:\n  \\<not> acyclic step_rel\n\ngoal (1 subgoal):\n 1. acyclic step_rel \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  acyclic step_rel \\<Longrightarrow> False\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma acyclic_step_rel: \"acyclic step_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. acyclic step_rel", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> acyclic step_rel\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence \"\\<not> acyclic (step_rel\\<inverse>)\""], ["proof (prove)\nusing this:\n  \\<not> acyclic step_rel\n\ngoal (1 subgoal):\n 1. \\<not> acyclic (step_rel\\<inverse>)", "by auto"], ["proof (state)\nthis:\n  \\<not> acyclic (step_rel\\<inverse>)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "(* obtain cycle *)"], ["proof (state)\nthis:\n  \\<not> acyclic (step_rel\\<inverse>)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> acyclic (step_rel\\<inverse>)", "obtain I where \"(I, I) \\<in> (step_rel^-1)^+\""], ["proof (prove)\nusing this:\n  \\<not> acyclic (step_rel\\<inverse>)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        (I, I) \\<in> (step_rel\\<inverse>)\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding acyclic_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x. (x, x) \\<notin> (step_rel\\<inverse>)\\<^sup>+)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        (I, I) \\<in> (step_rel\\<inverse>)\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (I, I) \\<in> (step_rel\\<inverse>)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from this[unfolded trancl_power]"], ["proof (chain)\npicking this:\n  \\<exists>n>0. (I, I) \\<in> step_rel\\<inverse> ^^ n", "obtain len where \"(I, I) \\<in> (step_rel^-1) ^^ len\" and len0: \"len > 0\""], ["proof (prove)\nusing this:\n  \\<exists>n>0. (I, I) \\<in> step_rel\\<inverse> ^^ n\n\ngoal (1 subgoal):\n 1. (\\<And>len.\n        \\<lbrakk>(I, I) \\<in> step_rel\\<inverse> ^^ len; 0 < len\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (I, I) \\<in> step_rel\\<inverse> ^^ len\n  0 < len\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "(* obtain all intermediate I's *)"], ["proof (state)\nthis:\n  (I, I) \\<in> step_rel\\<inverse> ^^ len\n  0 < len\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from this[unfolded relpow_fun_conv]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     f 0 = I \\<and>\n     f len = I \\<and>\n     (\\<forall>i<len. (f i, f (Suc i)) \\<in> step_rel\\<inverse>)\n  0 < len", "obtain Is where\n    stepsIs: \"\\<And> i. i < len \\<Longrightarrow> (Is (Suc i), Is i) \\<in> step_rel\"\n    and IsI: \"Is 0 = I\" \"Is len = I\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f 0 = I \\<and>\n     f len = I \\<and>\n     (\\<forall>i<len. (f i, f (Suc i)) \\<in> step_rel\\<inverse>)\n  0 < len\n\ngoal (1 subgoal):\n 1. (\\<And>Is.\n        \\<lbrakk>\\<And>i.\n                    i < len \\<Longrightarrow>\n                    (Is (Suc i), Is i) \\<in> step_rel;\n         Is 0 = I; Is len = I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ?i3 < len \\<Longrightarrow> (Is (Suc ?i3), Is ?i3) \\<in> step_rel\n  Is 0 = I\n  Is len = I\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  ?i3 < len \\<Longrightarrow> (Is (Suc ?i3), Is ?i3) \\<in> step_rel\n  Is 0 = I\n  Is len = I\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume \"i \\<le> len\""], ["proof (state)\nthis:\n  i \\<le> len\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence \"i - 1 < len\""], ["proof (prove)\nusing this:\n  i \\<le> len\n\ngoal (1 subgoal):\n 1. i - 1 < len", "using len0"], ["proof (prove)\nusing this:\n  i \\<le> len\n  0 < len\n\ngoal (1 subgoal):\n 1. i - 1 < len", "by auto"], ["proof (state)\nthis:\n  i - 1 < len\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from stepsIs[unfolded step_rel_def, OF this]"], ["proof (chain)\npicking this:\n  (Is (Suc (i - 1)), Is (i - 1))\n  \\<in> Restr {(I'', I). \\<exists>l c h. Ex (cond I I'' l c h)} valid_I", "have \"Is i \\<in> valid_I\""], ["proof (prove)\nusing this:\n  (Is (Suc (i - 1)), Is (i - 1))\n  \\<in> Restr {(I'', I). \\<exists>l c h. Ex (cond I I'' l c h)} valid_I\n\ngoal (1 subgoal):\n 1. Is i \\<in> valid_I", "by (cases i, auto)"], ["proof (state)\nthis:\n  Is i \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?i5 \\<le> len \\<Longrightarrow> Is ?i5 \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "note Is_valid = this"], ["proof (state)\nthis:\n  ?i5 \\<le> len \\<Longrightarrow> Is ?i5 \\<in> valid_I\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from stepsIs[unfolded step_rel_def]"], ["proof (chain)\npicking this:\n  ?i3 < len \\<Longrightarrow>\n  (Is (Suc ?i3), Is ?i3)\n  \\<in> Restr {(I'', I). \\<exists>l c h. Ex (cond I I'' l c h)} valid_I", "have \"\\<forall> i. \\<exists> l c h k. i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) l c h k\""], ["proof (prove)\nusing this:\n  ?i3 < len \\<Longrightarrow>\n  (Is (Suc ?i3), Is ?i3)\n  \\<in> Restr {(I'', I). \\<exists>l c h. Ex (cond I I'' l c h)} valid_I\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>l c h k.\n          i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) l c h k", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>l c h k.\n        i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) l c h k\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "(* obtain all intermediate c's h's, l's, k's *)"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>l c h k.\n        i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) l c h k\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x.\n        \\<exists>c h k.\n           x < len \\<longrightarrow> cond (Is x) (Is (Suc x)) (f x) c h k", "obtain ls where \"\\<forall> i. \\<exists> c h k. i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) (ls i) c h k\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x.\n        \\<exists>c h k.\n           x < len \\<longrightarrow> cond (Is x) (Is (Suc x)) (f x) c h k\n\ngoal (1 subgoal):\n 1. (\\<And>ls.\n        \\<forall>i.\n           \\<exists>c h k.\n              i < len \\<longrightarrow>\n              cond (Is i) (Is (Suc i)) (ls i) c h k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>c h k.\n        i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) (ls i) c h k\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x.\n        \\<exists>h k.\n           x < len \\<longrightarrow>\n           cond (Is x) (Is (Suc x)) (ls x) (f x) h k", "obtain cs where \"\\<forall> i. \\<exists> h k. i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) (ls i) (cs i) h k\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x.\n        \\<exists>h k.\n           x < len \\<longrightarrow>\n           cond (Is x) (Is (Suc x)) (ls x) (f x) h k\n\ngoal (1 subgoal):\n 1. (\\<And>cs.\n        \\<forall>i.\n           \\<exists>h k.\n              i < len \\<longrightarrow>\n              cond (Is i) (Is (Suc i)) (ls i) (cs i) h k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>h k.\n        i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) (ls i) (cs i) h k\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x.\n        \\<exists>k.\n           x < len \\<longrightarrow>\n           cond (Is x) (Is (Suc x)) (ls x) (cs x) (f x) k", "obtain hs where \"\\<forall> i. \\<exists> k. i < len \\<longrightarrow> cond (Is i) (Is (Suc i)) (ls i) (cs i) (hs i) k\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x.\n        \\<exists>k.\n           x < len \\<longrightarrow>\n           cond (Is x) (Is (Suc x)) (ls x) (cs x) (f x) k\n\ngoal (1 subgoal):\n 1. (\\<And>hs.\n        \\<forall>i.\n           \\<exists>k.\n              i < len \\<longrightarrow>\n              cond (Is i) (Is (Suc i)) (ls i) (cs i) (hs i)\n               k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>k.\n        i < len \\<longrightarrow>\n        cond (Is i) (Is (Suc i)) (ls i) (cs i) (hs i) k\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x<len. cond (Is x) (Is (Suc x)) (ls x) (cs x) (hs x) (f x)", "obtain ks where\n    cond: \"\\<And> i. i < len \\<Longrightarrow> cond (Is i) (Is (Suc i)) (ls i) (cs i) (hs i) (ks i)\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x<len. cond (Is x) (Is (Suc x)) (ls x) (cs x) (hs x) (f x)\n\ngoal (1 subgoal):\n 1. (\\<And>ks.\n        (\\<And>i.\n            i < len \\<Longrightarrow>\n            cond (Is i) (Is (Suc i)) (ls i) (cs i) (hs i)\n             (ks i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "(* finally derive contradiction *)"], ["proof (state)\nthis:\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "let ?R = \"{hs i | i. i < len}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "define r where \"r = Max ?R\""], ["proof (state)\nthis:\n  r = Max {hs i |i. i < len}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from cond[OF len0]"], ["proof (chain)\npicking this:\n  cond (Is 0) (Is (Suc 0)) (ls 0) (cs 0) (hs 0) (ks 0)", "have \"hs 0 \\<in> I\""], ["proof (prove)\nusing this:\n  cond (Is 0) (Is (Suc 0)) (ls 0) (cs 0) (hs 0) (ks 0)\n\ngoal (1 subgoal):\n 1. hs 0 \\<in> I", "using IsI"], ["proof (prove)\nusing this:\n  cond (Is 0) (Is (Suc 0)) (ls 0) (cs 0) (hs 0) (ks 0)\n  Is 0 = I\n  Is len = I\n\ngoal (1 subgoal):\n 1. hs 0 \\<in> I", "unfolding cond_def"], ["proof (prove)\nusing this:\n  b = lincomb (ls 0) (a ` Is 0) \\<and>\n  hs 0 \\<in> Is 0 \\<and>\n  ls 0 (a (hs 0)) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is 0 \\<longrightarrow>\n      h' < hs 0 \\<longrightarrow> (0::'a) \\<le> ls 0 (a h')) \\<and>\n  cs 0 \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is 0 - {hs 0})) =\n  {x \\<in> carrier_vec n. cs 0 \\<bullet> x = (0::'a)} \\<and>\n  cs 0 \\<bullet> b < (0::'a) \\<and>\n  ks 0 < m \\<and>\n  cs 0 \\<bullet> a (ks 0) < (0::'a) \\<and>\n  (\\<forall>k'<ks 0. (0::'a) \\<le> cs 0 \\<bullet> a k') \\<and>\n  Is (Suc 0) = insert (ks 0) (Is 0 - {hs 0})\n  Is 0 = I\n  Is len = I\n\ngoal (1 subgoal):\n 1. hs 0 \\<in> I", "by auto"], ["proof (state)\nthis:\n  hs 0 \\<in> I\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence R0: \"hs 0 \\<in> ?R\""], ["proof (prove)\nusing this:\n  hs 0 \\<in> I\n\ngoal (1 subgoal):\n 1. hs 0 \\<in> {hs i |i. i < len}", "using len0"], ["proof (prove)\nusing this:\n  hs 0 \\<in> I\n  0 < len\n\ngoal (1 subgoal):\n 1. hs 0 \\<in> {hs i |i. i < len}", "by auto"], ["proof (state)\nthis:\n  hs 0 \\<in> {hs i |i. i < len}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have finR: \"finite ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {hs i |i. i < len}", "by auto"], ["proof (state)\nthis:\n  finite {hs i |i. i < len}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from Max_in[OF finR] R0"], ["proof (chain)\npicking this:\n  {hs i |i. i < len} \\<noteq> {} \\<Longrightarrow>\n  Max {hs i |i. i < len} \\<in> {hs i |i. i < len}\n  hs 0 \\<in> {hs i |i. i < len}", "have rR: \"r \\<in> ?R\""], ["proof (prove)\nusing this:\n  {hs i |i. i < len} \\<noteq> {} \\<Longrightarrow>\n  Max {hs i |i. i < len} \\<in> {hs i |i. i < len}\n  hs 0 \\<in> {hs i |i. i < len}\n\ngoal (1 subgoal):\n 1. r \\<in> {hs i |i. i < len}", "unfolding r_def[symmetric]"], ["proof (prove)\nusing this:\n  {hs i |i. i < len} \\<noteq> {} \\<Longrightarrow>\n  r \\<in> {hs i |i. i < len}\n  hs 0 \\<in> {hs i |i. i < len}\n\ngoal (1 subgoal):\n 1. r \\<in> {hs i |i. i < len}", "by auto"], ["proof (state)\nthis:\n  r \\<in> {hs i |i. i < len}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  r \\<in> {hs i |i. i < len}", "obtain p where rp: \"r = hs p\" and p: \"p < len\""], ["proof (prove)\nusing this:\n  r \\<in> {hs i |i. i < len}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>r = hs p; p < len\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = hs p\n  p < len\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "from Max_ge[OF finR, folded r_def]"], ["proof (chain)\npicking this:\n  ?x \\<in> {hs i |i. i < len} \\<Longrightarrow> ?x \\<le> r", "have rLarge: \"i < len \\<Longrightarrow> hs i \\<le> r\" for i"], ["proof (prove)\nusing this:\n  ?x \\<in> {hs i |i. i < len} \\<Longrightarrow> ?x \\<le> r\n\ngoal (1 subgoal):\n 1. i < len \\<Longrightarrow> hs i \\<le> r", "by auto"], ["proof (state)\nthis:\n  ?i3 < len \\<Longrightarrow> hs ?i3 \\<le> r\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have exq: \"\\<exists>q. ks q = r \\<and> q < len\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. ks q = r \\<and> q < len", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>q. ks q = r \\<and> q < len \\<Longrightarrow> False", "assume neg: \"\\<not>?thesis\""], ["proof (state)\nthis:\n  \\<nexists>q. ks q = r \\<and> q < len\n\ngoal (1 subgoal):\n 1. \\<nexists>q. ks q = r \\<and> q < len \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof(cases \"r \\<in> I\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r \\<in> I \\<Longrightarrow> False\n 2. r \\<notin> I \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  r \\<in> I\n\ngoal (2 subgoals):\n 1. r \\<in> I \\<Longrightarrow> False\n 2. r \\<notin> I \\<Longrightarrow> False", "have 1: \"j\\<in>{Suc p..len} \\<Longrightarrow> r \\<notin> Is j\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> {Suc p..len} \\<Longrightarrow> r \\<notin> Is j", "proof(induction j rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "case (less j)"], ["proof (state)\nthis:\n  \\<lbrakk>?y3 < j; ?y3 \\<in> {Suc p..len}\\<rbrakk>\n  \\<Longrightarrow> r \\<notin> Is ?y3\n  j \\<in> {Suc p..len}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "from less(2)"], ["proof (chain)\npicking this:\n  j \\<in> {Suc p..len}", "have j_bounds: \"j = Suc p \\<or> j > Suc p\""], ["proof (prove)\nusing this:\n  j \\<in> {Suc p..len}\n\ngoal (1 subgoal):\n 1. j = Suc p \\<or> Suc p < j", "by auto"], ["proof (state)\nthis:\n  j = Suc p \\<or> Suc p < j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "from less(2)"], ["proof (chain)\npicking this:\n  j \\<in> {Suc p..len}", "have j_len: \"j \\<le> len\""], ["proof (prove)\nusing this:\n  j \\<in> {Suc p..len}\n\ngoal (1 subgoal):\n 1. j \\<le> len", "by auto"], ["proof (state)\nthis:\n  j \\<le> len\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have pj_cond: \"j = Suc p \\<Longrightarrow> cond (Is p) (Is j) (ls p) (cs p) (hs p) (ks p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j = Suc p \\<Longrightarrow>\n    cond (Is p) (Is j) (ls p) (cs p) (hs p) (ks p)", "using cond p"], ["proof (prove)\nusing this:\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n  p < len\n\ngoal (1 subgoal):\n 1. j = Suc p \\<Longrightarrow>\n    cond (Is p) (Is j) (ls p) (cs p) (hs p) (ks p)", "by blast"], ["proof (state)\nthis:\n  j = Suc p \\<Longrightarrow> cond (Is p) (Is j) (ls p) (cs p) (hs p) (ks p)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have r_neq_ksp: \"r \\<noteq> ks p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> ks p", "using p neg"], ["proof (prove)\nusing this:\n  p < len\n  \\<nexists>q. ks q = r \\<and> q < len\n\ngoal (1 subgoal):\n 1. r \\<noteq> ks p", "by auto"], ["proof (state)\nthis:\n  r \\<noteq> ks p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have \"j = Suc p \\<Longrightarrow> Is j = insert (ks p) (Is p - {r})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j = Suc p \\<Longrightarrow> Is j = insert (ks p) (Is p - {r})", "using rp cond pj_cond cond_def[of \"Is p\" \"Is j\" _ _ r]"], ["proof (prove)\nusing this:\n  r = hs p\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n  j = Suc p \\<Longrightarrow> cond (Is p) (Is j) (ls p) (cs p) (hs p) (ks p)\n  cond (Is p) (Is j) ?l ?c r ?k \\<equiv>\n  b = lincomb ?l (a ` Is p) \\<and>\n  r \\<in> Is p \\<and>\n  ?l (a r) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is p \\<longrightarrow>\n      h' < r \\<longrightarrow> (0::'a) \\<le> ?l (a h')) \\<and>\n  ?c \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is p - {r})) =\n  {x \\<in> carrier_vec n. ?c \\<bullet> x = (0::'a)} \\<and>\n  ?c \\<bullet> b < (0::'a) \\<and>\n  ?k < m \\<and>\n  ?c \\<bullet> a ?k < (0::'a) \\<and>\n  (\\<forall>k'<?k. (0::'a) \\<le> ?c \\<bullet> a k') \\<and>\n  Is j = insert ?k (Is p - {r})\n\ngoal (1 subgoal):\n 1. j = Suc p \\<Longrightarrow> Is j = insert (ks p) (Is p - {r})", "by blast"], ["proof (state)\nthis:\n  j = Suc p \\<Longrightarrow> Is j = insert (ks p) (Is p - {r})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "hence c1: \"j = Suc p \\<Longrightarrow> r \\<notin> Is j\""], ["proof (prove)\nusing this:\n  j = Suc p \\<Longrightarrow> Is j = insert (ks p) (Is p - {r})\n\ngoal (1 subgoal):\n 1. j = Suc p \\<Longrightarrow> r \\<notin> Is j", "using r_neq_ksp"], ["proof (prove)\nusing this:\n  j = Suc p \\<Longrightarrow> Is j = insert (ks p) (Is p - {r})\n  r \\<noteq> ks p\n\ngoal (1 subgoal):\n 1. j = Suc p \\<Longrightarrow> r \\<notin> Is j", "by simp"], ["proof (state)\nthis:\n  j = Suc p \\<Longrightarrow> r \\<notin> Is j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have IH: \"\\<And>t. t < j \\<Longrightarrow> t \\<in> {Suc p..len} \\<Longrightarrow> r \\<notin> Is t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t < j; t \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is t", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>?t3 < j; ?t3 \\<in> {Suc p..len}\\<rbrakk>\n  \\<Longrightarrow> r \\<notin> Is ?t3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have r_neq_kspj: \"j > Suc p \\<and> j \\<le> len \\<Longrightarrow> r \\<noteq> ks (j-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<noteq> ks (j - 1)", "using j_len neg IH"], ["proof (prove)\nusing this:\n  j \\<le> len\n  \\<nexists>q. ks q = r \\<and> q < len\n  \\<lbrakk>?t3 < j; ?t3 \\<in> {Suc p..len}\\<rbrakk>\n  \\<Longrightarrow> r \\<notin> Is ?t3\n\ngoal (1 subgoal):\n 1. Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<noteq> ks (j - 1)", "by auto"], ["proof (state)\nthis:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<noteq> ks (j - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have jsucj_cond: \"j > Suc p \\<and> j \\<le> len \\<Longrightarrow> Is j = insert (ks (j-1)) (Is (j-1) - {hs (j-1)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n    Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})", "using cond_def[of \"Is (j-1)\" \"Is j\"] cond"], ["proof (prove)\nusing this:\n  cond (Is (j - 1)) (Is j) ?l ?c ?h ?k \\<equiv>\n  b = lincomb ?l (a ` Is (j - 1)) \\<and>\n  ?h \\<in> Is (j - 1) \\<and>\n  ?l (a ?h) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is (j - 1) \\<longrightarrow>\n      h' < ?h \\<longrightarrow> (0::'a) \\<le> ?l (a h')) \\<and>\n  ?c \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is (j - 1) - {?h})) =\n  {x \\<in> carrier_vec n. ?c \\<bullet> x = (0::'a)} \\<and>\n  ?c \\<bullet> b < (0::'a) \\<and>\n  ?k < m \\<and>\n  ?c \\<bullet> a ?k < (0::'a) \\<and>\n  (\\<forall>k'<?k. (0::'a) \\<le> ?c \\<bullet> a k') \\<and>\n  Is j = insert ?k (Is (j - 1) - {?h})\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n\ngoal (1 subgoal):\n 1. Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n    Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})", "by (metis (no_types, lifting) Suc_less_eq2 diff_Suc_1 le_simps(3))"], ["proof (state)\nthis:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n  Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "hence \"j > Suc p \\<and> j \\<le> len \\<Longrightarrow> r \\<notin> insert (ks (j-1)) (Is (j-1))\""], ["proof (prove)\nusing this:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n  Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})\n\ngoal (1 subgoal):\n 1. Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n    r \\<notin> insert (ks (j - 1)) (Is (j - 1))", "using IH r_neq_kspj"], ["proof (prove)\nusing this:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n  Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})\n  \\<lbrakk>?t3 < j; ?t3 \\<in> {Suc p..len}\\<rbrakk>\n  \\<Longrightarrow> r \\<notin> Is ?t3\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<noteq> ks (j - 1)\n\ngoal (1 subgoal):\n 1. Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n    r \\<notin> insert (ks (j - 1)) (Is (j - 1))", "by auto"], ["proof (state)\nthis:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n  r \\<notin> insert (ks (j - 1)) (Is (j - 1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "hence \"j > Suc p \\<and> j \\<le> len \\<Longrightarrow> r \\<notin> Is j\""], ["proof (prove)\nusing this:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n  r \\<notin> insert (ks (j - 1)) (Is (j - 1))\n\ngoal (1 subgoal):\n 1. Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<notin> Is j", "using jsucj_cond"], ["proof (prove)\nusing this:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n  r \\<notin> insert (ks (j - 1)) (Is (j - 1))\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow>\n  Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})\n\ngoal (1 subgoal):\n 1. Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<notin> Is j", "by simp"], ["proof (state)\nthis:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<notin> Is j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {Suc p..len}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {Suc p..len}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "then"], ["proof (chain)\npicking this:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<notin> Is j", "show ?case"], ["proof (prove)\nusing this:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<notin> Is j\n\ngoal (1 subgoal):\n 1. r \\<notin> Is j", "using j_bounds j_len c1"], ["proof (prove)\nusing this:\n  Suc p < j \\<and> j \\<le> len \\<Longrightarrow> r \\<notin> Is j\n  j = Suc p \\<or> Suc p < j\n  j \\<le> len\n  j = Suc p \\<Longrightarrow> r \\<notin> Is j\n\ngoal (1 subgoal):\n 1. r \\<notin> Is j", "by blast"], ["proof (state)\nthis:\n  r \\<notin> Is j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?j3 \\<in> {Suc p..len} \\<Longrightarrow> r \\<notin> Is ?j3\n\ngoal (2 subgoals):\n 1. r \\<in> I \\<Longrightarrow> False\n 2. r \\<notin> I \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ?j3 \\<in> {Suc p..len} \\<Longrightarrow> r \\<notin> Is ?j3", "show ?thesis"], ["proof (prove)\nusing this:\n  ?j3 \\<in> {Suc p..len} \\<Longrightarrow> r \\<notin> Is ?j3\n\ngoal (1 subgoal):\n 1. False", "using neg IsI(2) True p"], ["proof (prove)\nusing this:\n  ?j3 \\<in> {Suc p..len} \\<Longrightarrow> r \\<notin> Is ?j3\n  \\<nexists>q. ks q = r \\<and> q < len\n  Is len = I\n  r \\<in> I\n  p < len\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. r \\<notin> I \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<notin> I \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  r \\<notin> I\n\ngoal (1 subgoal):\n 1. r \\<notin> I \\<Longrightarrow> False", "have 2: \"j\\<in>{0..p} \\<Longrightarrow> r \\<notin> Is j\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> {0..p} \\<Longrightarrow> r \\<notin> Is j", "proof(induction j rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "case(less j)"], ["proof (state)\nthis:\n  \\<lbrakk>?y3 < j; ?y3 \\<in> {0..p}\\<rbrakk>\n  \\<Longrightarrow> r \\<notin> Is ?y3\n  j \\<in> {0..p}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "from less(2)"], ["proof (chain)\npicking this:\n  j \\<in> {0..p}", "have j_bound: \"j \\<le> p\""], ["proof (prove)\nusing this:\n  j \\<in> {0..p}\n\ngoal (1 subgoal):\n 1. j \\<le> p", "by auto"], ["proof (state)\nthis:\n  j \\<le> p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have r_nin_Is0: \"r \\<notin> Is 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<notin> Is 0", "using IsI(1) False"], ["proof (prove)\nusing this:\n  Is 0 = I\n  r \\<notin> I\n\ngoal (1 subgoal):\n 1. r \\<notin> Is 0", "by simp"], ["proof (state)\nthis:\n  r \\<notin> Is 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have IH: \"\\<And>t. t < j \\<and> t \\<in> {0..p} \\<Longrightarrow> r \\<notin> Is t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. t < j \\<and> t \\<in> {0..p} \\<Longrightarrow> r \\<notin> Is t", "using less.IH"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y3 < j; ?y3 \\<in> {0..p}\\<rbrakk>\n  \\<Longrightarrow> r \\<notin> Is ?y3\n\ngoal (1 subgoal):\n 1. \\<And>t. t < j \\<and> t \\<in> {0..p} \\<Longrightarrow> r \\<notin> Is t", "by blast"], ["proof (state)\nthis:\n  ?t3 < j \\<and> ?t3 \\<in> {0..p} \\<Longrightarrow> r \\<notin> Is ?t3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have j_neq_ksjpred: \"j > 0 \\<Longrightarrow> r \\<noteq> ks (j -1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> r \\<noteq> ks (j - 1)", "using neg j_bound p"], ["proof (prove)\nusing this:\n  \\<nexists>q. ks q = r \\<and> q < len\n  j \\<le> p\n  p < len\n\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> r \\<noteq> ks (j - 1)", "by auto"], ["proof (state)\nthis:\n  0 < j \\<Longrightarrow> r \\<noteq> ks (j - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have Is_jpredj: \"j > 0 \\<Longrightarrow> Is j = insert (ks (j-1)) (Is (j-1) - {hs (j-1)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow>\n    Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})", "using cond_def[of \"Is (j-1)\" \"Is j\" _ _ \"hs (j-1)\" \"ks (j-1)\"] cond"], ["proof (prove)\nusing this:\n  cond (Is (j - 1)) (Is j) ?l ?c (hs (j - 1)) (ks (j - 1)) \\<equiv>\n  b = lincomb ?l (a ` Is (j - 1)) \\<and>\n  hs (j - 1) \\<in> Is (j - 1) \\<and>\n  ?l (a (hs (j - 1))) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is (j - 1) \\<longrightarrow>\n      h' < hs (j - 1) \\<longrightarrow> (0::'a) \\<le> ?l (a h')) \\<and>\n  ?c \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is (j - 1) - {hs (j - 1)})) =\n  {x \\<in> carrier_vec n. ?c \\<bullet> x = (0::'a)} \\<and>\n  ?c \\<bullet> b < (0::'a) \\<and>\n  ks (j - 1) < m \\<and>\n  ?c \\<bullet> a (ks (j - 1)) < (0::'a) \\<and>\n  (\\<forall>k'<ks (j - 1). (0::'a) \\<le> ?c \\<bullet> a k') \\<and>\n  Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow>\n    Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})", "by (metis (full_types) One_nat_def Suc_pred diff_le_self j_bound le_less_trans p)"], ["proof (state)\nthis:\n  0 < j \\<Longrightarrow>\n  Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "have \"j > 0 \\<Longrightarrow> r \\<notin> insert (ks (j-1)) (Is (j-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> r \\<notin> insert (ks (j - 1)) (Is (j - 1))", "using j_neq_ksjpred IH j_bound"], ["proof (prove)\nusing this:\n  0 < j \\<Longrightarrow> r \\<noteq> ks (j - 1)\n  ?t3 < j \\<and> ?t3 \\<in> {0..p} \\<Longrightarrow> r \\<notin> Is ?t3\n  j \\<le> p\n\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> r \\<notin> insert (ks (j - 1)) (Is (j - 1))", "by fastforce"], ["proof (state)\nthis:\n  0 < j \\<Longrightarrow> r \\<notin> insert (ks (j - 1)) (Is (j - 1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "hence \"j > 0 \\<Longrightarrow> r \\<notin> Is j\""], ["proof (prove)\nusing this:\n  0 < j \\<Longrightarrow> r \\<notin> insert (ks (j - 1)) (Is (j - 1))\n\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> r \\<notin> Is j", "using Is_jpredj"], ["proof (prove)\nusing this:\n  0 < j \\<Longrightarrow> r \\<notin> insert (ks (j - 1)) (Is (j - 1))\n  0 < j \\<Longrightarrow>\n  Is j = insert (ks (j - 1)) (Is (j - 1) - {hs (j - 1)})\n\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> r \\<notin> Is j", "by blast"], ["proof (state)\nthis:\n  0 < j \\<Longrightarrow> r \\<notin> Is j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; y \\<in> {0..p}\\<rbrakk>\n                   \\<Longrightarrow> r \\<notin> Is y;\n        x \\<in> {0..p}\\<rbrakk>\n       \\<Longrightarrow> r \\<notin> Is x", "then"], ["proof (chain)\npicking this:\n  0 < j \\<Longrightarrow> r \\<notin> Is j", "show ?case"], ["proof (prove)\nusing this:\n  0 < j \\<Longrightarrow> r \\<notin> Is j\n\ngoal (1 subgoal):\n 1. r \\<notin> Is j", "using j_bound r_nin_Is0"], ["proof (prove)\nusing this:\n  0 < j \\<Longrightarrow> r \\<notin> Is j\n  j \\<le> p\n  r \\<notin> Is 0\n\ngoal (1 subgoal):\n 1. r \\<notin> Is j", "by blast"], ["proof (state)\nthis:\n  r \\<notin> Is j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?j3 \\<in> {0..p} \\<Longrightarrow> r \\<notin> Is ?j3\n\ngoal (1 subgoal):\n 1. r \\<notin> I \\<Longrightarrow> False", "have 3: \"r \\<in> Is p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> Is p", "using rp cond cond_def p"], ["proof (prove)\nusing this:\n  r = hs p\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n  cond ?I ?I' ?l ?c ?h ?k \\<equiv>\n  b = lincomb ?l (a ` ?I) \\<and>\n  ?h \\<in> ?I \\<and>\n  ?l (a ?h) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> ?I \\<longrightarrow>\n      h' < ?h \\<longrightarrow> (0::'a) \\<le> ?l (a h')) \\<and>\n  ?c \\<in> carrier_vec n \\<and>\n  local.span (a ` (?I - {?h})) =\n  {x \\<in> carrier_vec n. ?c \\<bullet> x = (0::'a)} \\<and>\n  ?c \\<bullet> b < (0::'a) \\<and>\n  ?k < m \\<and>\n  ?c \\<bullet> a ?k < (0::'a) \\<and>\n  (\\<forall>k'<?k. (0::'a) \\<le> ?c \\<bullet> a k') \\<and>\n  ?I' = insert ?k (?I - {?h})\n  p < len\n\ngoal (1 subgoal):\n 1. r \\<in> Is p", "by blast"], ["proof (state)\nthis:\n  r \\<in> Is p\n\ngoal (1 subgoal):\n 1. r \\<notin> I \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  r \\<in> Is p", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> Is p\n\ngoal (1 subgoal):\n 1. False", "using 2 3"], ["proof (prove)\nusing this:\n  r \\<in> Is p\n  ?j3 \\<in> {0..p} \\<Longrightarrow> r \\<notin> Is ?j3\n  r \\<in> Is p\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>q. ks q = r \\<and> q < len\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>q. ks q = r \\<and> q < len", "obtain q where q1: \"ks q = r\" and q_len: \"q < len\""], ["proof (prove)\nusing this:\n  \\<exists>q. ks q = r \\<and> q < len\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>ks q = r; q < len\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ks q = r\n  q < len\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  ks q = r\n  q < len\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "fix t i1 i2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume \"i1 < len\" \"i2 < len\" \"t < m\""], ["proof (state)\nthis:\n  i1 < len\n  i2 < len\n  t < m\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume \"t\\<in> Is i1\" \"t\\<notin> Is i2\""], ["proof (state)\nthis:\n  t \\<in> Is i1\n  t \\<notin> Is i2\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"\\<exists>j < len. t = hs j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j<len. t = hs j", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>j<len. t = hs j) \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>j<len. t = hs j)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>j<len. t = hs j) \\<Longrightarrow> False", "hence hst: \"\\<And> j. j < len \\<Longrightarrow> hs j \\<noteq> t\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>j<len. t = hs j)\n\ngoal (1 subgoal):\n 1. \\<And>j. j < len \\<Longrightarrow> hs j \\<noteq> t", "by auto"], ["proof (state)\nthis:\n  ?j3 < len \\<Longrightarrow> hs ?j3 \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>j<len. t = hs j) \\<Longrightarrow> False", "have main: \"t \\<notin> Is (i + k) \\<Longrightarrow> i + k \\<le> len \\<Longrightarrow> t \\<notin> Is k\" for i k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<notin> Is (i + k); i + k \\<le> len\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> Is k", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<notin> Is (0 + k); 0 + k \\<le> len\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> Is k\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>t \\<notin> Is (i + k); i + k \\<le> len\\<rbrakk>\n                \\<Longrightarrow> t \\<notin> Is k;\n        t \\<notin> Is (Suc i + k); Suc i + k \\<le> len\\<rbrakk>\n       \\<Longrightarrow> t \\<notin> Is k", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>t \\<notin> Is (i + k); i + k \\<le> len\\<rbrakk>\n  \\<Longrightarrow> t \\<notin> Is k\n  t \\<notin> Is (Suc i + k)\n  Suc i + k \\<le> len\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<notin> Is (0 + k); 0 + k \\<le> len\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> Is k\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>t \\<notin> Is (i + k); i + k \\<le> len\\<rbrakk>\n                \\<Longrightarrow> t \\<notin> Is k;\n        t \\<notin> Is (Suc i + k); Suc i + k \\<le> len\\<rbrakk>\n       \\<Longrightarrow> t \\<notin> Is k", "hence i: \"i + k < len\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t \\<notin> Is (i + k); i + k \\<le> len\\<rbrakk>\n  \\<Longrightarrow> t \\<notin> Is k\n  t \\<notin> Is (Suc i + k)\n  Suc i + k \\<le> len\n\ngoal (1 subgoal):\n 1. i + k < len", "by auto"], ["proof (state)\nthis:\n  i + k < len\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<notin> Is (0 + k); 0 + k \\<le> len\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> Is k\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>t \\<notin> Is (i + k); i + k \\<le> len\\<rbrakk>\n                \\<Longrightarrow> t \\<notin> Is k;\n        t \\<notin> Is (Suc i + k); Suc i + k \\<le> len\\<rbrakk>\n       \\<Longrightarrow> t \\<notin> Is k", "from cond[OF this, unfolded cond_def]"], ["proof (chain)\npicking this:\n  b = lincomb (ls (i + k)) (a ` Is (i + k)) \\<and>\n  hs (i + k) \\<in> Is (i + k) \\<and>\n  ls (i + k) (a (hs (i + k))) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is (i + k) \\<longrightarrow>\n      h' < hs (i + k) \\<longrightarrow>\n      (0::'a) \\<le> ls (i + k) (a h')) \\<and>\n  cs (i + k) \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is (i + k) - {hs (i + k)})) =\n  {x \\<in> carrier_vec n. cs (i + k) \\<bullet> x = (0::'a)} \\<and>\n  cs (i + k) \\<bullet> b < (0::'a) \\<and>\n  ks (i + k) < m \\<and>\n  cs (i + k) \\<bullet> a (ks (i + k)) < (0::'a) \\<and>\n  (\\<forall>k'<ks (i + k). (0::'a) \\<le> cs (i + k) \\<bullet> a k') \\<and>\n  Is (Suc (i + k)) = insert (ks (i + k)) (Is (i + k) - {hs (i + k)})", "have \"Is (Suc i + k) = insert (ks (i + k)) (Is (i + k) - {hs (i + k)})\""], ["proof (prove)\nusing this:\n  b = lincomb (ls (i + k)) (a ` Is (i + k)) \\<and>\n  hs (i + k) \\<in> Is (i + k) \\<and>\n  ls (i + k) (a (hs (i + k))) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is (i + k) \\<longrightarrow>\n      h' < hs (i + k) \\<longrightarrow>\n      (0::'a) \\<le> ls (i + k) (a h')) \\<and>\n  cs (i + k) \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is (i + k) - {hs (i + k)})) =\n  {x \\<in> carrier_vec n. cs (i + k) \\<bullet> x = (0::'a)} \\<and>\n  cs (i + k) \\<bullet> b < (0::'a) \\<and>\n  ks (i + k) < m \\<and>\n  cs (i + k) \\<bullet> a (ks (i + k)) < (0::'a) \\<and>\n  (\\<forall>k'<ks (i + k). (0::'a) \\<le> cs (i + k) \\<bullet> a k') \\<and>\n  Is (Suc (i + k)) = insert (ks (i + k)) (Is (i + k) - {hs (i + k)})\n\ngoal (1 subgoal):\n 1. Is (Suc i + k) = insert (ks (i + k)) (Is (i + k) - {hs (i + k)})", "by auto"], ["proof (state)\nthis:\n  Is (Suc i + k) = insert (ks (i + k)) (Is (i + k) - {hs (i + k)})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<notin> Is (0 + k); 0 + k \\<le> len\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> Is k\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>t \\<notin> Is (i + k); i + k \\<le> len\\<rbrakk>\n                \\<Longrightarrow> t \\<notin> Is k;\n        t \\<notin> Is (Suc i + k); Suc i + k \\<le> len\\<rbrakk>\n       \\<Longrightarrow> t \\<notin> Is k", "from Suc(2)[unfolded this] hst[OF i]"], ["proof (chain)\npicking this:\n  t \\<notin> insert (ks (i + k)) (Is (i + k) - {hs (i + k)})\n  hs (i + k) \\<noteq> t", "have \"t \\<notin> Is (i + k)\""], ["proof (prove)\nusing this:\n  t \\<notin> insert (ks (i + k)) (Is (i + k) - {hs (i + k)})\n  hs (i + k) \\<noteq> t\n\ngoal (1 subgoal):\n 1. t \\<notin> Is (i + k)", "by auto"], ["proof (state)\nthis:\n  t \\<notin> Is (i + k)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<notin> Is (0 + k); 0 + k \\<le> len\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> Is k\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>t \\<notin> Is (i + k); i + k \\<le> len\\<rbrakk>\n                \\<Longrightarrow> t \\<notin> Is k;\n        t \\<notin> Is (Suc i + k); Suc i + k \\<le> len\\<rbrakk>\n       \\<Longrightarrow> t \\<notin> Is k", "from Suc(1)[OF this] i"], ["proof (chain)\npicking this:\n  i + k \\<le> len \\<Longrightarrow> t \\<notin> Is k\n  i + k < len", "show ?case"], ["proof (prove)\nusing this:\n  i + k \\<le> len \\<Longrightarrow> t \\<notin> Is k\n  i + k < len\n\ngoal (1 subgoal):\n 1. t \\<notin> Is k", "by auto"], ["proof (state)\nthis:\n  t \\<notin> Is k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<notin> Is (0 + k); 0 + k \\<le> len\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> Is k", "qed auto"], ["proof (state)\nthis:\n  \\<lbrakk>t \\<notin> Is (?i3 + ?k3); ?i3 + ?k3 \\<le> len\\<rbrakk>\n  \\<Longrightarrow> t \\<notin> Is ?k3\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>j<len. t = hs j) \\<Longrightarrow> False", "from main[of i2 0] \\<open>i2 < len\\<close> \\<open>t \\<notin> Is i2\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>t \\<notin> Is (i2 + 0); i2 + 0 \\<le> len\\<rbrakk>\n  \\<Longrightarrow> t \\<notin> Is 0\n  i2 < len\n  t \\<notin> Is i2", "have \"t \\<notin> Is 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t \\<notin> Is (i2 + 0); i2 + 0 \\<le> len\\<rbrakk>\n  \\<Longrightarrow> t \\<notin> Is 0\n  i2 < len\n  t \\<notin> Is i2\n\ngoal (1 subgoal):\n 1. t \\<notin> Is 0", "by auto"], ["proof (state)\nthis:\n  t \\<notin> Is 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>j<len. t = hs j) \\<Longrightarrow> False", "with IsI"], ["proof (chain)\npicking this:\n  Is 0 = I\n  Is len = I\n  t \\<notin> Is 0", "have \"t \\<notin> Is len\""], ["proof (prove)\nusing this:\n  Is 0 = I\n  Is len = I\n  t \\<notin> Is 0\n\ngoal (1 subgoal):\n 1. t \\<notin> Is len", "by auto"], ["proof (state)\nthis:\n  t \\<notin> Is len\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>j<len. t = hs j) \\<Longrightarrow> False", "with main[of \"len - i1\" i1] \\<open>i1 < len\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>t \\<notin> Is (len - i1 + i1); len - i1 + i1 \\<le> len\\<rbrakk>\n  \\<Longrightarrow> t \\<notin> Is i1\n  i1 < len\n  t \\<notin> Is len", "have \"t \\<notin> Is i1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t \\<notin> Is (len - i1 + i1); len - i1 + i1 \\<le> len\\<rbrakk>\n  \\<Longrightarrow> t \\<notin> Is i1\n  i1 < len\n  t \\<notin> Is len\n\ngoal (1 subgoal):\n 1. t \\<notin> Is i1", "by auto"], ["proof (state)\nthis:\n  t \\<notin> Is i1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>j<len. t = hs j) \\<Longrightarrow> False", "with \\<open>t \\<in> Is i1\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> Is i1\n  t \\<notin> Is i1", "show False"], ["proof (prove)\nusing this:\n  t \\<in> Is i1\n  t \\<notin> Is i1\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j<len. t = hs j\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i1.5 < len; ?i2.5 < len; ?t5 < m; ?t5 \\<in> Is ?i1.5;\n   ?t5 \\<notin> Is ?i2.5\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j<len. ?t5 = hs j\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "note innotin = this"], ["proof (state)\nthis:\n  \\<lbrakk>?i1.5 < len; ?i2.5 < len; ?t5 < m; ?t5 \\<in> Is ?i1.5;\n   ?t5 \\<notin> Is ?i2.5\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j<len. ?t5 = hs j\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?i1.5 < len; ?i2.5 < len; ?t5 < m; ?t5 \\<in> Is ?i1.5;\n   ?t5 \\<notin> Is ?i2.5\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j<len. ?t5 = hs j\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume i: \"i \\<in> {Suc r..<m}\""], ["proof (state)\nthis:\n  i \\<in> {Suc r..<m}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  i \\<in> {Suc r..<m}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume i_in_Isp: \"i \\<in> Is p\""], ["proof (state)\nthis:\n  i \\<in> Is p\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"i \\<in> Is q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> Is q", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<notin> Is q \\<Longrightarrow> False", "have i_range: \"i < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < m", "using i"], ["proof (prove)\nusing this:\n  i \\<in> {Suc r..<m}\n\ngoal (1 subgoal):\n 1. i < m", "by simp"], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. i \\<notin> Is q \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  i \\<notin> Is q\n\ngoal (1 subgoal):\n 1. i \\<notin> Is q \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i \\<notin> Is q", "have ex: \"\\<exists>j < len. i = hs j\""], ["proof (prove)\nusing this:\n  i \\<notin> Is q\n\ngoal (1 subgoal):\n 1. \\<exists>j<len. i = hs j", "using innotin[OF p q_len i_range i_in_Isp]"], ["proof (prove)\nusing this:\n  i \\<notin> Is q\n  i \\<notin> Is q \\<Longrightarrow> \\<exists>j<len. i = hs j\n\ngoal (1 subgoal):\n 1. \\<exists>j<len. i = hs j", "by simp"], ["proof (state)\nthis:\n  \\<exists>j<len. i = hs j\n\ngoal (1 subgoal):\n 1. i \\<notin> Is q \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>j<len. i = hs j", "obtain j where j_hs: \"i = hs j\""], ["proof (prove)\nusing this:\n  \\<exists>j<len. i = hs j\n\ngoal (1 subgoal):\n 1. (\\<And>j. i = hs j \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  i = hs j\n\ngoal (1 subgoal):\n 1. i \\<notin> Is q \\<Longrightarrow> False", "have \"i>r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r < i", "using i"], ["proof (prove)\nusing this:\n  i \\<in> {Suc r..<m}\n\ngoal (1 subgoal):\n 1. r < i", "by simp"], ["proof (state)\nthis:\n  r < i\n\ngoal (1 subgoal):\n 1. i \\<notin> Is q \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  r < i", "show False"], ["proof (prove)\nusing this:\n  r < i\n\ngoal (1 subgoal):\n 1. False", "using j_hs p rLarge ex"], ["proof (prove)\nusing this:\n  r < i\n  i = hs j\n  p < len\n  ?i3 < len \\<Longrightarrow> hs ?i3 \\<le> r\n  \\<exists>j<len. i = hs j\n\ngoal (1 subgoal):\n 1. False", "by force"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<in> Is q\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  i \\<in> Is p \\<Longrightarrow> i \\<in> Is q\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence \"(i \\<in> Is p) \\<Longrightarrow> (i \\<in> Is q)\""], ["proof (prove)\nusing this:\n  i \\<in> Is p \\<Longrightarrow> i \\<in> Is q\n\ngoal (1 subgoal):\n 1. i \\<in> Is p \\<Longrightarrow> i \\<in> Is q", "by blast"], ["proof (state)\nthis:\n  i \\<in> Is p \\<Longrightarrow> i \\<in> Is q\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i5 \\<in> {Suc r..<m}; ?i5 \\<in> Is p\\<rbrakk>\n  \\<Longrightarrow> ?i5 \\<in> Is q\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "note bla = this"], ["proof (state)\nthis:\n  \\<lbrakk>?i5 \\<in> {Suc r..<m}; ?i5 \\<in> Is p\\<rbrakk>\n  \\<Longrightarrow> ?i5 \\<in> Is q\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have blin: \"b = lincomb (ls p) (a ` (Is p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = lincomb (ls p) (a ` Is p)", "using cond_def p cond"], ["proof (prove)\nusing this:\n  cond ?I ?I' ?l ?c ?h ?k \\<equiv>\n  b = lincomb ?l (a ` ?I) \\<and>\n  ?h \\<in> ?I \\<and>\n  ?l (a ?h) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> ?I \\<longrightarrow>\n      h' < ?h \\<longrightarrow> (0::'a) \\<le> ?l (a h')) \\<and>\n  ?c \\<in> carrier_vec n \\<and>\n  local.span (a ` (?I - {?h})) =\n  {x \\<in> carrier_vec n. ?c \\<bullet> x = (0::'a)} \\<and>\n  ?c \\<bullet> b < (0::'a) \\<and>\n  ?k < m \\<and>\n  ?c \\<bullet> a ?k < (0::'a) \\<and>\n  (\\<forall>k'<?k. (0::'a) \\<le> ?c \\<bullet> a k') \\<and>\n  ?I' = insert ?k (?I - {?h})\n  p < len\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n\ngoal (1 subgoal):\n 1. b = lincomb (ls p) (a ` Is p)", "by blast"], ["proof (state)\nthis:\n  b = lincomb (ls p) (a ` Is p)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have carrDp: \"(a ` (Is p)) \\<subseteq> carrier_vec n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ` Is p \\<subseteq> carrier_vec n", "using Is_valid valid_I_def a p"], ["proof (prove)\nusing this:\n  ?i5 \\<le> len \\<Longrightarrow> Is ?i5 \\<in> valid_I\n  valid_I =\n  {I. card I = n \\<and> lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}\n  a ` {0..<m} \\<subseteq> carrier_vec n\n  p < len\n\ngoal (1 subgoal):\n 1. a ` Is p \\<subseteq> carrier_vec n", "by (smt image_subset_iff less_imp_le_nat mem_Collect_eq subsetD)"], ["proof (state)\nthis:\n  a ` Is p \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have carrcq: \"cs q \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cs q \\<in> carrier_vec n", "using cond cond_def q_len"], ["proof (prove)\nusing this:\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n  cond ?I ?I' ?l ?c ?h ?k \\<equiv>\n  b = lincomb ?l (a ` ?I) \\<and>\n  ?h \\<in> ?I \\<and>\n  ?l (a ?h) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> ?I \\<longrightarrow>\n      h' < ?h \\<longrightarrow> (0::'a) \\<le> ?l (a h')) \\<and>\n  ?c \\<in> carrier_vec n \\<and>\n  local.span (a ` (?I - {?h})) =\n  {x \\<in> carrier_vec n. ?c \\<bullet> x = (0::'a)} \\<and>\n  ?c \\<bullet> b < (0::'a) \\<and>\n  ?k < m \\<and>\n  ?c \\<bullet> a ?k < (0::'a) \\<and>\n  (\\<forall>k'<?k. (0::'a) \\<le> ?c \\<bullet> a k') \\<and>\n  ?I' = insert ?k (?I - {?h})\n  q < len\n\ngoal (1 subgoal):\n 1. cs q \\<in> carrier_vec n", "by simp"], ["proof (state)\nthis:\n  cs q \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have ineq1: \"(cs q) \\<bullet> b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cs q \\<bullet> b < (0::'a)", "using cond_def q_len cond"], ["proof (prove)\nusing this:\n  cond ?I ?I' ?l ?c ?h ?k \\<equiv>\n  b = lincomb ?l (a ` ?I) \\<and>\n  ?h \\<in> ?I \\<and>\n  ?l (a ?h) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> ?I \\<longrightarrow>\n      h' < ?h \\<longrightarrow> (0::'a) \\<le> ?l (a h')) \\<and>\n  ?c \\<in> carrier_vec n \\<and>\n  local.span (a ` (?I - {?h})) =\n  {x \\<in> carrier_vec n. ?c \\<bullet> x = (0::'a)} \\<and>\n  ?c \\<bullet> b < (0::'a) \\<and>\n  ?k < m \\<and>\n  ?c \\<bullet> a ?k < (0::'a) \\<and>\n  (\\<forall>k'<?k. (0::'a) \\<le> ?c \\<bullet> a k') \\<and>\n  ?I' = insert ?k (?I - {?h})\n  q < len\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n\ngoal (1 subgoal):\n 1. cs q \\<bullet> b < (0::'a)", "by blast"], ["proof (state)\nthis:\n  cs q \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "let ?Isp_lt_r = \"{x \\<in> Is p . x < r}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "let ?Isp_gt_r = \"{x \\<in> Is p . x > r}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have Is_disj: \"?Isp_lt_r \\<inter> ?Isp_gt_r = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> Is p. x < r} \\<inter> {x \\<in> Is p. r < x} = {}", "using Is_valid"], ["proof (prove)\nusing this:\n  ?i5 \\<le> len \\<Longrightarrow> Is ?i5 \\<in> valid_I\n\ngoal (1 subgoal):\n 1. {x \\<in> Is p. x < r} \\<inter> {x \\<in> Is p. r < x} = {}", "by auto"], ["proof (state)\nthis:\n  {x \\<in> Is p. x < r} \\<inter> {x \\<in> Is p. r < x} = {}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"?Isp_lt_r \\<subseteq> Is p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> Is p. x < r} \\<subseteq> Is p", "by simp"], ["proof (state)\nthis:\n  {x \\<in> Is p. x < r} \\<subseteq> Is p\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence Isp_lt_0m: \"?Isp_lt_r \\<subseteq> {0..<m}\""], ["proof (prove)\nusing this:\n  {x \\<in> Is p. x < r} \\<subseteq> Is p\n\ngoal (1 subgoal):\n 1. {x \\<in> Is p. x < r} \\<subseteq> {0..<m}", "using valid_I_def Is_valid p less_imp_le_nat"], ["proof (prove)\nusing this:\n  {x \\<in> Is p. x < r} \\<subseteq> Is p\n  valid_I =\n  {I. card I = n \\<and> lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}\n  ?i5 \\<le> len \\<Longrightarrow> Is ?i5 \\<in> valid_I\n  p < len\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. {x \\<in> Is p. x < r} \\<subseteq> {0..<m}", "by blast"], ["proof (state)\nthis:\n  {x \\<in> Is p. x < r} \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"?Isp_gt_r \\<subseteq> Is p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> Is p. r < x} \\<subseteq> Is p", "by simp"], ["proof (state)\nthis:\n  {x \\<in> Is p. r < x} \\<subseteq> Is p\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence Isp_gt_0m: \"?Isp_gt_r \\<subseteq> {0..<m}\""], ["proof (prove)\nusing this:\n  {x \\<in> Is p. r < x} \\<subseteq> Is p\n\ngoal (1 subgoal):\n 1. {x \\<in> Is p. r < x} \\<subseteq> {0..<m}", "using valid_I_def Is_valid p less_imp_le_nat"], ["proof (prove)\nusing this:\n  {x \\<in> Is p. r < x} \\<subseteq> Is p\n  valid_I =\n  {I. card I = n \\<and> lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}\n  ?i5 \\<le> len \\<Longrightarrow> Is ?i5 \\<in> valid_I\n  p < len\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. {x \\<in> Is p. r < x} \\<subseteq> {0..<m}", "by blast"], ["proof (state)\nthis:\n  {x \\<in> Is p. r < x} \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "let ?Dp_lt = \"a ` ?Isp_lt_r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "let ?Dp_ge = \"a ` ?Isp_gt_r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "fix A B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume Asub: \"A \\<subseteq> {0..<m} \\<union> {0..<Suc r}\""], ["proof (state)\nthis:\n  A \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume Bsub: \"B \\<subseteq> {0..<m} \\<union> {0..<Suc r}\""], ["proof (state)\nthis:\n  B \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "assume ABinters: \"A \\<inter> B = {}\""], ["proof (state)\nthis:\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"r \\<in> Is p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> Is p", "using rp p cond"], ["proof (prove)\nusing this:\n  r = hs p\n  p < len\n  ?i3 < len \\<Longrightarrow>\n  cond (Is ?i3) (Is (Suc ?i3)) (ls ?i3) (cs ?i3) (hs ?i3) (ks ?i3)\n\ngoal (1 subgoal):\n 1. r \\<in> Is p", "unfolding cond_def"], ["proof (prove)\nusing this:\n  r = hs p\n  p < len\n  ?i3 < len \\<Longrightarrow>\n  b = lincomb (ls ?i3) (a ` Is ?i3) \\<and>\n  hs ?i3 \\<in> Is ?i3 \\<and>\n  ls ?i3 (a (hs ?i3)) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is ?i3 \\<longrightarrow>\n      h' < hs ?i3 \\<longrightarrow> (0::'a) \\<le> ls ?i3 (a h')) \\<and>\n  cs ?i3 \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is ?i3 - {hs ?i3})) =\n  {x \\<in> carrier_vec n. cs ?i3 \\<bullet> x = (0::'a)} \\<and>\n  cs ?i3 \\<bullet> b < (0::'a) \\<and>\n  ks ?i3 < m \\<and>\n  cs ?i3 \\<bullet> a (ks ?i3) < (0::'a) \\<and>\n  (\\<forall>k'<ks ?i3. (0::'a) \\<le> cs ?i3 \\<bullet> a k') \\<and>\n  Is (Suc ?i3) = insert (ks ?i3) (Is ?i3 - {hs ?i3})\n\ngoal (1 subgoal):\n 1. r \\<in> Is p", "by simp"], ["proof (state)\nthis:\n  r \\<in> Is p\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence r_lt_m: \"r < m\""], ["proof (prove)\nusing this:\n  r \\<in> Is p\n\ngoal (1 subgoal):\n 1. r < m", "using p Is_valid[of p]"], ["proof (prove)\nusing this:\n  r \\<in> Is p\n  p < len\n  p \\<le> len \\<Longrightarrow> Is p \\<in> valid_I\n\ngoal (1 subgoal):\n 1. r < m", "unfolding valid_I_def"], ["proof (prove)\nusing this:\n  r \\<in> Is p\n  p < len\n  p \\<le> len \\<Longrightarrow>\n  Is p\n  \\<in> {I. card I = n \\<and>\n            lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}\n\ngoal (1 subgoal):\n 1. r < m", "by auto"], ["proof (state)\nthis:\n  r < m\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence 1: \"A \\<subseteq> {0..<m}\""], ["proof (prove)\nusing this:\n  r < m\n\ngoal (1 subgoal):\n 1. A \\<subseteq> {0..<m}", "using Asub"], ["proof (prove)\nusing this:\n  r < m\n  A \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n\ngoal (1 subgoal):\n 1. A \\<subseteq> {0..<m}", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have 2: \"B \\<subseteq> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> {0..<m}", "using r_lt_m Bsub"], ["proof (prove)\nusing this:\n  r < m\n  B \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n\ngoal (1 subgoal):\n 1. B \\<subseteq> {0..<m}", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"a ` A \\<inter> a ` B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ` A \\<inter> a ` B = {}", "using inj_on_image_Int[OF inj_a 1 2] ABinters"], ["proof (prove)\nusing this:\n  a ` (A \\<inter> B) = a ` A \\<inter> a ` B\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. a ` A \\<inter> a ` B = {}", "by auto"], ["proof (state)\nthis:\n  a ` A \\<inter> a ` B = {}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?A5 \\<subseteq> {0..<m} \\<union> {0..<Suc r};\n   ?B5 \\<subseteq> {0..<m} \\<union> {0..<Suc r};\n   ?A5 \\<inter> ?B5 = {}\\<rbrakk>\n  \\<Longrightarrow> a ` ?A5 \\<inter> a ` ?B5 = {}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "note inja = this"], ["proof (state)\nthis:\n  \\<lbrakk>?A5 \\<subseteq> {0..<m} \\<union> {0..<Suc r};\n   ?B5 \\<subseteq> {0..<m} \\<union> {0..<Suc r};\n   ?A5 \\<inter> ?B5 = {}\\<rbrakk>\n  \\<Longrightarrow> a ` ?A5 \\<inter> a ` ?B5 = {}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"(Is p \\<inter> {0..<r}) \\<inter> (Is p \\<inter> {r}) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Is p \\<inter> {0..<r} \\<inter> (Is p \\<inter> {r}) = {}", "by auto"], ["proof (state)\nthis:\n  Is p \\<inter> {0..<r} \\<inter> (Is p \\<inter> {r}) = {}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "hence \"a ` (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) = a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})\""], ["proof (prove)\nusing this:\n  Is p \\<inter> {0..<r} \\<inter> (Is p \\<inter> {r}) = {}\n\ngoal (1 subgoal):\n 1. a ` (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) =\n    a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})", "using inj_a"], ["proof (prove)\nusing this:\n  Is p \\<inter> {0..<r} \\<inter> (Is p \\<inter> {r}) = {}\n  inj_on a {0..<m}\n\ngoal (1 subgoal):\n 1. a ` (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) =\n    a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})", "by auto"], ["proof (state)\nthis:\n  a ` (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) =\n  a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  a ` (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) =\n  a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}\n    \\<subseteq> {0..<m} \\<union> {0..<Suc r}", "by auto"], ["proof (state)\nthis:\n  Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}\n  \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}\n  \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"Is p \\<inter> {Suc r..<m} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Is p \\<inter> {Suc r..<m} \\<subseteq> {0..<m} \\<union> {0..<Suc r}", "by auto"], ["proof (state)\nthis:\n  Is p \\<inter> {Suc r..<m} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  Is p \\<inter> {Suc r..<m} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"(Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) \\<inter> (Is p \\<inter> {Suc r..<m}) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) \\<inter>\n    (Is p \\<inter> {Suc r..<m}) =\n    {}", "by auto"], ["proof (state)\nthis:\n  (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) \\<inter>\n  (Is p \\<inter> {Suc r..<m}) =\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  a ` (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) =\n  a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})\n  Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}\n  \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n  Is p \\<inter> {Suc r..<m} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n  (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) \\<inter>\n  (Is p \\<inter> {Suc r..<m}) =\n  {}", "have one: \"(a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})) \\<inter> a ` (Is p \\<inter> {Suc r..<m}) = {}\""], ["proof (prove)\nusing this:\n  a ` (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) =\n  a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})\n  Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}\n  \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n  Is p \\<inter> {Suc r..<m} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n  (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) \\<inter>\n  (Is p \\<inter> {Suc r..<m}) =\n  {}\n\ngoal (1 subgoal):\n 1. (a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})) \\<inter>\n    a ` (Is p \\<inter> {Suc r..<m}) =\n    {}", "using inja[of \"Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}\" \"Is p \\<inter> {Suc r..<m}\"]"], ["proof (prove)\nusing this:\n  a ` (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) =\n  a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})\n  Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}\n  \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n  Is p \\<inter> {Suc r..<m} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n  (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) \\<inter>\n  (Is p \\<inter> {Suc r..<m}) =\n  {}\n  \\<lbrakk>Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}\n           \\<subseteq> {0..<m} \\<union> {0..<Suc r};\n   Is p \\<inter> {Suc r..<m} \\<subseteq> {0..<m} \\<union> {0..<Suc r};\n   (Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r}) \\<inter>\n   (Is p \\<inter> {Suc r..<m}) =\n   {}\\<rbrakk>\n  \\<Longrightarrow> a `\n                    (Is p \\<inter> {0..<r} \\<union>\n                     Is p \\<inter> {r}) \\<inter>\n                    a ` (Is p \\<inter> {Suc r..<m}) =\n                    {}\n\ngoal (1 subgoal):\n 1. (a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})) \\<inter>\n    a ` (Is p \\<inter> {Suc r..<m}) =\n    {}", "by auto"], ["proof (state)\nthis:\n  (a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r})) \\<inter>\n  a ` (Is p \\<inter> {Suc r..<m}) =\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have split: \"Is p = Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r} \\<union> Is p \\<inter> {Suc r ..< m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Is p =\n    Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r} \\<union>\n    Is p \\<inter> {Suc r..<m}", "using rp p Is_valid[of p]"], ["proof (prove)\nusing this:\n  r = hs p\n  p < len\n  p \\<le> len \\<Longrightarrow> Is p \\<in> valid_I\n\ngoal (1 subgoal):\n 1. Is p =\n    Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r} \\<union>\n    Is p \\<inter> {Suc r..<m}", "unfolding valid_I_def"], ["proof (prove)\nusing this:\n  r = hs p\n  p < len\n  p \\<le> len \\<Longrightarrow>\n  Is p\n  \\<in> {I. card I = n \\<and>\n            lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}\n\ngoal (1 subgoal):\n 1. Is p =\n    Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r} \\<union>\n    Is p \\<inter> {Suc r..<m}", "by auto"], ["proof (state)\nthis:\n  Is p =\n  Is p \\<inter> {0..<r} \\<union> Is p \\<inter> {r} \\<union>\n  Is p \\<inter> {Suc r..<m}\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have gtr: \"(\\<Sum>w \\<in> (a ` (Is p \\<inter> {Suc r ..< m})). ((ls p) w) * (cs q \\<bullet> w)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (0::'a)", "proof (rule sum.neutral, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "assume w1: \"w \\<in> Is p\" and w2: \"w\\<in>{Suc r..<m}\""], ["proof (state)\nthis:\n  w \\<in> Is p\n  w \\<in> {Suc r..<m}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "have w_in_q:  \"w \\<in> Is q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> Is q", "using bla[OF w2] w1"], ["proof (prove)\nusing this:\n  w \\<in> Is p \\<Longrightarrow> w \\<in> Is q\n  w \\<in> Is p\n\ngoal (1 subgoal):\n 1. w \\<in> Is q", "by blast"], ["proof (state)\nthis:\n  w \\<in> Is q\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "moreover"], ["proof (state)\nthis:\n  w \\<in> Is q\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "have \"hs q \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hs q \\<le> r", "using rR rLarge"], ["proof (prove)\nusing this:\n  r \\<in> {hs i |i. i < len}\n  ?i3 < len \\<Longrightarrow> hs ?i3 \\<le> r\n\ngoal (1 subgoal):\n 1. hs q \\<le> r", "using q_len"], ["proof (prove)\nusing this:\n  r \\<in> {hs i |i. i < len}\n  ?i3 < len \\<Longrightarrow> hs ?i3 \\<le> r\n  q < len\n\ngoal (1 subgoal):\n 1. hs q \\<le> r", "by blast"], ["proof (state)\nthis:\n  hs q \\<le> r\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  w \\<in> Is q\n  hs q \\<le> r", "have \"w \\<noteq> hs q\""], ["proof (prove)\nusing this:\n  w \\<in> Is q\n  hs q \\<le> r\n\ngoal (1 subgoal):\n 1. w \\<noteq> hs q", "using w2"], ["proof (prove)\nusing this:\n  w \\<in> Is q\n  hs q \\<le> r\n  w \\<in> {Suc r..<m}\n\ngoal (1 subgoal):\n 1. w \\<noteq> hs q", "by simp"], ["proof (state)\nthis:\n  w \\<noteq> hs q\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "hence \"w \\<in> Is q -{hs q}\""], ["proof (prove)\nusing this:\n  w \\<noteq> hs q\n\ngoal (1 subgoal):\n 1. w \\<in> Is q - {hs q}", "using w1 w_in_q"], ["proof (prove)\nusing this:\n  w \\<noteq> hs q\n  w \\<in> Is p\n  w \\<in> Is q\n\ngoal (1 subgoal):\n 1. w \\<in> Is q - {hs q}", "by auto"], ["proof (state)\nthis:\n  w \\<in> Is q - {hs q}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "moreover"], ["proof (state)\nthis:\n  w \\<in> Is q - {hs q}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "have \"Is q - {hs q} \\<subseteq> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Is q - {hs q} \\<subseteq> {0..<m}", "using q_len Is_valid[of q]"], ["proof (prove)\nusing this:\n  q < len\n  q \\<le> len \\<Longrightarrow> Is q \\<in> valid_I\n\ngoal (1 subgoal):\n 1. Is q - {hs q} \\<subseteq> {0..<m}", "unfolding valid_I_def"], ["proof (prove)\nusing this:\n  q < len\n  q \\<le> len \\<Longrightarrow>\n  Is q\n  \\<in> {I. card I = n \\<and>\n            lin_indpt (a ` I) \\<and> I \\<subseteq> {0..<m}}\n\ngoal (1 subgoal):\n 1. Is q - {hs q} \\<subseteq> {0..<m}", "by auto"], ["proof (state)\nthis:\n  Is q - {hs q} \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  w \\<in> Is q - {hs q}\n  Is q - {hs q} \\<subseteq> {0..<m}", "have \"a w \\<in> span ( a ` (Is q - {hs q}))\""], ["proof (prove)\nusing this:\n  w \\<in> Is q - {hs q}\n  Is q - {hs q} \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. a w \\<in> local.span (a ` (Is q - {hs q}))", "using a"], ["proof (prove)\nusing this:\n  w \\<in> Is q - {hs q}\n  Is q - {hs q} \\<subseteq> {0..<m}\n  a ` {0..<m} \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. a w \\<in> local.span (a ` (Is q - {hs q}))", "by (intro span_mem, auto)"], ["proof (state)\nthis:\n  a w \\<in> local.span (a ` (Is q - {hs q}))\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "moreover"], ["proof (state)\nthis:\n  a w \\<in> local.span (a ` (Is q - {hs q}))\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "have \"cs q \\<in> carrier_vec n \\<and> span (a ` (Is q - {hs q})) =\n      { x. x \\<in> carrier_vec n \\<and> cs q \\<bullet> x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cs q \\<in> carrier_vec n \\<and>\n    local.span (a ` (Is q - {hs q})) =\n    {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)}", "using cond[of q] q_len"], ["proof (prove)\nusing this:\n  q < len \\<Longrightarrow>\n  cond (Is q) (Is (Suc q)) (ls q) (cs q) (hs q) (ks q)\n  q < len\n\ngoal (1 subgoal):\n 1. cs q \\<in> carrier_vec n \\<and>\n    local.span (a ` (Is q - {hs q})) =\n    {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)}", "unfolding cond_def"], ["proof (prove)\nusing this:\n  q < len \\<Longrightarrow>\n  b = lincomb (ls q) (a ` Is q) \\<and>\n  hs q \\<in> Is q \\<and>\n  ls q (a (hs q)) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is q \\<longrightarrow>\n      h' < hs q \\<longrightarrow> (0::'a) \\<le> ls q (a h')) \\<and>\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)} \\<and>\n  cs q \\<bullet> b < (0::'a) \\<and>\n  ks q < m \\<and>\n  cs q \\<bullet> a (ks q) < (0::'a) \\<and>\n  (\\<forall>k'<ks q. (0::'a) \\<le> cs q \\<bullet> a k') \\<and>\n  Is (Suc q) = insert (ks q) (Is q - {hs q})\n  q < len\n\ngoal (1 subgoal):\n 1. cs q \\<in> carrier_vec n \\<and>\n    local.span (a ` (Is q - {hs q})) =\n    {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)}", "by auto"], ["proof (state)\nthis:\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  a w \\<in> local.span (a ` (Is q - {hs q}))\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)}", "have \"(cs q) \\<bullet> (a w) = 0\""], ["proof (prove)\nusing this:\n  a w \\<in> local.span (a ` (Is q - {hs q}))\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)}\n\ngoal (1 subgoal):\n 1. cs q \\<bullet> a w = (0::'a)", "using a w2"], ["proof (prove)\nusing this:\n  a w \\<in> local.span (a ` (Is q - {hs q}))\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)}\n  a ` {0..<m} \\<subseteq> carrier_vec n\n  w \\<in> {Suc r..<m}\n\ngoal (1 subgoal):\n 1. cs q \\<bullet> a w = (0::'a)", "by simp"], ["proof (state)\nthis:\n  cs q \\<bullet> a w = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> Is p; xa \\<in> {Suc r..<m}\\<rbrakk>\n       \\<Longrightarrow> ls p (a xa) * (cs q \\<bullet> a xa) = (0::'a)", "then"], ["proof (chain)\npicking this:\n  cs q \\<bullet> a w = (0::'a)", "show \"ls p (a w) * (cs q \\<bullet> a w) = 0\""], ["proof (prove)\nusing this:\n  cs q \\<bullet> a w = (0::'a)\n\ngoal (1 subgoal):\n 1. ls p (a w) * (cs q \\<bullet> a w) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  ls p (a w) * (cs q \\<bullet> a w) = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n     ls p w * (cs q \\<bullet> w)) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "note pp = cond[OF p, unfolded cond_def rp[symmetric]]"], ["proof (state)\nthis:\n  b = lincomb (ls p) (a ` Is p) \\<and>\n  r \\<in> Is p \\<and>\n  ls p (a r) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is p \\<longrightarrow>\n      h' < r \\<longrightarrow> (0::'a) \\<le> ls p (a h')) \\<and>\n  cs p \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is p - {r})) =\n  {x \\<in> carrier_vec n. cs p \\<bullet> x = (0::'a)} \\<and>\n  cs p \\<bullet> b < (0::'a) \\<and>\n  ks p < m \\<and>\n  cs p \\<bullet> a (ks p) < (0::'a) \\<and>\n  (\\<forall>k'<ks p. (0::'a) \\<le> cs p \\<bullet> a k') \\<and>\n  Is (Suc p) = insert (ks p) (Is p - {r})\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "note qq = cond[OF q_len, unfolded cond_def q1]"], ["proof (state)\nthis:\n  b = lincomb (ls q) (a ` Is q) \\<and>\n  hs q \\<in> Is q \\<and>\n  ls q (a (hs q)) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is q \\<longrightarrow>\n      h' < hs q \\<longrightarrow> (0::'a) \\<le> ls q (a h')) \\<and>\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)} \\<and>\n  cs q \\<bullet> b < (0::'a) \\<and>\n  r < m \\<and>\n  cs q \\<bullet> a r < (0::'a) \\<and>\n  (\\<forall>k'<r. (0::'a) \\<le> cs q \\<bullet> a k') \\<and>\n  Is (Suc q) = insert r (Is q - {hs q})\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"(cs q) \\<bullet> b = (cs q) \\<bullet> lincomb (ls p) (a ` (Is p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cs q \\<bullet> b = cs q \\<bullet> lincomb (ls p) (a ` Is p)", "using blin"], ["proof (prove)\nusing this:\n  b = lincomb (ls p) (a ` Is p)\n\ngoal (1 subgoal):\n 1. cs q \\<bullet> b = cs q \\<bullet> lincomb (ls p) (a ` Is p)", "by auto"], ["proof (state)\nthis:\n  cs q \\<bullet> b = cs q \\<bullet> lincomb (ls p) (a ` Is p)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  cs q \\<bullet> b = cs q \\<bullet> lincomb (ls p) (a ` Is p)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"\\<dots> = (\\<Sum>w \\<in> (a ` (Is p)). ((ls p) w) * (cs q \\<bullet> w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cs q \\<bullet> lincomb (ls p) (a ` Is p) =\n    (\\<Sum>w\\<in>a ` Is p. ls p w * (cs q \\<bullet> w))", "by (subst lincomb_scalar_prod_right[OF carrDp carrcq], simp)"], ["proof (state)\nthis:\n  cs q \\<bullet> lincomb (ls p) (a ` Is p) =\n  (\\<Sum>w\\<in>a ` Is p. ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  cs q \\<bullet> lincomb (ls p) (a ` Is p) =\n  (\\<Sum>w\\<in>a ` Is p. ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"\\<dots> = (\\<Sum>w \\<in> (a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r}) \\<union> a ` (Is p \\<inter> {Suc r..<m})).\n     ((ls p) w) * (cs q \\<bullet> w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` Is p. ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}) \\<union>\n                 a ` (Is p \\<inter> {r}) \\<union>\n                 a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w))", "by (subst (1) split, rule sum.cong, auto)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` Is p. ls p w * (cs q \\<bullet> w)) =\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}) \\<union>\n               a ` (Is p \\<inter> {r}) \\<union>\n               a ` (Is p \\<inter> {Suc r..<m}).\n     ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` Is p. ls p w * (cs q \\<bullet> w)) =\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}) \\<union>\n               a ` (Is p \\<inter> {r}) \\<union>\n               a ` (Is p \\<inter> {Suc r..<m}).\n     ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"\\<dots> = (\\<Sum>w \\<in> (a ` (Is p \\<inter> {0..<r})). ((ls p) w) * (cs q \\<bullet> w))\n       + (\\<Sum>w \\<in> (a ` (Is p \\<inter> {r})). ((ls p) w) * (cs q \\<bullet> w))\n      + (\\<Sum>w \\<in> (a ` (Is p \\<inter> {Suc r ..< m})). ((ls p) w) * (cs q \\<bullet> w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}) \\<union>\n                 a ` (Is p \\<inter> {r}) \\<union>\n                 a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w))", "apply (subst sum.union_disjoint[OF _ _ one])"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite (a ` (Is p \\<inter> {0..<r}) \\<union> a ` (Is p \\<inter> {r}))\n 2. finite (a ` (Is p \\<inter> {Suc r..<m}))\n 3. (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}) \\<union>\n                 a ` (Is p \\<inter> {r}).\n       ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w))", "apply (force+)[2]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}) \\<union>\n                 a ` (Is p \\<inter> {r}).\n       ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w))", "apply (subst sum.union_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. finite (a ` (Is p \\<inter> {0..<r}))\n 2. finite (a ` (Is p \\<inter> {r}))\n 3. a ` (Is p \\<inter> {0..<r}) \\<inter> a ` (Is p \\<inter> {r}) = {}\n 4. (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w))", "apply (force+)[2]"], ["proof (prove)\ngoal (2 subgoals):\n 1. a ` (Is p \\<inter> {0..<r}) \\<inter> a ` (Is p \\<inter> {r}) = {}\n 2. (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w))", "apply (rule inja)"], ["proof (prove)\ngoal (4 subgoals):\n 1. Is p \\<inter> {0..<r} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n 2. Is p \\<inter> {r} \\<subseteq> {0..<m} \\<union> {0..<Suc r}\n 3. Is p \\<inter> {0..<r} \\<inter> (Is p \\<inter> {r}) = {}\n 4. (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}) \\<union>\n               a ` (Is p \\<inter> {r}) \\<union>\n               a ` (Is p \\<inter> {Suc r..<m}).\n     ls p w * (cs q \\<bullet> w)) =\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}). ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}) \\<union>\n               a ` (Is p \\<inter> {r}) \\<union>\n               a ` (Is p \\<inter> {Suc r..<m}).\n     ls p w * (cs q \\<bullet> w)) =\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}). ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"\\<dots> = (\\<Sum>w \\<in> (a ` (Is p \\<inter> {0..<r})). ((ls p) w) * (cs q \\<bullet> w))\n       + (\\<Sum>w \\<in> (a ` (Is p \\<inter> {r})). ((ls p) w) * (cs q \\<bullet> w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "using sum.neutral gtr"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>?A. ?g x = (0::?'a) \\<Longrightarrow> sum ?g ?A = (0::?'a)\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n     ls p w * (cs q \\<bullet> w)) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n       ls p w * (cs q \\<bullet> w)) =\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n     ls p w * (cs q \\<bullet> w)) =\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {Suc r..<m}).\n     ls p w * (cs q \\<bullet> w)) =\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"\\<dots> > 0 + 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) + (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}).\n         ls p w * (cs q \\<bullet> w)) +\n      (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "proof (intro add_le_less_mono sum_nonneg mult_nonneg_nonneg)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> ls p x\n 2. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> cs q \\<bullet> x\n 3. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "{"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> ls p x\n 2. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> cs q \\<bullet> x\n 3. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> ls p x\n 2. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> cs q \\<bullet> x\n 3. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "assume x: \"x \\<in> a ` (Is p \\<inter> {0..<r})\""], ["proof (state)\nthis:\n  x \\<in> a ` (Is p \\<inter> {0..<r})\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> ls p x\n 2. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> cs q \\<bullet> x\n 3. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "show \"0 \\<le> ls p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> ls p x", "using pp x"], ["proof (prove)\nusing this:\n  b = lincomb (ls p) (a ` Is p) \\<and>\n  r \\<in> Is p \\<and>\n  ls p (a r) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is p \\<longrightarrow>\n      h' < r \\<longrightarrow> (0::'a) \\<le> ls p (a h')) \\<and>\n  cs p \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is p - {r})) =\n  {x \\<in> carrier_vec n. cs p \\<bullet> x = (0::'a)} \\<and>\n  cs p \\<bullet> b < (0::'a) \\<and>\n  ks p < m \\<and>\n  cs p \\<bullet> a (ks p) < (0::'a) \\<and>\n  (\\<forall>k'<ks p. (0::'a) \\<le> cs p \\<bullet> a k') \\<and>\n  Is (Suc p) = insert (ks p) (Is p - {r})\n  x \\<in> a ` (Is p \\<inter> {0..<r})\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> ls p x", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> ls p x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n       (0::'a) \\<le> cs q \\<bullet> x\n 2. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "show \"0 \\<le> cs q \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> cs q \\<bullet> x", "using qq x"], ["proof (prove)\nusing this:\n  b = lincomb (ls q) (a ` Is q) \\<and>\n  hs q \\<in> Is q \\<and>\n  ls q (a (hs q)) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is q \\<longrightarrow>\n      h' < hs q \\<longrightarrow> (0::'a) \\<le> ls q (a h')) \\<and>\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)} \\<and>\n  cs q \\<bullet> b < (0::'a) \\<and>\n  r < m \\<and>\n  cs q \\<bullet> a r < (0::'a) \\<and>\n  (\\<forall>k'<r. (0::'a) \\<le> cs q \\<bullet> a k') \\<and>\n  Is (Suc q) = insert r (Is q - {hs q})\n  x \\<in> a ` (Is p \\<inter> {0..<r})\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> cs q \\<bullet> x", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> cs q \\<bullet> x\n\ngoal (1 subgoal):\n 1. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "}"], ["proof (state)\nthis:\n  ?x5 \\<in> a ` (Is p \\<inter> {0..<r}) \\<Longrightarrow>\n  (0::'a) \\<le> cs q \\<bullet> ?x5\n\ngoal (1 subgoal):\n 1. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "have \"r \\<in> Is p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> Is p", "using pp"], ["proof (prove)\nusing this:\n  b = lincomb (ls p) (a ` Is p) \\<and>\n  r \\<in> Is p \\<and>\n  ls p (a r) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is p \\<longrightarrow>\n      h' < r \\<longrightarrow> (0::'a) \\<le> ls p (a h')) \\<and>\n  cs p \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is p - {r})) =\n  {x \\<in> carrier_vec n. cs p \\<bullet> x = (0::'a)} \\<and>\n  cs p \\<bullet> b < (0::'a) \\<and>\n  ks p < m \\<and>\n  cs p \\<bullet> a (ks p) < (0::'a) \\<and>\n  (\\<forall>k'<ks p. (0::'a) \\<le> cs p \\<bullet> a k') \\<and>\n  Is (Suc p) = insert (ks p) (Is p - {r})\n\ngoal (1 subgoal):\n 1. r \\<in> Is p", "by blast"], ["proof (state)\nthis:\n  r \\<in> Is p\n\ngoal (1 subgoal):\n 1. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "hence \"a ` (Is p \\<inter> {r}) = {a r}\""], ["proof (prove)\nusing this:\n  r \\<in> Is p\n\ngoal (1 subgoal):\n 1. a ` (Is p \\<inter> {r}) = {a r}", "by auto"], ["proof (state)\nthis:\n  a ` (Is p \\<inter> {r}) = {a r}\n\ngoal (1 subgoal):\n 1. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "hence id: \"(\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) = ls p (a r) * (cs q \\<bullet> a r)\""], ["proof (prove)\nusing this:\n  a ` (Is p \\<inter> {r}) = {a r}\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) =\n    ls p (a r) * (cs q \\<bullet> a r)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w)) =\n  ls p (a r) * (cs q \\<bullet> a r)\n\ngoal (1 subgoal):\n 1. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "show \"0 < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < ls p (a r) * (cs q \\<bullet> a r)", "proof (rule mult_neg_neg)"], ["proof (state)\ngoal (2 subgoals):\n 1. ls p (a r) < (0::'a)\n 2. cs q \\<bullet> a r < (0::'a)", "show \"ls p (a r) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ls p (a r) < (0::'a)", "using pp"], ["proof (prove)\nusing this:\n  b = lincomb (ls p) (a ` Is p) \\<and>\n  r \\<in> Is p \\<and>\n  ls p (a r) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is p \\<longrightarrow>\n      h' < r \\<longrightarrow> (0::'a) \\<le> ls p (a h')) \\<and>\n  cs p \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is p - {r})) =\n  {x \\<in> carrier_vec n. cs p \\<bullet> x = (0::'a)} \\<and>\n  cs p \\<bullet> b < (0::'a) \\<and>\n  ks p < m \\<and>\n  cs p \\<bullet> a (ks p) < (0::'a) \\<and>\n  (\\<forall>k'<ks p. (0::'a) \\<le> cs p \\<bullet> a k') \\<and>\n  Is (Suc p) = insert (ks p) (Is p - {r})\n\ngoal (1 subgoal):\n 1. ls p (a r) < (0::'a)", "by auto"], ["proof (state)\nthis:\n  ls p (a r) < (0::'a)\n\ngoal (1 subgoal):\n 1. cs q \\<bullet> a r < (0::'a)", "show \"cs q \\<bullet> a r < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cs q \\<bullet> a r < (0::'a)", "using qq"], ["proof (prove)\nusing this:\n  b = lincomb (ls q) (a ` Is q) \\<and>\n  hs q \\<in> Is q \\<and>\n  ls q (a (hs q)) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is q \\<longrightarrow>\n      h' < hs q \\<longrightarrow> (0::'a) \\<le> ls q (a h')) \\<and>\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)} \\<and>\n  cs q \\<bullet> b < (0::'a) \\<and>\n  r < m \\<and>\n  cs q \\<bullet> a r < (0::'a) \\<and>\n  (\\<forall>k'<r. (0::'a) \\<le> cs q \\<bullet> a k') \\<and>\n  Is (Suc q) = insert r (Is q - {hs q})\n\ngoal (1 subgoal):\n 1. cs q \\<bullet> a r < (0::'a)", "by auto"], ["proof (state)\nthis:\n  cs q \\<bullet> a r < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (0::'a)\n  < (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (0::'a) + (0::'a)\n  < (\\<Sum>w\\<in>a ` (Is p \\<inter> {0..<r}). ls p w * (cs q \\<bullet> w)) +\n    (\\<Sum>w\\<in>a ` (Is p \\<inter> {r}). ls p w * (cs q \\<bullet> w))\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  (0::'a) + (0::'a) < cs q \\<bullet> b", "have \"cs q \\<bullet> b > 0\""], ["proof (prove)\nusing this:\n  (0::'a) + (0::'a) < cs q \\<bullet> b\n\ngoal (1 subgoal):\n 1. (0::'a) < cs q \\<bullet> b", "by simp"], ["proof (state)\nthis:\n  (0::'a) < cs q \\<bullet> b\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (0::'a) < cs q \\<bullet> b\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "have \"cs q \\<bullet> b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cs q \\<bullet> b < (0::'a)", "using qq"], ["proof (prove)\nusing this:\n  b = lincomb (ls q) (a ` Is q) \\<and>\n  hs q \\<in> Is q \\<and>\n  ls q (a (hs q)) < (0::'a) \\<and>\n  (\\<forall>h'.\n      h' \\<in> Is q \\<longrightarrow>\n      h' < hs q \\<longrightarrow> (0::'a) \\<le> ls q (a h')) \\<and>\n  cs q \\<in> carrier_vec n \\<and>\n  local.span (a ` (Is q - {hs q})) =\n  {x \\<in> carrier_vec n. cs q \\<bullet> x = (0::'a)} \\<and>\n  cs q \\<bullet> b < (0::'a) \\<and>\n  r < m \\<and>\n  cs q \\<bullet> a r < (0::'a) \\<and>\n  (\\<forall>k'<r. (0::'a) \\<le> cs q \\<bullet> a k') \\<and>\n  Is (Suc q) = insert r (Is q - {hs q})\n\ngoal (1 subgoal):\n 1. cs q \\<bullet> b < (0::'a)", "by blast"], ["proof (state)\nthis:\n  cs q \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> acyclic step_rel \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (0::'a) < cs q \\<bullet> b\n  cs q \\<bullet> b < (0::'a)", "show False"], ["proof (prove)\nusing this:\n  (0::'a) < cs q \\<bullet> b\n  cs q \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fundamental_theorem_neg_C_or_B_in_context:\n  assumes W: \"W = a ` {0 ..< m}\"\n  shows \"(\\<exists> U. U \\<subseteq> W \\<and> card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U. U \\<subseteq> W \\<and>\n           c \\<in> {normal_vector U, - normal_vector U} \\<and>\n           Suc (card U) = n \\<and> lin_indpt U \\<and> (\\<forall>w \\<in> W. 0 \\<le> c \\<bullet> w) \\<and> c \\<bullet> b < 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "using acyclic_imp_goal[unfolded goal_def, OF acyclic_step_rel]"], ["proof (prove)\nusing this:\n  (\\<exists>I\\<subseteq>{0..<m}.\n      card (a ` I) = n \\<and>\n      lin_indpt (a ` I) \\<and> b \\<in> finite_cone (a ` I)) \\<or>\n  (\\<exists>c I.\n      I \\<subseteq> {0..<m} \\<and>\n      c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n      Suc (card (a ` I)) = n \\<and>\n      lin_indpt (a ` I) \\<and>\n      (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n      c \\<bullet> b < (0::'a))\n\ngoal (1 subgoal):\n 1. (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>I\\<subseteq>{0..<m}.\n       card (a ` I) = n \\<and>\n       lin_indpt (a ` I) \\<and>\n       b \\<in> finite_cone (a ` I) \\<Longrightarrow>\n    (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))\n 2. \\<exists>c I.\n       I \\<subseteq> {0..<m} \\<and>\n       c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n       Suc (card (a ` I)) = n \\<and>\n       lin_indpt (a ` I) \\<and>\n       (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "assume \"\\<exists>I. I\\<subseteq>{0..<m} \\<and> card (a ` I) = n \\<and> lin_indpt (a ` I) \\<and> b \\<in> finite_cone (a ` I)\""], ["proof (state)\nthis:\n  \\<exists>I\\<subseteq>{0..<m}.\n     card (a ` I) = n \\<and>\n     lin_indpt (a ` I) \\<and> b \\<in> finite_cone (a ` I)\n\ngoal (2 subgoals):\n 1. \\<exists>I\\<subseteq>{0..<m}.\n       card (a ` I) = n \\<and>\n       lin_indpt (a ` I) \\<and>\n       b \\<in> finite_cone (a ` I) \\<Longrightarrow>\n    (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))\n 2. \\<exists>c I.\n       I \\<subseteq> {0..<m} \\<and>\n       c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n       Suc (card (a ` I)) = n \\<and>\n       lin_indpt (a ` I) \\<and>\n       (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>I\\<subseteq>{0..<m}.\n     card (a ` I) = n \\<and>\n     lin_indpt (a ` I) \\<and> b \\<in> finite_cone (a ` I)\n\ngoal (1 subgoal):\n 1. (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "unfolding W"], ["proof (prove)\nusing this:\n  \\<exists>I\\<subseteq>{0..<m}.\n     card (a ` I) = n \\<and>\n     lin_indpt (a ` I) \\<and> b \\<in> finite_cone (a ` I)\n\ngoal (1 subgoal):\n 1. (\\<exists>U\\<subseteq>a ` {0..<m}.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> a ` {0..<m} \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>a ` {0..<m}. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "by (intro disjI1, blast)"], ["proof (state)\nthis:\n  (\\<exists>U\\<subseteq>W.\n      card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n  (\\<exists>c U.\n      U \\<subseteq> W \\<and>\n      c \\<in> {normal_vector U, - normal_vector U} \\<and>\n      Suc (card U) = n \\<and>\n      lin_indpt U \\<and>\n      (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n      c \\<bullet> b < (0::'a))\n\ngoal (1 subgoal):\n 1. \\<exists>c I.\n       I \\<subseteq> {0..<m} \\<and>\n       c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n       Suc (card (a ` I)) = n \\<and>\n       lin_indpt (a ` I) \\<and>\n       (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c I.\n       I \\<subseteq> {0..<m} \\<and>\n       c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n       Suc (card (a ` I)) = n \\<and>\n       lin_indpt (a ` I) \\<and>\n       (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "assume \"\\<exists>c I. I \\<subseteq> {0..<m} \\<and>\n          c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n          Suc (card (a ` I)) = n \\<and> lin_indpt (a ` I) \\<and> (\\<forall>i<m. 0 \\<le> c \\<bullet> a i) \\<and> c \\<bullet> b < 0\""], ["proof (state)\nthis:\n  \\<exists>c I.\n     I \\<subseteq> {0..<m} \\<and>\n     c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n     Suc (card (a ` I)) = n \\<and>\n     lin_indpt (a ` I) \\<and>\n     (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>c I.\n       I \\<subseteq> {0..<m} \\<and>\n       c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n       Suc (card (a ` I)) = n \\<and>\n       lin_indpt (a ` I) \\<and>\n       (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "then"], ["proof (chain)\npicking this:\n  \\<exists>c I.\n     I \\<subseteq> {0..<m} \\<and>\n     c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n     Suc (card (a ` I)) = n \\<and>\n     lin_indpt (a ` I) \\<and>\n     (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n     c \\<bullet> b < (0::'a)", "obtain c I where \"I \\<subseteq> {0..<m} \\<and>\n          c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n          Suc (card (a ` I)) = n \\<and> lin_indpt (a ` I) \\<and> (\\<forall>i<m. 0 \\<le> c \\<bullet> a i) \\<and> c \\<bullet> b < 0\""], ["proof (prove)\nusing this:\n  \\<exists>c I.\n     I \\<subseteq> {0..<m} \\<and>\n     c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n     Suc (card (a ` I)) = n \\<and>\n     lin_indpt (a ` I) \\<and>\n     (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>I c.\n        I \\<subseteq> {0..<m} \\<and>\n        c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n        Suc (card (a ` I)) = n \\<and>\n        lin_indpt (a ` I) \\<and>\n        (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n        c \\<bullet> b < (0::'a) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> {0..<m} \\<and>\n  c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n  Suc (card (a ` I)) = n \\<and>\n  lin_indpt (a ` I) \\<and>\n  (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n  c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>c I.\n       I \\<subseteq> {0..<m} \\<and>\n       c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n       Suc (card (a ` I)) = n \\<and>\n       lin_indpt (a ` I) \\<and>\n       (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n       c \\<bullet> b < (0::'a) \\<Longrightarrow>\n    (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "thus ?thesis"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<m} \\<and>\n  c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n  Suc (card (a ` I)) = n \\<and>\n  lin_indpt (a ` I) \\<and>\n  (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n  c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<exists>U\\<subseteq>W.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> W \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "unfolding W"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<m} \\<and>\n  c \\<in> {normal_vector (a ` I), - normal_vector (a ` I)} \\<and>\n  Suc (card (a ` I)) = n \\<and>\n  lin_indpt (a ` I) \\<and>\n  (\\<forall>i<m. (0::'a) \\<le> c \\<bullet> a i) \\<and>\n  c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<exists>U\\<subseteq>a ` {0..<m}.\n        card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n    (\\<exists>c U.\n        U \\<subseteq> a ` {0..<m} \\<and>\n        c \\<in> {normal_vector U, - normal_vector U} \\<and>\n        Suc (card U) = n \\<and>\n        lin_indpt U \\<and>\n        (\\<forall>w\\<in>a ` {0..<m}. (0::'a) \\<le> c \\<bullet> w) \\<and>\n        c \\<bullet> b < (0::'a))", "by (intro disjI2 exI[of _ c] exI[of _ \"a ` I\"], auto)"], ["proof (state)\nthis:\n  (\\<exists>U\\<subseteq>W.\n      card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n  (\\<exists>c U.\n      U \\<subseteq> W \\<and>\n      c \\<in> {normal_vector U, - normal_vector U} \\<and>\n      Suc (card U) = n \\<and>\n      lin_indpt U \\<and>\n      (\\<forall>w\\<in>W. (0::'a) \\<le> c \\<bullet> w) \\<and>\n      c \\<bullet> b < (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma fundamental_theorem_of_linear_inequalities_C_imp_B_full_dim:\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n    and span: \"span A = carrier_vec n\" (* this condition was a wlog in the proof *)\n    and b: \"b \\<in> carrier_vec n\"\n    and C: \"\\<nexists> c B. B \\<subseteq> A \\<and> c \\<in> {normal_vector B, - normal_vector B} \\<and> Suc (card B) = n\n      \\<and> lin_indpt B \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\"\n  shows \"\\<exists> B \\<subseteq> A. lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B", "from finite_distinct_list[OF fin]"], ["proof (chain)\npicking this:\n  \\<exists>xs. set xs = A \\<and> distinct xs", "obtain as where Aas: \"A = set as\" and dist: \"distinct as\""], ["proof (prove)\nusing this:\n  \\<exists>xs. set xs = A \\<and> distinct xs\n\ngoal (1 subgoal):\n 1. (\\<And>as.\n        \\<lbrakk>A = set as; distinct as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A = set as\n  distinct as\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B", "define m where \"m = length as\""], ["proof (state)\nthis:\n  m = length as\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B", "define a where \"a = (\\<lambda> i. as ! i)\""], ["proof (state)\nthis:\n  a = (!) as\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B", "have inj: \"inj_on a {0..< (m :: nat)}\"\n    and id: \"A = a ` {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on a {0..<m} &&& A = a ` {0..<m}", "unfolding m_def a_def Aas"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((!) as) {0..<length as} &&& set as = (!) as ` {0..<length as}", "using inj_on_nth[OF dist]"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>?I. i < length as \\<Longrightarrow> inj_on ((!) as) ?I\n\ngoal (1 subgoal):\n 1. inj_on ((!) as) {0..<length as} &&& set as = (!) as ` {0..<length as}", "unfolding set_conv_nth"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>?I. i < length as \\<Longrightarrow> inj_on ((!) as) ?I\n\ngoal (1 subgoal):\n 1. inj_on ((!) as) {0..<length as} &&&\n    {as ! i |i. i < length as} = (!) as ` {0..<length as}", "by auto"], ["proof (state)\nthis:\n  inj_on a {0..<m}\n  A = a ` {0..<m}\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B", "from fundamental_theorem_neg_C_or_B_in_context[OF _ inj b, folded id, OF A span refl] C"], ["proof (chain)\npicking this:\n  (\\<exists>U\\<subseteq>A.\n      card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n  (\\<exists>c U.\n      U \\<subseteq> A \\<and>\n      c \\<in> {normal_vector U, - normal_vector U} \\<and>\n      Suc (card U) = n \\<and>\n      lin_indpt U \\<and>\n      (\\<forall>w\\<in>A. (0::'a) \\<le> c \\<bullet> w) \\<and>\n      c \\<bullet> b < (0::'a))\n  \\<nexists>c B.\n     B \\<subseteq> A \\<and>\n     c \\<in> {normal_vector B, - normal_vector B} \\<and>\n     Suc (card B) = n \\<and>\n     lin_indpt B \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>U\\<subseteq>A.\n      card U = n \\<and> lin_indpt U \\<and> b \\<in> finite_cone U) \\<or>\n  (\\<exists>c U.\n      U \\<subseteq> A \\<and>\n      c \\<in> {normal_vector U, - normal_vector U} \\<and>\n      Suc (card U) = n \\<and>\n      lin_indpt U \\<and>\n      (\\<forall>w\\<in>A. (0::'a) \\<le> c \\<bullet> w) \\<and>\n      c \\<bullet> b < (0::'a))\n  \\<nexists>c B.\n     B \\<subseteq> A \\<and>\n     c \\<in> {normal_vector B, - normal_vector B} \\<and>\n     Suc (card B) = n \\<and>\n     lin_indpt B \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B", "by blast"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A.\n     lin_indpt B \\<and> card B = n \\<and> b \\<in> finite_cone B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fundamental_theorem_of_linear_inequalities_full_dim: fixes A :: \"'a vec set\"\n  defines \"HyperN \\<equiv> {b. b \\<in> carrier_vec n \\<and> (\\<nexists> B c. B \\<subseteq> A \\<and> c \\<in> {normal_vector B, - normal_vector B}\n      \\<and> Suc (card B) = n \\<and> lin_indpt B \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0)}\"\n  defines \"HyperA \\<equiv> {b. b \\<in> carrier_vec n \\<and> (\\<nexists> c. c \\<in> carrier_vec n \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0)}\"\n  defines \"lin_indpt_cone \\<equiv> \\<Union> { finite_cone B | B. B \\<subseteq> A \\<and> card B = n \\<and> lin_indpt B}\"\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n    and span: \"span A = carrier_vec n\"\n  shows\n    \"cone A = lin_indpt_cone\"\n    \"cone A = HyperN\"\n    \"cone A = HyperA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cone A = lin_indpt_cone &&& cone A = HyperN &&& cone A = HyperA", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "have \"lin_indpt_cone \\<subseteq> cone A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt_cone \\<subseteq> cone A", "unfolding lin_indpt_cone_def cone_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     {finite_cone B |B.\n      B \\<subseteq> A \\<and> card B = n \\<and> lin_indpt B}\n    \\<subseteq> {x. \\<exists>Ws.\n                       finite Ws \\<and>\n                       Ws \\<subseteq> A \\<and> x \\<in> finite_cone Ws}", "using fin finite_cone_mono A"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>finite ?Ws; ?Ws \\<subseteq> carrier_vec n;\n   ?Vs \\<subseteq> ?Ws\\<rbrakk>\n  \\<Longrightarrow> finite_cone ?Vs \\<subseteq> finite_cone ?Ws\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<Union>\n     {finite_cone B |B.\n      B \\<subseteq> A \\<and> card B = n \\<and> lin_indpt B}\n    \\<subseteq> {x. \\<exists>Ws.\n                       finite Ws \\<and>\n                       Ws \\<subseteq> A \\<and> x \\<in> finite_cone Ws}", "by auto"], ["proof (state)\nthis:\n  lin_indpt_cone \\<subseteq> cone A\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "moreover"], ["proof (state)\nthis:\n  lin_indpt_cone \\<subseteq> cone A\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "have \"cone A \\<subseteq> HyperA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cone A \\<subseteq> HyperA", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cone A \\<Longrightarrow> x \\<in> HyperA", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cone A \\<Longrightarrow> x \\<in> HyperA", "assume cA: \"c \\<in> cone A\""], ["proof (state)\nthis:\n  c \\<in> cone A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> cone A \\<Longrightarrow> x \\<in> HyperA", "from fundamental_theorem_of_linear_inequalities_A_imp_D[OF A fin this] cone_carrier[OF A] cA"], ["proof (chain)\npicking this:\n  \\<nexists>ca.\n     ca \\<in> carrier_vec n \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> ca \\<bullet> a\\<^sub>i) \\<and>\n     ca \\<bullet> c < (0::'a)\n  cone A \\<subseteq> carrier_vec n\n  c \\<in> cone A", "show \"c \\<in> HyperA\""], ["proof (prove)\nusing this:\n  \\<nexists>ca.\n     ca \\<in> carrier_vec n \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> ca \\<bullet> a\\<^sub>i) \\<and>\n     ca \\<bullet> c < (0::'a)\n  cone A \\<subseteq> carrier_vec n\n  c \\<in> cone A\n\ngoal (1 subgoal):\n 1. c \\<in> HyperA", "unfolding HyperA_def"], ["proof (prove)\nusing this:\n  \\<nexists>ca.\n     ca \\<in> carrier_vec n \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> ca \\<bullet> a\\<^sub>i) \\<and>\n     ca \\<bullet> c < (0::'a)\n  cone A \\<subseteq> carrier_vec n\n  c \\<in> cone A\n\ngoal (1 subgoal):\n 1. c \\<in> {b \\<in> carrier_vec n.\n             \\<nexists>c.\n                c \\<in> carrier_vec n \\<and>\n                (\\<forall>a\\<^sub>i\\<in>A.\n                    (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n                c \\<bullet> b < (0::'a)}", "by auto"], ["proof (state)\nthis:\n  c \\<in> HyperA\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cone A \\<subseteq> HyperA\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "moreover"], ["proof (state)\nthis:\n  cone A \\<subseteq> HyperA\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "have \"HyperA \\<subseteq> HyperN\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HyperA \\<subseteq> HyperN", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperA \\<Longrightarrow> x \\<in> HyperN", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperA \\<Longrightarrow> x \\<in> HyperN", "assume \"c \\<in> HyperA\""], ["proof (state)\nthis:\n  c \\<in> HyperA\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperA \\<Longrightarrow> x \\<in> HyperN", "hence False: \"\\<And> v. v \\<in> carrier_vec n \\<Longrightarrow> (\\<forall>a\\<^sub>i\\<in>A. 0 \\<le> v \\<bullet> a\\<^sub>i) \\<Longrightarrow> v \\<bullet> c < 0 \\<Longrightarrow> False\"\n      and c: \"c \\<in> carrier_vec n\""], ["proof (prove)\nusing this:\n  c \\<in> HyperA\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec n;\n         \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> v \\<bullet> a\\<^sub>i;\n         v \\<bullet> c < (0::'a)\\<rbrakk>\n        \\<Longrightarrow> False) &&&\n    c \\<in> carrier_vec n", "unfolding HyperA_def"], ["proof (prove)\nusing this:\n  c \\<in> {b \\<in> carrier_vec n.\n           \\<nexists>c.\n              c \\<in> carrier_vec n \\<and>\n              (\\<forall>a\\<^sub>i\\<in>A.\n                  (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n              c \\<bullet> b < (0::'a)}\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec n;\n         \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> v \\<bullet> a\\<^sub>i;\n         v \\<bullet> c < (0::'a)\\<rbrakk>\n        \\<Longrightarrow> False) &&&\n    c \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?v3 \\<in> carrier_vec n;\n   \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> ?v3 \\<bullet> a\\<^sub>i;\n   ?v3 \\<bullet> c < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> False\n  c \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperA \\<Longrightarrow> x \\<in> HyperN", "show \"c \\<in> HyperN\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> HyperN", "unfolding HyperN_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> {b \\<in> carrier_vec n.\n             \\<nexists>B c.\n                B \\<subseteq> A \\<and>\n                c \\<in> {normal_vector B, - normal_vector B} \\<and>\n                Suc (card B) = n \\<and>\n                lin_indpt B \\<and>\n                (\\<forall>a\\<^sub>i\\<in>A.\n                    (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n                c \\<bullet> b < (0::'a)}", "proof (standard, intro conjI c notI, clarify, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B ca.\n       \\<lbrakk>B \\<subseteq> A;\n        ca \\<in> {gram_schmidt.normal_vector (Suc (card B)) B,\n                  - gram_schmidt.normal_vector (Suc (card B)) B};\n        n = Suc (card B);\n        \\<not> module.lin_dep class_ring\n                (module_vec TYPE('a) (Suc (card B))) B;\n        \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> ca \\<bullet> a\\<^sub>i;\n        ca \\<bullet> c < (0::'a)\\<rbrakk>\n       \\<Longrightarrow> False", "case (1 W nv)"], ["proof (state)\nthis:\n  W \\<subseteq> A\n  nv \\<in> {gram_schmidt.normal_vector (Suc (card W)) W,\n            - gram_schmidt.normal_vector (Suc (card W)) W}\n  n = Suc (card W)\n  \\<not> module.lin_dep class_ring (module_vec TYPE('a) (Suc (card W))) W\n  \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> nv \\<bullet> a\\<^sub>i\n  nv \\<bullet> c < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>B ca.\n       \\<lbrakk>B \\<subseteq> A;\n        ca \\<in> {gram_schmidt.normal_vector (Suc (card B)) B,\n                  - gram_schmidt.normal_vector (Suc (card B)) B};\n        n = Suc (card B);\n        \\<not> module.lin_dep class_ring\n                (module_vec TYPE('a) (Suc (card B))) B;\n        \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> ca \\<bullet> a\\<^sub>i;\n        ca \\<bullet> c < (0::'a)\\<rbrakk>\n       \\<Longrightarrow> False", "with A fin"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier_vec n\n  finite A\n  W \\<subseteq> A\n  nv \\<in> {gram_schmidt.normal_vector (Suc (card W)) W,\n            - gram_schmidt.normal_vector (Suc (card W)) W}\n  n = Suc (card W)\n  \\<not> module.lin_dep class_ring (module_vec TYPE('a) (Suc (card W))) W\n  \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> nv \\<bullet> a\\<^sub>i\n  nv \\<bullet> c < (0::'a)", "have fin: \"finite W\" and W: \"W \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier_vec n\n  finite A\n  W \\<subseteq> A\n  nv \\<in> {gram_schmidt.normal_vector (Suc (card W)) W,\n            - gram_schmidt.normal_vector (Suc (card W)) W}\n  n = Suc (card W)\n  \\<not> module.lin_dep class_ring (module_vec TYPE('a) (Suc (card W))) W\n  \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> nv \\<bullet> a\\<^sub>i\n  nv \\<bullet> c < (0::'a)\n\ngoal (1 subgoal):\n 1. finite W &&& W \\<subseteq> carrier_vec n", "by (auto intro: finite_subset)"], ["proof (state)\nthis:\n  finite W\n  W \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<And>B ca.\n       \\<lbrakk>B \\<subseteq> A;\n        ca \\<in> {gram_schmidt.normal_vector (Suc (card B)) B,\n                  - gram_schmidt.normal_vector (Suc (card B)) B};\n        n = Suc (card B);\n        \\<not> module.lin_dep class_ring\n                (module_vec TYPE('a) (Suc (card B))) B;\n        \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> ca \\<bullet> a\\<^sub>i;\n        ca \\<bullet> c < (0::'a)\\<rbrakk>\n       \\<Longrightarrow> False", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using False[of nv] 1 normal_vector[OF fin _ _ W]"], ["proof (prove)\nusing this:\n  \\<lbrakk>nv \\<in> carrier_vec n;\n   \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> nv \\<bullet> a\\<^sub>i;\n   nv \\<bullet> c < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> False\n  W \\<subseteq> A\n  nv \\<in> {gram_schmidt.normal_vector (Suc (card W)) W,\n            - gram_schmidt.normal_vector (Suc (card W)) W}\n  n = Suc (card W)\n  \\<not> module.lin_dep class_ring (module_vec TYPE('a) (Suc (card W))) W\n  \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> nv \\<bullet> a\\<^sub>i\n  nv \\<bullet> c < (0::'a)\n  \\<lbrakk>Suc (card W) = n; lin_indpt W\\<rbrakk>\n  \\<Longrightarrow> normal_vector W \\<in> carrier_vec n\n  \\<lbrakk>Suc (card W) = n; lin_indpt W\\<rbrakk>\n  \\<Longrightarrow> normal_vector W \\<noteq> 0\\<^sub>v n\n  \\<lbrakk>Suc (card W) = n; lin_indpt W; ?w \\<in> W\\<rbrakk>\n  \\<Longrightarrow> ?w \\<bullet> normal_vector W = (0::'a)\n  \\<lbrakk>Suc (card W) = n; lin_indpt W; ?w \\<in> W\\<rbrakk>\n  \\<Longrightarrow> normal_vector W \\<bullet> ?w = (0::'a)\n  \\<lbrakk>Suc (card W) = n; lin_indpt W\\<rbrakk>\n  \\<Longrightarrow> lin_indpt (insert (normal_vector W) W)\n  \\<lbrakk>Suc (card W) = n; lin_indpt W\\<rbrakk>\n  \\<Longrightarrow> normal_vector W \\<notin> W\n  \\<lbrakk>Suc (card W) = n; lin_indpt W;\n   W \\<subseteq> \\<int>\\<^sub>v \\<inter> Bounded_vec ?Bnd\\<rbrakk>\n  \\<Longrightarrow> normal_vector W\n                    \\<in> \\<int>\\<^sub>v \\<inter>\n                          Bounded_vec (det_bound (n - 1) ?Bnd)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c \\<in> HyperN\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  HyperA \\<subseteq> HyperN\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "moreover"], ["proof (state)\nthis:\n  HyperA \\<subseteq> HyperN\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "have \"HyperN \\<subseteq> lin_indpt_cone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HyperN \\<subseteq> lin_indpt_cone", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperN \\<Longrightarrow> x \\<in> lin_indpt_cone", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperN \\<Longrightarrow> x \\<in> lin_indpt_cone", "assume \"b \\<in> HyperN\""], ["proof (state)\nthis:\n  b \\<in> HyperN\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperN \\<Longrightarrow> x \\<in> lin_indpt_cone", "from this[unfolded HyperN_def]\n      fundamental_theorem_of_linear_inequalities_C_imp_B_full_dim[OF A fin span, of b]"], ["proof (chain)\npicking this:\n  b \\<in> {b \\<in> carrier_vec n.\n           \\<nexists>B c.\n              B \\<subseteq> A \\<and>\n              c \\<in> {normal_vector B, - normal_vector B} \\<and>\n              Suc (card B) = n \\<and>\n              lin_indpt B \\<and>\n              (\\<forall>a\\<^sub>i\\<in>A.\n                  (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n              c \\<bullet> b < (0::'a)}\n  \\<lbrakk>b \\<in> carrier_vec n;\n   \\<nexists>c B.\n      B \\<subseteq> A \\<and>\n      c \\<in> {normal_vector B, - normal_vector B} \\<and>\n      Suc (card B) = n \\<and>\n      lin_indpt B \\<and>\n      (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n      c \\<bullet> b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>A.\n                       lin_indpt B \\<and>\n                       card B = n \\<and> b \\<in> finite_cone B", "show \"b \\<in> lin_indpt_cone\""], ["proof (prove)\nusing this:\n  b \\<in> {b \\<in> carrier_vec n.\n           \\<nexists>B c.\n              B \\<subseteq> A \\<and>\n              c \\<in> {normal_vector B, - normal_vector B} \\<and>\n              Suc (card B) = n \\<and>\n              lin_indpt B \\<and>\n              (\\<forall>a\\<^sub>i\\<in>A.\n                  (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n              c \\<bullet> b < (0::'a)}\n  \\<lbrakk>b \\<in> carrier_vec n;\n   \\<nexists>c B.\n      B \\<subseteq> A \\<and>\n      c \\<in> {normal_vector B, - normal_vector B} \\<and>\n      Suc (card B) = n \\<and>\n      lin_indpt B \\<and>\n      (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n      c \\<bullet> b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>A.\n                       lin_indpt B \\<and>\n                       card B = n \\<and> b \\<in> finite_cone B\n\ngoal (1 subgoal):\n 1. b \\<in> lin_indpt_cone", "unfolding lin_indpt_cone_def"], ["proof (prove)\nusing this:\n  b \\<in> {b \\<in> carrier_vec n.\n           \\<nexists>B c.\n              B \\<subseteq> A \\<and>\n              c \\<in> {normal_vector B, - normal_vector B} \\<and>\n              Suc (card B) = n \\<and>\n              lin_indpt B \\<and>\n              (\\<forall>a\\<^sub>i\\<in>A.\n                  (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n              c \\<bullet> b < (0::'a)}\n  \\<lbrakk>b \\<in> carrier_vec n;\n   \\<nexists>c B.\n      B \\<subseteq> A \\<and>\n      c \\<in> {normal_vector B, - normal_vector B} \\<and>\n      Suc (card B) = n \\<and>\n      lin_indpt B \\<and>\n      (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n      c \\<bullet> b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>A.\n                       lin_indpt B \\<and>\n                       card B = n \\<and> b \\<in> finite_cone B\n\ngoal (1 subgoal):\n 1. b \\<in> \\<Union>\n             {finite_cone B |B.\n              B \\<subseteq> A \\<and> card B = n \\<and> lin_indpt B}", "by auto"], ["proof (state)\nthis:\n  b \\<in> lin_indpt_cone\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  HyperN \\<subseteq> lin_indpt_cone\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "ultimately"], ["proof (chain)\npicking this:\n  lin_indpt_cone \\<subseteq> cone A\n  cone A \\<subseteq> HyperA\n  HyperA \\<subseteq> HyperN\n  HyperN \\<subseteq> lin_indpt_cone", "show\n    \"cone A = lin_indpt_cone\"\n    \"cone A = HyperN\"\n    \"cone A = HyperA\""], ["proof (prove)\nusing this:\n  lin_indpt_cone \\<subseteq> cone A\n  cone A \\<subseteq> HyperA\n  HyperA \\<subseteq> HyperN\n  HyperN \\<subseteq> lin_indpt_cone\n\ngoal (1 subgoal):\n 1. cone A = lin_indpt_cone &&& cone A = HyperN &&& cone A = HyperA", "by auto"], ["proof (state)\nthis:\n  cone A = lin_indpt_cone\n  cone A = HyperN\n  cone A = HyperA\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fundamental_theorem_of_linear_inequalities_C_imp_B:\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n    and b: \"b \\<in> carrier_vec n\"\n    and C: \"\\<nexists> c A'. c \\<in> carrier_vec n\n      \\<and> A' \\<subseteq> A \\<and> Suc (card A') = dim_span (insert b A)\n      \\<and> (\\<forall> a \\<in> A'. c \\<bullet> a = 0)\n      \\<and> lin_indpt A' \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\"\n  shows \"\\<exists> B \\<subseteq> A. lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from exists_lin_indpt_sublist[OF A]"], ["proof (chain)\npicking this:\n  \\<exists>Ls.\n     lin_indpt_list Ls \\<and>\n     local.span (set Ls) = local.span A \\<and> set Ls \\<subseteq> A", "obtain A' where\n    lin: \"lin_indpt_list A'\" and span: \"span (set A') = span A\" and A'A: \"set A' \\<subseteq> A\""], ["proof (prove)\nusing this:\n  \\<exists>Ls.\n     lin_indpt_list Ls \\<and>\n     local.span (set Ls) = local.span A \\<and> set Ls \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>lin_indpt_list A'; local.span (set A') = local.span A;\n         set A' \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lin_indpt_list A'\n  local.span (set A') = local.span A\n  set A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "hence linA': \"lin_indpt (set A')\""], ["proof (prove)\nusing this:\n  lin_indpt_list A'\n  local.span (set A') = local.span A\n  set A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. lin_indpt (set A')", "unfolding lin_indpt_list_def"], ["proof (prove)\nusing this:\n  set A' \\<subseteq> carrier_vec n \\<and>\n  distinct A' \\<and> lin_indpt (set A')\n  local.span (set A') = local.span A\n  set A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. lin_indpt (set A')", "by auto"], ["proof (state)\nthis:\n  lin_indpt (set A')\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from A'A A"], ["proof (chain)\npicking this:\n  set A' \\<subseteq> A\n  A \\<subseteq> carrier_vec n", "have A': \"set A' \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  set A' \\<subseteq> A\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. set A' \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  set A' \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "have dim_spanA: \"dim_span A = card (set A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_span A = card (set A')", "by (rule sym, rule same_span_imp_card_eq_dim_span[OF A' A span linA'])"], ["proof (state)\nthis:\n  dim_span A = card (set A')\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "proof (cases \"b \\<in> span A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "case False"], ["proof (state)\nthis:\n  b \\<notin> local.span A\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "with span"], ["proof (chain)\npicking this:\n  local.span (set A') = local.span A\n  b \\<notin> local.span A", "have \"b \\<notin> span (set A')\""], ["proof (prove)\nusing this:\n  local.span (set A') = local.span A\n  b \\<notin> local.span A\n\ngoal (1 subgoal):\n 1. b \\<notin> local.span (set A')", "by auto"], ["proof (state)\nthis:\n  b \\<notin> local.span (set A')\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "with lin"], ["proof (chain)\npicking this:\n  lin_indpt_list A'\n  b \\<notin> local.span (set A')", "have linAb: \"lin_indpt_list (A' @ [b])\""], ["proof (prove)\nusing this:\n  lin_indpt_list A'\n  b \\<notin> local.span (set A')\n\ngoal (1 subgoal):\n 1. lin_indpt_list (A' @ [b])", "unfolding lin_indpt_list_def"], ["proof (prove)\nusing this:\n  set A' \\<subseteq> carrier_vec n \\<and>\n  distinct A' \\<and> lin_indpt (set A')\n  b \\<notin> local.span (set A')\n\ngoal (1 subgoal):\n 1. set (A' @ [b]) \\<subseteq> carrier_vec n \\<and>\n    distinct (A' @ [b]) \\<and> lin_indpt (set (A' @ [b]))", "using lin_dep_iff_in_span[OF A' _ b] span_mem[OF A', of b] b"], ["proof (prove)\nusing this:\n  set A' \\<subseteq> carrier_vec n \\<and>\n  distinct A' \\<and> lin_indpt (set A')\n  b \\<notin> local.span (set A')\n  \\<lbrakk>lin_indpt (set A'); b \\<notin> set A'\\<rbrakk>\n  \\<Longrightarrow> (b \\<in> local.span (set A')) =\n                    lin_dep (set A' \\<union> {b})\n  b \\<in> set A' \\<Longrightarrow> b \\<in> local.span (set A')\n  b \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. set (A' @ [b]) \\<subseteq> carrier_vec n \\<and>\n    distinct (A' @ [b]) \\<and> lin_indpt (set (A' @ [b]))", "by auto"], ["proof (state)\nthis:\n  lin_indpt_list (A' @ [b])\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "interpret gso: gram_schmidt_fs_lin_indpt n \"A' @ [b]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gram_schmidt_fs_lin_indpt n (A' @ [b])", "by (standard, insert linAb[unfolded lin_indpt_list_def], auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "let ?m = \"length A'\""], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "define c where \"c = - gso.gso ?m\""], ["proof (state)\nthis:\n  c = - gso.gso (length A')\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "have c: \"c \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> carrier_vec n", "using gso.gso_carrier[of ?m]"], ["proof (prove)\nusing this:\n  length A' < length (A' @ [b]) \\<Longrightarrow>\n  gso.gso (length A') \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. c \\<in> carrier_vec n", "unfolding c_def"], ["proof (prove)\nusing this:\n  length A' < length (A' @ [b]) \\<Longrightarrow>\n  gso.gso (length A') \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. - gso.gso (length A') \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  c \\<in> carrier_vec n\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "from gso.gso_times_self_is_norm[of ?m]"], ["proof (chain)\npicking this:\n  length A' < length (A' @ [b]) \\<Longrightarrow>\n  (A' @ [b]) ! length A' \\<bullet> gso.gso (length A') =\n  \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2", "have \"b \\<bullet> gso.gso ?m = sq_norm (gso.gso ?m)\""], ["proof (prove)\nusing this:\n  length A' < length (A' @ [b]) \\<Longrightarrow>\n  (A' @ [b]) ! length A' \\<bullet> gso.gso (length A') =\n  \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<bullet> gso.gso (length A') =\n    \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2", "unfolding c_def"], ["proof (prove)\nusing this:\n  length A' < length (A' @ [b]) \\<Longrightarrow>\n  (A' @ [b]) ! length A' \\<bullet> gso.gso (length A') =\n  \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<bullet> gso.gso (length A') =\n    \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2", "using b c"], ["proof (prove)\nusing this:\n  length A' < length (A' @ [b]) \\<Longrightarrow>\n  (A' @ [b]) ! length A' \\<bullet> gso.gso (length A') =\n  \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2\n  b \\<in> carrier_vec n\n  c \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<bullet> gso.gso (length A') =\n    \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  b \\<bullet> gso.gso (length A') =\n  \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "also"], ["proof (state)\nthis:\n  b \\<bullet> gso.gso (length A') =\n  \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "have \"\\<dots> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2", "using gso.sq_norm_pos[of ?m]"], ["proof (prove)\nusing this:\n  length A' < length (A' @ [b]) \\<Longrightarrow>\n  (0::'a) < \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (0::'a) < \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  (0::'a) < \\<parallel>gso.gso (length A')\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "finally"], ["proof (chain)\npicking this:\n  (0::'a) < b \\<bullet> gso.gso (length A')", "have cb: \"c \\<bullet> b < 0\""], ["proof (prove)\nusing this:\n  (0::'a) < b \\<bullet> gso.gso (length A')\n\ngoal (1 subgoal):\n 1. c \\<bullet> b < (0::'a)", "using b c comm_scalar_prod[OF b c]"], ["proof (prove)\nusing this:\n  (0::'a) < b \\<bullet> gso.gso (length A')\n  b \\<in> carrier_vec n\n  c \\<in> carrier_vec n\n  b \\<bullet> c = c \\<bullet> b\n\ngoal (1 subgoal):\n 1. c \\<bullet> b < (0::'a)", "unfolding c_def"], ["proof (prove)\nusing this:\n  (0::'a) < b \\<bullet> gso.gso (length A')\n  b \\<in> carrier_vec n\n  - gso.gso (length A') \\<in> carrier_vec n\n  b \\<bullet> - gso.gso (length A') = - gso.gso (length A') \\<bullet> b\n\ngoal (1 subgoal):\n 1. - gso.gso (length A') \\<bullet> b < (0::'a)", "by auto"], ["proof (state)\nthis:\n  c \\<bullet> b < (0::'a)\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "{"], ["proof (state)\nthis:\n  c \\<bullet> b < (0::'a)\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "assume \"a \\<in> A\""], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "hence \"a \\<in> span (set A')\""], ["proof (prove)\nusing this:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. a \\<in> local.span (set A')", "unfolding span"], ["proof (prove)\nusing this:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. a \\<in> local.span A", "using span_mem[OF A]"], ["proof (prove)\nusing this:\n  a \\<in> A\n  ?u \\<in> A \\<Longrightarrow> ?u \\<in> local.span A\n\ngoal (1 subgoal):\n 1. a \\<in> local.span A", "by auto"], ["proof (state)\nthis:\n  a \\<in> local.span (set A')\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "from finite_in_span[OF _ A' this]"], ["proof (chain)\npicking this:\n  finite (set A') \\<Longrightarrow>\n  \\<exists>aa. True \\<and> lincomb aa (set A') = a", "obtain l where \"a = lincomb l (set A')\""], ["proof (prove)\nusing this:\n  finite (set A') \\<Longrightarrow>\n  \\<exists>aa. True \\<and> lincomb aa (set A') = a\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        a = lincomb l (set A') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = lincomb l (set A')\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "hence \"c \\<bullet> a = c \\<bullet> lincomb l (set A')\""], ["proof (prove)\nusing this:\n  a = lincomb l (set A')\n\ngoal (1 subgoal):\n 1. c \\<bullet> a = c \\<bullet> lincomb l (set A')", "by simp"], ["proof (state)\nthis:\n  c \\<bullet> a = c \\<bullet> lincomb l (set A')\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "also"], ["proof (state)\nthis:\n  c \\<bullet> a = c \\<bullet> lincomb l (set A')\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<bullet> lincomb l (set A') = (0::'a)", "by (subst lincomb_scalar_prod_right[OF A' c], rule sum.neutral, insert A', unfold set_conv_nth,\n            insert gso.gso_scalar_zero[of ?m] c, auto simp: c_def nth_append )"], ["proof (state)\nthis:\n  c \\<bullet> lincomb l (set A') = (0::'a)\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "finally"], ["proof (chain)\npicking this:\n  c \\<bullet> a = (0::'a)", "have \"c \\<bullet> a = 0\""], ["proof (prove)\nusing this:\n  c \\<bullet> a = (0::'a)\n\ngoal (1 subgoal):\n 1. c \\<bullet> a = (0::'a)", "."], ["proof (state)\nthis:\n  c \\<bullet> a = (0::'a)\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "}"], ["proof (state)\nthis:\n  ?a5 \\<in> A \\<Longrightarrow> c \\<bullet> ?a5 = (0::'a)\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "note cA = this"], ["proof (state)\nthis:\n  ?a5 \\<in> A \\<Longrightarrow> c \\<bullet> ?a5 = (0::'a)\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "have \"\\<exists> c A'. c \\<in> carrier_vec n \\<and> A' \\<subseteq> A \\<and> Suc (card A') = dim_span (insert b A)\n      \\<and> (\\<forall> a \\<in> A'. c \\<bullet> a = 0) \\<and> lin_indpt A' \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c A'.\n       c \\<in> carrier_vec n \\<and>\n       A' \\<subseteq> A \\<and>\n       Suc (card A') = gso.dim_span (insert b A) \\<and>\n       (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n       lin_indpt A' \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a)", "proof (intro exI[of _ c] exI[of _ \"set A'\"] conjI A'A linA' cb c)"], ["proof (state)\ngoal (3 subgoals):\n 1. Suc (card (set A')) = gso.dim_span (insert b A)\n 2. \\<forall>a\\<in>set A'. c \\<bullet> a = (0::'a)\n 3. \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i", "show \"\\<forall>a\\<in>set A'. c \\<bullet> a = 0\" \"\\<forall>a\\<^sub>i\\<in>A. 0 \\<le> c \\<bullet> a\\<^sub>i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set A'. c \\<bullet> a = (0::'a) &&&\n    \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i", "using cA A'A"], ["proof (prove)\nusing this:\n  ?a5 \\<in> A \\<Longrightarrow> c \\<bullet> ?a5 = (0::'a)\n  set A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set A'. c \\<bullet> a = (0::'a) &&&\n    \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set A'. c \\<bullet> a = (0::'a)\n  \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i\n\ngoal (1 subgoal):\n 1. Suc (card (set A')) = gso.dim_span (insert b A)", "have \"dim_span (insert b A) = Suc (dim_span A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gso.dim_span (insert b A) = Suc (gso.dim_span A)", "by (rule dim_span_insert[OF A b False])"], ["proof (state)\nthis:\n  gso.dim_span (insert b A) = Suc (gso.dim_span A)\n\ngoal (1 subgoal):\n 1. Suc (card (set A')) = gso.dim_span (insert b A)", "also"], ["proof (state)\nthis:\n  gso.dim_span (insert b A) = Suc (gso.dim_span A)\n\ngoal (1 subgoal):\n 1. Suc (card (set A')) = gso.dim_span (insert b A)", "have \"\\<dots> = Suc (card (set A'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (gso.dim_span A) = Suc (card (set A'))", "unfolding dim_spanA"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (card (set A')) = Suc (card (set A'))", ".."], ["proof (state)\nthis:\n  Suc (gso.dim_span A) = Suc (card (set A'))\n\ngoal (1 subgoal):\n 1. Suc (card (set A')) = gso.dim_span (insert b A)", "finally"], ["proof (chain)\npicking this:\n  gso.dim_span (insert b A) = Suc (card (set A'))", "show \"Suc (card (set A')) = dim_span (insert b A)\""], ["proof (prove)\nusing this:\n  gso.dim_span (insert b A) = Suc (card (set A'))\n\ngoal (1 subgoal):\n 1. Suc (card (set A')) = gso.dim_span (insert b A)", ".."], ["proof (state)\nthis:\n  Suc (card (set A')) = gso.dim_span (insert b A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = gso.dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "with C"], ["proof (chain)\npicking this:\n  \\<nexists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = gso.dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n  \\<exists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = gso.dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)", "have False"], ["proof (prove)\nusing this:\n  \\<nexists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = gso.dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n  \\<exists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = gso.dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n 2. b \\<notin> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", ".."], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A.\n     lin_indpt B \\<and>\n     card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and>\n       card B = gso.dim_span A \\<and> b \\<in> gso.finite_cone B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "case bspan: True"], ["proof (state)\nthis:\n  b \\<in> local.span A\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "define N where \"N = normal_vectors A'\""], ["proof (state)\nthis:\n  N = normal_vectors A'\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from normal_vectors[OF lin, folded N_def]"], ["proof (chain)\npicking this:\n  set N \\<subseteq> carrier_vec n\n  \\<lbrakk>?w \\<in> set A'; ?nv \\<in> set N\\<rbrakk>\n  \\<Longrightarrow> ?nv \\<bullet> ?w = (0::'a)\n  \\<lbrakk>?w \\<in> set A'; ?nv \\<in> set N\\<rbrakk>\n  \\<Longrightarrow> ?w \\<bullet> ?nv = (0::'a)\n  lin_indpt_list (A' @ N)\n  length A' + length N = n\n  set A' \\<inter> set N = {}\n  set A'\n  \\<subseteq> \\<int>\\<^sub>v \\<inter> Bounded_vec ?Bnd \\<Longrightarrow>\n  set N\n  \\<subseteq> \\<int>\\<^sub>v \\<inter>\n              Bounded_vec (det_bound (n - 1) (max (1::'a) ?Bnd))", "have N: \"set N \\<subseteq> carrier_vec n\" and\n      orthA'N: \"\\<And> w nv. w \\<in> set A' \\<Longrightarrow> nv \\<in> set N \\<Longrightarrow> nv \\<bullet> w = 0\" and\n      linAN: \"lin_indpt_list (A' @ N)\"  and\n      lenAN: \"length (A' @ N) = n\" and\n      disj: \"set A' \\<inter> set N = {}\""], ["proof (prove)\nusing this:\n  set N \\<subseteq> carrier_vec n\n  \\<lbrakk>?w \\<in> set A'; ?nv \\<in> set N\\<rbrakk>\n  \\<Longrightarrow> ?nv \\<bullet> ?w = (0::'a)\n  \\<lbrakk>?w \\<in> set A'; ?nv \\<in> set N\\<rbrakk>\n  \\<Longrightarrow> ?w \\<bullet> ?nv = (0::'a)\n  lin_indpt_list (A' @ N)\n  length A' + length N = n\n  set A' \\<inter> set N = {}\n  set A'\n  \\<subseteq> \\<int>\\<^sub>v \\<inter> Bounded_vec ?Bnd \\<Longrightarrow>\n  set N\n  \\<subseteq> \\<int>\\<^sub>v \\<inter>\n              Bounded_vec (det_bound (n - 1) (max (1::'a) ?Bnd))\n\ngoal (1 subgoal):\n 1. (set N \\<subseteq> carrier_vec n &&&\n     (\\<And>w nv.\n         \\<lbrakk>w \\<in> set A'; nv \\<in> set N\\<rbrakk>\n         \\<Longrightarrow> nv \\<bullet> w = (0::'a))) &&&\n    lin_indpt_list (A' @ N) &&&\n    length (A' @ N) = n &&& set A' \\<inter> set N = {}", "by auto"], ["proof (state)\nthis:\n  set N \\<subseteq> carrier_vec n\n  \\<lbrakk>?w3 \\<in> set A'; ?nv3 \\<in> set N\\<rbrakk>\n  \\<Longrightarrow> ?nv3 \\<bullet> ?w3 = (0::'a)\n  lin_indpt_list (A' @ N)\n  length (A' @ N) = n\n  set A' \\<inter> set N = {}\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from linAN lenAN"], ["proof (chain)\npicking this:\n  lin_indpt_list (A' @ N)\n  length (A' @ N) = n", "have full_span': \"span (set (A' @ N)) = carrier_vec n\""], ["proof (prove)\nusing this:\n  lin_indpt_list (A' @ N)\n  length (A' @ N) = n\n\ngoal (1 subgoal):\n 1. local.span (set (A' @ N)) = carrier_vec n", "using lin_indpt_list_length_eq_n"], ["proof (prove)\nusing this:\n  lin_indpt_list (A' @ N)\n  length (A' @ N) = n\n  \\<lbrakk>lin_indpt_list ?xs; length ?xs = n\\<rbrakk>\n  \\<Longrightarrow> local.span (set ?xs) = carrier_vec n\n  \\<lbrakk>lin_indpt_list ?xs; length ?xs = n\\<rbrakk>\n  \\<Longrightarrow> basis (set ?xs)\n\ngoal (1 subgoal):\n 1. local.span (set (A' @ N)) = carrier_vec n", "by blast"], ["proof (state)\nthis:\n  local.span (set (A' @ N)) = carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "hence full_span'': \"span (set A' \\<union> set N) = carrier_vec n\""], ["proof (prove)\nusing this:\n  local.span (set (A' @ N)) = carrier_vec n\n\ngoal (1 subgoal):\n 1. local.span (set A' \\<union> set N) = carrier_vec n", "by auto"], ["proof (state)\nthis:\n  local.span (set A' \\<union> set N) = carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from A N A'"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier_vec n\n  set N \\<subseteq> carrier_vec n\n  set A' \\<subseteq> carrier_vec n", "have AN: \"A \\<union> set N \\<subseteq> carrier_vec n\" and A'N: \"set (A' @ N) \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier_vec n\n  set N \\<subseteq> carrier_vec n\n  set A' \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. A \\<union> set N \\<subseteq> carrier_vec n &&&\n    set (A' @ N) \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  A \\<union> set N \\<subseteq> carrier_vec n\n  set (A' @ N) \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "hence \"span (A \\<union> set N) \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  A \\<union> set N \\<subseteq> carrier_vec n\n  set (A' @ N) \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. local.span (A \\<union> set N) \\<subseteq> carrier_vec n", "by (simp add: span_is_subset2)"], ["proof (state)\nthis:\n  local.span (A \\<union> set N) \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "with A'A span_is_monotone[of \"set (A' @ N)\" \"A \\<union> set N\", unfolded full_span']"], ["proof (chain)\npicking this:\n  set A' \\<subseteq> A\n  set (A' @ N) \\<subseteq> A \\<union> set N \\<Longrightarrow>\n  carrier_vec n \\<subseteq> local.span (A \\<union> set N)\n  local.span (A \\<union> set N) \\<subseteq> carrier_vec n", "have full_span: \"span (A \\<union> set N) = carrier_vec n\""], ["proof (prove)\nusing this:\n  set A' \\<subseteq> A\n  set (A' @ N) \\<subseteq> A \\<union> set N \\<Longrightarrow>\n  carrier_vec n \\<subseteq> local.span (A \\<union> set N)\n  local.span (A \\<union> set N) \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. local.span (A \\<union> set N) = carrier_vec n", "unfolding set_append"], ["proof (prove)\nusing this:\n  set A' \\<subseteq> A\n  set A' \\<union> set N \\<subseteq> A \\<union> set N \\<Longrightarrow>\n  carrier_vec n \\<subseteq> local.span (A \\<union> set N)\n  local.span (A \\<union> set N) \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. local.span (A \\<union> set N) = carrier_vec n", "by fast"], ["proof (state)\nthis:\n  local.span (A \\<union> set N) = carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from fin"], ["proof (chain)\npicking this:\n  finite A", "have finAN: \"finite (A \\<union> set N)\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (A \\<union> set N)", "by auto"], ["proof (state)\nthis:\n  finite (A \\<union> set N)\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "note fundamental = fundamental_theorem_of_linear_inequalities_full_dim[OF AN finAN full_span]"], ["proof (state)\nthis:\n  cone (A \\<union> set N) =\n  \\<Union>\n   {finite_cone B |B.\n    B \\<subseteq> A \\<union> set N \\<and> card B = n \\<and> lin_indpt B}\n  cone (A \\<union> set N) =\n  {b \\<in> carrier_vec n.\n   \\<nexists>B c.\n      B \\<subseteq> A \\<union> set N \\<and>\n      c \\<in> {normal_vector B, - normal_vector B} \\<and>\n      Suc (card B) = n \\<and>\n      lin_indpt B \\<and>\n      (\\<forall>a\\<^sub>i\\<in>A \\<union> set N.\n          (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n      c \\<bullet> b < (0::'a)}\n  cone (A \\<union> set N) =\n  {b \\<in> carrier_vec n.\n   \\<nexists>c.\n      c \\<in> carrier_vec n \\<and>\n      (\\<forall>a\\<^sub>i\\<in>A \\<union> set N.\n          (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n      c \\<bullet> b < (0::'a)}\n\ngoal (1 subgoal):\n 1. b \\<in> local.span A \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "proof (cases \"b \\<in> cone (A \\<union> set N)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "case True"], ["proof (state)\nthis:\n  b \\<in> cone (A \\<union> set N)\n\ngoal (2 subgoals):\n 1. b \\<in> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from this[unfolded fundamental(1)]"], ["proof (chain)\npicking this:\n  b \\<in> \\<Union>\n           {finite_cone B |B.\n            B \\<subseteq> A \\<union> set N \\<and>\n            card B = n \\<and> lin_indpt B}", "obtain C where CAN: \"C \\<subseteq> A \\<union> set N\" and cardC: \"card C = n\"\n        and linC: \"lin_indpt C\"\n        and bC: \"b \\<in> finite_cone C\""], ["proof (prove)\nusing this:\n  b \\<in> \\<Union>\n           {finite_cone B |B.\n            B \\<subseteq> A \\<union> set N \\<and>\n            card B = n \\<and> lin_indpt B}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<subseteq> A \\<union> set N; card C = n; lin_indpt C;\n         b \\<in> finite_cone C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> A \\<union> set N\n  card C = n\n  lin_indpt C\n  b \\<in> finite_cone C\n\ngoal (2 subgoals):\n 1. b \\<in> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "have finC: \"finite C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite C", "using finite_subset[OF CAN] fin"], ["proof (prove)\nusing this:\n  finite (A \\<union> set N) \\<Longrightarrow> finite C\n  finite A\n\ngoal (1 subgoal):\n 1. finite C", "by auto"], ["proof (state)\nthis:\n  finite C\n\ngoal (2 subgoals):\n 1. b \\<in> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from CAN A N"], ["proof (chain)\npicking this:\n  C \\<subseteq> A \\<union> set N\n  A \\<subseteq> carrier_vec n\n  set N \\<subseteq> carrier_vec n", "have C: \"C \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  C \\<subseteq> A \\<union> set N\n  A \\<subseteq> carrier_vec n\n  set N \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. C \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> carrier_vec n\n\ngoal (2 subgoals):\n 1. b \\<in> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from bC[unfolded finite_cone_def nonneg_lincomb_def] finC"], ["proof (chain)\npicking this:\n  b \\<in> {b. \\<exists>c.\n                 lincomb c (if finite C then C else {}) = b \\<and>\n                 c ` (if finite C then C else {})\n                 \\<subseteq> Collect ((\\<le>) (0::'a))}\n  finite C", "obtain c\n        where bC: \"b = lincomb c C\" and nonneg: \"\\<And> b. b \\<in> C \\<Longrightarrow> c b \\<ge> 0\""], ["proof (prove)\nusing this:\n  b \\<in> {b. \\<exists>c.\n                 lincomb c (if finite C then C else {}) = b \\<and>\n                 c ` (if finite C then C else {})\n                 \\<subseteq> Collect ((\\<le>) (0::'a))}\n  finite C\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>b = lincomb c C;\n         \\<And>b. b \\<in> C \\<Longrightarrow> (0::'a) \\<le> c b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b = lincomb c C\n  ?b3 \\<in> C \\<Longrightarrow> (0::'a) \\<le> c ?b3\n\ngoal (2 subgoals):\n 1. b \\<in> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "let ?C = \"C - set N\""], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n 2. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "proof (intro exI[of _ ?C] conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. C - set N \\<subseteq> A\n 2. lin_indpt (C - set N)\n 3. card (C - set N) = dim_span A\n 4. b \\<in> finite_cone (C - set N)", "from subset_li_is_li[OF linC]"], ["proof (chain)\npicking this:\n  ?B \\<subseteq> C \\<Longrightarrow> lin_indpt ?B", "show \"lin_indpt ?C\""], ["proof (prove)\nusing this:\n  ?B \\<subseteq> C \\<Longrightarrow> lin_indpt ?B\n\ngoal (1 subgoal):\n 1. lin_indpt (C - set N)", "by auto"], ["proof (state)\nthis:\n  lin_indpt (C - set N)\n\ngoal (3 subgoals):\n 1. C - set N \\<subseteq> A\n 2. card (C - set N) = dim_span A\n 3. b \\<in> finite_cone (C - set N)", "show CA: \"?C \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C - set N \\<subseteq> A", "using CAN"], ["proof (prove)\nusing this:\n  C \\<subseteq> A \\<union> set N\n\ngoal (1 subgoal):\n 1. C - set N \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  C - set N \\<subseteq> A\n\ngoal (2 subgoals):\n 1. card (C - set N) = dim_span A\n 2. b \\<in> finite_cone (C - set N)", "have bc: \"b = lincomb c (?C \\<union> (C \\<inter> set N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = lincomb c (C - set N \\<union> C \\<inter> set N)", "unfolding bC"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb c C = lincomb c (C - set N \\<union> C \\<inter> set N)", "by (rule arg_cong[of _ _ \"lincomb _\"], auto)"], ["proof (state)\nthis:\n  b = lincomb c (C - set N \\<union> C \\<inter> set N)\n\ngoal (2 subgoals):\n 1. card (C - set N) = dim_span A\n 2. b \\<in> finite_cone (C - set N)", "have \"b = lincomb c (?C - C \\<inter> set N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = lincomb c (C - set N - C \\<inter> set N)", "proof (rule orthogonal_cone(2)[OF A N fin full_span'' orthA'N refl span\n              A'A linAN lenAN _ CA _ bc])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>w x.\n       \\<lbrakk>w \\<in> set N; x \\<in> set A'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set A'\n 2. \\<And>w x.\n       \\<lbrakk>w \\<in> set N; x \\<in> set A'\\<rbrakk>\n       \\<Longrightarrow> w \\<in> set N\n 3. \\<forall>w\\<in>set N. w \\<bullet> b = (0::'a)\n 4. C \\<inter> set N \\<subseteq> set N", "show \"\\<forall>w\\<in>set N. w \\<bullet> b = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>set N. w \\<bullet> b = (0::'a)", "using ortho_span'[OF A' N _ bspan[folded span]] orthA'N"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>w x.\n              \\<lbrakk>w \\<in> set A'; x \\<in> set N\\<rbrakk>\n              \\<Longrightarrow> x \\<bullet> w = (0::'a);\n   ?x \\<in> set N\\<rbrakk>\n  \\<Longrightarrow> ?x \\<bullet> b = (0::'a)\n  \\<lbrakk>?w3 \\<in> set A'; ?nv3 \\<in> set N\\<rbrakk>\n  \\<Longrightarrow> ?nv3 \\<bullet> ?w3 = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>set N. w \\<bullet> b = (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<forall>w\\<in>set N. w \\<bullet> b = (0::'a)\n\ngoal (3 subgoals):\n 1. \\<And>w x.\n       \\<lbrakk>w \\<in> set N; x \\<in> set A'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set A'\n 2. \\<And>w x.\n       \\<lbrakk>w \\<in> set N; x \\<in> set A'\\<rbrakk>\n       \\<Longrightarrow> w \\<in> set N\n 3. C \\<inter> set N \\<subseteq> set N", "qed auto"], ["proof (state)\nthis:\n  b = lincomb c (C - set N - C \\<inter> set N)\n\ngoal (2 subgoals):\n 1. card (C - set N) = dim_span A\n 2. b \\<in> finite_cone (C - set N)", "also"], ["proof (state)\nthis:\n  b = lincomb c (C - set N - C \\<inter> set N)\n\ngoal (2 subgoals):\n 1. card (C - set N) = dim_span A\n 2. b \\<in> finite_cone (C - set N)", "have \"?C - C \\<inter> set N = ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C - set N - C \\<inter> set N = C - set N", "by auto"], ["proof (state)\nthis:\n  C - set N - C \\<inter> set N = C - set N\n\ngoal (2 subgoals):\n 1. card (C - set N) = dim_span A\n 2. b \\<in> finite_cone (C - set N)", "finally"], ["proof (chain)\npicking this:\n  b = lincomb c (C - set N)", "have \"b = lincomb c ?C\""], ["proof (prove)\nusing this:\n  b = lincomb c (C - set N)\n\ngoal (1 subgoal):\n 1. b = lincomb c (C - set N)", "."], ["proof (state)\nthis:\n  b = lincomb c (C - set N)\n\ngoal (2 subgoals):\n 1. card (C - set N) = dim_span A\n 2. b \\<in> finite_cone (C - set N)", "with nonneg"], ["proof (chain)\npicking this:\n  ?b3 \\<in> C \\<Longrightarrow> (0::'a) \\<le> c ?b3\n  b = lincomb c (C - set N)", "have \"nonneg_lincomb c ?C b\""], ["proof (prove)\nusing this:\n  ?b3 \\<in> C \\<Longrightarrow> (0::'a) \\<le> c ?b3\n  b = lincomb c (C - set N)\n\ngoal (1 subgoal):\n 1. nonneg_lincomb c (C - set N) b", "unfolding nonneg_lincomb_def"], ["proof (prove)\nusing this:\n  ?b3 \\<in> C \\<Longrightarrow> (0::'a) \\<le> c ?b3\n  b = lincomb c (C - set N)\n\ngoal (1 subgoal):\n 1. lincomb c (C - set N) = b \\<and>\n    c ` (C - set N) \\<subseteq> Collect ((\\<le>) (0::'a))", "by auto"], ["proof (state)\nthis:\n  nonneg_lincomb c (C - set N) b\n\ngoal (2 subgoals):\n 1. card (C - set N) = dim_span A\n 2. b \\<in> finite_cone (C - set N)", "thus \"b \\<in> finite_cone ?C\""], ["proof (prove)\nusing this:\n  nonneg_lincomb c (C - set N) b\n\ngoal (1 subgoal):\n 1. b \\<in> finite_cone (C - set N)", "unfolding finite_cone_def"], ["proof (prove)\nusing this:\n  nonneg_lincomb c (C - set N) b\n\ngoal (1 subgoal):\n 1. b \\<in> {b. \\<exists>c.\n                   nonneg_lincomb c\n                    (if finite (C - set N) then C - set N else {}) b}", "using finite_subset[OF CA fin]"], ["proof (prove)\nusing this:\n  nonneg_lincomb c (C - set N) b\n  finite (C - set N)\n\ngoal (1 subgoal):\n 1. b \\<in> {b. \\<exists>c.\n                   nonneg_lincomb c\n                    (if finite (C - set N) then C - set N else {}) b}", "by auto"], ["proof (state)\nthis:\n  b \\<in> finite_cone (C - set N)\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "have Cid: \"C \\<inter> set N \\<union> ?C = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<inter> set N \\<union> (C - set N) = C", "by auto"], ["proof (state)\nthis:\n  C \\<inter> set N \\<union> (C - set N) = C\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "have \"length A' + length N = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length A' + length N = n", "by fact"], ["proof (state)\nthis:\n  length A' + length N = n\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "also"], ["proof (state)\nthis:\n  length A' + length N = n\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "have \"\\<dots> = card (C \\<inter> set N \\<union> ?C) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = card (C \\<inter> set N \\<union> (C - set N))", "using Cid cardC"], ["proof (prove)\nusing this:\n  C \\<inter> set N \\<union> (C - set N) = C\n  card C = n\n\ngoal (1 subgoal):\n 1. n = card (C \\<inter> set N \\<union> (C - set N))", "by auto"], ["proof (state)\nthis:\n  n = card (C \\<inter> set N \\<union> (C - set N))\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "also"], ["proof (state)\nthis:\n  n = card (C \\<inter> set N \\<union> (C - set N))\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "have \"\\<dots> = card (C \\<inter> set N) + card ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C \\<inter> set N \\<union> (C - set N)) =\n    card (C \\<inter> set N) + card (C - set N)", "by (subst card_Un_disjoint, insert finC, auto)"], ["proof (state)\nthis:\n  card (C \\<inter> set N \\<union> (C - set N)) =\n  card (C \\<inter> set N) + card (C - set N)\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "also"], ["proof (state)\nthis:\n  card (C \\<inter> set N \\<union> (C - set N)) =\n  card (C \\<inter> set N) + card (C - set N)\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "have \"\\<dots> \\<le> length N + card ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C \\<inter> set N) + card (C - set N)\n    \\<le> length N + card (C - set N)", "by (rule add_right_mono, rule order.trans, rule card_mono[OF finite_set[of N]],\n              auto intro: card_length)"], ["proof (state)\nthis:\n  card (C \\<inter> set N) + card (C - set N)\n  \\<le> length N + card (C - set N)\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "also"], ["proof (state)\nthis:\n  card (C \\<inter> set N) + card (C - set N)\n  \\<le> length N + card (C - set N)\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "have \"length A' = card (set A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length A' = card (set A')", "using lin[unfolded lin_indpt_list_def]\n            distinct_card[of A']"], ["proof (prove)\nusing this:\n  set A' \\<subseteq> carrier_vec n \\<and>\n  distinct A' \\<and> lin_indpt (set A')\n  distinct A' \\<Longrightarrow> card (set A') = length A'\n\ngoal (1 subgoal):\n 1. length A' = card (set A')", "by auto"], ["proof (state)\nthis:\n  length A' = card (set A')\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "finally"], ["proof (chain)\npicking this:\n  card (set A') + length N \\<le> length N + card (C - set N)", "have le: \"dim_span A \\<le> card ?C\""], ["proof (prove)\nusing this:\n  card (set A') + length N \\<le> length N + card (C - set N)\n\ngoal (1 subgoal):\n 1. dim_span A \\<le> card (C - set N)", "using dim_spanA"], ["proof (prove)\nusing this:\n  card (set A') + length N \\<le> length N + card (C - set N)\n  dim_span A = card (set A')\n\ngoal (1 subgoal):\n 1. dim_span A \\<le> card (C - set N)", "by auto"], ["proof (state)\nthis:\n  dim_span A \\<le> card (C - set N)\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "have CA: \"?C \\<subseteq> span A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C - set N \\<subseteq> local.span A", "using CA C in_own_span[OF A]"], ["proof (prove)\nusing this:\n  C - set N \\<subseteq> A\n  C \\<subseteq> carrier_vec n\n  A \\<subseteq> local.span A\n\ngoal (1 subgoal):\n 1. C - set N \\<subseteq> local.span A", "by auto"], ["proof (state)\nthis:\n  C - set N \\<subseteq> local.span A\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "have linC: \"lin_indpt ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt (C - set N)", "using subset_li_is_li[OF linC]"], ["proof (prove)\nusing this:\n  ?B \\<subseteq> C \\<Longrightarrow> lin_indpt ?B\n\ngoal (1 subgoal):\n 1. lin_indpt (C - set N)", "by auto"], ["proof (state)\nthis:\n  lin_indpt (C - set N)\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "show \"card ?C = dim_span A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "using card_le_dim_span[OF _ CA linC] le C"], ["proof (prove)\nusing this:\n  C - set N \\<subseteq> carrier_vec n \\<Longrightarrow>\n  card (C - set N) \\<le> dim_span A\n  dim_span A \\<le> card (C - set N)\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. card (C - set N) = dim_span A", "by force"], ["proof (state)\nthis:\n  card (C - set N) = dim_span A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A.\n     lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "case False"], ["proof (state)\nthis:\n  b \\<notin> cone (A \\<union> set N)\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from False[unfolded fundamental(2)] b"], ["proof (chain)\npicking this:\n  b \\<notin> {b \\<in> carrier_vec n.\n              \\<nexists>B c.\n                 B \\<subseteq> A \\<union> set N \\<and>\n                 c \\<in> {normal_vector B, - normal_vector B} \\<and>\n                 Suc (card B) = n \\<and>\n                 lin_indpt B \\<and>\n                 (\\<forall>a\\<^sub>i\\<in>A \\<union> set N.\n                     (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n                 c \\<bullet> b < (0::'a)}\n  b \\<in> carrier_vec n", "obtain C c where\n        CAN: \"C \\<subseteq> A \\<union> set N\"  and\n        cardC: \"Suc (card C) = n\"  and\n        linC: \"lin_indpt C\" and\n        contains: \"(\\<forall>a\\<^sub>i\\<in>A \\<union> set N. 0 \\<le> c \\<bullet> a\\<^sub>i)\" and\n        cb: \"c \\<bullet> b < 0\" and\n        nv: \"c \\<in> {normal_vector C, - normal_vector C}\""], ["proof (prove)\nusing this:\n  b \\<notin> {b \\<in> carrier_vec n.\n              \\<nexists>B c.\n                 B \\<subseteq> A \\<union> set N \\<and>\n                 c \\<in> {normal_vector B, - normal_vector B} \\<and>\n                 Suc (card B) = n \\<and>\n                 lin_indpt B \\<and>\n                 (\\<forall>a\\<^sub>i\\<in>A \\<union> set N.\n                     (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n                 c \\<bullet> b < (0::'a)}\n  b \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. (\\<And>C c.\n        \\<lbrakk>C \\<subseteq> A \\<union> set N; Suc (card C) = n;\n         lin_indpt C;\n         \\<forall>a\\<^sub>i\\<in>A \\<union> set N.\n            (0::'a) \\<le> c \\<bullet> a\\<^sub>i;\n         c \\<bullet> b < (0::'a);\n         c \\<in> {normal_vector C, - normal_vector C}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> A \\<union> set N\n  Suc (card C) = n\n  lin_indpt C\n  \\<forall>a\\<^sub>i\\<in>A \\<union> set N.\n     (0::'a) \\<le> c \\<bullet> a\\<^sub>i\n  c \\<bullet> b < (0::'a)\n  c \\<in> {normal_vector C, - normal_vector C}\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from CAN A N"], ["proof (chain)\npicking this:\n  C \\<subseteq> A \\<union> set N\n  A \\<subseteq> carrier_vec n\n  set N \\<subseteq> carrier_vec n", "have C: \"C \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  C \\<subseteq> A \\<union> set N\n  A \\<subseteq> carrier_vec n\n  set N \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. C \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from cardC"], ["proof (chain)\npicking this:\n  Suc (card C) = n", "have cardCn: \"card C < n\""], ["proof (prove)\nusing this:\n  Suc (card C) = n\n\ngoal (1 subgoal):\n 1. card C < n", "by auto"], ["proof (state)\nthis:\n  card C < n\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from finite_subset[OF CAN] fin"], ["proof (chain)\npicking this:\n  finite (A \\<union> set N) \\<Longrightarrow> finite C\n  finite A", "have finC: \"finite C\""], ["proof (prove)\nusing this:\n  finite (A \\<union> set N) \\<Longrightarrow> finite C\n  finite A\n\ngoal (1 subgoal):\n 1. finite C", "by auto"], ["proof (state)\nthis:\n  finite C\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "let ?C = \"C - set N\""], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "note nv' = normal_vector(1-4)[OF finC cardC linC C]"], ["proof (state)\nthis:\n  normal_vector C \\<in> carrier_vec n\n  normal_vector C \\<noteq> 0\\<^sub>v n\n  ?w \\<in> C \\<Longrightarrow> ?w \\<bullet> normal_vector C = (0::'a)\n  ?w \\<in> C \\<Longrightarrow> normal_vector C \\<bullet> ?w = (0::'a)\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "from nv' nv"], ["proof (chain)\npicking this:\n  normal_vector C \\<in> carrier_vec n\n  normal_vector C \\<noteq> 0\\<^sub>v n\n  ?w \\<in> C \\<Longrightarrow> ?w \\<bullet> normal_vector C = (0::'a)\n  ?w \\<in> C \\<Longrightarrow> normal_vector C \\<bullet> ?w = (0::'a)\n  c \\<in> {normal_vector C, - normal_vector C}", "have c: \"c \\<in> carrier_vec n\""], ["proof (prove)\nusing this:\n  normal_vector C \\<in> carrier_vec n\n  normal_vector C \\<noteq> 0\\<^sub>v n\n  ?w \\<in> C \\<Longrightarrow> ?w \\<bullet> normal_vector C = (0::'a)\n  ?w \\<in> C \\<Longrightarrow> normal_vector C \\<bullet> ?w = (0::'a)\n  c \\<in> {normal_vector C, - normal_vector C}\n\ngoal (1 subgoal):\n 1. c \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  c \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "have \"\\<exists> c A'. c \\<in> carrier_vec n \\<and> A' \\<subseteq> A \\<and> Suc (card A') = dim_span (insert b A)\n          \\<and> (\\<forall> a \\<in> A'. c \\<bullet> a = 0) \\<and> lin_indpt A' \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c A'.\n       c \\<in> carrier_vec n \\<and>\n       A' \\<subseteq> A \\<and>\n       Suc (card A') = dim_span (insert b A) \\<and>\n       (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n       lin_indpt A' \\<and>\n       (\\<forall>a\\<^sub>i\\<in>A.\n           (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n       c \\<bullet> b < (0::'a)", "proof (intro exI[of _ c] exI[of _ ?C] conjI cb c)"], ["proof (state)\ngoal (5 subgoals):\n 1. C - set N \\<subseteq> A\n 2. Suc (card (C - set N)) = dim_span (insert b A)\n 3. \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)\n 4. lin_indpt (C - set N)\n 5. \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i", "show CA: \"?C \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C - set N \\<subseteq> A", "using CAN"], ["proof (prove)\nusing this:\n  C \\<subseteq> A \\<union> set N\n\ngoal (1 subgoal):\n 1. C - set N \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  C - set N \\<subseteq> A\n\ngoal (4 subgoals):\n 1. Suc (card (C - set N)) = dim_span (insert b A)\n 2. \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)\n 3. lin_indpt (C - set N)\n 4. \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i", "show \"\\<forall>a\\<^sub>i\\<in>A. 0 \\<le> c \\<bullet> a\\<^sub>i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i", "using contains"], ["proof (prove)\nusing this:\n  \\<forall>a\\<^sub>i\\<in>A \\<union> set N.\n     (0::'a) \\<le> c \\<bullet> a\\<^sub>i\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i\n\ngoal (3 subgoals):\n 1. Suc (card (C - set N)) = dim_span (insert b A)\n 2. \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)\n 3. lin_indpt (C - set N)", "show lin': \"lin_indpt ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt (C - set N)", "using subset_li_is_li[OF linC]"], ["proof (prove)\nusing this:\n  ?B \\<subseteq> C \\<Longrightarrow> lin_indpt ?B\n\ngoal (1 subgoal):\n 1. lin_indpt (C - set N)", "by auto"], ["proof (state)\nthis:\n  lin_indpt (C - set N)\n\ngoal (2 subgoals):\n 1. Suc (card (C - set N)) = dim_span (insert b A)\n 2. \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)", "show sC0: \"\\<forall>a\\<in> ?C. c \\<bullet> a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)", "using nv' nv C"], ["proof (prove)\nusing this:\n  normal_vector C \\<in> carrier_vec n\n  normal_vector C \\<noteq> 0\\<^sub>v n\n  ?w \\<in> C \\<Longrightarrow> ?w \\<bullet> normal_vector C = (0::'a)\n  ?w \\<in> C \\<Longrightarrow> normal_vector C \\<bullet> ?w = (0::'a)\n  c \\<in> {normal_vector C, - normal_vector C}\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "have Cid: \"C \\<inter> set N \\<union> ?C = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<inter> set N \\<union> (C - set N) = C", "by auto"], ["proof (state)\nthis:\n  C \\<inter> set N \\<union> (C - set N) = C\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "have \"dim_span (set A') = card (set A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_span (set A') = card (set A')", "by (rule sym, rule same_span_imp_card_eq_dim_span[OF A' A' refl linA'])"], ["proof (state)\nthis:\n  dim_span (set A') = card (set A')\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "also"], ["proof (state)\nthis:\n  dim_span (set A') = card (set A')\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "have \"\\<dots> = length A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (set A') = length A'", "using lin[unfolded lin_indpt_list_def] distinct_card[of A']"], ["proof (prove)\nusing this:\n  set A' \\<subseteq> carrier_vec n \\<and>\n  distinct A' \\<and> lin_indpt (set A')\n  distinct A' \\<Longrightarrow> card (set A') = length A'\n\ngoal (1 subgoal):\n 1. card (set A') = length A'", "by auto"], ["proof (state)\nthis:\n  card (set A') = length A'\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "finally"], ["proof (chain)\npicking this:\n  dim_span (set A') = length A'", "have dimA': \"dim_span (set A') = length A'\""], ["proof (prove)\nusing this:\n  dim_span (set A') = length A'\n\ngoal (1 subgoal):\n 1. dim_span (set A') = length A'", "."], ["proof (state)\nthis:\n  dim_span (set A') = length A'\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "from bspan"], ["proof (chain)\npicking this:\n  b \\<in> local.span A", "have \"span (insert b A) = span A\""], ["proof (prove)\nusing this:\n  b \\<in> local.span A\n\ngoal (1 subgoal):\n 1. local.span (insert b A) = local.span A", "using b A"], ["proof (prove)\nusing this:\n  b \\<in> local.span A\n  b \\<in> carrier_vec n\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. local.span (insert b A) = local.span A", "using already_in_span"], ["proof (prove)\nusing this:\n  b \\<in> local.span A\n  b \\<in> carrier_vec n\n  A \\<subseteq> carrier_vec n\n  \\<lbrakk>?A \\<subseteq> carrier_vec n; ?v \\<in> local.span ?A\\<rbrakk>\n  \\<Longrightarrow> local.span ?A = local.span (?A \\<union> {?v})\n\ngoal (1 subgoal):\n 1. local.span (insert b A) = local.span A", "by auto"], ["proof (state)\nthis:\n  local.span (insert b A) = local.span A\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "from dim_span_cong[OF this[folded span]] dimA'"], ["proof (chain)\npicking this:\n  dim_span (insert b A) = dim_span (set A')\n  dim_span (set A') = length A'", "have dimbA: \"dim_span (insert b A) = length A'\""], ["proof (prove)\nusing this:\n  dim_span (insert b A) = dim_span (set A')\n  dim_span (set A') = length A'\n\ngoal (1 subgoal):\n 1. dim_span (insert b A) = length A'", "by simp"], ["proof (state)\nthis:\n  dim_span (insert b A) = length A'\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "also"], ["proof (state)\nthis:\n  dim_span (insert b A) = length A'\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "have \"\\<dots> = Suc (card ?C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length A' = Suc (card (C - set N))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "assume neq: \"length A' \\<noteq> Suc (card ?C)\""], ["proof (state)\nthis:\n  length A' \\<noteq> Suc (card (C - set N))\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "have \"length A' + length N = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length A' + length N = n", "by fact"], ["proof (state)\nthis:\n  length A' + length N = n\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  length A' + length N = n\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "have \"\\<dots> = Suc (card (C \\<inter> set N \\<union> ?C))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = Suc (card (C \\<inter> set N \\<union> (C - set N)))", "using Cid cardC"], ["proof (prove)\nusing this:\n  C \\<inter> set N \\<union> (C - set N) = C\n  Suc (card C) = n\n\ngoal (1 subgoal):\n 1. n = Suc (card (C \\<inter> set N \\<union> (C - set N)))", "by auto"], ["proof (state)\nthis:\n  n = Suc (card (C \\<inter> set N \\<union> (C - set N)))\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  n = Suc (card (C \\<inter> set N \\<union> (C - set N)))\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "have \"\\<dots> = Suc (card (C \\<inter> set N) + card ?C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (card (C \\<inter> set N \\<union> (C - set N))) =\n    Suc (card (C \\<inter> set N) + card (C - set N))", "by (subst card_Un_disjoint, insert finC, auto)"], ["proof (state)\nthis:\n  Suc (card (C \\<inter> set N \\<union> (C - set N))) =\n  Suc (card (C \\<inter> set N) + card (C - set N))\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  length A' + length N = Suc (card (C \\<inter> set N) + card (C - set N))", "have id: \"length A' + length N = Suc (card (C \\<inter> set N) + card ?C)\""], ["proof (prove)\nusing this:\n  length A' + length N = Suc (card (C \\<inter> set N) + card (C - set N))\n\ngoal (1 subgoal):\n 1. length A' + length N = Suc (card (C \\<inter> set N) + card (C - set N))", "."], ["proof (state)\nthis:\n  length A' + length N = Suc (card (C \\<inter> set N) + card (C - set N))\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "have le1: \"card (C \\<inter> set N) \\<le> length N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C \\<inter> set N) \\<le> length N", "by (metis Int_lower2 List.finite_set card_length card_mono inf.absorb_iff2 le_inf_iff)"], ["proof (state)\nthis:\n  card (C \\<inter> set N) \\<le> length N\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "from CA C A"], ["proof (chain)\npicking this:\n  C - set N \\<subseteq> A\n  C \\<subseteq> carrier_vec n\n  A \\<subseteq> carrier_vec n", "have CsA: \"?C \\<subseteq> span (set A')\""], ["proof (prove)\nusing this:\n  C - set N \\<subseteq> A\n  C \\<subseteq> carrier_vec n\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. C - set N \\<subseteq> local.span (set A')", "unfolding span"], ["proof (prove)\nusing this:\n  C - set N \\<subseteq> A\n  C \\<subseteq> carrier_vec n\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. C - set N \\<subseteq> local.span A", "by (meson in_own_span order.trans)"], ["proof (state)\nthis:\n  C - set N \\<subseteq> local.span (set A')\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "from card_le_dim_span[OF _ this lin'] C"], ["proof (chain)\npicking this:\n  C - set N \\<subseteq> carrier_vec n \\<Longrightarrow>\n  card (C - set N) \\<le> dim_span (set A')\n  C \\<subseteq> carrier_vec n", "have le2: \"card ?C \\<le> length A'\""], ["proof (prove)\nusing this:\n  C - set N \\<subseteq> carrier_vec n \\<Longrightarrow>\n  card (C - set N) \\<le> dim_span (set A')\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. card (C - set N) \\<le> length A'", "unfolding dimA'"], ["proof (prove)\nusing this:\n  C - set N \\<subseteq> carrier_vec n \\<Longrightarrow>\n  card (C - set N) \\<le> length A'\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. card (C - set N) \\<le> length A'", "by auto"], ["proof (state)\nthis:\n  card (C - set N) \\<le> length A'\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "from id le1 le2 neq"], ["proof (chain)\npicking this:\n  length A' + length N = Suc (card (C \\<inter> set N) + card (C - set N))\n  card (C \\<inter> set N) \\<le> length N\n  card (C - set N) \\<le> length A'\n  length A' \\<noteq> Suc (card (C - set N))", "have id2: \"card ?C = length A'\""], ["proof (prove)\nusing this:\n  length A' + length N = Suc (card (C \\<inter> set N) + card (C - set N))\n  card (C \\<inter> set N) \\<le> length N\n  card (C - set N) \\<le> length A'\n  length A' \\<noteq> Suc (card (C - set N))\n\ngoal (1 subgoal):\n 1. card (C - set N) = length A'", "by linarith+"], ["proof (state)\nthis:\n  card (C - set N) = length A'\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "from card_eq_dim_span_imp_same_span[OF A' CsA lin' id2[folded dimA']]"], ["proof (chain)\npicking this:\n  local.span (C - set N) = local.span (set A')", "have \"span ?C = span A\""], ["proof (prove)\nusing this:\n  local.span (C - set N) = local.span (set A')\n\ngoal (1 subgoal):\n 1. local.span (C - set N) = local.span A", "unfolding span"], ["proof (prove)\nusing this:\n  local.span (C - set N) = local.span A\n\ngoal (1 subgoal):\n 1. local.span (C - set N) = local.span A", "by auto"], ["proof (state)\nthis:\n  local.span (C - set N) = local.span A\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "with bspan"], ["proof (chain)\npicking this:\n  b \\<in> local.span A\n  local.span (C - set N) = local.span A", "have \"b \\<in> span ?C\""], ["proof (prove)\nusing this:\n  b \\<in> local.span A\n  local.span (C - set N) = local.span A\n\ngoal (1 subgoal):\n 1. b \\<in> local.span (C - set N)", "by auto"], ["proof (state)\nthis:\n  b \\<in> local.span (C - set N)\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "from orthocompl_span[OF _ _ c this] C sC0"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x.\n              x \\<in> C - set N \\<Longrightarrow> c \\<bullet> x = (0::'a);\n   C - set N \\<subseteq> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> c \\<bullet> b = (0::'a)\n  C \\<subseteq> carrier_vec n\n  \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)", "have \"c \\<bullet> b = 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x.\n              x \\<in> C - set N \\<Longrightarrow> c \\<bullet> x = (0::'a);\n   C - set N \\<subseteq> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> c \\<bullet> b = (0::'a)\n  C \\<subseteq> carrier_vec n\n  \\<forall>a\\<in>C - set N. c \\<bullet> a = (0::'a)\n\ngoal (1 subgoal):\n 1. c \\<bullet> b = (0::'a)", "by auto"], ["proof (state)\nthis:\n  c \\<bullet> b = (0::'a)\n\ngoal (1 subgoal):\n 1. length A' \\<noteq> Suc (card (C - set N)) \\<Longrightarrow> False", "with cb"], ["proof (chain)\npicking this:\n  c \\<bullet> b < (0::'a)\n  c \\<bullet> b = (0::'a)", "show False"], ["proof (prove)\nusing this:\n  c \\<bullet> b < (0::'a)\n  c \\<bullet> b = (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  length A' = Suc (card (C - set N))\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "finally"], ["proof (chain)\npicking this:\n  dim_span (insert b A) = Suc (card (C - set N))", "show \"Suc (card ?C) = dim_span (insert b A)\""], ["proof (prove)\nusing this:\n  dim_span (insert b A) = Suc (card (C - set N))\n\ngoal (1 subgoal):\n 1. Suc (card (C - set N)) = dim_span (insert b A)", "by simp"], ["proof (state)\nthis:\n  Suc (card (C - set N)) = dim_span (insert b A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "with assms(4)"], ["proof (chain)\npicking this:\n  \\<nexists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n  \\<exists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)", "have False"], ["proof (prove)\nusing this:\n  \\<nexists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n  \\<exists>c A'.\n     c \\<in> carrier_vec n \\<and>\n     A' \\<subseteq> A \\<and>\n     Suc (card A') = dim_span (insert b A) \\<and>\n     (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n     lin_indpt A' \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> b < (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. b \\<notin> cone (A \\<union> set N) \\<Longrightarrow>\n    \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B", ".."], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A.\n     lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A.\n     lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A.\n     lin_indpt B \\<and> card B = dim_span A \\<and> b \\<in> finite_cone B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fundamental_theorem_of_linear_inequalities: fixes A :: \"'a vec set\"\n  defines \"HyperN \\<equiv> {b. b \\<in> carrier_vec n \\<and> (\\<nexists> c B. c \\<in> carrier_vec n \\<and> B \\<subseteq> A\n      \\<and> Suc (card B) = dim_span (insert b A) \\<and> lin_indpt B\n      \\<and> (\\<forall> a \\<in> B. c \\<bullet> a = 0)\n      \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0)}\"\n  defines \"HyperA \\<equiv> {b. b \\<in> carrier_vec n \\<and> (\\<nexists> c. c \\<in> carrier_vec n \\<and> (\\<forall> a\\<^sub>i \\<in> A. c \\<bullet> a\\<^sub>i \\<ge> 0) \\<and> c \\<bullet> b < 0)}\"\n  defines \"lin_indpt_cone \\<equiv> \\<Union> { finite_cone B | B. B \\<subseteq> A \\<and> card B = dim_span A \\<and> lin_indpt B}\"\n  assumes A: \"A \\<subseteq> carrier_vec n\"\n    and fin: \"finite A\"\n  shows\n    \"cone A = lin_indpt_cone\"\n    \"cone A = HyperN\"\n    \"cone A = HyperA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cone A = lin_indpt_cone &&& cone A = HyperN &&& cone A = HyperA", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "have \"lin_indpt_cone \\<subseteq> cone A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt_cone \\<subseteq> cone A", "unfolding lin_indpt_cone_def cone_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     {finite_cone B |B.\n      B \\<subseteq> A \\<and> card B = dim_span A \\<and> lin_indpt B}\n    \\<subseteq> {x. \\<exists>Ws.\n                       finite Ws \\<and>\n                       Ws \\<subseteq> A \\<and> x \\<in> finite_cone Ws}", "using fin finite_cone_mono A"], ["proof (prove)\nusing this:\n  finite A\n  \\<lbrakk>finite ?Ws; ?Ws \\<subseteq> carrier_vec n;\n   ?Vs \\<subseteq> ?Ws\\<rbrakk>\n  \\<Longrightarrow> finite_cone ?Vs \\<subseteq> finite_cone ?Ws\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<Union>\n     {finite_cone B |B.\n      B \\<subseteq> A \\<and> card B = dim_span A \\<and> lin_indpt B}\n    \\<subseteq> {x. \\<exists>Ws.\n                       finite Ws \\<and>\n                       Ws \\<subseteq> A \\<and> x \\<in> finite_cone Ws}", "by auto"], ["proof (state)\nthis:\n  lin_indpt_cone \\<subseteq> cone A\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "moreover"], ["proof (state)\nthis:\n  lin_indpt_cone \\<subseteq> cone A\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "have \"cone A \\<subseteq> HyperA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cone A \\<subseteq> HyperA", "using fundamental_theorem_of_linear_inequalities_A_imp_D[OF A fin] cone_carrier[OF A]"], ["proof (prove)\nusing this:\n  ?b \\<in> cone A \\<Longrightarrow>\n  \\<nexists>c.\n     c \\<in> carrier_vec n \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> ?b < (0::'a)\n  cone A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. cone A \\<subseteq> HyperA", "unfolding HyperA_def"], ["proof (prove)\nusing this:\n  ?b \\<in> cone A \\<Longrightarrow>\n  \\<nexists>c.\n     c \\<in> carrier_vec n \\<and>\n     (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n     c \\<bullet> ?b < (0::'a)\n  cone A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> {b \\<in> carrier_vec n.\n                 \\<nexists>c.\n                    c \\<in> carrier_vec n \\<and>\n                    (\\<forall>a\\<^sub>i\\<in>A.\n                        (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n                    c \\<bullet> b < (0::'a)}", "by blast"], ["proof (state)\nthis:\n  cone A \\<subseteq> HyperA\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "moreover"], ["proof (state)\nthis:\n  cone A \\<subseteq> HyperA\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "have \"HyperA \\<subseteq> HyperN\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HyperA \\<subseteq> HyperN", "unfolding HyperA_def HyperN_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {b \\<in> carrier_vec n.\n     \\<nexists>c.\n        c \\<in> carrier_vec n \\<and>\n        (\\<forall>a\\<^sub>i\\<in>A.\n            (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n        c \\<bullet> b < (0::'a)}\n    \\<subseteq> {b \\<in> carrier_vec n.\n                 \\<nexists>c B.\n                    c \\<in> carrier_vec n \\<and>\n                    B \\<subseteq> A \\<and>\n                    Suc (card B) = dim_span (insert b A) \\<and>\n                    lin_indpt B \\<and>\n                    (\\<forall>a\\<in>B. c \\<bullet> a = (0::'a)) \\<and>\n                    (\\<forall>a\\<^sub>i\\<in>A.\n                        (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n                    c \\<bullet> b < (0::'a)}", "by blast"], ["proof (state)\nthis:\n  HyperA \\<subseteq> HyperN\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "moreover"], ["proof (state)\nthis:\n  HyperA \\<subseteq> HyperN\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "have \"HyperN \\<subseteq> lin_indpt_cone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HyperN \\<subseteq> lin_indpt_cone", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperN \\<Longrightarrow> x \\<in> lin_indpt_cone", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperN \\<Longrightarrow> x \\<in> lin_indpt_cone", "assume \"b \\<in> HyperN\""], ["proof (state)\nthis:\n  b \\<in> HyperN\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> HyperN \\<Longrightarrow> x \\<in> lin_indpt_cone", "from this[unfolded HyperN_def]\n      fundamental_theorem_of_linear_inequalities_C_imp_B[OF A fin, of b]"], ["proof (chain)\npicking this:\n  b \\<in> {b \\<in> carrier_vec n.\n           \\<nexists>c B.\n              c \\<in> carrier_vec n \\<and>\n              B \\<subseteq> A \\<and>\n              Suc (card B) = dim_span (insert b A) \\<and>\n              lin_indpt B \\<and>\n              (\\<forall>a\\<in>B. c \\<bullet> a = (0::'a)) \\<and>\n              (\\<forall>a\\<^sub>i\\<in>A.\n                  (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n              c \\<bullet> b < (0::'a)}\n  \\<lbrakk>b \\<in> carrier_vec n;\n   \\<nexists>c A'.\n      c \\<in> carrier_vec n \\<and>\n      A' \\<subseteq> A \\<and>\n      Suc (card A') = dim_span (insert b A) \\<and>\n      (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n      lin_indpt A' \\<and>\n      (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n      c \\<bullet> b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>A.\n                       lin_indpt B \\<and>\n                       card B = dim_span A \\<and> b \\<in> finite_cone B", "show \"b \\<in> lin_indpt_cone\""], ["proof (prove)\nusing this:\n  b \\<in> {b \\<in> carrier_vec n.\n           \\<nexists>c B.\n              c \\<in> carrier_vec n \\<and>\n              B \\<subseteq> A \\<and>\n              Suc (card B) = dim_span (insert b A) \\<and>\n              lin_indpt B \\<and>\n              (\\<forall>a\\<in>B. c \\<bullet> a = (0::'a)) \\<and>\n              (\\<forall>a\\<^sub>i\\<in>A.\n                  (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n              c \\<bullet> b < (0::'a)}\n  \\<lbrakk>b \\<in> carrier_vec n;\n   \\<nexists>c A'.\n      c \\<in> carrier_vec n \\<and>\n      A' \\<subseteq> A \\<and>\n      Suc (card A') = dim_span (insert b A) \\<and>\n      (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n      lin_indpt A' \\<and>\n      (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n      c \\<bullet> b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>A.\n                       lin_indpt B \\<and>\n                       card B = dim_span A \\<and> b \\<in> finite_cone B\n\ngoal (1 subgoal):\n 1. b \\<in> lin_indpt_cone", "unfolding lin_indpt_cone_def"], ["proof (prove)\nusing this:\n  b \\<in> {b \\<in> carrier_vec n.\n           \\<nexists>c B.\n              c \\<in> carrier_vec n \\<and>\n              B \\<subseteq> A \\<and>\n              Suc (card B) = dim_span (insert b A) \\<and>\n              lin_indpt B \\<and>\n              (\\<forall>a\\<in>B. c \\<bullet> a = (0::'a)) \\<and>\n              (\\<forall>a\\<^sub>i\\<in>A.\n                  (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n              c \\<bullet> b < (0::'a)}\n  \\<lbrakk>b \\<in> carrier_vec n;\n   \\<nexists>c A'.\n      c \\<in> carrier_vec n \\<and>\n      A' \\<subseteq> A \\<and>\n      Suc (card A') = dim_span (insert b A) \\<and>\n      (\\<forall>a\\<in>A'. c \\<bullet> a = (0::'a)) \\<and>\n      lin_indpt A' \\<and>\n      (\\<forall>a\\<^sub>i\\<in>A. (0::'a) \\<le> c \\<bullet> a\\<^sub>i) \\<and>\n      c \\<bullet> b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>A.\n                       lin_indpt B \\<and>\n                       card B = dim_span A \\<and> b \\<in> finite_cone B\n\ngoal (1 subgoal):\n 1. b \\<in> \\<Union>\n             {finite_cone B |B.\n              B \\<subseteq> A \\<and> card B = dim_span A \\<and> lin_indpt B}", "by blast"], ["proof (state)\nthis:\n  b \\<in> lin_indpt_cone\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  HyperN \\<subseteq> lin_indpt_cone\n\ngoal (3 subgoals):\n 1. cone A = lin_indpt_cone\n 2. cone A = HyperN\n 3. cone A = HyperA", "ultimately"], ["proof (chain)\npicking this:\n  lin_indpt_cone \\<subseteq> cone A\n  cone A \\<subseteq> HyperA\n  HyperA \\<subseteq> HyperN\n  HyperN \\<subseteq> lin_indpt_cone", "show\n    \"cone A = lin_indpt_cone\"\n    \"cone A = HyperN\"\n    \"cone A = HyperA\""], ["proof (prove)\nusing this:\n  lin_indpt_cone \\<subseteq> cone A\n  cone A \\<subseteq> HyperA\n  HyperA \\<subseteq> HyperN\n  HyperN \\<subseteq> lin_indpt_cone\n\ngoal (1 subgoal):\n 1. cone A = lin_indpt_cone &&& cone A = HyperN &&& cone A = HyperA", "by auto"], ["proof (state)\nthis:\n  cone A = lin_indpt_cone\n  cone A = HyperN\n  cone A = HyperA\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary Caratheodory_theorem: assumes A: \"A \\<subseteq> carrier_vec n\"\n  shows \"cone A = \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cone A = \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n 2. \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n    \\<subseteq> cone A", "show \"\\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B} \\<subseteq> cone A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n    \\<subseteq> cone A", "unfolding cone_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n    \\<subseteq> {x. \\<exists>Ws.\n                       finite Ws \\<and>\n                       Ws \\<subseteq> A \\<and> x \\<in> finite_cone Ws}", "using fin[OF fin_dim _ subset_trans[OF _ A]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>lin_indpt ?A; ?A \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n    \\<subseteq> {x. \\<exists>Ws.\n                       finite Ws \\<and>\n                       Ws \\<subseteq> A \\<and> x \\<in> finite_cone Ws}", "by auto"], ["proof (state)\nthis:\n  \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n  \\<subseteq> cone A\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "{"], ["proof (state)\nthis:\n  \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n  \\<subseteq> cone A\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "assume \"a \\<in> cone A\""], ["proof (state)\nthis:\n  a \\<in> cone A\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "from this[unfolded cone_def]"], ["proof (chain)\npicking this:\n  a \\<in> {x. \\<exists>Ws.\n                 finite Ws \\<and>\n                 Ws \\<subseteq> A \\<and> x \\<in> finite_cone Ws}", "obtain B where \n      finB: \"finite B\" and BA: \"B \\<subseteq> A\" and a: \"a \\<in> finite_cone B\""], ["proof (prove)\nusing this:\n  a \\<in> {x. \\<exists>Ws.\n                 finite Ws \\<and>\n                 Ws \\<subseteq> A \\<and> x \\<in> finite_cone Ws}\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>finite B; B \\<subseteq> A; a \\<in> finite_cone B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite B\n  B \\<subseteq> A\n  a \\<in> finite_cone B\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "from BA A"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  A \\<subseteq> carrier_vec n", "have B: \"B \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  A \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "hence \"a \\<in> cone B\""], ["proof (prove)\nusing this:\n  B \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. a \\<in> cone B", "using finB a"], ["proof (prove)\nusing this:\n  B \\<subseteq> carrier_vec n\n  finite B\n  a \\<in> finite_cone B\n\ngoal (1 subgoal):\n 1. a \\<in> cone B", "by (simp add: cone_iff_finite_cone)"], ["proof (state)\nthis:\n  a \\<in> cone B\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "with fundamental_theorem_of_linear_inequalities(1)[OF B finB]"], ["proof (chain)\npicking this:\n  cone B =\n  \\<Union>\n   {finite_cone Ba |Ba.\n    Ba \\<subseteq> B \\<and> card Ba = dim_span B \\<and> lin_indpt Ba}\n  a \\<in> cone B", "obtain C where CB: \"C \\<subseteq> B\" and a: \"a \\<in> finite_cone C\" and \"lin_indpt C\""], ["proof (prove)\nusing this:\n  cone B =\n  \\<Union>\n   {finite_cone Ba |Ba.\n    Ba \\<subseteq> B \\<and> card Ba = dim_span B \\<and> lin_indpt Ba}\n  a \\<in> cone B\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<subseteq> B; a \\<in> finite_cone C;\n         lin_indpt C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> B\n  a \\<in> finite_cone C\n  lin_indpt C\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "with BA"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  C \\<subseteq> B\n  a \\<in> finite_cone C\n  lin_indpt C", "have \"a \\<in> \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  C \\<subseteq> B\n  a \\<in> finite_cone C\n  lin_indpt C\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "by auto"], ["proof (state)\nthis:\n  a \\<in> \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "}"], ["proof (state)\nthis:\n  ?a5 \\<in> cone A \\<Longrightarrow>\n  ?a5 \\<in> \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "thus \"\\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B} \\<supseteq> cone A\""], ["proof (prove)\nusing this:\n  ?a5 \\<in> cone A \\<Longrightarrow>\n  ?a5 \\<in> \\<Union> {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n\ngoal (1 subgoal):\n 1. cone A\n    \\<subseteq> \\<Union>\n                 {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}", "by blast"], ["proof (state)\nthis:\n  cone A\n  \\<subseteq> \\<Union>\n               {finite_cone B |B. B \\<subseteq> A \\<and> lin_indpt B}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}