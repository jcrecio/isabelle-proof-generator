{"file_name": "/home/qj213/afp-2021-10-22/thys/Linear_Inequalities/Integer_Hull.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Linear_Inequalities", "problem_names": ["lemma integer_hull_mono: \"P \\<subseteq> Q \\<Longrightarrow> integer_hull P \\<subseteq> integer_hull Q\"", "lemma abs_neg_floor: \"\\<bar>of_int b\\<bar> \\<le> Bnd \\<Longrightarrow> - (floor Bnd) \\<le> b\"", "lemma abs_pos_floor: \"\\<bar>of_int b\\<bar> \\<le> Bnd \\<Longrightarrow> b \\<le> floor Bnd\"", "lemma integer_hull_integer_cone: assumes C: \"C \\<subseteq> carrier_vec n\" \n  and CI: \"C \\<subseteq> \\<int>\\<^sub>v\"\n  shows \"integer_hull (cone C) = cone C\"", "theorem decomposition_theorem_integer_hull_of_polyhedron: assumes A: \"A \\<in> carrier_mat nr n\"\n  and b: \"b \\<in> carrier_vec nr\"\n  and AI: \"A \\<in> \\<int>\\<^sub>m\"\n  and bI: \"b \\<in> \\<int>\\<^sub>v\"\n  and P: \"P = polyhedron A b\"\n  and Bnd: \"Bnd = Max (abs ` (elements_mat A \\<union> vec_set b))\"\nshows \"\\<exists> H C. H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \n  \\<and> H \\<subseteq> Bounded_vec (fact (n+1) * (max 1 Bnd)^n)\n  \\<and> C \\<subseteq> Bounded_vec (fact n * (max 1 Bnd)^n)\n  \\<and> finite (H \\<union> C) \n  \\<and> integer_hull P = convex_hull H + cone C\""], "translations": [["", "lemma integer_hull_mono: \"P \\<subseteq> Q \\<Longrightarrow> integer_hull P \\<subseteq> integer_hull Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> Q \\<Longrightarrow>\n    integer_hull P \\<subseteq> integer_hull Q", "unfolding integer_hull_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> Q \\<Longrightarrow>\n    convex_hull (P \\<inter> \\<int>\\<^sub>v)\n    \\<subseteq> convex_hull (Q \\<inter> \\<int>\\<^sub>v)", "by (intro convex_hull_mono, auto)"], ["", "end"], ["", "lemma abs_neg_floor: \"\\<bar>of_int b\\<bar> \\<le> Bnd \\<Longrightarrow> - (floor Bnd) \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>of_int b\\<bar> \\<le> Bnd \\<Longrightarrow>\n    - \\<lfloor>Bnd\\<rfloor> \\<le> b", "using abs_le_D2 floor_mono"], ["proof (prove)\nusing this:\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> - ?a \\<le> ?b\n  ?x \\<le> ?y \\<Longrightarrow>\n  \\<lfloor>?x\\<rfloor> \\<le> \\<lfloor>?y\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<bar>of_int b\\<bar> \\<le> Bnd \\<Longrightarrow>\n    - \\<lfloor>Bnd\\<rfloor> \\<le> b", "by fastforce"], ["", "lemma abs_pos_floor: \"\\<bar>of_int b\\<bar> \\<le> Bnd \\<Longrightarrow> b \\<le> floor Bnd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>of_int b\\<bar> \\<le> Bnd \\<Longrightarrow>\n    b \\<le> \\<lfloor>Bnd\\<rfloor>", "using abs_le_D1 le_floor_iff"], ["proof (prove)\nusing this:\n  \\<bar>?a\\<bar> \\<le> ?b \\<Longrightarrow> ?a \\<le> ?b\n  (?z \\<le> \\<lfloor>?x\\<rfloor>) = (of_int ?z \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<bar>of_int b\\<bar> \\<le> Bnd \\<Longrightarrow>\n    b \\<le> \\<lfloor>Bnd\\<rfloor>", "by auto"], ["", "context gram_schmidt_floor\nbegin"], ["", "lemma integer_hull_integer_cone: assumes C: \"C \\<subseteq> carrier_vec n\" \n  and CI: \"C \\<subseteq> \\<int>\\<^sub>v\"\n  shows \"integer_hull (cone C) = cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integer_hull (cone C) = cone C", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. integer_hull (cone C) \\<subseteq> cone C\n 2. cone C \\<subseteq> integer_hull (cone C)", "have \"cone C \\<inter> \\<int>\\<^sub>v \\<subseteq> cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cone C \\<inter> \\<int>\\<^sub>v \\<subseteq> cone C", "by blast"], ["proof (state)\nthis:\n  cone C \\<inter> \\<int>\\<^sub>v \\<subseteq> cone C\n\ngoal (2 subgoals):\n 1. integer_hull (cone C) \\<subseteq> cone C\n 2. cone C \\<subseteq> integer_hull (cone C)", "thus \"integer_hull (cone C) \\<subseteq> cone C\""], ["proof (prove)\nusing this:\n  cone C \\<inter> \\<int>\\<^sub>v \\<subseteq> cone C\n\ngoal (1 subgoal):\n 1. integer_hull (cone C) \\<subseteq> cone C", "using cone_cone[OF C] convex_cone[OF C] convex_hull_mono"], ["proof (prove)\nusing this:\n  cone C \\<inter> \\<int>\\<^sub>v \\<subseteq> cone C\n  cone (cone C) = cone C\n  convex (cone C)\n  ?Vs \\<subseteq> ?Ws \\<Longrightarrow>\n  convex_hull ?Vs \\<subseteq> convex_hull ?Ws\n\ngoal (1 subgoal):\n 1. integer_hull (cone C) \\<subseteq> cone C", "unfolding integer_hull_def convex_def"], ["proof (prove)\nusing this:\n  cone C \\<inter> \\<int>\\<^sub>v \\<subseteq> cone C\n  cone (cone C) = cone C\n  convex_hull (cone C) = cone C\n  ?Vs \\<subseteq> ?Ws \\<Longrightarrow>\n  convex_hull ?Vs \\<subseteq> convex_hull ?Ws\n\ngoal (1 subgoal):\n 1. convex_hull (cone C \\<inter> \\<int>\\<^sub>v) \\<subseteq> cone C", "by metis"], ["proof (state)\nthis:\n  integer_hull (cone C) \\<subseteq> cone C\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "{"], ["proof (state)\nthis:\n  integer_hull (cone C) \\<subseteq> cone C\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "assume \"x \\<in> cone C\""], ["proof (state)\nthis:\n  x \\<in> cone C\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "then"], ["proof (chain)\npicking this:\n  x \\<in> cone C", "obtain D where finD: \"finite D\" and DC: \"D \\<subseteq> C\" and x: \"x \\<in> finite_cone D\""], ["proof (prove)\nusing this:\n  x \\<in> cone C\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>finite D; D \\<subseteq> C; x \\<in> finite_cone D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cone_def"], ["proof (prove)\nusing this:\n  x \\<in> {x. \\<exists>Ws.\n                 finite Ws \\<and>\n                 Ws \\<subseteq> C \\<and> x \\<in> finite_cone Ws}\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>finite D; D \\<subseteq> C; x \\<in> finite_cone D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite D\n  D \\<subseteq> C\n  x \\<in> finite_cone D\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "from DC C CI"], ["proof (chain)\npicking this:\n  D \\<subseteq> C\n  C \\<subseteq> carrier_vec n\n  C \\<subseteq> \\<int>\\<^sub>v", "have D: \"D \\<subseteq> carrier_vec n\" and DI: \"D \\<subseteq> \\<int>\\<^sub>v\""], ["proof (prove)\nusing this:\n  D \\<subseteq> C\n  C \\<subseteq> carrier_vec n\n  C \\<subseteq> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. D \\<subseteq> carrier_vec n &&& D \\<subseteq> \\<int>\\<^sub>v", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> carrier_vec n\n  D \\<subseteq> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "from D x finD"], ["proof (chain)\npicking this:\n  D \\<subseteq> carrier_vec n\n  x \\<in> finite_cone D\n  finite D", "have \"x \\<in> finite_cone (D \\<union> {0\\<^sub>v n})\""], ["proof (prove)\nusing this:\n  D \\<subseteq> carrier_vec n\n  x \\<in> finite_cone D\n  finite D\n\ngoal (1 subgoal):\n 1. x \\<in> finite_cone (D \\<union> {0\\<^sub>v n})", "using finite_cone_mono[of \"D \\<union> {0\\<^sub>v n}\" D]"], ["proof (prove)\nusing this:\n  D \\<subseteq> carrier_vec n\n  x \\<in> finite_cone D\n  finite D\n  \\<lbrakk>finite (D \\<union> {0\\<^sub>v n});\n   D \\<union> {0\\<^sub>v n} \\<subseteq> carrier_vec n;\n   D \\<subseteq> D \\<union> {0\\<^sub>v n}\\<rbrakk>\n  \\<Longrightarrow> finite_cone D\n                    \\<subseteq> finite_cone (D \\<union> {0\\<^sub>v n})\n\ngoal (1 subgoal):\n 1. x \\<in> finite_cone (D \\<union> {0\\<^sub>v n})", "by auto"], ["proof (state)\nthis:\n  x \\<in> finite_cone (D \\<union> {0\\<^sub>v n})\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "then"], ["proof (chain)\npicking this:\n  x \\<in> finite_cone (D \\<union> {0\\<^sub>v n})", "obtain l where x: \"lincomb l (D \\<union> {0\\<^sub>v n}) = x\"\n                  and l: \"l ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. t \\<ge> 0}\""], ["proof (prove)\nusing this:\n  x \\<in> finite_cone (D \\<union> {0\\<^sub>v n})\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>lincomb l (D \\<union> {0\\<^sub>v n}) = x;\n         l ` (D \\<union> {0\\<^sub>v n})\n         \\<subseteq> {t. (0::'a) \\<le> t}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finD"], ["proof (prove)\nusing this:\n  x \\<in> finite_cone (D \\<union> {0\\<^sub>v n})\n  finite D\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>lincomb l (D \\<union> {0\\<^sub>v n}) = x;\n         l ` (D \\<union> {0\\<^sub>v n})\n         \\<subseteq> {t. (0::'a) \\<le> t}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finite_cone_def nonneg_lincomb_def"], ["proof (prove)\nusing this:\n  x \\<in> {b. \\<exists>c.\n                 lincomb c\n                  (if finite (D \\<union> {0\\<^sub>v n})\n                   then D \\<union> {0\\<^sub>v n} else {}) =\n                 b \\<and>\n                 c `\n                 (if finite (D \\<union> {0\\<^sub>v n})\n                  then D \\<union> {0\\<^sub>v n} else {})\n                 \\<subseteq> Collect ((\\<le>) (0::'a))}\n  finite D\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>lincomb l (D \\<union> {0\\<^sub>v n}) = x;\n         l ` (D \\<union> {0\\<^sub>v n})\n         \\<subseteq> {t. (0::'a) \\<le> t}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lincomb l (D \\<union> {0\\<^sub>v n}) = x\n  l ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. (0::'a) \\<le> t}\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "define L where \"L = sum l (D \\<union> {0\\<^sub>v n})\""], ["proof (state)\nthis:\n  L = sum l (D \\<union> {0\\<^sub>v n})\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "define L_sup :: 'a where \"L_sup = of_int (floor L + 1)\""], ["proof (state)\nthis:\n  L_sup = of_int (\\<lfloor>L\\<rfloor> + 1)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"L_sup \\<ge> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<le> L_sup", "using floor_correct[of L]"], ["proof (prove)\nusing this:\n  of_int \\<lfloor>L\\<rfloor> \\<le> L \\<and>\n  L < of_int (\\<lfloor>L\\<rfloor> + 1)\n\ngoal (1 subgoal):\n 1. L \\<le> L_sup", "unfolding L_sup_def"], ["proof (prove)\nusing this:\n  of_int \\<lfloor>L\\<rfloor> \\<le> L \\<and>\n  L < of_int (\\<lfloor>L\\<rfloor> + 1)\n\ngoal (1 subgoal):\n 1. L \\<le> of_int (\\<lfloor>L\\<rfloor> + 1)", "by linarith"], ["proof (state)\nthis:\n  L \\<le> L_sup\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"L \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> L", "unfolding L_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum l (D \\<union> {0\\<^sub>v n})", "using sum_nonneg[of _ l] l"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x \\<in> ?A \\<Longrightarrow> (0::'a) \\<le> l x) \\<Longrightarrow>\n  (0::'a) \\<le> sum l ?A\n  l ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. (0::'a) \\<le> t}\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum l (D \\<union> {0\\<^sub>v n})", "by blast"], ["proof (state)\nthis:\n  (0::'a) \\<le> L\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "hence \"L_sup \\<ge> 1\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> L\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> L_sup", "unfolding L_sup_def"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> L\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> of_int (\\<lfloor>L\\<rfloor> + 1)", "by simp"], ["proof (state)\nthis:\n  (1::'a) \\<le> L_sup\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "hence \"L_sup > 0\""], ["proof (prove)\nusing this:\n  (1::'a) \\<le> L_sup\n\ngoal (1 subgoal):\n 1. (0::'a) < L_sup", "by fastforce"], ["proof (state)\nthis:\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "let ?f = \"\\<lambda> y. if y = 0\\<^sub>v n then L_sup - L else 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"lincomb ?f {0\\<^sub>v n} = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n     {0\\<^sub>v n} =\n    0\\<^sub>v n", "using already_in_span[of \"{}\" \"0\\<^sub>v n\"] lincomb_in_span local.span_empty"], ["proof (prove)\nusing this:\n  \\<lbrakk>{} \\<subseteq> carrier_vec n;\n   0\\<^sub>v n \\<in> local.span {}\\<rbrakk>\n  \\<Longrightarrow> local.span {} = local.span ({} \\<union> {0\\<^sub>v n})\n  ?X \\<subseteq> carrier_vec n \\<Longrightarrow>\n  lincomb ?a ?X \\<in> local.span ?X\n  local.span {} = {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n     {0\\<^sub>v n} =\n    0\\<^sub>v n", "by auto"], ["proof (state)\nthis:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   {0\\<^sub>v n} =\n  0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "moreover"], ["proof (state)\nthis:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   {0\\<^sub>v n} =\n  0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"lincomb ?f (D - {0\\<^sub>v n}) = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n     (D - {0\\<^sub>v n}) =\n    0\\<^sub>v n", "by(rule lincomb_zero, insert D, auto)"], ["proof (state)\nthis:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   (D - {0\\<^sub>v n}) =\n  0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "ultimately"], ["proof (chain)\npicking this:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   {0\\<^sub>v n} =\n  0\\<^sub>v n\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   (D - {0\\<^sub>v n}) =\n  0\\<^sub>v n", "have \"lincomb ?f (D \\<union> {0\\<^sub>v n}) = 0\\<^sub>v n\""], ["proof (prove)\nusing this:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   {0\\<^sub>v n} =\n  0\\<^sub>v n\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   (D - {0\\<^sub>v n}) =\n  0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n     (D \\<union> {0\\<^sub>v n}) =\n    0\\<^sub>v n", "using lincomb_vec_diff_add[of \"D \\<union> {0\\<^sub>v n}\" \"{0\\<^sub>v n}\"] D finD"], ["proof (prove)\nusing this:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   {0\\<^sub>v n} =\n  0\\<^sub>v n\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   (D - {0\\<^sub>v n}) =\n  0\\<^sub>v n\n  \\<lbrakk>D \\<union> {0\\<^sub>v n} \\<subseteq> carrier_vec n;\n   {0\\<^sub>v n} \\<subseteq> D \\<union> {0\\<^sub>v n};\n   finite (D \\<union> {0\\<^sub>v n});\n   ?f \\<in> D \\<union> {0\\<^sub>v n} \\<rightarrow> UNIV\\<rbrakk>\n  \\<Longrightarrow> lincomb ?f (D \\<union> {0\\<^sub>v n}) =\n                    lincomb ?f (D \\<union> {0\\<^sub>v n} - {0\\<^sub>v n}) +\n                    lincomb ?f {0\\<^sub>v n}\n  D \\<subseteq> carrier_vec n\n  finite D\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n     (D \\<union> {0\\<^sub>v n}) =\n    0\\<^sub>v n", "by simp"], ["proof (state)\nthis:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   (D \\<union> {0\\<^sub>v n}) =\n  0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "hence lcomb_f: \"lincomb (\\<lambda> y. l y + ?f y) (D \\<union> {0\\<^sub>v n}) = x\""], ["proof (prove)\nusing this:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   (D \\<union> {0\\<^sub>v n}) =\n  0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a)))\n     (D \\<union> {0\\<^sub>v n}) =\n    x", "using lincomb_sum[of \"D \\<union> {0\\<^sub>v n}\" l ?f] finD D x"], ["proof (prove)\nusing this:\n  lincomb (\\<lambda>y. if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n   (D \\<union> {0\\<^sub>v n}) =\n  0\\<^sub>v n\n  \\<lbrakk>finite (D \\<union> {0\\<^sub>v n});\n   D \\<union> {0\\<^sub>v n} \\<subseteq> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> lincomb\n                     (\\<lambda>v.\n                         l v +\n                         (if v = 0\\<^sub>v n then L_sup - L else (0::'a)))\n                     (D \\<union> {0\\<^sub>v n}) =\n                    lincomb l (D \\<union> {0\\<^sub>v n}) +\n                    lincomb\n                     (\\<lambda>y.\n                         if y = 0\\<^sub>v n then L_sup - L else (0::'a))\n                     (D \\<union> {0\\<^sub>v n})\n  finite D\n  D \\<subseteq> carrier_vec n\n  lincomb l (D \\<union> {0\\<^sub>v n}) = x\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a)))\n     (D \\<union> {0\\<^sub>v n}) =\n    x", "by simp"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a)))\n   (D \\<union> {0\\<^sub>v n}) =\n  x\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"sum ?f (D \\<union> {0\\<^sub>v n}) = L_sup - L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n       if y = 0\\<^sub>v n then L_sup - L else (0::'a)) =\n    L_sup - L", "by (simp add: sum.subset_diff[of \"{0\\<^sub>v n}\" \"D \\<union> {0\\<^sub>v n}\" ?f] finD)"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n     if y = 0\\<^sub>v n then L_sup - L else (0::'a)) =\n  L_sup - L\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "hence \"sum (\\<lambda> y. l y + ?f y) (D \\<union> {0\\<^sub>v n}) = L_sup\""], ["proof (prove)\nusing this:\n  (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n     if y = 0\\<^sub>v n then L_sup - L else (0::'a)) =\n  L_sup - L\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n       l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) =\n    L_sup", "using l L_def"], ["proof (prove)\nusing this:\n  (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n     if y = 0\\<^sub>v n then L_sup - L else (0::'a)) =\n  L_sup - L\n  l ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. (0::'a) \\<le> t}\n  L = sum l (D \\<union> {0\\<^sub>v n})\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n       l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) =\n    L_sup", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n     l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) =\n  L_sup\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n     l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) =\n  L_sup\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"(\\<lambda> y. l y + ?f y) ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. t \\<ge> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) `\n    (D \\<union> {0\\<^sub>v n})\n    \\<subseteq> {t. (0::'a) \\<le> t}", "using \\<open>L \\<le> L_sup\\<close> l"], ["proof (prove)\nusing this:\n  L \\<le> L_sup\n  l ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. (0::'a) \\<le> t}\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) `\n    (D \\<union> {0\\<^sub>v n})\n    \\<subseteq> {t. (0::'a) \\<le> t}", "by force"], ["proof (state)\nthis:\n  (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) `\n  (D \\<union> {0\\<^sub>v n})\n  \\<subseteq> {t. (0::'a) \\<le> t}\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n     l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) =\n  L_sup\n  (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) `\n  (D \\<union> {0\\<^sub>v n})\n  \\<subseteq> {t. (0::'a) \\<le> t}", "obtain l' where x: \"lincomb l' (D \\<union> {0\\<^sub>v n}) = x\"\n                          and l': \"l' ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. t \\<ge> 0}\"\n                          and sum_l': \"sum l' (D \\<union> {0\\<^sub>v n}) = L_sup\""], ["proof (prove)\nusing this:\n  (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n     l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) =\n  L_sup\n  (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) `\n  (D \\<union> {0\\<^sub>v n})\n  \\<subseteq> {t. (0::'a) \\<le> t}\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>lincomb l' (D \\<union> {0\\<^sub>v n}) = x;\n         l' ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. (0::'a) \\<le> t};\n         sum l' (D \\<union> {0\\<^sub>v n}) = L_sup\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using lcomb_f"], ["proof (prove)\nusing this:\n  (\\<Sum>y\\<in>D \\<union> {0\\<^sub>v n}.\n     l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) =\n  L_sup\n  (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a))) `\n  (D \\<union> {0\\<^sub>v n})\n  \\<subseteq> {t. (0::'a) \\<le> t}\n  lincomb\n   (\\<lambda>y. l y + (if y = 0\\<^sub>v n then L_sup - L else (0::'a)))\n   (D \\<union> {0\\<^sub>v n}) =\n  x\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>lincomb l' (D \\<union> {0\\<^sub>v n}) = x;\n         l' ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. (0::'a) \\<le> t};\n         sum l' (D \\<union> {0\\<^sub>v n}) = L_sup\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lincomb l' (D \\<union> {0\\<^sub>v n}) = x\n  l' ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. (0::'a) \\<le> t}\n  sum l' (D \\<union> {0\\<^sub>v n}) = L_sup\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "let ?D' = \"{L_sup \\<cdot>\\<^sub>v v | v. v \\<in> D \\<union> {0\\<^sub>v n}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have Did: \"?D' = (\\<lambda> v. L_sup \\<cdot>\\<^sub>v v) ` (D \\<union> {0\\<^sub>v n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n    (\\<cdot>\\<^sub>v) L_sup ` (D \\<union> {0\\<^sub>v n})", "by force"], ["proof (state)\nthis:\n  {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  (\\<cdot>\\<^sub>v) L_sup ` (D \\<union> {0\\<^sub>v n})\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "define l'' where \"l'' = (\\<lambda> y. l' ((1 / L_sup) \\<cdot>\\<^sub>v y) / L_sup)\""], ["proof (state)\nthis:\n  l'' = (\\<lambda>y. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) / L_sup)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "obtain lD where dist: \"distinct lD\" and lD: \"D \\<union> {0\\<^sub>v n} = set lD\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>lD.\n        \\<lbrakk>distinct lD; D \\<union> {0\\<^sub>v n} = set lD\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_distinct_list[of \"D \\<union> {0\\<^sub>v n}\"] finD"], ["proof (prove)\nusing this:\n  finite (D \\<union> {0\\<^sub>v n}) \\<Longrightarrow>\n  \\<exists>xs. set xs = D \\<union> {0\\<^sub>v n} \\<and> distinct xs\n  finite D\n\ngoal (1 subgoal):\n 1. (\\<And>lD.\n        \\<lbrakk>distinct lD; D \\<union> {0\\<^sub>v n} = set lD\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  distinct lD\n  D \\<union> {0\\<^sub>v n} = set lD\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "let ?lD' = \"map ((\\<cdot>\\<^sub>v) L_sup) lD\""], ["proof (state)\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have dist': \"distinct ?lD'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map ((\\<cdot>\\<^sub>v) L_sup) lD)", "using distinct_smult_nonneg[OF _ dist] \\<open>L_sup > 0\\<close>"], ["proof (prove)\nusing this:\n  ?c \\<noteq> (0::'a) \\<Longrightarrow>\n  distinct (map ((\\<cdot>\\<^sub>v) ?c) lD)\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. distinct (map ((\\<cdot>\\<^sub>v) L_sup) lD)", "by fastforce"], ["proof (state)\nthis:\n  distinct (map ((\\<cdot>\\<^sub>v) L_sup) lD)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have x': \"lincomb l'' ?D' = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb l''\n     {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n    x", "unfolding x[symmetric] l''_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>y. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) / L_sup)\n     {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n    lincomb l' (D \\<union> {0\\<^sub>v n})", "unfolding lincomb_def Did"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>(\\<cdot>\\<^sub>v) L_sup `\n                                    (D \\<union>\n                                     {0\\<^sub>v\n n}). l' ((1::'a) / L_sup \\<cdot>\\<^sub>v v) / L_sup \\<cdot>\\<^sub>v v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>D \\<union>\n                                    {0\\<^sub>v n}. l' v \\<cdot>\\<^sub>v v)", "proof (subst finsum_reindex)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>v.\n        l' ((1::'a) / L_sup \\<cdot>\\<^sub>v v) / L_sup \\<cdot>\\<^sub>v v)\n    \\<in> (\\<cdot>\\<^sub>v) L_sup ` (D \\<union> {0\\<^sub>v n}) \\<rightarrow>\n          carrier_vec n\n 2. inj_on ((\\<cdot>\\<^sub>v) L_sup) (D \\<union> {0\\<^sub>v n})\n 3. (\\<Oplus>\\<^bsub>V\\<^esub>x\\<in>D \\<union>\n                                    {0\\<^sub>v\nn}. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v x)) /\n    L_sup \\<cdot>\\<^sub>v\n    (L_sup \\<cdot>\\<^sub>v x)) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>D \\<union>\n                                    {0\\<^sub>v n}. l' v \\<cdot>\\<^sub>v v)", "from \\<open>L_sup > 0\\<close> smult_vec_nonneg_eq[of L_sup]"], ["proof (chain)\npicking this:\n  (0::'a) < L_sup\n  L_sup \\<noteq> (0::'a) \\<Longrightarrow>\n  (L_sup \\<cdot>\\<^sub>v ?x = L_sup \\<cdot>\\<^sub>v ?y) = (?x = ?y)", "show \"inj_on ((\\<cdot>\\<^sub>v) L_sup) (D \\<union> {0\\<^sub>v n})\""], ["proof (prove)\nusing this:\n  (0::'a) < L_sup\n  L_sup \\<noteq> (0::'a) \\<Longrightarrow>\n  (L_sup \\<cdot>\\<^sub>v ?x = L_sup \\<cdot>\\<^sub>v ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. inj_on ((\\<cdot>\\<^sub>v) L_sup) (D \\<union> {0\\<^sub>v n})", "by (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  inj_on ((\\<cdot>\\<^sub>v) L_sup) (D \\<union> {0\\<^sub>v n})\n\ngoal (2 subgoals):\n 1. (\\<lambda>v.\n        l' ((1::'a) / L_sup \\<cdot>\\<^sub>v v) / L_sup \\<cdot>\\<^sub>v v)\n    \\<in> (\\<cdot>\\<^sub>v) L_sup ` (D \\<union> {0\\<^sub>v n}) \\<rightarrow>\n          carrier_vec n\n 2. (\\<Oplus>\\<^bsub>V\\<^esub>x\\<in>D \\<union>\n                                    {0\\<^sub>v\nn}. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v x)) /\n    L_sup \\<cdot>\\<^sub>v\n    (L_sup \\<cdot>\\<^sub>v x)) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>D \\<union>\n                                    {0\\<^sub>v n}. l' v \\<cdot>\\<^sub>v v)", "show \"(\\<lambda>v. l' (1 / L_sup \\<cdot>\\<^sub>v v) / L_sup \\<cdot>\\<^sub>v v) \\<in> (\\<cdot>\\<^sub>v) L_sup ` (D \\<union> {0\\<^sub>v n}) \\<rightarrow> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v.\n        l' ((1::'a) / L_sup \\<cdot>\\<^sub>v v) / L_sup \\<cdot>\\<^sub>v v)\n    \\<in> (\\<cdot>\\<^sub>v) L_sup ` (D \\<union> {0\\<^sub>v n}) \\<rightarrow>\n          carrier_vec n", "using D"], ["proof (prove)\nusing this:\n  D \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. (\\<lambda>v.\n        l' ((1::'a) / L_sup \\<cdot>\\<^sub>v v) / L_sup \\<cdot>\\<^sub>v v)\n    \\<in> (\\<cdot>\\<^sub>v) L_sup ` (D \\<union> {0\\<^sub>v n}) \\<rightarrow>\n          carrier_vec n", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v.\n      l' ((1::'a) / L_sup \\<cdot>\\<^sub>v v) / L_sup \\<cdot>\\<^sub>v v)\n  \\<in> (\\<cdot>\\<^sub>v) L_sup ` (D \\<union> {0\\<^sub>v n}) \\<rightarrow>\n        carrier_vec n\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>x\\<in>D \\<union>\n                                    {0\\<^sub>v\nn}. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v x)) /\n    L_sup \\<cdot>\\<^sub>v\n    (L_sup \\<cdot>\\<^sub>v x)) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>D \\<union>\n                                    {0\\<^sub>v n}. l' v \\<cdot>\\<^sub>v v)", "from \\<open>L_sup > 0\\<close>"], ["proof (chain)\npicking this:\n  (0::'a) < L_sup", "have \"L_sup \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. L_sup \\<noteq> (0::'a)", "by auto"], ["proof (state)\nthis:\n  L_sup \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>x\\<in>D \\<union>\n                                    {0\\<^sub>v\nn}. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v x)) /\n    L_sup \\<cdot>\\<^sub>v\n    (L_sup \\<cdot>\\<^sub>v x)) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>D \\<union>\n                                    {0\\<^sub>v n}. l' v \\<cdot>\\<^sub>v v)", "then"], ["proof (chain)\npicking this:\n  L_sup \\<noteq> (0::'a)", "show \"(\\<Oplus>\\<^bsub>V\\<^esub>x\\<in>D \\<union> {0\\<^sub>v n}. l' (1 / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v x)) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v x)) =\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>D \\<union> {0\\<^sub>v n}. l' v \\<cdot>\\<^sub>v v)\""], ["proof (prove)\nusing this:\n  L_sup \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>x\\<in>D \\<union>\n                                    {0\\<^sub>v\nn}. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v x)) /\n    L_sup \\<cdot>\\<^sub>v\n    (L_sup \\<cdot>\\<^sub>v x)) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>D \\<union>\n                                    {0\\<^sub>v n}. l' v \\<cdot>\\<^sub>v v)", "by (intro finsum_cong, insert D, auto simp: smult_smult_assoc)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>V\\<^esub>x\\<in>D \\<union>\n                                  {0\\<^sub>v\n                                    n}. l'\n   ((1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v x)) /\n  L_sup \\<cdot>\\<^sub>v\n  (L_sup \\<cdot>\\<^sub>v x)) =\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>D \\<union>\n                                  {0\\<^sub>v n}. l' v \\<cdot>\\<^sub>v v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lincomb l''\n   {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  x\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"D \\<union> {0\\<^sub>v n} \\<subseteq> cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<union> {0\\<^sub>v n} \\<subseteq> cone C", "using set_in_cone[OF C] DC zero_in_cone"], ["proof (prove)\nusing this:\n  C \\<subseteq> cone C\n  D \\<subseteq> C\n  0\\<^sub>v n \\<in> cone ?Vs\n\ngoal (1 subgoal):\n 1. D \\<union> {0\\<^sub>v n} \\<subseteq> cone C", "by blast"], ["proof (state)\nthis:\n  D \\<union> {0\\<^sub>v n} \\<subseteq> cone C\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "hence D': \"?D' \\<subseteq> cone C\""], ["proof (prove)\nusing this:\n  D \\<union> {0\\<^sub>v n} \\<subseteq> cone C\n\ngoal (1 subgoal):\n 1. {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n    \\<subseteq> cone C", "using cone_smult[of L_sup, OF _ C] \\<open>L_sup > 0\\<close>"], ["proof (prove)\nusing this:\n  D \\<union> {0\\<^sub>v n} \\<subseteq> cone C\n  \\<lbrakk>(0::'a) \\<le> L_sup; ?x \\<in> cone C\\<rbrakk>\n  \\<Longrightarrow> L_sup \\<cdot>\\<^sub>v ?x \\<in> cone C\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n    \\<subseteq> cone C", "by auto"], ["proof (state)\nthis:\n  {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> cone C\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"D \\<union> {0\\<^sub>v n} \\<subseteq> \\<int>\\<^sub>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<union> {0\\<^sub>v n} \\<subseteq> \\<int>\\<^sub>v", "unfolding zero_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<union> {vec n (\\<lambda>i. 0::'a)} \\<subseteq> \\<int>\\<^sub>v", "using DI Ints_vec_def"], ["proof (prove)\nusing this:\n  D \\<subseteq> \\<int>\\<^sub>v\n  \\<int>\\<^sub>v = {x. \\<forall>i<dim_vec x. x $ i \\<in> \\<int>}\n\ngoal (1 subgoal):\n 1. D \\<union> {vec n (\\<lambda>i. 0::'a)} \\<subseteq> \\<int>\\<^sub>v", "by auto"], ["proof (state)\nthis:\n  D \\<union> {0\\<^sub>v n} \\<subseteq> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "moreover"], ["proof (state)\nthis:\n  D \\<union> {0\\<^sub>v n} \\<subseteq> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"L_sup \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L_sup \\<in> \\<int>", "unfolding L_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int (\\<lfloor>L\\<rfloor> + 1) \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  L_sup \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "ultimately"], ["proof (chain)\npicking this:\n  D \\<union> {0\\<^sub>v n} \\<subseteq> \\<int>\\<^sub>v\n  L_sup \\<in> \\<int>", "have D'I: \"?D' \\<subseteq> \\<int>\\<^sub>v\""], ["proof (prove)\nusing this:\n  D \\<union> {0\\<^sub>v n} \\<subseteq> \\<int>\\<^sub>v\n  L_sup \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n    \\<subseteq> \\<int>\\<^sub>v", "unfolding Ints_vec_def"], ["proof (prove)\nusing this:\n  D \\<union> {0\\<^sub>v n}\n  \\<subseteq> {x. \\<forall>i<dim_vec x. x $ i \\<in> \\<int>}\n  L_sup \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n    \\<subseteq> {x. \\<forall>i<dim_vec x. x $ i \\<in> \\<int>}", "by force"], ["proof (state)\nthis:\n  {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"1 = sum l' (D \\<union> {0\\<^sub>v n}) * (1 / L_sup)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) = sum l' (D \\<union> {0\\<^sub>v n}) * ((1::'a) / L_sup)", "using sum_l' \\<open>L_sup > 0\\<close>"], ["proof (prove)\nusing this:\n  sum l' (D \\<union> {0\\<^sub>v n}) = L_sup\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. (1::'a) = sum l' (D \\<union> {0\\<^sub>v n}) * ((1::'a) / L_sup)", "by auto"], ["proof (state)\nthis:\n  (1::'a) = sum l' (D \\<union> {0\\<^sub>v n}) * ((1::'a) / L_sup)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "also"], ["proof (state)\nthis:\n  (1::'a) = sum l' (D \\<union> {0\\<^sub>v n}) * ((1::'a) / L_sup)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"sum l' (D \\<union> {0\\<^sub>v n}) = sum_list (map l' lD)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum l' (D \\<union> {0\\<^sub>v n}) = sum_list (map l' lD)", "using sum.distinct_set_conv_list[OF dist] lD"], ["proof (prove)\nusing this:\n  sum ?g (set lD) = sum_list (map ?g lD)\n  D \\<union> {0\\<^sub>v n} = set lD\n\ngoal (1 subgoal):\n 1. sum l' (D \\<union> {0\\<^sub>v n}) = sum_list (map l' lD)", "by auto"], ["proof (state)\nthis:\n  sum l' (D \\<union> {0\\<^sub>v n}) = sum_list (map l' lD)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "also"], ["proof (state)\nthis:\n  sum l' (D \\<union> {0\\<^sub>v n}) = sum_list (map l' lD)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"map l' lD = map (l' \\<circ> ((\\<cdot>\\<^sub>v) (1 / L_sup))) ?lD'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map l' lD =\n    map (l' \\<circ> (\\<cdot>\\<^sub>v) ((1::'a) / L_sup))\n     (map ((\\<cdot>\\<^sub>v) L_sup) lD)", "using smult_smult_assoc[of \"1 / L_sup\" L_sup] \\<open>L_sup > 0\\<close>"], ["proof (prove)\nusing this:\n  (1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v ?v) =\n  (1::'a) / L_sup * L_sup \\<cdot>\\<^sub>v ?v\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. map l' lD =\n    map (l' \\<circ> (\\<cdot>\\<^sub>v) ((1::'a) / L_sup))\n     (map ((\\<cdot>\\<^sub>v) L_sup) lD)", "by (simp add: comp_assoc)"], ["proof (state)\nthis:\n  map l' lD =\n  map (l' \\<circ> (\\<cdot>\\<^sub>v) ((1::'a) / L_sup))\n   (map ((\\<cdot>\\<^sub>v) L_sup) lD)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "also"], ["proof (state)\nthis:\n  map l' lD =\n  map (l' \\<circ> (\\<cdot>\\<^sub>v) ((1::'a) / L_sup))\n   (map ((\\<cdot>\\<^sub>v) L_sup) lD)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"l' \\<circ> ((\\<cdot>\\<^sub>v) (1 / L_sup)) = (\\<lambda> x. l' ((1 / L_sup) \\<cdot>\\<^sub>v x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l' \\<circ> (\\<cdot>\\<^sub>v) ((1::'a) / L_sup) =\n    (\\<lambda>x. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v x))", "by (rule comp_def)"], ["proof (state)\nthis:\n  l' \\<circ> (\\<cdot>\\<^sub>v) ((1::'a) / L_sup) =\n  (\\<lambda>x. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v x))\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "also"], ["proof (state)\nthis:\n  l' \\<circ> (\\<cdot>\\<^sub>v) ((1::'a) / L_sup) =\n  (\\<lambda>x. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v x))\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"sum_list (map \\<dots> ?lD') * (1 / L_sup) =\n               sum_list (map (\\<lambda>y. l' (1 / L_sup \\<cdot>\\<^sub>v y) * (1 / L_sup)) ?lD')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v x)) *\n    ((1::'a) / L_sup) =\n    (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                             ((1::'a) / L_sup))", "using sum_list_mult_const[of _ \"1 / L_sup\" ?lD']"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                       lD. ?f x * ((1::'a) / L_sup)) =\n  sum_list (map ?f (map ((\\<cdot>\\<^sub>v) L_sup) lD)) * ((1::'a) / L_sup)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v x)) *\n    ((1::'a) / L_sup) =\n    (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                             ((1::'a) / L_sup))", "by presburger"], ["proof (state)\nthis:\n  (\\<Sum>x\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                       lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v x)) *\n  ((1::'a) / L_sup) =\n  (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                       lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                           ((1::'a) / L_sup))\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                       lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v x)) *\n  ((1::'a) / L_sup) =\n  (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                       lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                           ((1::'a) / L_sup))\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"\\<dots> = sum_list (map l'' ?lD')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                             ((1::'a) / L_sup)) =\n    sum_list (map l'' (map ((\\<cdot>\\<^sub>v) L_sup) lD))", "unfolding l''_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                             ((1::'a) / L_sup)) =\n    (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) / L_sup)", "using \\<open>L_sup > 0\\<close>"], ["proof (prove)\nusing this:\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                             ((1::'a) / L_sup)) =\n    (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                         lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) / L_sup)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                       lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                           ((1::'a) / L_sup)) =\n  sum_list (map l'' (map ((\\<cdot>\\<^sub>v) L_sup) lD))\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "also"], ["proof (state)\nthis:\n  (\\<Sum>y\\<leftarrow>map ((\\<cdot>\\<^sub>v) L_sup)\n                       lD. l' ((1::'a) / L_sup \\<cdot>\\<^sub>v y) *\n                           ((1::'a) / L_sup)) =\n  sum_list (map l'' (map ((\\<cdot>\\<^sub>v) L_sup) lD))\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"\\<dots> = sum l'' (set ?lD')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map l'' (map ((\\<cdot>\\<^sub>v) L_sup) lD)) =\n    sum l'' (set (map ((\\<cdot>\\<^sub>v) L_sup) lD))", "using sum.distinct_set_conv_list[OF dist']"], ["proof (prove)\nusing this:\n  sum ?g (set (map ((\\<cdot>\\<^sub>v) L_sup) lD)) =\n  sum_list (map ?g (map ((\\<cdot>\\<^sub>v) L_sup) lD))\n\ngoal (1 subgoal):\n 1. sum_list (map l'' (map ((\\<cdot>\\<^sub>v) L_sup) lD)) =\n    sum l'' (set (map ((\\<cdot>\\<^sub>v) L_sup) lD))", "by metis"], ["proof (state)\nthis:\n  sum_list (map l'' (map ((\\<cdot>\\<^sub>v) L_sup) lD)) =\n  sum l'' (set (map ((\\<cdot>\\<^sub>v) L_sup) lD))\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "also"], ["proof (state)\nthis:\n  sum_list (map l'' (map ((\\<cdot>\\<^sub>v) L_sup) lD)) =\n  sum l'' (set (map ((\\<cdot>\\<^sub>v) L_sup) lD))\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"set ?lD' = ?D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map ((\\<cdot>\\<^sub>v) L_sup) lD) =\n    {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}", "using lD"], ["proof (prove)\nusing this:\n  D \\<union> {0\\<^sub>v n} = set lD\n\ngoal (1 subgoal):\n 1. set (map ((\\<cdot>\\<^sub>v) L_sup) lD) =\n    {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}", "by auto"], ["proof (state)\nthis:\n  set (map ((\\<cdot>\\<^sub>v) L_sup) lD) =\n  {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "finally"], ["proof (chain)\npicking this:\n  (1::'a) =\n  sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}", "have sum_l': \"sum l'' ?D' = 1\""], ["proof (prove)\nusing this:\n  (1::'a) =\n  sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "moreover"], ["proof (state)\nthis:\n  sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"l'' ` ?D' \\<subseteq> {t. t \\<ge> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l'' ` {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n    \\<subseteq> {t. (0::'a) \\<le> t}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> l'' `\n               {L_sup \\<cdot>\\<^sub>v v |v.\n                v \\<in> D \\<union> {0\\<^sub>v n}} \\<Longrightarrow>\n       x \\<in> {t. (0::'a) \\<le> t}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> l'' `\n               {L_sup \\<cdot>\\<^sub>v v |v.\n                v \\<in> D \\<union> {0\\<^sub>v n}} \\<Longrightarrow>\n       x \\<in> {t. (0::'a) \\<le> t}", "assume \"y \\<in> l'' ` ?D'\""], ["proof (state)\nthis:\n  y \\<in> l'' `\n          {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> l'' `\n               {L_sup \\<cdot>\\<^sub>v v |v.\n                v \\<in> D \\<union> {0\\<^sub>v n}} \\<Longrightarrow>\n       x \\<in> {t. (0::'a) \\<le> t}", "then"], ["proof (chain)\npicking this:\n  y \\<in> l'' `\n          {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}", "obtain x where y: \"y = l'' x\" and \"x \\<in> ?D'\""], ["proof (prove)\nusing this:\n  y \\<in> l'' `\n          {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>y = l'' x;\n         x \\<in> {L_sup \\<cdot>\\<^sub>v v |v.\n                  v \\<in> D \\<union> {0\\<^sub>v n}}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y = l'' x\n  x \\<in> {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> l'' `\n               {L_sup \\<cdot>\\<^sub>v v |v.\n                v \\<in> D \\<union> {0\\<^sub>v n}} \\<Longrightarrow>\n       x \\<in> {t. (0::'a) \\<le> t}", "then"], ["proof (chain)\npicking this:\n  y = l'' x\n  x \\<in> {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}", "obtain v where \"v \\<in> D \\<union> {0\\<^sub>v n}\" and x: \"x = L_sup \\<cdot>\\<^sub>v v\""], ["proof (prove)\nusing this:\n  y = l'' x\n  x \\<in> {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> D \\<union> {0\\<^sub>v n};\n         x = L_sup \\<cdot>\\<^sub>v v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v \\<in> D \\<union> {0\\<^sub>v n}\n  x = L_sup \\<cdot>\\<^sub>v v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> l'' `\n               {L_sup \\<cdot>\\<^sub>v v |v.\n                v \\<in> D \\<union> {0\\<^sub>v n}} \\<Longrightarrow>\n       x \\<in> {t. (0::'a) \\<le> t}", "hence \"0 \\<le> l' v / L_sup\""], ["proof (prove)\nusing this:\n  v \\<in> D \\<union> {0\\<^sub>v n}\n  x = L_sup \\<cdot>\\<^sub>v v\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> l' v / L_sup", "using l' \\<open>L_sup > 0\\<close>"], ["proof (prove)\nusing this:\n  v \\<in> D \\<union> {0\\<^sub>v n}\n  x = L_sup \\<cdot>\\<^sub>v v\n  l' ` (D \\<union> {0\\<^sub>v n}) \\<subseteq> {t. (0::'a) \\<le> t}\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> l' v / L_sup", "by fastforce"], ["proof (state)\nthis:\n  (0::'a) \\<le> l' v / L_sup\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> l'' `\n               {L_sup \\<cdot>\\<^sub>v v |v.\n                v \\<in> D \\<union> {0\\<^sub>v n}} \\<Longrightarrow>\n       x \\<in> {t. (0::'a) \\<le> t}", "also"], ["proof (state)\nthis:\n  (0::'a) \\<le> l' v / L_sup\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> l'' `\n               {L_sup \\<cdot>\\<^sub>v v |v.\n                v \\<in> D \\<union> {0\\<^sub>v n}} \\<Longrightarrow>\n       x \\<in> {t. (0::'a) \\<le> t}", "have \"\\<dots> = l'' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l' v / L_sup = l'' x", "unfolding x l''_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. l' v / L_sup =\n    l' ((1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v v)) / L_sup", "using smult_smult_assoc[of \"1 / L_sup\" \"L_sup\" v] \\<open>L_sup > 0\\<close>"], ["proof (prove)\nusing this:\n  (1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v v) =\n  (1::'a) / L_sup * L_sup \\<cdot>\\<^sub>v v\n  (0::'a) < L_sup\n\ngoal (1 subgoal):\n 1. l' v / L_sup =\n    l' ((1::'a) / L_sup \\<cdot>\\<^sub>v (L_sup \\<cdot>\\<^sub>v v)) / L_sup", "by simp"], ["proof (state)\nthis:\n  l' v / L_sup = l'' x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> l'' `\n               {L_sup \\<cdot>\\<^sub>v v |v.\n                v \\<in> D \\<union> {0\\<^sub>v n}} \\<Longrightarrow>\n       x \\<in> {t. (0::'a) \\<le> t}", "finally"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> l'' x", "show \"y \\<in> {t. t \\<ge> 0}\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> l'' x\n\ngoal (1 subgoal):\n 1. y \\<in> {t. (0::'a) \\<le> t}", "using y"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> l'' x\n  y = l'' x\n\ngoal (1 subgoal):\n 1. y \\<in> {t. (0::'a) \\<le> t}", "by blast"], ["proof (state)\nthis:\n  y \\<in> {t. (0::'a) \\<le> t}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l'' ` {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> {t. (0::'a) \\<le> t}\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "moreover"], ["proof (state)\nthis:\n  l'' ` {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> {t. (0::'a) \\<le> t}\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "have \"finite ?D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}", "using finD"], ["proof (prove)\nusing this:\n  finite D\n\ngoal (1 subgoal):\n 1. finite {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}", "by simp"], ["proof (state)\nthis:\n  finite {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "ultimately"], ["proof (chain)\npicking this:\n  sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  (1::'a)\n  l'' ` {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> {t. (0::'a) \\<le> t}\n  finite {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}", "have \"x \\<in> integer_hull (cone C)\""], ["proof (prove)\nusing this:\n  sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  (1::'a)\n  l'' ` {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> {t. (0::'a) \\<le> t}\n  finite {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. x \\<in> integer_hull (cone C)", "unfolding integer_hull_def convex_hull_def"], ["proof (prove)\nusing this:\n  sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  (1::'a)\n  l'' ` {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> {t. (0::'a) \\<le> t}\n  finite {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<exists>Ws c.\n                   finite Ws \\<and>\n                   Ws \\<subseteq> cone C \\<inter> \\<int>\\<^sub>v \\<and>\n                   convex_lincomb c Ws x}", "using x' D' D'I convex_lincomb_def[of l'' ?D' x]\n                      nonneg_lincomb_def[of l'' ?D' x]"], ["proof (prove)\nusing this:\n  sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  (1::'a)\n  l'' ` {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> {t. (0::'a) \\<le> t}\n  finite {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  lincomb l''\n   {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n  x\n  {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> cone C\n  {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n  \\<subseteq> \\<int>\\<^sub>v\n  convex_lincomb l''\n   {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} x =\n  (nonneg_lincomb l''\n    {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} x \\<and>\n   sum l'' {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n   (1::'a))\n  nonneg_lincomb l''\n   {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} x =\n  (lincomb l''\n    {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}} =\n   x \\<and>\n   l'' ` {L_sup \\<cdot>\\<^sub>v v |v. v \\<in> D \\<union> {0\\<^sub>v n}}\n   \\<subseteq> {x. (0::'a) \\<le> x})\n\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<exists>Ws c.\n                   finite Ws \\<and>\n                   Ws \\<subseteq> cone C \\<inter> \\<int>\\<^sub>v \\<and>\n                   convex_lincomb c Ws x}", "by fast"], ["proof (state)\nthis:\n  x \\<in> integer_hull (cone C)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "}"], ["proof (state)\nthis:\n  ?x6 \\<in> cone C \\<Longrightarrow> ?x6 \\<in> integer_hull (cone C)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "thus \"cone C \\<subseteq> integer_hull (cone C)\""], ["proof (prove)\nusing this:\n  ?x6 \\<in> cone C \\<Longrightarrow> ?x6 \\<in> integer_hull (cone C)\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> integer_hull (cone C)", "by blast"], ["proof (state)\nthis:\n  cone C \\<subseteq> integer_hull (cone C)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem decomposition_theorem_integer_hull_of_polyhedron: assumes A: \"A \\<in> carrier_mat nr n\"\n  and b: \"b \\<in> carrier_vec nr\"\n  and AI: \"A \\<in> \\<int>\\<^sub>m\"\n  and bI: \"b \\<in> \\<int>\\<^sub>v\"\n  and P: \"P = polyhedron A b\"\n  and Bnd: \"Bnd = Max (abs ` (elements_mat A \\<union> vec_set b))\"\nshows \"\\<exists> H C. H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \n  \\<and> H \\<subseteq> Bounded_vec (fact (n+1) * (max 1 Bnd)^n)\n  \\<and> C \\<subseteq> Bounded_vec (fact n * (max 1 Bnd)^n)\n  \\<and> finite (H \\<union> C) \n  \\<and> integer_hull P = convex_hull H + cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "define DBnd where \"DBnd = det_bound n (max 1 Bnd)\""], ["proof (state)\nthis:\n  DBnd = det_bound n (max (1::'a) Bnd)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "define nBnd where \"nBnd = of_nat (n+1) * DBnd\""], ["proof (state)\nthis:\n  nBnd = of_nat (n + 1) * DBnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have DBnd: \"DBnd = fact n * (max 1 Bnd)^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DBnd = fact n * max (1::'a) Bnd ^ n", "unfolding DBnd_def det_bound_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fact n * max (1::'a) Bnd ^ n = fact n * max (1::'a) Bnd ^ n", "by auto"], ["proof (state)\nthis:\n  DBnd = fact n * max (1::'a) Bnd ^ n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have nBnd: \"nBnd = fact (n+1) * (max 1 Bnd)^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nBnd = fact (n + 1) * max (1::'a) Bnd ^ n", "unfolding nBnd_def DBnd"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (n + 1) * (fact n * max (1::'a) Bnd ^ n) =\n    fact (n + 1) * max (1::'a) Bnd ^ n", "by auto"], ["proof (state)\nthis:\n  nBnd = fact (n + 1) * max (1::'a) Bnd ^ n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have DBnd0: \"DBnd \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> DBnd", "unfolding DBnd_def det_bound_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fact n * max (1::'a) Bnd ^ n", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> DBnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have Pn: \"P \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> carrier_vec n", "unfolding P polyhedron_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier_vec n. A *\\<^sub>v x \\<le> b} \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  P \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"A \\<in> Bounded_mat Bnd \\<and> b \\<in> Bounded_vec Bnd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> Bounded_mat Bnd \\<and> b \\<in> Bounded_vec Bnd", "unfolding Bnd Bounded_mat_elements_mat Bounded_vec_vec_set"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>elements_mat A.\n        \\<bar>x\\<bar>\n        \\<le> Max (abs ` (elements_mat A \\<union> set\\<^sub>v b))) \\<and>\n    (\\<forall>x\\<in>set\\<^sub>v b.\n        \\<bar>x\\<bar>\n        \\<le> Max (abs ` (elements_mat A \\<union> set\\<^sub>v b)))", "by (intro ballI conjI Max_ge finite_imageI imageI finite_UnI, auto)"], ["proof (state)\nthis:\n  A \\<in> Bounded_mat Bnd \\<and> b \\<in> Bounded_vec Bnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from decomposition_theorem_polyhedra_1[OF A b P, of Bnd] AI bI this"], ["proof (chain)\npicking this:\n  \\<exists>Q X.\n     X \\<subseteq> carrier_vec n \\<and>\n     finite X \\<and>\n     Q \\<subseteq> carrier_vec n \\<and>\n     finite Q \\<and>\n     P = convex_hull Q + cone X \\<and>\n     (A \\<in> \\<int>\\<^sub>m \\<inter> Bounded_mat Bnd \\<longrightarrow>\n      b \\<in> \\<int>\\<^sub>v \\<inter> Bounded_vec Bnd \\<longrightarrow>\n      X \\<subseteq> \\<int>\\<^sub>v \\<inter>\n                    Bounded_vec (det_bound n (max (1::'a) Bnd)) \\<and>\n      Q \\<subseteq> Bounded_vec (det_bound n (max (1::'a) Bnd)))\n  A \\<in> \\<int>\\<^sub>m\n  b \\<in> \\<int>\\<^sub>v\n  A \\<in> Bounded_mat Bnd \\<and> b \\<in> Bounded_vec Bnd", "obtain QQ Q C where C: \"C \\<subseteq> carrier_vec n\" and finC: \"finite C\"\n    and QQ: \"QQ \\<subseteq> carrier_vec n\" and finQ: \"finite QQ\" and BndQQ: \"QQ \\<subseteq> Bounded_vec DBnd\"\n    and P: \"P = Q + cone C\"\n    and Q_def: \"Q = convex_hull QQ\"\n    and CI: \"C \\<subseteq> \\<int>\\<^sub>v\" and BndC: \"C \\<subseteq> Bounded_vec DBnd\""], ["proof (prove)\nusing this:\n  \\<exists>Q X.\n     X \\<subseteq> carrier_vec n \\<and>\n     finite X \\<and>\n     Q \\<subseteq> carrier_vec n \\<and>\n     finite Q \\<and>\n     P = convex_hull Q + cone X \\<and>\n     (A \\<in> \\<int>\\<^sub>m \\<inter> Bounded_mat Bnd \\<longrightarrow>\n      b \\<in> \\<int>\\<^sub>v \\<inter> Bounded_vec Bnd \\<longrightarrow>\n      X \\<subseteq> \\<int>\\<^sub>v \\<inter>\n                    Bounded_vec (det_bound n (max (1::'a) Bnd)) \\<and>\n      Q \\<subseteq> Bounded_vec (det_bound n (max (1::'a) Bnd)))\n  A \\<in> \\<int>\\<^sub>m\n  b \\<in> \\<int>\\<^sub>v\n  A \\<in> Bounded_mat Bnd \\<and> b \\<in> Bounded_vec Bnd\n\ngoal (1 subgoal):\n 1. (\\<And>C QQ Q.\n        \\<lbrakk>C \\<subseteq> carrier_vec n; finite C;\n         QQ \\<subseteq> carrier_vec n; finite QQ;\n         QQ \\<subseteq> Bounded_vec DBnd; P = Q + cone C;\n         Q = convex_hull QQ; C \\<subseteq> \\<int>\\<^sub>v;\n         C \\<subseteq> Bounded_vec DBnd\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: DBnd_def)"], ["proof (state)\nthis:\n  C \\<subseteq> carrier_vec n\n  finite C\n  QQ \\<subseteq> carrier_vec n\n  finite QQ\n  QQ \\<subseteq> Bounded_vec DBnd\n  P = Q + cone C\n  Q = convex_hull QQ\n  C \\<subseteq> \\<int>\\<^sub>v\n  C \\<subseteq> Bounded_vec DBnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "define Bnd' where \"Bnd' = of_nat n * DBnd\""], ["proof (state)\nthis:\n  Bnd' = of_nat n * DBnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "note coneC = cone_iff_finite_cone[OF C finC]"], ["proof (state)\nthis:\n  cone C = finite_cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have Q: \"Q \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<subseteq> carrier_vec n", "unfolding Q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_hull QQ \\<subseteq> carrier_vec n", "using convex_hull_carrier[OF QQ]"], ["proof (prove)\nusing this:\n  convex_hull QQ \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. convex_hull QQ \\<subseteq> carrier_vec n", "."], ["proof (state)\nthis:\n  Q \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "define B where \"B = {x. \\<exists> a D. nonneg_lincomb a D x \\<and> D \\<subseteq> C \\<and> lin_indpt D \\<and> (\\<forall> d \\<in> D. a d \\<le> 1)}\""], ["proof (state)\nthis:\n  B =\n  {x. \\<exists>a D.\n         nonneg_lincomb a D x \\<and>\n         D \\<subseteq> C \\<and>\n         lin_indpt D \\<and> (\\<forall>d\\<in>D. a d \\<le> (1::'a))}\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "{"], ["proof (state)\nthis:\n  B =\n  {x. \\<exists>a D.\n         nonneg_lincomb a D x \\<and>\n         D \\<subseteq> C \\<and>\n         lin_indpt D \\<and> (\\<forall>d\\<in>D. a d \\<le> (1::'a))}\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "assume \"b \\<in> B\""], ["proof (state)\nthis:\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "then"], ["proof (chain)\npicking this:\n  b \\<in> B", "obtain a D where b: \"b = lincomb a D\" and DC: \"D \\<subseteq> C\" \n      and linD: \"lin_indpt D\" and bnd_a: \"\\<forall> d \\<in> D. 0 \\<le> a d \\<and> a d \\<le> 1\""], ["proof (prove)\nusing this:\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. (\\<And>a D.\n        \\<lbrakk>b = lincomb a D; D \\<subseteq> C; lin_indpt D;\n         \\<forall>d\\<in>D.\n            (0::'a) \\<le> a d \\<and> a d \\<le> (1::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: B_def nonneg_lincomb_def)"], ["proof (state)\nthis:\n  b = lincomb a D\n  D \\<subseteq> C\n  lin_indpt D\n  \\<forall>d\\<in>D. (0::'a) \\<le> a d \\<and> a d \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from DC C"], ["proof (chain)\npicking this:\n  D \\<subseteq> C\n  C \\<subseteq> carrier_vec n", "have D: \"D \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  D \\<subseteq> C\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. D \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from DC finC"], ["proof (chain)\npicking this:\n  D \\<subseteq> C\n  finite C", "have finD: \"finite D\""], ["proof (prove)\nusing this:\n  D \\<subseteq> C\n  finite C\n\ngoal (1 subgoal):\n 1. finite D", "by (metis finite_subset)"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from D linD finD"], ["proof (chain)\npicking this:\n  D \\<subseteq> carrier_vec n\n  lin_indpt D\n  finite D", "have cardD: \"card D \\<le> n\""], ["proof (prove)\nusing this:\n  D \\<subseteq> carrier_vec n\n  lin_indpt D\n  finite D\n\ngoal (1 subgoal):\n 1. card D \\<le> n", "using dim_is_n li_le_dim(2)"], ["proof (prove)\nusing this:\n  D \\<subseteq> carrier_vec n\n  lin_indpt D\n  finite D\n  local.dim = n\n  \\<lbrakk>fin_dim; ?A \\<subseteq> carrier_vec n; lin_indpt ?A\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> local.dim\n\ngoal (1 subgoal):\n 1. card D \\<le> n", "by auto"], ["proof (state)\nthis:\n  card D \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from BndC DC"], ["proof (chain)\npicking this:\n  C \\<subseteq> Bounded_vec DBnd\n  D \\<subseteq> C", "have BndD: \"D \\<subseteq> Bounded_vec DBnd\""], ["proof (prove)\nusing this:\n  C \\<subseteq> Bounded_vec DBnd\n  D \\<subseteq> C\n\ngoal (1 subgoal):\n 1. D \\<subseteq> Bounded_vec DBnd", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> Bounded_vec DBnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from lincomb_card_bound[OF this D DBnd0 _ cardD, of a, folded b] bnd_a"], ["proof (chain)\npicking this:\n  (\\<And>x.\n      x \\<in> D \\<Longrightarrow>\n      \\<bar>a x\\<bar> \\<le> (1::'a)) \\<Longrightarrow>\n  b \\<in> Bounded_vec (of_nat n * DBnd)\n  \\<forall>d\\<in>D. (0::'a) \\<le> a d \\<and> a d \\<le> (1::'a)", "have \"b \\<in> Bounded_vec Bnd'\""], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x \\<in> D \\<Longrightarrow>\n      \\<bar>a x\\<bar> \\<le> (1::'a)) \\<Longrightarrow>\n  b \\<in> Bounded_vec (of_nat n * DBnd)\n  \\<forall>d\\<in>D. (0::'a) \\<le> a d \\<and> a d \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. b \\<in> Bounded_vec Bnd'", "unfolding Bnd'_def"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x \\<in> D \\<Longrightarrow>\n      \\<bar>a x\\<bar> \\<le> (1::'a)) \\<Longrightarrow>\n  b \\<in> Bounded_vec (of_nat n * DBnd)\n  \\<forall>d\\<in>D. (0::'a) \\<le> a d \\<and> a d \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. b \\<in> Bounded_vec (of_nat n * DBnd)", "by force"], ["proof (state)\nthis:\n  b \\<in> Bounded_vec Bnd'\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "}"], ["proof (state)\nthis:\n  ?ba6 \\<in> B \\<Longrightarrow> ?ba6 \\<in> Bounded_vec Bnd'\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "hence BndB: \"B \\<subseteq> Bounded_vec Bnd'\""], ["proof (prove)\nusing this:\n  ?ba6 \\<in> B \\<Longrightarrow> ?ba6 \\<in> Bounded_vec Bnd'\n\ngoal (1 subgoal):\n 1. B \\<subseteq> Bounded_vec Bnd'", ".."], ["proof (state)\nthis:\n  B \\<subseteq> Bounded_vec Bnd'\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from BndQQ"], ["proof (chain)\npicking this:\n  QQ \\<subseteq> Bounded_vec DBnd", "have BndQ: \"Q \\<subseteq> Bounded_vec DBnd\""], ["proof (prove)\nusing this:\n  QQ \\<subseteq> Bounded_vec DBnd\n\ngoal (1 subgoal):\n 1. Q \\<subseteq> Bounded_vec DBnd", "unfolding Q_def"], ["proof (prove)\nusing this:\n  QQ \\<subseteq> Bounded_vec DBnd\n\ngoal (1 subgoal):\n 1. convex_hull QQ \\<subseteq> Bounded_vec DBnd", "using QQ"], ["proof (prove)\nusing this:\n  QQ \\<subseteq> Bounded_vec DBnd\n  QQ \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. convex_hull QQ \\<subseteq> Bounded_vec DBnd", "by (metis convex_hull_bound)"], ["proof (state)\nthis:\n  Q \\<subseteq> Bounded_vec DBnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have B: \"B \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier_vec n", "unfolding B_def nonneg_lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<exists>a D.\n           (lincomb a D = x \\<and>\n            a ` D \\<subseteq> Collect ((\\<le>) (0::'a))) \\<and>\n           D \\<subseteq> C \\<and>\n           lin_indpt D \\<and> (\\<forall>d\\<in>D. a d \\<le> (1::'a))}\n    \\<subseteq> carrier_vec n", "using C"], ["proof (prove)\nusing this:\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. {x. \\<exists>a D.\n           (lincomb a D = x \\<and>\n            a ` D \\<subseteq> Collect ((\\<le>) (0::'a))) \\<and>\n           D \\<subseteq> C \\<and>\n           lin_indpt D \\<and> (\\<forall>d\\<in>D. a d \\<le> (1::'a))}\n    \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from Q B"], ["proof (chain)\npicking this:\n  Q \\<subseteq> carrier_vec n\n  B \\<subseteq> carrier_vec n", "have QB: \"Q + B \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  Q \\<subseteq> carrier_vec n\n  B \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. Q + B \\<subseteq> carrier_vec n", "by (auto elim!: set_plus_elim)"], ["proof (state)\nthis:\n  Q + B \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from sum_in_Bounded_vecI[of _ DBnd _ Bnd' n] BndQ BndB B Q"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> Bounded_vec DBnd; ?y \\<in> Bounded_vec Bnd';\n   ?x \\<in> carrier_vec n; ?y \\<in> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> ?x + ?y \\<in> Bounded_vec (DBnd + Bnd')\n  Q \\<subseteq> Bounded_vec DBnd\n  B \\<subseteq> Bounded_vec Bnd'\n  B \\<subseteq> carrier_vec n\n  Q \\<subseteq> carrier_vec n", "have \"Q + B \\<subseteq> Bounded_vec (DBnd + Bnd')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> Bounded_vec DBnd; ?y \\<in> Bounded_vec Bnd';\n   ?x \\<in> carrier_vec n; ?y \\<in> carrier_vec n\\<rbrakk>\n  \\<Longrightarrow> ?x + ?y \\<in> Bounded_vec (DBnd + Bnd')\n  Q \\<subseteq> Bounded_vec DBnd\n  B \\<subseteq> Bounded_vec Bnd'\n  B \\<subseteq> carrier_vec n\n  Q \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. Q + B \\<subseteq> Bounded_vec (DBnd + Bnd')", "by (auto elim!: set_plus_elim)"], ["proof (state)\nthis:\n  Q + B \\<subseteq> Bounded_vec (DBnd + Bnd')\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "also"], ["proof (state)\nthis:\n  Q + B \\<subseteq> Bounded_vec (DBnd + Bnd')\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"DBnd + Bnd' = nBnd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DBnd + Bnd' = nBnd", "unfolding nBnd_def Bnd'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. DBnd + of_nat n * DBnd = of_nat (n + 1) * DBnd", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  DBnd + Bnd' = nBnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "finally"], ["proof (chain)\npicking this:\n  Q + B \\<subseteq> Bounded_vec nBnd", "have QB_Bnd: \"Q + B \\<subseteq> Bounded_vec nBnd\""], ["proof (prove)\nusing this:\n  Q + B \\<subseteq> Bounded_vec nBnd\n\ngoal (1 subgoal):\n 1. Q + B \\<subseteq> Bounded_vec nBnd", "by blast"], ["proof (state)\nthis:\n  Q + B \\<subseteq> Bounded_vec nBnd\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have finQBZ: \"finite ((Q + B) \\<inter> \\<int>\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((Q + B) \\<inter> \\<int>\\<^sub>v)", "proof (rule finite_subset[OF subsetI])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow> x \\<in> ?B\n 2. finite ?B", "define ZBnd where \"ZBnd = floor nBnd\""], ["proof (state)\nthis:\n  ZBnd = \\<lfloor>nBnd\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow> x \\<in> ?B\n 2. finite ?B", "let ?vecs = \"set (map vec_of_list (concat_lists (map (\\<lambda> i. map (of_int :: _ \\<Rightarrow> 'a) [-ZBnd..ZBnd]) [0..<n])))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow> x \\<in> ?B\n 2. finite ?B", "have id: \"?vecs = vec_of_list `\n      {as. length as = n \\<and> (\\<forall>i<n. \\<exists> b. as ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd})}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map vec_of_list\n          (concat_lists\n            (map (\\<lambda>i. map of_int [- ZBnd..ZBnd]) [0..<n]))) =\n    vec_of_list `\n    {as.\n     length as = n \\<and>\n     (\\<forall>i<n.\n         \\<exists>b. as ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd})}", "unfolding set_map"], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_of_list `\n    set (concat_lists\n          (map (\\<lambda>i. map of_int [- ZBnd..ZBnd]) [0..<n])) =\n    vec_of_list `\n    {as.\n     length as = n \\<and>\n     (\\<forall>i<n.\n         \\<exists>b. as ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd})}", "by (rule image_cong, auto)"], ["proof (state)\nthis:\n  set (map vec_of_list\n        (concat_lists\n          (map (\\<lambda>i. map of_int [- ZBnd..ZBnd]) [0..<n]))) =\n  vec_of_list `\n  {as.\n   length as = n \\<and>\n   (\\<forall>i<n.\n       \\<exists>b. as ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd})}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow> x \\<in> ?B\n 2. finite ?B", "show \"finite ?vecs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (set (map vec_of_list\n            (concat_lists\n              (map (\\<lambda>i. map of_int [- ZBnd..ZBnd]) [0..<n]))))", "by (rule finite_set)"], ["proof (state)\nthis:\n  finite\n   (set (map vec_of_list\n          (concat_lists\n            (map (\\<lambda>i. map of_int [- ZBnd..ZBnd]) [0..<n]))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow>\n       x \\<in> set (map vec_of_list\n                     (concat_lists\n                       (map (\\<lambda>i.\n                                map of_int\n                                 [- \\<lfloor>nBnd\\<rfloor>..\n                                  \\<lfloor>nBnd\\<rfloor>])\n                         [0..<n])))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow>\n       x \\<in> set (map vec_of_list\n                     (concat_lists\n                       (map (\\<lambda>i.\n                                map of_int\n                                 [- \\<lfloor>nBnd\\<rfloor>..\n                                  \\<lfloor>nBnd\\<rfloor>])\n                         [0..<n])))", "assume \"x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v\""], ["proof (state)\nthis:\n  x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow>\n       x \\<in> set (map vec_of_list\n                     (concat_lists\n                       (map (\\<lambda>i.\n                                map of_int\n                                 [- \\<lfloor>nBnd\\<rfloor>..\n                                  \\<lfloor>nBnd\\<rfloor>])\n                         [0..<n])))", "hence xQB: \"x \\<in> Q + B\" and xI: \"x \\<in> \\<int>\\<^sub>v\""], ["proof (prove)\nusing this:\n  x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. x \\<in> Q + B &&& x \\<in> \\<int>\\<^sub>v", "by auto"], ["proof (state)\nthis:\n  x \\<in> Q + B\n  x \\<in> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow>\n       x \\<in> set (map vec_of_list\n                     (concat_lists\n                       (map (\\<lambda>i.\n                                map of_int\n                                 [- \\<lfloor>nBnd\\<rfloor>..\n                                  \\<lfloor>nBnd\\<rfloor>])\n                         [0..<n])))", "from xQB QB_Bnd QB"], ["proof (chain)\npicking this:\n  x \\<in> Q + B\n  Q + B \\<subseteq> Bounded_vec nBnd\n  Q + B \\<subseteq> carrier_vec n", "have xBnd: \"x \\<in> Bounded_vec nBnd\" and x: \"x \\<in> carrier_vec n\""], ["proof (prove)\nusing this:\n  x \\<in> Q + B\n  Q + B \\<subseteq> Bounded_vec nBnd\n  Q + B \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. x \\<in> Bounded_vec nBnd &&& x \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  x \\<in> Bounded_vec nBnd\n  x \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow>\n       x \\<in> set (map vec_of_list\n                     (concat_lists\n                       (map (\\<lambda>i.\n                                map of_int\n                                 [- \\<lfloor>nBnd\\<rfloor>..\n                                  \\<lfloor>nBnd\\<rfloor>])\n                         [0..<n])))", "have xid: \"x = vec_of_list (list_of_vec x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = vec_of_list (list_of_vec x)", "by auto"], ["proof (state)\nthis:\n  x = vec_of_list (list_of_vec x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (Q + B) \\<inter> \\<int>\\<^sub>v \\<Longrightarrow>\n       x \\<in> set (map vec_of_list\n                     (concat_lists\n                       (map (\\<lambda>i.\n                                map of_int\n                                 [- \\<lfloor>nBnd\\<rfloor>..\n                                  \\<lfloor>nBnd\\<rfloor>])\n                         [0..<n])))", "show \"x \\<in> ?vecs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set (map vec_of_list\n                  (concat_lists\n                    (map (\\<lambda>i. map of_int [- ZBnd..ZBnd]) [0..<n])))", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> vec_of_list `\n            {as.\n             length as = n \\<and>\n             (\\<forall>i<n.\n                 \\<exists>b.\n                    as ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd})}", "proof (subst xid, intro imageI CollectI conjI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. length (list_of_vec x) = n\n 2. \\<And>i.\n       i < n \\<Longrightarrow>\n       \\<exists>b.\n          list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "show \"length (list_of_vec x) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (list_of_vec x) = n", "using x"], ["proof (prove)\nusing this:\n  x \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. length (list_of_vec x) = n", "by auto"], ["proof (state)\nthis:\n  length (list_of_vec x) = n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < n \\<Longrightarrow>\n       \\<exists>b.\n          list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < n \\<Longrightarrow>\n       \\<exists>b.\n          list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "assume i: \"i < n\""], ["proof (state)\nthis:\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < n \\<Longrightarrow>\n       \\<exists>b.\n          list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "have id: \"list_of_vec x ! i = x $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_of_vec x ! i = x $ i", "using i x"], ["proof (prove)\nusing this:\n  i < n\n  x \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. list_of_vec x ! i = x $ i", "by auto"], ["proof (state)\nthis:\n  list_of_vec x ! i = x $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < n \\<Longrightarrow>\n       \\<exists>b.\n          list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "from xBnd[unfolded Bounded_vec_def] i x"], ["proof (chain)\npicking this:\n  x \\<in> {x. \\<forall>i<dim_vec x. \\<bar>x $ i\\<bar> \\<le> nBnd}\n  i < n\n  x \\<in> carrier_vec n", "have xiBnd: \"abs (x $ i) \\<le> nBnd\""], ["proof (prove)\nusing this:\n  x \\<in> {x. \\<forall>i<dim_vec x. \\<bar>x $ i\\<bar> \\<le> nBnd}\n  i < n\n  x \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<bar>x $ i\\<bar> \\<le> nBnd", "by auto"], ["proof (state)\nthis:\n  \\<bar>x $ i\\<bar> \\<le> nBnd\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < n \\<Longrightarrow>\n       \\<exists>b.\n          list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "from xI[unfolded Ints_vec_def] i x"], ["proof (chain)\npicking this:\n  x \\<in> {x. \\<forall>i<dim_vec x. x $ i \\<in> \\<int>}\n  i < n\n  x \\<in> carrier_vec n", "have \"x $ i \\<in> \\<int>\""], ["proof (prove)\nusing this:\n  x \\<in> {x. \\<forall>i<dim_vec x. x $ i \\<in> \\<int>}\n  i < n\n  x \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. x $ i \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  x $ i \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < n \\<Longrightarrow>\n       \\<exists>b.\n          list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "then"], ["proof (chain)\npicking this:\n  x $ i \\<in> \\<int>", "obtain b where b: \"x $ i = of_int b\""], ["proof (prove)\nusing this:\n  x $ i \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. (\\<And>b. x $ i = of_int b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Ints_def"], ["proof (prove)\nusing this:\n  x $ i \\<in> range of_int\n\ngoal (1 subgoal):\n 1. (\\<And>b. x $ i = of_int b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x $ i = of_int b\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < n \\<Longrightarrow>\n       \\<exists>b.\n          list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "show \"\\<exists>b. list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b. list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}", "unfolding id ZBnd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b.\n       x $ i = of_int b \\<and>\n       b \\<in> {- \\<lfloor>nBnd\\<rfloor>..\\<lfloor>nBnd\\<rfloor>}", "using xiBnd"], ["proof (prove)\nusing this:\n  \\<bar>x $ i\\<bar> \\<le> nBnd\n\ngoal (1 subgoal):\n 1. \\<exists>b.\n       x $ i = of_int b \\<and>\n       b \\<in> {- \\<lfloor>nBnd\\<rfloor>..\\<lfloor>nBnd\\<rfloor>}", "unfolding b"], ["proof (prove)\nusing this:\n  \\<bar>of_int b\\<bar> \\<le> nBnd\n\ngoal (1 subgoal):\n 1. \\<exists>b.\n       of_int b = of_int b \\<and>\n       b \\<in> {- \\<lfloor>nBnd\\<rfloor>..\\<lfloor>nBnd\\<rfloor>}", "by (intro exI[of _ b], auto intro!: abs_neg_floor abs_pos_floor)"], ["proof (state)\nthis:\n  \\<exists>b. list_of_vec x ! i = of_int b \\<and> b \\<in> {- ZBnd..ZBnd}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> set (map vec_of_list\n                (concat_lists\n                  (map (\\<lambda>i. map of_int [- ZBnd..ZBnd]) [0..<n])))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite ((Q + B) \\<inter> \\<int>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have QBZ: \"(Q + B) \\<inter> \\<int>\\<^sub>v \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q + B) \\<inter> \\<int>\\<^sub>v \\<subseteq> carrier_vec n", "using QB"], ["proof (prove)\nusing this:\n  Q + B \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. (Q + B) \\<inter> \\<int>\\<^sub>v \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  (Q + B) \\<inter> \\<int>\\<^sub>v \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from decomposition_theorem_polyhedra_2[OF QBZ finQBZ, folded integer_hull_def, OF C finC refl]"], ["proof (chain)\npicking this:\n  \\<exists>A b nr.\n     A \\<in> carrier_mat nr n \\<and>\n     b \\<in> carrier_vec nr \\<and>\n     integer_hull (Q + B) + cone C = polyhedron A b", "obtain A' b' nr' where A': \"A' \\<in> carrier_mat nr' n\" and b': \"b' \\<in> carrier_vec nr'\"\n    and IH: \"integer_hull (Q + B) + cone C = polyhedron A' b'\""], ["proof (prove)\nusing this:\n  \\<exists>A b nr.\n     A \\<in> carrier_mat nr n \\<and>\n     b \\<in> carrier_vec nr \\<and>\n     integer_hull (Q + B) + cone C = polyhedron A b\n\ngoal (1 subgoal):\n 1. (\\<And>A' nr' b'.\n        \\<lbrakk>A' \\<in> carrier_mat nr' n; b' \\<in> carrier_vec nr';\n         integer_hull (Q + B) + cone C = polyhedron A' b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A' \\<in> carrier_mat nr' n\n  b' \\<in> carrier_vec nr'\n  integer_hull (Q + B) + cone C = polyhedron A' b'\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "{"], ["proof (state)\nthis:\n  A' \\<in> carrier_mat nr' n\n  b' \\<in> carrier_vec nr'\n  integer_hull (Q + B) + cone C = polyhedron A' b'\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "assume \"p \\<in> P \\<inter> \\<int>\\<^sub>v\""], ["proof (state)\nthis:\n  p \\<in> P \\<inter> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "hence pI: \"p \\<in> \\<int>\\<^sub>v\" and p: \"p \\<in> Q + cone C\""], ["proof (prove)\nusing this:\n  p \\<in> P \\<inter> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. p \\<in> \\<int>\\<^sub>v &&& p \\<in> Q + cone C", "unfolding P"], ["proof (prove)\nusing this:\n  p \\<in> (Q + cone C) \\<inter> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. p \\<in> \\<int>\\<^sub>v &&& p \\<in> Q + cone C", "by auto"], ["proof (state)\nthis:\n  p \\<in> \\<int>\\<^sub>v\n  p \\<in> Q + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from set_plus_elim[OF p]"], ["proof (chain)\npicking this:\n  (\\<And>a b.\n      \\<lbrakk>p = a + b; a \\<in> Q; b \\<in> cone C\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain q c where\n      pqc: \"p = q + c\" and qQ: \"q \\<in> Q\" and cC: \"c \\<in> cone C\""], ["proof (prove)\nusing this:\n  (\\<And>a b.\n      \\<lbrakk>p = a + b; a \\<in> Q; b \\<in> cone C\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>q c.\n        \\<lbrakk>p = q + c; q \\<in> Q; c \\<in> cone C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = q + c\n  q \\<in> Q\n  c \\<in> cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from qQ Q"], ["proof (chain)\npicking this:\n  q \\<in> Q\n  Q \\<subseteq> carrier_vec n", "have q: \"q \\<in> carrier_vec n\""], ["proof (prove)\nusing this:\n  q \\<in> Q\n  Q \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. q \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  q \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from Caratheodory_theorem[OF C] cC"], ["proof (chain)\npicking this:\n  cone C = \\<Union> {finite_cone B |B. B \\<subseteq> C \\<and> lin_indpt B}\n  c \\<in> cone C", "obtain D where cD: \"c \\<in> finite_cone D\" and DC: \"D \\<subseteq> C\" and linD: \"lin_indpt D\""], ["proof (prove)\nusing this:\n  cone C = \\<Union> {finite_cone B |B. B \\<subseteq> C \\<and> lin_indpt B}\n  c \\<in> cone C\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>c \\<in> finite_cone D; D \\<subseteq> C;\n         lin_indpt D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> finite_cone D\n  D \\<subseteq> C\n  lin_indpt D\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from DC C"], ["proof (chain)\npicking this:\n  D \\<subseteq> C\n  C \\<subseteq> carrier_vec n", "have D: \"D \\<subseteq> carrier_vec n\""], ["proof (prove)\nusing this:\n  D \\<subseteq> C\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. D \\<subseteq> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from DC finC"], ["proof (chain)\npicking this:\n  D \\<subseteq> C\n  finite C", "have finD: \"finite D\""], ["proof (prove)\nusing this:\n  D \\<subseteq> C\n  finite C\n\ngoal (1 subgoal):\n 1. finite D", "by (metis finite_subset)"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from cD finD"], ["proof (chain)\npicking this:\n  c \\<in> finite_cone D\n  finite D", "obtain a where \"nonneg_lincomb a D c\""], ["proof (prove)\nusing this:\n  c \\<in> finite_cone D\n  finite D\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        nonneg_lincomb a D c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finite_cone_def"], ["proof (prove)\nusing this:\n  c \\<in> {b. \\<exists>c. nonneg_lincomb c (if finite D then D else {}) b}\n  finite D\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        nonneg_lincomb a D c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  nonneg_lincomb a D c\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "hence caD: \"c = lincomb a D\" and a0: \"\\<And> d. d \\<in> D \\<Longrightarrow> a d \\<ge> 0\""], ["proof (prove)\nusing this:\n  nonneg_lincomb a D c\n\ngoal (1 subgoal):\n 1. c = lincomb a D &&&\n    (\\<And>d. d \\<in> D \\<Longrightarrow> (0::'a) \\<le> a d)", "unfolding nonneg_lincomb_def"], ["proof (prove)\nusing this:\n  lincomb a D = c \\<and> a ` D \\<subseteq> Collect ((\\<le>) (0::'a))\n\ngoal (1 subgoal):\n 1. c = lincomb a D &&&\n    (\\<And>d. d \\<in> D \\<Longrightarrow> (0::'a) \\<le> a d)", "by auto"], ["proof (state)\nthis:\n  c = lincomb a D\n  ?d4 \\<in> D \\<Longrightarrow> (0::'a) \\<le> a ?d4\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "define a1 where \"a1 = (\\<lambda> c. a c - of_int (floor (a c)))\""], ["proof (state)\nthis:\n  a1 = (\\<lambda>c. a c - of_int \\<lfloor>a c\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "define a2 where \"a2 = (\\<lambda> c. of_int (floor (a c)) :: 'a)\""], ["proof (state)\nthis:\n  a2 = (\\<lambda>c. of_int \\<lfloor>a c\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "define d where \"d = lincomb a2 D\""], ["proof (state)\nthis:\n  d = lincomb a2 D\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "define b where \"b = lincomb a1 D\""], ["proof (state)\nthis:\n  b = lincomb a1 D\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have b: \"b \\<in> carrier_vec n\" and d: \"d \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> carrier_vec n &&& d \\<in> carrier_vec n", "unfolding d_def b_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a1 D \\<in> carrier_vec n &&& lincomb a2 D \\<in> carrier_vec n", "using D"], ["proof (prove)\nusing this:\n  D \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. lincomb a1 D \\<in> carrier_vec n &&& lincomb a2 D \\<in> carrier_vec n", "by auto"], ["proof (state)\nthis:\n  b \\<in> carrier_vec n\n  d \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have bB: \"b \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> B", "unfolding B_def b_def nonneg_lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a1 D\n    \\<in> {x. \\<exists>a D.\n                 (lincomb a D = x \\<and>\n                  a ` D \\<subseteq> Collect ((\\<le>) (0::'a))) \\<and>\n                 D \\<subseteq> C \\<and>\n                 lin_indpt D \\<and> (\\<forall>d\\<in>D. a d \\<le> (1::'a))}", "proof (intro CollectI exI[of _ a1] exI[of _ D] conjI ballI refl subsetI linD)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> a1 ` D \\<Longrightarrow> (0::'a) \\<le> x\n 2. \\<And>x. x \\<in> D \\<Longrightarrow> x \\<in> C\n 3. \\<And>d. d \\<in> D \\<Longrightarrow> a1 d \\<le> (1::'a)", "show \"x \\<in> a1 ` D \\<Longrightarrow> 0 \\<le> x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> a1 ` D \\<Longrightarrow> (0::'a) \\<le> x", "using a0"], ["proof (prove)\nusing this:\n  ?d4 \\<in> D \\<Longrightarrow> (0::'a) \\<le> a ?d4\n\ngoal (1 subgoal):\n 1. x \\<in> a1 ` D \\<Longrightarrow> (0::'a) \\<le> x", "unfolding a1_def"], ["proof (prove)\nusing this:\n  ?d4 \\<in> D \\<Longrightarrow> (0::'a) \\<le> a ?d4\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>c. a c - of_int \\<lfloor>a c\\<rfloor>) `\n            D \\<Longrightarrow>\n    (0::'a) \\<le> x", "by auto"], ["proof (state)\nthis:\n  ?x4 \\<in> a1 ` D \\<Longrightarrow> (0::'a) \\<le> ?x4\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> D \\<Longrightarrow> x \\<in> C\n 2. \\<And>d. d \\<in> D \\<Longrightarrow> a1 d \\<le> (1::'a)", "show \"a1 c \\<le> 1\" for c"], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 c \\<le> (1::'a)", "unfolding a1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a c - of_int \\<lfloor>a c\\<rfloor> \\<le> (1::'a)", "by linarith"], ["proof (state)\nthis:\n  a1 ?c4 \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> D \\<Longrightarrow> x \\<in> C", "qed (insert DC, auto)"], ["proof (state)\nthis:\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have cbd: \"c = b + d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = b + d", "unfolding b_def d_def caD lincomb_sum[OF finD D, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a D = lincomb (\\<lambda>v. a1 v + a2 v) D", "by (rule lincomb_cong[OF refl D], auto simp: a1_def a2_def)"], ["proof (state)\nthis:\n  c = b + d\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"nonneg_lincomb a2 D d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonneg_lincomb a2 D d", "unfolding d_def nonneg_lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a2 D = lincomb a2 D \\<and>\n    a2 ` D \\<subseteq> Collect ((\\<le>) (0::'a))", "by (intro allI conjI refl subsetI, insert a0, auto simp: a2_def)"], ["proof (state)\nthis:\n  nonneg_lincomb a2 D d\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "hence dC: \"d \\<in> cone C\""], ["proof (prove)\nusing this:\n  nonneg_lincomb a2 D d\n\ngoal (1 subgoal):\n 1. d \\<in> cone C", "unfolding cone_def finite_cone_def"], ["proof (prove)\nusing this:\n  nonneg_lincomb a2 D d\n\ngoal (1 subgoal):\n 1. d \\<in> {x. \\<exists>Ws.\n                   finite Ws \\<and>\n                   Ws \\<subseteq> C \\<and>\n                   x \\<in> {b. \\<exists>c.\n                                  nonneg_lincomb c\n                                   (if finite Ws then Ws else {}) b}}", "using finC finD DC"], ["proof (prove)\nusing this:\n  nonneg_lincomb a2 D d\n  finite C\n  finite D\n  D \\<subseteq> C\n\ngoal (1 subgoal):\n 1. d \\<in> {x. \\<exists>Ws.\n                   finite Ws \\<and>\n                   Ws \\<subseteq> C \\<and>\n                   x \\<in> {b. \\<exists>c.\n                                  nonneg_lincomb c\n                                   (if finite Ws then Ws else {}) b}}", "by auto"], ["proof (state)\nthis:\n  d \\<in> cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have p: \"p = (q + b) + d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = q + b + d", "unfolding pqc cbd"], ["proof (prove)\ngoal (1 subgoal):\n 1. q + (b + d) = q + b + d", "using q b d"], ["proof (prove)\nusing this:\n  q \\<in> carrier_vec n\n  b \\<in> carrier_vec n\n  d \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. q + (b + d) = q + b + d", "by auto"], ["proof (state)\nthis:\n  p = q + b + d\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have dI: \"d \\<in> \\<int>\\<^sub>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> \\<int>\\<^sub>v", "using CI DC C"], ["proof (prove)\nusing this:\n  C \\<subseteq> \\<int>\\<^sub>v\n  D \\<subseteq> C\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. d \\<in> \\<int>\\<^sub>v", "unfolding d_def indexed_Ints_vec_UNIV"], ["proof (prove)\nusing this:\n  C \\<subseteq> indexed_Ints_vec UNIV\n  D \\<subseteq> C\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. lincomb a2 D \\<in> indexed_Ints_vec UNIV", "by (intro lincomb_indexed_Ints_vec, auto simp: a2_def)"], ["proof (state)\nthis:\n  d \\<in> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "from diff_indexed_Ints_vec[of _ _ _ UNIV, folded indexed_Ints_vec_UNIV, OF _ d pI dI, unfolded p]"], ["proof (chain)\npicking this:\n  q + b + d \\<in> carrier_vec n \\<Longrightarrow>\n  q + b + d - d \\<in> \\<int>\\<^sub>v", "have \"q + b + d - d \\<in> \\<int>\\<^sub>v\""], ["proof (prove)\nusing this:\n  q + b + d \\<in> carrier_vec n \\<Longrightarrow>\n  q + b + d - d \\<in> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. q + b + d - d \\<in> \\<int>\\<^sub>v", "using q b d"], ["proof (prove)\nusing this:\n  q + b + d \\<in> carrier_vec n \\<Longrightarrow>\n  q + b + d - d \\<in> \\<int>\\<^sub>v\n  q \\<in> carrier_vec n\n  b \\<in> carrier_vec n\n  d \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. q + b + d - d \\<in> \\<int>\\<^sub>v", "by auto"], ["proof (state)\nthis:\n  q + b + d - d \\<in> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "also"], ["proof (state)\nthis:\n  q + b + d - d \\<in> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"q + b + d - d = q + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q + b + d - d = q + b", "using q b d"], ["proof (prove)\nusing this:\n  q \\<in> carrier_vec n\n  b \\<in> carrier_vec n\n  d \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. q + b + d - d = q + b", "by auto"], ["proof (state)\nthis:\n  q + b + d - d = q + b\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "finally"], ["proof (chain)\npicking this:\n  q + b \\<in> \\<int>\\<^sub>v", "have qbI: \"q + b \\<in> \\<int>\\<^sub>v\""], ["proof (prove)\nusing this:\n  q + b \\<in> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. q + b \\<in> \\<int>\\<^sub>v", "by auto"], ["proof (state)\nthis:\n  q + b \\<in> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"p \\<in> integer_hull (Q + B) + cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> integer_hull (Q + B) + cone C", "unfolding p integer_hull_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. q + b + d \\<in> convex_hull ((Q + B) \\<inter> \\<int>\\<^sub>v) + cone C", "by (intro set_plus_intro dC set_mp[OF set_in_convex_hull] IntI qQ bB qbI, insert Q B,\n          auto elim!: set_plus_elim)"], ["proof (state)\nthis:\n  p \\<in> integer_hull (Q + B) + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "}"], ["proof (state)\nthis:\n  ?p6 \\<in> P \\<inter> \\<int>\\<^sub>v \\<Longrightarrow>\n  ?p6 \\<in> integer_hull (Q + B) + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "hence \"P \\<inter> \\<int>\\<^sub>v \\<subseteq> integer_hull (Q + B) + cone C\""], ["proof (prove)\nusing this:\n  ?p6 \\<in> P \\<inter> \\<int>\\<^sub>v \\<Longrightarrow>\n  ?p6 \\<in> integer_hull (Q + B) + cone C\n\ngoal (1 subgoal):\n 1. P \\<inter> \\<int>\\<^sub>v \\<subseteq> integer_hull (Q + B) + cone C", "by auto"], ["proof (state)\nthis:\n  P \\<inter> \\<int>\\<^sub>v \\<subseteq> integer_hull (Q + B) + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "hence one_dir: \"integer_hull P \\<subseteq> integer_hull (Q + B) + cone C\""], ["proof (prove)\nusing this:\n  P \\<inter> \\<int>\\<^sub>v \\<subseteq> integer_hull (Q + B) + cone C\n\ngoal (1 subgoal):\n 1. integer_hull P \\<subseteq> integer_hull (Q + B) + cone C", "unfolding IH"], ["proof (prove)\nusing this:\n  P \\<inter> \\<int>\\<^sub>v \\<subseteq> polyhedron A' b'\n\ngoal (1 subgoal):\n 1. integer_hull P \\<subseteq> polyhedron A' b'", "unfolding integer_hull_def"], ["proof (prove)\nusing this:\n  P \\<inter> \\<int>\\<^sub>v \\<subseteq> polyhedron A' b'\n\ngoal (1 subgoal):\n 1. convex_hull (P \\<inter> \\<int>\\<^sub>v) \\<subseteq> polyhedron A' b'", "using convex_convex_hull[OF polyhedra_are_convex[OF A' b' refl]]\n      convex_hull_mono"], ["proof (prove)\nusing this:\n  P \\<inter> \\<int>\\<^sub>v \\<subseteq> polyhedron A' b'\n  convex_hull (polyhedron A' b') = polyhedron A' b'\n  ?Vs \\<subseteq> ?Ws \\<Longrightarrow>\n  convex_hull ?Vs \\<subseteq> convex_hull ?Ws\n\ngoal (1 subgoal):\n 1. convex_hull (P \\<inter> \\<int>\\<^sub>v) \\<subseteq> polyhedron A' b'", "by blast"], ["proof (state)\nthis:\n  integer_hull P \\<subseteq> integer_hull (Q + B) + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"integer_hull (Q + B) + cone C \\<subseteq> integer_hull P + cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integer_hull (Q + B) + cone C \\<subseteq> integer_hull P + cone C", "unfolding P"], ["proof (prove)\ngoal (1 subgoal):\n 1. integer_hull (Q + B) + cone C\n    \\<subseteq> integer_hull (Q + cone C) + cone C", "proof (intro set_plus_mono2 subset_refl integer_hull_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<subseteq> cone C", "show \"B \\<subseteq> cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> cone C", "unfolding B_def cone_def finite_cone_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<exists>a D.\n           nonneg_lincomb a D x \\<and>\n           D \\<subseteq> C \\<and>\n           lin_indpt D \\<and> (\\<forall>d\\<in>D. a d \\<le> (1::'a))}\n    \\<subseteq> {x. \\<exists>Ws.\n                       finite Ws \\<and>\n                       Ws \\<subseteq> C \\<and>\n                       x \\<in> {b. \\<exists>c.\nnonneg_lincomb c (if finite Ws then Ws else {}) b}}", "using finite_subset[OF _ finC]"], ["proof (prove)\nusing this:\n  ?A \\<subseteq> C \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. {x. \\<exists>a D.\n           nonneg_lincomb a D x \\<and>\n           D \\<subseteq> C \\<and>\n           lin_indpt D \\<and> (\\<forall>d\\<in>D. a d \\<le> (1::'a))}\n    \\<subseteq> {x. \\<exists>Ws.\n                       finite Ws \\<and>\n                       Ws \\<subseteq> C \\<and>\n                       x \\<in> {b. \\<exists>c.\nnonneg_lincomb c (if finite Ws then Ws else {}) b}}", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> cone C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integer_hull (Q + B) + cone C \\<subseteq> integer_hull P + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "also"], ["proof (state)\nthis:\n  integer_hull (Q + B) + cone C \\<subseteq> integer_hull P + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"\\<dots> = integer_hull P + integer_hull (cone C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integer_hull P + cone C = integer_hull P + integer_hull (cone C)", "using integer_hull_integer_cone[OF C CI]"], ["proof (prove)\nusing this:\n  integer_hull (cone C) = cone C\n\ngoal (1 subgoal):\n 1. integer_hull P + cone C = integer_hull P + integer_hull (cone C)", "by simp"], ["proof (state)\nthis:\n  integer_hull P + cone C = integer_hull P + integer_hull (cone C)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "also"], ["proof (state)\nthis:\n  integer_hull P + cone C = integer_hull P + integer_hull (cone C)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"\\<dots> = convex_hull (P \\<inter> \\<int>\\<^sub>v) + convex_hull (cone C \\<inter> \\<int>\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integer_hull P + integer_hull (cone C) =\n    convex_hull (P \\<inter> \\<int>\\<^sub>v) +\n    convex_hull (cone C \\<inter> \\<int>\\<^sub>v)", "unfolding integer_hull_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_hull (P \\<inter> \\<int>\\<^sub>v) +\n    convex_hull (cone C \\<inter> \\<int>\\<^sub>v) =\n    convex_hull (P \\<inter> \\<int>\\<^sub>v) +\n    convex_hull (cone C \\<inter> \\<int>\\<^sub>v)", "by simp"], ["proof (state)\nthis:\n  integer_hull P + integer_hull (cone C) =\n  convex_hull (P \\<inter> \\<int>\\<^sub>v) +\n  convex_hull (cone C \\<inter> \\<int>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "also"], ["proof (state)\nthis:\n  integer_hull P + integer_hull (cone C) =\n  convex_hull (P \\<inter> \\<int>\\<^sub>v) +\n  convex_hull (cone C \\<inter> \\<int>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"\\<dots> = convex_hull ((P \\<inter> \\<int>\\<^sub>v) + (cone C \\<inter> \\<int>\\<^sub>v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_hull (P \\<inter> \\<int>\\<^sub>v) +\n    convex_hull (cone C \\<inter> \\<int>\\<^sub>v) =\n    convex_hull (P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v)", "by (rule convex_hull_sum[symmetric], insert Pn cone_carrier[OF C], auto)"], ["proof (state)\nthis:\n  convex_hull (P \\<inter> \\<int>\\<^sub>v) +\n  convex_hull (cone C \\<inter> \\<int>\\<^sub>v) =\n  convex_hull (P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "also"], ["proof (state)\nthis:\n  convex_hull (P \\<inter> \\<int>\\<^sub>v) +\n  convex_hull (cone C \\<inter> \\<int>\\<^sub>v) =\n  convex_hull (P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"\\<dots> \\<subseteq> convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_hull (P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v)\n    \\<subseteq> convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v)", "proof (rule convex_hull_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v\n    \\<subseteq> (P + cone C) \\<inter> \\<int>\\<^sub>v", "show \"P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v \\<subseteq> (P + cone C) \\<inter> \\<int>\\<^sub>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v\n    \\<subseteq> (P + cone C) \\<inter> \\<int>\\<^sub>v", "using add_indexed_Ints_vec[of _ n _ UNIV, folded indexed_Ints_vec_UNIV] cone_carrier[OF C] Pn"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier_vec n; ?y \\<in> carrier_vec n;\n   ?x \\<in> \\<int>\\<^sub>v; ?y \\<in> \\<int>\\<^sub>v\\<rbrakk>\n  \\<Longrightarrow> ?x + ?y \\<in> \\<int>\\<^sub>v\n  cone C \\<subseteq> carrier_vec n\n  P \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v\n    \\<subseteq> (P + cone C) \\<inter> \\<int>\\<^sub>v", "by (auto elim!: set_plus_elim)"], ["proof (state)\nthis:\n  P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v\n  \\<subseteq> (P + cone C) \\<inter> \\<int>\\<^sub>v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  convex_hull (P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v)\n  \\<subseteq> convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "also"], ["proof (state)\nthis:\n  convex_hull (P \\<inter> \\<int>\\<^sub>v + cone C \\<inter> \\<int>\\<^sub>v)\n  \\<subseteq> convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"\\<dots> = integer_hull (P + cone C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v) =\n    integer_hull (P + cone C)", "unfolding integer_hull_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v) =\n    convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v)", ".."], ["proof (state)\nthis:\n  convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v) =\n  integer_hull (P + cone C)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "also"], ["proof (state)\nthis:\n  convex_hull ((P + cone C) \\<inter> \\<int>\\<^sub>v) =\n  integer_hull (P + cone C)\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "have \"P + cone C = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P + cone C = P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P + cone C = P", "have CC: \"cone C \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cone C \\<subseteq> carrier_vec n", "using C"], ["proof (prove)\nusing this:\n  C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. cone C \\<subseteq> carrier_vec n", "by (rule cone_carrier)"], ["proof (state)\nthis:\n  cone C \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. P + cone C = P", "have \"P + cone C = Q + (cone C + cone C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P + cone C = Q + (cone C + cone C)", "unfolding P"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q + cone C + cone C = Q + (cone C + cone C)", "by (rule assoc_add_vecset[symmetric, OF Q CC CC])"], ["proof (state)\nthis:\n  P + cone C = Q + (cone C + cone C)\n\ngoal (1 subgoal):\n 1. P + cone C = P", "also"], ["proof (state)\nthis:\n  P + cone C = Q + (cone C + cone C)\n\ngoal (1 subgoal):\n 1. P + cone C = P", "have \"cone C + cone C = cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cone C + cone C = cone C", "by (rule cone_add_cone[OF C])"], ["proof (state)\nthis:\n  cone C + cone C = cone C\n\ngoal (1 subgoal):\n 1. P + cone C = P", "finally"], ["proof (chain)\npicking this:\n  P + cone C = Q + cone C", "show ?thesis"], ["proof (prove)\nusing this:\n  P + cone C = Q + cone C\n\ngoal (1 subgoal):\n 1. P + cone C = P", "unfolding P"], ["proof (prove)\nusing this:\n  Q + cone C + cone C = Q + cone C\n\ngoal (1 subgoal):\n 1. Q + cone C + cone C = Q + cone C", "."], ["proof (state)\nthis:\n  P + cone C = P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P + cone C = P\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "finally"], ["proof (chain)\npicking this:\n  integer_hull (Q + B) + cone C \\<subseteq> integer_hull P", "have \"integer_hull (Q + B) + cone C \\<subseteq> integer_hull P\""], ["proof (prove)\nusing this:\n  integer_hull (Q + B) + cone C \\<subseteq> integer_hull P\n\ngoal (1 subgoal):\n 1. integer_hull (Q + B) + cone C \\<subseteq> integer_hull P", "."], ["proof (state)\nthis:\n  integer_hull (Q + B) + cone C \\<subseteq> integer_hull P\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "with one_dir"], ["proof (chain)\npicking this:\n  integer_hull P \\<subseteq> integer_hull (Q + B) + cone C\n  integer_hull (Q + B) + cone C \\<subseteq> integer_hull P", "have id: \"integer_hull P = integer_hull (Q + B) + cone C\""], ["proof (prove)\nusing this:\n  integer_hull P \\<subseteq> integer_hull (Q + B) + cone C\n  integer_hull (Q + B) + cone C \\<subseteq> integer_hull P\n\ngoal (1 subgoal):\n 1. integer_hull P = integer_hull (Q + B) + cone C", "by auto"], ["proof (state)\nthis:\n  integer_hull P = integer_hull (Q + B) + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>H C.\n       H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>H Ca.\n       H \\<union> Ca\n       \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n       Ca \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n       finite (H \\<union> Ca) \\<and>\n       integer_hull (Q + B) + cone C = convex_hull H + cone Ca", "unfolding integer_hull_def nBnd[symmetric] DBnd[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>H Ca.\n       H \\<union> Ca\n       \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n       H \\<subseteq> Bounded_vec nBnd \\<and>\n       Ca \\<subseteq> Bounded_vec DBnd \\<and>\n       finite (H \\<union> Ca) \\<and>\n       convex_hull ((Q + B) \\<inter> \\<int>\\<^sub>v) + cone C =\n       convex_hull H + cone Ca", "proof (rule exI[of _ \"(Q + B) \\<inter> \\<int>\\<^sub>v\"], intro exI[of _ C] conjI refl BndC)"], ["proof (state)\ngoal (3 subgoals):\n 1. (Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C\n    \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\n 2. (Q + B) \\<inter> \\<int>\\<^sub>v \\<subseteq> Bounded_vec nBnd\n 3. finite ((Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C)", "from QB_Bnd"], ["proof (chain)\npicking this:\n  Q + B \\<subseteq> Bounded_vec nBnd", "show \"(Q + B) \\<inter> \\<int>\\<^sub>v \\<subseteq> Bounded_vec nBnd\""], ["proof (prove)\nusing this:\n  Q + B \\<subseteq> Bounded_vec nBnd\n\ngoal (1 subgoal):\n 1. (Q + B) \\<inter> \\<int>\\<^sub>v \\<subseteq> Bounded_vec nBnd", "by auto"], ["proof (state)\nthis:\n  (Q + B) \\<inter> \\<int>\\<^sub>v \\<subseteq> Bounded_vec nBnd\n\ngoal (2 subgoals):\n 1. (Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C\n    \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\n 2. finite ((Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C)", "show \"(Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C\n    \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v", "using QB C CI"], ["proof (prove)\nusing this:\n  Q + B \\<subseteq> carrier_vec n\n  C \\<subseteq> carrier_vec n\n  C \\<subseteq> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. (Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C\n    \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v", "by auto"], ["proof (state)\nthis:\n  (Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C\n  \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\n\ngoal (1 subgoal):\n 1. finite ((Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C)", "show \"finite ((Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C)", "using finQBZ finC"], ["proof (prove)\nusing this:\n  finite ((Q + B) \\<inter> \\<int>\\<^sub>v)\n  finite C\n\ngoal (1 subgoal):\n 1. finite ((Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C)", "by auto"], ["proof (state)\nthis:\n  finite ((Q + B) \\<inter> \\<int>\\<^sub>v \\<union> C)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>H C.\n     H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n     H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n     C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n     finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary integer_hull_of_polyhedron: assumes A: \"A \\<in> carrier_mat nr n\"\n  and b: \"b \\<in> carrier_vec nr\"\n  and AI: \"A \\<in> \\<int>\\<^sub>m\"\n  and bI: \"b \\<in> \\<int>\\<^sub>v\"\n  and P: \"P = polyhedron A b\"\nshows \"\\<exists> A' b' nr'. A' \\<in> carrier_mat nr' n \\<and> b' \\<in> carrier_vec nr' \\<and> integer_hull P = polyhedron A' b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A' b' nr'.\n       A' \\<in> carrier_mat nr' n \\<and>\n       b' \\<in> carrier_vec nr' \\<and> integer_hull P = polyhedron A' b'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A' b' nr'.\n       A' \\<in> carrier_mat nr' n \\<and>\n       b' \\<in> carrier_vec nr' \\<and> integer_hull P = polyhedron A' b'", "from decomposition_theorem_integer_hull_of_polyhedron[OF A b AI bI P refl]"], ["proof (chain)\npicking this:\n  \\<exists>H C.\n     H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n     H \\<subseteq> Bounded_vec\n                    (fact (n + 1) *\n                     max (1::'a)\n                      (Max (abs `\n                            (elements_mat A \\<union> set\\<^sub>v b))) ^\n                     n) \\<and>\n     C \\<subseteq> Bounded_vec\n                    (fact n *\n                     max (1::'a)\n                      (Max (abs `\n                            (elements_mat A \\<union> set\\<^sub>v b))) ^\n                     n) \\<and>\n     finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C", "obtain H C\n    where HC: \"H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\" \"finite (H \\<union> C)\" \n      and decomp: \"integer_hull P = convex_hull H + cone C\""], ["proof (prove)\nusing this:\n  \\<exists>H C.\n     H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n     H \\<subseteq> Bounded_vec\n                    (fact (n + 1) *\n                     max (1::'a)\n                      (Max (abs `\n                            (elements_mat A \\<union> set\\<^sub>v b))) ^\n                     n) \\<and>\n     C \\<subseteq> Bounded_vec\n                    (fact n *\n                     max (1::'a)\n                      (Max (abs `\n                            (elements_mat A \\<union> set\\<^sub>v b))) ^\n                     n) \\<and>\n     finite (H \\<union> C) \\<and> integer_hull P = convex_hull H + cone C\n\ngoal (1 subgoal):\n 1. (\\<And>H C.\n        \\<lbrakk>H \\<union> C\n                 \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v;\n         finite (H \\<union> C);\n         integer_hull P = convex_hull H + cone C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\n  finite (H \\<union> C)\n  integer_hull P = convex_hull H + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>A' b' nr'.\n       A' \\<in> carrier_mat nr' n \\<and>\n       b' \\<in> carrier_vec nr' \\<and> integer_hull P = polyhedron A' b'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A' b' nr'.\n       A' \\<in> carrier_mat nr' n \\<and>\n       b' \\<in> carrier_vec nr' \\<and> integer_hull P = polyhedron A' b'", "by (rule decomposition_theorem_polyhedra_2[OF _ _ _ _ decomp], insert HC, auto)"], ["proof (state)\nthis:\n  \\<exists>A' b' nr'.\n     A' \\<in> carrier_mat nr' n \\<and>\n     b' \\<in> carrier_vec nr' \\<and> integer_hull P = polyhedron A' b'\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary small_integer_solution_nonstrict_via_decomp: fixes A :: \"'a mat\"\n  assumes A: \"A \\<in> carrier_mat nr n\"\n    and b: \"b \\<in> carrier_vec nr\"\n    and AI: \"A \\<in> \\<int>\\<^sub>m\"\n    and bI: \"b \\<in> \\<int>\\<^sub>v\"\n    and Bnd: \"Bnd = Max (abs ` (elements_mat A \\<union> vec_set b))\"\n    and x: \"x \\<in> carrier_vec n\"\n    and xI: \"x \\<in> \\<int>\\<^sub>v\"\n    and sol: \"A *\\<^sub>v x \\<le> b\"\n  shows \"\\<exists> y.\n  y \\<in> carrier_vec n \\<and>\n  y \\<in> \\<int>\\<^sub>v \\<and>\n  A *\\<^sub>v y \\<le> b \\<and>\n  y \\<in> Bounded_vec (fact (n+1) * (max 1 Bnd)^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "from x sol"], ["proof (chain)\npicking this:\n  x \\<in> carrier_vec n\n  A *\\<^sub>v x \\<le> b", "have \"x \\<in> polyhedron A b\""], ["proof (prove)\nusing this:\n  x \\<in> carrier_vec n\n  A *\\<^sub>v x \\<le> b\n\ngoal (1 subgoal):\n 1. x \\<in> polyhedron A b", "unfolding polyhedron_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier_vec n\n  A *\\<^sub>v x \\<le> b\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> carrier_vec n. A *\\<^sub>v x \\<le> b}", "by auto"], ["proof (state)\nthis:\n  x \\<in> polyhedron A b\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "with xI x"], ["proof (chain)\npicking this:\n  x \\<in> \\<int>\\<^sub>v\n  x \\<in> carrier_vec n\n  x \\<in> polyhedron A b", "have xsol: \"x \\<in> integer_hull (polyhedron A b)\""], ["proof (prove)\nusing this:\n  x \\<in> \\<int>\\<^sub>v\n  x \\<in> carrier_vec n\n  x \\<in> polyhedron A b\n\ngoal (1 subgoal):\n 1. x \\<in> integer_hull (polyhedron A b)", "unfolding integer_hull_def"], ["proof (prove)\nusing this:\n  x \\<in> \\<int>\\<^sub>v\n  x \\<in> carrier_vec n\n  x \\<in> polyhedron A b\n\ngoal (1 subgoal):\n 1. x \\<in> convex_hull (polyhedron A b \\<inter> \\<int>\\<^sub>v)", "by (meson IntI convex_hull_mono in_mono inf_sup_ord(1) inf_sup_ord(2) set_in_convex_hull)"], ["proof (state)\nthis:\n  x \\<in> integer_hull (polyhedron A b)\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "from decomposition_theorem_integer_hull_of_polyhedron[OF A b AI bI refl Bnd]"], ["proof (chain)\npicking this:\n  \\<exists>H C.\n     H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n     H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n     C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n     finite (H \\<union> C) \\<and>\n     integer_hull (polyhedron A b) = convex_hull H + cone C", "obtain H C where HC: \"H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\" \n    \"H \\<subseteq> Bounded_vec (fact (n + 1) * max 1 Bnd ^ n)\" \n    \"finite (H \\<union> C)\" and\n    id: \"integer_hull (polyhedron A b) = convex_hull H + cone C\""], ["proof (prove)\nusing this:\n  \\<exists>H C.\n     H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v \\<and>\n     H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n) \\<and>\n     C \\<subseteq> Bounded_vec (fact n * max (1::'a) Bnd ^ n) \\<and>\n     finite (H \\<union> C) \\<and>\n     integer_hull (polyhedron A b) = convex_hull H + cone C\n\ngoal (1 subgoal):\n 1. (\\<And>H C.\n        \\<lbrakk>H \\<union> C\n                 \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v;\n         H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n);\n         finite (H \\<union> C);\n         integer_hull (polyhedron A b) = convex_hull H + cone C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\n  H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)\n  finite (H \\<union> C)\n  integer_hull (polyhedron A b) = convex_hull H + cone C\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "from xsol[unfolded id]"], ["proof (chain)\npicking this:\n  x \\<in> convex_hull H + cone C", "have \"H \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> convex_hull H + cone C\n\ngoal (1 subgoal):\n 1. H \\<noteq> {}", "unfolding set_plus_def"], ["proof (prove)\nusing this:\n  x \\<in> {c. \\<exists>a\\<in>convex_hull H.\n                 \\<exists>b\\<in>cone C. c = a + b}\n\ngoal (1 subgoal):\n 1. H \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  H \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "then"], ["proof (chain)\npicking this:\n  H \\<noteq> {}", "obtain h where hH: \"h \\<in> H\""], ["proof (prove)\nusing this:\n  H \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>h. h \\<in> H \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> H\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "with set_in_convex_hull"], ["proof (chain)\npicking this:\n  ?A \\<subseteq> carrier_vec n \\<Longrightarrow>\n  ?A \\<subseteq> convex_hull ?A\n  h \\<in> H", "have \"h \\<in> convex_hull H\""], ["proof (prove)\nusing this:\n  ?A \\<subseteq> carrier_vec n \\<Longrightarrow>\n  ?A \\<subseteq> convex_hull ?A\n  h \\<in> H\n\ngoal (1 subgoal):\n 1. h \\<in> convex_hull H", "using HC"], ["proof (prove)\nusing this:\n  ?A \\<subseteq> carrier_vec n \\<Longrightarrow>\n  ?A \\<subseteq> convex_hull ?A\n  h \\<in> H\n  H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\n  H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)\n  finite (H \\<union> C)\n\ngoal (1 subgoal):\n 1. h \\<in> convex_hull H", "by auto"], ["proof (state)\nthis:\n  h \\<in> convex_hull H\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "moreover"], ["proof (state)\nthis:\n  h \\<in> convex_hull H\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "have \"0\\<^sub>v n \\<in> cone C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>v n \\<in> cone C", "by (intro zero_in_cone)"], ["proof (state)\nthis:\n  0\\<^sub>v n \\<in> cone C\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "ultimately"], ["proof (chain)\npicking this:\n  h \\<in> convex_hull H\n  0\\<^sub>v n \\<in> cone C", "have \"h + 0\\<^sub>v n \\<in> integer_hull (polyhedron A b)\""], ["proof (prove)\nusing this:\n  h \\<in> convex_hull H\n  0\\<^sub>v n \\<in> cone C\n\ngoal (1 subgoal):\n 1. h + 0\\<^sub>v n \\<in> integer_hull (polyhedron A b)", "unfolding id"], ["proof (prove)\nusing this:\n  h \\<in> convex_hull H\n  0\\<^sub>v n \\<in> cone C\n\ngoal (1 subgoal):\n 1. h + 0\\<^sub>v n \\<in> convex_hull H + cone C", "by auto"], ["proof (state)\nthis:\n  h + 0\\<^sub>v n \\<in> integer_hull (polyhedron A b)\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "also"], ["proof (state)\nthis:\n  h + 0\\<^sub>v n \\<in> integer_hull (polyhedron A b)\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "have \"h + 0\\<^sub>v n = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h + 0\\<^sub>v n = h", "using hH HC"], ["proof (prove)\nusing this:\n  h \\<in> H\n  H \\<union> C \\<subseteq> carrier_vec n \\<inter> \\<int>\\<^sub>v\n  H \\<subseteq> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)\n  finite (H \\<union> C)\n\ngoal (1 subgoal):\n 1. h + 0\\<^sub>v n = h", "by auto"], ["proof (state)\nthis:\n  h + 0\\<^sub>v n = h\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "also"], ["proof (state)\nthis:\n  h + 0\\<^sub>v n = h\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "have \"integer_hull (polyhedron A b) \\<subseteq> convex_hull (polyhedron A b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integer_hull (polyhedron A b) \\<subseteq> convex_hull (polyhedron A b)", "unfolding integer_hull_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_hull (polyhedron A b \\<inter> \\<int>\\<^sub>v)\n    \\<subseteq> convex_hull (polyhedron A b)", "by (rule convex_hull_mono, auto)"], ["proof (state)\nthis:\n  integer_hull (polyhedron A b) \\<subseteq> convex_hull (polyhedron A b)\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "also"], ["proof (state)\nthis:\n  integer_hull (polyhedron A b) \\<subseteq> convex_hull (polyhedron A b)\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "have \"convex_hull (polyhedron A b) = polyhedron A b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_hull (polyhedron A b) = polyhedron A b", "using A b"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat nr n\n  b \\<in> carrier_vec nr\n\ngoal (1 subgoal):\n 1. convex_hull (polyhedron A b) = polyhedron A b", "using convex_convex_hull polyhedra_are_convex"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat nr n\n  b \\<in> carrier_vec nr\n  convex ?S \\<Longrightarrow> convex_hull ?S = ?S\n  \\<lbrakk>?A \\<in> carrier_mat ?nr n; ?b \\<in> carrier_vec ?nr;\n   ?P = polyhedron ?A ?b\\<rbrakk>\n  \\<Longrightarrow> convex ?P\n\ngoal (1 subgoal):\n 1. convex_hull (polyhedron A b) = polyhedron A b", "by blast"], ["proof (state)\nthis:\n  convex_hull (polyhedron A b) = polyhedron A b\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "finally"], ["proof (chain)\npicking this:\n  h \\<in> polyhedron A b", "have h: \"h \\<in> carrier_vec n\" \"A *\\<^sub>v h \\<le> b\""], ["proof (prove)\nusing this:\n  h \\<in> polyhedron A b\n\ngoal (1 subgoal):\n 1. h \\<in> carrier_vec n &&& A *\\<^sub>v h \\<le> b", "unfolding polyhedron_def"], ["proof (prove)\nusing this:\n  h \\<in> {x \\<in> carrier_vec n. A *\\<^sub>v x \\<le> b}\n\ngoal (1 subgoal):\n 1. h \\<in> carrier_vec n &&& A *\\<^sub>v h \\<le> b", "by auto"], ["proof (state)\nthis:\n  h \\<in> carrier_vec n\n  A *\\<^sub>v h \\<le> b\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> carrier_vec n \\<and>\n       y \\<in> \\<int>\\<^sub>v \\<and>\n       A *\\<^sub>v y \\<le> b \\<and>\n       y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)", "by (intro exI[of _ h] conjI h, insert HC hH, auto)"], ["proof (state)\nthis:\n  \\<exists>y.\n     y \\<in> carrier_vec n \\<and>\n     y \\<in> \\<int>\\<^sub>v \\<and>\n     A *\\<^sub>v y \\<le> b \\<and>\n     y \\<in> Bounded_vec (fact (n + 1) * max (1::'a) Bnd ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}