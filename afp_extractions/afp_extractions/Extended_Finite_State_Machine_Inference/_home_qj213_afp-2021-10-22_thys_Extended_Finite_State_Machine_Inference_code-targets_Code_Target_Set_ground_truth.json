{"file_name": "/home/qj213/afp-2021-10-22/thys/Extended_Finite_State_Machine_Inference/code-targets/Code_Target_Set.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Extended_Finite_State_Machine_Inference", "problem_names": ["lemma [code del]:\n  \"x \\<in> List.coset xs \\<longleftrightarrow> \\<not> List.member xs x\"", "lemma sup_set_append[code]: \"(set x) \\<union> (set y) = set (x @ y)\"", "lemma [code]: \"insert x (set s) = (if x \\<in> set s then set s else set (x#s))\"", "lemma [code]:\n  \"Cardinality.subset' (set l1) (set l2) = ((list_all (\\<lambda>x. List.member l2 x)) l1)\""], "translations": [["", "lemma [code del]:\n  \"x \\<in> List.coset xs \\<longleftrightarrow> \\<not> List.member xs x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> List.coset xs) = (\\<not> List.member xs x)", "by (simp add: member_def)"], ["", "lemma sup_set_append[code]: \"(set x) \\<union> (set y) = set (x @ y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set x \\<union> set y = set (x @ y)", "by simp"], ["", "declare product_concat_map [code]"], ["", "lemma [code]: \"insert x (set s) = (if x \\<in> set s then set s else set (x#s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (set s) = (if x \\<in> set s then set s else set (x # s))", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set s \\<longrightarrow> insert x (set s) = set s", "by auto"], ["", "lemma [code]:\n  \"Cardinality.subset' (set l1) (set l2) = ((list_all (\\<lambda>x. List.member l2 x)) l1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cardinality.subset' (set l1) (set l2) = list_all (List.member l2) l1", "by (meson in_set_member list.pred_set subset'_code(2))"], ["", "end"]]}