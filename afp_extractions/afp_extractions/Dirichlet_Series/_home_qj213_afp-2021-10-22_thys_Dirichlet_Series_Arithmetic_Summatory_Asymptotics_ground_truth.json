{"file_name": "/home/qj213/afp-2021-10-22/thys/Dirichlet_Series/Arithmetic_Summatory_Asymptotics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Dirichlet_Series", "problem_names": ["lemma sum_inverse_squares_tail_bound:\n  assumes \"d > 0\"\n  shows   \"summable (\\<lambda>n. 1 / (real (Suc n) + d) ^ 2)\"\n          \"(\\<Sum>n. 1 / (real (Suc n) + d) ^ 2) \\<le> 1 / d\"", "lemma moebius_sum_tail_bound:\n  assumes \"d > 0\"\n  shows   \"abs (\\<Sum>n. moebius_mu (Suc n + d) / real (Suc n + d)^2) \\<le> 1 / d\" (is \"abs ?S \\<le> _\")", "lemma sum_upto_inverse_bound:\n  \"sum_upto (\\<lambda>i. 1 / real i) x \\<ge> 0\"\n  \"eventually (\\<lambda>x. sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22) at_top\"", "lemma sum_upto_inverse_bigo: \"sum_upto (\\<lambda>i. 1 / real i) \\<in> O(\\<lambda>x. ln x)\"", "lemma\n  defines \"G \\<equiv> (\\<lambda>x::real. (\\<Sum>n. moebius_mu (n + Suc (nat \\<lfloor>x\\<rfloor>)) / (n + Suc (nat \\<lfloor>x\\<rfloor>))^2) :: real)\"\n  shows   moebius_sum_tail_bound': \"\\<And>t. t \\<ge> 2 \\<Longrightarrow> \\<bar>G t\\<bar> \\<le> 1 / (t - 1)\"\n    and   moebius_sum_tail_bigo:   \"G \\<in> O(\\<lambda>t. 1 / t)\"", "theorem summatory_totient_asymptotics:\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. real (totient n)) x - 3 / pi\\<^sup>2 * x\\<^sup>2) \\<in> O(\\<lambda>x. x * ln x)\"", "theorem summatory_totient_asymptotics':\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. real (totient n)) x) =o (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2) +o O(\\<lambda>x. x * ln x)\"", "theorem summatory_totient_asymptotics'':\n  \"sum_upto (\\<lambda>n. real (totient n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)\"", "lemma le_sqrt_iff: \"x \\<ge> 0 \\<Longrightarrow> x \\<le> sqrt y \\<longleftrightarrow> x^2 \\<le> y\"", "theorem squarefree_asymptotics: \"(\\<lambda>x. card {n. real n \\<le> x \\<and> squarefree n} - 6 / pi\\<^sup>2 * x) \\<in> O(sqrt)\"", "theorem squarefree_asymptotics':\n  \"(\\<lambda>x. card {n. real n \\<le> x \\<and> squarefree n}) =o (\\<lambda>x. 6 / pi\\<^sup>2 * x) +o O(\\<lambda>x. sqrt x)\"", "theorem squarefree_asymptotics'':\n  \"(\\<lambda>x. card {n. real n \\<le> x \\<and> squarefree n}) \\<sim>[at_top] (\\<lambda>x. 6 / pi\\<^sup>2 * x)\"", "lemma hyperbola_method_bigo:\n  fixes f g :: \"nat \\<Rightarrow> 'a :: real_normed_field\"\n  assumes \"(\\<lambda>x. sum_upto (\\<lambda>n. f n * sum_upto g (x / real n)) (sqrt x) - R x) \\<in> O(b)\"\n  assumes \"(\\<lambda>x. sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n) (sqrt x) - S x) \\<in> O(b)\"\n  assumes \"(\\<lambda>x. sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x) \\<in> O(b)\"\n  shows   \"(\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x)) \\<in> O(b)\"", "lemma frac_le_1: \"frac x \\<le> 1\"", "lemma ln_minus_ln_floor_bound:\n  assumes \"x \\<ge> 2\"\n  shows   \"ln x - ln (floor x) \\<in> {0..<1 / (x - 1)}\"", "lemma ln_minus_ln_floor_bigo:\n  \"(\\<lambda>x::real. ln x - ln (floor x)) \\<in> O(\\<lambda>x. 1 / x)\"", "lemma divisor_count_asymptotics_aux:\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) -\n                    (x * ln x / 2 + euler_mascheroni * x)) \\<in> O(sqrt)\"", "lemma sum_upto_sqrt_bound:\n  assumes x: \"x \\<ge> (0 :: real)\"\n  shows   \"norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x) \\<le> 2 * norm (sqrt x)\"", "lemma summatory_divisor_count_asymptotics:\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. real (divisor_count n)) x -\n          (x * ln x + (2 * euler_mascheroni - 1) * x)) \\<in> O(sqrt)\"", "theorem summatory_divisor_count_asymptotics':\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. real (divisor_count n)) x) =o \n     (\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x) +o O(\\<lambda>x. sqrt x)\"", "theorem summatory_divisor_count_asymptotics'':\n  \"sum_upto (\\<lambda>n. real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)\"", "lemma summatory_divisor_eq:\n  \"sum_upto (\\<lambda>n. real (divisor_count n)) (real m) = card {(n,d). n \\<in> {0<..m} \\<and> d dvd n}\"", "lemma mean_divisor_count_asymptotics:\n  \"(\\<lambda>m. M m - (ln m + 2 * euler_mascheroni - 1)) \\<in> O(\\<lambda>m. 1 / sqrt m)\"", "theorem mean_divisor_count_asymptotics':\n  \"M =o (\\<lambda>x. ln x + 2 * euler_mascheroni - 1) +o O(\\<lambda>x. 1 / sqrt x)\"", "theorem mean_divisor_count_asymptotics'': \"M \\<sim>[at_top] ln\"", "lemma coprime_pairs_asymptotics:\n  \"(\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2) \\<in> O(\\<lambda>N. real N * ln (real N))\"", "theorem coprime_pairs_asymptotics':\n  \"(\\<lambda>N. real (card (A N))) =o (\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2) +o O(\\<lambda>N. real N * ln (real N))\"", "theorem coprime_pairs_asymptotics'':\n  \"(\\<lambda>N. real (card (A N))) \\<sim>[at_top] (\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\"", "theorem coprime_probability_tendsto:\n  \"(\\<lambda>N. card (A N) / card ({1..N} \\<times> {1..N})) \\<longlonglongrightarrow> 6 / pi\\<^sup>2\"", "lemma Fract_eq_coprime: \n  assumes \"Rat.Fract a b = Rat.Fract c d\" \"b > 0\" \"d > 0\" \"coprime a b\" \"coprime c d\"\n  shows   \"a = c\" \"b = d\"", "lemma quotient_of_split: \n  \"P (quotient_of q) = (\\<forall>a b. b > 0 \\<longrightarrow> coprime a b \\<longrightarrow> q = Rat.Fract a b \\<longrightarrow> P (a, b))\"", "lemma quotient_of_split_asm: \n  \"P (Rat.quotient_of q) = (\\<not>(\\<exists>a b. b > 0 \\<and> coprime a b \\<and> q = Rat.Fract a b \\<and> \\<not>P (a, b)))\"", "lemma farey_fractions_bij:\n  \"bij_betw (\\<lambda>(a,b). Rat.Fract (int a) (int b)) \n     {(a,b)|a b. 0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} (farey_fractions N)\"", "lemma card_farey_fractions: \"card (farey_fractions N) = sum totient {0<..N}\"", "lemma card_farey_fractions_asymptotics:\n  \"(\\<lambda>N. real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2) \\<in> O(\\<lambda>N. real N * ln (real N))\"", "theorem card_farey_fractions_asymptotics':\n  \"(\\<lambda>N. card (farey_fractions N)) =o (\\<lambda>N. 3 / pi\\<^sup>2 * N^2) +o O(\\<lambda>N. N * ln N)\"", "theorem card_farey_fractions_asymptotics'':\n  \"(\\<lambda>N. real (card (farey_fractions N))) \\<sim>[at_top] (\\<lambda>N. 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\""], "translations": [["", "lemma sum_inverse_squares_tail_bound:\n  assumes \"d > 0\"\n  shows   \"summable (\\<lambda>n. 1 / (real (Suc n) + d) ^ 2)\"\n          \"(\\<Sum>n. 1 / (real (Suc n) + d) ^ 2) \\<le> 1 / d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2) &&&\n    (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2) \\<le> 1 / d", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2)\n 2. (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2) \\<le> 1 / d", "show *: \"summable (\\<lambda>n. 1 / (real (Suc n) + d) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2)", "proof (rule summable_comparison_test, intro allI exI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       ?N3 \\<le> n \\<Longrightarrow>\n       norm (1 / (real (Suc n) + d)\\<^sup>2) \\<le> ?g n\n 2. summable ?g", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       ?N3 \\<le> n \\<Longrightarrow>\n       norm (1 / (real (Suc n) + d)\\<^sup>2) \\<le> ?g n\n 2. summable ?g", "from assms"], ["proof (chain)\npicking this:\n  0 < d", "show \"norm (1 / (real (Suc n) + d) ^ 2) \\<le> 1 / real (Suc n) ^ 2\""], ["proof (prove)\nusing this:\n  0 < d\n\ngoal (1 subgoal):\n 1. norm (1 / (real (Suc n) + d)\\<^sup>2) \\<le> 1 / (real (Suc n))\\<^sup>2", "unfolding norm_divide norm_one norm_power"], ["proof (prove)\nusing this:\n  0 < d\n\ngoal (1 subgoal):\n 1. 1 / (norm (real (Suc n) + d))\\<^sup>2 \\<le> 1 / (real (Suc n))\\<^sup>2", "by (intro divide_left_mono power_mono) simp_all"], ["proof (state)\nthis:\n  norm (1 / (real (Suc n) + d)\\<^sup>2) \\<le> 1 / (real (Suc n))\\<^sup>2\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. 1 / (real (Suc n))\\<^sup>2)", "qed (insert inverse_squares_sums, simp add: sums_iff)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2) \\<le> 1 / d", "show \"(\\<Sum>n. 1 / (real (Suc n) + d) ^ 2) \\<le> 1 / d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2) \\<le> 1 / d", "proof (rule sums_le)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n. ?f n \\<le> ?g n\n 2. ?f sums (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\n 3. ?g sums (1 / d)", "fix n"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n. ?f n \\<le> ?g n\n 2. ?f sums (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\n 3. ?g sums (1 / d)", "have \"1 / (real (Suc n) + d) ^ 2 \\<le> 1 / ((real n + d) * (real (Suc n) + d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (real (Suc n) + d)\\<^sup>2\n    \\<le> 1 / ((real n + d) * (real (Suc n) + d))", "unfolding power2_eq_square"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / ((real (Suc n) + d) * (real (Suc n) + d))\n    \\<le> 1 / ((real n + d) * (real (Suc n) + d))", "using assms"], ["proof (prove)\nusing this:\n  0 < d\n\ngoal (1 subgoal):\n 1. 1 / ((real (Suc n) + d) * (real (Suc n) + d))\n    \\<le> 1 / ((real n + d) * (real (Suc n) + d))", "by (intro divide_left_mono mult_mono mult_pos_pos add_nonneg_pos) simp_all"], ["proof (state)\nthis:\n  1 / (real (Suc n) + d)\\<^sup>2\n  \\<le> 1 / ((real n + d) * (real (Suc n) + d))\n\ngoal (3 subgoals):\n 1. \\<And>n. ?f n \\<le> ?g n\n 2. ?f sums (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\n 3. ?g sums (1 / d)", "also"], ["proof (state)\nthis:\n  1 / (real (Suc n) + d)\\<^sup>2\n  \\<le> 1 / ((real n + d) * (real (Suc n) + d))\n\ngoal (3 subgoals):\n 1. \\<And>n. ?f n \\<le> ?g n\n 2. ?f sums (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\n 3. ?g sums (1 / d)", "have \"\\<dots> = 1 / (real n + d) - 1 / (real (Suc n) + d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / ((real n + d) * (real (Suc n) + d)) =\n    1 / (real n + d) - 1 / (real (Suc n) + d)", "using assms"], ["proof (prove)\nusing this:\n  0 < d\n\ngoal (1 subgoal):\n 1. 1 / ((real n + d) * (real (Suc n) + d)) =\n    1 / (real n + d) - 1 / (real (Suc n) + d)", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  1 / ((real n + d) * (real (Suc n) + d)) =\n  1 / (real n + d) - 1 / (real (Suc n) + d)\n\ngoal (3 subgoals):\n 1. \\<And>n. ?f n \\<le> ?g n\n 2. ?f sums (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\n 3. ?g sums (1 / d)", "finally"], ["proof (chain)\npicking this:\n  1 / (real (Suc n) + d)\\<^sup>2\n  \\<le> 1 / (real n + d) - 1 / (real (Suc n) + d)", "show \"1 / (real (Suc n) + d)\\<^sup>2 \\<le> 1 / (real n + d) - 1 / (real (Suc n) + d)\""], ["proof (prove)\nusing this:\n  1 / (real (Suc n) + d)\\<^sup>2\n  \\<le> 1 / (real n + d) - 1 / (real (Suc n) + d)\n\ngoal (1 subgoal):\n 1. 1 / (real (Suc n) + d)\\<^sup>2\n    \\<le> 1 / (real n + d) - 1 / (real (Suc n) + d)", "."], ["proof (state)\nthis:\n  1 / (real (Suc n) + d)\\<^sup>2\n  \\<le> 1 / (real n + d) - 1 / (real (Suc n) + d)\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. 1 / (real (Suc (?n7 n)) + d)\\<^sup>2) sums\n    (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\n 2. (\\<lambda>n. 1 / (real (?n7 n) + d) - 1 / (real (Suc (?n7 n)) + d)) sums\n    (1 / d)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>n. 1 / (real (Suc (?n7 n)) + d)\\<^sup>2) sums\n    (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\n 2. (\\<lambda>n. 1 / (real (?n7 n) + d) - 1 / (real (Suc (?n7 n)) + d)) sums\n    (1 / d)", "show \"(\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2) sums (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2) sums\n    (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)", "using *"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2) sums\n    (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)", "by (simp add: sums_iff)"], ["proof (state)\nthis:\n  (\\<lambda>n. 1 / (real (Suc n) + d)\\<^sup>2) sums\n  (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums (1 / d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums (1 / d)", "have \"(\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums (1 / (real 0 + d) - 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums\n    (1 / (real 0 + d) - 0)", "by (intro telescope_sums' real_tendsto_divide_at_top[OF tendsto_const],\n          subst add.commute, rule filterlim_tendsto_add_at_top[OF tendsto_const \n            filterlim_real_sequentially])"], ["proof (state)\nthis:\n  (\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums\n  (1 / (real 0 + d) - 0)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums (1 / d)", "thus \"(\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums (1 / d)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums\n  (1 / (real 0 + d) - 0)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums (1 / d)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. 1 / (real n + d) - 1 / (real (Suc n) + d)) sums (1 / d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>n. 1 / (real (Suc n) + d)\\<^sup>2) \\<le> 1 / d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma moebius_sum_tail_bound:\n  assumes \"d > 0\"\n  shows   \"abs (\\<Sum>n. moebius_mu (Suc n + d) / real (Suc n + d)^2) \\<le> 1 / d\" (is \"abs ?S \\<le> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "have *: \"summable (\\<lambda>n. 1 / (real (Suc n + d))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. 1 / (real (Suc n + d))\\<^sup>2)", "by (insert sum_inverse_squares_tail_bound(1)[of \"real d\"] assms, simp_all add: add_ac)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. 1 / (real (Suc n + d))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "have **: \"summable (\\<lambda>n. abs (moebius_mu (Suc n + d) / real (Suc n + d)^2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>n.\n         \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)", "proof (rule summable_comparison_test, intro exI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       ?N3 \\<le> n \\<Longrightarrow>\n       norm \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n       \\<le> ?g n\n 2. summable ?g", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       ?N3 \\<le> n \\<Longrightarrow>\n       norm \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n       \\<le> ?g n\n 2. summable ?g", "show \"norm (\\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))^2\\<bar>) \\<le>\n            1 / (real (Suc n + d))^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / (real (Suc n + d))\\<^sup>2", "unfolding real_norm_def abs_abs abs_divide power_abs abs_of_nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>moebius_mu (Suc n + d)\\<bar> / (real (Suc n + d))\\<^sup>2\n    \\<le> 1 / (real (Suc n + d))\\<^sup>2", "by (intro divide_right_mono abs_moebius_mu_le) simp_all"], ["proof (state)\nthis:\n  norm \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n  \\<le> 1 / (real (Suc n + d))\\<^sup>2\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. 1 / (real (Suc n + d))\\<^sup>2)", "qed (insert *)"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>n.\n       \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "from **"], ["proof (chain)\npicking this:\n  summable\n   (\\<lambda>n.\n       \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)", "have \"abs ?S \\<le> (\\<Sum>n. abs (moebius_mu (Suc n + d) / real (Suc n + d)^2))\""], ["proof (prove)\nusing this:\n  summable\n   (\\<lambda>n.\n       \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> (\\<Sum>n.\n              \\<bar>moebius_mu (Suc n + d) /\n                    (real (Suc n + d))\\<^sup>2\\<bar>)", "by (rule summable_rabs)"], ["proof (state)\nthis:\n  \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n  \\<le> (\\<Sum>n.\n            \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "also"], ["proof (state)\nthis:\n  \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n  \\<le> (\\<Sum>n.\n            \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "have \"\\<dots> \\<le> (\\<Sum>n. 1 / (real (Suc n) + d) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n.\n        \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n    \\<le> (\\<Sum>n. 1 / (real (Suc n) + real d)\\<^sup>2)", "proof (intro suminf_le allI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n       \\<le> 1 / (real (Suc n) + real d)\\<^sup>2\n 2. summable\n     (\\<lambda>n.\n         \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n 3. summable (\\<lambda>n. 1 / (real (Suc n) + real d)\\<^sup>2)", "fix n :: nat"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n       \\<le> 1 / (real (Suc n) + real d)\\<^sup>2\n 2. summable\n     (\\<lambda>n.\n         \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n 3. summable (\\<lambda>n. 1 / (real (Suc n) + real d)\\<^sup>2)", "show \"abs (moebius_mu (Suc n + d) / (real (Suc n + d))^2) \\<le> 1 / (real (Suc n) + real d)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / (real (Suc n) + real d)\\<^sup>2", "unfolding abs_divide abs_of_nat power_abs of_nat_add [symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>moebius_mu (Suc n + d)\\<bar> / (real (Suc n + d))\\<^sup>2\n    \\<le> 1 / (real (Suc n + d))\\<^sup>2", "by (intro divide_right_mono abs_moebius_mu_le) simp_all"], ["proof (state)\nthis:\n  \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n  \\<le> 1 / (real (Suc n) + real d)\\<^sup>2\n\ngoal (2 subgoals):\n 1. summable\n     (\\<lambda>n.\n         \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n 2. summable (\\<lambda>n. 1 / (real (Suc n) + real d)\\<^sup>2)", "qed (insert * **, simp_all add: add_ac)"], ["proof (state)\nthis:\n  (\\<Sum>n. \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n  \\<le> (\\<Sum>n. 1 / (real (Suc n) + real d)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. \\<bar>moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>)\n  \\<le> (\\<Sum>n. 1 / (real (Suc n) + real d)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "from assms"], ["proof (chain)\npicking this:\n  0 < d", "have \"\\<dots> \\<le> 1 / d\""], ["proof (prove)\nusing this:\n  0 < d\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. 1 / (real (Suc n) + real d)\\<^sup>2) \\<le> 1 / real d", "by (intro sum_inverse_squares_tail_bound) simp_all"], ["proof (state)\nthis:\n  (\\<Sum>n. 1 / (real (Suc n) + real d)\\<^sup>2) \\<le> 1 / real d\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "finally"], ["proof (chain)\npicking this:\n  \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n  \\<le> 1 / real d", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n  \\<le> 1 / real d\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n    \\<le> 1 / real d", "."], ["proof (state)\nthis:\n  \\<bar>\\<Sum>n. moebius_mu (Suc n + d) / (real (Suc n + d))\\<^sup>2\\<bar>\n  \\<le> 1 / real d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upto_inverse_bound:\n  \"sum_upto (\\<lambda>i. 1 / real i) x \\<ge> 0\"\n  \"eventually (\\<lambda>x. sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> sum_upto (\\<lambda>i. 1 / real i) x &&&\n    \\<forall>\\<^sub>F x in at_top.\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> sum_upto (\\<lambda>i. 1 / real i) x\n 2. \\<forall>\\<^sub>F x in at_top.\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "show \"sum_upto (\\<lambda>i. 1 / real i) x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> sum_upto (\\<lambda>i. 1 / real i) x", "by (simp add: sum_upto_def sum_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> sum_upto (\\<lambda>i. 1 / real i) x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "from order_tendstoD(2)[OF euler_mascheroni_LIMSEQ euler_mascheroni_less_13_over_22]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in sequentially. harm x - ln (real x) < 13 / 22", "obtain N where N: \"\\<And>n. n \\<ge> N \\<Longrightarrow> harm n - ln (real n) < 13 / 22\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially. harm x - ln (real x) < 13 / 22\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        (\\<And>n.\n            N \\<le> n \\<Longrightarrow>\n            harm n - ln (real n) < 13 / 22) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_at_top_linorder"], ["proof (prove)\nusing this:\n  \\<exists>N. \\<forall>n\\<ge>N. harm n - ln (real n) < 13 / 22\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        (\\<And>n.\n            N \\<le> n \\<Longrightarrow>\n            harm n - ln (real n) < 13 / 22) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow> harm ?n - ln (real ?n) < 13 / 22\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "show \"eventually (\\<lambda>x. sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "using eventually_ge_at_top[of \"max (real N) 1\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (max (real N) 1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "case (elim x)"], ["proof (state)\nthis:\n  max (real N) 1 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "have \"sum_upto (\\<lambda>i. 1 / real i) x = (\\<Sum>i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. 1 / real i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) x =\n    (\\<Sum>i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. 1 / real i)", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>i. 1 / real i) x =\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. 1 / real i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>i. 1 / real i) x =\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. 1 / real i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "have \"\\<dots> = harm (nat \\<lfloor>x\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. 1 / real i) =\n    harm (nat \\<lfloor>x\\<rfloor>)", "unfolding harm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. 1 / real i) =\n    (\\<Sum>k = 1..nat \\<lfloor>x\\<rfloor>. inverse (real k))", "by (intro sum.cong refl) (auto simp: field_simps)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. 1 / real i) =\n  harm (nat \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. 1 / real i) =\n  harm (nat \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "have \"\\<dots> \\<le> ln (real (nat \\<lfloor>x\\<rfloor>)) + 13 / 22\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm (nat \\<lfloor>x\\<rfloor>)\n    \\<le> ln (real (nat \\<lfloor>x\\<rfloor>)) + 13 / 22", "using N[of \"nat \\<lfloor>x\\<rfloor>\"] elim"], ["proof (prove)\nusing this:\n  N \\<le> nat \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n  harm (nat \\<lfloor>x\\<rfloor>) - ln (real (nat \\<lfloor>x\\<rfloor>))\n  < 13 / 22\n  max (real N) 1 \\<le> x\n\ngoal (1 subgoal):\n 1. harm (nat \\<lfloor>x\\<rfloor>)\n    \\<le> ln (real (nat \\<lfloor>x\\<rfloor>)) + 13 / 22", "by (auto simp: le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  harm (nat \\<lfloor>x\\<rfloor>)\n  \\<le> ln (real (nat \\<lfloor>x\\<rfloor>)) + 13 / 22\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "also"], ["proof (state)\nthis:\n  harm (nat \\<lfloor>x\\<rfloor>)\n  \\<le> ln (real (nat \\<lfloor>x\\<rfloor>)) + 13 / 22\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "have \"ln (real (nat \\<lfloor>x\\<rfloor>)) \\<le> ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (nat \\<lfloor>x\\<rfloor>)) \\<le> ln x", "using elim"], ["proof (prove)\nusing this:\n  max (real N) 1 \\<le> x\n\ngoal (1 subgoal):\n 1. ln (real (nat \\<lfloor>x\\<rfloor>)) \\<le> ln x", "by (subst ln_le_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (real (nat \\<lfloor>x\\<rfloor>)) \\<le> ln x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       max (real N) 1 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + 13 / 22 \\<le> y + 13 / 22) \\<Longrightarrow>\n  sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "show ?case"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + 13 / 22 \\<le> y + 13 / 22) \\<Longrightarrow>\n  sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22", "by - simp"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upto_inverse_bigo: \"sum_upto (\\<lambda>i. 1 / real i) \\<in> O(\\<lambda>x. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)", "have \"eventually (\\<lambda>x. norm (sum_upto (\\<lambda>i. 1 / real i) x) \\<le> 1 * norm (ln x + 13/22)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm (sum_upto (\\<lambda>i. 1 / real i) x)\n       \\<le> 1 * norm (ln x + 13 / 22)", "using eventually_ge_at_top[of \"1::real\"] sum_upto_inverse_bound(2)"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 1) at_top\n  \\<forall>\\<^sub>F x in at_top.\n     sum_upto (\\<lambda>i. 1 / real i) x \\<le> ln x + 13 / 22\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm (sum_upto (\\<lambda>i. 1 / real i) x)\n       \\<le> 1 * norm (ln x + 13 / 22)", "by eventually_elim (insert sum_upto_inverse_bound(1), simp_all)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (sum_upto (\\<lambda>i. 1 / real i) x)\n     \\<le> 1 * norm (ln x + 13 / 22)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)", "hence \"sum_upto (\\<lambda>i. 1 / real i) \\<in> O(\\<lambda>x. ln x + 13/22)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (sum_upto (\\<lambda>i. 1 / real i) x)\n     \\<le> 1 * norm (ln x + 13 / 22)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) \\<in> O(\\<lambda>x. ln x + 13 / 22)", "by (rule bigoI)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>i. 1 / real i) \\<in> O(\\<lambda>x. ln x + 13 / 22)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>i. 1 / real i) \\<in> O(\\<lambda>x. ln x + 13 / 22)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)", "have \"(\\<lambda>x::real. ln x + 13/22) \\<in> O(\\<lambda>x. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x + 13 / 22) \\<in> O(ln)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x + 13 / 22) \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)", "finally"], ["proof (chain)\npicking this:\n  sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)", "."], ["proof (state)\nthis:\n  sum_upto (\\<lambda>i. 1 / real i) \\<in> O(ln)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  defines \"G \\<equiv> (\\<lambda>x::real. (\\<Sum>n. moebius_mu (n + Suc (nat \\<lfloor>x\\<rfloor>)) / (n + Suc (nat \\<lfloor>x\\<rfloor>))^2) :: real)\"\n  shows   moebius_sum_tail_bound': \"\\<And>t. t \\<ge> 2 \\<Longrightarrow> \\<bar>G t\\<bar> \\<le> 1 / (t - 1)\"\n    and   moebius_sum_tail_bigo:   \"G \\<in> O(\\<lambda>t. 1 / t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        2 \\<le> t \\<Longrightarrow> \\<bar>G t\\<bar> \\<le> 1 / (t - 1)) &&&\n    G \\<in> O((/) 1)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. 2 \\<le> t \\<Longrightarrow> \\<bar>G t\\<bar> \\<le> 1 / (t - 1)\n 2. G \\<in> O((/) 1)", "show \"\\<bar>G t\\<bar> \\<le> 1 / (t - 1)\" if t: \"t \\<ge> 2\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>G t\\<bar> \\<le> 1 / (t - 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>G t\\<bar> \\<le> 1 / (t - 1)", "from t"], ["proof (chain)\npicking this:\n  2 \\<le> t", "have \"\\<bar>G t\\<bar> \\<le> 1 / real (nat \\<lfloor>t\\<rfloor>)\""], ["proof (prove)\nusing this:\n  2 \\<le> t\n\ngoal (1 subgoal):\n 1. \\<bar>G t\\<bar> \\<le> 1 / real (nat \\<lfloor>t\\<rfloor>)", "unfolding G_def"], ["proof (prove)\nusing this:\n  2 \\<le> t\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n.\n             moebius_mu (n + Suc (nat \\<lfloor>t\\<rfloor>)) /\n             real ((n + Suc (nat \\<lfloor>t\\<rfloor>))\\<^sup>2)\\<bar>\n    \\<le> 1 / real (nat \\<lfloor>t\\<rfloor>)", "using moebius_sum_tail_bound[of \"nat \\<lfloor>t\\<rfloor>\"]"], ["proof (prove)\nusing this:\n  2 \\<le> t\n  0 < nat \\<lfloor>t\\<rfloor> \\<Longrightarrow>\n  \\<bar>\\<Sum>n.\n           moebius_mu (Suc n + nat \\<lfloor>t\\<rfloor>) /\n           (real (Suc n + nat \\<lfloor>t\\<rfloor>))\\<^sup>2\\<bar>\n  \\<le> 1 / real (nat \\<lfloor>t\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n.\n             moebius_mu (n + Suc (nat \\<lfloor>t\\<rfloor>)) /\n             real ((n + Suc (nat \\<lfloor>t\\<rfloor>))\\<^sup>2)\\<bar>\n    \\<le> 1 / real (nat \\<lfloor>t\\<rfloor>)", "by simp"], ["proof (state)\nthis:\n  \\<bar>G t\\<bar> \\<le> 1 / real (nat \\<lfloor>t\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<bar>G t\\<bar> \\<le> 1 / (t - 1)", "also"], ["proof (state)\nthis:\n  \\<bar>G t\\<bar> \\<le> 1 / real (nat \\<lfloor>t\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<bar>G t\\<bar> \\<le> 1 / (t - 1)", "have \"t \\<le> 1 + real_of_int \\<lfloor>t\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<le> 1 + real_of_int \\<lfloor>t\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  t \\<le> 1 + real_of_int \\<lfloor>t\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<bar>G t\\<bar> \\<le> 1 / (t - 1)", "hence \"1 / real (nat \\<lfloor>t\\<rfloor>) \\<le> 1 / (t - 1)\""], ["proof (prove)\nusing this:\n  t \\<le> 1 + real_of_int \\<lfloor>t\\<rfloor>\n\ngoal (1 subgoal):\n 1. 1 / real (nat \\<lfloor>t\\<rfloor>) \\<le> 1 / (t - 1)", "using t"], ["proof (prove)\nusing this:\n  t \\<le> 1 + real_of_int \\<lfloor>t\\<rfloor>\n  2 \\<le> t\n\ngoal (1 subgoal):\n 1. 1 / real (nat \\<lfloor>t\\<rfloor>) \\<le> 1 / (t - 1)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 / real (nat \\<lfloor>t\\<rfloor>) \\<le> 1 / (t - 1)\n\ngoal (1 subgoal):\n 1. \\<bar>G t\\<bar> \\<le> 1 / (t - 1)", "finally"], ["proof (chain)\npicking this:\n  \\<bar>G t\\<bar> \\<le> 1 / (t - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>G t\\<bar> \\<le> 1 / (t - 1)\n\ngoal (1 subgoal):\n 1. \\<bar>G t\\<bar> \\<le> 1 / (t - 1)", "."], ["proof (state)\nthis:\n  \\<bar>G t\\<bar> \\<le> 1 / (t - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 \\<le> ?t \\<Longrightarrow> \\<bar>G ?t\\<bar> \\<le> 1 / (?t - 1)\n\ngoal (1 subgoal):\n 1. G \\<in> O((/) 1)", "hence \"G \\<in> O(\\<lambda>t. 1 / (t - 1))\""], ["proof (prove)\nusing this:\n  2 \\<le> ?t \\<Longrightarrow> \\<bar>G ?t\\<bar> \\<le> 1 / (?t - 1)\n\ngoal (1 subgoal):\n 1. G \\<in> O(\\<lambda>t. 1 / (t - 1))", "by (intro bigoI[of _ 1] eventually_mono[OF eventually_ge_at_top[of \"2::real\"]]) auto"], ["proof (state)\nthis:\n  G \\<in> O(\\<lambda>t. 1 / (t - 1))\n\ngoal (1 subgoal):\n 1. G \\<in> O((/) 1)", "also"], ["proof (state)\nthis:\n  G \\<in> O(\\<lambda>t. 1 / (t - 1))\n\ngoal (1 subgoal):\n 1. G \\<in> O((/) 1)", "have \"(\\<lambda>t::real. 1 / (t - 1)) \\<in> \\<Theta>(\\<lambda>t. 1 / t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. 1 / (t - 1)) \\<in> \\<Theta>((/) 1)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>t. 1 / (t - 1)) \\<in> \\<Theta>((/) 1)\n\ngoal (1 subgoal):\n 1. G \\<in> O((/) 1)", "finally"], ["proof (chain)\npicking this:\n  G \\<in> O((/) 1)", "show \"G \\<in> O(\\<lambda>t. 1 / t)\""], ["proof (prove)\nusing this:\n  G \\<in> O((/) 1)\n\ngoal (1 subgoal):\n 1. G \\<in> O((/) 1)", "."], ["proof (state)\nthis:\n  G \\<in> O((/) 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Summatory totient function\\<close>"], ["", "theorem summatory_totient_asymptotics:\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. real (totient n)) x - 3 / pi\\<^sup>2 * x\\<^sup>2) \\<in> O(\\<lambda>x. x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "define H where \"H = (\\<lambda>x. of_int (floor x) * (of_int (floor x) + 1) / 2 - x ^ 2 / 2 :: real)\""], ["proof (state)\nthis:\n  H =\n  (\\<lambda>x.\n      real_of_int \\<lfloor>x\\<rfloor> *\n      (real_of_int \\<lfloor>x\\<rfloor> + 1) /\n      2 -\n      x\\<^sup>2 / 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "define H' where \"H' = (\\<lambda>x. sum_upto (\\<lambda>n. moebius_mu n * H (x / real n)) x)\""], ["proof (state)\nthis:\n  H' = (\\<lambda>x. sum_upto (\\<lambda>n. moebius_mu n * H (x / real n)) x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have H: \"sum_upto real x = x^2/2 + H x\" if \"x \\<ge> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto real x = x\\<^sup>2 / 2 + H x", "using that"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. sum_upto real x = x\\<^sup>2 / 2 + H x", "by (simp add: sum_upto_real H_def)"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow> sum_upto real ?x = ?x\\<^sup>2 / 2 + H ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "define G where \"G = (\\<lambda>x::real. (\\<Sum>n. moebius_mu (n + Suc (nat \\<lfloor>x\\<rfloor>)) / (n + Suc (nat \\<lfloor>x\\<rfloor>))^2))\""], ["proof (state)\nthis:\n  G =\n  (\\<lambda>x.\n      \\<Sum>n.\n         moebius_mu (n + Suc (nat \\<lfloor>x\\<rfloor>)) /\n         real ((n + Suc (nat \\<lfloor>x\\<rfloor>))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have H_bound: \"\\<bar>H t\\<bar> \\<le> t / 2\" if \"t \\<ge> 0\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "have \"H t - t / 2 = (-(t - of_int (floor t))) * (floor t + t + 1) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H t - t / 2 =\n    - (t - real_of_int \\<lfloor>t\\<rfloor>) *\n    (real_of_int \\<lfloor>t\\<rfloor> + t + 1) /\n    2", "by (simp add: H_def field_simps power2_eq_square)"], ["proof (state)\nthis:\n  H t - t / 2 =\n  - (t - real_of_int \\<lfloor>t\\<rfloor>) *\n  (real_of_int \\<lfloor>t\\<rfloor> + t + 1) /\n  2\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "also"], ["proof (state)\nthis:\n  H t - t / 2 =\n  - (t - real_of_int \\<lfloor>t\\<rfloor>) *\n  (real_of_int \\<lfloor>t\\<rfloor> + t + 1) /\n  2\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "have \"\\<dots> \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (t - real_of_int \\<lfloor>t\\<rfloor>) *\n    (real_of_int \\<lfloor>t\\<rfloor> + t + 1) /\n    2\n    \\<le> 0", "using that"], ["proof (prove)\nusing this:\n  0 \\<le> t\n\ngoal (1 subgoal):\n 1. - (t - real_of_int \\<lfloor>t\\<rfloor>) *\n    (real_of_int \\<lfloor>t\\<rfloor> + t + 1) /\n    2\n    \\<le> 0", "by (intro mult_nonpos_nonneg divide_nonpos_nonneg) simp_all"], ["proof (state)\nthis:\n  - (t - real_of_int \\<lfloor>t\\<rfloor>) *\n  (real_of_int \\<lfloor>t\\<rfloor> + t + 1) /\n  2\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "finally"], ["proof (chain)\npicking this:\n  H t - t / 2 \\<le> 0", "have \"H t \\<le> t / 2\""], ["proof (prove)\nusing this:\n  H t - t / 2 \\<le> 0\n\ngoal (1 subgoal):\n 1. H t \\<le> t / 2", "by simp"], ["proof (state)\nthis:\n  H t \\<le> t / 2\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "have \"-H t - t / 2 = (t - of_int (floor t) - 1) * (of_int (floor t) + t) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - H t - t / 2 =\n    (t - real_of_int \\<lfloor>t\\<rfloor> - 1) *\n    (real_of_int \\<lfloor>t\\<rfloor> + t) /\n    2", "by (simp add: H_def field_simps power2_eq_square)"], ["proof (state)\nthis:\n  - H t - t / 2 =\n  (t - real_of_int \\<lfloor>t\\<rfloor> - 1) *\n  (real_of_int \\<lfloor>t\\<rfloor> + t) /\n  2\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "also"], ["proof (state)\nthis:\n  - H t - t / 2 =\n  (t - real_of_int \\<lfloor>t\\<rfloor> - 1) *\n  (real_of_int \\<lfloor>t\\<rfloor> + t) /\n  2\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "have \"\\<dots> \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t - real_of_int \\<lfloor>t\\<rfloor> - 1) *\n    (real_of_int \\<lfloor>t\\<rfloor> + t) /\n    2\n    \\<le> 0", "using that"], ["proof (prove)\nusing this:\n  0 \\<le> t\n\ngoal (1 subgoal):\n 1. (t - real_of_int \\<lfloor>t\\<rfloor> - 1) *\n    (real_of_int \\<lfloor>t\\<rfloor> + t) /\n    2\n    \\<le> 0", "by (intro divide_nonpos_nonneg mult_nonpos_nonneg) ((simp; fail) | linarith)+"], ["proof (state)\nthis:\n  (t - real_of_int \\<lfloor>t\\<rfloor> - 1) *\n  (real_of_int \\<lfloor>t\\<rfloor> + t) /\n  2\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "finally"], ["proof (chain)\npicking this:\n  - H t - t / 2 \\<le> 0", "have \"-H t \\<le> t / 2\""], ["proof (prove)\nusing this:\n  - H t - t / 2 \\<le> 0\n\ngoal (1 subgoal):\n 1. - H t \\<le> t / 2", "by simp"], ["proof (state)\nthis:\n  - H t \\<le> t / 2\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "with \\<open>H t \\<le> t / 2\\<close>"], ["proof (chain)\npicking this:\n  H t \\<le> t / 2\n  - H t \\<le> t / 2", "show \"\\<bar>H t\\<bar> \\<le> t / 2\""], ["proof (prove)\nusing this:\n  H t \\<le> t / 2\n  - H t \\<le> t / 2\n\ngoal (1 subgoal):\n 1. \\<bar>H t\\<bar> \\<le> t / 2", "by simp"], ["proof (state)\nthis:\n  \\<bar>H t\\<bar> \\<le> t / 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> ?t \\<Longrightarrow> \\<bar>H ?t\\<bar> \\<le> ?t / 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have H'_bound: \"\\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t\" if \"t \\<ge> 0\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "have \"\\<bar>H' t\\<bar> \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t. \\<bar>moebius_mu i * H (t / real i)\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar>\n    \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n             \\<bar>moebius_mu i * H (t / real i)\\<bar>)", "unfolding H'_def sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>n\\<in>{i. 0 < i \\<and> real i \\<le> t}.\n            moebius_mu n * H (t / real n)\\<bar>\n    \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n             \\<bar>moebius_mu i * H (t / real i)\\<bar>)", "by (rule sum_abs)"], ["proof (state)\nthis:\n  \\<bar>H' t\\<bar>\n  \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n           \\<bar>moebius_mu i * H (t / real i)\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "also"], ["proof (state)\nthis:\n  \\<bar>H' t\\<bar>\n  \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n           \\<bar>moebius_mu i * H (t / real i)\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "have \"\\<dots> \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t. 1 * ((t / real i) / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n       \\<bar>moebius_mu i * H (t / real i)\\<bar>)\n    \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t. 1 * (t / real i / 2))", "unfolding abs_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n       \\<bar>moebius_mu i\\<bar> * \\<bar>H (t / real i)\\<bar>)\n    \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t. 1 * (t / real i / 2))", "using that"], ["proof (prove)\nusing this:\n  0 \\<le> t\n\ngoal (1 subgoal):\n 1. (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n       \\<bar>moebius_mu i\\<bar> * \\<bar>H (t / real i)\\<bar>)\n    \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t. 1 * (t / real i / 2))", "by (intro sum_mono mult_mono abs_moebius_mu_le H_bound) simp_all"], ["proof (state)\nthis:\n  (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n     \\<bar>moebius_mu i * H (t / real i)\\<bar>)\n  \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t. 1 * (t / real i / 2))\n\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "also"], ["proof (state)\nthis:\n  (\\<Sum>i | 0 < i \\<and> real i \\<le> t.\n     \\<bar>moebius_mu i * H (t / real i)\\<bar>)\n  \\<le> (\\<Sum>i | 0 < i \\<and> real i \\<le> t. 1 * (t / real i / 2))\n\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "have \"\\<dots> = t / 2 * sum_upto (\\<lambda>i. 1 / real i) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i | 0 < i \\<and> real i \\<le> t. 1 * (t / real i / 2)) =\n    t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "by (simp add: sum_upto_def sum_distrib_left sum_distrib_right mult_ac)"], ["proof (state)\nthis:\n  (\\<Sum>i | 0 < i \\<and> real i \\<le> t. 1 * (t / real i / 2)) =\n  t / 2 * sum_upto (\\<lambda>i. 1 / real i) t\n\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "finally"], ["proof (chain)\npicking this:\n  \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t\n\ngoal (1 subgoal):\n 1. \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t", "."], ["proof (state)\nthis:\n  \\<bar>H' t\\<bar> \\<le> t / 2 * sum_upto (\\<lambda>i. 1 / real i) t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> ?t \\<Longrightarrow>\n  \\<bar>H' ?t\\<bar> \\<le> ?t / 2 * sum_upto (\\<lambda>i. 1 / real i) ?t\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "hence \"H' \\<in> O(\\<lambda>t. t * sum_upto (\\<lambda>i. 1 / real i) t)\""], ["proof (prove)\nusing this:\n  0 \\<le> ?t \\<Longrightarrow>\n  \\<bar>H' ?t\\<bar> \\<le> ?t / 2 * sum_upto (\\<lambda>i. 1 / real i) ?t\n\ngoal (1 subgoal):\n 1. H' \\<in> O(\\<lambda>t. t * sum_upto (\\<lambda>i. 1 / real i) t)", "using sum_upto_inverse_bound(1)"], ["proof (prove)\nusing this:\n  0 \\<le> ?t \\<Longrightarrow>\n  \\<bar>H' ?t\\<bar> \\<le> ?t / 2 * sum_upto (\\<lambda>i. 1 / real i) ?t\n  0 \\<le> sum_upto (\\<lambda>i. 1 / real i) ?x\n\ngoal (1 subgoal):\n 1. H' \\<in> O(\\<lambda>t. t * sum_upto (\\<lambda>i. 1 / real i) t)", "by (intro bigoI[of _ \"1/2\"] eventually_mono[OF eventually_ge_at_top[of \"0::real\"]]) \n       (auto elim!: eventually_mono simp: abs_mult)"], ["proof (state)\nthis:\n  H' \\<in> O(\\<lambda>t. t * sum_upto (\\<lambda>i. 1 / real i) t)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  H' \\<in> O(\\<lambda>t. t * sum_upto (\\<lambda>i. 1 / real i) t)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have \"(\\<lambda>t. t * sum_upto (\\<lambda>i. 1 / real i) t) \\<in> O(\\<lambda>t. t * ln t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. t * sum_upto (\\<lambda>i. 1 / real i) t)\n    \\<in> O(\\<lambda>t. t * ln t)", "by (intro landau_o.big.mult sum_upto_inverse_bigo) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>t. t * sum_upto (\\<lambda>i. 1 / real i) t)\n  \\<in> O(\\<lambda>t. t * ln t)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "finally"], ["proof (chain)\npicking this:\n  H' \\<in> O(\\<lambda>t. t * ln t)", "have H'_bigo: \"H' \\<in> O(\\<lambda>x. x * ln x)\""], ["proof (prove)\nusing this:\n  H' \\<in> O(\\<lambda>t. t * ln t)\n\ngoal (1 subgoal):\n 1. H' \\<in> O(\\<lambda>x. x * ln x)", "."], ["proof (state)\nthis:\n  H' \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "{"], ["proof (state)\nthis:\n  H' \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "assume x: \"x \\<ge> 0\""], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have \"sum_upto (\\<lambda>n. real (totient n)) x = sum_upto (\\<lambda>n. of_int (int (totient n))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (totient n)) x =\n    sum_upto (\\<lambda>n. real_of_int (int (totient n))) x", "by simp"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. real (totient n)) x =\n  sum_upto (\\<lambda>n. real_of_int (int (totient n))) x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. real (totient n)) x =\n  sum_upto (\\<lambda>n. real_of_int (int (totient n))) x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have \"\\<dots> = sum_upto (\\<lambda>n. moebius_mu n * sum_upto real (x / real n)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real_of_int (int (totient n))) x =\n    sum_upto (\\<lambda>n. moebius_mu n * sum_upto real (x / real n)) x", "by (subst totient_conv_moebius_mu) (simp add: sum_upto_dirichlet_prod of_int_dirichlet_prod)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. real_of_int (int (totient n))) x =\n  sum_upto (\\<lambda>n. moebius_mu n * sum_upto real (x / real n)) x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. real_of_int (int (totient n))) x =\n  sum_upto (\\<lambda>n. moebius_mu n * sum_upto real (x / real n)) x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have \"\\<dots> = sum_upto (\\<lambda>n. moebius_mu n * ((x / real n) ^ 2 / 2 + H (x / real n))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * sum_upto real (x / real n)) x =\n    sum_upto\n     (\\<lambda>n.\n         moebius_mu n * ((x / real n)\\<^sup>2 / 2 + H (x / real n)))\n     x", "using x"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * sum_upto real (x / real n)) x =\n    sum_upto\n     (\\<lambda>n.\n         moebius_mu n * ((x / real n)\\<^sup>2 / 2 + H (x / real n)))\n     x", "by (intro sum_upto_cong) (simp_all add: H)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. moebius_mu n * sum_upto real (x / real n)) x =\n  sum_upto\n   (\\<lambda>n. moebius_mu n * ((x / real n)\\<^sup>2 / 2 + H (x / real n)))\n   x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. moebius_mu n * sum_upto real (x / real n)) x =\n  sum_upto\n   (\\<lambda>n. moebius_mu n * ((x / real n)\\<^sup>2 / 2 + H (x / real n)))\n   x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have \"\\<dots> = x^2 / 2 * sum_upto (\\<lambda>n. moebius_mu n / real n ^ 2) x + H' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         moebius_mu n * ((x / real n)\\<^sup>2 / 2 + H (x / real n)))\n     x =\n    x\\<^sup>2 / 2 *\n    sum_upto (\\<lambda>n. moebius_mu n / (real n)\\<^sup>2) x +\n    H' x", "by (simp add: sum_upto_def H'_def sum.distrib ring_distribs\n                    sum_distrib_left sum_distrib_right power_divide mult_ac)"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. moebius_mu n * ((x / real n)\\<^sup>2 / 2 + H (x / real n)))\n   x =\n  x\\<^sup>2 / 2 * sum_upto (\\<lambda>n. moebius_mu n / (real n)\\<^sup>2) x +\n  H' x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. moebius_mu n * ((x / real n)\\<^sup>2 / 2 + H (x / real n)))\n   x =\n  x\\<^sup>2 / 2 * sum_upto (\\<lambda>n. moebius_mu n / (real n)\\<^sup>2) x +\n  H' x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have \"sum_upto (\\<lambda>n. moebius_mu n / real n ^ 2) x = \n                 (\\<Sum>n\\<in>{..<Suc (nat \\<lfloor>x\\<rfloor>)}. moebius_mu n / real n ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n / (real n)\\<^sup>2) x =\n    (\\<Sum>n<Suc (nat \\<lfloor>x\\<rfloor>). moebius_mu n / (real n)\\<^sup>2)", "unfolding sum_upto_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}.\n       moebius_mu n / (real n)\\<^sup>2) =\n    (\\<Sum>n<Suc (nat \\<lfloor>x\\<rfloor>). moebius_mu n / (real n)\\<^sup>2)", "by (intro sum.mono_neutral_cong_left refl) auto"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. moebius_mu n / (real n)\\<^sup>2) x =\n  (\\<Sum>n<Suc (nat \\<lfloor>x\\<rfloor>). moebius_mu n / (real n)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. moebius_mu n / (real n)\\<^sup>2) x =\n  (\\<Sum>n<Suc (nat \\<lfloor>x\\<rfloor>). moebius_mu n / (real n)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have \"\\<dots> = 6 / pi ^ 2 - G x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<Suc (nat \\<lfloor>x\\<rfloor>).\n        moebius_mu n / (real n)\\<^sup>2) =\n    6 / pi\\<^sup>2 - G x", "using sums_split_initial_segment[OF moebius_over_square_sums, of \"Suc (nat \\<lfloor>x\\<rfloor>)\"]"], ["proof (prove)\nusing this:\n  (\\<lambda>i.\n      moebius_mu (i + Suc (nat \\<lfloor>x\\<rfloor>)) /\n      real ((i + Suc (nat \\<lfloor>x\\<rfloor>))\\<^sup>2)) sums\n  (6 / pi\\<^sup>2 -\n   (\\<Sum>i<Suc (nat \\<lfloor>x\\<rfloor>). moebius_mu i / real (i\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n<Suc (nat \\<lfloor>x\\<rfloor>).\n        moebius_mu n / (real n)\\<^sup>2) =\n    6 / pi\\<^sup>2 - G x", "by (auto simp: sums_iff algebra_simps G_def)"], ["proof (state)\nthis:\n  (\\<Sum>n<Suc (nat \\<lfloor>x\\<rfloor>). moebius_mu n / (real n)\\<^sup>2) =\n  6 / pi\\<^sup>2 - G x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "finally"], ["proof (chain)\npicking this:\n  sum_upto (\\<lambda>n. real (totient n)) x =\n  x\\<^sup>2 / 2 * (6 / pi\\<^sup>2 - G x) + H' x", "have \"sum_upto (\\<lambda>n. real (totient n)) x = 3 / pi\\<^sup>2 * x\\<^sup>2 - x\\<^sup>2 / 2 * G x + H' x\""], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>n. real (totient n)) x =\n  x\\<^sup>2 / 2 * (6 / pi\\<^sup>2 - G x) + H' x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (totient n)) x =\n    3 / pi\\<^sup>2 * x\\<^sup>2 - x\\<^sup>2 / 2 * G x + H' x", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. real (totient n)) x =\n  3 / pi\\<^sup>2 * x\\<^sup>2 - x\\<^sup>2 / 2 * G x + H' x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "}"], ["proof (state)\nthis:\n  0 \\<le> ?x2 \\<Longrightarrow>\n  sum_upto (\\<lambda>n. real (totient n)) ?x2 =\n  3 / pi\\<^sup>2 * ?x2\\<^sup>2 - ?x2\\<^sup>2 / 2 * G ?x2 + H' ?x2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "hence \"(\\<lambda>x. sum_upto (\\<lambda>n. real (totient n)) x - 3 / pi^2 * x^2) \\<in> \n            \\<Theta>(\\<lambda>x. (-(x^2) / 2) * G x + H' x)\""], ["proof (prove)\nusing this:\n  0 \\<le> ?x2 \\<Longrightarrow>\n  sum_upto (\\<lambda>n. real (totient n)) ?x2 =\n  3 / pi\\<^sup>2 * ?x2\\<^sup>2 - ?x2\\<^sup>2 / 2 * G ?x2 + H' ?x2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> \\<Theta>(\\<lambda>x. - x\\<^sup>2 / 2 * G x + H' x)", "by (intro bigthetaI_cong eventually_mono[OF eventually_ge_at_top[of \"0::real\"]]) \n       (auto elim!: eventually_mono)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> \\<Theta>(\\<lambda>x. - x\\<^sup>2 / 2 * G x + H' x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> \\<Theta>(\\<lambda>x. - x\\<^sup>2 / 2 * G x + H' x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "have \"(\\<lambda>x. (-(x^2) / 2) * G x + H' x) \\<in> O(\\<lambda>x. x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x\\<^sup>2 / 2 * G x + H' x) \\<in> O(\\<lambda>x. x * ln x)", "proof (intro sum_in_bigo H'_bigo)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x\\<^sup>2 / 2 * G x) \\<in> O(\\<lambda>x. x * ln x)", "have \"(\\<lambda>x. (- (x^2) / 2) * G x) \\<in> O(\\<lambda>x. x^2 * (1 / x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x\\<^sup>2 / 2 * G x)\n    \\<in> O(\\<lambda>x. x\\<^sup>2 * (1 / x))", "using moebius_sum_tail_bigo [folded G_def]"], ["proof (prove)\nusing this:\n  G \\<in> O((/) 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x\\<^sup>2 / 2 * G x)\n    \\<in> O(\\<lambda>x. x\\<^sup>2 * (1 / x))", "by (intro landau_o.big.mult) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. - x\\<^sup>2 / 2 * G x)\n  \\<in> O(\\<lambda>x. x\\<^sup>2 * (1 / x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x\\<^sup>2 / 2 * G x) \\<in> O(\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. - x\\<^sup>2 / 2 * G x)\n  \\<in> O(\\<lambda>x. x\\<^sup>2 * (1 / x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x\\<^sup>2 / 2 * G x) \\<in> O(\\<lambda>x. x * ln x)", "have \"(\\<lambda>x::real. x^2 * (1 / x)) \\<in> O(\\<lambda>x. x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x\\<^sup>2 * (1 / x)) \\<in> O(\\<lambda>x. x * ln x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x\\<^sup>2 * (1 / x)) \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x\\<^sup>2 / 2 * G x) \\<in> O(\\<lambda>x. x * ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. - x\\<^sup>2 / 2 * G x) \\<in> O(\\<lambda>x. x * ln x)", "show \"(\\<lambda>x. (- (x^2) / 2) * G x) \\<in> O(\\<lambda>x. x * ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. - x\\<^sup>2 / 2 * G x) \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x\\<^sup>2 / 2 * G x) \\<in> O(\\<lambda>x. x * ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. - x\\<^sup>2 / 2 * G x) \\<in> O(\\<lambda>x. x * ln x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. - x\\<^sup>2 / 2 * G x + H' x) \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> O(\\<lambda>x. x * ln x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> O(\\<lambda>x. x * ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem summatory_totient_asymptotics':\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. real (totient n)) x) =o (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2) +o O(\\<lambda>x. x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (totient n))\n    \\<in> (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2) +o\n          O(\\<lambda>x. x * ln x)", "using summatory_totient_asymptotics"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (totient n))\n    \\<in> (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2) +o\n          O(\\<lambda>x. x * ln x)", "by (subst set_minus_plus [symmetric]) (simp_all add: fun_diff_def)"], ["", "theorem summatory_totient_asymptotics'':\n  \"sum_upto (\\<lambda>n. real (totient n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real\n          (totient\n            n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real\n          (totient\n            n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)", "have \"(\\<lambda>x. sum_upto (\\<lambda>n. real (totient n)) x - 3 / pi\\<^sup>2 * x\\<^sup>2) \\<in> O(\\<lambda>x. x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (totient n)) x -\n        3 / pi\\<^sup>2 * x\\<^sup>2)\n    \\<in> O(\\<lambda>x. x * ln x)", "by (rule summatory_totient_asymptotics)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real\n          (totient\n            n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real\n          (totient\n            n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)", "have \"(\\<lambda>x. x * ln x) \\<in> o(\\<lambda>x. 3 / pi ^ 2 * x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * ln x) \\<in> o(\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x * ln x) \\<in> o(\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real\n          (totient\n            n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> o(\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> o(\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real\n          (totient\n            n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)", "by (simp add: asymp_equiv_altdef)"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n.\n       real\n        (totient n)) \\<sim>[at_top] (\\<lambda>x. 3 / pi\\<^sup>2 * x\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Asymptotic distribution of squarefree numbers\\<close>"], ["", "lemma le_sqrt_iff: \"x \\<ge> 0 \\<Longrightarrow> x \\<le> sqrt y \\<longleftrightarrow> x^2 \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> x \\<Longrightarrow> (x \\<le> sqrt y) = (x\\<^sup>2 \\<le> y)", "using real_sqrt_le_iff[of \"x^2\" y]"], ["proof (prove)\nusing this:\n  (sqrt (x\\<^sup>2) \\<le> sqrt y) = (x\\<^sup>2 \\<le> y)\n\ngoal (1 subgoal):\n 1. 0 \\<le> x \\<Longrightarrow> (x \\<le> sqrt y) = (x\\<^sup>2 \\<le> y)", "by (simp del: real_sqrt_le_iff)"], ["", "theorem squarefree_asymptotics: \"(\\<lambda>x. card {n. real n \\<le> x \\<and> squarefree n} - 6 / pi\\<^sup>2 * x) \\<in> O(sqrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "define f :: \"nat \\<Rightarrow> real\" where \"f = (\\<lambda>n. if n = 0 then 0 else 1)\""], ["proof (state)\nthis:\n  f = (\\<lambda>n. if n = 0 then 0 else 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "define g :: \"nat \\<Rightarrow> real\" where \"g = dirichlet_prod (ind squarefree) moebius_mu\""], ["proof (state)\nthis:\n  g = dirichlet_prod (ind squarefree) moebius_mu\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "interpret g: multiplicative_function g"], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function g", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function (dirichlet_prod (ind squarefree) moebius_mu)", "by (intro multiplicative_dirichlet_prod squarefree.multiplicative_function_axioms \n              moebius_mu.multiplicative_function_axioms)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "interpret g: multiplicative_function' g \"\\<lambda>p k. if k = 2 then -1 else 0\" \"\\<lambda>_. 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function' g (\\<lambda>p k. if k = 2 then - 1 else 0)\n     (\\<lambda>_. 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "interpret g': multiplicative_dirichlet_prod' \"ind squarefree\" moebius_mu\n     \"\\<lambda>p k. if 1 < k then 0 else 1\" \"\\<lambda>p k. if k = 1 then - 1 else 0\" \"\\<lambda>_. 1\" \"\\<lambda>_. - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_dirichlet_prod' (ind squarefree) moebius_mu\n     (\\<lambda>p k. if 1 < k then 0::'a else (1::'a))\n     (\\<lambda>p k. if k = 1 then - (1::'a) else (0::'a))\n     (\\<lambda>_. 1::'a) (\\<lambda>_. - (1::'a))", "by (intro multiplicative_dirichlet_prod'.intro squarefree.multiplicative_function'_axioms \n              moebius_mu.multiplicative_function'_axioms)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "fix p k :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "assume \"prime p\" \"k > 0\""], ["proof (state)\nthis:\n  prime p\n  0 < k\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "hence \"g (p ^ k) = (\\<Sum>i\\<in>{0<..<k}. (if Suc 0 < i then 0 else 1) *\n                           (if k - i = Suc 0 then - 1 else 0))\""], ["proof (prove)\nusing this:\n  prime p\n  0 < k\n\ngoal (1 subgoal):\n 1. g (p ^ k) =\n    (\\<Sum>i\\<in>{0<..<k}.\n       (if Suc 0 < i then 0 else 1) * (if k - i = Suc 0 then - 1 else 0))", "by (auto simp: g'.prime_power g_def)"], ["proof (state)\nthis:\n  g (p ^ k) =\n  (\\<Sum>i\\<in>{0<..<k}.\n     (if Suc 0 < i then 0 else 1) * (if k - i = Suc 0 then - 1 else 0))\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "also"], ["proof (state)\nthis:\n  g (p ^ k) =\n  (\\<Sum>i\\<in>{0<..<k}.\n     (if Suc 0 < i then 0 else 1) * (if k - i = Suc 0 then - 1 else 0))\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "have \"\\<dots> = (\\<Sum>i\\<in>{0<..<k}. (if k = 2 then -1 else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..<k}.\n       (if Suc 0 < i then 0 else 1) * (if k - i = Suc 0 then - 1 else 0)) =\n    (\\<Sum>i\\<in>{0<..<k}. if k = 2 then - 1 else 0)", "by (intro sum.cong refl) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..<k}.\n     (if Suc 0 < i then 0 else 1) * (if k - i = Suc 0 then - 1 else 0)) =\n  (\\<Sum>i\\<in>{0<..<k}. if k = 2 then - 1 else 0)\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..<k}.\n     (if Suc 0 < i then 0 else 1) * (if k - i = Suc 0 then - 1 else 0)) =\n  (\\<Sum>i\\<in>{0<..<k}. if k = 2 then - 1 else 0)\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "from \\<open>k > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < k", "have \"\\<dots> = (if k = 2 then -1 else 0)\""], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..<k}. if k = 2 then - 1 else 0) =\n    (if k = 2 then - 1 else 0)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..<k}. if k = 2 then - 1 else 0) =\n  (if k = 2 then - 1 else 0)\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g (p ^ k) = (if k = 2 then - 1 else 0)\n 2. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "finally"], ["proof (chain)\npicking this:\n  g (p ^ k) = (if k = 2 then - 1 else 0)", "show \"g (p ^ k) = \\<dots>\""], ["proof (prove)\nusing this:\n  g (p ^ k) = (if k = 2 then - 1 else 0)\n\ngoal (1 subgoal):\n 1. g (p ^ k) = (if k = 2 then - 1 else 0)", "."], ["proof (state)\nthis:\n  g (p ^ k) = (if k = 2 then - 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<And>p. prime p \\<Longrightarrow> (if 1 = 2 then - 1 else 0) = 0", "qed simp_all"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have mult_g_square: \"multiplicative_function (\\<lambda>n. g (n ^ 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function (\\<lambda>n. g (n\\<^sup>2))", "by standard (simp_all add: power_mult_distrib g.mult_coprime)"], ["proof (state)\nthis:\n  multiplicative_function (\\<lambda>n. g (n\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have g_square: \"g (m ^ 2) = moebius_mu m\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. g (m\\<^sup>2) = moebius_mu m", "using mult_g_square moebius_mu.multiplicative_function_axioms"], ["proof (prove)\nusing this:\n  multiplicative_function (\\<lambda>n. g (n\\<^sup>2))\n  multiplicative_function moebius_mu\n\ngoal (1 subgoal):\n 1. g (m\\<^sup>2) = moebius_mu m", "proof (rule multiplicative_function_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "fix p k :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "assume *: \"prime p\" \"k > 0\""], ["proof (state)\nthis:\n  prime p\n  0 < k\n\ngoal (1 subgoal):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "have \"g ((p ^ k) ^ 2) = g (p ^ (2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ((p ^ k)\\<^sup>2) = g (p ^ (2 * k))", "by (simp add: power_mult [symmetric] mult_ac)"], ["proof (state)\nthis:\n  g ((p ^ k)\\<^sup>2) = g (p ^ (2 * k))\n\ngoal (1 subgoal):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "also"], ["proof (state)\nthis:\n  g ((p ^ k)\\<^sup>2) = g (p ^ (2 * k))\n\ngoal (1 subgoal):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "from *"], ["proof (chain)\npicking this:\n  prime p\n  0 < k", "have \"\\<dots> = (if k = 1 then -1 else 0)\""], ["proof (prove)\nusing this:\n  prime p\n  0 < k\n\ngoal (1 subgoal):\n 1. g (p ^ (2 * k)) = (if k = 1 then - 1 else 0)", "by (simp add: g.prime_power)"], ["proof (state)\nthis:\n  g (p ^ (2 * k)) = (if k = 1 then - 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "also"], ["proof (state)\nthis:\n  g (p ^ (2 * k)) = (if k = 1 then - 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "from *"], ["proof (chain)\npicking this:\n  prime p\n  0 < k", "have \"\\<dots> = moebius_mu (p ^ k)\""], ["proof (prove)\nusing this:\n  prime p\n  0 < k\n\ngoal (1 subgoal):\n 1. (if k = 1 then - 1 else 0) = moebius_mu (p ^ k)", "by (simp add: moebius_mu.prime_power)"], ["proof (state)\nthis:\n  (if k = 1 then - 1 else 0) = moebius_mu (p ^ k)\n\ngoal (1 subgoal):\n 1. \\<And>p k.\n       \\<lbrakk>prime p; 0 < k\\<rbrakk>\n       \\<Longrightarrow> g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "finally"], ["proof (chain)\npicking this:\n  g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "show \"g ((p ^ k) ^ 2) = moebius_mu (p ^ k)\""], ["proof (prove)\nusing this:\n  g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)\n\ngoal (1 subgoal):\n 1. g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)", "."], ["proof (state)\nthis:\n  g ((p ^ k)\\<^sup>2) = moebius_mu (p ^ k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g (?m\\<^sup>2) = moebius_mu ?m\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have g_nonsquare: \"g m = 0\" if \"\\<not>is_square m\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. g m = 0", "proof (cases \"m = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "from that False"], ["proof (chain)\npicking this:\n  \\<not> is_square m\n  m \\<noteq> 0", "obtain p where p: \"prime p\" \"odd (multiplicity p m)\""], ["proof (prove)\nusing this:\n  \\<not> is_square m\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; odd (multiplicity p m)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using is_nth_power_conv_multiplicity_nat[of 2 m]"], ["proof (prove)\nusing this:\n  \\<not> is_square m\n  m \\<noteq> 0\n  0 < 2 \\<Longrightarrow>\n  is_square m =\n  (\\<forall>p. prime p \\<longrightarrow> even (multiplicity p m))\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; odd (multiplicity p m)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prime p\n  odd (multiplicity p m)\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "from p"], ["proof (chain)\npicking this:\n  prime p\n  odd (multiplicity p m)", "have \"multiplicity p m \\<noteq> 2\""], ["proof (prove)\nusing this:\n  prime p\n  odd (multiplicity p m)\n\ngoal (1 subgoal):\n 1. multiplicity p m \\<noteq> 2", "by auto"], ["proof (state)\nthis:\n  multiplicity p m \\<noteq> 2\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "moreover"], ["proof (state)\nthis:\n  multiplicity p m \\<noteq> 2\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "from p"], ["proof (chain)\npicking this:\n  prime p\n  odd (multiplicity p m)", "have \"p \\<in> prime_factors m\""], ["proof (prove)\nusing this:\n  prime p\n  odd (multiplicity p m)\n\ngoal (1 subgoal):\n 1. p \\<in># prime_factorization m", "by (auto simp: prime_factors_multiplicity intro!: Nat.gr0I)"], ["proof (state)\nthis:\n  p \\<in># prime_factorization m\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "ultimately"], ["proof (chain)\npicking this:\n  multiplicity p m \\<noteq> 2\n  p \\<in># prime_factorization m", "have \"(\\<Prod>p\\<in>prime_factors m. if multiplicity p m = 2 then - 1 else 0 :: real) = 0\"\n      (is \"?P = _\")"], ["proof (prove)\nusing this:\n  multiplicity p m \\<noteq> 2\n  p \\<in># prime_factorization m\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors m.\n       if multiplicity p m = 2 then - 1 else 0) =\n    0", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>prime_factors m. if multiplicity p m = 2 then - 1 else 0) =\n  0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>prime_factors m. if multiplicity p m = 2 then - 1 else 0) =\n  0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "have \"?P = g m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors m.\n       if multiplicity p m = 2 then - 1 else 0) =\n    g m", "using False"], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors m.\n       if multiplicity p m = 2 then - 1 else 0) =\n    g m", "by (subst g.prod_prime_factors') auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>prime_factors m. if multiplicity p m = 2 then - 1 else 0) =\n  g m\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> g m = 0\n 2. m \\<noteq> 0 \\<Longrightarrow> g m = 0", "finally"], ["proof (chain)\npicking this:\n  g m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  g m = 0\n\ngoal (1 subgoal):\n 1. g m = 0", "."], ["proof (state)\nthis:\n  g m = 0\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> g m = 0", "qed auto"], ["proof (state)\nthis:\n  \\<not> is_square ?m \\<Longrightarrow> g ?m = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have abs_g_le: \"abs (g m) \\<le> 1\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>g m\\<bar> \\<le> 1", "by (cases \"is_square m\")\n       (auto simp: g_square g_nonsquare abs_moebius_mu_le elim!: is_nth_powerE)"], ["proof (state)\nthis:\n  \\<bar>g ?m\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have fds_g: \"fds g = fds_ind squarefree * fds moebius_mu\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds g = fds_ind squarefree * fds moebius_mu", "by (rule fds_eqI) (simp add: g_def fds_nth_mult)"], ["proof (state)\nthis:\n  fds g = fds_ind squarefree * fds moebius_mu\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have \"fds g * fds_zeta = fds_ind squarefree * (fds_zeta * fds moebius_mu)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds g * fds_zeta = fds_ind squarefree * (fds_zeta * fds moebius_mu)", "by (simp add: fds_g mult_ac)"], ["proof (state)\nthis:\n  fds g * fds_zeta = fds_ind squarefree * (fds_zeta * fds moebius_mu)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  fds g * fds_zeta = fds_ind squarefree * (fds_zeta * fds moebius_mu)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have \"fds_zeta * fds moebius_mu = (1 :: real fds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_zeta * fds moebius_mu = 1", "by (rule fds_zeta_times_moebius_mu)"], ["proof (state)\nthis:\n  fds_zeta * fds moebius_mu = 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  fds g * fds_zeta = fds_ind squarefree * 1", "have *: \"fds_ind squarefree = fds g * fds_zeta\""], ["proof (prove)\nusing this:\n  fds g * fds_zeta = fds_ind squarefree * 1\n\ngoal (1 subgoal):\n 1. fds_ind squarefree = fds g * fds_zeta", "by simp"], ["proof (state)\nthis:\n  fds_ind squarefree = fds g * fds_zeta\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have ind_squarefree: \"ind squarefree = dirichlet_prod g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ind squarefree = dirichlet_prod g f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ind squarefree x = dirichlet_prod g f x", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ind squarefree x = dirichlet_prod g f x", "from *"], ["proof (chain)\npicking this:\n  fds_ind squarefree = fds g * fds_zeta", "show \"ind squarefree n = dirichlet_prod g f n\""], ["proof (prove)\nusing this:\n  fds_ind squarefree = fds g * fds_zeta\n\ngoal (1 subgoal):\n 1. ind squarefree n = dirichlet_prod g f n", "by (cases \"n = 0\") (simp_all add: fds_eq_iff fds_nth_mult f_def)"], ["proof (state)\nthis:\n  ind squarefree n = dirichlet_prod g f n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ind squarefree = dirichlet_prod g f\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "define H :: \"real \\<Rightarrow> real\" \n    where \"H = (\\<lambda>x. sum_upto (\\<lambda>m. g (m^2) * (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> - x / real (m^2))) (sqrt x))\""], ["proof (state)\nthis:\n  H =\n  (\\<lambda>x.\n      sum_upto\n       (\\<lambda>m.\n           g (m\\<^sup>2) *\n           (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n            x / real (m\\<^sup>2)))\n       (sqrt x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "define J where \"J = (\\<lambda>x::real. (\\<Sum>n. moebius_mu (n + Suc (nat \\<lfloor>x\\<rfloor>)) / (n + Suc (nat \\<lfloor>x\\<rfloor>))^2))\""], ["proof (state)\nthis:\n  J =\n  (\\<lambda>x.\n      \\<Sum>n.\n         moebius_mu (n + Suc (nat \\<lfloor>x\\<rfloor>)) /\n         real ((n + Suc (nat \\<lfloor>x\\<rfloor>))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have \"eventually (\\<lambda>x. norm (H x) \\<le> 1 * norm (sqrt x)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. norm (H x) \\<le> 1 * norm (sqrt x)", "using eventually_ge_at_top[of \"0::real\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. norm (H x) \\<le> 1 * norm (sqrt x)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "case (elim x)"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "have \"abs (H x) \\<le> sum_upto (\\<lambda>m. abs (g (m^2) * (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> - \n                         x / real (m^2)))) (sqrt x)\" (is \"_ \\<le> ?S\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>H x\\<bar>\n    \\<le> sum_upto\n           (\\<lambda>m.\n               \\<bar>g (m\\<^sup>2) *\n                     (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n                      x / real (m\\<^sup>2))\\<bar>)\n           (sqrt x)", "unfolding H_def sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>m\\<in>{i. 0 < i \\<and> real i \\<le> sqrt x}.\n            g (m\\<^sup>2) *\n            (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n             x / real (m\\<^sup>2))\\<bar>\n    \\<le> (\\<Sum>m\\<in>{i. 0 < i \\<and> real i \\<le> sqrt x}.\n             \\<bar>g (m\\<^sup>2) *\n                   (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n                    x / real (m\\<^sup>2))\\<bar>)", "by (rule sum_abs)"], ["proof (state)\nthis:\n  \\<bar>H x\\<bar>\n  \\<le> sum_upto\n         (\\<lambda>m.\n             \\<bar>g (m\\<^sup>2) *\n                   (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n                    x / real (m\\<^sup>2))\\<bar>)\n         (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "also"], ["proof (state)\nthis:\n  \\<bar>H x\\<bar>\n  \\<le> sum_upto\n         (\\<lambda>m.\n             \\<bar>g (m\\<^sup>2) *\n                   (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n                    x / real (m\\<^sup>2))\\<bar>)\n         (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "have \"x / (real m)\\<^sup>2 - real_of_int \\<lfloor>x / (real m)\\<^sup>2\\<rfloor> \\<le> 1\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. x / (real m)\\<^sup>2 -\n    real_of_int \\<lfloor>x / (real m)\\<^sup>2\\<rfloor>\n    \\<le> 1", "by linarith"], ["proof (state)\nthis:\n  x / (real ?m)\\<^sup>2 -\n  real_of_int \\<lfloor>x / (real ?m)\\<^sup>2\\<rfloor>\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "hence \"?S \\<le> sum_upto (\\<lambda>m. 1 * 1) (sqrt x)\""], ["proof (prove)\nusing this:\n  x / (real ?m)\\<^sup>2 -\n  real_of_int \\<lfloor>x / (real ?m)\\<^sup>2\\<rfloor>\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>m.\n         \\<bar>g (m\\<^sup>2) *\n               (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n                x / real (m\\<^sup>2))\\<bar>)\n     (sqrt x)\n    \\<le> sum_upto (\\<lambda>m. 1 * 1) (sqrt x)", "unfolding abs_mult sum_upto_def"], ["proof (prove)\nusing this:\n  x / (real ?m)\\<^sup>2 -\n  real_of_int \\<lfloor>x / (real ?m)\\<^sup>2\\<rfloor>\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{i. 0 < i \\<and> real i \\<le> sqrt x}.\n       \\<bar>g (m\\<^sup>2)\\<bar> *\n       \\<bar>real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n             x / real (m\\<^sup>2)\\<bar>)\n    \\<le> (\\<Sum>m\\<in>{i. 0 < i \\<and> real i \\<le> sqrt x}. 1 * 1)", "by (intro sum_mono mult_mono abs_g_le) simp_all"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>m.\n       \\<bar>g (m\\<^sup>2) *\n             (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n              x / real (m\\<^sup>2))\\<bar>)\n   (sqrt x)\n  \\<le> sum_upto (\\<lambda>m. 1 * 1) (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "also"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>m.\n       \\<bar>g (m\\<^sup>2) *\n             (real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor> -\n              x / real (m\\<^sup>2))\\<bar>)\n   (sqrt x)\n  \\<le> sum_upto (\\<lambda>m. 1 * 1) (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "have \"\\<dots> = of_int \\<lfloor>sqrt x\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>m. 1 * 1) (sqrt x) =\n    real_of_int \\<lfloor>sqrt x\\<rfloor>", "using elim"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>m. 1 * 1) (sqrt x) =\n    real_of_int \\<lfloor>sqrt x\\<rfloor>", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>m. 1 * 1) (sqrt x) =\n  real_of_int \\<lfloor>sqrt x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>m. 1 * 1) (sqrt x) =\n  real_of_int \\<lfloor>sqrt x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "have \"\\<dots> \\<le> sqrt x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>sqrt x\\<rfloor> \\<le> sqrt x", "by linarith"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>sqrt x\\<rfloor> \\<le> sqrt x\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> x \\<Longrightarrow> norm (H x) \\<le> 1 * norm (sqrt x)", "finally"], ["proof (chain)\npicking this:\n  \\<bar>H x\\<bar> \\<le> sqrt x", "show ?case"], ["proof (prove)\nusing this:\n  \\<bar>H x\\<bar> \\<le> sqrt x\n\ngoal (1 subgoal):\n 1. norm (H x) \\<le> 1 * norm (sqrt x)", "using elim"], ["proof (prove)\nusing this:\n  \\<bar>H x\\<bar> \\<le> sqrt x\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. norm (H x) \\<le> 1 * norm (sqrt x)", "by simp"], ["proof (state)\nthis:\n  norm (H x) \\<le> 1 * norm (sqrt x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. norm (H x) \\<le> 1 * norm (sqrt x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "hence H_bigo: \"H \\<in> O(\\<lambda>x. sqrt x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. norm (H x) \\<le> 1 * norm (sqrt x)\n\ngoal (1 subgoal):\n 1. H \\<in> O(sqrt)", "by (rule bigoI)"], ["proof (state)\nthis:\n  H \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "let ?A = \"\\<lambda>x. card {n. real n \\<le> x \\<and> squarefree n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have \"eventually (\\<lambda>x. ?A x - 6 / pi\\<^sup>2 * x = (-x) * J (sqrt x) + H x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "using eventually_ge_at_top[of \"0::real\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "assume x: \"x \\<ge> 0\""], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"{n. real n \\<le> x \\<and> squarefree n} = {n. n > 0 \\<and> real n \\<le> x \\<and> squarefree n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {n. real n \\<le> x \\<and> squarefree n} =\n    {n. 0 < n \\<and> real n \\<le> x \\<and> squarefree n}", "by (auto intro!: Nat.gr0I)"], ["proof (state)\nthis:\n  {n. real n \\<le> x \\<and> squarefree n} =\n  {n. 0 < n \\<and> real n \\<le> x \\<and> squarefree n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "also"], ["proof (state)\nthis:\n  {n. real n \\<le> x \\<and> squarefree n} =\n  {n. 0 < n \\<and> real n \\<le> x \\<and> squarefree n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"card \\<dots> = sum_upto (ind squarefree :: nat \\<Rightarrow> real) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card {n. 0 < n \\<and> real n \\<le> x \\<and> squarefree n}) =\n    sum_upto (ind squarefree) x", "by (rule sum_upto_ind [symmetric])"], ["proof (state)\nthis:\n  real (card {n. 0 < n \\<and> real n \\<le> x \\<and> squarefree n}) =\n  sum_upto (ind squarefree) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "also"], ["proof (state)\nthis:\n  real (card {n. 0 < n \\<and> real n \\<le> x \\<and> squarefree n}) =\n  sum_upto (ind squarefree) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"\\<dots> = sum_upto (\\<lambda>d. g d * sum_upto f (x / real d)) x\" (is \"_ = ?S\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (ind squarefree) x =\n    sum_upto (\\<lambda>d. g d * sum_upto f (x / real d)) x", "unfolding ind_squarefree"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (dirichlet_prod g f) x =\n    sum_upto (\\<lambda>d. g d * sum_upto f (x / real d)) x", "by (rule sum_upto_dirichlet_prod)"], ["proof (state)\nthis:\n  sum_upto (ind squarefree) x =\n  sum_upto (\\<lambda>d. g d * sum_upto f (x / real d)) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "also"], ["proof (state)\nthis:\n  sum_upto (ind squarefree) x =\n  sum_upto (\\<lambda>d. g d * sum_upto f (x / real d)) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"sum f {0<..nat \\<lfloor>x / real i\\<rfloor>} = of_int \\<lfloor>x / real i\\<rfloor>\" if \"i > 0\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {0<..nat \\<lfloor>x / real i\\<rfloor>} =\n    real_of_int \\<lfloor>x / real i\\<rfloor>", "using x"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. sum f {0<..nat \\<lfloor>x / real i\\<rfloor>} =\n    real_of_int \\<lfloor>x / real i\\<rfloor>", "by (simp add: f_def)"], ["proof (state)\nthis:\n  0 < ?i \\<Longrightarrow>\n  sum f {0<..nat \\<lfloor>x / real ?i\\<rfloor>} =\n  real_of_int \\<lfloor>x / real ?i\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "hence \"?S = sum_upto (\\<lambda>d. g d * of_int \\<lfloor>x / real d\\<rfloor>) x\""], ["proof (prove)\nusing this:\n  0 < ?i \\<Longrightarrow>\n  sum f {0<..nat \\<lfloor>x / real ?i\\<rfloor>} =\n  real_of_int \\<lfloor>x / real ?i\\<rfloor>\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>d. g d * sum_upto f (x / real d)) x =\n    sum_upto (\\<lambda>d. g d * real_of_int \\<lfloor>x / real d\\<rfloor>) x", "unfolding sum_upto_altdef"], ["proof (prove)\nusing this:\n  0 < ?i \\<Longrightarrow>\n  sum f {0<..nat \\<lfloor>x / real ?i\\<rfloor>} =\n  real_of_int \\<lfloor>x / real ?i\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>{0<..nat \\<lfloor>x\\<rfloor>}.\n       g d * sum f {0<..nat \\<lfloor>x / real d\\<rfloor>}) =\n    (\\<Sum>d\\<in>{0<..nat \\<lfloor>x\\<rfloor>}.\n       g d * real_of_int \\<lfloor>x / real d\\<rfloor>)", "by (intro sum.cong refl) simp_all"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>d. g d * sum_upto f (x / real d)) x =\n  sum_upto (\\<lambda>d. g d * real_of_int \\<lfloor>x / real d\\<rfloor>) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>d. g d * sum_upto f (x / real d)) x =\n  sum_upto (\\<lambda>d. g d * real_of_int \\<lfloor>x / real d\\<rfloor>) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"\\<dots> = sum_upto (\\<lambda>m. g (m ^ 2) * of_int \\<lfloor>x / real (m ^ 2)\\<rfloor>) (sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>d. g d * real_of_int \\<lfloor>x / real d\\<rfloor>)\n     x =\n    sum_upto\n     (\\<lambda>m.\n         g (m\\<^sup>2) * real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor>)\n     (sqrt x)", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       g d * real_of_int \\<lfloor>x / real d\\<rfloor>) =\n    (\\<Sum>m\\<in>{i. 0 < i \\<and> real i \\<le> sqrt x}.\n       g (m\\<^sup>2) * real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor>)", "proof (intro sum.reindex_bij_betw_not_neutral [symmetric])"], ["proof (state)\ngoal (5 subgoals):\n 1. finite ?S'\n 2. finite ?T'\n 3. bij_betw power2 ({i. 0 < i \\<and> real i \\<le> sqrt x} - ?S')\n     ({i. 0 < i \\<and> real i \\<le> x} - ?T')\n 4. \\<And>a.\n       a \\<in> ?S' \\<Longrightarrow>\n       g (a\\<^sup>2) * real_of_int \\<lfloor>x / real (a\\<^sup>2)\\<rfloor> =\n       0\n 5. \\<And>b.\n       b \\<in> ?T' \\<Longrightarrow>\n       g b * real_of_int \\<lfloor>x / real b\\<rfloor> = 0", "show \"bij_betw power2 ({i. 0 < i \\<and> real i \\<le> sqrt x} - {}) \n              ({i. 0 < i \\<and> real i \\<le> x} - {i\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. \\<not>is_square i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw power2 ({i. 0 < i \\<and> real i \\<le> sqrt x} - {})\n     ({i. 0 < i \\<and> real i \\<le> x} -\n      {i \\<in> {0<..nat \\<lfloor>x\\<rfloor>}. \\<not> is_square i})", "by (auto simp: bij_betw_def inj_on_def power_eq_iff_eq_base le_sqrt_iff \n                       is_nth_power_def le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  bij_betw power2 ({i. 0 < i \\<and> real i \\<le> sqrt x} - {})\n   ({i. 0 < i \\<and> real i \\<le> x} -\n    {i \\<in> {0<..nat \\<lfloor>x\\<rfloor>}. \\<not> is_square i})\n\ngoal (4 subgoals):\n 1. finite {}\n 2. finite {i \\<in> {0<..nat \\<lfloor>x\\<rfloor>}. \\<not> is_square i}\n 3. \\<And>a.\n       a \\<in> {} \\<Longrightarrow>\n       g (a\\<^sup>2) * real_of_int \\<lfloor>x / real (a\\<^sup>2)\\<rfloor> =\n       0\n 4. \\<And>b.\n       b \\<in> {i \\<in> {0<..nat \\<lfloor>x\\<rfloor>}.\n                \\<not> is_square i} \\<Longrightarrow>\n       g b * real_of_int \\<lfloor>x / real b\\<rfloor> = 0", "qed (auto simp: g_nonsquare)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>d. g d * real_of_int \\<lfloor>x / real d\\<rfloor>) x =\n  sum_upto\n   (\\<lambda>m.\n       g (m\\<^sup>2) * real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor>)\n   (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>d. g d * real_of_int \\<lfloor>x / real d\\<rfloor>) x =\n  sum_upto\n   (\\<lambda>m.\n       g (m\\<^sup>2) * real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor>)\n   (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"\\<dots> = x * sum_upto (\\<lambda>m. g (m ^ 2) / real m ^ 2) (sqrt x) + H x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>m.\n         g (m\\<^sup>2) * real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor>)\n     (sqrt x) =\n    x * sum_upto (\\<lambda>m. g (m\\<^sup>2) / (real m)\\<^sup>2) (sqrt x) +\n    H x", "by (simp add: H_def sum_upto_def sum.distrib ring_distribs sum_subtractf \n                    sum_distrib_left sum_distrib_right mult_ac)"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>m.\n       g (m\\<^sup>2) * real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor>)\n   (sqrt x) =\n  x * sum_upto (\\<lambda>m. g (m\\<^sup>2) / (real m)\\<^sup>2) (sqrt x) + H x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "also"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>m.\n       g (m\\<^sup>2) * real_of_int \\<lfloor>x / real (m\\<^sup>2)\\<rfloor>)\n   (sqrt x) =\n  x * sum_upto (\\<lambda>m. g (m\\<^sup>2) / (real m)\\<^sup>2) (sqrt x) + H x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"sum_upto (\\<lambda>m. g (m ^ 2) / real m ^ 2) (sqrt x) = \n                 sum_upto (\\<lambda>m. moebius_mu m / real m ^ 2) (sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>m. g (m\\<^sup>2) / (real m)\\<^sup>2) (sqrt x) =\n    sum_upto (\\<lambda>m. moebius_mu m / (real m)\\<^sup>2) (sqrt x)", "unfolding sum_upto_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n       g (m\\<^sup>2) / (real m)\\<^sup>2) =\n    (\\<Sum>m\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n       moebius_mu m / (real m)\\<^sup>2)", "by (intro sum.cong refl) (simp_all add: g_square)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>m. g (m\\<^sup>2) / (real m)\\<^sup>2) (sqrt x) =\n  sum_upto (\\<lambda>m. moebius_mu m / (real m)\\<^sup>2) (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>m. g (m\\<^sup>2) / (real m)\\<^sup>2) (sqrt x) =\n  sum_upto (\\<lambda>m. moebius_mu m / (real m)\\<^sup>2) (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"sum_upto (\\<lambda>m. moebius_mu m / (real m)\\<^sup>2) (sqrt x) =\n                 (\\<Sum>m<Suc (nat \\<lfloor>sqrt x\\<rfloor>). moebius_mu m / (real m) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>m. moebius_mu m / (real m)\\<^sup>2) (sqrt x) =\n    (\\<Sum>m<Suc (nat \\<lfloor>sqrt x\\<rfloor>).\n        moebius_mu m / (real m)\\<^sup>2)", "unfolding sum_upto_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n       moebius_mu m / (real m)\\<^sup>2) =\n    (\\<Sum>m<Suc (nat \\<lfloor>sqrt x\\<rfloor>).\n        moebius_mu m / (real m)\\<^sup>2)", "by (intro sum.mono_neutral_cong_left) auto"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>m. moebius_mu m / (real m)\\<^sup>2) (sqrt x) =\n  (\\<Sum>m<Suc (nat \\<lfloor>sqrt x\\<rfloor>).\n      moebius_mu m / (real m)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>m. moebius_mu m / (real m)\\<^sup>2) (sqrt x) =\n  (\\<Sum>m<Suc (nat \\<lfloor>sqrt x\\<rfloor>).\n      moebius_mu m / (real m)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "have \"\\<dots> = (6 / pi^2 - J (sqrt x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m<Suc (nat \\<lfloor>sqrt x\\<rfloor>).\n        moebius_mu m / (real m)\\<^sup>2) =\n    6 / pi\\<^sup>2 - J (sqrt x)", "using sums_split_initial_segment[OF moebius_over_square_sums, of \"Suc (nat \\<lfloor>sqrt x\\<rfloor>)\"]"], ["proof (prove)\nusing this:\n  (\\<lambda>i.\n      moebius_mu (i + Suc (nat \\<lfloor>sqrt x\\<rfloor>)) /\n      real ((i + Suc (nat \\<lfloor>sqrt x\\<rfloor>))\\<^sup>2)) sums\n  (6 / pi\\<^sup>2 -\n   (\\<Sum>i<Suc (nat \\<lfloor>sqrt x\\<rfloor>).\n       moebius_mu i / real (i\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<Suc (nat \\<lfloor>sqrt x\\<rfloor>).\n        moebius_mu m / (real m)\\<^sup>2) =\n    6 / pi\\<^sup>2 - J (sqrt x)", "by (auto simp: sums_iff algebra_simps J_def sum_upto_altdef)"], ["proof (state)\nthis:\n  (\\<Sum>m<Suc (nat \\<lfloor>sqrt x\\<rfloor>).\n      moebius_mu m / (real m)\\<^sup>2) =\n  6 / pi\\<^sup>2 - J (sqrt x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       real (card {n. real n \\<le> x \\<and> squarefree n}) -\n       6 / pi\\<^sup>2 * x =\n       - x * J (sqrt x) + H x", "finally"], ["proof (chain)\npicking this:\n  real (card {n. real n \\<le> x \\<and> squarefree n}) =\n  x * (6 / pi\\<^sup>2 - J (sqrt x)) + H x", "show \"?A x - 6 / pi\\<^sup>2 * x = (-x) * J (sqrt x) + H x\""], ["proof (prove)\nusing this:\n  real (card {n. real n \\<le> x \\<and> squarefree n}) =\n  x * (6 / pi\\<^sup>2 - J (sqrt x)) + H x\n\ngoal (1 subgoal):\n 1. real (card {n. real n \\<le> x \\<and> squarefree n}) -\n    6 / pi\\<^sup>2 * x =\n    - x * J (sqrt x) + H x", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  real (card {n. real n \\<le> x \\<and> squarefree n}) - 6 / pi\\<^sup>2 * x =\n  - x * J (sqrt x) + H x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     real (card {n. real n \\<le> x \\<and> squarefree n}) -\n     6 / pi\\<^sup>2 * x =\n     - x * J (sqrt x) + H x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "hence \"(\\<lambda>x. ?A x - 6 / pi\\<^sup>2 * x) \\<in> \\<Theta>(\\<lambda>x. (-x) * J (sqrt x) + H x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     real (card {n. real n \\<le> x \\<and> squarefree n}) -\n     6 / pi\\<^sup>2 * x =\n     - x * J (sqrt x) + H x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> \\<Theta>(\\<lambda>x. - x * J (sqrt x) + H x)", "by (rule bigthetaI_cong)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> \\<Theta>(\\<lambda>x. - x * J (sqrt x) + H x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> \\<Theta>(\\<lambda>x. - x * J (sqrt x) + H x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "have \"(\\<lambda>x. (-x) * J (sqrt x) + H x) \\<in> O(\\<lambda>x. sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x * J (sqrt x) + H x) \\<in> O(sqrt)", "proof (intro sum_in_bigo H_bigo)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)", "have \"(\\<lambda>x. J (sqrt x)) \\<in> O(\\<lambda>x. 1 / sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. J (sqrt x)) \\<in> O(\\<lambda>x. 1 / sqrt x)", "unfolding J_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<Sum>n.\n           moebius_mu (n + Suc (nat \\<lfloor>sqrt x\\<rfloor>)) /\n           real ((n + Suc (nat \\<lfloor>sqrt x\\<rfloor>))\\<^sup>2))\n    \\<in> O(\\<lambda>x. 1 / sqrt x)", "using moebius_sum_tail_bigo sqrt_at_top"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      \\<Sum>n.\n         moebius_mu (n + Suc (nat \\<lfloor>x\\<rfloor>)) /\n         real ((n + Suc (nat \\<lfloor>x\\<rfloor>))\\<^sup>2))\n  \\<in> O((/) 1)\n  filterlim sqrt at_top at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<Sum>n.\n           moebius_mu (n + Suc (nat \\<lfloor>sqrt x\\<rfloor>)) /\n           real ((n + Suc (nat \\<lfloor>sqrt x\\<rfloor>))\\<^sup>2))\n    \\<in> O(\\<lambda>x. 1 / sqrt x)", "by (rule landau_o.big.compose)"], ["proof (state)\nthis:\n  (\\<lambda>x. J (sqrt x)) \\<in> O(\\<lambda>x. 1 / sqrt x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)", "hence \"(\\<lambda>x. (-x) * J (sqrt x)) \\<in> O(\\<lambda>x. x * (1 / sqrt x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. J (sqrt x)) \\<in> O(\\<lambda>x. 1 / sqrt x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x * J (sqrt x)) \\<in> O(\\<lambda>x. x * (1 / sqrt x))", "by (intro landau_o.big.mult) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. - x * J (sqrt x)) \\<in> O(\\<lambda>x. x * (1 / sqrt x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. - x * J (sqrt x)) \\<in> O(\\<lambda>x. x * (1 / sqrt x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)", "have \"(\\<lambda>x::real. x * (1 / sqrt x)) \\<in> \\<Theta>(\\<lambda>x. sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * (1 / sqrt x)) \\<in> \\<Theta>(sqrt)", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of \"0::real\"]]) \n         (auto simp: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. x * (1 / sqrt x)) \\<in> \\<Theta>(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)", "show \"(\\<lambda>x. (-x) * J (sqrt x)) \\<in> O(\\<lambda>x. sqrt x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. - x * J (sqrt x)) \\<in> O(sqrt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. - x * J (sqrt x) + H x) \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> O(sqrt)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> O(sqrt)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem squarefree_asymptotics':\n  \"(\\<lambda>x. card {n. real n \\<le> x \\<and> squarefree n}) =o (\\<lambda>x. 6 / pi\\<^sup>2 * x) +o O(\\<lambda>x. sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (card {n. real n \\<le> x \\<and> squarefree n}))\n    \\<in> (*) (6 / pi\\<^sup>2) +o O(sqrt)", "using squarefree_asymptotics"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (card {n. real n \\<le> x \\<and> squarefree n}))\n    \\<in> (*) (6 / pi\\<^sup>2) +o O(sqrt)", "by (subst set_minus_plus [symmetric]) (simp_all add: fun_diff_def)"], ["", "theorem squarefree_asymptotics'':\n  \"(\\<lambda>x. card {n. real n \\<le> x \\<and> squarefree n}) \\<sim>[at_top] (\\<lambda>x. 6 / pi\\<^sup>2 * x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {n. real n \\<le> x \\<and>\n               squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {n. real n \\<le> x \\<and>\n               squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)", "have \"(\\<lambda>x. card {n. real n \\<le> x \\<and> squarefree n} - 6 / pi\\<^sup>2 * x) \\<in> O(\\<lambda>x. sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (card {n. real n \\<le> x \\<and> squarefree n}) -\n        6 / pi\\<^sup>2 * x)\n    \\<in> O(sqrt)", "by (rule squarefree_asymptotics)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {n. real n \\<le> x \\<and>\n               squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {n. real n \\<le> x \\<and>\n               squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)", "have \"(sqrt :: real \\<Rightarrow> real) \\<in> \\<Theta>(\\<lambda>x. x powr (1/2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt \\<in> \\<Theta>(\\<lambda>x. x powr (1 / 2))", "by (intro bigthetaI_cong eventually_mono[OF eventually_ge_at_top[of \"0::real\"]]) \n       (auto simp: powr_half_sqrt)"], ["proof (state)\nthis:\n  sqrt \\<in> \\<Theta>(\\<lambda>x. x powr (1 / 2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {n. real n \\<le> x \\<and>\n               squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)", "also"], ["proof (state)\nthis:\n  sqrt \\<in> \\<Theta>(\\<lambda>x. x powr (1 / 2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {n. real n \\<le> x \\<and>\n               squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)", "have \"(\\<lambda>x::real. x powr (1/2)) \\<in> o(\\<lambda>x. 6 / pi ^ 2 * x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x powr (1 / 2)) \\<in> o((*) (6 / pi\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x powr (1 / 2)) \\<in> o((*) (6 / pi\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {n. real n \\<le> x \\<and>\n               squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> o((*) (6 / pi\\<^sup>2))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real (card {n. real n \\<le> x \\<and> squarefree n}) -\n      6 / pi\\<^sup>2 * x)\n  \\<in> o((*) (6 / pi\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {n. real n \\<le> x \\<and>\n               squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)", "by (simp add: asymp_equiv_altdef)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (card\n         {n. real n \\<le> x \\<and>\n             squarefree n})) \\<sim>[at_top] (*) (6 / pi\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The hyperbola method\\<close>"], ["", "lemma hyperbola_method_bigo:\n  fixes f g :: \"nat \\<Rightarrow> 'a :: real_normed_field\"\n  assumes \"(\\<lambda>x. sum_upto (\\<lambda>n. f n * sum_upto g (x / real n)) (sqrt x) - R x) \\<in> O(b)\"\n  assumes \"(\\<lambda>x. sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n) (sqrt x) - S x) \\<in> O(b)\"\n  assumes \"(\\<lambda>x. sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x) \\<in> O(b)\"\n  shows   \"(\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x)) \\<in> O(b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n    \\<in> O(b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n    \\<in> O(b)", "let ?A = \"\\<lambda>x. (sum_upto (\\<lambda>n. f n * sum_upto g (x / real n)) (sqrt x) - R x) +\n                (sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n) (sqrt x) - S x) +\n                (-(sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n    \\<in> O(b)", "have \"(\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x)) \\<in> \\<Theta>(?A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n    \\<in> \\<Theta>(\\<lambda>x.\n                      sum_upto (\\<lambda>n. f n * sum_upto g (x / real n))\n                       (sqrt x) -\n                      R x +\n                      (sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n)\n                        (sqrt x) -\n                       S x) +\n                      - (sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x))", "by (intro bigthetaI_cong eventually_mono[OF eventually_ge_at_top[of \"0::real\"]])\n       (auto simp: hyperbola_method_sqrt)"], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n  \\<in> \\<Theta>(\\<lambda>x.\n                    sum_upto (\\<lambda>n. f n * sum_upto g (x / real n))\n                     (sqrt x) -\n                    R x +\n                    (sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n)\n                      (sqrt x) -\n                     S x) +\n                    - (sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n    \\<in> O(b)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n  \\<in> \\<Theta>(\\<lambda>x.\n                    sum_upto (\\<lambda>n. f n * sum_upto g (x / real n))\n                     (sqrt x) -\n                    R x +\n                    (sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n)\n                      (sqrt x) -\n                     S x) +\n                    - (sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n    \\<in> O(b)", "from assms"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. f n * sum_upto g (x / real n)) (sqrt x) - R x)\n  \\<in> O(b)\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n) (sqrt x) - S x)\n  \\<in> O(b)\n  (\\<lambda>x. sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x) \\<in> O(b)", "have \"?A \\<in> O(b)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. f n * sum_upto g (x / real n)) (sqrt x) - R x)\n  \\<in> O(b)\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n) (sqrt x) - S x)\n  \\<in> O(b)\n  (\\<lambda>x. sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x) \\<in> O(b)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. f n * sum_upto g (x / real n)) (sqrt x) -\n        R x +\n        (sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n) (sqrt x) -\n         S x) +\n        - (sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x))\n    \\<in> O(b)", "by (intro sum_in_bigo(1)) (simp_all only: landau_o.big.uminus_in_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. f n * sum_upto g (x / real n)) (sqrt x) - R x +\n      (sum_upto (\\<lambda>n. sum_upto f (x / real n) * g n) (sqrt x) -\n       S x) +\n      - (sum_upto f (sqrt x) * sum_upto g (sqrt x) - T x))\n  \\<in> O(b)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n    \\<in> O(b)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n  \\<in> O(b)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n  \\<in> O(b)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n    \\<in> O(b)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (dirichlet_prod f g) x - (R x + S x - T x))\n  \\<in> O(b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma frac_le_1: \"frac x \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. frac x \\<le> (1::'a)", "unfolding frac_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x - of_int \\<lfloor>x\\<rfloor> \\<le> (1::'a)", "by linarith"], ["", "lemma ln_minus_ln_floor_bound:\n  assumes \"x \\<ge> 2\"\n  shows   \"ln x - ln (floor x) \\<in> {0..<1 / (x - 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "from assms"], ["proof (chain)\npicking this:\n  2 \\<le> x", "have \"ln (floor x) \\<ge> ln (x - 1)\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. ln (x - 1) \\<le> ln (real_of_int \\<lfloor>x\\<rfloor>)", "by (subst ln_le_cancel_iff) simp_all"], ["proof (state)\nthis:\n  ln (x - 1) \\<le> ln (real_of_int \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "hence \"ln x - ln (floor x) \\<le> ln ((x - 1) + 1) - ln (x - 1)\""], ["proof (prove)\nusing this:\n  ln (x - 1) \\<le> ln (real_of_int \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)\n    \\<le> ln (x - 1 + 1) - ln (x - 1)", "by simp"], ["proof (state)\nthis:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)\n  \\<le> ln (x - 1 + 1) - ln (x - 1)\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "also"], ["proof (state)\nthis:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)\n  \\<le> ln (x - 1 + 1) - ln (x - 1)\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "from assms"], ["proof (chain)\npicking this:\n  2 \\<le> x", "have \"\\<dots> < 1 / (x - 1)\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. ln (x - 1 + 1) - ln (x - 1) < 1 / (x - 1)", "by (intro ln_diff_le_inverse) simp_all"], ["proof (state)\nthis:\n  ln (x - 1 + 1) - ln (x - 1) < 1 / (x - 1)\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "finally"], ["proof (chain)\npicking this:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) < 1 / (x - 1)", "have \"ln x - ln (floor x) < 1 / (x - 1)\""], ["proof (prove)\nusing this:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) < 1 / (x - 1)\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) < 1 / (x - 1)", "by simp"], ["proof (state)\nthis:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) < 1 / (x - 1)\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "moreover"], ["proof (state)\nthis:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) < 1 / (x - 1)\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "from assms"], ["proof (chain)\npicking this:\n  2 \\<le> x", "have \"ln x \\<ge> ln (of_int \\<lfloor>x\\<rfloor>)\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. ln (real_of_int \\<lfloor>x\\<rfloor>) \\<le> ln x", "by (subst ln_le_cancel_iff) simp_all"], ["proof (state)\nthis:\n  ln (real_of_int \\<lfloor>x\\<rfloor>) \\<le> ln x\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "ultimately"], ["proof (chain)\npicking this:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) < 1 / (x - 1)\n  ln (real_of_int \\<lfloor>x\\<rfloor>) \\<le> ln x", "show ?thesis"], ["proof (prove)\nusing this:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) < 1 / (x - 1)\n  ln (real_of_int \\<lfloor>x\\<rfloor>) \\<le> ln x\n\ngoal (1 subgoal):\n 1. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}", "by simp"], ["proof (state)\nthis:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_minus_ln_floor_bigo:\n  \"(\\<lambda>x::real. ln x - ln (floor x)) \\<in> O(\\<lambda>x. 1 / x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)", "have \"eventually (\\<lambda>x. norm (ln x - ln (floor x)) \\<le> 1 * norm (1 / (x - 1))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm (ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n       \\<le> 1 * norm (1 / (x - 1))", "using eventually_ge_at_top[of \"2::real\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 2) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm (ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n       \\<le> 1 * norm (1 / (x - 1))", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       norm (ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n       \\<le> 1 * norm (1 / (x - 1))", "case (elim x)"], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       norm (ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n       \\<le> 1 * norm (1 / (x - 1))", "with ln_minus_ln_floor_bound[OF this]"], ["proof (chain)\npicking this:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}\n  2 \\<le> x", "show ?case"], ["proof (prove)\nusing this:\n  ln x - ln (real_of_int \\<lfloor>x\\<rfloor>) \\<in> {0..<1 / (x - 1)}\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. norm (ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n    \\<le> 1 * norm (1 / (x - 1))", "by auto"], ["proof (state)\nthis:\n  norm (ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n  \\<le> 1 * norm (1 / (x - 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n     \\<le> 1 * norm (1 / (x - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)", "hence \"(\\<lambda>x::real. ln x - ln (floor x)) \\<in> O(\\<lambda>x. 1 / (x - 1))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n     \\<le> 1 * norm (1 / (x - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n    \\<in> O(\\<lambda>x. 1 / (x - 1))", "by (rule bigoI)"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n  \\<in> O(\\<lambda>x. 1 / (x - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>))\n  \\<in> O(\\<lambda>x. 1 / (x - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)", "have \"(\\<lambda>x::real. 1 / (x - 1)) \\<in> O(\\<lambda>x. 1 / x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / (x - 1)) \\<in> O((/) 1)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / (x - 1)) \\<in> O((/) 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. ln x - ln (real_of_int \\<lfloor>x\\<rfloor>)) \\<in> O((/) 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma divisor_count_asymptotics_aux:\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) -\n                    (x * ln x / 2 + euler_mascheroni * x)) \\<in> O(sqrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "define R where \"R = (\\<lambda>x. \\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. frac (x / real i))\""], ["proof (state)\nthis:\n  R =\n  (\\<lambda>x.\n      \\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. frac (x / real i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "define S where \"S = (\\<lambda>x. ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) - ln x / 2)\""], ["proof (state)\nthis:\n  S = (\\<lambda>x. ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) - ln x / 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "have R_bound: \"R x \\<in> {0..sqrt x}\" if x: \"x \\<ge> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "have \"R x \\<le> (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R x \\<le> (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1)", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. frac (x / real i))\n    \\<le> (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1)", "by (intro sum_mono frac_le_1)"], ["proof (state)\nthis:\n  R x \\<le> (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1)\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "also"], ["proof (state)\nthis:\n  R x \\<le> (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1)\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "from x"], ["proof (chain)\npicking this:\n  0 \\<le> x", "have \"\\<dots> = of_int \\<lfloor>sqrt x\\<rfloor>\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1) =\n    real_of_int \\<lfloor>sqrt x\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1) =\n  real_of_int \\<lfloor>sqrt x\\<rfloor>\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1) =\n  real_of_int \\<lfloor>sqrt x\\<rfloor>\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "have \"\\<dots> \\<le> sqrt x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>sqrt x\\<rfloor> \\<le> sqrt x", "by simp"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>sqrt x\\<rfloor> \\<le> sqrt x\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "finally"], ["proof (chain)\npicking this:\n  R x \\<le> sqrt x", "have \"R x \\<le> sqrt x\""], ["proof (prove)\nusing this:\n  R x \\<le> sqrt x\n\ngoal (1 subgoal):\n 1. R x \\<le> sqrt x", "."], ["proof (state)\nthis:\n  R x \\<le> sqrt x\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "moreover"], ["proof (state)\nthis:\n  R x \\<le> sqrt x\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "have \"R x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> R x", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n               frac (x / real i))", "by (intro sum_nonneg) simp_all"], ["proof (state)\nthis:\n  0 \\<le> R x\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "ultimately"], ["proof (chain)\npicking this:\n  R x \\<le> sqrt x\n  0 \\<le> R x", "show ?thesis"], ["proof (prove)\nusing this:\n  R x \\<le> sqrt x\n  0 \\<le> R x\n\ngoal (1 subgoal):\n 1. R x \\<in> {0..sqrt x}", "by simp"], ["proof (state)\nthis:\n  R x \\<in> {0..sqrt x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow> R ?x \\<in> {0..sqrt ?x}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "have R_bound': \"norm (R x) \\<le> 1 * norm (sqrt x)\" if \"x \\<ge> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (R x) \\<le> 1 * norm (sqrt x)", "using R_bound[OF that] that"], ["proof (prove)\nusing this:\n  R x \\<in> {0..sqrt x}\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. norm (R x) \\<le> 1 * norm (sqrt x)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow> norm (R ?x) \\<le> 1 * norm (sqrt ?x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "have R_bigo: \"R \\<in> O(sqrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> O(sqrt)", "using eventually_ge_at_top[of \"0::real\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 0) at_top\n\ngoal (1 subgoal):\n 1. R \\<in> O(sqrt)", "by (intro bigoI[of _ 1], elim eventually_mono) (rule R_bound')"], ["proof (state)\nthis:\n  R \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "have \"eventually (\\<lambda>x. sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1 :: real) (x / real n)) (sqrt x) =\n                          x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "using eventually_ge_at_top[of \"0 :: real\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "case (elim x)"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "have \"sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1 :: real) (x / real n)) (sqrt x) = \n            (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. of_int \\<lfloor>x / real i\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n    (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n       real_of_int \\<lfloor>x / real i\\<rfloor>)", "using elim"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n    (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n       real_of_int \\<lfloor>x / real i\\<rfloor>)", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n     real_of_int \\<lfloor>x / real i\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n     real_of_int \\<lfloor>x / real i\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "have \"\\<dots> = x * (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1 / real i) - R x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n       real_of_int \\<lfloor>x / real i\\<rfloor>) =\n    x * (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1 / real i) - R x", "by (simp add: sum_subtractf frac_def R_def sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n     real_of_int \\<lfloor>x / real i\\<rfloor>) =\n  x * (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1 / real i) - R x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}.\n     real_of_int \\<lfloor>x / real i\\<rfloor>) =\n  x * (\\<Sum>i\\<in>{0<..nat \\<lfloor>sqrt x\\<rfloor>}. 1 / real i) - R x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "have \"{0<..nat \\<lfloor>sqrt x\\<rfloor>} = {1..nat \\<lfloor>sqrt x\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0<..nat \\<lfloor>sqrt x\\<rfloor>} = {1..nat \\<lfloor>sqrt x\\<rfloor>}", "by auto"], ["proof (state)\nthis:\n  {0<..nat \\<lfloor>sqrt x\\<rfloor>} = {1..nat \\<lfloor>sqrt x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "also"], ["proof (state)\nthis:\n  {0<..nat \\<lfloor>sqrt x\\<rfloor>} = {1..nat \\<lfloor>sqrt x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "have \"(\\<Sum>i\\<in>\\<dots>. 1 / real i) = harm (nat \\<lfloor>sqrt x\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..nat \\<lfloor>sqrt x\\<rfloor>. 1 / real i) =\n    harm (nat \\<lfloor>sqrt x\\<rfloor>)", "by (simp add: harm_def divide_simps)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..nat \\<lfloor>sqrt x\\<rfloor>. 1 / real i) =\n  harm (nat \\<lfloor>sqrt x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> x \\<Longrightarrow>\n       sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n        (sqrt x) =\n       x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "finally"], ["proof (chain)\npicking this:\n  sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n  x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "show ?case"], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n  x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n    x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x", "."], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n  x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n     x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "hence \"(\\<lambda>x. sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1 :: real) (x / real n)) (sqrt x) -\n                (x * ln x / 2 + euler_mascheroni * x)) \\<in> \n         \\<Theta>(\\<lambda>x. x * (harm (nat \\<lfloor>sqrt x\\<rfloor>) - (ln (nat \\<lfloor>sqrt x\\<rfloor>) + euler_mascheroni)) - R x + x * S x)\" \n   (is \"_ \\<in> \\<Theta>(?A)\")"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) =\n     x * harm (nat \\<lfloor>sqrt x\\<rfloor>) - R x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> \\<Theta>(\\<lambda>x.\n                      x *\n                      (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n                       (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) +\n                        euler_mascheroni)) -\n                      R x +\n                      x * S x)", "by (intro bigthetaI_cong) (elim eventually_mono, simp_all add: algebra_simps S_def)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> \\<Theta>(\\<lambda>x.\n                    x *\n                    (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n                     (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) +\n                      euler_mascheroni)) -\n                    R x +\n                    x * S x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> \\<Theta>(\\<lambda>x.\n                    x *\n                    (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n                     (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) +\n                      euler_mascheroni)) -\n                    R x +\n                    x * S x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "have \"?A \\<in> O(sqrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)) -\n        R x +\n        x * S x)\n    \\<in> O(sqrt)", "proof (intro sum_in_bigo)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)\n 3. (\\<lambda>x. x * S x) \\<in> O(sqrt)", "have \"(\\<lambda>x. - S x) \\<in> \\<Theta>(\\<lambda>x. ln (sqrt x) - ln (of_int \\<lfloor>sqrt x\\<rfloor>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - S x)\n    \\<in> \\<Theta>(\\<lambda>x.\n                      ln (sqrt x) -\n                      ln (real_of_int \\<lfloor>sqrt x\\<rfloor>))", "by (intro bigthetaI_cong eventually_mono [OF eventually_ge_at_top[of \"1::real\"]]) \n         (auto simp: S_def ln_sqrt)"], ["proof (state)\nthis:\n  (\\<lambda>x. - S x)\n  \\<in> \\<Theta>(\\<lambda>x.\n                    ln (sqrt x) - ln (real_of_int \\<lfloor>sqrt x\\<rfloor>))\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)\n 3. (\\<lambda>x. x * S x) \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. - S x)\n  \\<in> \\<Theta>(\\<lambda>x.\n                    ln (sqrt x) - ln (real_of_int \\<lfloor>sqrt x\\<rfloor>))\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)\n 3. (\\<lambda>x. x * S x) \\<in> O(sqrt)", "have \"(\\<lambda>x. ln (sqrt x) - ln (of_int \\<lfloor>sqrt x\\<rfloor>)) \\<in> O(\\<lambda>x. 1 / sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (sqrt x) - ln (real_of_int \\<lfloor>sqrt x\\<rfloor>))\n    \\<in> O(\\<lambda>x. 1 / sqrt x)", "by (rule landau_o.big.compose[OF ln_minus_ln_floor_bigo sqrt_at_top])"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (sqrt x) - ln (real_of_int \\<lfloor>sqrt x\\<rfloor>))\n  \\<in> O(\\<lambda>x. 1 / sqrt x)\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)\n 3. (\\<lambda>x. x * S x) \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. - S x) \\<in> O(\\<lambda>x. 1 / sqrt x)", "have \"(\\<lambda>x. x * S x) \\<in> O(\\<lambda>x. x * (1 / sqrt x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. - S x) \\<in> O(\\<lambda>x. 1 / sqrt x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * S x) \\<in> O(\\<lambda>x. x * (1 / sqrt x))", "by (intro landau_o.big.mult) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. x * S x) \\<in> O(\\<lambda>x. x * (1 / sqrt x))\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)\n 3. (\\<lambda>x. x * S x) \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. x * S x) \\<in> O(\\<lambda>x. x * (1 / sqrt x))\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)\n 3. (\\<lambda>x. x * S x) \\<in> O(sqrt)", "have \"(\\<lambda>x::real. x * (1 / sqrt x)) \\<in> \\<Theta>(\\<lambda>x. sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * (1 / sqrt x)) \\<in> \\<Theta>(sqrt)", "by (intro bigthetaI_cong eventually_mono [OF eventually_gt_at_top[of \"0::real\"]]) \n         (auto simp: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. x * (1 / sqrt x)) \\<in> \\<Theta>(sqrt)\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)\n 3. (\\<lambda>x. x * S x) \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. x * S x) \\<in> O(sqrt)", "show \"(\\<lambda>x. x * S x) \\<in> O(sqrt)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x * S x) \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * S x) \\<in> O(sqrt)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. x * S x) \\<in> O(sqrt)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "let ?f = \"\\<lambda>x::real. harm (nat \\<lfloor>sqrt x\\<rfloor>) - (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)\""], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "have \"?f \\<in> O(\\<lambda>x. 1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n        (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni))\n    \\<in> O(\\<lambda>x. 1 / real (nat \\<lfloor>sqrt x\\<rfloor>))", "proof (rule landau_o.big.compose[of _ _ _ \"\\<lambda>x. nat \\<lfloor>sqrt x\\<rfloor>\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>a. harm a - (ln (real a) + euler_mascheroni))\n    \\<in> O[?F](\\<lambda>a. 1 / real a)\n 2. LIM x at_top. nat \\<lfloor>sqrt x\\<rfloor> :> ?F", "show \"filterlim (\\<lambda>x::real. nat \\<lfloor>sqrt x\\<rfloor>) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_top. nat \\<lfloor>sqrt x\\<rfloor> :> sequentially", "by (intro filterlim_compose[OF filterlim_nat_sequentially]\n                  filterlim_compose[OF filterlim_floor_sequentially] sqrt_at_top)"], ["proof (state)\nthis:\n  LIM x at_top. nat \\<lfloor>sqrt x\\<rfloor> :> sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. harm a - (ln (real a) + euler_mascheroni))\n    \\<in> O(\\<lambda>a. 1 / real a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a. harm a - (ln (real a) + euler_mascheroni))\n    \\<in> O(\\<lambda>a. 1 / real a)", "show \"(\\<lambda>a. harm a - (ln (real a) + euler_mascheroni)) \\<in> O(\\<lambda>a. 1 / real a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. harm a - (ln (real a) + euler_mascheroni))\n    \\<in> O(\\<lambda>a. 1 / real a)", "by (rule harm_expansion_bigo_simple2)"], ["proof (state)\nthis:\n  (\\<lambda>a. harm a - (ln (real a) + euler_mascheroni))\n  \\<in> O(\\<lambda>a. 1 / real a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n      (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni))\n  \\<in> O(\\<lambda>x. 1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n      (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni))\n  \\<in> O(\\<lambda>x. 1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "have \"(\\<lambda>x. 1 / real (nat \\<lfloor>sqrt x\\<rfloor>)) \\<in> O(\\<lambda>x. 1 / (sqrt x - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n    \\<in> O(\\<lambda>x. 1 / (sqrt x - 1))", "proof (rule bigoI[of _ 1], use eventually_ge_at_top[of 2] in eventually_elim)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       norm (1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n       \\<le> 1 * norm (1 / (sqrt x - 1))", "case (elim x)"], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       norm (1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n       \\<le> 1 * norm (1 / (sqrt x - 1))", "have \"sqrt x \\<le> 1 + real_of_int \\<lfloor>sqrt x\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt x \\<le> 1 + real_of_int \\<lfloor>sqrt x\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  sqrt x \\<le> 1 + real_of_int \\<lfloor>sqrt x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       norm (1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n       \\<le> 1 * norm (1 / (sqrt x - 1))", "with elim"], ["proof (chain)\npicking this:\n  2 \\<le> x\n  sqrt x \\<le> 1 + real_of_int \\<lfloor>sqrt x\\<rfloor>", "show ?case"], ["proof (prove)\nusing this:\n  2 \\<le> x\n  sqrt x \\<le> 1 + real_of_int \\<lfloor>sqrt x\\<rfloor>\n\ngoal (1 subgoal):\n 1. norm (1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n    \\<le> 1 * norm (1 / (sqrt x - 1))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  norm (1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n  \\<le> 1 * norm (1 / (sqrt x - 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n  \\<in> O(\\<lambda>x. 1 / (sqrt x - 1))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / real (nat \\<lfloor>sqrt x\\<rfloor>))\n  \\<in> O(\\<lambda>x. 1 / (sqrt x - 1))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "have \"(\\<lambda>x::real. 1 / (sqrt x - 1)) \\<in> O(\\<lambda>x. 1 / sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / (sqrt x - 1)) \\<in> O(\\<lambda>x. 1 / sqrt x)", "by (rule landau_o.big.compose[OF _ sqrt_at_top]) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / (sqrt x - 1)) \\<in> O(\\<lambda>x. 1 / sqrt x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n      (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni))\n  \\<in> O(\\<lambda>x. 1 / sqrt x)", "have \"(\\<lambda>x. x * ?f x) \\<in> O(\\<lambda>x. x * (1 / sqrt x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n      (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni))\n  \\<in> O(\\<lambda>x. 1 / sqrt x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(\\<lambda>x. x * (1 / sqrt x))", "by (intro landau_o.big.mult landau_o.big_refl)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      x *\n      (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n       (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n  \\<in> O(\\<lambda>x. x * (1 / sqrt x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      x *\n      (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n       (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n  \\<in> O(\\<lambda>x. x * (1 / sqrt x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "have \"(\\<lambda>x::real. x * (1 / sqrt x)) \\<in> \\<Theta>(\\<lambda>x. sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * (1 / sqrt x)) \\<in> \\<Theta>(sqrt)", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of \"0::real\"]]) \n         (auto elim!: eventually_mono simp: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. x * (1 / sqrt x)) \\<in> \\<Theta>(sqrt)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)\n 2. R \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      x *\n      (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n       (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n  \\<in> O(sqrt)", "show \"(\\<lambda>x. x * ?f x) \\<in> O(sqrt)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      x *\n      (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n       (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        x *\n        (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n         (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n    \\<in> O(sqrt)", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      x *\n      (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n       (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. R \\<in> O(sqrt)", "qed fact+"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      x *\n      (harm (nat \\<lfloor>sqrt x\\<rfloor>) -\n       (ln (real (nat \\<lfloor>sqrt x\\<rfloor>)) + euler_mascheroni)) -\n      R x +\n      x * S x)\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> O(sqrt)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> O(sqrt)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upto_sqrt_bound:\n  assumes x: \"x \\<ge> (0 :: real)\"\n  shows   \"norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x) \\<le> 2 * norm (sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "from x"], ["proof (chain)\npicking this:\n  0 \\<le> x", "have \"0 \\<le> 2 * sqrt x * (1 - frac (sqrt x)) + frac (sqrt x) ^ 2\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * sqrt x * (1 - frac (sqrt x)) + (frac (sqrt x))\\<^sup>2", "by (intro add_nonneg_nonneg mult_nonneg_nonneg) (simp_all add: frac_le_1)"], ["proof (state)\nthis:\n  0 \\<le> 2 * sqrt x * (1 - frac (sqrt x)) + (frac (sqrt x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "also"], ["proof (state)\nthis:\n  0 \\<le> 2 * sqrt x * (1 - frac (sqrt x)) + (frac (sqrt x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "from x"], ["proof (chain)\npicking this:\n  0 \\<le> x", "have \"\\<dots> = (sqrt x - frac (sqrt x)) ^ 2 - x + 2 * sqrt x\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. 2 * sqrt x * (1 - frac (sqrt x)) + (frac (sqrt x))\\<^sup>2 =\n    (sqrt x - frac (sqrt x))\\<^sup>2 - x + 2 * sqrt x", "by (simp add: algebra_simps power2_eq_square)"], ["proof (state)\nthis:\n  2 * sqrt x * (1 - frac (sqrt x)) + (frac (sqrt x))\\<^sup>2 =\n  (sqrt x - frac (sqrt x))\\<^sup>2 - x + 2 * sqrt x\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "also"], ["proof (state)\nthis:\n  2 * sqrt x * (1 - frac (sqrt x)) + (frac (sqrt x))\\<^sup>2 =\n  (sqrt x - frac (sqrt x))\\<^sup>2 - x + 2 * sqrt x\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "have \"sqrt x - frac (sqrt x) = of_int \\<lfloor>sqrt x\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt x - frac (sqrt x) = real_of_int \\<lfloor>sqrt x\\<rfloor>", "by (simp add: frac_def)"], ["proof (state)\nthis:\n  sqrt x - frac (sqrt x) = real_of_int \\<lfloor>sqrt x\\<rfloor>\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x + 2 * sqrt x", "have \"(of_int \\<lfloor>sqrt x\\<rfloor>) ^ 2 - x \\<ge> -2 * sqrt x\""], ["proof (prove)\nusing this:\n  0 \\<le> (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x + 2 * sqrt x\n\ngoal (1 subgoal):\n 1. - 2 * sqrt x \\<le> (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  - 2 * sqrt x \\<le> (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "moreover"], ["proof (state)\nthis:\n  - 2 * sqrt x \\<le> (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "from x"], ["proof (chain)\npicking this:\n  0 \\<le> x", "have \"of_int (\\<lfloor>sqrt x\\<rfloor>) ^ 2 \\<le> sqrt x ^ 2\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 \\<le> (sqrt x)\\<^sup>2", "by (intro power_mono) simp_all"], ["proof (state)\nthis:\n  (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 \\<le> (sqrt x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "with x"], ["proof (chain)\npicking this:\n  0 \\<le> x\n  (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 \\<le> (sqrt x)\\<^sup>2", "have \"of_int (\\<lfloor>sqrt x\\<rfloor>) ^ 2 - x \\<le> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n  (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 \\<le> (sqrt x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x \\<le> 0", "by simp"], ["proof (state)\nthis:\n  (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x \\<le> 0\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "ultimately"], ["proof (chain)\npicking this:\n  - 2 * sqrt x \\<le> (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x\n  (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x \\<le> 0", "have \"sum_upto (\\<lambda>_. 1) (sqrt x) ^ 2 - x \\<in> {-2 * sqrt x..0}\""], ["proof (prove)\nusing this:\n  - 2 * sqrt x \\<le> (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x\n  (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x \\<le> 0\n\ngoal (1 subgoal):\n 1. (sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x \\<in> {- 2 * sqrt x..0}", "using x"], ["proof (prove)\nusing this:\n  - 2 * sqrt x \\<le> (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x\n  (real_of_int \\<lfloor>sqrt x\\<rfloor>)\\<^sup>2 - x \\<le> 0\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. (sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x \\<in> {- 2 * sqrt x..0}", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  (sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x \\<in> {- 2 * sqrt x..0}\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "with x"], ["proof (chain)\npicking this:\n  0 \\<le> x\n  (sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x \\<in> {- 2 * sqrt x..0}", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  (sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x \\<in> {- 2 * sqrt x..0}\n\ngoal (1 subgoal):\n 1. norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n    \\<le> 2 * norm (sqrt x)", "by simp"], ["proof (state)\nthis:\n  norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n  \\<le> 2 * norm (sqrt x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summatory_divisor_count_asymptotics:\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. real (divisor_count n)) x -\n          (x * ln x + (2 * euler_mascheroni - 1) * x)) \\<in> O(sqrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "let ?f = \"\\<lambda>x. x * ln x / 2 + euler_mascheroni * x\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "have \"(\\<lambda>x. sum_upto (dirichlet_prod (\\<lambda>_. 1 :: real) (\\<lambda>_. 1)) x - (?f x + ?f x - x)) \\<in> O(sqrt)\"\n    (is \"?g \\<in> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1)) x -\n        (x * ln x / 2 + euler_mascheroni * x +\n         (x * ln x / 2 + euler_mascheroni * x) -\n         x))\n    \\<in> O(sqrt)", "proof (rule hyperbola_method_bigo)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. 1 * sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)\n 2. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)\n 3. (\\<lambda>x.\n        sum_upto (\\<lambda>_. 1) (sqrt x) *\n        sum_upto (\\<lambda>_. 1) (sqrt x) -\n        x)\n    \\<in> O(sqrt)", "have \"eventually (\\<lambda>x::real. norm (sum_upto (\\<lambda>_. 1) (sqrt x) ^ 2 - x) \\<le> \n             2 * norm (sqrt x)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n       \\<le> 2 * norm (sqrt x)", "using eventually_ge_at_top[of \"0::real\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n       \\<le> 2 * norm (sqrt x)", "by eventually_elim (rule sum_upto_sqrt_bound)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n     \\<le> 2 * norm (sqrt x)\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. 1 * sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)\n 2. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)\n 3. (\\<lambda>x.\n        sum_upto (\\<lambda>_. 1) (sqrt x) *\n        sum_upto (\\<lambda>_. 1) (sqrt x) -\n        x)\n    \\<in> O(sqrt)", "thus \"(\\<lambda>x::real. sum_upto (\\<lambda>_. 1) (sqrt x) * sum_upto (\\<lambda>_. 1) (sqrt x) - x) \\<in> O(sqrt)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm ((sum_upto (\\<lambda>_. 1) (sqrt x))\\<^sup>2 - x)\n     \\<le> 2 * norm (sqrt x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>_. 1) (sqrt x) *\n        sum_upto (\\<lambda>_. 1) (sqrt x) -\n        x)\n    \\<in> O(sqrt)", "by (intro bigoI[of _ 2]) (simp_all add: power2_eq_square)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>_. 1) (sqrt x) *\n      sum_upto (\\<lambda>_. 1) (sqrt x) -\n      x)\n  \\<in> O(sqrt)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. 1 * sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)\n 2. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. 1 * sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)\n 2. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "show \"(\\<lambda>x. sum_upto (\\<lambda>n. 1 * sum_upto (\\<lambda>_. 1) (x / real n)) (sqrt x) -\n                 (x * ln x / 2 + euler_mascheroni * x)) \\<in> O(sqrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. 1 * sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "using divisor_count_asymptotics_aux"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. 1 * sum_upto (\\<lambda>_. 1) (x / real n))\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. 1 * sum_upto (\\<lambda>_. 1) (x / real n))\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "show \"(\\<lambda>x. sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1) (sqrt x) -\n                 (x * ln x / 2 + euler_mascheroni * x)) \\<in> O(sqrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "using divisor_count_asymptotics_aux"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n))\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n         (sqrt x) -\n        (x * ln x / 2 + euler_mascheroni * x))\n    \\<in> O(sqrt)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. sum_upto (\\<lambda>_. 1) (x / real n) * 1)\n       (sqrt x) -\n      (x * ln x / 2 + euler_mascheroni * x))\n  \\<in> O(sqrt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1)) x -\n      (x * ln x / 2 + euler_mascheroni * x +\n       (x * ln x / 2 + euler_mascheroni * x) -\n       x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1)) x -\n      (x * ln x / 2 + euler_mascheroni * x +\n       (x * ln x / 2 + euler_mascheroni * x) -\n       x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "have \"divisor_count n = dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1) n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count n = dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1) n", "using fds_divisor_count"], ["proof (prove)\nusing this:\n  fds divisor_count = fds_zeta\\<^sup>2\n\ngoal (1 subgoal):\n 1. divisor_count n = dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1) n", "by (cases \"n = 0\") (simp_all add: fds_eq_iff power2_eq_square fds_nth_mult)"], ["proof (state)\nthis:\n  divisor_count ?n1 = dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1) ?n1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "hence \"?g = (\\<lambda>x. sum_upto (\\<lambda>n. real (divisor_count n)) x - \n               (x * ln x + (2 * euler_mascheroni - 1) * x))\""], ["proof (prove)\nusing this:\n  divisor_count ?n1 = dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1) ?n1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1)) x -\n        (x * ln x / 2 + euler_mascheroni * x +\n         (x * ln x / 2 + euler_mascheroni * x) -\n         x)) =\n    (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))", "by (intro ext) (simp_all add: algebra_simps dirichlet_prod_def)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (dirichlet_prod (\\<lambda>_. 1) (\\<lambda>_. 1)) x -\n      (x * ln x / 2 + euler_mascheroni * x +\n       (x * ln x / 2 + euler_mascheroni * x) -\n       x)) =\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n  \\<in> O(sqrt)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n  \\<in> O(sqrt)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem summatory_divisor_count_asymptotics':\n  \"(\\<lambda>x. sum_upto (\\<lambda>n. real (divisor_count n)) x) =o \n     (\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x) +o O(\\<lambda>x. sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n))\n    \\<in> (\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x) +o O(sqrt)", "using summatory_divisor_count_asymptotics"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n))\n    \\<in> (\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x) +o O(sqrt)", "by (subst set_minus_plus [symmetric]) (simp_all add: fun_diff_def)"], ["", "theorem summatory_divisor_count_asymptotics'':\n  \"sum_upto (\\<lambda>n. real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "have \"(\\<lambda>x. sum_upto (\\<lambda>n. real (divisor_count n)) x - \n           (x * ln x + (2 * euler_mascheroni - 1) * x)) \\<in> O(sqrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. real (divisor_count n)) x -\n        (x * ln x + (2 * euler_mascheroni - 1) * x))\n    \\<in> O(sqrt)", "by (rule summatory_divisor_count_asymptotics)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n  \\<in> O(sqrt)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "have \"sqrt \\<in> \\<Theta>(\\<lambda>x. x powr (1/2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt \\<in> \\<Theta>(\\<lambda>x. x powr (1 / 2))", "by (intro bigthetaI_cong eventually_mono [OF eventually_ge_at_top[of \"0::real\"]]) \n       (auto elim!: eventually_mono simp: powr_half_sqrt)"], ["proof (state)\nthis:\n  sqrt \\<in> \\<Theta>(\\<lambda>x. x powr (1 / 2))\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  sqrt \\<in> \\<Theta>(\\<lambda>x. x powr (1 / 2))\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "have \"(\\<lambda>x::real. x powr (1/2)) \\<in> o(\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x powr (1 / 2))\n    \\<in> o(\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x powr (1 / 2))\n  \\<in> o(\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n  \\<in> o(\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x)", "have \"sum_upto (\\<lambda>n. real (divisor_count n)) \\<sim>[at_top]\n                  (\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (divisor_count n)) x -\n      (x * ln x + (2 * euler_mascheroni - 1) * x))\n  \\<in> o(\\<lambda>x. x * ln x + (2 * euler_mascheroni - 1) * x)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real\n          (divisor_count\n            n)) \\<sim>[at_top] (\\<lambda>x.\n                                   x * ln x +\n                                   (2 * euler_mascheroni - 1) * x)", "by (simp add: asymp_equiv_altdef)"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n.\n       real\n        (divisor_count\n          n)) \\<sim>[at_top] (\\<lambda>x.\n                                 x * ln x + (2 * euler_mascheroni - 1) * x)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "also"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n.\n       real\n        (divisor_count\n          n)) \\<sim>[at_top] (\\<lambda>x.\n                                 x * ln x + (2 * euler_mascheroni - 1) * x)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        x * ln x +\n        (2 * euler_mascheroni - 1) *\n        x) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "by (subst asymp_equiv_add_right) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      x * ln x +\n      (2 * euler_mascheroni - 1) * x) \\<sim>[at_top] (\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  sum_upto\n   (\\<lambda>n.\n       real (divisor_count n)) \\<sim>[at_top] (\\<lambda>a. a * ln a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  sum_upto\n   (\\<lambda>n.\n       real (divisor_count n)) \\<sim>[at_top] (\\<lambda>a. a * ln a)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n.\n         real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)", "."], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n.\n       real (divisor_count n)) \\<sim>[at_top] (\\<lambda>x. x * ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summatory_divisor_eq:\n  \"sum_upto (\\<lambda>n. real (divisor_count n)) (real m) = card {(n,d). n \\<in> {0<..m} \\<and> d dvd n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n    real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n    real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})", "have \"sum_upto (\\<lambda>n. real (divisor_count n)) m = card (SIGMA n:{0<..m}. {d. d dvd n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n    real (card (SIGMA n:{0<..m}. {d. d dvd n}))", "unfolding sum_upto_altdef divisor_count_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{0<..nat \\<lfloor>real m\\<rfloor>}.\n       real (card {d. d dvd n})) =\n    real (card (SIGMA n:{0<..m}. {d. d dvd n}))", "by (subst card_SigmaI) simp_all"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n  real (card (SIGMA n:{0<..m}. {d. d dvd n}))\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n    real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n  real (card (SIGMA n:{0<..m}. {d. d dvd n}))\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n    real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})", "have \"(SIGMA n:{0<..m}. {d. d dvd n}) = {(n,d). n \\<in> {0<..m} \\<and> d dvd n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SIGMA n:{0<..m}. {d. d dvd n}) =\n    {(n, d). n \\<in> {0<..m} \\<and> d dvd n}", "by auto"], ["proof (state)\nthis:\n  (SIGMA n:{0<..m}. {d. d dvd n}) = {(n, d). n \\<in> {0<..m} \\<and> d dvd n}\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n    real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})", "finally"], ["proof (chain)\npicking this:\n  sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n  real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n  real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n    real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})", "."], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. real (divisor_count n)) (real m) =\n  real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n})\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes M :: \"nat \\<Rightarrow> real\"\n  defines \"M \\<equiv> \\<lambda>m. card {(n,d). n \\<in> {0<..m} \\<and> d dvd n} / card {0<..m}\"\nbegin"], ["", "lemma mean_divisor_count_asymptotics:\n  \"(\\<lambda>m. M m - (ln m + 2 * euler_mascheroni - 1)) \\<in> O(\\<lambda>m. 1 / sqrt m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "have \"(\\<lambda>m. M m - (ln m + 2 * euler_mascheroni - 1)) \n          \\<in> \\<Theta>(\\<lambda>m. (sum_upto (\\<lambda>n. real (divisor_count n)) (real m) -\n                 (m * ln m + (2 * euler_mascheroni - 1) * m)) / m)\" (is \"_ \\<in> \\<Theta>(?f)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> \\<Theta>(\\<lambda>m.\n                      (sum_upto (\\<lambda>n. real (divisor_count n))\n                        (real m) -\n                       (real m * ln (real m) +\n                        (2 * euler_mascheroni - 1) * real m)) /\n                      real m)", "unfolding M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        real (card {(n, d). n \\<in> {0<..m} \\<and> d dvd n}) /\n        real (card {0<..m}) -\n        (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> \\<Theta>(\\<lambda>m.\n                      (sum_upto (\\<lambda>n. real (divisor_count n))\n                        (real m) -\n                       (real m * ln (real m) +\n                        (2 * euler_mascheroni - 1) * real m)) /\n                      real m)", "by (intro bigthetaI_cong eventually_mono [OF eventually_gt_at_top[of \"0::nat\"]]) \n       (auto simp: summatory_divisor_eq field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n  \\<in> \\<Theta>(\\<lambda>m.\n                    (sum_upto (\\<lambda>n. real (divisor_count n))\n                      (real m) -\n                     (real m * ln (real m) +\n                      (2 * euler_mascheroni - 1) * real m)) /\n                    real m)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n  \\<in> \\<Theta>(\\<lambda>m.\n                    (sum_upto (\\<lambda>n. real (divisor_count n))\n                      (real m) -\n                     (real m * ln (real m) +\n                      (2 * euler_mascheroni - 1) * real m)) /\n                    real m)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "have \"?f \\<in> O(\\<lambda>m. sqrt m / m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        (sum_upto (\\<lambda>n. real (divisor_count n)) (real m) -\n         (real m * ln (real m) + (2 * euler_mascheroni - 1) * real m)) /\n        real m)\n    \\<in> O(\\<lambda>x. sqrt (real x) / real x)", "by (intro landau_o.big.compose[OF _ filterlim_real_sequentially] landau_o.big.divide_right\n          summatory_divisor_count_asymptotics eventually_at_top_not_equal)"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      (sum_upto (\\<lambda>n. real (divisor_count n)) (real m) -\n       (real m * ln (real m) + (2 * euler_mascheroni - 1) * real m)) /\n      real m)\n  \\<in> O(\\<lambda>x. sqrt (real x) / real x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      (sum_upto (\\<lambda>n. real (divisor_count n)) (real m) -\n       (real m * ln (real m) + (2 * euler_mascheroni - 1) * real m)) /\n      real m)\n  \\<in> O(\\<lambda>x. sqrt (real x) / real x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "have \"(\\<lambda>m::nat. sqrt m / m) \\<in> \\<Theta>(\\<lambda>m. 1 / sqrt m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m. sqrt (real m) / real m)\n    \\<in> \\<Theta>(\\<lambda>x. 1 / sqrt (real x))", "by (intro bigthetaI_cong eventually_mono [OF eventually_gt_at_top[of \"0::nat\"]]) \n       (auto simp: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>m. sqrt (real m) / real m)\n  \\<in> \\<Theta>(\\<lambda>x. 1 / sqrt (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n  \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n  \\<in> O(\\<lambda>x. 1 / sqrt (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "."], ["proof (state)\nthis:\n  (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n  \\<in> O(\\<lambda>x. 1 / sqrt (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem mean_divisor_count_asymptotics':\n  \"M =o (\\<lambda>x. ln x + 2 * euler_mascheroni - 1) +o O(\\<lambda>x. 1 / sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<in> (\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1) +o\n            O(\\<lambda>x. 1 / sqrt (real x))", "using mean_divisor_count_asymptotics"], ["proof (prove)\nusing this:\n  (\\<lambda>m. M m - (ln (real m) + 2 * euler_mascheroni - 1))\n  \\<in> O(\\<lambda>x. 1 / sqrt (real x))\n\ngoal (1 subgoal):\n 1. M \\<in> (\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1) +o\n            O(\\<lambda>x. 1 / sqrt (real x))", "by (subst set_minus_plus [symmetric]) (simp_all add: fun_diff_def)"], ["", "theorem mean_divisor_count_asymptotics'': \"M \\<sim>[at_top] ln\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "have \"(\\<lambda>x. M x - (ln x + 2 * euler_mascheroni - 1)) \\<in> O(\\<lambda>x. 1 / sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. M x - (ln (real x) + 2 * euler_mascheroni - 1))\n    \\<in> O(\\<lambda>x. 1 / sqrt (real x))", "by (rule mean_divisor_count_asymptotics)"], ["proof (state)\nthis:\n  (\\<lambda>x. M x - (ln (real x) + 2 * euler_mascheroni - 1))\n  \\<in> O(\\<lambda>x. 1 / sqrt (real x))\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. M x - (ln (real x) + 2 * euler_mascheroni - 1))\n  \\<in> O(\\<lambda>x. 1 / sqrt (real x))\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "have \"(\\<lambda>x. 1 / sqrt (real x)) \\<in> \\<Theta>(\\<lambda>x. x powr (-1/2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / sqrt (real x))\n    \\<in> \\<Theta>(\\<lambda>x. real x powr (- 1 / 2))", "using eventually_gt_at_top[of \"0::nat\"]"], ["proof (prove)\nusing this:\n  eventually ((<) 0) sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / sqrt (real x))\n    \\<in> \\<Theta>(\\<lambda>x. real x powr (- 1 / 2))", "by (intro bigthetaI_cong) \n       (auto elim!: eventually_mono simp: powr_half_sqrt field_simps powr_minus)"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / sqrt (real x))\n  \\<in> \\<Theta>(\\<lambda>x. real x powr (- 1 / 2))\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / sqrt (real x))\n  \\<in> \\<Theta>(\\<lambda>x. real x powr (- 1 / 2))\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "have \"(\\<lambda>x::nat. x powr (-1/2)) \\<in> o(\\<lambda>x. ln x + 2 * euler_mascheroni - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. real x powr (- 1 / 2))\n    \\<in> o(\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1)", "by (intro smallo_real_nat_transfer) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. real x powr (- 1 / 2))\n  \\<in> o(\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1)\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. M x - (ln (real x) + 2 * euler_mascheroni - 1))\n  \\<in> o(\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1)", "have \"M \\<sim>[at_top] (\\<lambda>x. ln x + 2 * euler_mascheroni - 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. M x - (ln (real x) + 2 * euler_mascheroni - 1))\n  \\<in> o(\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1)\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x.\n                               ln (real x) + 2 * euler_mascheroni - 1)", "by (simp add: asymp_equiv_altdef)"], ["proof (state)\nthis:\n  M \\<sim>[sequentially] (\\<lambda>x.\n                             ln (real x) + 2 * euler_mascheroni - 1)\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "also"], ["proof (state)\nthis:\n  M \\<sim>[sequentially] (\\<lambda>x.\n                             ln (real x) + 2 * euler_mascheroni - 1)\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "have \"\\<dots> = (\\<lambda>x::nat. ln x + (2 * euler_mascheroni - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1) =\n    (\\<lambda>x. ln (real x) + (2 * euler_mascheroni - 1))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1) =\n  (\\<lambda>x. ln (real x) + (2 * euler_mascheroni - 1))\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (real x) + 2 * euler_mascheroni - 1) =\n  (\\<lambda>x. ln (real x) + (2 * euler_mascheroni - 1))\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x::nat. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln (real x) +\n        (2 * euler_mascheroni -\n         1)) \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "by (subst asymp_equiv_add_right) auto"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      ln (real x) +\n      (2 * euler_mascheroni -\n       1)) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  M \\<sim>[sequentially] (\\<lambda>a. ln (real a))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  M \\<sim>[sequentially] (\\<lambda>a. ln (real a))\n\ngoal (1 subgoal):\n 1. M \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "."], ["proof (state)\nthis:\n  M \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>The asymptotic ditribution of coprime pairs\\<close>"], ["", "context\n  fixes A :: \"nat \\<Rightarrow> (nat \\<times> nat) set\"\n  defines \"A \\<equiv> (\\<lambda>N. {(m,n) \\<in> {1..N} \\<times> {1..N}. coprime m n})\"  \nbegin"], ["", "lemma coprime_pairs_asymptotics:\n  \"(\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2) \\<in> O(\\<lambda>N. real N * ln (real N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "define C :: \"nat \\<Rightarrow> (nat \\<times> nat) set\"\n    where \"C = (\\<lambda>N. (\\<Union>m\\<in>{1..N}. (\\<lambda>n. (m,n)) ` totatives m))\""], ["proof (state)\nthis:\n  C = (\\<lambda>N. \\<Union>m\\<in>{1..N}. Pair m ` totatives m)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "define D :: \"nat \\<Rightarrow> (nat \\<times> nat) set\"\n    where \"D = (\\<lambda>N. (\\<Union>n\\<in>{1..N}. (\\<lambda>m. (m,n)) ` totatives n))\""], ["proof (state)\nthis:\n  D = (\\<lambda>N. \\<Union>n\\<in>{1..N}. (\\<lambda>m. (m, n)) ` totatives n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "have fin: \"finite (C N)\" \"finite (D N)\" for N"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (C N) &&& finite (D N)", "unfolding C_def D_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union>m\\<in>{1..N}. Pair m ` totatives m) &&&\n    finite (\\<Union>n\\<in>{1..N}. (\\<lambda>m. (m, n)) ` totatives n)", "by (intro finite_UN_I finite_imageI; simp)+"], ["proof (state)\nthis:\n  finite (C ?N)\n  finite (D ?N)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "have *: \"card (A N) = 2 * (\\<Sum>m\\<in>{0<..N}. totient m) - 1\" if N: \"N > 0\" for N"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "have \"A N = C N \\<union> D N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A N = C N \\<union> D N", "by (auto simp add: A_def C_def D_def totatives_def image_iff ac_simps)"], ["proof (state)\nthis:\n  A N = C N \\<union> D N\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "also"], ["proof (state)\nthis:\n  A N = C N \\<union> D N\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "have \"card \\<dots> = card (C N) + card (D N) - card (C N \\<inter> D N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C N \\<union> D N) =\n    card (C N) + card (D N) - card (C N \\<inter> D N)", "using card_Un_Int[OF fin[of N]]"], ["proof (prove)\nusing this:\n  card (C N) + card (D N) =\n  card (C N \\<union> D N) + card (C N \\<inter> D N)\n\ngoal (1 subgoal):\n 1. card (C N \\<union> D N) =\n    card (C N) + card (D N) - card (C N \\<inter> D N)", "by arith"], ["proof (state)\nthis:\n  card (C N \\<union> D N) =\n  card (C N) + card (D N) - card (C N \\<inter> D N)\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "also"], ["proof (state)\nthis:\n  card (C N \\<union> D N) =\n  card (C N) + card (D N) - card (C N \\<inter> D N)\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "have \"C N \\<inter> D N = {(1, 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C N \\<inter> D N = {(1, 1)}", "using N"], ["proof (prove)\nusing this:\n  0 < N\n\ngoal (1 subgoal):\n 1. C N \\<inter> D N = {(1, 1)}", "by (auto simp: image_iff totatives_def C_def D_def)"], ["proof (state)\nthis:\n  C N \\<inter> D N = {(1, 1)}\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "also"], ["proof (state)\nthis:\n  C N \\<inter> D N = {(1, 1)}\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "have \"D N = (\\<lambda>(x,y). (y,x)) ` C N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D N = (\\<lambda>(x, y). (y, x)) ` C N", "by (simp add: image_UN image_image C_def D_def)"], ["proof (state)\nthis:\n  D N = (\\<lambda>(x, y). (y, x)) ` C N\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "also"], ["proof (state)\nthis:\n  D N = (\\<lambda>(x, y). (y, x)) ` C N\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "have \"card \\<dots> = card (C N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>(x, y). (y, x)) ` C N) = card (C N)", "by (rule card_image) (simp add: inj_on_def C_def)"], ["proof (state)\nthis:\n  card ((\\<lambda>(x, y). (y, x)) ` C N) = card (C N)\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "also"], ["proof (state)\nthis:\n  card ((\\<lambda>(x, y). (y, x)) ` C N) = card (C N)\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "have \"card (C N) = (\\<Sum>m\\<in>{1..N}. card ((\\<lambda>n. (m,n)) ` totatives m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (C N) = (\\<Sum>m = 1..N. card (Pair m ` totatives m))", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union>m\\<in>{1..N}. Pair m ` totatives m) =\n    (\\<Sum>m = 1..N. card (Pair m ` totatives m))", "by (intro card_UN_disjoint) auto"], ["proof (state)\nthis:\n  card (C N) = (\\<Sum>m = 1..N. card (Pair m ` totatives m))\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "also"], ["proof (state)\nthis:\n  card (C N) = (\\<Sum>m = 1..N. card (Pair m ` totatives m))\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "have \"\\<dots> = (\\<Sum>m\\<in>{1..N}. totient m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..N. card (Pair m ` totatives m)) = sum totient {1..N}", "unfolding totient_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..N. card (Pair m ` totatives m)) =\n    (\\<Sum>m = 1..N. card (totatives m))", "by (subst card_image) (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..N. card (Pair m ` totatives m)) = sum totient {1..N}\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..N. card (Pair m ` totatives m)) = sum totient {1..N}\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "have \"\\<dots> = (\\<Sum>m\\<in>{0<..N}. totient m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum totient {1..N} = sum totient {0<..N}", "by (intro sum.cong refl) auto"], ["proof (state)\nthis:\n  sum totient {1..N} = sum totient {0<..N}\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "finally"], ["proof (chain)\npicking this:\n  card (A N) = sum totient {0<..N} + sum totient {0<..N} - card {(1, 1)}", "show \"card (A N) = 2 * \\<dots> - 1\""], ["proof (prove)\nusing this:\n  card (A N) = sum totient {0<..N} + sum totient {0<..N} - card {(1, 1)}\n\ngoal (1 subgoal):\n 1. card (A N) = 2 * sum totient {0<..N} - 1", "by simp"], ["proof (state)\nthis:\n  card (A N) = 2 * sum totient {0<..N} - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?N \\<Longrightarrow> card (A ?N) = 2 * sum totient {0<..?N} - 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "have **: \"(\\<Sum>m\\<in>{0<..N}. totient m) \\<ge> 1\" if \"N \\<ge> 1\" for N"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> sum totient {0<..N}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> sum totient {0<..N}", "have \"1 \\<le> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> N", "by fact"], ["proof (state)\nthis:\n  1 \\<le> N\n\ngoal (1 subgoal):\n 1. 1 \\<le> sum totient {0<..N}", "also"], ["proof (state)\nthis:\n  1 \\<le> N\n\ngoal (1 subgoal):\n 1. 1 \\<le> sum totient {0<..N}", "have \"N = (\\<Sum>m\\<in>{0<..N}. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = (\\<Sum>m\\<in>{0<..N}. 1)", "by simp"], ["proof (state)\nthis:\n  N = (\\<Sum>m\\<in>{0<..N}. 1)\n\ngoal (1 subgoal):\n 1. 1 \\<le> sum totient {0<..N}", "also"], ["proof (state)\nthis:\n  N = (\\<Sum>m\\<in>{0<..N}. 1)\n\ngoal (1 subgoal):\n 1. 1 \\<le> sum totient {0<..N}", "have \"(\\<Sum>m\\<in>{0<..N}. 1) \\<le> (\\<Sum>m\\<in>{0<..N}. totient m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{0<..N}. 1) \\<le> sum totient {0<..N}", "by (intro sum_mono) (simp_all add: Suc_le_eq)"], ["proof (state)\nthis:\n  (\\<Sum>m\\<in>{0<..N}. 1) \\<le> sum totient {0<..N}\n\ngoal (1 subgoal):\n 1. 1 \\<le> sum totient {0<..N}", "finally"], ["proof (chain)\npicking this:\n  1 \\<le> sum totient {0<..N}", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> sum totient {0<..N}\n\ngoal (1 subgoal):\n 1. 1 \\<le> sum totient {0<..N}", "."], ["proof (state)\nthis:\n  1 \\<le> sum totient {0<..N}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<le> ?N \\<Longrightarrow> 1 \\<le> sum totient {0<..?N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "have \"(\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2) \\<in>\n          \\<Theta>(\\<lambda>N. 2 * (sum_upto (\\<lambda>m. real (totient m)) (real N) - (3 / pi\\<^sup>2 * (real N)\\<^sup>2)) - 1)\"\n    (is \"_ \\<in> \\<Theta>(?f)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> \\<Theta>(\\<lambda>N.\n                      2 *\n                      (sum_upto (\\<lambda>m. real (totient m)) (real N) -\n                       3 / pi\\<^sup>2 * (real N)\\<^sup>2) -\n                      1)", "using * **"], ["proof (prove)\nusing this:\n  0 < ?N \\<Longrightarrow> card (A ?N) = 2 * sum totient {0<..?N} - 1\n  1 \\<le> ?N \\<Longrightarrow> 1 \\<le> sum totient {0<..?N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> \\<Theta>(\\<lambda>N.\n                      2 *\n                      (sum_upto (\\<lambda>m. real (totient m)) (real N) -\n                       3 / pi\\<^sup>2 * (real N)\\<^sup>2) -\n                      1)", "by (intro bigthetaI_cong eventually_mono [OF eventually_gt_at_top[of \"0::nat\"]]) \n       (auto simp: of_nat_diff sum_upto_altdef)"], ["proof (state)\nthis:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> \\<Theta>(\\<lambda>N.\n                    2 *\n                    (sum_upto (\\<lambda>m. real (totient m)) (real N) -\n                     3 / pi\\<^sup>2 * (real N)\\<^sup>2) -\n                    1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "also"], ["proof (state)\nthis:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> \\<Theta>(\\<lambda>N.\n                    2 *\n                    (sum_upto (\\<lambda>m. real (totient m)) (real N) -\n                     3 / pi\\<^sup>2 * (real N)\\<^sup>2) -\n                    1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "have \"?f \\<in> O(\\<lambda>N. real N * ln (real N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        2 *\n        (sum_upto (\\<lambda>m. real (totient m)) (real N) -\n         3 / pi\\<^sup>2 * (real N)\\<^sup>2) -\n        1)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "proof (rule landau_o.big.compose[OF _ filterlim_real_sequentially], rule sum_in_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        2 *\n        (sum_upto (\\<lambda>m. real (totient m)) x -\n         3 / pi\\<^sup>2 * x\\<^sup>2))\n    \\<in> O(\\<lambda>a. a * ln a)\n 2. (\\<lambda>x. 1) \\<in> O(\\<lambda>a. a * ln a)", "show \" (\\<lambda>x. 2 * (sum_upto (\\<lambda>m. real (totient m)) x - 3 / pi\\<^sup>2 * x\\<^sup>2)) \\<in> O(\\<lambda>x. x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        2 *\n        (sum_upto (\\<lambda>m. real (totient m)) x -\n         3 / pi\\<^sup>2 * x\\<^sup>2))\n    \\<in> O(\\<lambda>x. x * ln x)", "by (subst landau_o.big.cmult_in_iff, simp, rule summatory_totient_asymptotics)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      2 *\n      (sum_upto (\\<lambda>m. real (totient m)) x -\n       3 / pi\\<^sup>2 * x\\<^sup>2))\n  \\<in> O(\\<lambda>x. x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1) \\<in> O(\\<lambda>a. a * ln a)", "qed simp_all"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      2 *\n      (sum_upto (\\<lambda>m. real (totient m)) (real N) -\n       3 / pi\\<^sup>2 * (real N)\\<^sup>2) -\n      1)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "."], ["proof (state)\nthis:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem coprime_pairs_asymptotics':\n  \"(\\<lambda>N. real (card (A N))) =o (\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2) +o O(\\<lambda>N. real N * ln (real N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)))\n    \\<in> (\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2) +o\n          O(\\<lambda>N. real N * ln (real N))", "using coprime_pairs_asymptotics"], ["proof (prove)\nusing this:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)))\n    \\<in> (\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2) +o\n          O(\\<lambda>N. real N * ln (real N))", "by (subst set_minus_plus [symmetric]) (simp_all add: fun_diff_def)"], ["", "theorem coprime_pairs_asymptotics'':\n  \"(\\<lambda>N. real (card (A N))) \\<sim>[at_top] (\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (A N))) \\<sim>[sequentially] (\\<lambda>N.\n      6 / pi\\<^sup>2 * (real N)\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (A N))) \\<sim>[sequentially] (\\<lambda>N.\n      6 / pi\\<^sup>2 * (real N)\\<^sup>2)", "have \"(\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N) ^ 2) \\<in> O(\\<lambda>N. real N * ln (real N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "by (rule coprime_pairs_asymptotics)"], ["proof (state)\nthis:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (A N))) \\<sim>[sequentially] (\\<lambda>N.\n      6 / pi\\<^sup>2 * (real N)\\<^sup>2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (A N))) \\<sim>[sequentially] (\\<lambda>N.\n      6 / pi\\<^sup>2 * (real N)\\<^sup>2)", "have \"(\\<lambda>N. real N * ln (real N)) \\<in> o(\\<lambda>N. 6 / pi ^ 2 * real N ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real N * ln (real N))\n    \\<in> o(\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2)", "by (rule landau_o.small.compose[OF _ filterlim_real_sequentially]) simp"], ["proof (state)\nthis:\n  (\\<lambda>N. real N * ln (real N))\n  \\<in> o(\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (A N))) \\<sim>[sequentially] (\\<lambda>N.\n      6 / pi\\<^sup>2 * (real N)\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> o(\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>N. real (card (A N)) - 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> o(\\<lambda>N. 6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (A N))) \\<sim>[sequentially] (\\<lambda>N.\n      6 / pi\\<^sup>2 * (real N)\\<^sup>2)", "by (simp add: asymp_equiv_altdef)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      real\n       (card\n         (A N))) \\<sim>[sequentially] (\\<lambda>N.\n    6 / pi\\<^sup>2 * (real N)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem coprime_probability_tendsto:\n  \"(\\<lambda>N. card (A N) / card ({1..N} \\<times> {1..N})) \\<longlonglongrightarrow> 6 / pi\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "have \"(\\<lambda>N. 6 / pi ^ 2) \\<sim>[at_top] (\\<lambda>N. 6 / pi ^ 2 * real N ^ 2 / real N ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        6 /\n        pi\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n       6 / pi\\<^sup>2 * (real N)\\<^sup>2 / (real N)\\<^sup>2)", "using eventually_gt_at_top[of \"0::nat\"]"], ["proof (prove)\nusing this:\n  eventually ((<) 0) sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        6 /\n        pi\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n       6 / pi\\<^sup>2 * (real N)\\<^sup>2 / (real N)\\<^sup>2)", "by (intro asymp_equiv_refl_ev) (auto elim!: eventually_mono)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      6 /\n      pi\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n     6 / pi\\<^sup>2 * (real N)\\<^sup>2 / (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "also"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      6 /\n      pi\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n     6 / pi\\<^sup>2 * (real N)\\<^sup>2 / (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>N. real (card (A N)) / real N ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        6 / pi\\<^sup>2 * (real N)\\<^sup>2 /\n        (real\n          N)\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n         real (card (A N)) / (real N)\\<^sup>2)", "by (intro asymp_equiv_intros asymp_equiv_symI[OF coprime_pairs_asymptotics''])"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      6 / pi\\<^sup>2 * (real N)\\<^sup>2 /\n      (real\n        N)\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n       real (card (A N)) / (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "also"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      6 / pi\\<^sup>2 * (real N)\\<^sup>2 /\n      (real\n        N)\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n       real (card (A N)) / (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (A N)) /\n        (real\n          N)\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n         real (card (A N)) / real (card ({1..N} \\<times> {1..N})))", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      real (card (A N)) /\n      (real\n        N)\\<^sup>2) \\<sim>[sequentially] (\\<lambda>N.\n       real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[sequentially] d \\<Longrightarrow>\n              c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>N.\n                        6 /\n                        pi\\<^sup>2) \\<sim>[sequentially] (\\<lambda>a.\n                       real (card (A a)) /\n                       real (card ({1..a} \\<times> {1..a})))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>_. 6 / pi ^ 2)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[sequentially] d \\<Longrightarrow>\n              c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>N.\n                        6 /\n                        pi\\<^sup>2) \\<sim>[sequentially] (\\<lambda>a.\n                       real (card (A a)) /\n                       real (card ({1..a} \\<times> {1..a})))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (A N)) /\n        real\n         (card\n           ({1..N} \\<times>\n            {1..N}))) \\<sim>[sequentially] (\\<lambda>_. 6 / pi\\<^sup>2)", "by (simp add: asymp_equiv_sym)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      real (card (A N)) /\n      real\n       (card\n         ({1..N} \\<times>\n          {1..N}))) \\<sim>[sequentially] (\\<lambda>_. 6 / pi\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      real (card (A N)) /\n      real\n       (card\n         ({1..N} \\<times>\n          {1..N}))) \\<sim>[sequentially] (\\<lambda>_. 6 / pi\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n    \\<longlonglongrightarrow> 6 / pi\\<^sup>2", "by (rule asymp_equivD_const)"], ["proof (state)\nthis:\n  (\\<lambda>N. real (card (A N)) / real (card ({1..N} \\<times> {1..N})))\n  \\<longlonglongrightarrow> 6 / pi\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>The asymptotics of the number of Farey fractions\\<close>"], ["", "definition farey_fractions :: \"nat \\<Rightarrow> rat set\" where\n  \"farey_fractions N = {q :: rat \\<in> {0<..1}. snd (quotient_of q) \\<le> int N}  \""], ["", "lemma Fract_eq_coprime: \n  assumes \"Rat.Fract a b = Rat.Fract c d\" \"b > 0\" \"d > 0\" \"coprime a b\" \"coprime c d\"\n  shows   \"a = c\" \"b = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = c &&& b = d", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. a = c\n 2. b = d", "from assms"], ["proof (chain)\npicking this:\n  Rat.Fract a b = Rat.Fract c d\n  0 < b\n  0 < d\n  coprime a b\n  coprime c d", "have \"a * d = c * b\""], ["proof (prove)\nusing this:\n  Rat.Fract a b = Rat.Fract c d\n  0 < b\n  0 < d\n  coprime a b\n  coprime c d\n\ngoal (1 subgoal):\n 1. a * d = c * b", "by (auto simp: eq_rat)"], ["proof (state)\nthis:\n  a * d = c * b\n\ngoal (2 subgoals):\n 1. a = c\n 2. b = d", "hence \"abs (a * d) = abs (c * b)\""], ["proof (prove)\nusing this:\n  a * d = c * b\n\ngoal (1 subgoal):\n 1. \\<bar>a * d\\<bar> = \\<bar>c * b\\<bar>", "by (simp only:)"], ["proof (state)\nthis:\n  \\<bar>a * d\\<bar> = \\<bar>c * b\\<bar>\n\ngoal (2 subgoals):\n 1. a = c\n 2. b = d", "hence \"abs a * abs d = abs c * abs b\""], ["proof (prove)\nusing this:\n  \\<bar>a * d\\<bar> = \\<bar>c * b\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> * \\<bar>d\\<bar> = \\<bar>c\\<bar> * \\<bar>b\\<bar>", "by (simp only: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>a\\<bar> * \\<bar>d\\<bar> = \\<bar>c\\<bar> * \\<bar>b\\<bar>\n\ngoal (2 subgoals):\n 1. a = c\n 2. b = d", "also"], ["proof (state)\nthis:\n  \\<bar>a\\<bar> * \\<bar>d\\<bar> = \\<bar>c\\<bar> * \\<bar>b\\<bar>\n\ngoal (2 subgoals):\n 1. a = c\n 2. b = d", "have \"?this \\<longleftrightarrow> abs a = abs c \\<and> d = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<bar>a\\<bar> * \\<bar>d\\<bar> = \\<bar>c\\<bar> * \\<bar>b\\<bar>) =\n    (\\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> d = b)", "using assms"], ["proof (prove)\nusing this:\n  Rat.Fract a b = Rat.Fract c d\n  0 < b\n  0 < d\n  coprime a b\n  coprime c d\n\ngoal (1 subgoal):\n 1. (\\<bar>a\\<bar> * \\<bar>d\\<bar> = \\<bar>c\\<bar> * \\<bar>b\\<bar>) =\n    (\\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> d = b)", "by (subst coprime_crossproduct_int) simp_all"], ["proof (state)\nthis:\n  (\\<bar>a\\<bar> * \\<bar>d\\<bar> = \\<bar>c\\<bar> * \\<bar>b\\<bar>) =\n  (\\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> d = b)\n\ngoal (2 subgoals):\n 1. a = c\n 2. b = d", "finally"], ["proof (chain)\npicking this:\n  \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> d = b", "show \"b = d\""], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> d = b\n\ngoal (1 subgoal):\n 1. b = d", "by simp"], ["proof (state)\nthis:\n  b = d\n\ngoal (1 subgoal):\n 1. a = c", "with \\<open>a * d = c * b\\<close> and \\<open>b > 0\\<close>"], ["proof (chain)\npicking this:\n  a * d = c * b\n  0 < b\n  b = d", "show \"a = c\""], ["proof (prove)\nusing this:\n  a * d = c * b\n  0 < b\n  b = d\n\ngoal (1 subgoal):\n 1. a = c", "by simp"], ["proof (state)\nthis:\n  a = c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quotient_of_split: \n  \"P (quotient_of q) = (\\<forall>a b. b > 0 \\<longrightarrow> coprime a b \\<longrightarrow> q = Rat.Fract a b \\<longrightarrow> P (a, b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (quotient_of q) =\n    (\\<forall>a b.\n        0 < b \\<longrightarrow>\n        coprime a b \\<longrightarrow>\n        q = Rat.Fract a b \\<longrightarrow> P (a, b))", "by (cases q) (auto simp: quotient_of_Fract dest: Fract_eq_coprime)"], ["", "lemma quotient_of_split_asm: \n  \"P (Rat.quotient_of q) = (\\<not>(\\<exists>a b. b > 0 \\<and> coprime a b \\<and> q = Rat.Fract a b \\<and> \\<not>P (a, b)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (quotient_of q) =\n    (\\<nexists>a b.\n        0 < b \\<and>\n        coprime a b \\<and> q = Rat.Fract a b \\<and> \\<not> P (a, b))", "using quotient_of_split[of P q]"], ["proof (prove)\nusing this:\n  P (quotient_of q) =\n  (\\<forall>a b.\n      0 < b \\<longrightarrow>\n      coprime a b \\<longrightarrow>\n      q = Rat.Fract a b \\<longrightarrow> P (a, b))\n\ngoal (1 subgoal):\n 1. P (quotient_of q) =\n    (\\<nexists>a b.\n        0 < b \\<and>\n        coprime a b \\<and> q = Rat.Fract a b \\<and> \\<not> P (a, b))", "by blast"], ["", "lemma farey_fractions_bij:\n  \"bij_betw (\\<lambda>(a,b). Rat.Fract (int a) (int b)) \n     {(a,b)|a b. 0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} (farey_fractions N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>(a, b). Rat.Fract (int a) (int b))\n     {(a, b) |a b.\n      0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n     (farey_fractions N)", "proof (rule bij_betwI[of _ _ _ \"\\<lambda>q. case quotient_of q of (a, b) \\<Rightarrow> (nat a, nat b)\"], goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<lambda>(a, b). Rat.Fract (int a) (int b))\n    \\<in> {(a, b) |a b.\n           0 < a \\<and>\n           a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} \\<rightarrow>\n          farey_fractions N\n 2. (\\<lambda>q. case quotient_of q of (a, b) \\<Rightarrow> (nat a, nat b))\n    \\<in> farey_fractions N \\<rightarrow>\n          {(a, b) |a b.\n           0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n 3. \\<And>x.\n       x \\<in> {(a, b) |a b.\n                0 < a \\<and>\n                a \\<le> b \\<and>\n                b \\<le> N \\<and> coprime a b} \\<Longrightarrow>\n       (case quotient_of\n              (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n        (a, b) \\<Rightarrow> (nat a, nat b)) =\n       x\n 4. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. (\\<lambda>(a, b). Rat.Fract (int a) (int b))\n    \\<in> {(a, b) |a b.\n           0 < a \\<and>\n           a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} \\<rightarrow>\n          farey_fractions N\n 2. (\\<lambda>q. case quotient_of q of (a, b) \\<Rightarrow> (nat a, nat b))\n    \\<in> farey_fractions N \\<rightarrow>\n          {(a, b) |a b.\n           0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n 3. \\<And>x.\n       x \\<in> {(a, b) |a b.\n                0 < a \\<and>\n                a \\<le> b \\<and>\n                b \\<le> N \\<and> coprime a b} \\<Longrightarrow>\n       (case quotient_of\n              (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n        (a, b) \\<Rightarrow> (nat a, nat b)) =\n       x\n 4. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(a, b). Rat.Fract (int a) (int b))\n    \\<in> {(a, b) |a b.\n           0 < a \\<and>\n           a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} \\<rightarrow>\n          farey_fractions N", "by (auto simp: farey_fractions_def Rat.zero_less_Fract_iff Rat.Fract_le_one_iff \n                   Rat.quotient_of_Fract Rat.normalize_def gcd_int_def Let_def)"], ["proof (state)\nthis:\n  (\\<lambda>(a, b). Rat.Fract (int a) (int b))\n  \\<in> {(a, b) |a b.\n         0 < a \\<and>\n         a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} \\<rightarrow>\n        farey_fractions N\n\ngoal (3 subgoals):\n 1. (\\<lambda>q. case quotient_of q of (a, b) \\<Rightarrow> (nat a, nat b))\n    \\<in> farey_fractions N \\<rightarrow>\n          {(a, b) |a b.\n           0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n 2. \\<And>x.\n       x \\<in> {(a, b) |a b.\n                0 < a \\<and>\n                a \\<le> b \\<and>\n                b \\<le> N \\<and> coprime a b} \\<Longrightarrow>\n       (case quotient_of\n              (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n        (a, b) \\<Rightarrow> (nat a, nat b)) =\n       x\n 3. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>q. case quotient_of q of (a, b) \\<Rightarrow> (nat a, nat b))\n    \\<in> farey_fractions N \\<rightarrow>\n          {(a, b) |a b.\n           0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n 2. \\<And>x.\n       x \\<in> {(a, b) |a b.\n                0 < a \\<and>\n                a \\<le> b \\<and>\n                b \\<le> N \\<and> coprime a b} \\<Longrightarrow>\n       (case quotient_of\n              (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n        (a, b) \\<Rightarrow> (nat a, nat b)) =\n       x\n 3. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. (\\<lambda>q. case quotient_of q of (a, b) \\<Rightarrow> (nat a, nat b))\n    \\<in> farey_fractions N \\<rightarrow>\n          {(a, b) |a b.\n           0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n 2. \\<And>x.\n       x \\<in> {(a, b) |a b.\n                0 < a \\<and>\n                a \\<le> b \\<and>\n                b \\<le> N \\<and> coprime a b} \\<Longrightarrow>\n       (case quotient_of\n              (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n        (a, b) \\<Rightarrow> (nat a, nat b)) =\n       x\n 3. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>q. case quotient_of q of (a, b) \\<Rightarrow> (nat a, nat b))\n    \\<in> farey_fractions N \\<rightarrow>\n          {(a, b) |a b.\n           0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}", "by (auto simp add: farey_fractions_def Rat.Fract_le_one_iff Rat.zero_less_Fract_iff split: prod.splits quotient_of_split_asm)\n      (simp add: coprime_int_iff [symmetric])"], ["proof (state)\nthis:\n  (\\<lambda>q. case quotient_of q of (a, b) \\<Rightarrow> (nat a, nat b))\n  \\<in> farey_fractions N \\<rightarrow>\n        {(a, b) |a b.\n         0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {(a, b) |a b.\n                0 < a \\<and>\n                a \\<le> b \\<and>\n                b \\<le> N \\<and> coprime a b} \\<Longrightarrow>\n       (case quotient_of\n              (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n        (a, b) \\<Rightarrow> (nat a, nat b)) =\n       x\n 2. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {(a, b) |a b.\n                0 < a \\<and>\n                a \\<le> b \\<and>\n                b \\<le> N \\<and> coprime a b} \\<Longrightarrow>\n       (case quotient_of\n              (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n        (a, b) \\<Rightarrow> (nat a, nat b)) =\n       x\n 2. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "case (3 x)"], ["proof (state)\nthis:\n  x \\<in> {(a, b) |a b.\n           0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {(a, b) |a b.\n                0 < a \\<and>\n                a \\<le> b \\<and>\n                b \\<le> N \\<and> coprime a b} \\<Longrightarrow>\n       (case quotient_of\n              (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n        (a, b) \\<Rightarrow> (nat a, nat b)) =\n       x\n 2. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> {(a, b) |a b.\n           0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n\ngoal (1 subgoal):\n 1. (case quotient_of\n           (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n     (a, b) \\<Rightarrow> (nat a, nat b)) =\n    x", "by (auto simp: Rat.quotient_of_Fract Rat.normalize_def Let_def gcd_int_def)"], ["proof (state)\nthis:\n  (case quotient_of\n         (case x of (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) of\n   (a, b) \\<Rightarrow> (nat a, nat b)) =\n  x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "case (4 x)"], ["proof (state)\nthis:\n  x \\<in> farey_fractions N\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> farey_fractions N \\<Longrightarrow>\n       (case case quotient_of y of (a, b) \\<Rightarrow> (nat a, nat b) of\n        (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n       y", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> farey_fractions N\n\ngoal (1 subgoal):\n 1. (case case quotient_of x of (a, b) \\<Rightarrow> (nat a, nat b) of\n     (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n    x", "unfolding farey_fractions_def"], ["proof (prove)\nusing this:\n  x \\<in> {q \\<in> {0<..1}. snd (quotient_of q) \\<le> int N}\n\ngoal (1 subgoal):\n 1. (case case quotient_of x of (a, b) \\<Rightarrow> (nat a, nat b) of\n     (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n    x", "by (split quotient_of_split) (auto simp: Rat.zero_less_Fract_iff)"], ["proof (state)\nthis:\n  (case case quotient_of x of (a, b) \\<Rightarrow> (nat a, nat b) of\n   (a, b) \\<Rightarrow> Rat.Fract (int a) (int b)) =\n  x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_farey_fractions: \"card (farey_fractions N) = sum totient {0<..N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "have \"card (farey_fractions N) = card {(a,b)|a b. 0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (farey_fractions N) =\n    card\n     {(a, b) |a b.\n      0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}", "using farey_fractions_bij"], ["proof (prove)\nusing this:\n  bij_betw (\\<lambda>(a, b). Rat.Fract (int a) (int b))\n   {(a, b) |a b.\n    0 < a \\<and> a \\<le> b \\<and> b \\<le> ?N \\<and> coprime a b}\n   (farey_fractions ?N)\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) =\n    card\n     {(a, b) |a b.\n      0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}", "by (rule bij_betw_same_card [symmetric])"], ["proof (state)\nthis:\n  card (farey_fractions N) =\n  card\n   {(a, b) |a b. 0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "also"], ["proof (state)\nthis:\n  card (farey_fractions N) =\n  card\n   {(a, b) |a b. 0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b}\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "have \"{(a,b)|a b. 0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} =\n               (\\<Union>b\\<in>{0<..N}. (\\<lambda>a. (a, b)) ` totatives b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(a, b) |a b.\n     0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} =\n    (\\<Union>b\\<in>{0<..N}. (\\<lambda>a. (a, b)) ` totatives b)", "by (auto simp: totatives_def image_iff)"], ["proof (state)\nthis:\n  {(a, b) |a b.\n   0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} =\n  (\\<Union>b\\<in>{0<..N}. (\\<lambda>a. (a, b)) ` totatives b)\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "also"], ["proof (state)\nthis:\n  {(a, b) |a b.\n   0 < a \\<and> a \\<le> b \\<and> b \\<le> N \\<and> coprime a b} =\n  (\\<Union>b\\<in>{0<..N}. (\\<lambda>a. (a, b)) ` totatives b)\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "have \"card \\<dots> = (\\<Sum>b\\<in>{0<..N}. card ((\\<lambda>a. (a, b)) ` totatives b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union>b\\<in>{0<..N}. (\\<lambda>a. (a, b)) ` totatives b) =\n    (\\<Sum>b\\<in>{0<..N}. card ((\\<lambda>a. (a, b)) ` totatives b))", "by (intro card_UN_disjoint) auto"], ["proof (state)\nthis:\n  card (\\<Union>b\\<in>{0<..N}. (\\<lambda>a. (a, b)) ` totatives b) =\n  (\\<Sum>b\\<in>{0<..N}. card ((\\<lambda>a. (a, b)) ` totatives b))\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "also"], ["proof (state)\nthis:\n  card (\\<Union>b\\<in>{0<..N}. (\\<lambda>a. (a, b)) ` totatives b) =\n  (\\<Sum>b\\<in>{0<..N}. card ((\\<lambda>a. (a, b)) ` totatives b))\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "have \"\\<dots> = (\\<Sum>b\\<in>{0<..N}. totient b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>{0<..N}. card ((\\<lambda>a. (a, b)) ` totatives b)) =\n    sum totient {0<..N}", "unfolding totient_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>{0<..N}. card ((\\<lambda>a. (a, b)) ` totatives b)) =\n    (\\<Sum>b\\<in>{0<..N}. card (totatives b))", "by (intro sum.cong refl card_image) (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>{0<..N}. card ((\\<lambda>a. (a, b)) ` totatives b)) =\n  sum totient {0<..N}\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "finally"], ["proof (chain)\npicking this:\n  card (farey_fractions N) = sum totient {0<..N}", "show ?thesis"], ["proof (prove)\nusing this:\n  card (farey_fractions N) = sum totient {0<..N}\n\ngoal (1 subgoal):\n 1. card (farey_fractions N) = sum totient {0<..N}", "."], ["proof (state)\nthis:\n  card (farey_fractions N) = sum totient {0<..N}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_farey_fractions_asymptotics:\n  \"(\\<lambda>N. real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2) \\<in> O(\\<lambda>N. real N * ln (real N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "have \"(\\<lambda>N. sum_upto (\\<lambda>n. real (totient n)) (real N) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2) \n            \\<in> O(\\<lambda>N. real N * ln (real N))\" (is \"?f \\<in> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        sum_upto (\\<lambda>n. real (totient n)) (real N) -\n        3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "using summatory_totient_asymptotics filterlim_real_sequentially"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      sum_upto (\\<lambda>n. real (totient n)) x -\n      3 / pi\\<^sup>2 * x\\<^sup>2)\n  \\<in> O(\\<lambda>x. x * ln x)\n  filterlim real at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        sum_upto (\\<lambda>n. real (totient n)) (real N) -\n        3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "by (rule landau_o.big.compose)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      sum_upto (\\<lambda>n. real (totient n)) (real N) -\n      3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "also"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      sum_upto (\\<lambda>n. real (totient n)) (real N) -\n      3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "have \"?f = (\\<lambda>N. real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        sum_upto (\\<lambda>n. real (totient n)) (real N) -\n        3 / pi\\<^sup>2 * (real N)\\<^sup>2) =\n    (\\<lambda>N.\n        real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "by (intro ext) (simp add: sum_upto_altdef card_farey_fractions)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      sum_upto (\\<lambda>n. real (totient n)) (real N) -\n      3 / pi\\<^sup>2 * (real N)\\<^sup>2) =\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "."], ["proof (state)\nthis:\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem card_farey_fractions_asymptotics':\n  \"(\\<lambda>N. card (farey_fractions N)) =o (\\<lambda>N. 3 / pi\\<^sup>2 * N^2) +o O(\\<lambda>N. N * ln N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (card (farey_fractions x)))\n    \\<in> (\\<lambda>x. 3 / pi\\<^sup>2 * (real x)\\<^sup>2) +o\n          O(\\<lambda>x. real x * ln (real x))", "using card_farey_fractions_asymptotics"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (card (farey_fractions x)))\n    \\<in> (\\<lambda>x. 3 / pi\\<^sup>2 * (real x)\\<^sup>2) +o\n          O(\\<lambda>x. real x * ln (real x))", "by (subst set_minus_plus [symmetric]) (simp_all add: fun_diff_def)"], ["", "theorem card_farey_fractions_asymptotics'':\n  \"(\\<lambda>N. real (card (farey_fractions N))) \\<sim>[at_top] (\\<lambda>N. 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (farey_fractions\n             N))) \\<sim>[sequentially] (\\<lambda>N.\n     3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (farey_fractions\n             N))) \\<sim>[sequentially] (\\<lambda>N.\n     3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "have \"(\\<lambda>N. real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N) ^ 2) \\<in> O(\\<lambda>N. real N * ln (real N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n    \\<in> O(\\<lambda>N. real N * ln (real N))", "by (rule card_farey_fractions_asymptotics)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (farey_fractions\n             N))) \\<sim>[sequentially] (\\<lambda>N.\n     3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> O(\\<lambda>N. real N * ln (real N))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (farey_fractions\n             N))) \\<sim>[sequentially] (\\<lambda>N.\n     3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "have \"(\\<lambda>N. real N * ln (real N)) \\<in> o(\\<lambda>N. 3 / pi ^ 2 * real N ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N. real N * ln (real N))\n    \\<in> o(\\<lambda>N. 3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "by (rule landau_o.small.compose[OF _ filterlim_real_sequentially]) simp"], ["proof (state)\nthis:\n  (\\<lambda>N. real N * ln (real N))\n  \\<in> o(\\<lambda>N. 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (farey_fractions\n             N))) \\<sim>[sequentially] (\\<lambda>N.\n     3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> o(\\<lambda>N. 3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      real (card (farey_fractions N)) - 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n  \\<in> o(\\<lambda>N. 3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        real\n         (card\n           (farey_fractions\n             N))) \\<sim>[sequentially] (\\<lambda>N.\n     3 / pi\\<^sup>2 * (real N)\\<^sup>2)", "by (simp add: asymp_equiv_altdef)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      real\n       (card\n         (farey_fractions\n           N))) \\<sim>[sequentially] (\\<lambda>N.\n   3 / pi\\<^sup>2 * (real N)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}