{"file_name": "/home/qj213/afp-2021-10-22/thys/Concurrent_Revisions/Occurrences.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Concurrent_Revisions", "problem_names": ["lemma RID\\<^sub>SI [intro]: \"\\<sigma> l = Some v \\<Longrightarrow> r \\<in> RID\\<^sub>V v \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<sigma>\"", "lemma RID\\<^sub>SE [elim]: \"r \\<in> RID\\<^sub>S \\<sigma> \\<Longrightarrow> (\\<And>l v. \\<sigma> l = Some v \\<Longrightarrow> r \\<in> RID\\<^sub>V v \\<Longrightarrow> P) \\<Longrightarrow> P\"", "lemma RID\\<^sub>LI [intro, consumes 1]:\n  assumes \"s = (\\<sigma>, \\<tau>, e)\"\n  shows\n    \"r \\<in> RID\\<^sub>S \\<sigma> \\<Longrightarrow> r \\<in> RID\\<^sub>L s\"\n    \"r \\<in> RID\\<^sub>S \\<tau> \\<Longrightarrow> r \\<in> RID\\<^sub>L s\"\n    \"r \\<in> RID\\<^sub>E e \\<Longrightarrow> r \\<in> RID\\<^sub>L s\"", "lemma RID\\<^sub>LE [elim]:\n  \"\\<lbrakk> r \\<in> RID\\<^sub>L s; (\\<And>\\<sigma> \\<tau> e. s = (\\<sigma>, \\<tau>, e) \\<Longrightarrow> (r \\<in> RID\\<^sub>S \\<sigma> \\<Longrightarrow> P) \\<Longrightarrow> (r \\<in> RID\\<^sub>S \\<tau> \\<Longrightarrow> P) \\<Longrightarrow> (r \\<in> RID\\<^sub>E e \\<Longrightarrow> P) \\<Longrightarrow> P) \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma RID\\<^sub>GI [intro]:\n  \"s r = Some v \\<Longrightarrow> r \\<in> RID\\<^sub>G s\"\n  \"s r' = Some ls \\<Longrightarrow> r \\<in> RID\\<^sub>L ls \\<Longrightarrow> r \\<in> RID\\<^sub>G s\"", "lemma RID\\<^sub>GE [elim]:\n  assumes\n    \"r \\<in> RID\\<^sub>G s\"\n    \"r \\<in> dom s \\<Longrightarrow> P\"\n    \"\\<And>r' ls. s r' = Some ls \\<Longrightarrow> r \\<in> RID\\<^sub>L ls \\<Longrightarrow> P\"\n  shows P", "lemma LID\\<^sub>SI [intro]:\n  \"\\<sigma> l = Some v \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>\"\n  \"\\<sigma> l' = Some v \\<Longrightarrow> l \\<in> LID\\<^sub>V v \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>\"", "lemma LID\\<^sub>SE [elim]:\n  assumes \n    \"l \\<in> LID\\<^sub>S \\<sigma>\"\n    \"l \\<in> dom \\<sigma> \\<Longrightarrow> P\"\n    \"\\<And>l' v. \\<sigma> l' = Some v \\<Longrightarrow> l \\<in> LID\\<^sub>V v \\<Longrightarrow> P\"\n  shows P", "lemma LID\\<^sub>LI [intro]:\n  assumes \"s = (\\<sigma>, \\<tau>, e)\"\n  shows\n    \"r \\<in> LID\\<^sub>S \\<sigma> \\<Longrightarrow> r \\<in> LID\\<^sub>L s\" \n    \"r \\<in> LID\\<^sub>S \\<tau> \\<Longrightarrow> r \\<in> LID\\<^sub>L s\" \n    \"r \\<in> LID\\<^sub>E e \\<Longrightarrow> r \\<in> LID\\<^sub>L s\"", "lemma LID\\<^sub>LE [elim]:\n  \"\\<lbrakk> l \\<in> LID\\<^sub>L s; (\\<And>\\<sigma> \\<tau> e. s = (\\<sigma>, \\<tau>, e) \\<Longrightarrow> (l \\<in> LID\\<^sub>S \\<sigma> \\<Longrightarrow> P) \\<Longrightarrow> (l \\<in> LID\\<^sub>S \\<tau> \\<Longrightarrow> P) \\<Longrightarrow> (l \\<in> LID\\<^sub>E e \\<Longrightarrow> P) \\<Longrightarrow> P) \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma LID\\<^sub>GI [intro]: \"s r = Some ls \\<Longrightarrow> l \\<in> LID\\<^sub>L ls \\<Longrightarrow> l \\<in> LID\\<^sub>G s\"", "lemma LID\\<^sub>GE [elim]: \"l \\<in> LID\\<^sub>G s \\<Longrightarrow> (\\<And>r ls. s r = Some ls \\<Longrightarrow> l \\<in> LID\\<^sub>L ls \\<Longrightarrow> P) \\<Longrightarrow> P\"", "lemma ID_distr_completion [simp]: \n  \"RID\\<^sub>E (\\<E>[e]) = RID\\<^sub>C \\<E> \\<union> RID\\<^sub>E e\"\n  \"LID\\<^sub>E (\\<E>[e]) = LID\\<^sub>C \\<E> \\<union> LID\\<^sub>E e\"", "lemma ID_restricted_store_subset_store: \n  \"RID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> RID\\<^sub>S \\<sigma>\"\n  \"LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>\"", "lemma in_restricted_store_in_unrestricted_store [intro]: \n  \"r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<sigma>\"\n  \"l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow> l' \\<in> LID\\<^sub>S \\<sigma>\"", "lemma in_restricted_store_in_updated_store [intro]: \n  \"r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow> r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\" \n  \"l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow> l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\"", "lemma ID_distr_store [simp]:\n  \"RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) = RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\"\n  \"LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) = insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\"", "lemma ID_distr_local [simp]: \n  \"LID\\<^sub>L (\\<sigma>,\\<tau>,e) = LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau> \\<union> LID\\<^sub>E e\"\n  \"RID\\<^sub>L (\\<sigma>,\\<tau>,e) = RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau> \\<union> RID\\<^sub>E e\"", "lemma ID_restricted_global_subset_unrestricted:\n  \"LID\\<^sub>G (s(r := None)) \\<subseteq> LID\\<^sub>G s\"\n  \"RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s\"", "lemma in_restricted_global_in_unrestricted_global [intro]: \n  \"r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G s\"\n  \"l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow> l \\<in> LID\\<^sub>G s\"", "lemma in_restricted_global_in_updated_global [intro]: \n  \"r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\" \n  \"l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow> l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))\"", "lemma ID_distr_global [simp]:\n  \"RID\\<^sub>G (s(r \\<mapsto> ls)) = insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\"\n  \"LID\\<^sub>G (s(r \\<mapsto> ls)) = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\"", "lemma restrictions_inwards [simp]:\n  \"x \\<noteq> x' \\<Longrightarrow> f(x := Some y, x' := None) = (f(x':= None, x := Some y))\"", "lemma ID_combination_subset_union [intro]:\n  \"RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<subseteq> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>\"\n  \"LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<subseteq> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\"", "lemma in_combination_in_component [intro]: \n  \"r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow> r \\<notin> RID\\<^sub>S \\<sigma> \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<tau>\"\n  \"r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow> r \\<notin> RID\\<^sub>S \\<tau> \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<sigma>\"\n  \"l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow> l \\<notin> LID\\<^sub>S \\<sigma> \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<tau>\"\n  \"l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow> l \\<notin> LID\\<^sub>S \\<tau> \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>\"", "lemma in_mapped_in_component_of_combination [intro]:\n  assumes \n    maps_to_v: \"(\\<sigma>;;\\<tau>) l = Some v\" and\n    l'_in_v: \"l' \\<in> LID\\<^sub>V v\"\n  shows\n    \"l' \\<notin> LID\\<^sub>S \\<tau> \\<Longrightarrow> l' \\<in> LID\\<^sub>S \\<sigma>\"\n    \"l' \\<notin> LID\\<^sub>S \\<sigma> \\<Longrightarrow> l' \\<in> LID\\<^sub>S \\<tau>\"", "lemma elim_trivial_restriction [simp]: \"l \\<notin> LID\\<^sub>S \\<tau> \\<Longrightarrow> (\\<tau>(l := None)) = \\<tau>\"", "lemma ID_distr_global_conditional:\n  \"s r = Some ls \\<Longrightarrow> RID\\<^sub>G s = insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\"\n  \"s r = Some ls \\<Longrightarrow> LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\""], "translations": [["", "lemma RID\\<^sub>SI [intro]: \"\\<sigma> l = Some v \\<Longrightarrow> r \\<in> RID\\<^sub>V v \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<sigma> l = Some v; r \\<in> RID\\<^sub>V v\\<rbrakk>\n    \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<sigma>", "by (auto simp add: RID\\<^sub>S_def ran_def)"], ["", "lemma RID\\<^sub>SE [elim]: \"r \\<in> RID\\<^sub>S \\<sigma> \\<Longrightarrow> (\\<And>l v. \\<sigma> l = Some v \\<Longrightarrow> r \\<in> RID\\<^sub>V v \\<Longrightarrow> P) \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> RID\\<^sub>S \\<sigma>;\n     \\<And>l v.\n        \\<lbrakk>\\<sigma> l = Some v; r \\<in> RID\\<^sub>V v\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto simp add: RID\\<^sub>S_def ran_def)"], ["", "lemma RID\\<^sub>LI [intro, consumes 1]:\n  assumes \"s = (\\<sigma>, \\<tau>, e)\"\n  shows\n    \"r \\<in> RID\\<^sub>S \\<sigma> \\<Longrightarrow> r \\<in> RID\\<^sub>L s\"\n    \"r \\<in> RID\\<^sub>S \\<tau> \\<Longrightarrow> r \\<in> RID\\<^sub>L s\"\n    \"r \\<in> RID\\<^sub>E e \\<Longrightarrow> r \\<in> RID\\<^sub>L s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<in> RID\\<^sub>S \\<sigma> \\<Longrightarrow>\n     r \\<in> RID\\<^sub>L s) &&&\n    (r \\<in> RID\\<^sub>S \\<tau> \\<Longrightarrow> r \\<in> RID\\<^sub>L s) &&&\n    (r \\<in> RID\\<^sub>E e \\<Longrightarrow> r \\<in> RID\\<^sub>L s)", "by (auto simp add: RID\\<^sub>L_def assms)"], ["", "lemma RID\\<^sub>LE [elim]:\n  \"\\<lbrakk> r \\<in> RID\\<^sub>L s; (\\<And>\\<sigma> \\<tau> e. s = (\\<sigma>, \\<tau>, e) \\<Longrightarrow> (r \\<in> RID\\<^sub>S \\<sigma> \\<Longrightarrow> P) \\<Longrightarrow> (r \\<in> RID\\<^sub>S \\<tau> \\<Longrightarrow> P) \\<Longrightarrow> (r \\<in> RID\\<^sub>E e \\<Longrightarrow> P) \\<Longrightarrow> P) \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> RID\\<^sub>L s;\n     (\\<And>\\<sigma> \\<tau> e.\n         \\<lbrakk>s = (\\<sigma>, \\<tau>, e);\n          r \\<in> RID\\<^sub>S \\<sigma> \\<Longrightarrow> P;\n          r \\<in> RID\\<^sub>S \\<tau> \\<Longrightarrow> P;\n          r \\<in> RID\\<^sub>E e \\<Longrightarrow> P\\<rbrakk>\n         \\<Longrightarrow> P) \\<Longrightarrow>\n     P\\<rbrakk>\n    \\<Longrightarrow> P", "by (cases s) (auto simp add: RID\\<^sub>L_def)"], ["", "lemma RID\\<^sub>GI [intro]:\n  \"s r = Some v \\<Longrightarrow> r \\<in> RID\\<^sub>G s\"\n  \"s r' = Some ls \\<Longrightarrow> r \\<in> RID\\<^sub>L ls \\<Longrightarrow> r \\<in> RID\\<^sub>G s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s r = Some v \\<Longrightarrow> r \\<in> RID\\<^sub>G s) &&&\n    (\\<lbrakk>s r' = Some ls; r \\<in> RID\\<^sub>L ls\\<rbrakk>\n     \\<Longrightarrow> r \\<in> RID\\<^sub>G s)", "apply (simp add: RID\\<^sub>G_def domI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s r' = Some ls; r \\<in> RID\\<^sub>L ls\\<rbrakk>\n    \\<Longrightarrow> r \\<in> RID\\<^sub>G s", "by (metis (no_types, lifting) RID\\<^sub>G_def UN_I UnI2 ranI)"], ["", "lemma RID\\<^sub>GE [elim]:\n  assumes\n    \"r \\<in> RID\\<^sub>G s\"\n    \"r \\<in> dom s \\<Longrightarrow> P\"\n    \"\\<And>r' ls. s r' = Some ls \\<Longrightarrow> r \\<in> RID\\<^sub>L ls \\<Longrightarrow> P\"\n  shows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  r \\<in> RID\\<^sub>G s\n  r \\<in> dom s \\<Longrightarrow> P\n  \\<lbrakk>s ?r' = Some ?ls; r \\<in> RID\\<^sub>L ?ls\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by (auto simp add: RID\\<^sub>G_def ran_def)"], ["", "lemma LID\\<^sub>SI [intro]:\n  \"\\<sigma> l = Some v \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>\"\n  \"\\<sigma> l' = Some v \\<Longrightarrow> l \\<in> LID\\<^sub>V v \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma> l = Some v \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>) &&&\n    (\\<lbrakk>\\<sigma> l' = Some v; l \\<in> LID\\<^sub>V v\\<rbrakk>\n     \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>)", "by (auto simp add: LID\\<^sub>S_def ran_def)"], ["", "lemma LID\\<^sub>SE [elim]:\n  assumes \n    \"l \\<in> LID\\<^sub>S \\<sigma>\"\n    \"l \\<in> dom \\<sigma> \\<Longrightarrow> P\"\n    \"\\<And>l' v. \\<sigma> l' = Some v \\<Longrightarrow> l \\<in> LID\\<^sub>V v \\<Longrightarrow> P\"\n  shows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  l \\<in> LID\\<^sub>S \\<sigma>\n  l \\<in> dom \\<sigma> \\<Longrightarrow> P\n  \\<lbrakk>\\<sigma> ?l' = Some ?v; l \\<in> LID\\<^sub>V ?v\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by (auto simp add: LID\\<^sub>S_def ran_def)"], ["", "lemma LID\\<^sub>LI [intro]:\n  assumes \"s = (\\<sigma>, \\<tau>, e)\"\n  shows\n    \"r \\<in> LID\\<^sub>S \\<sigma> \\<Longrightarrow> r \\<in> LID\\<^sub>L s\" \n    \"r \\<in> LID\\<^sub>S \\<tau> \\<Longrightarrow> r \\<in> LID\\<^sub>L s\" \n    \"r \\<in> LID\\<^sub>E e \\<Longrightarrow> r \\<in> LID\\<^sub>L s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<in> LID\\<^sub>S \\<sigma> \\<Longrightarrow>\n     r \\<in> LID\\<^sub>L s) &&&\n    (r \\<in> LID\\<^sub>S \\<tau> \\<Longrightarrow> r \\<in> LID\\<^sub>L s) &&&\n    (r \\<in> LID\\<^sub>E e \\<Longrightarrow> r \\<in> LID\\<^sub>L s)", "by (auto simp add: LID\\<^sub>L_def assms)"], ["", "lemma LID\\<^sub>LE [elim]:\n  \"\\<lbrakk> l \\<in> LID\\<^sub>L s; (\\<And>\\<sigma> \\<tau> e. s = (\\<sigma>, \\<tau>, e) \\<Longrightarrow> (l \\<in> LID\\<^sub>S \\<sigma> \\<Longrightarrow> P) \\<Longrightarrow> (l \\<in> LID\\<^sub>S \\<tau> \\<Longrightarrow> P) \\<Longrightarrow> (l \\<in> LID\\<^sub>E e \\<Longrightarrow> P) \\<Longrightarrow> P) \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l \\<in> LID\\<^sub>L s;\n     (\\<And>\\<sigma> \\<tau> e.\n         \\<lbrakk>s = (\\<sigma>, \\<tau>, e);\n          l \\<in> LID\\<^sub>S \\<sigma> \\<Longrightarrow> P;\n          l \\<in> LID\\<^sub>S \\<tau> \\<Longrightarrow> P;\n          l \\<in> LID\\<^sub>E e \\<Longrightarrow> P\\<rbrakk>\n         \\<Longrightarrow> P) \\<Longrightarrow>\n     P\\<rbrakk>\n    \\<Longrightarrow> P", "by (cases s) (auto simp add: LID\\<^sub>L_def)"], ["", "lemma LID\\<^sub>GI [intro]: \"s r = Some ls \\<Longrightarrow> l \\<in> LID\\<^sub>L ls \\<Longrightarrow> l \\<in> LID\\<^sub>G s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s r = Some ls; l \\<in> LID\\<^sub>L ls\\<rbrakk>\n    \\<Longrightarrow> l \\<in> LID\\<^sub>G s", "by (auto simp add: LID\\<^sub>G_def LID\\<^sub>L_def ran_def)"], ["", "lemma LID\\<^sub>GE [elim]: \"l \\<in> LID\\<^sub>G s \\<Longrightarrow> (\\<And>r ls. s r = Some ls \\<Longrightarrow> l \\<in> LID\\<^sub>L ls \\<Longrightarrow> P) \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l \\<in> LID\\<^sub>G s;\n     \\<And>r ls.\n        \\<lbrakk>s r = Some ls; l \\<in> LID\\<^sub>L ls\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto simp add: LID\\<^sub>G_def ran_def)"], ["", "subsubsection \\<open>Distributive laws\\<close>"], ["", "lemma ID_distr_completion [simp]: \n  \"RID\\<^sub>E (\\<E>[e]) = RID\\<^sub>C \\<E> \\<union> RID\\<^sub>E e\"\n  \"LID\\<^sub>E (\\<E>[e]) = LID\\<^sub>C \\<E> \\<union> LID\\<^sub>E e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>E (\\<E> [e]) = RID\\<^sub>C \\<E> \\<union> RID\\<^sub>E e &&&\n    LID\\<^sub>E (\\<E> [e]) = LID\\<^sub>C \\<E> \\<union> LID\\<^sub>E e", "by (induct rule: plug.induct) auto"], ["", "lemma ID_restricted_store_subset_store: \n  \"RID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> RID\\<^sub>S \\<sigma>\"\n  \"LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> RID\\<^sub>S \\<sigma> &&&\n    LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. RID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> RID\\<^sub>S \\<sigma>\n 2. LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>", "show \"RID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> RID\\<^sub>S \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> RID\\<^sub>S \\<sigma>", "proof (rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma>", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma>", "assume \"r \\<in> RID\\<^sub>S (\\<sigma>(l := None))\""], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S (\\<sigma>(l := None))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma>", "then"], ["proof (chain)\npicking this:\n  r \\<in> RID\\<^sub>S (\\<sigma>(l := None))", "obtain l' v where \"(\\<sigma>(l := None)) l' = Some v\" and r_v: \"r \\<in> RID\\<^sub>V v\""], ["proof (prove)\nusing this:\n  r \\<in> RID\\<^sub>S (\\<sigma>(l := None))\n\ngoal (1 subgoal):\n 1. (\\<And>l' v.\n        \\<lbrakk>(\\<sigma>(l := None)) l' = Some v;\n         r \\<in> RID\\<^sub>V v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<sigma>(l := None)) l' = Some v\n  r \\<in> RID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma>", "have \"l' \\<noteq> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l' \\<noteq> l", "using \\<open>(\\<sigma>(l := None)) l' = Some v\\<close>"], ["proof (prove)\nusing this:\n  (\\<sigma>(l := None)) l' = Some v\n\ngoal (1 subgoal):\n 1. l' \\<noteq> l", "by auto"], ["proof (state)\nthis:\n  l' \\<noteq> l\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma>", "hence \"\\<sigma> l' = Some v\""], ["proof (prove)\nusing this:\n  l' \\<noteq> l\n\ngoal (1 subgoal):\n 1. \\<sigma> l' = Some v", "using \\<open>(\\<sigma>(l := None)) l' = Some v\\<close>"], ["proof (prove)\nusing this:\n  l' \\<noteq> l\n  (\\<sigma>(l := None)) l' = Some v\n\ngoal (1 subgoal):\n 1. \\<sigma> l' = Some v", "by auto"], ["proof (state)\nthis:\n  \\<sigma> l' = Some v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma>", "thus \"r \\<in> RID\\<^sub>S \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<sigma> l' = Some v\n\ngoal (1 subgoal):\n 1. r \\<in> RID\\<^sub>S \\<sigma>", "using r_v"], ["proof (prove)\nusing this:\n  \\<sigma> l' = Some v\n  r \\<in> RID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. r \\<in> RID\\<^sub>S \\<sigma>", "by blast"], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  RID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> RID\\<^sub>S \\<sigma>\n\ngoal (1 subgoal):\n 1. LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>", "show \"LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>", "proof (rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S \\<sigma>", "fix l'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S \\<sigma>", "assume \"l' \\<in> LID\\<^sub>S (\\<sigma>(l := None))\""], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S (\\<sigma>(l := None))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S \\<sigma>", "hence \"l' \\<in> dom (\\<sigma>(l := None)) \\<or> (\\<exists>l'' v. (\\<sigma>(l := None)) l'' = Some v \\<and> l' \\<in> LID\\<^sub>V v)\""], ["proof (prove)\nusing this:\n  l' \\<in> LID\\<^sub>S (\\<sigma>(l := None))\n\ngoal (1 subgoal):\n 1. l' \\<in> dom (\\<sigma>(l := None)) \\<or>\n    (\\<exists>l'' v.\n        (\\<sigma>(l := None)) l'' = Some v \\<and> l' \\<in> LID\\<^sub>V v)", "by blast"], ["proof (state)\nthis:\n  l' \\<in> dom (\\<sigma>(l := None)) \\<or>\n  (\\<exists>l'' v.\n      (\\<sigma>(l := None)) l'' = Some v \\<and> l' \\<in> LID\\<^sub>V v)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S \\<sigma>", "thus \"l' \\<in> LID\\<^sub>S \\<sigma>\""], ["proof (prove)\nusing this:\n  l' \\<in> dom (\\<sigma>(l := None)) \\<or>\n  (\\<exists>l'' v.\n      (\\<sigma>(l := None)) l'' = Some v \\<and> l' \\<in> LID\\<^sub>V v)\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S \\<sigma>", "proof (rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. l' \\<in> dom (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>\n 2. \\<exists>l'' v.\n       (\\<sigma>(l := None)) l'' = Some v \\<and>\n       l' \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>", "assume \"l' \\<in> dom (\\<sigma>(l := None))\""], ["proof (state)\nthis:\n  l' \\<in> dom (\\<sigma>(l := None))\n\ngoal (2 subgoals):\n 1. l' \\<in> dom (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>\n 2. \\<exists>l'' v.\n       (\\<sigma>(l := None)) l'' = Some v \\<and>\n       l' \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>", "thus \"l' \\<in> LID\\<^sub>S \\<sigma>\""], ["proof (prove)\nusing this:\n  l' \\<in> dom (\\<sigma>(l := None))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S \\<sigma>", "by auto"], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>l'' v.\n       (\\<sigma>(l := None)) l'' = Some v \\<and>\n       l' \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l'' v.\n       (\\<sigma>(l := None)) l'' = Some v \\<and>\n       l' \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>", "assume \"\\<exists>l'' v. (\\<sigma>(l := None)) l'' = Some v \\<and> l' \\<in> LID\\<^sub>V v\""], ["proof (state)\nthis:\n  \\<exists>l'' v.\n     (\\<sigma>(l := None)) l'' = Some v \\<and> l' \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. \\<exists>l'' v.\n       (\\<sigma>(l := None)) l'' = Some v \\<and>\n       l' \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>l'' v.\n     (\\<sigma>(l := None)) l'' = Some v \\<and> l' \\<in> LID\\<^sub>V v", "obtain l'' v where \"(\\<sigma>(l := None)) l'' = Some v\" and l'_in_v: \"l' \\<in> LID\\<^sub>V v\""], ["proof (prove)\nusing this:\n  \\<exists>l'' v.\n     (\\<sigma>(l := None)) l'' = Some v \\<and> l' \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. (\\<And>l'' v.\n        \\<lbrakk>(\\<sigma>(l := None)) l'' = Some v;\n         l' \\<in> LID\\<^sub>V v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<sigma>(l := None)) l'' = Some v\n  l' \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. \\<exists>l'' v.\n       (\\<sigma>(l := None)) l'' = Some v \\<and>\n       l' \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>", "hence \"\\<sigma> l'' = Some v\""], ["proof (prove)\nusing this:\n  (\\<sigma>(l := None)) l'' = Some v\n  l' \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. \\<sigma> l'' = Some v", "by (cases \"l = l''\", auto)"], ["proof (state)\nthis:\n  \\<sigma> l'' = Some v\n\ngoal (1 subgoal):\n 1. \\<exists>l'' v.\n       (\\<sigma>(l := None)) l'' = Some v \\<and>\n       l' \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S \\<sigma>", "thus \"l' \\<in> LID\\<^sub>S \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<sigma> l'' = Some v\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S \\<sigma>", "using l'_in_v"], ["proof (prove)\nusing this:\n  \\<sigma> l'' = Some v\n  l' \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S \\<sigma>", "by blast"], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LID\\<^sub>S (\\<sigma>(l := None)) \\<subseteq> LID\\<^sub>S \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_restricted_store_in_unrestricted_store [intro]: \n  \"r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<sigma>\"\n  \"l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow> l' \\<in> LID\\<^sub>S \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n     r \\<in> RID\\<^sub>S \\<sigma>) &&&\n    (l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n     l' \\<in> LID\\<^sub>S \\<sigma>)", "by (meson contra_subsetD ID_restricted_store_subset_store)+"], ["", "lemma in_restricted_store_in_updated_store [intro]: \n  \"r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow> r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\" \n  \"l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow> l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n     r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))) &&&\n    (l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n     l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v)))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\n 2. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "assume \"r \\<in> RID\\<^sub>S (\\<sigma>(l := None))\""], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S (\\<sigma>(l := None))\n\ngoal (2 subgoals):\n 1. r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\n 2. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "hence \"r \\<in> RID\\<^sub>S (\\<sigma> |` (- {l}))\""], ["proof (prove)\nusing this:\n  r \\<in> RID\\<^sub>S (\\<sigma>(l := None))\n\ngoal (1 subgoal):\n 1. r \\<in> RID\\<^sub>S (\\<sigma> |` (- {l}))", "by (simp add: restrict_complement_singleton_eq)"], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S (\\<sigma> |` (- {l}))\n\ngoal (2 subgoals):\n 1. r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\n 2. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "hence \"r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v) |` (- {l}))\""], ["proof (prove)\nusing this:\n  r \\<in> RID\\<^sub>S (\\<sigma> |` (- {l}))\n\ngoal (1 subgoal):\n 1. r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v) |` (- {l}))", "by simp"], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v) |` (- {l}))\n\ngoal (2 subgoals):\n 1. r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\n 2. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "hence \"r \\<in> RID\\<^sub>S (\\<sigma>(l := Some v, l := None))\""], ["proof (prove)\nusing this:\n  r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v) |` (- {l}))\n\ngoal (1 subgoal):\n 1. r \\<in> RID\\<^sub>S ((\\<sigma>(l \\<mapsto> v))(l := None))", "by (simp add: restrict_complement_singleton_eq)"], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S ((\\<sigma>(l \\<mapsto> v))(l := None))\n\ngoal (2 subgoals):\n 1. r \\<in> RID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\n 2. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "thus \"r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\""], ["proof (prove)\nusing this:\n  r \\<in> RID\\<^sub>S ((\\<sigma>(l \\<mapsto> v))(l := None))\n\ngoal (1 subgoal):\n 1. r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "by blast"], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "assume \"l' \\<in> LID\\<^sub>S (\\<sigma>(l := None))\""], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S (\\<sigma>(l := None))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "hence \"l' \\<in> LID\\<^sub>S (\\<sigma> |` (- {l}))\""], ["proof (prove)\nusing this:\n  l' \\<in> LID\\<^sub>S (\\<sigma>(l := None))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma> |` (- {l}))", "by (simp add: restrict_complement_singleton_eq)"], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S (\\<sigma> |` (- {l}))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "hence \"l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v) |` (- {l}))\""], ["proof (prove)\nusing this:\n  l' \\<in> LID\\<^sub>S (\\<sigma> |` (- {l}))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v) |` (- {l}))", "by simp"], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v) |` (- {l}))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "hence \"l' \\<in> LID\\<^sub>S (\\<sigma>(l := Some v, l := None))\""], ["proof (prove)\nusing this:\n  l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v) |` (- {l}))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S ((\\<sigma>(l \\<mapsto> v))(l := None))", "by (simp add: restrict_complement_singleton_eq)"], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S ((\\<sigma>(l \\<mapsto> v))(l := None))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma>(l := None)) \\<Longrightarrow>\n    l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "thus \"l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\""], ["proof (prove)\nusing this:\n  l' \\<in> LID\\<^sub>S ((\\<sigma>(l \\<mapsto> v))(l := None))\n\ngoal (1 subgoal):\n 1. l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))", "by blast"], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S (\\<sigma>(l \\<mapsto> v))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ID_distr_store [simp]:\n  \"RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) = RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\"\n  \"LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) = insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n    RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v &&&\n    LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n    insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n    RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\n 2. LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n    insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "show \"RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) = RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n    RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v", "proof (rule set_eqI, rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\n 2. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union>\n               RID\\<^sub>V v \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "fix r"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\n 2. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union>\n               RID\\<^sub>V v \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "assume \"r \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))\""], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\n 2. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union>\n               RID\\<^sub>V v \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "then"], ["proof (chain)\npicking this:\n  r \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "obtain l' v' where \"(\\<tau>(l \\<mapsto> v)) l' = Some v'\" \"r \\<in> RID\\<^sub>V v'\""], ["proof (prove)\nusing this:\n  r \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))\n\ngoal (1 subgoal):\n 1. (\\<And>l' v'.\n        \\<lbrakk>(\\<tau>(l \\<mapsto> v)) l' = Some v';\n         r \\<in> RID\\<^sub>V v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<tau>(l \\<mapsto> v)) l' = Some v'\n  r \\<in> RID\\<^sub>V v'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\n 2. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union>\n               RID\\<^sub>V v \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "thus \"r \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\""], ["proof (prove)\nusing this:\n  (\\<tau>(l \\<mapsto> v)) l' = Some v'\n  r \\<in> RID\\<^sub>V v'\n\ngoal (1 subgoal):\n 1. r \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v", "by (cases \"l' = l\") auto"], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<tau>(l := None)) \\<union>\n               RID\\<^sub>V v \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "qed auto"], ["proof (state)\nthis:\n  RID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n  RID\\<^sub>S (\\<tau>(l := None)) \\<union> RID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n    insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n    insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "show \"LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) = insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n    insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "proof (rule set_eqI, rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n 2. \\<And>x.\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union>\n                 LID\\<^sub>V v) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "fix l'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n 2. \\<And>x.\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union>\n                 LID\\<^sub>V v) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "assume \"l' \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v))\""], ["proof (state)\nthis:\n  l' \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n 2. \\<And>x.\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union>\n                 LID\\<^sub>V v) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "hence \"l' \\<in> dom (\\<tau>(l \\<mapsto> v)) \\<or> (\\<exists>l'' v'. (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and> l' \\<in> LID\\<^sub>V v')\""], ["proof (prove)\nusing this:\n  l' \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v))\n\ngoal (1 subgoal):\n 1. l' \\<in> dom (\\<tau>(l \\<mapsto> v)) \\<or>\n    (\\<exists>l'' v'.\n        (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and>\n        l' \\<in> LID\\<^sub>V v')", "by blast"], ["proof (state)\nthis:\n  l' \\<in> dom (\\<tau>(l \\<mapsto> v)) \\<or>\n  (\\<exists>l'' v'.\n      (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and> l' \\<in> LID\\<^sub>V v')\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n 2. \\<And>x.\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union>\n                 LID\\<^sub>V v) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "thus \"l' \\<in> insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\""], ["proof (prove)\nusing this:\n  l' \\<in> dom (\\<tau>(l \\<mapsto> v)) \\<or>\n  (\\<exists>l'' v'.\n      (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and> l' \\<in> LID\\<^sub>V v')\n\ngoal (1 subgoal):\n 1. l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "proof (rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. l' \\<in> dom (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n    l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n 2. \\<exists>l'' v'.\n       (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and>\n       l' \\<in> LID\\<^sub>V v' \\<Longrightarrow>\n    l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "assume \"l' \\<in> dom (\\<tau>(l \\<mapsto> v))\""], ["proof (state)\nthis:\n  l' \\<in> dom (\\<tau>(l \\<mapsto> v))\n\ngoal (2 subgoals):\n 1. l' \\<in> dom (\\<tau>(l \\<mapsto> v)) \\<Longrightarrow>\n    l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n 2. \\<exists>l'' v'.\n       (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and>\n       l' \\<in> LID\\<^sub>V v' \\<Longrightarrow>\n    l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "thus \"l' \\<in> insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\""], ["proof (prove)\nusing this:\n  l' \\<in> dom (\\<tau>(l \\<mapsto> v))\n\ngoal (1 subgoal):\n 1. l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "by (cases \"l' = l\") auto"], ["proof (state)\nthis:\n  l' \\<in> insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n\ngoal (1 subgoal):\n 1. \\<exists>l'' v'.\n       (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and>\n       l' \\<in> LID\\<^sub>V v' \\<Longrightarrow>\n    l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l'' v'.\n       (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and>\n       l' \\<in> LID\\<^sub>V v' \\<Longrightarrow>\n    l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "assume \"\\<exists>l'' v'. (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and> l' \\<in> LID\\<^sub>V v'\""], ["proof (state)\nthis:\n  \\<exists>l'' v'.\n     (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and> l' \\<in> LID\\<^sub>V v'\n\ngoal (1 subgoal):\n 1. \\<exists>l'' v'.\n       (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and>\n       l' \\<in> LID\\<^sub>V v' \\<Longrightarrow>\n    l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "then"], ["proof (chain)\npicking this:\n  \\<exists>l'' v'.\n     (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and> l' \\<in> LID\\<^sub>V v'", "obtain l'' v' where \"(\\<tau>(l \\<mapsto> v)) l'' = Some v'\" \"l' \\<in> LID\\<^sub>V v'\""], ["proof (prove)\nusing this:\n  \\<exists>l'' v'.\n     (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and> l' \\<in> LID\\<^sub>V v'\n\ngoal (1 subgoal):\n 1. (\\<And>l'' v'.\n        \\<lbrakk>(\\<tau>(l \\<mapsto> v)) l'' = Some v';\n         l' \\<in> LID\\<^sub>V v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<tau>(l \\<mapsto> v)) l'' = Some v'\n  l' \\<in> LID\\<^sub>V v'\n\ngoal (1 subgoal):\n 1. \\<exists>l'' v'.\n       (\\<tau>(l \\<mapsto> v)) l'' = Some v' \\<and>\n       l' \\<in> LID\\<^sub>V v' \\<Longrightarrow>\n    l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "thus \"l' \\<in> insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\""], ["proof (prove)\nusing this:\n  (\\<tau>(l \\<mapsto> v)) l'' = Some v'\n  l' \\<in> LID\\<^sub>V v'\n\ngoal (1 subgoal):\n 1. l' \\<in> insert l\n              (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)", "by (cases \"l = l''\") auto"], ["proof (state)\nthis:\n  l' \\<in> insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l' \\<in> insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert l\n                (LID\\<^sub>S (\\<tau>(l := None)) \\<union>\n                 LID\\<^sub>V v) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S (\\<tau>(l \\<mapsto> v))", "qed auto"], ["proof (state)\nthis:\n  LID\\<^sub>S (\\<tau>(l \\<mapsto> v)) =\n  insert l (LID\\<^sub>S (\\<tau>(l := None)) \\<union> LID\\<^sub>V v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ID_distr_local [simp]: \n  \"LID\\<^sub>L (\\<sigma>,\\<tau>,e) = LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau> \\<union> LID\\<^sub>E e\"\n  \"RID\\<^sub>L (\\<sigma>,\\<tau>,e) = RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau> \\<union> RID\\<^sub>E e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LID\\<^sub>L (\\<sigma>, \\<tau>, e) =\n    LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau> \\<union>\n    LID\\<^sub>E e &&&\n    RID\\<^sub>L (\\<sigma>, \\<tau>, e) =\n    RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau> \\<union> RID\\<^sub>E e", "by (simp add: LID\\<^sub>L_def RID\\<^sub>L_def)+"], ["", "lemma ID_restricted_global_subset_unrestricted:\n  \"LID\\<^sub>G (s(r := None)) \\<subseteq> LID\\<^sub>G s\"\n  \"RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LID\\<^sub>G (s(r := None)) \\<subseteq> LID\\<^sub>G s &&&\n    RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. LID\\<^sub>G (s(r := None)) \\<subseteq> LID\\<^sub>G s\n 2. RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s", "show \"LID\\<^sub>G (s(r := None)) \\<subseteq> LID\\<^sub>G s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LID\\<^sub>G (s(r := None)) \\<subseteq> LID\\<^sub>G s", "proof (rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>G s", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>G s", "assume \"l \\<in> LID\\<^sub>G (s(r := None))\""], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>G s", "then"], ["proof (chain)\npicking this:\n  l \\<in> LID\\<^sub>G (s(r := None))", "obtain r'' ls where \"(s(r := None)) r'' = Some ls\" and l_in_ls: \"l \\<in> LID\\<^sub>L ls\""], ["proof (prove)\nusing this:\n  l \\<in> LID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. (\\<And>r'' ls.\n        \\<lbrakk>(s(r := None)) r'' = Some ls;\n         l \\<in> LID\\<^sub>L ls\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (s(r := None)) r'' = Some ls\n  l \\<in> LID\\<^sub>L ls\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>G s", "have \"r'' \\<noteq> r \""], ["proof (prove)\ngoal (1 subgoal):\n 1. r'' \\<noteq> r", "using \\<open>(s(r := None)) r'' = Some ls\\<close>"], ["proof (prove)\nusing this:\n  (s(r := None)) r'' = Some ls\n\ngoal (1 subgoal):\n 1. r'' \\<noteq> r", "by auto"], ["proof (state)\nthis:\n  r'' \\<noteq> r\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>G s", "hence \"s r'' = Some ls\""], ["proof (prove)\nusing this:\n  r'' \\<noteq> r\n\ngoal (1 subgoal):\n 1. s r'' = Some ls", "using \\<open>(s(r := None)) r'' = Some ls\\<close>"], ["proof (prove)\nusing this:\n  r'' \\<noteq> r\n  (s(r := None)) r'' = Some ls\n\ngoal (1 subgoal):\n 1. s r'' = Some ls", "by auto"], ["proof (state)\nthis:\n  s r'' = Some ls\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>G s", "thus \"l \\<in> LID\\<^sub>G s\""], ["proof (prove)\nusing this:\n  s r'' = Some ls\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G s", "using l_in_ls"], ["proof (prove)\nusing this:\n  s r'' = Some ls\n  l \\<in> LID\\<^sub>L ls\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G s", "by blast"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LID\\<^sub>G (s(r := None)) \\<subseteq> LID\\<^sub>G s\n\ngoal (1 subgoal):\n 1. RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s", "show \"RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s", "proof (rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>G s", "fix r'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>G s", "assume \"r' \\<in> RID\\<^sub>G (s(r := None))\""], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>G s", "hence \"r' \\<in> dom (s(r := None)) \\<or> (\\<exists>r'' ls. (s(r := None)) r'' = Some ls \\<and> r' \\<in> RID\\<^sub>L ls)\""], ["proof (prove)\nusing this:\n  r' \\<in> RID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. r' \\<in> dom (s(r := None)) \\<or>\n    (\\<exists>r'' ls.\n        (s(r := None)) r'' = Some ls \\<and> r' \\<in> RID\\<^sub>L ls)", "by blast"], ["proof (state)\nthis:\n  r' \\<in> dom (s(r := None)) \\<or>\n  (\\<exists>r'' ls.\n      (s(r := None)) r'' = Some ls \\<and> r' \\<in> RID\\<^sub>L ls)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>G s", "thus \"r' \\<in> RID\\<^sub>G s\""], ["proof (prove)\nusing this:\n  r' \\<in> dom (s(r := None)) \\<or>\n  (\\<exists>r'' ls.\n      (s(r := None)) r'' = Some ls \\<and> r' \\<in> RID\\<^sub>L ls)\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G s", "proof (rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. r' \\<in> dom (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G s\n 2. \\<exists>r'' ls.\n       (s(r := None)) r'' = Some ls \\<and>\n       r' \\<in> RID\\<^sub>L ls \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G s", "assume \"\\<exists>r'' ls. (s(r := None)) r'' = Some ls \\<and> r' \\<in> RID\\<^sub>L ls\""], ["proof (state)\nthis:\n  \\<exists>r'' ls.\n     (s(r := None)) r'' = Some ls \\<and> r' \\<in> RID\\<^sub>L ls\n\ngoal (2 subgoals):\n 1. r' \\<in> dom (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G s\n 2. \\<exists>r'' ls.\n       (s(r := None)) r'' = Some ls \\<and>\n       r' \\<in> RID\\<^sub>L ls \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G s", "then"], ["proof (chain)\npicking this:\n  \\<exists>r'' ls.\n     (s(r := None)) r'' = Some ls \\<and> r' \\<in> RID\\<^sub>L ls", "obtain r'' ls where \"(s(r := None)) r'' = Some ls\" and r'_in_ls: \"r' \\<in> RID\\<^sub>L ls\""], ["proof (prove)\nusing this:\n  \\<exists>r'' ls.\n     (s(r := None)) r'' = Some ls \\<and> r' \\<in> RID\\<^sub>L ls\n\ngoal (1 subgoal):\n 1. (\\<And>r'' ls.\n        \\<lbrakk>(s(r := None)) r'' = Some ls;\n         r' \\<in> RID\\<^sub>L ls\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (s(r := None)) r'' = Some ls\n  r' \\<in> RID\\<^sub>L ls\n\ngoal (2 subgoals):\n 1. r' \\<in> dom (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G s\n 2. \\<exists>r'' ls.\n       (s(r := None)) r'' = Some ls \\<and>\n       r' \\<in> RID\\<^sub>L ls \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G s", "have neq: \"r'' \\<noteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r'' \\<noteq> r", "using \\<open>(s(r := None)) r'' = Some ls\\<close>"], ["proof (prove)\nusing this:\n  (s(r := None)) r'' = Some ls\n\ngoal (1 subgoal):\n 1. r'' \\<noteq> r", "by auto"], ["proof (state)\nthis:\n  r'' \\<noteq> r\n\ngoal (2 subgoals):\n 1. r' \\<in> dom (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G s\n 2. \\<exists>r'' ls.\n       (s(r := None)) r'' = Some ls \\<and>\n       r' \\<in> RID\\<^sub>L ls \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G s", "hence \"s r'' = Some ls\""], ["proof (prove)\nusing this:\n  r'' \\<noteq> r\n\ngoal (1 subgoal):\n 1. s r'' = Some ls", "using \\<open>(s(r := None)) r'' = Some ls\\<close>"], ["proof (prove)\nusing this:\n  r'' \\<noteq> r\n  (s(r := None)) r'' = Some ls\n\ngoal (1 subgoal):\n 1. s r'' = Some ls", "by auto"], ["proof (state)\nthis:\n  s r'' = Some ls\n\ngoal (2 subgoals):\n 1. r' \\<in> dom (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G s\n 2. \\<exists>r'' ls.\n       (s(r := None)) r'' = Some ls \\<and>\n       r' \\<in> RID\\<^sub>L ls \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G s", "thus \"r' \\<in> RID\\<^sub>G s\""], ["proof (prove)\nusing this:\n  s r'' = Some ls\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G s", "using r'_in_ls"], ["proof (prove)\nusing this:\n  s r'' = Some ls\n  r' \\<in> RID\\<^sub>L ls\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G s", "by blast"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G s\n\ngoal (1 subgoal):\n 1. r' \\<in> dom (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G s", "qed auto"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  RID\\<^sub>G (s(r := None)) \\<subseteq> RID\\<^sub>G s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_restricted_global_in_unrestricted_global [intro]: \n  \"r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G s\"\n  \"l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow> l \\<in> LID\\<^sub>G s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n     r' \\<in> RID\\<^sub>G s) &&&\n    (l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n     l \\<in> LID\\<^sub>G s)", "by (simp add: ID_restricted_global_subset_unrestricted rev_subsetD)+"], ["", "lemma in_restricted_global_in_updated_global [intro]: \n  \"r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\" \n  \"l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow> l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n     r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))) &&&\n    (l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n     l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls)))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\n 2. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "assume \"r' \\<in> RID\\<^sub>G (s(r := None))\""], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s(r := None))\n\ngoal (2 subgoals):\n 1. r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\n 2. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "hence \"r' \\<in> RID\\<^sub>G (s |` (- {r}))\""], ["proof (prove)\nusing this:\n  r' \\<in> RID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G (s |` (- {r}))", "by (simp add: restrict_complement_singleton_eq)"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s |` (- {r}))\n\ngoal (2 subgoals):\n 1. r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\n 2. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "hence \"r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls) |` (- {r}))\""], ["proof (prove)\nusing this:\n  r' \\<in> RID\\<^sub>G (s |` (- {r}))\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls) |` (- {r}))", "by simp"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls) |` (- {r}))\n\ngoal (2 subgoals):\n 1. r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\n 2. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "hence \"r' \\<in> RID\\<^sub>G (s(r := Some ls, r := None))\""], ["proof (prove)\nusing this:\n  r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls) |` (- {r}))\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G ((s(r \\<mapsto> ls))(r := None))", "by (simp add: restrict_complement_singleton_eq)"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G ((s(r \\<mapsto> ls))(r := None))\n\ngoal (2 subgoals):\n 1. r' \\<in> RID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\n 2. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "thus \"r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\""], ["proof (prove)\nusing this:\n  r' \\<in> RID\\<^sub>G ((s(r \\<mapsto> ls))(r := None))\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))", "by blast"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "assume \"l \\<in> LID\\<^sub>G (s(r := None))\""], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "hence \"l \\<in> LID\\<^sub>G (s |` (- {r}))\""], ["proof (prove)\nusing this:\n  l \\<in> LID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s |` (- {r}))", "by (simp add: restrict_complement_singleton_eq)"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G (s |` (- {r}))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "hence \"l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls) |` (- {r}))\""], ["proof (prove)\nusing this:\n  l \\<in> LID\\<^sub>G (s |` (- {r}))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls) |` (- {r}))", "by simp"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls) |` (- {r}))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "hence \"l \\<in> LID\\<^sub>G (s(r := Some ls, r := None))\""], ["proof (prove)\nusing this:\n  l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls) |` (- {r}))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G ((s(r \\<mapsto> ls))(r := None))", "by (simp add: restrict_complement_singleton_eq)"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G ((s(r \\<mapsto> ls))(r := None))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r := None)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "thus \"l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))\""], ["proof (prove)\nusing this:\n  l \\<in> LID\\<^sub>G ((s(r \\<mapsto> ls))(r := None))\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "by blast"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ID_distr_global [simp]:\n  \"RID\\<^sub>G (s(r \\<mapsto> ls)) = insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\"\n  \"LID\\<^sub>G (s(r \\<mapsto> ls)) = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>G (s(r \\<mapsto> ls)) =\n    insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls) &&&\n    LID\\<^sub>G (s(r \\<mapsto> ls)) =\n    LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. RID\\<^sub>G (s(r \\<mapsto> ls)) =\n    insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\n 2. LID\\<^sub>G (s(r \\<mapsto> ls)) =\n    LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "show \"LID\\<^sub>G (s(r \\<mapsto> ls)) = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LID\\<^sub>G (s(r \\<mapsto> ls)) =\n    LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "proof (rule set_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))) =\n       (x \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls)", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))) =\n       (x \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls)", "show \"(l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))) = (l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))) =\n    (l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls)", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\n 2. l \\<in> LID\\<^sub>G (s(r := None)) \\<union>\n            LID\\<^sub>L ls \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "assume \"l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))\""], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))\n\ngoal (2 subgoals):\n 1. l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\n 2. l \\<in> LID\\<^sub>G (s(r := None)) \\<union>\n            LID\\<^sub>L ls \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "from this"], ["proof (chain)\npicking this:\n  l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "obtain r' ls' where \"(s(r \\<mapsto> ls)) r' = Some ls'\" \"l \\<in> LID\\<^sub>L ls'\""], ["proof (prove)\nusing this:\n  l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))\n\ngoal (1 subgoal):\n 1. (\\<And>r' ls'.\n        \\<lbrakk>(s(r \\<mapsto> ls)) r' = Some ls';\n         l \\<in> LID\\<^sub>L ls'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (s(r \\<mapsto> ls)) r' = Some ls'\n  l \\<in> LID\\<^sub>L ls'\n\ngoal (2 subgoals):\n 1. l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls)) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\n 2. l \\<in> LID\\<^sub>G (s(r := None)) \\<union>\n            LID\\<^sub>L ls \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "thus \"l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\""], ["proof (prove)\nusing this:\n  (s(r \\<mapsto> ls)) r' = Some ls'\n  l \\<in> LID\\<^sub>L ls'\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "by (cases \"r = r'\") auto"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>G (s(r := None)) \\<union>\n            LID\\<^sub>L ls \\<Longrightarrow>\n    l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))", "qed auto"], ["proof (state)\nthis:\n  (l \\<in> LID\\<^sub>G (s(r \\<mapsto> ls))) =\n  (l \\<in> LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LID\\<^sub>G (s(r \\<mapsto> ls)) =\n  LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\n\ngoal (1 subgoal):\n 1. RID\\<^sub>G (s(r \\<mapsto> ls)) =\n    insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)", "show \"RID\\<^sub>G (s(r \\<mapsto> ls)) = insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>G (s(r \\<mapsto> ls)) =\n    insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)", "proof (rule set_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))) =\n       (x \\<in> insert r\n                 (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls))", "fix r'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))) =\n       (x \\<in> insert r\n                 (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls))", "show \"(r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))) = (r' \\<in> insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))) =\n    (r' \\<in> insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls))", "proof (rule iffI, clarsimp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls)); r' \\<noteq> r;\n     r' \\<notin> RID\\<^sub>L ls\\<rbrakk>\n    \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r := None))\n 2. r' \\<in> insert r\n              (RID\\<^sub>G (s(r := None)) \\<union>\n               RID\\<^sub>L ls) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))", "assume r'_g: \"r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\" and neq: \"r' \\<noteq> r\" and r'_l: \"r' \\<notin> RID\\<^sub>L ls\""], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))\n  r' \\<noteq> r\n  r' \\<notin> RID\\<^sub>L ls\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls)); r' \\<noteq> r;\n     r' \\<notin> RID\\<^sub>L ls\\<rbrakk>\n    \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r := None))\n 2. r' \\<in> insert r\n              (RID\\<^sub>G (s(r := None)) \\<union>\n               RID\\<^sub>L ls) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))", "show \"r' \\<in> RID\\<^sub>G (s(r := None))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G (s(r := None))", "proof (rule RID\\<^sub>GE[OF r'_g])"], ["proof (state)\ngoal (2 subgoals):\n 1. r' \\<in> dom (s(r \\<mapsto> ls)) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r := None))\n 2. \\<And>r'a lsa.\n       \\<lbrakk>(s(r \\<mapsto> ls)) r'a = Some lsa;\n        r' \\<in> RID\\<^sub>L lsa\\<rbrakk>\n       \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r := None))", "assume \"r' \\<in> dom (s(r \\<mapsto> ls))\""], ["proof (state)\nthis:\n  r' \\<in> dom (s(r \\<mapsto> ls))\n\ngoal (2 subgoals):\n 1. r' \\<in> dom (s(r \\<mapsto> ls)) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r := None))\n 2. \\<And>r'a lsa.\n       \\<lbrakk>(s(r \\<mapsto> ls)) r'a = Some lsa;\n        r' \\<in> RID\\<^sub>L lsa\\<rbrakk>\n       \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r := None))", "thus ?thesis"], ["proof (prove)\nusing this:\n  r' \\<in> dom (s(r \\<mapsto> ls))\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G (s(r := None))", "by (simp add: RID\\<^sub>G_def neq)"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. \\<And>r'a lsa.\n       \\<lbrakk>(s(r \\<mapsto> ls)) r'a = Some lsa;\n        r' \\<in> RID\\<^sub>L lsa\\<rbrakk>\n       \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r := None))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r'a lsa.\n       \\<lbrakk>(s(r \\<mapsto> ls)) r'a = Some lsa;\n        r' \\<in> RID\\<^sub>L lsa\\<rbrakk>\n       \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r := None))", "fix ls' r''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r'a lsa.\n       \\<lbrakk>(s(r \\<mapsto> ls)) r'a = Some lsa;\n        r' \\<in> RID\\<^sub>L lsa\\<rbrakk>\n       \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r := None))", "assume r'_in_range:\"(s(r \\<mapsto> ls)) r'' = Some ls'\" \"r' \\<in> RID\\<^sub>L ls'\""], ["proof (state)\nthis:\n  (s(r \\<mapsto> ls)) r'' = Some ls'\n  r' \\<in> RID\\<^sub>L ls'\n\ngoal (1 subgoal):\n 1. \\<And>r'a lsa.\n       \\<lbrakk>(s(r \\<mapsto> ls)) r'a = Some lsa;\n        r' \\<in> RID\\<^sub>L lsa\\<rbrakk>\n       \\<Longrightarrow> r' \\<in> RID\\<^sub>G (s(r := None))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (s(r \\<mapsto> ls)) r'' = Some ls'\n  r' \\<in> RID\\<^sub>L ls'\n\ngoal (1 subgoal):\n 1. r' \\<in> RID\\<^sub>G (s(r := None))", "by (cases \"r'' = r\") (use neq r'_l in auto)"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s(r := None))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r' \\<in> RID\\<^sub>G (s(r := None))\n\ngoal (1 subgoal):\n 1. r' \\<in> insert r\n              (RID\\<^sub>G (s(r := None)) \\<union>\n               RID\\<^sub>L ls) \\<Longrightarrow>\n    r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))", "qed auto"], ["proof (state)\nthis:\n  (r' \\<in> RID\\<^sub>G (s(r \\<mapsto> ls))) =\n  (r' \\<in> insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  RID\\<^sub>G (s(r \\<mapsto> ls)) =\n  insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restrictions_inwards [simp]:\n  \"x \\<noteq> x' \\<Longrightarrow> f(x := Some y, x' := None) = (f(x':= None, x := Some y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    (f(x \\<mapsto> y))(x' := None) = f(x' := None)(x \\<mapsto> y)", "by (rule fun_upd_twist)"], ["", "subsubsection \\<open>Miscellaneous laws\\<close>"], ["", "lemma ID_combination_subset_union [intro]:\n  \"RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<subseteq> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>\"\n  \"LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<subseteq> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>S (\\<sigma>;;\\<tau>)\n    \\<subseteq> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau> &&&\n    LID\\<^sub>S (\\<sigma>;;\\<tau>)\n    \\<subseteq> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. RID\\<^sub>S (\\<sigma>;;\\<tau>)\n    \\<subseteq> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>\n 2. LID\\<^sub>S (\\<sigma>;;\\<tau>)\n    \\<subseteq> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "show \"RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<subseteq> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>S (\\<sigma>;;\\<tau>)\n    \\<subseteq> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>", "proof (rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>", "assume \"r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>)\""], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>", "from this"], ["proof (chain)\npicking this:\n  r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>)", "obtain l v where \"(\\<sigma>;;\\<tau>) l = Some v\" and \"r \\<in> RID\\<^sub>V v\""], ["proof (prove)\nusing this:\n  r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>)\n\ngoal (1 subgoal):\n 1. (\\<And>l v.\n        \\<lbrakk>(\\<sigma>;;\\<tau>) l = Some v;\n         r \\<in> RID\\<^sub>V v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<sigma>;;\\<tau>) l = Some v\n  r \\<in> RID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n       x \\<in> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>", "thus \"r \\<in> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>\""], ["proof (prove)\nusing this:\n  (\\<sigma>;;\\<tau>) l = Some v\n  r \\<in> RID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. r \\<in> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>", "by (cases \"l \\<in> dom \\<tau>\") auto"], ["proof (state)\nthis:\n  r \\<in> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  RID\\<^sub>S (\\<sigma>;;\\<tau>)\n  \\<subseteq> RID\\<^sub>S \\<sigma> \\<union> RID\\<^sub>S \\<tau>\n\ngoal (1 subgoal):\n 1. LID\\<^sub>S (\\<sigma>;;\\<tau>)\n    \\<subseteq> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "show \"LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<subseteq> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LID\\<^sub>S (\\<sigma>;;\\<tau>)\n    \\<subseteq> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "proof (rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "assume \"l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>)\""], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "hence \"l \\<in> dom (\\<sigma>;;\\<tau>) \\<or> (\\<exists>l' v. (\\<sigma>;;\\<tau>) l' = Some v \\<and> l \\<in> LID\\<^sub>V v)\""], ["proof (prove)\nusing this:\n  l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>)\n\ngoal (1 subgoal):\n 1. l \\<in> dom (\\<sigma>;;\\<tau>) \\<or>\n    (\\<exists>l' v.\n        (\\<sigma>;;\\<tau>) l' = Some v \\<and> l \\<in> LID\\<^sub>V v)", "by blast"], ["proof (state)\nthis:\n  l \\<in> dom (\\<sigma>;;\\<tau>) \\<or>\n  (\\<exists>l' v.\n      (\\<sigma>;;\\<tau>) l' = Some v \\<and> l \\<in> LID\\<^sub>V v)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n       x \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "thus \"l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\""], ["proof (prove)\nusing this:\n  l \\<in> dom (\\<sigma>;;\\<tau>) \\<or>\n  (\\<exists>l' v.\n      (\\<sigma>;;\\<tau>) l' = Some v \\<and> l \\<in> LID\\<^sub>V v)\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "proof (rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. l \\<in> dom (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\n 2. \\<exists>l' v.\n       (\\<sigma>;;\\<tau>) l' = Some v \\<and>\n       l \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "assume \"l \\<in> dom (\\<sigma>;;\\<tau>)\""], ["proof (state)\nthis:\n  l \\<in> dom (\\<sigma>;;\\<tau>)\n\ngoal (2 subgoals):\n 1. l \\<in> dom (\\<sigma>;;\\<tau>) \\<Longrightarrow>\n    l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\n 2. \\<exists>l' v.\n       (\\<sigma>;;\\<tau>) l' = Some v \\<and>\n       l \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "thus \"l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\""], ["proof (prove)\nusing this:\n  l \\<in> dom (\\<sigma>;;\\<tau>)\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "by (cases \"l \\<in> dom \\<tau>\") auto"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>l' v.\n       (\\<sigma>;;\\<tau>) l' = Some v \\<and>\n       l \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l' v.\n       (\\<sigma>;;\\<tau>) l' = Some v \\<and>\n       l \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "assume \"\\<exists>l' v. (\\<sigma>;;\\<tau>) l' = Some v \\<and> l \\<in> LID\\<^sub>V v\""], ["proof (state)\nthis:\n  \\<exists>l' v. (\\<sigma>;;\\<tau>) l' = Some v \\<and> l \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. \\<exists>l' v.\n       (\\<sigma>;;\\<tau>) l' = Some v \\<and>\n       l \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>l' v. (\\<sigma>;;\\<tau>) l' = Some v \\<and> l \\<in> LID\\<^sub>V v", "obtain l' v where \"(\\<sigma>;;\\<tau>) l' = Some v\" \"l \\<in> LID\\<^sub>V v\""], ["proof (prove)\nusing this:\n  \\<exists>l' v. (\\<sigma>;;\\<tau>) l' = Some v \\<and> l \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. (\\<And>l' v.\n        \\<lbrakk>(\\<sigma>;;\\<tau>) l' = Some v;\n         l \\<in> LID\\<^sub>V v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<sigma>;;\\<tau>) l' = Some v\n  l \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. \\<exists>l' v.\n       (\\<sigma>;;\\<tau>) l' = Some v \\<and>\n       l \\<in> LID\\<^sub>V v \\<Longrightarrow>\n    l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "thus \"l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\""], ["proof (prove)\nusing this:\n  (\\<sigma>;;\\<tau>) l' = Some v\n  l \\<in> LID\\<^sub>V v\n\ngoal (1 subgoal):\n 1. l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>", "by (cases \"l' \\<in> dom \\<tau>\") auto"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l \\<in> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LID\\<^sub>S (\\<sigma>;;\\<tau>)\n  \\<subseteq> LID\\<^sub>S \\<sigma> \\<union> LID\\<^sub>S \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_combination_in_component [intro]: \n  \"r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow> r \\<notin> RID\\<^sub>S \\<sigma> \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<tau>\"\n  \"r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow> r \\<notin> RID\\<^sub>S \\<tau> \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<sigma>\"\n  \"l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow> l \\<notin> LID\\<^sub>S \\<sigma> \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<tau>\"\n  \"l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>) \\<Longrightarrow> l \\<notin> LID\\<^sub>S \\<tau> \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lbrakk>r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>);\n       r \\<notin> RID\\<^sub>S \\<sigma>\\<rbrakk>\n      \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<tau>) &&&\n     (\\<lbrakk>r \\<in> RID\\<^sub>S (\\<sigma>;;\\<tau>);\n       r \\<notin> RID\\<^sub>S \\<tau>\\<rbrakk>\n      \\<Longrightarrow> r \\<in> RID\\<^sub>S \\<sigma>)) &&&\n    (\\<lbrakk>l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>);\n      l \\<notin> LID\\<^sub>S \\<sigma>\\<rbrakk>\n     \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<tau>) &&&\n    (\\<lbrakk>l \\<in> LID\\<^sub>S (\\<sigma>;;\\<tau>);\n      l \\<notin> LID\\<^sub>S \\<tau>\\<rbrakk>\n     \\<Longrightarrow> l \\<in> LID\\<^sub>S \\<sigma>)", "by (meson Un_iff ID_combination_subset_union subsetCE)+"], ["", "lemma in_mapped_in_component_of_combination [intro]:\n  assumes \n    maps_to_v: \"(\\<sigma>;;\\<tau>) l = Some v\" and\n    l'_in_v: \"l' \\<in> LID\\<^sub>V v\"\n  shows\n    \"l' \\<notin> LID\\<^sub>S \\<tau> \\<Longrightarrow> l' \\<in> LID\\<^sub>S \\<sigma>\"\n    \"l' \\<notin> LID\\<^sub>S \\<sigma> \\<Longrightarrow> l' \\<in> LID\\<^sub>S \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l' \\<notin> LID\\<^sub>S \\<tau> \\<Longrightarrow>\n     l' \\<in> LID\\<^sub>S \\<sigma>) &&&\n    (l' \\<notin> LID\\<^sub>S \\<sigma> \\<Longrightarrow>\n     l' \\<in> LID\\<^sub>S \\<tau>)", "by (metis LID\\<^sub>SI(2) combine.simps l'_in_v maps_to_v)+"], ["", "lemma elim_trivial_restriction [simp]: \"l \\<notin> LID\\<^sub>S \\<tau> \\<Longrightarrow> (\\<tau>(l := None)) = \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<notin> LID\\<^sub>S \\<tau> \\<Longrightarrow>\n    \\<tau>(l := None) = \\<tau>", "by (simp add: LID\\<^sub>S_def domIff fun_upd_idem)"], ["", "lemma ID_distr_global_conditional:\n  \"s r = Some ls \\<Longrightarrow> RID\\<^sub>G s = insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\"\n  \"s r = Some ls \\<Longrightarrow> LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s r = Some ls \\<Longrightarrow>\n     RID\\<^sub>G s =\n     insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)) &&&\n    (s r = Some ls \\<Longrightarrow>\n     LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. s r = Some ls \\<Longrightarrow>\n    RID\\<^sub>G s =\n    insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\n 2. s r = Some ls \\<Longrightarrow>\n    LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "assume \"s r = Some ls\""], ["proof (state)\nthis:\n  s r = Some ls\n\ngoal (2 subgoals):\n 1. s r = Some ls \\<Longrightarrow>\n    RID\\<^sub>G s =\n    insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\n 2. s r = Some ls \\<Longrightarrow>\n    LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "hence s_as_upd: \"s = (s(r \\<mapsto> ls))\""], ["proof (prove)\nusing this:\n  s r = Some ls\n\ngoal (1 subgoal):\n 1. s = s(r \\<mapsto> ls)", "by (simp add: fun_upd_idem)"], ["proof (state)\nthis:\n  s = s(r \\<mapsto> ls)\n\ngoal (2 subgoals):\n 1. s r = Some ls \\<Longrightarrow>\n    RID\\<^sub>G s =\n    insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\n 2. s r = Some ls \\<Longrightarrow>\n    LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "show \"RID\\<^sub>G s = insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RID\\<^sub>G s =\n    insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)", "by (subst s_as_upd, simp)"], ["proof (state)\nthis:\n  RID\\<^sub>G s =\n  insert r (RID\\<^sub>G (s(r := None)) \\<union> RID\\<^sub>L ls)\n\ngoal (1 subgoal):\n 1. s r = Some ls \\<Longrightarrow>\n    LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "show \"LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls", "by (subst s_as_upd, simp)"], ["proof (state)\nthis:\n  LID\\<^sub>G s = LID\\<^sub>G (s(r := None)) \\<union> LID\\<^sub>L ls\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}