{"file_name": "/home/qj213/afp-2021-10-22/thys/Matrix/Ordered_Semiring.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Matrix", "problem_names": ["lemmas ordered_semiring_record_simps = ring_record_simps ordered_semiring.simps", "lemma max_ge_right: assumes x: \"x \\<in> carrier R\" and y: \"y \\<in> carrier R\" shows \"Max x y \\<succeq> y\"", "lemma wf_max0: \"x \\<in> carrier R \\<Longrightarrow> Max \\<zero> x \\<in> carrier R\"", "lemma max0_id_pos: assumes x: \"x \\<succeq> \\<zero>\" and wf: \"x \\<in> carrier R\"\n  shows \"Max \\<zero> x = x\"", "lemma class_semiring: \"semiring (class_semiring (TYPE('a :: ordered_semiring_1)) b)\"", "lemma class_ordered_semiring: assumes \"order_pair (gt :: ('a :: ordered_semiring_1 \\<Rightarrow> 'a \\<Rightarrow> bool)) d\"\n  shows \"ordered_semiring \n    (class_ordered_semiring (TYPE('a)) gt b)\" \n  (is \"ordered_semiring ?R\")", "lemma (in one_mono_ordered_semiring_1) class_ordered_semiring:  \n  \"ordered_semiring \n    (class_ordered_semiring (TYPE('a)) (\\<succ>) b)\"", "lemma (in both_mono_ordered_semiring_1) class_ordered_semiring:  \n  \"ordered_semiring \n    (class_ordered_semiring (TYPE('a)) (\\<succ>) b)\""], "translations": [["", "lemmas ordered_semiring_record_simps = ring_record_simps ordered_semiring.simps"], ["", "locale ordered_semiring = semiring +\n  assumes compat: \"\\<lbrakk>s \\<succeq> (t :: 'a); t \\<succ> u; s \\<in> carrier R; t \\<in> carrier R; u \\<in> carrier R\\<rbrakk> \\<Longrightarrow> s \\<succ> u\"\n  and compat2: \"\\<lbrakk>s \\<succ> (t :: 'a); t \\<succeq> u; s \\<in> carrier R ; t \\<in> carrier R; u \\<in> carrier R\\<rbrakk> \\<Longrightarrow> s \\<succ> u\"\n  and plus_left_mono: \"\\<lbrakk>x \\<succeq> y; x \\<in> carrier R; y \\<in> carrier R; z \\<in> carrier R\\<rbrakk> \\<Longrightarrow> x \\<oplus> z \\<succeq> y \\<oplus> z\"\n  and times_left_mono: \"\\<lbrakk>z \\<succeq> \\<zero>; x \\<succeq> y; x \\<in> carrier R; y \\<in> carrier R; z \\<in> carrier R\\<rbrakk> \\<Longrightarrow> x \\<otimes> z \\<succeq> y \\<otimes> z\"\n  and times_right_mono: \"\\<lbrakk>x \\<succeq> \\<zero>; y \\<succeq> z; x \\<in> carrier R; y \\<in> carrier R; z \\<in> carrier R\\<rbrakk> \\<Longrightarrow> x \\<otimes> y \\<succeq> x \\<otimes> z\"\n  and geq_refl: \"x \\<in> carrier R \\<Longrightarrow> x \\<succeq> x\"\n  and geq_trans[trans]: \"\\<lbrakk>x \\<succeq> y; y \\<succeq> z; x \\<in> carrier R; y \\<in> carrier R; z \\<in> carrier R\\<rbrakk> \\<Longrightarrow> x \\<succeq> z\"\n  and gt_trans[trans]: \"\\<lbrakk>x \\<succ> y; y \\<succ> z; x \\<in> carrier R; y \\<in> carrier R; z \\<in> carrier R\\<rbrakk> \\<Longrightarrow> x \\<succ> z\"\n  and gt_imp_ge: \"x \\<succ> y \\<Longrightarrow> x \\<in> carrier R \\<Longrightarrow> y \\<in> carrier R \\<Longrightarrow> x \\<succeq> y\"\n  and max_comm: \"x \\<in> carrier R \\<Longrightarrow> y \\<in> carrier R \\<Longrightarrow> Max x y = Max y x\"\n  and max_ge: \"x \\<in> carrier R \\<Longrightarrow> y \\<in> carrier R \\<Longrightarrow> Max x y \\<succeq> x\"\n  and max_id: \"x \\<in> carrier R \\<Longrightarrow> y \\<in> carrier R \\<Longrightarrow> x \\<succeq> y \\<Longrightarrow> Max x y = x\"\n  and max_mono: \"x \\<succeq> y \\<Longrightarrow> x \\<in> carrier R \\<Longrightarrow> y \\<in> carrier R \\<Longrightarrow> z \\<in> carrier R \\<Longrightarrow> Max z x \\<succeq> Max z y\"\n  and wf_max[simp, intro]: \"x \\<in> carrier R \\<Longrightarrow> y \\<in> carrier R \\<Longrightarrow> Max x y \\<in> carrier R\"\n  and one_geq_zero: \"\\<one> \\<succeq> \\<zero>\"\nbegin"], ["", "lemma max_ge_right: assumes x: \"x \\<in> carrier R\" and y: \"y \\<in> carrier R\" shows \"Max x y \\<succeq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max x y \\<succeq> y", "by (unfold max_comm[OF x y], rule max_ge[OF y x])"], ["", "lemma wf_max0: \"x \\<in> carrier R \\<Longrightarrow> Max \\<zero> x \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier R \\<Longrightarrow> Max \\<zero> x \\<in> carrier R", "using wf_max[of \\<zero> x]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<zero> \\<in> carrier R; x \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> Max \\<zero> x \\<in> carrier R\n\ngoal (1 subgoal):\n 1. x \\<in> carrier R \\<Longrightarrow> Max \\<zero> x \\<in> carrier R", "by auto"], ["", "lemma max0_id_pos: assumes x: \"x \\<succeq> \\<zero>\" and wf: \"x \\<in> carrier R\"\n  shows \"Max \\<zero> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max \\<zero> x = x", "unfolding max_comm[OF zero_closed wf]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Max x \\<zero> = x", "by (rule max_id[OF wf zero_closed x])"], ["", "end"], ["", "hide_const (open) gt geq max"], ["", "subsection \\<open>A connection between class based semirings and set based semirings\\<close>"], ["", "definition class_semiring :: \"'a itself \\<Rightarrow> 'b \\<Rightarrow> ('a :: {plus,times,one,zero},'b)ring_scheme\" where\n  \"class_semiring _ b \\<equiv> \\<lparr> carrier = UNIV, mult = (*), one = 1, zero = 0, add = (+), \\<dots> = b\\<rparr>\""], ["", "lemma class_semiring: \"semiring (class_semiring (TYPE('a :: ordered_semiring_1)) b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semiring (class_semiring TYPE('a) b)", "unfolding class_semiring_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. semiring\n     \\<lparr>carrier = UNIV, mult = (*), one = 1::'a, zero = 0::'a,\n        add = (+), \\<dots> = b\\<rparr>", "by (unfold_locales, auto simp: field_simps)"], ["", "definition class_ordered_semiring :: \"'a itself \\<Rightarrow> ('a :: ordered_semiring_1 \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'b \\<Rightarrow> ('a,'b) ordered_semiring_scheme\" where\n  \"class_ordered_semiring a gt b \\<equiv> class_semiring a \\<lparr>\n    ordered_semiring.geq = (\\<ge>),\n    gt = gt,\n    max = max,\n    \\<dots> = b\\<rparr>\""], ["", "lemma class_ordered_semiring: assumes \"order_pair (gt :: ('a :: ordered_semiring_1 \\<Rightarrow> 'a \\<Rightarrow> bool)) d\"\n  shows \"ordered_semiring \n    (class_ordered_semiring (TYPE('a)) gt b)\" \n  (is \"ordered_semiring ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered_semiring (class_ordered_semiring TYPE('a) gt b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ordered_semiring (class_ordered_semiring TYPE('a) gt b)", "interpret order_pair gt d"], ["proof (prove)\ngoal (1 subgoal):\n 1. order_pair gt d", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. ordered_semiring (class_ordered_semiring TYPE('a) gt b)", "interpret semiring ?R"], ["proof (prove)\ngoal (1 subgoal):\n 1. semiring (class_ordered_semiring TYPE('a) gt b)", "unfolding class_ordered_semiring_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. semiring\n     (class_semiring TYPE('a)\n       \\<lparr>ordered_semiring.geq = \\<lambda>x y. y \\<le> x, gt = gt,\n          max = max, \\<dots> = b\\<rparr>)", "by (rule class_semiring)"], ["proof (state)\ngoal (1 subgoal):\n 1. ordered_semiring (class_ordered_semiring TYPE('a) gt b)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered_semiring (class_ordered_semiring TYPE('a) gt b)", "by (unfold_locales, unfold class_ordered_semiring_def class_semiring_def, auto\n    intro: compat compat2 gt_imp_ge ge_trans max_comm max_id max_mono ge_refl one_ge_zero\n     times_left_mono times_right_mono plus_left_mono)"], ["proof (state)\nthis:\n  ordered_semiring (class_ordered_semiring TYPE('a) gt b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in one_mono_ordered_semiring_1) class_ordered_semiring:  \n  \"ordered_semiring \n    (class_ordered_semiring (TYPE('a)) (\\<succ>) b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered_semiring (class_ordered_semiring TYPE('a) (\\<succ>) b)", "by (rule class_ordered_semiring[of _ default], unfold_locales)"], ["", "lemma (in both_mono_ordered_semiring_1) class_ordered_semiring:  \n  \"ordered_semiring \n    (class_ordered_semiring (TYPE('a)) (\\<succ>) b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered_semiring (class_ordered_semiring TYPE('a) (\\<succ>) b)", "by (rule class_ordered_semiring[of _ default], unfold_locales)"], ["", "end"]]}