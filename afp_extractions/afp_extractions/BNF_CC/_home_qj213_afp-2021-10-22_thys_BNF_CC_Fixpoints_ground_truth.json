{"file_name": "/home/qj213/afp-2021-10-22/thys/BNF_CC/Fixpoints.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/BNF_CC", "problem_names": ["lemma rell_T_alt_def: \"rell_T L1 = rel_T L1 (=) (=) (=) (=)\"", "lemma mapl_T_alt_def: \"mapl_T l1 = map_T l1 id id id id\"", "lemma rel_T_mono [mono]:\n  \"\\<lbrakk> L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2'; Contra1' \\<le> Contra1; Contra2' \\<le> Contra2 \\<rbrakk> \\<Longrightarrow>\n  rel_T L1 Co1 Co2 Contra1 Contra2 \\<le> rel_T L1' Co1' Co2' Contra1' Contra2'\"", "lemma rel_T_eq: \"rel_T (=) (=) (=) (=) (=) = (=)\"", "lemma rel_T_conversep:\n  \"rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse> Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse> Contra2\\<inverse>\\<inverse> = (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse>\"", "lemma map_T_id0: \"map_T id id id id id = id\"", "lemma map_T_id: \"map_T id id id id id x = x\"", "lemma map_T_comp: \"map_T l1 co1 co2 contra1 contra2 \\<circ> map_T l1' co1' co2' contra1' contra2' =\n  map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2') (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\"", "lemma map_T_parametric: \"rel_fun (rel_fun L1 L1')\n  (rel_fun (rel_fun Co1 Co1') (rel_fun (rel_fun Co2 Co2')\n  (rel_fun (rel_fun Contra1' Contra1) (rel_fun (rel_fun Contra2' Contra2)\n  (rel_fun (rel_T L1 Co1 Co2 Contra1 Contra2) (rel_T L1' Co1' Co2' Contra1' Contra2'))))))\n  map_T map_T\"", "lemma rel_T_pos_distr_imp:\n  fixes Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n      ('l1', 'co1', 'co2', 'contra1', 'contra2', 'f) T \\<times>\n      ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T \\<times> 'l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n    and tytok_T :: \"('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n  assumes \"rel_G_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n  shows \"rel_T_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_T\"", "lemma\n  fixes L1 :: \"'l1 \\<Rightarrow> 'l1'' \\<Rightarrow> bool\"\n    and Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"((('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n         (('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T\n          \\<Rightarrow> ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T)) \\<times>\n        ((('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n          (('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T\n           \\<Rightarrow> ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T)) \\<times>\n         ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T) \\<times>\n        ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T \\<times>\n        'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and x :: \"(_, _, _, _, _, 'f) T\"\n  assumes cond: \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n    and rel_OO: \"rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2') x y\"\n  shows rel_T_witness1: \"rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2 x\n      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x y)\"\n    and rel_T_witness2: \"rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1' Contra2'\n      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x y) y\"", "lemma rel_T_neg_distr_imp:\n  fixes Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"((('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n         (('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T\n          \\<Rightarrow> ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T)) \\<times>\n        ((('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n          (('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T\n           \\<Rightarrow> ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T)) \\<times>\n         ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T) \\<times>\n        ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T \\<times>\n        'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and tytok_T :: \"('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n  assumes \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n  shows \"rel_T_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_T\"", "lemma rel_T_pos_distr_cond_eq:\n  \"\\<And>tytok. rel_T_pos_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok\"", "lemma rel_T_neg_distr_cond_eq:\n  \"\\<And>tytok. rel_T_neg_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok\"", "lemma C_T_parametric: \"(rel_G (rel_T L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2 ===>\n  rel_T L1 Co1 Co2 Contra1 Contra2) C_T C_T\"", "lemma D_T_parametric: \"(rel_T L1 Co1 Co2 Contra1 Contra2 ===>\n  rel_G (rel_T L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2) D_T D_T\"", "lemma rec_T_parametric:\n  \"((rel_G (rel_prod (rel_T L1 Co1 Co2 Contra1 Contra2) A) L1 Co1 Co2 Contra1 Contra2 ===> A) ===>\n  rel_T L1 Co1 Co2 Contra1 Contra2 ===> A) rec_T rec_T\"", "lemma rell_U_alt_def: \"rell_U L1 = rel_U L1 (=) (=) (=) (=)\"", "lemma mapl_U_alt_def: \"mapl_U l1 = map_U l1 id id id id\"", "lemma rel_U_mono [mono]:\n  \"\\<lbrakk> L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2'; Contra1' \\<le> Contra1; Contra2' \\<le> Contra2 \\<rbrakk> \\<Longrightarrow>\n  rel_U L1 Co1 Co2 Contra1 Contra2 \\<le> rel_U L1' Co1' Co2' Contra1' Contra2'\"", "lemma rel_U_eq: \"rel_U (=) (=) (=) (=) (=) = (=)\"", "lemma rel_U_conversep:\n  \"rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse> Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse> Contra2\\<inverse>\\<inverse> = (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse>\"", "lemma map_U_id0: \"map_U id id id id id = id\"", "lemma map_U_id: \"map_U id id id id id x = x\"", "lemma map_U_comp: \"map_U l1 co1 co2 contra1 contra2 \\<circ> map_U l1' co1' co2' contra1' contra2' =\n  map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2') (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\"", "lemma map_U_parametric: \"rel_fun (rel_fun L1 L1')\n  (rel_fun (rel_fun Co1 Co1') (rel_fun (rel_fun Co2 Co2')\n  (rel_fun (rel_fun Contra1' Contra1) (rel_fun (rel_fun Contra2' Contra2)\n  (rel_fun (rel_U L1 Co1 Co2 Contra1 Contra2) (rel_U L1' Co1' Co2' Contra1' Contra2'))))))\n  map_U map_U\"", "lemma rel_U_pos_distr_imp:\n  fixes Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n      ('l1', 'co1', 'co2', 'contra1', 'contra2', 'f) U \\<times>\n      ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<times> 'l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n    and tytok_T :: \"('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n  assumes \"rel_G_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n  shows \"rel_U_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_T\"", "lemma rel_U_witness1:\n  fixes L1 :: \"'l1 \\<Rightarrow> 'l1'' \\<Rightarrow> bool\"\n    and Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n             (('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n              ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U) \\<times>\n             ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<times>\n             'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and x :: \"(_, _, _, _, _, 'f) U\"\n  assumes cond: \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n    and rel_OO: \"rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2') x y\"\n  shows \"rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2 x\n      (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' (x, y))\"", "lemma rel_U_witness2:\n  fixes L1 :: \"'l1 \\<Rightarrow> 'l1'' \\<Rightarrow> bool\"\n    and Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n             (('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n              ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U) \\<times>\n             ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<times>\n             'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and x :: \"(_, _, _, _, _, 'f) U\"\n  assumes cond: \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n    and rel_OO: \"rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2') x y\"\n  shows \"rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1' Contra2'\n      (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' (x, y)) y\"", "lemma rel_U_neg_distr_imp:\n  fixes Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n          (('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n           ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U) \\<times>\n          ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<times>\n          'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and tytok_T :: \"('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n  assumes \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n  shows \"rel_U_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_T\"", "lemma rel_U_pos_distr_cond_eq:\n  \"\\<And>tytok. rel_U_pos_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok\"", "lemma rel_U_neg_distr_cond_eq:\n  \"\\<And>tytok. rel_U_neg_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok\"", "lemma C_U_parametric: \"(rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2 ===>\n  rel_U L1 Co1 Co2 Contra1 Contra2) C_U C_U\"", "lemma D_U_parametric: \"(rel_U L1 Co1 Co2 Contra1 Contra2 ===>\n  rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2) D_U D_U\"", "lemma corec_U_parametric:\n  \"((A ===> rel_G (rel_sum (rel_U L1 Co1 Co2 Contra1 Contra2) A) L1 Co1 Co2 Contra1 Contra2) ===>\n  A ===> rel_U L1 Co1 Co2 Contra1 Contra2) corec_U corec_U\""], "translations": [["", "lemma rell_T_alt_def: \"rell_T L1 = rel_T L1 (=) (=) (=) (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rell_T L1 = rel_T L1 (=) (=) (=) (=)", "apply (intro ext iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       rell_T L1 x xa \\<Longrightarrow> rel_T L1 (=) (=) (=) (=) x xa\n 2. \\<And>x xa.\n       rel_T L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_T L1 x xa", "apply (erule T.rel_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa a b.\n       rell_G (rel_T L1 (=) (=) (=) (=)) L1 a b \\<Longrightarrow>\n       rel_T L1 (=) (=) (=) (=) (C_T a) (C_T b)\n 2. \\<And>x xa.\n       rel_T L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_T L1 x xa", "apply (unfold rell_G_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa a b.\n       rel_G (rel_T L1 (=) (=) (=) (=)) L1 (=) (=) (=) (=) a\n        b \\<Longrightarrow>\n       rel_T L1 (=) (=) (=) (=) (C_T a) (C_T b)\n 2. \\<And>x xa.\n       rel_T L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_T L1 x xa", "apply (erule rel_T.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       rel_T L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_T L1 x xa", "apply (erule rel_T.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 (=) (=) (=) (=) x1 x2 \\<and> rell_T L1 x1 x2)\n        L1 (=) (=) (=) (=) xb y \\<Longrightarrow>\n       rell_T L1 (C_T xb) (C_T y)", "apply (rule T.rel_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 (=) (=) (=) (=) x1 x2 \\<and> rell_T L1 x1 x2)\n        L1 (=) (=) (=) (=) xb y \\<Longrightarrow>\n       rell_G (rell_T L1) L1 xb y", "apply (unfold rell_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 (=) (=) (=) (=) x1 x2 \\<and> rell_T L1 x1 x2)\n        L1 (=) (=) (=) (=) xb y \\<Longrightarrow>\n       rel_G (rell_T L1) L1 (=) (=) (=) (=) xb y", "apply (erule rel_G_mono')"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x xa xb y.\n       (\\<lambda>x1 x2.\n           rel_T L1 (=) (=) (=) (=) x1 x2 \\<and> rell_T L1 x1 x2)\n       \\<le> rell_T L1\n 2. \\<And>x xa xb y. L1 \\<le> L1\n 3. \\<And>x xa xb y. (=) \\<le> (=)\n 4. \\<And>x xa xb y. (=) \\<le> (=)\n 5. \\<And>x xa xb y. (=) \\<le> (=)\n 6. \\<And>x xa xb y. (=) \\<le> (=)", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mapl_T_alt_def: \"mapl_T l1 = map_T l1 id id id id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mapl_T l1 = map_T l1 id id id id", "supply id_apply[simp del]"], ["proof (prove)\ngoal (1 subgoal):\n 1. mapl_T l1 = map_T l1 id id id id", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. mapl_T l1 x = map_T l1 id id id id x", "subgoal for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. mapl_T l1 x = map_T l1 id id id id x", "apply (induction x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>xaa.\n           xaa \\<in> set1_G xa \\<Longrightarrow>\n           mapl_T l1 xaa = map_T l1 id id id id xaa) \\<Longrightarrow>\n       mapl_T l1 (C_T xa) = map_T l1 id id id id (C_T xa)", "apply (simp add: mapl_G_def map_G_comp[THEN fun_cong, simplified])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>xaa.\n           xaa \\<in> set1_G xa \\<Longrightarrow>\n           mapl_T l1 xaa = map_T l1 id id id id xaa) \\<Longrightarrow>\n       map_G (mapl_T l1) l1 id id id id xa =\n       map_G (map_T l1 id id id id) l1 id id id id xa", "apply (fold mapl_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>xaa.\n           xaa \\<in> set1_G xa \\<Longrightarrow>\n           mapl_T l1 xaa = map_T l1 id id id id xaa) \\<Longrightarrow>\n       mapl_G (mapl_T l1) l1 xa = mapl_G (map_T l1 id id id id) l1 xa", "apply (erule mapl_G_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa xaa. xaa \\<in> set2_G xa \\<Longrightarrow> l1 xaa = l1 xaa", "apply (rule refl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rel_T_mono [mono]:\n  \"\\<lbrakk> L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2'; Contra1' \\<le> Contra1; Contra2' \\<le> Contra2 \\<rbrakk> \\<Longrightarrow>\n  rel_T L1 Co1 Co2 Contra1 Contra2 \\<le> rel_T L1' Co1' Co2' Contra1' Contra2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n     Contra1' \\<le> Contra1; Contra2' \\<le> Contra2\\<rbrakk>\n    \\<Longrightarrow> rel_T L1 Co1 Co2 Contra1 Contra2\n                      \\<le> rel_T L1' Co1' Co2' Contra1' Contra2'", "apply (rule predicate2I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2;\n        rel_T L1 Co1 Co2 Contra1 Contra2 x y\\<rbrakk>\n       \\<Longrightarrow> rel_T L1' Co1' Co2' Contra1' Contra2' x y", "apply (erule rel_T.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2;\n        rel_G\n         (\\<lambda>x1 x2.\n             rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n             rel_T L1' Co1' Co2' Contra1' Contra2' x1 x2)\n         L1 Co1 Co2 Contra1 Contra2 xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_T L1' Co1' Co2' Contra1' Contra2' (C_T xa)\n                          (C_T ya)", "apply (rule rel_T.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2;\n        rel_G\n         (\\<lambda>x1 x2.\n             rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n             rel_T L1' Co1' Co2' Contra1' Contra2' x1 x2)\n         L1 Co1 Co2 Contra1 Contra2 xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_G (rel_T L1' Co1' Co2' Contra1' Contra2') L1'\n                          Co1' Co2' Contra1' Contra2' xa ya", "apply (erule rel_G_mono')"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x1 x2.\n                             rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n                             rel_T L1' Co1' Co2' Contra1' Contra2' x1 x2)\n                         \\<le> rel_T L1' Co1' Co2' Contra1' Contra2'\n 2. \\<And>x y xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2\\<rbrakk>\n       \\<Longrightarrow> L1 \\<le> L1'\n 3. \\<And>x y xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2\\<rbrakk>\n       \\<Longrightarrow> Co1 \\<le> Co1'\n 4. \\<And>x y xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2\\<rbrakk>\n       \\<Longrightarrow> Co2 \\<le> Co2'\n 5. \\<And>x y xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2\\<rbrakk>\n       \\<Longrightarrow> Contra1' \\<le> Contra1\n 6. \\<And>x y xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2\\<rbrakk>\n       \\<Longrightarrow> Contra2' \\<le> Contra2", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rel_T_eq: \"rel_T (=) (=) (=) (=) (=) = (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T (=) (=) (=) (=) (=) = (=)", "unfolding rell_T_alt_def[symmetric] T.rel_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) = (=)", ".."], ["", "lemma rel_T_conversep:\n  \"rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse> Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse> Contra2\\<inverse>\\<inverse> = (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n     Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n     Contra2\\<inverse>\\<inverse> =\n    (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse>", "apply (intro ext iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa \\<Longrightarrow>\n       (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x xa\n 2. \\<And>x xa.\n       (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa \\<Longrightarrow>\n       rel_T L1 Co1 Co2 Contra1 Contra2 xa x\n 2. \\<And>x xa.\n       (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (erule rel_T.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n             Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n             Contra2\\<inverse>\\<inverse> x1 x2 \\<and>\n            rel_T L1 Co1 Co2 Contra1 Contra2 x2 x1)\n        L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> xb y \\<Longrightarrow>\n       rel_T L1 Co1 Co2 Contra1 Contra2 (C_T y) (C_T xb)\n 2. \\<And>x xa.\n       (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (rule rel_T.intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n             Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n             Contra2\\<inverse>\\<inverse> x1 x2 \\<and>\n            rel_T L1 Co1 Co2 Contra1 Contra2 x2 x1)\n        L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> xb y \\<Longrightarrow>\n       rel_G (rel_T L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2 y\n        xb\n 2. \\<And>x xa.\n       (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (rewrite conversep_iff[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n             Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n             Contra2\\<inverse>\\<inverse> x1 x2 \\<and>\n            rel_T L1 Co1 Co2 Contra1 Contra2 x2 x1)\n        L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> xb y \\<Longrightarrow>\n       (rel_G (rel_T L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1\n         Contra2)\\<inverse>\\<inverse>\n        xb y\n 2. \\<And>x xa.\n       (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (fold rel_G_conversep)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n             Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n             Contra2\\<inverse>\\<inverse> x1 x2 \\<and>\n            rel_T L1 Co1 Co2 Contra1 Contra2 x2 x1)\n        L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> xb y \\<Longrightarrow>\n       rel_G (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse>\n        L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> xb y\n 2. \\<And>x xa.\n       (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (erule rel_G_mono'; blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       (rel_T L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       rel_T L1 Co1 Co2 Contra1 Contra2 xa x \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (erule rel_T.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n            rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n             Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n             Contra2\\<inverse>\\<inverse> x2 x1)\n        L1 Co1 Co2 Contra1 Contra2 xb y \\<Longrightarrow>\n       rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> (C_T y) (C_T xb)", "apply (rule rel_T.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n            rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n             Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n             Contra2\\<inverse>\\<inverse> x2 x1)\n        L1 Co1 Co2 Contra1 Contra2 xb y \\<Longrightarrow>\n       rel_G\n        (rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n          Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n          Contra2\\<inverse>\\<inverse>)\n        L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> y xb", "apply (rewrite conversep_iff[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n            rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n             Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n             Contra2\\<inverse>\\<inverse> x2 x1)\n        L1 Co1 Co2 Contra1 Contra2 xb y \\<Longrightarrow>\n       (rel_G\n         (rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n           Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n           Contra2\\<inverse>\\<inverse>)\n         L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n         Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n         Contra2\\<inverse>\\<inverse>)\\<inverse>\\<inverse>\n        xb y", "apply (unfold rel_G_conversep[symmetric] conversep_conversep)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n            rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n             Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n             Contra2\\<inverse>\\<inverse> x2 x1)\n        L1 Co1 Co2 Contra1 Contra2 xb y \\<Longrightarrow>\n       rel_G\n        (rel_T L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n          Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n          Contra2\\<inverse>\\<inverse>)\\<inverse>\\<inverse>\n        L1 Co1 Co2 Contra1 Contra2 xb y", "apply (erule rel_G_mono'; blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma map_T_id0: \"map_T id id id id id = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_T id id id id id = id", "unfolding mapl_T_alt_def[symmetric] T.map_id0"], ["proof (prove)\ngoal (1 subgoal):\n 1. id = id", ".."], ["", "lemma map_T_id: \"map_T id id id id id x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_T id id id id id x = x", "by (simp add: map_T_id0)"], ["", "lemma map_T_comp: \"map_T l1 co1 co2 contra1 contra2 \\<circ> map_T l1' co1' co2' contra1' contra2' =\n  map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2') (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_T l1 co1 co2 contra1 contra2 \\<circ>\n    map_T l1' co1' co2' contra1' contra2' =\n    map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n     (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (map_T l1 co1 co2 contra1 contra2 \\<circ>\n        map_T l1' co1' co2' contra1' contra2')\n        x =\n       map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n        (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x", "subgoal for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (map_T l1 co1 co2 contra1 contra2 \\<circ>\n     map_T l1' co1' co2' contra1' contra2')\n     x =\n    map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n     (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x", "apply (induction x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>xaa.\n           xaa \\<in> set1_G xa \\<Longrightarrow>\n           (map_T l1 co1 co2 contra1 contra2 \\<circ>\n            map_T l1' co1' co2' contra1' contra2')\n            xaa =\n           map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n            (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\n            xaa) \\<Longrightarrow>\n       (map_T l1 co1 co2 contra1 contra2 \\<circ>\n        map_T l1' co1' co2' contra1' contra2')\n        (C_T xa) =\n       map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n        (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) (C_T xa)", "apply (simp add: mapl_G_def map_G_comp[THEN fun_cong, simplified])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>xaa.\n           xaa \\<in> set1_G xa \\<Longrightarrow>\n           map_T l1 co1 co2 contra1 contra2\n            (map_T l1' co1' co2' contra1' contra2' xaa) =\n           map_T (\\<lambda>a. l1 (l1' a)) (\\<lambda>a. co1 (co1' a))\n            (\\<lambda>a. co2 (co2' a)) (\\<lambda>a. contra1' (contra1 a))\n            (\\<lambda>a. contra2' (contra2 a)) xaa) \\<Longrightarrow>\n       map_G\n        (map_T l1 co1 co2 contra1 contra2 \\<circ>\n         map_T l1' co1' co2' contra1' contra2')\n        (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n        (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) xa =\n       map_G\n        (map_T (\\<lambda>a. l1 (l1' a)) (\\<lambda>a. co1 (co1' a))\n          (\\<lambda>a. co2 (co2' a)) (\\<lambda>a. contra1' (contra1 a))\n          (\\<lambda>a. contra2' (contra2 a)))\n        (\\<lambda>a. l1 (l1' a)) (\\<lambda>a. co1 (co1' a))\n        (\\<lambda>a. co2 (co2' a)) (\\<lambda>a. contra1' (contra1 a))\n        (\\<lambda>a. contra2' (contra2 a)) xa", "apply (fold comp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>xaa.\n           xaa \\<in> set1_G xa \\<Longrightarrow>\n           map_T l1 co1 co2 contra1 contra2\n            (map_T l1' co1' co2' contra1' contra2' xaa) =\n           map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n            (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\n            xaa) \\<Longrightarrow>\n       map_G\n        (map_T l1 co1 co2 contra1 contra2 \\<circ>\n         map_T l1' co1' co2' contra1' contra2')\n        (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n        (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) xa =\n       map_G\n        (map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n          (contra1' \\<circ> contra1) (contra2' \\<circ> contra2))\n        (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n        (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) xa", "apply (subst (1 2) map_G_mapl_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>xaa.\n           xaa \\<in> set1_G xa \\<Longrightarrow>\n           map_T l1 co1 co2 contra1 contra2\n            (map_T l1' co1' co2' contra1' contra2' xaa) =\n           map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n            (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\n            xaa) \\<Longrightarrow>\n       map_G id id (co1 \\<circ> co1') (co2 \\<circ> co2')\n        (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\n        (mapl_G\n          (map_T l1 co1 co2 contra1 contra2 \\<circ>\n           map_T l1' co1' co2' contra1' contra2')\n          (l1 \\<circ> l1') xa) =\n       map_G id id (co1 \\<circ> co1') (co2 \\<circ> co2')\n        (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\n        (mapl_G\n          (map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n            (contra1' \\<circ> contra1) (contra2' \\<circ> contra2))\n          (l1 \\<circ> l1') xa)", "apply (rule arg_cong[where f=\"map_G _ _ _ _ _ _\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>xaa.\n           xaa \\<in> set1_G xa \\<Longrightarrow>\n           map_T l1 co1 co2 contra1 contra2\n            (map_T l1' co1' co2' contra1' contra2' xaa) =\n           map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n            (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\n            xaa) \\<Longrightarrow>\n       mapl_G\n        (map_T l1 co1 co2 contra1 contra2 \\<circ>\n         map_T l1' co1' co2' contra1' contra2')\n        (l1 \\<circ> l1') xa =\n       mapl_G\n        (map_T (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n          (contra1' \\<circ> contra1) (contra2' \\<circ> contra2))\n        (l1 \\<circ> l1') xa", "apply (rule mapl_G_cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>xaa.\n                   xaa \\<in> set1_G xa \\<Longrightarrow>\n                   map_T l1 co1 co2 contra1 contra2\n                    (map_T l1' co1' co2' contra1' contra2' xaa) =\n                   map_T (l1 \\<circ> l1') (co1 \\<circ> co1')\n                    (co2 \\<circ> co2') (contra1' \\<circ> contra1)\n                    (contra2' \\<circ> contra2) xaa;\n        z \\<in> set1_G xa\\<rbrakk>\n       \\<Longrightarrow> (map_T l1 co1 co2 contra1 contra2 \\<circ>\n                          map_T l1' co1' co2' contra1' contra2')\n                          z =\n                         map_T (l1 \\<circ> l1') (co1 \\<circ> co1')\n                          (co2 \\<circ> co2') (contra1' \\<circ> contra1)\n                          (contra2' \\<circ> contra2) z\n 2. \\<And>xa z.\n       \\<lbrakk>\\<And>xaa.\n                   xaa \\<in> set1_G xa \\<Longrightarrow>\n                   map_T l1 co1 co2 contra1 contra2\n                    (map_T l1' co1' co2' contra1' contra2' xaa) =\n                   map_T (l1 \\<circ> l1') (co1 \\<circ> co1')\n                    (co2 \\<circ> co2') (contra1' \\<circ> contra1)\n                    (contra2' \\<circ> contra2) xaa;\n        z \\<in> set2_G xa\\<rbrakk>\n       \\<Longrightarrow> (l1 \\<circ> l1') z = (l1 \\<circ> l1') z", "apply (simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma map_T_parametric: \"rel_fun (rel_fun L1 L1')\n  (rel_fun (rel_fun Co1 Co1') (rel_fun (rel_fun Co2 Co2')\n  (rel_fun (rel_fun Contra1' Contra1) (rel_fun (rel_fun Contra2' Contra2)\n  (rel_fun (rel_T L1 Co1 Co2 Contra1 Contra2) (rel_T L1' Co1' Co2' Contra1' Contra2'))))))\n  map_T map_T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_fun (rel_fun L1 L1')\n     (rel_fun (rel_fun Co1 Co1')\n       (rel_fun (rel_fun Co2 Co2')\n         (rel_fun (rel_fun Contra1' Contra1)\n           (rel_fun (rel_fun Contra2' Contra2)\n             (rel_fun (rel_T L1 Co1 Co2 Contra1 Contra2)\n               (rel_T L1' Co1' Co2' Contra1' Contra2'))))))\n     map_T map_T", "apply (intro rel_funI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya xb yb xc yc xd yd xe ye.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd;\n        rel_T L1 Co1 Co2 Contra1 Contra2 xe ye\\<rbrakk>\n       \\<Longrightarrow> rel_T L1' Co1' Co2' Contra1' Contra2'\n                          (map_T x xa xb xc xd xe) (map_T y ya yb yc yd ye)", "apply (erule rel_T.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya xb yb xc yc xd yd xe ye xf yf.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd;\n        rel_G\n         (\\<lambda>x1 x2.\n             rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n             rel_T L1' Co1' Co2' Contra1' Contra2' (map_T x xa xb xc xd x1)\n              (map_T y ya yb yc yd x2))\n         L1 Co1 Co2 Contra1 Contra2 xf yf\\<rbrakk>\n       \\<Longrightarrow> rel_T L1' Co1' Co2' Contra1' Contra2'\n                          (map_T x xa xb xc xd (C_T xf))\n                          (map_T y ya yb yc yd (C_T yf))", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya xb yb xc yc xd yd xf yf.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd;\n        rel_G\n         (\\<lambda>x1 x2.\n             rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n             rel_T L1' Co1' Co2' Contra1' Contra2' (map_T x xa xb xc xd x1)\n              (map_T y ya yb yc yd x2))\n         L1 Co1 Co2 Contra1 Contra2 xf yf\\<rbrakk>\n       \\<Longrightarrow> rel_T L1' Co1' Co2' Contra1' Contra2'\n                          (C_T (map_G id id xa xb xc xd\n                                 (mapl_G (map_T x xa xb xc xd) x xf)))\n                          (C_T (map_G id id ya yb yc yd\n                                 (mapl_G (map_T y ya yb yc yd) y yf)))", "apply (rule rel_T.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya xb yb xc yc xd yd xf yf.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd;\n        rel_G\n         (\\<lambda>x1 x2.\n             rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n             rel_T L1' Co1' Co2' Contra1' Contra2' (map_T x xa xb xc xd x1)\n              (map_T y ya yb yc yd x2))\n         L1 Co1 Co2 Contra1 Contra2 xf yf\\<rbrakk>\n       \\<Longrightarrow> rel_G (rel_T L1' Co1' Co2' Contra1' Contra2') L1'\n                          Co1' Co2' Contra1' Contra2'\n                          (map_G id id xa xb xc xd\n                            (mapl_G (map_T x xa xb xc xd) x xf))\n                          (map_G id id ya yb yc yd\n                            (mapl_G (map_T y ya yb yc yd) y yf))", "apply (fold map_G_mapl_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya xb yb xc yc xd yd xf yf.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd;\n        rel_G\n         (\\<lambda>x1 x2.\n             rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n             rel_T L1' Co1' Co2' Contra1' Contra2' (map_T x xa xb xc xd x1)\n              (map_T y ya yb yc yd x2))\n         L1 Co1 Co2 Contra1 Contra2 xf yf\\<rbrakk>\n       \\<Longrightarrow> rel_G (rel_T L1' Co1' Co2' Contra1' Contra2') L1'\n                          Co1' Co2' Contra1' Contra2'\n                          (map_G (map_T x xa xb xc xd) x xa xb xc xd xf)\n                          (map_G (map_T y ya yb yc yd) y ya yb yc yd yf)", "apply (erule map_G_rel_cong)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y xa ya xb yb xc yc xd yd xf yf xe ye.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd;\n        rel_T L1 Co1 Co2 Contra1 Contra2 xe ye \\<and>\n        rel_T L1' Co1' Co2' Contra1' Contra2' (map_T x xa xb xc xd xe)\n         (map_T y ya yb yc yd ye)\\<rbrakk>\n       \\<Longrightarrow> rel_T L1' Co1' Co2' Contra1' Contra2'\n                          (map_T x xa xb xc xd xe) (map_T y ya yb yc yd ye)\n 2. \\<And>x y xa ya xb yb xc yc xd yd xf yf xe ye.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd; L1 xe ye\\<rbrakk>\n       \\<Longrightarrow> L1' (x xe) (y ye)\n 3. \\<And>x y xa ya xb yb xc yc xd yd xf yf xe ye.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd; Co1 xe ye\\<rbrakk>\n       \\<Longrightarrow> Co1' (xa xe) (ya ye)\n 4. \\<And>x y xa ya xb yb xc yc xd yd xf yf xe ye.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd; Co2 xe ye\\<rbrakk>\n       \\<Longrightarrow> Co2' (xb xe) (yb ye)\n 5. \\<And>x y xa ya xb yb xc yc xd yd xf yf xe ye.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd; Contra1' xe ye\\<rbrakk>\n       \\<Longrightarrow> Contra1 (xc xe) (yc ye)\n 6. \\<And>x y xa ya xb yb xc yc xd yd xf yf xe ye.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd; Contra2' xe ye\\<rbrakk>\n       \\<Longrightarrow> Contra2 (xd xe) (yd ye)", "apply (blast elim: rel_funE)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition rel_T_pos_distr_cond :: \"('co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool) \\<Rightarrow> ('co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool) \\<Rightarrow> ('co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool) \\<Rightarrow> ('contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool) \\<Rightarrow> ('contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself \\<Rightarrow> bool\" where\n  \"rel_T_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' _ \\<longleftrightarrow>\n  (\\<forall>(L1 :: 'l1 \\<Rightarrow> 'l1' \\<Rightarrow> bool) (L1' :: 'l1' \\<Rightarrow> 'l1'' \\<Rightarrow> bool).\n    (rel_T L1 Co1 Co2 Contra1 Contra2 :: (_, _, _, _, _, 'f) T \\<Rightarrow> _) OO\n      rel_T L1' Co1' Co2' Contra1' Contra2' \\<le>\n    rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2'))\""], ["", "definition rel_T_neg_distr_cond :: \"('co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool) \\<Rightarrow> ('co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool) \\<Rightarrow> ('co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool) \\<Rightarrow> ('contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool) \\<Rightarrow> ('contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself \\<Rightarrow> bool\" where\n  \"rel_T_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' _ \\<longleftrightarrow>\n  (\\<forall>(L1 :: 'l1 \\<Rightarrow> 'l1' \\<Rightarrow> bool) (L1' :: 'l1' \\<Rightarrow> 'l1'' \\<Rightarrow> bool).\n    rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2') \\<le>\n    (rel_T L1 Co1 Co2 Contra1 Contra2 :: (_, _, _, _, _, 'f) T \\<Rightarrow> _) OO\n      rel_T L1' Co1' Co2' Contra1' Contra2')\""], ["", "text \\<open>\n  We inherit the conditions for subdistributivity over relation composition via\n  a composition witness, which is derived from a witness for the underlying functor @{type G}.\n\\<close>"], ["", "primrec rel_T_witness :: \"('l1 \\<Rightarrow> 'l1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool) \\<Rightarrow> ('co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool) \\<Rightarrow> ('co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool) \\<Rightarrow> ('contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool) \\<Rightarrow> ('contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<Rightarrow>\n    ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T \\<Rightarrow>\n    ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T\" where\n  \"rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' (C_T x) Cy = C_T\n  (mapl_G (\\<lambda>((x, f), y). f y) id\n    (rel_G_witness (\\<lambda>(x, f) y. rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2 x (f y) \\<and>\n      rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1' Contra2' (f y) y)\n    L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n    (mapl_G (\\<lambda>x. (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x)) id x,\n      D_T Cy)))\""], ["", "lemma rel_T_pos_distr_imp:\n  fixes Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n      ('l1', 'co1', 'co2', 'contra1', 'contra2', 'f) T \\<times>\n      ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T \\<times> 'l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n    and tytok_T :: \"('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n  assumes \"rel_G_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n  shows \"rel_T_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n     tytok_T", "unfolding rel_T_pos_distr_cond_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>L1 L1'.\n       rel_T L1 Co1 Co2 Contra1 Contra2 OO\n       rel_T L1' Co1' Co2' Contra1' Contra2'\n       \\<le> rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n              (Contra1 OO Contra1') (Contra2 OO Contra2')", "apply (intro allI predicate2I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L1 L1' x y.\n       (rel_T L1 Co1 Co2 Contra1 Contra2 OO\n        rel_T L1' Co1' Co2' Contra1' Contra2')\n        x y \\<Longrightarrow>\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y", "apply (erule relcomppE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L1 L1' x y b.\n       \\<lbrakk>rel_T L1 Co1 Co2 Contra1 Contra2 x b;\n        rel_T L1' Co1' Co2' Contra1' Contra2' b y\\<rbrakk>\n       \\<Longrightarrow> rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2') x y", "subgoal premises prems for L1 L1' x z y"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x z", "using prems"], ["proof (prove)\nusing this:\n  rel_T L1 Co1 Co2 Contra1 Contra2 x y\n  rel_T L1' Co1' Co2' Contra1' Contra2' y z\n\ngoal (1 subgoal):\n 1. rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x z", "apply (induction arbitrary: z)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n                     (\\<forall>x.\n                         rel_T L1' Co1' Co2' Contra1' Contra2' x2\n                          x \\<longrightarrow>\n                         rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2') x1 x))\n                 L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_T L1' Co1' Co2' Contra1' Contra2' (C_T y) z\\<rbrakk>\n       \\<Longrightarrow> rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2')\n                          (C_T x) z", "apply (erule rel_T.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n                     (\\<forall>x.\n                         rel_T L1' Co1' Co2' Contra1' Contra2' x2\n                          x \\<longrightarrow>\n                         rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2') x1 x))\n                 L1 Co1 Co2 Contra1 Contra2 x y;\n        C_T y = C_T xa; z = C_T ya;\n        rel_G (rel_T L1' Co1' Co2' Contra1' Contra2') L1' Co1' Co2' Contra1'\n         Contra2' xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2')\n                          (C_T x) z", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n                     (\\<forall>x.\n                         rel_T L1' Co1' Co2' Contra1' Contra2' x2\n                          x \\<longrightarrow>\n                         rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2') x1 x))\n                 L1 Co1 Co2 Contra1 Contra2 x xa;\n        y = xa; z = C_T ya;\n        rel_G (rel_T L1' Co1' Co2' Contra1' Contra2') L1' Co1' Co2' Contra1'\n         Contra2' xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2')\n                          (C_T x) (C_T ya)", "apply (rule rel_T.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n                     (\\<forall>x.\n                         rel_T L1' Co1' Co2' Contra1' Contra2' x2\n                          x \\<longrightarrow>\n                         rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2') x1 x))\n                 L1 Co1 Co2 Contra1 Contra2 x xa;\n        y = xa; z = C_T ya;\n        rel_G (rel_T L1' Co1' Co2' Contra1' Contra2') L1' Co1' Co2' Contra1'\n         Contra2' xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                            (Contra1 OO Contra1') (Contra2 OO Contra2'))\n                          (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2') x ya", "apply (drule (1) rel_G_pos_distr[THEN predicate2D, OF assms relcomppI])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya.\n       \\<lbrakk>y = xa; z = C_T ya;\n        rel_G (rel_T L1' Co1' Co2' Contra1' Contra2') L1' Co1' Co2' Contra1'\n         Contra2' xa ya;\n        rel_G\n         ((\\<lambda>x1 x2.\n              rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n              (\\<forall>x.\n                  rel_T L1' Co1' Co2' Contra1' Contra2' x2\n                   x \\<longrightarrow>\n                  rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                   (Contra1 OO Contra1') (Contra2 OO Contra2') x1 x)) OO\n          rel_T L1' Co1' Co2' Contra1' Contra2')\n         (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n         (Contra2 OO Contra2') x ya\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                            (Contra1 OO Contra1') (Contra2 OO Contra2'))\n                          (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2') x ya", "apply (erule rel_G_mono'; blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma\n  fixes L1 :: \"'l1 \\<Rightarrow> 'l1'' \\<Rightarrow> bool\"\n    and Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"((('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n         (('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T\n          \\<Rightarrow> ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T)) \\<times>\n        ((('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n          (('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T\n           \\<Rightarrow> ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T)) \\<times>\n         ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T) \\<times>\n        ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T \\<times>\n        'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and x :: \"(_, _, _, _, _, 'f) T\"\n  assumes cond: \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n    and rel_OO: \"rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2') x y\"\n  shows rel_T_witness1: \"rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2 x\n      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x y)\"\n    and rel_T_witness2: \"rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1' Contra2'\n      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x y) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     x (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         x y) &&&\n    rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n     Contra2'\n     (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x\n       y)\n     y", "using rel_OO"], ["proof (prove)\nusing this:\n  rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n   (Contra2 OO Contra2') x y\n\ngoal (1 subgoal):\n 1. rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     x (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         x y) &&&\n    rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n     Contra2'\n     (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x\n       y)\n     y", "apply (induction)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n             (Contra2 OO Contra2') x1 x2 \\<and>\n            rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n             Contra2 x1\n             (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n               Contra2' x1 x2) \\<and>\n            rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n             Contra1' Contra2'\n             (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n               Contra2' x1 x2)\n             x2)\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n        Contra2 (C_T x)\n        (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n          Contra2' (C_T x) (C_T y))\n 2. \\<And>x y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n             (Contra2 OO Contra2') x1 x2 \\<and>\n            rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n             Contra2 x1\n             (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n               Contra2' x1 x2) \\<and>\n            rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n             Contra1' Contra2'\n             (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n               Contra2' x1 x2)\n             x2)\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n        Contra2'\n        (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n          Contra2' (C_T x) (C_T y))\n        (C_T y)", "subgoal premises prems for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     (C_T x)\n     (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (C_T x) (C_T y))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     (C_T x)\n     (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (C_T x) (C_T y))", "have x_expansion: \"x = mapl_G fst id (mapl_G (\\<lambda>x.\n      (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x)) id x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    mapl_G fst id\n     (mapl_G\n       (\\<lambda>x.\n           (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                Contra2' x))\n       id x)", "by (simp add: mapl_G_def map_G_comp[THEN fun_cong, simplified] map_G_id[unfolded id_def] comp_def)"], ["proof (state)\nthis:\n  x =\n  mapl_G fst id\n   (mapl_G\n     (\\<lambda>x.\n         (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n              Contra2' x))\n     id x)\n\ngoal (1 subgoal):\n 1. rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     (C_T x)\n     (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (C_T x) (C_T y))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     (C_T x)\n     (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (C_T x) (C_T y))", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     (C_T x)\n     (C_T (mapl_G (\\<lambda>((x, f), y). f y) id\n            (rel_G_witness\n              (\\<lambda>(x, f) y.\n                  rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                   Contra1 Contra2 x (f y) \\<and>\n                  rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n                   Contra1' Contra2' (f y) y)\n              L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n              (mapl_G\n                (\\<lambda>x.\n                    (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                         Contra2 Contra2' x))\n                id x,\n               y))))", "apply (rule rel_T.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n       Contra2)\n     (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2 x\n     (mapl_G (\\<lambda>((x, f), y). f y) id\n       (rel_G_witness\n         (\\<lambda>(x, f) y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n         L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (mapl_G\n           (\\<lambda>x.\n               (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' x))\n           id x,\n          y)))", "apply (rewrite in \"rel_G _ _ _ _ _ _ \\<hole> _\" x_expansion)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n       Contra2)\n     (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     (mapl_G fst id\n       (mapl_G\n         (\\<lambda>x.\n             (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                  Contra2' x))\n         id x))\n     (mapl_G (\\<lambda>((x, f), y). f y) id\n       (rel_G_witness\n         (\\<lambda>(x, f) y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n         L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (mapl_G\n           (\\<lambda>x.\n               (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' x))\n           id x,\n          y)))", "apply (rewrite in \"rel_G _ _ _ _ _ _ _ \\<hole>\" mapl_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n       Contra2)\n     (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     (mapl_G fst id\n       (mapl_G\n         (\\<lambda>x.\n             (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                  Contra2' x))\n         id x))\n     (map_G (\\<lambda>((x, f), y). f y) id id id id id\n       (rel_G_witness\n         (\\<lambda>(x, f) y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n         L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (mapl_G\n           (\\<lambda>x.\n               (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' x))\n           id x,\n          y)))", "apply (subst mapl_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n       Contra2)\n     (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     (map_G fst id id id id id\n       (mapl_G\n         (\\<lambda>x.\n             (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                  Contra2' x))\n         id x))\n     (map_G (case_prod (\\<lambda>(x, f). f)) id id id id id\n       (rel_G_witness\n         (\\<lambda>(x, f) y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n         L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (mapl_G\n           (\\<lambda>x.\n               (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' x))\n           id x,\n          y)))", "apply (rule map_G_rel_cong)"], ["proof (prove)\ngoal (7 subgoals):\n 1. rel_G ?L1.17 ?L2.17 ?Co1.17 ?Co2.17 ?Contra1.17 ?Contra2.17\n     (mapl_G\n       (\\<lambda>x.\n           (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                Contra2' x))\n       id x)\n     (rel_G_witness\n       (\\<lambda>(x, f) y.\n           rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n            Contra2 x (f y) \\<and>\n           rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n            Contra1' Contra2' (f y) y)\n       L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (mapl_G\n         (\\<lambda>x.\n             (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                  Contra2' x))\n         id x,\n        y))\n 2. \\<And>x y.\n       ?L1.17 x y \\<Longrightarrow>\n       rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n        Contra2 (fst x)\n        (case y of\n         (x, xa) \\<Rightarrow> (case x of (x, f) \\<Rightarrow> f) xa)\n 3. \\<And>x y.\n       ?L2.17 x y \\<Longrightarrow>\n       case id y of (x', y) \\<Rightarrow> x' = id x \\<and> L1 (id x) y\n 4. \\<And>x y. ?Co1.17 x y \\<Longrightarrow> Co1 (id x) (id y)\n 5. \\<And>x y. ?Co2.17 x y \\<Longrightarrow> Co2 (id x) (id y)\n 6. \\<And>x y. Contra1 x y \\<Longrightarrow> ?Contra1.17 (id x) (id y)\n 7. \\<And>x y. Contra2 x y \\<Longrightarrow> ?Contra2.17 (id x) (id y)", "apply (rule rel_G_witness1[OF cond])"], ["proof (prove)\ngoal (7 subgoals):\n 1. rel_G\n     (\\<lambda>(x, f) y.\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x (f y) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2' (f y) y)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2')\n     (mapl_G\n       (\\<lambda>x.\n           (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                Contra2' x))\n       id x)\n     y\n 2. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow>\n         x' = x \\<and>\n         (case x of\n          (x, f) \\<Rightarrow>\n            \\<lambda>y.\n               rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                Contra1 Contra2 x (f y) \\<and>\n               rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n                Contra1' Contra2' (f y) y)\n          y \\<Longrightarrow>\n       rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n        Contra2 (fst x)\n        (case y of\n         (x, xa) \\<Rightarrow> (case x of (x, f) \\<Rightarrow> f) xa)\n 3. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow> x' = x \\<and> L1 x y \\<Longrightarrow>\n       case id y of (x', y) \\<Rightarrow> x' = id x \\<and> L1 (id x) y\n 4. \\<And>x y. Co1 x y \\<Longrightarrow> Co1 (id x) (id y)\n 5. \\<And>x y. Co2 x y \\<Longrightarrow> Co2 (id x) (id y)\n 6. \\<And>x y. Contra1 x y \\<Longrightarrow> Contra1 (id x) (id y)\n 7. \\<And>x y. Contra2 x y \\<Longrightarrow> Contra2 (id x) (id y)", "apply (rewrite in \"rel_G _ _ _ _ _ _ \\<hole> _\" mapl_G_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. rel_G\n     (\\<lambda>(x, f) y.\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x (f y) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2' (f y) y)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2')\n     (map_G\n       (\\<lambda>x.\n           (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                Contra2' x))\n       id id id id id x)\n     y\n 2. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow>\n         x' = x \\<and>\n         (case x of\n          (x, f) \\<Rightarrow>\n            \\<lambda>y.\n               rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                Contra1 Contra2 x (f y) \\<and>\n               rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n                Contra1' Contra2' (f y) y)\n          y \\<Longrightarrow>\n       rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n        Contra2 (fst x)\n        (case y of\n         (x, xa) \\<Rightarrow> (case x of (x, f) \\<Rightarrow> f) xa)\n 3. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow> x' = x \\<and> L1 x y \\<Longrightarrow>\n       case id y of (x', y) \\<Rightarrow> x' = id x \\<and> L1 (id x) y\n 4. \\<And>x y. Co1 x y \\<Longrightarrow> Co1 (id x) (id y)\n 5. \\<And>x y. Co2 x y \\<Longrightarrow> Co2 (id x) (id y)\n 6. \\<And>x y. Contra1 x y \\<Longrightarrow> Contra1 (id x) (id y)\n 7. \\<And>x y. Contra2 x y \\<Longrightarrow> Contra2 (id x) (id y)", "apply (rewrite in \"rel_G _ _ _ _ _ _ _ \\<hole>\" map_G_id[symmetric])"], ["proof (prove)\ngoal (7 subgoals):\n 1. rel_G\n     (\\<lambda>(x, f) y.\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x (f y) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2' (f y) y)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2')\n     (map_G\n       (\\<lambda>x.\n           (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                Contra2' x))\n       id id id id id x)\n     (map_G id id id id id id y)\n 2. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow>\n         x' = x \\<and>\n         (case x of\n          (x, f) \\<Rightarrow>\n            \\<lambda>y.\n               rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                Contra1 Contra2 x (f y) \\<and>\n               rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n                Contra1' Contra2' (f y) y)\n          y \\<Longrightarrow>\n       rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n        Contra2 (fst x)\n        (case y of\n         (x, xa) \\<Rightarrow> (case x of (x, f) \\<Rightarrow> f) xa)\n 3. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow> x' = x \\<and> L1 x y \\<Longrightarrow>\n       case id y of (x', y) \\<Rightarrow> x' = id x \\<and> L1 (id x) y\n 4. \\<And>x y. Co1 x y \\<Longrightarrow> Co1 (id x) (id y)\n 5. \\<And>x y. Co2 x y \\<Longrightarrow> Co2 (id x) (id y)\n 6. \\<And>x y. Contra1 x y \\<Longrightarrow> Contra1 (id x) (id y)\n 7. \\<And>x y. Contra2 x y \\<Longrightarrow> Contra2 (id x) (id y)", "apply (rule map_G_rel_cong[OF prems])"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x y.\n       rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<and>\n       rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n        Contra2 x\n        (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n          Contra2' x y) \\<and>\n       rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n        Contra2'\n        (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n          Contra2' x y)\n        y \\<Longrightarrow>\n       (case (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                  Contra2' x) of\n        (x, f) \\<Rightarrow>\n          \\<lambda>y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n        (id y)\n 2. \\<And>x y. L1 x y \\<Longrightarrow> L1 (id x) (id y)\n 3. \\<And>x y.\n       (Co1 OO Co1') x y \\<Longrightarrow> (Co1 OO Co1') (id x) (id y)\n 4. \\<And>x y.\n       (Co2 OO Co2') x y \\<Longrightarrow> (Co2 OO Co2') (id x) (id y)\n 5. \\<And>x y.\n       (Contra1 OO Contra1') x y \\<Longrightarrow>\n       (Contra1 OO Contra1') (id x) (id y)\n 6. \\<And>x y.\n       (Contra2 OO Contra2') x y \\<Longrightarrow>\n       (Contra2 OO Contra2') (id x) (id y)\n 7. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow>\n         x' = x \\<and>\n         (case x of\n          (x, f) \\<Rightarrow>\n            \\<lambda>y.\n               rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                Contra1 Contra2 x (f y) \\<and>\n               rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n                Contra1' Contra2' (f y) y)\n          y \\<Longrightarrow>\n       rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n        Contra2 (fst x)\n        (case y of\n         (x, xa) \\<Rightarrow> (case x of (x, f) \\<Rightarrow> f) xa)\n 8. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow> x' = x \\<and> L1 x y \\<Longrightarrow>\n       case id y of (x', y) \\<Rightarrow> x' = id x \\<and> L1 (id x) y\n 9. \\<And>x y. Co1 x y \\<Longrightarrow> Co1 (id x) (id y)\n 10. \\<And>x y. Co2 x y \\<Longrightarrow> Co2 (id x) (id y)\nA total of 12 subgoals...", "apply (clarsimp)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n   (C_T x)\n   (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n     (C_T x) (C_T y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n             (Contra2 OO Contra2') x1 x2 \\<and>\n            rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n             Contra2 x1\n             (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n               Contra2' x1 x2) \\<and>\n            rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n             Contra1' Contra2'\n             (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n               Contra2' x1 x2)\n             x2)\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n        Contra2'\n        (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n          Contra2' (C_T x) (C_T y))\n        (C_T y)", "subgoal for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n     Contra2'\n     (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (C_T x) (C_T y))\n     (C_T y)", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n     Contra2'\n     (C_T (mapl_G (\\<lambda>((x, f), y). f y) id\n            (rel_G_witness\n              (\\<lambda>(x, f) y.\n                  rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                   Contra1 Contra2 x (f y) \\<and>\n                  rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n                   Contra1' Contra2' (f y) y)\n              L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n              (mapl_G\n                (\\<lambda>x.\n                    (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                         Contra2 Contra2' x))\n                id x,\n               y))))\n     (C_T y)", "apply (rule rel_T.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_G\n     (rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n       Contra2')\n     (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1' Contra2'\n     (mapl_G (\\<lambda>((x, f), y). f y) id\n       (rel_G_witness\n         (\\<lambda>(x, f) y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n         L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (mapl_G\n           (\\<lambda>x.\n               (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' x))\n           id x,\n          y)))\n     y", "apply (rewrite in \"rel_G _ _ _ _ _ _ \\<hole> _\" mapl_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_G\n     (rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n       Contra2')\n     (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1' Contra2'\n     (map_G (\\<lambda>((x, f), y). f y) id id id id id\n       (rel_G_witness\n         (\\<lambda>(x, f) y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n         L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (mapl_G\n           (\\<lambda>x.\n               (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' x))\n           id x,\n          y)))\n     y", "apply (rewrite in \"rel_G _ _ _ _ _ _ _ \\<hole>\" map_G_id[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_G\n     (rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n       Contra2')\n     (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1' Contra2'\n     (map_G (\\<lambda>((x, f), y). f y) id id id id id\n       (rel_G_witness\n         (\\<lambda>(x, f) y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n         L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (mapl_G\n           (\\<lambda>x.\n               (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' x))\n           id x,\n          y)))\n     (map_G id id id id id id y)", "apply (rule map_G_rel_cong)"], ["proof (prove)\ngoal (7 subgoals):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_G ?L1.17 ?L2.17 ?Co1.17 ?Co2.17 ?Contra1.17 ?Contra2.17\n     (rel_G_witness\n       (\\<lambda>(x, f) y.\n           rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n            Contra2 x (f y) \\<and>\n           rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n            Contra1' Contra2' (f y) y)\n       L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (mapl_G\n         (\\<lambda>x.\n             (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                  Contra2' x))\n         id x,\n        y))\n     y\n 2. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        ?L1.17 x y\\<rbrakk>\n       \\<Longrightarrow> rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y)\n                          Co1' Co2' Contra1' Contra2'\n                          (case x of\n                           (x, xa) \\<Rightarrow>\n                             (case x of (x, f) \\<Rightarrow> f) xa)\n                          (id y)\n 3. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        ?L2.17 x y\\<rbrakk>\n       \\<Longrightarrow> (case id x of\n                          (x, y') \\<Rightarrow>\n                            \\<lambda>y. y' = y \\<and> L1 x y)\n                          (id y)\n 4. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        ?Co1.17 x y\\<rbrakk>\n       \\<Longrightarrow> Co1' (id x) (id y)\n 5. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        ?Co2.17 x y\\<rbrakk>\n       \\<Longrightarrow> Co2' (id x) (id y)\n 6. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Contra1' x y\\<rbrakk>\n       \\<Longrightarrow> ?Contra1.17 (id x) (id y)\n 7. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Contra2' x y\\<rbrakk>\n       \\<Longrightarrow> ?Contra2.17 (id x) (id y)", "apply (rule rel_G_witness2[OF cond[unfolded rel_T_neg_distr_cond_def]])"], ["proof (prove)\ngoal (7 subgoals):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_G\n     (\\<lambda>(x, f) y.\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x (f y) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2' (f y) y)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2')\n     (mapl_G\n       (\\<lambda>x.\n           (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                Contra2' x))\n       id x)\n     y\n 2. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        (case x of\n         (x, y') \\<Rightarrow>\n           \\<lambda>y.\n              y' = y \\<and>\n              (case x of\n               (x, f) \\<Rightarrow>\n                 \\<lambda>y.\n                    rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                     Contra1 Contra2 x (f y) \\<and>\n                    rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                     Co2' Contra1' Contra2' (f y) y)\n               y)\n         y\\<rbrakk>\n       \\<Longrightarrow> rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y)\n                          Co1' Co2' Contra1' Contra2'\n                          (case x of\n                           (x, xa) \\<Rightarrow>\n                             (case x of (x, f) \\<Rightarrow> f) xa)\n                          (id y)\n 3. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        (case x of (x, y') \\<Rightarrow> \\<lambda>y. y' = y \\<and> L1 x y)\n         y\\<rbrakk>\n       \\<Longrightarrow> (case id x of\n                          (x, y') \\<Rightarrow>\n                            \\<lambda>y. y' = y \\<and> L1 x y)\n                          (id y)\n 4. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Co1' x y\\<rbrakk>\n       \\<Longrightarrow> Co1' (id x) (id y)\n 5. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Co2' x y\\<rbrakk>\n       \\<Longrightarrow> Co2' (id x) (id y)\n 6. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Contra1' x y\\<rbrakk>\n       \\<Longrightarrow> Contra1' (id x) (id y)\n 7. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Contra2' x y\\<rbrakk>\n       \\<Longrightarrow> Contra2' (id x) (id y)", "apply (rewrite in \"rel_G _ _ _ _ _ _ \\<hole> _\" mapl_G_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_G\n     (\\<lambda>(x, f) y.\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x (f y) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2' (f y) y)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2')\n     (map_G\n       (\\<lambda>x.\n           (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                Contra2' x))\n       id id id id id x)\n     y\n 2. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        (case x of\n         (x, y') \\<Rightarrow>\n           \\<lambda>y.\n              y' = y \\<and>\n              (case x of\n               (x, f) \\<Rightarrow>\n                 \\<lambda>y.\n                    rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                     Contra1 Contra2 x (f y) \\<and>\n                    rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                     Co2' Contra1' Contra2' (f y) y)\n               y)\n         y\\<rbrakk>\n       \\<Longrightarrow> rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y)\n                          Co1' Co2' Contra1' Contra2'\n                          (case x of\n                           (x, xa) \\<Rightarrow>\n                             (case x of (x, f) \\<Rightarrow> f) xa)\n                          (id y)\n 3. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        (case x of (x, y') \\<Rightarrow> \\<lambda>y. y' = y \\<and> L1 x y)\n         y\\<rbrakk>\n       \\<Longrightarrow> (case id x of\n                          (x, y') \\<Rightarrow>\n                            \\<lambda>y. y' = y \\<and> L1 x y)\n                          (id y)\n 4. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Co1' x y\\<rbrakk>\n       \\<Longrightarrow> Co1' (id x) (id y)\n 5. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Co2' x y\\<rbrakk>\n       \\<Longrightarrow> Co2' (id x) (id y)\n 6. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Contra1' x y\\<rbrakk>\n       \\<Longrightarrow> Contra1' (id x) (id y)\n 7. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Contra2' x y\\<rbrakk>\n       \\<Longrightarrow> Contra2' (id x) (id y)", "apply (rewrite in \"rel_G _ _ _ _ _ _ _ \\<hole>\" map_G_id[symmetric])"], ["proof (prove)\ngoal (7 subgoals):\n 1. rel_G\n     (\\<lambda>x1 x2.\n         rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2') x1 x2 \\<and>\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x1\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2'\n          (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2' x1 x2)\n          x2)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x y \\<Longrightarrow>\n    rel_G\n     (\\<lambda>(x, f) y.\n         rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n          Contra2 x (f y) \\<and>\n         rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n          Contra2' (f y) y)\n     L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2')\n     (map_G\n       (\\<lambda>x.\n           (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                Contra2' x))\n       id id id id id x)\n     (map_G id id id id id id y)\n 2. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        (case x of\n         (x, y') \\<Rightarrow>\n           \\<lambda>y.\n              y' = y \\<and>\n              (case x of\n               (x, f) \\<Rightarrow>\n                 \\<lambda>y.\n                    rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                     Contra1 Contra2 x (f y) \\<and>\n                    rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                     Co2' Contra1' Contra2' (f y) y)\n               y)\n         y\\<rbrakk>\n       \\<Longrightarrow> rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y)\n                          Co1' Co2' Contra1' Contra2'\n                          (case x of\n                           (x, xa) \\<Rightarrow>\n                             (case x of (x, f) \\<Rightarrow> f) xa)\n                          (id y)\n 3. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        (case x of (x, y') \\<Rightarrow> \\<lambda>y. y' = y \\<and> L1 x y)\n         y\\<rbrakk>\n       \\<Longrightarrow> (case id x of\n                          (x, y') \\<Rightarrow>\n                            \\<lambda>y. y' = y \\<and> L1 x y)\n                          (id y)\n 4. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Co1' x y\\<rbrakk>\n       \\<Longrightarrow> Co1' (id x) (id y)\n 5. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Co2' x y\\<rbrakk>\n       \\<Longrightarrow> Co2' (id x) (id y)\n 6. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Contra1' x y\\<rbrakk>\n       \\<Longrightarrow> Contra1' (id x) (id y)\n 7. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Contra2' x y\\<rbrakk>\n       \\<Longrightarrow> Contra2' (id x) (id y)", "apply (erule map_G_rel_cong)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x y.\n       rel_T L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<and>\n       rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n        Contra2 x\n        (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n          Contra2' x y) \\<and>\n       rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n        Contra2'\n        (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n          Contra2' x y)\n        y \\<Longrightarrow>\n       (case (x, rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                  Contra2' x) of\n        (x, f) \\<Rightarrow>\n          \\<lambda>y.\n             rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n              Contra1 Contra2 x (f y) \\<and>\n             rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n              Contra1' Contra2' (f y) y)\n        (id y)\n 2. \\<And>x y. L1 x y \\<Longrightarrow> L1 (id x) (id y)\n 3. \\<And>x y.\n       (Co1 OO Co1') x y \\<Longrightarrow> (Co1 OO Co1') (id x) (id y)\n 4. \\<And>x y.\n       (Co2 OO Co2') x y \\<Longrightarrow> (Co2 OO Co2') (id x) (id y)\n 5. \\<And>x y.\n       (Contra1 OO Contra1') x y \\<Longrightarrow>\n       (Contra1 OO Contra1') (id x) (id y)\n 6. \\<And>x y.\n       (Contra2 OO Contra2') x y \\<Longrightarrow>\n       (Contra2 OO Contra2') (id x) (id y)\n 7. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        (case x of\n         (x, y') \\<Rightarrow>\n           \\<lambda>y.\n              y' = y \\<and>\n              (case x of\n               (x, f) \\<Rightarrow>\n                 \\<lambda>y.\n                    rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                     Contra1 Contra2 x (f y) \\<and>\n                    rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                     Co2' Contra1' Contra2' (f y) y)\n               y)\n         y\\<rbrakk>\n       \\<Longrightarrow> rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y)\n                          Co1' Co2' Contra1' Contra2'\n                          (case x of\n                           (x, xa) \\<Rightarrow>\n                             (case x of (x, f) \\<Rightarrow> f) xa)\n                          (id y)\n 8. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        (case x of (x, y') \\<Rightarrow> \\<lambda>y. y' = y \\<and> L1 x y)\n         y\\<rbrakk>\n       \\<Longrightarrow> (case id x of\n                          (x, y') \\<Rightarrow>\n                            \\<lambda>y. y' = y \\<and> L1 x y)\n                          (id y)\n 9. \\<And>x y.\n       \\<lbrakk>rel_G\n                 (\\<lambda>x1 x2.\n                     rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                      (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                      x2 \\<and>\n                     rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                      Co2 Contra1 Contra2 x1\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2) \\<and>\n                     rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                      Co2' Contra1' Contra2'\n                      (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                        Contra2 Contra2' x1 x2)\n                      x2)\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x y;\n        Co1' x y\\<rbrakk>\n       \\<Longrightarrow> Co1' (id x) (id y)\n 10. \\<And>x y.\n        \\<lbrakk>rel_G\n                  (\\<lambda>x1 x2.\n                      rel_T L1 (Co1 OO Co1') (Co2 OO Co2')\n                       (Contra1 OO Contra1') (Contra2 OO Contra2') x1\n                       x2 \\<and>\n                      rel_T (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                       Co2 Contra1 Contra2 x1\n                       (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                         Contra2 Contra2' x1 x2) \\<and>\n                      rel_T (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                       Co2' Contra1' Contra2'\n                       (rel_T_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                         Contra2 Contra2' x1 x2)\n                       x2)\n                  L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                  (Contra2 OO Contra2') x y;\n         Co2' x y\\<rbrakk>\n        \\<Longrightarrow> Co2' (id x) (id y)\nA total of 12 subgoals...", "apply (clarsimp)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rel_T_neg_distr_imp:\n  fixes Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"((('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n         (('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T\n          \\<Rightarrow> ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T)) \\<times>\n        ((('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) T \\<times>\n          (('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T\n           \\<Rightarrow> ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) T)) \\<times>\n         ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T) \\<times>\n        ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) T \\<times>\n        'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and tytok_T :: \"('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n  assumes \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n  shows \"rel_T_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n     tytok_T", "unfolding rel_T_neg_distr_cond_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>L1 L1'.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2')\n       \\<le> rel_T L1 Co1 Co2 Contra1 Contra2 OO\n             rel_T L1' Co1' Co2' Contra1' Contra2'", "proof (intro allI predicate2I relcomppI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1 Co1 Co2 Contra1 Contra2 x (?b3 L1 L1' x y)\n 2. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1' Co1' Co2' Contra1' Contra2' (?b3 L1 L1' x y) y", "fix L1 :: \"'l1 \\<Rightarrow> 'l1' \\<Rightarrow> bool\" and L1' :: \"'l1' \\<Rightarrow> 'l1'' \\<Rightarrow> bool\"\n    and x :: \"(_, _, _, _, _, 'f) T\" and y :: \"(_, _, _, _, _, 'f) T\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1 Co1 Co2 Contra1 Contra2 x (?b3 L1 L1' x y)\n 2. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1' Co1' Co2' Contra1' Contra2' (?b3 L1 L1' x y) y", "assume *: \"rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n    (Contra1 OO Contra1') (Contra2 OO Contra2') x y\""], ["proof (state)\nthis:\n  rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n   (Contra2 OO Contra2') x y\n\ngoal (2 subgoals):\n 1. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1 Co1 Co2 Contra1 Contra2 x (?b3 L1 L1' x y)\n 2. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1' Co1' Co2' Contra1' Contra2' (?b3 L1 L1' x y) y", "let ?z = \"map_T (relcompp_witness L1 L1') id id id id\n    (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' x y)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1 Co1 Co2 Contra1 Contra2 x (?b3 L1 L1' x y)\n 2. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1' Co1' Co2' Contra1' Contra2' (?b3 L1 L1' x y) y", "show \"rel_T L1 Co1 Co2 Contra1 Contra2 x ?z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T L1 Co1 Co2 Contra1 Contra2 x\n     (map_T (relcompp_witness L1 L1') id id id id\n       (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n         Contra2' x y))", "apply(subst map_T_id[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T L1 Co1 Co2 Contra1 Contra2 (map_T id id id id id x)\n     (map_T (relcompp_witness L1 L1') id id id id\n       (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n         Contra2' x y))", "apply(rule map_T_parametric[unfolded rel_fun_def, rule_format, rotated -1])"], ["proof (prove)\ngoal (6 subgoals):\n 1. rel_T ?L1.0 ?Co1.0 ?Co2.0 ?Contra1.0 ?Contra2.0 x\n     (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n       Contra2' x y)\n 2. \\<And>x y.\n       ?L1.0 x y \\<Longrightarrow> L1 (id x) (relcompp_witness L1 L1' y)\n 3. \\<And>x y. ?Co1.0 x y \\<Longrightarrow> Co1 (id x) (id y)\n 4. \\<And>x y. ?Co2.0 x y \\<Longrightarrow> Co2 (id x) (id y)\n 5. \\<And>x y. Contra1 x y \\<Longrightarrow> ?Contra1.0 (id x) (id y)\n 6. \\<And>x y. Contra2 x y \\<Longrightarrow> ?Contra2.0 (id x) (id y)", "apply(rule rel_T_witness1[OF assms *])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow> x' = x \\<and> (L1 OO L1') x y \\<Longrightarrow>\n       L1 (id x) (relcompp_witness L1 L1' y)\n 2. \\<And>x y. Co1 x y \\<Longrightarrow> Co1 (id x) (id y)\n 3. \\<And>x y. Co2 x y \\<Longrightarrow> Co2 (id x) (id y)\n 4. \\<And>x y. Contra1 x y \\<Longrightarrow> Contra1 (id x) (id y)\n 5. \\<And>x y. Contra2 x y \\<Longrightarrow> Contra2 (id x) (id y)", "apply(auto simp add: vimage2p_def del: relcomppE elim!: relcompp_witness)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  rel_T L1 Co1 Co2 Contra1 Contra2 x\n   (map_T (relcompp_witness L1 L1') id id id id\n     (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n       Contra2' x y))\n\ngoal (1 subgoal):\n 1. \\<And>L1 L1' x y.\n       rel_T (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_T L1' Co1' Co2' Contra1' Contra2'\n        (map_T (relcompp_witness L1 L1') id id id id\n          (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1'\n            Contra2 Contra2' x y))\n        y", "show \"rel_T L1' Co1' Co2' Contra1' Contra2' ?z y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T L1' Co1' Co2' Contra1' Contra2'\n     (map_T (relcompp_witness L1 L1') id id id id\n       (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n         Contra2' x y))\n     y", "apply(rewrite in \"rel_T _ _ _ _ _ _ \\<hole>\" map_T_id[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_T L1' Co1' Co2' Contra1' Contra2'\n     (map_T (relcompp_witness L1 L1') id id id id\n       (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n         Contra2' x y))\n     (map_T id id id id id y)", "apply(rule map_T_parametric[unfolded rel_fun_def, rule_format, rotated -1])"], ["proof (prove)\ngoal (6 subgoals):\n 1. rel_T ?L1.3 ?Co1.3 ?Co2.3 ?Contra1.3 ?Contra2.3\n     (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n       Contra2' x y)\n     y\n 2. \\<And>x y.\n       ?L1.3 x y \\<Longrightarrow> L1' (relcompp_witness L1 L1' x) (id y)\n 3. \\<And>x y. ?Co1.3 x y \\<Longrightarrow> Co1' (id x) (id y)\n 4. \\<And>x y. ?Co2.3 x y \\<Longrightarrow> Co2' (id x) (id y)\n 5. \\<And>x y. Contra1' x y \\<Longrightarrow> ?Contra1.3 (id x) (id y)\n 6. \\<And>x y. Contra2' x y \\<Longrightarrow> ?Contra2.3 (id x) (id y)", "apply(rule rel_T_witness2[OF assms *])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       (case x of\n        (x, y') \\<Rightarrow> \\<lambda>y. y' = y \\<and> (L1 OO L1') x y)\n        y \\<Longrightarrow>\n       L1' (relcompp_witness L1 L1' x) (id y)\n 2. \\<And>x y. Co1' x y \\<Longrightarrow> Co1' (id x) (id y)\n 3. \\<And>x y. Co2' x y \\<Longrightarrow> Co2' (id x) (id y)\n 4. \\<And>x y. Contra1' x y \\<Longrightarrow> Contra1' (id x) (id y)\n 5. \\<And>x y. Contra2' x y \\<Longrightarrow> Contra2' (id x) (id y)", "apply(auto simp add: vimage2p_def del: relcomppE elim!: relcompp_witness)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  rel_T L1' Co1' Co2' Contra1' Contra2'\n   (map_T (relcompp_witness L1 L1') id id id id\n     (rel_T_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n       Contra2' x y))\n   y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rel_T_pos_distr_cond_eq:\n  \"\\<And>tytok. rel_T_pos_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tytok. rel_T_pos_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok", "by (intro rel_T_pos_distr_imp rel_G_pos_distr_cond_eq)"], ["", "lemma rel_T_neg_distr_cond_eq:\n  \"\\<And>tytok. rel_T_neg_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tytok. rel_T_neg_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok", "by (intro rel_T_neg_distr_imp rel_G_neg_distr_cond_eq)"], ["", "text \\<open>The BNF axioms are proved by the datatype package.\\<close>"], ["", "thm T.set_map T.bd_card_order T.bd_cinfinite T.set_bd T.map_cong[OF refl]\n  T.rel_mono_strong T.wit"], ["", "subsubsection \\<open>Parametricity laws\\<close>"], ["", "context includes lifting_syntax begin"], ["", "lemma C_T_parametric: \"(rel_G (rel_T L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2 ===>\n  rel_T L1 Co1 Co2 Contra1 Contra2) C_T C_T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_G (rel_T L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1\n      Contra2 ===>\n     rel_T L1 Co1 Co2 Contra1 Contra2)\n     C_T C_T", "by (fast elim: rel_T.intros)"], ["", "lemma D_T_parametric: \"(rel_T L1 Co1 Co2 Contra1 Contra2 ===>\n  rel_G (rel_T L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2) D_T D_T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_T L1 Co1 Co2 Contra1 Contra2 ===>\n     rel_G (rel_T L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2)\n     D_T D_T", "by (fastforce elim: rel_T.cases)"], ["", "lemma rec_T_parametric:\n  \"((rel_G (rel_prod (rel_T L1 Co1 Co2 Contra1 Contra2) A) L1 Co1 Co2 Contra1 Contra2 ===> A) ===>\n  rel_T L1 Co1 Co2 Contra1 Contra2 ===> A) rec_T rec_T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((rel_G (rel_prod (rel_T L1 Co1 Co2 Contra1 Contra2) A) L1 Co1 Co2\n       Contra1 Contra2 ===>\n      A) ===>\n     rel_T L1 Co1 Co2 Contra1 Contra2 ===> A)\n     rec_T rec_T", "apply (intro rel_funI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>(rel_G (rel_prod (rel_T L1 Co1 Co2 Contra1 Contra2) A) L1\n                  Co1 Co2 Contra1 Contra2 ===>\n                 A)\n                 x y;\n        rel_T L1 Co1 Co2 Contra1 Contra2 xa ya\\<rbrakk>\n       \\<Longrightarrow> A (rec_T x xa) (rec_T y ya)", "subgoal premises prems for f g x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. A (rec_T f x) (rec_T g y)", "using prems(2)"], ["proof (prove)\nusing this:\n  rel_T L1 Co1 Co2 Contra1 Contra2 x y\n\ngoal (1 subgoal):\n 1. A (rec_T f x) (rec_T g y)", "apply (induction)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n            A (rec_T f x1) (rec_T g x2))\n        L1 Co1 Co2 Contra1 Contra2 x y \\<Longrightarrow>\n       A (rec_T f (C_T x)) (rec_T g (C_T y))", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n            A (rec_T f x1) (rec_T g x2))\n        L1 Co1 Co2 Contra1 Contra2 x y \\<Longrightarrow>\n       A (f (mapl_G (\\<lambda>T. (T, rec_T f T)) id x))\n        (g (mapl_G (\\<lambda>T. (T, rec_T g T)) id y))", "apply (rule prems(1)[THEN rel_funD])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n            A (rec_T f x1) (rec_T g x2))\n        L1 Co1 Co2 Contra1 Contra2 x y \\<Longrightarrow>\n       rel_G (rel_prod (rel_T L1 Co1 Co2 Contra1 Contra2) A) L1 Co1 Co2\n        Contra1 Contra2 (mapl_G (\\<lambda>T. (T, rec_T f T)) id x)\n        (mapl_G (\\<lambda>T. (T, rec_T g T)) id y)", "apply (unfold mapl_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       rel_G\n        (\\<lambda>x1 x2.\n            rel_T L1 Co1 Co2 Contra1 Contra2 x1 x2 \\<and>\n            A (rec_T f x1) (rec_T g x2))\n        L1 Co1 Co2 Contra1 Contra2 x y \\<Longrightarrow>\n       rel_G (rel_prod (rel_T L1 Co1 Co2 Contra1 Contra2) A) L1 Co1 Co2\n        Contra1 Contra2\n        (map_G (\\<lambda>T. (T, rec_T f T)) id id id id id x)\n        (map_G (\\<lambda>T. (T, rec_T g T)) id id id id id y)", "apply (erule map_G_rel_cong)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y xa ya.\n       rel_T L1 Co1 Co2 Contra1 Contra2 xa ya \\<and>\n       A (rec_T f xa) (rec_T g ya) \\<Longrightarrow>\n       rel_prod (rel_T L1 Co1 Co2 Contra1 Contra2) A (xa, rec_T f xa)\n        (ya, rec_T g ya)\n 2. \\<And>x y xa ya. L1 xa ya \\<Longrightarrow> L1 (id xa) (id ya)\n 3. \\<And>x y xa ya. Co1 xa ya \\<Longrightarrow> Co1 (id xa) (id ya)\n 4. \\<And>x y xa ya. Co2 xa ya \\<Longrightarrow> Co2 (id xa) (id ya)\n 5. \\<And>x y xa ya. Contra1 xa ya \\<Longrightarrow> Contra1 (id xa) (id ya)\n 6. \\<And>x y xa ya. Contra2 xa ya \\<Longrightarrow> Contra2 (id xa) (id ya)", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "subsection \\<open>Greatest fixpoints\\<close>"], ["", "subsubsection \\<open>\\BNFCC{} structure\\<close>"], ["", "context notes [[typedef_overloaded, bnf_internals]]\nbegin"], ["", "codatatype (set_U: 'l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U =\n  C_U (D_U: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U, 'l1, 'co1, 'co2, 'contra1, 'contra2, 'f) G\")\n  for\n    map: mapl_U\n    rel: rell_U"], ["", "end"], ["", "coinductive rel_U :: \"('l1 \\<Rightarrow> 'l1' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool) \\<Rightarrow> ('co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool) \\<Rightarrow> ('contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool) \\<Rightarrow>\n    ('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<Rightarrow>\n    ('l1', 'co1', 'co2', 'contra1', 'contra2', 'f) U \\<Rightarrow> bool\"\n  for L1 Co1 Co2 Contra1 Contra2 where\n  \"rel_U L1 Co1 Co2 Contra1 Contra2 x y\"\n    if \"rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2 (D_U x) (D_U y)\""], ["", "primcorec map_U :: \"('l1 \\<Rightarrow> 'l1') \\<Rightarrow> ('co1 \\<Rightarrow> 'co1') \\<Rightarrow> ('co2 \\<Rightarrow> 'co2') \\<Rightarrow>\n    ('contra1' \\<Rightarrow> 'contra1) \\<Rightarrow> ('contra2' \\<Rightarrow> 'contra2) \\<Rightarrow>\n    ('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<Rightarrow>\n    ('l1', 'co1', 'co2', 'contra1', 'contra2', 'f) U\" where\n  \"D_U (map_U l1 co1 co2 contra1 contra2 x) =\n    mapl_G (map_U l1 co1 co2 contra1 contra2) l1 (map_G id id co1 co2 contra1 contra2 (D_U x))\""], ["", "lemma rell_U_alt_def: \"rell_U L1 = rel_U L1 (=) (=) (=) (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rell_U L1 = rel_U L1 (=) (=) (=) (=)", "apply (intro ext iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       rell_U L1 x xa \\<Longrightarrow> rel_U L1 (=) (=) (=) (=) x xa\n 2. \\<And>x xa.\n       rel_U L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_U L1 x xa", "apply (erule rel_U.coinduct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa x1 x2.\n       rell_U L1 x1 x2 \\<Longrightarrow>\n       \\<exists>x y.\n          x1 = x \\<and>\n          x2 = y \\<and>\n          rel_G\n           (\\<lambda>uu_ uua_.\n               rell_U L1 uu_ uua_ \\<or> rel_U L1 (=) (=) (=) (=) uu_ uua_)\n           L1 (=) (=) (=) (=) (D_U x) (D_U y)\n 2. \\<And>x xa.\n       rel_U L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_U L1 x xa", "apply (erule U.rel_cases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa x1 x2 xaa ya.\n       \\<lbrakk>x1 = C_U xaa; x2 = C_U ya;\n        rell_G (rell_U L1) L1 xaa ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            x1 = x \\<and>\n                            x2 = y \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 rell_U L1 uu_ uua_ \\<or>\n                                 rel_U L1 (=) (=) (=) (=) uu_ uua_)\n                             L1 (=) (=) (=) (=) (D_U x) (D_U y)\n 2. \\<And>x xa.\n       rel_U L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_U L1 x xa", "apply (simp add: rell_G_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xaa ya.\n       \\<lbrakk>x1 = C_U xaa; x2 = C_U ya;\n        rel_G (rell_U L1) L1 (=) (=) (=) (=) xaa ya\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              rell_U L1 uu_ uua_ \\<or>\n                              rel_U L1 (=) (=) (=) (=) uu_ uua_)\n                          L1 (=) (=) (=) (=) xaa ya\n 2. \\<And>x xa.\n       rel_U L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_U L1 x xa", "apply (erule rel_G_mono'; blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       rel_U L1 (=) (=) (=) (=) x xa \\<Longrightarrow> rell_U L1 x xa", "apply (erule U.rel_coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa U U'.\n       rel_U L1 (=) (=) (=) (=) U U' \\<Longrightarrow>\n       rell_G (rel_U L1 (=) (=) (=) (=)) L1 (D_U U) (D_U U')", "apply (erule rel_U.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa U U' xb y.\n       \\<lbrakk>U = xb; U' = y;\n        rel_G (rel_U L1 (=) (=) (=) (=)) L1 (=) (=) (=) (=) (D_U xb)\n         (D_U y)\\<rbrakk>\n       \\<Longrightarrow> rell_G (rel_U L1 (=) (=) (=) (=)) L1 (D_U U)\n                          (D_U U')", "apply (simp add: rell_G_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mapl_U_alt_def: \"mapl_U l1 = map_U l1 id id id id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mapl_U l1 = map_U l1 id id id id", "supply id_apply[simp del]"], ["proof (prove)\ngoal (1 subgoal):\n 1. mapl_U l1 = map_U l1 id id id id", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. mapl_U l1 x = map_U l1 id id id id x", "subgoal for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. mapl_U l1 x = map_U l1 id id id id x", "apply (coinduction arbitrary: x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       rell_G\n        (\\<lambda>U__ U'__.\n            \\<exists>x.\n               U__ = mapl_U l1 x \\<and> U'__ = map_U l1 id id id id x)\n        (=) (D_U (mapl_U l1 x)) (D_U (map_U l1 id id id id x))", "apply (simp add: mapl_G_def map_G_comp[THEN fun_cong, simplified] U.map_sel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       rell_G\n        (\\<lambda>U__ U'__.\n            \\<exists>x.\n               U__ = mapl_U l1 x \\<and> U'__ = map_U l1 id id id id x)\n        (=) (map_G (mapl_U l1) l1 id id id id (D_U x))\n        (map_G (map_U l1 id id id id) l1 id id id id (D_U x))", "apply (unfold rell_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       rel_G\n        (\\<lambda>U__ U'__.\n            \\<exists>x.\n               U__ = mapl_U l1 x \\<and> U'__ = map_U l1 id id id id x)\n        (=) (=) (=) (=) (=) (map_G (mapl_U l1) l1 id id id id (D_U x))\n        (map_G (map_U l1 id id id id) l1 id id id id (D_U x))", "apply (rule map_G_rel_cong[OF rel_G_eq_refl])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x xa y.\n       xa = y \\<Longrightarrow>\n       \\<exists>x.\n          mapl_U l1 xa = mapl_U l1 x \\<and>\n          map_U l1 id id id id y = map_U l1 id id id id x\n 2. \\<And>x xa y. xa = y \\<Longrightarrow> l1 xa = l1 y\n 3. \\<And>x xa y. xa = y \\<Longrightarrow> id xa = id y\n 4. \\<And>x xa y. xa = y \\<Longrightarrow> id xa = id y\n 5. \\<And>x xa y. xa = y \\<Longrightarrow> id xa = id y\n 6. \\<And>x xa y. xa = y \\<Longrightarrow> id xa = id y", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rel_U_mono [mono]:\n  \"\\<lbrakk> L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2'; Contra1' \\<le> Contra1; Contra2' \\<le> Contra2 \\<rbrakk> \\<Longrightarrow>\n  rel_U L1 Co1 Co2 Contra1 Contra2 \\<le> rel_U L1' Co1' Co2' Contra1' Contra2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n     Contra1' \\<le> Contra1; Contra2' \\<le> Contra2\\<rbrakk>\n    \\<Longrightarrow> rel_U L1 Co1 Co2 Contra1 Contra2\n                      \\<le> rel_U L1' Co1' Co2' Contra1' Contra2'", "apply (rule predicate2I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2;\n        rel_U L1 Co1 Co2 Contra1 Contra2 x y\\<rbrakk>\n       \\<Longrightarrow> rel_U L1' Co1' Co2' Contra1' Contra2' x y", "apply (erule rel_U.coinduct[of \"rel_U L1 Co1 Co2 Contra1 Contra2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y x1 x2.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2;\n        rel_U L1 Co1 Co2 Contra1 Contra2 x1 x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            x1 = x \\<and>\n                            x2 = y \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 rel_U L1 Co1 Co2 Contra1 Contra2 uu_\n                                  uua_ \\<or>\n                                 rel_U L1' Co1' Co2' Contra1' Contra2' uu_\n                                  uua_)\n                             L1' Co1' Co2' Contra1' Contra2' (D_U x) (D_U y)", "apply (erule rel_U.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y x1 x2 xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2; x1 = xa; x2 = ya;\n        rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2\n         (D_U xa) (D_U ya)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            x1 = x \\<and>\n                            x2 = y \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 rel_U L1 Co1 Co2 Contra1 Contra2 uu_\n                                  uua_ \\<or>\n                                 rel_U L1' Co1' Co2' Contra1' Contra2' uu_\n                                  uua_)\n                             L1' Co1' Co2' Contra1' Contra2' (D_U x) (D_U y)", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2; x1 = xa; x2 = ya;\n        rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2\n         (D_U xa) (D_U ya)\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              rel_U L1 Co1 Co2 Contra1 Contra2 uu_\n                               uua_ \\<or>\n                              rel_U L1' Co1' Co2' Contra1' Contra2' uu_\n                               uua_)\n                          L1' Co1' Co2' Contra1' Contra2' (D_U xa) (D_U ya)", "apply (erule rel_G_mono')"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x1 x2 xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2; x1 = xa;\n        x2 = ya\\<rbrakk>\n       \\<Longrightarrow> rel_U L1 Co1 Co2 Contra1 Contra2\n                         \\<le> (\\<lambda>uu_ uua_.\n                                   rel_U L1 Co1 Co2 Contra1 Contra2 uu_\n                                    uua_ \\<or>\n                                   rel_U L1' Co1' Co2' Contra1' Contra2' uu_\n                                    uua_)\n 2. \\<And>x1 x2 xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2; x1 = xa;\n        x2 = ya\\<rbrakk>\n       \\<Longrightarrow> L1 \\<le> L1'\n 3. \\<And>x1 x2 xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2; x1 = xa;\n        x2 = ya\\<rbrakk>\n       \\<Longrightarrow> Co1 \\<le> Co1'\n 4. \\<And>x1 x2 xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2; x1 = xa;\n        x2 = ya\\<rbrakk>\n       \\<Longrightarrow> Co2 \\<le> Co2'\n 5. \\<And>x1 x2 xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2; x1 = xa;\n        x2 = ya\\<rbrakk>\n       \\<Longrightarrow> Contra1' \\<le> Contra1\n 6. \\<And>x1 x2 xa ya.\n       \\<lbrakk>L1 \\<le> L1'; Co1 \\<le> Co1'; Co2 \\<le> Co2';\n        Contra1' \\<le> Contra1; Contra2' \\<le> Contra2; x1 = xa;\n        x2 = ya\\<rbrakk>\n       \\<Longrightarrow> Contra2' \\<le> Contra2", "apply (blast)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rel_U_eq: \"rel_U (=) (=) (=) (=) (=) = (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U (=) (=) (=) (=) (=) = (=)", "unfolding rell_U_alt_def[symmetric] U.rel_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) = (=)", ".."], ["", "lemma rel_U_conversep:\n  \"rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse> Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse> Contra2\\<inverse>\\<inverse> = (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n     Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n     Contra2\\<inverse>\\<inverse> =\n    (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse>", "apply (intro ext iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa \\<Longrightarrow>\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x xa\n 2. \\<And>x xa.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa \\<Longrightarrow>\n       rel_U L1 Co1 Co2 Contra1 Contra2 xa x\n 2. \\<And>x xa.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (erule rel_U.coinduct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa x1 x2.\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x2 x1 \\<Longrightarrow>\n       \\<exists>x y.\n          x1 = x \\<and>\n          x2 = y \\<and>\n          rel_G\n           (\\<lambda>uu_ uua_.\n               rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n                Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n                Contra2\\<inverse>\\<inverse> uua_ uu_ \\<or>\n               rel_U L1 Co1 Co2 Contra1 Contra2 uu_ uua_)\n           L1 Co1 Co2 Contra1 Contra2 (D_U x) (D_U y)\n 2. \\<And>x xa.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (erule rel_U.cases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa x1 x2 xb y.\n       \\<lbrakk>x2 = xb; x1 = y;\n        rel_G\n         (rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n           Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n           Contra2\\<inverse>\\<inverse>)\n         L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n         Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n         Contra2\\<inverse>\\<inverse> (D_U xb) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            x1 = x \\<and>\n                            x2 = y \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 rel_U L1\\<inverse>\\<inverse>\n                                  Co1\\<inverse>\\<inverse>\n                                  Co2\\<inverse>\\<inverse>\n                                  Contra1\\<inverse>\\<inverse>\n                                  Contra2\\<inverse>\\<inverse> uua_ uu_ \\<or>\n                                 rel_U L1 Co1 Co2 Contra1 Contra2 uu_ uua_)\n                             L1 Co1 Co2 Contra1 Contra2 (D_U x) (D_U y)\n 2. \\<And>x xa.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (simp del: conversep_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xb y.\n       \\<lbrakk>x2 = xb; x1 = y;\n        rel_G\n         (rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n           Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n           Contra2\\<inverse>\\<inverse>)\n         L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n         Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n         Contra2\\<inverse>\\<inverse> (D_U xb) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              rel_U L1\\<inverse>\\<inverse>\n                               Co1\\<inverse>\\<inverse>\n                               Co2\\<inverse>\\<inverse>\n                               Contra1\\<inverse>\\<inverse>\n                               Contra2\\<inverse>\\<inverse> uua_ uu_ \\<or>\n                              rel_U L1 Co1 Co2 Contra1 Contra2 uu_ uua_)\n                          L1 Co1 Co2 Contra1 Contra2 (D_U y) (D_U xb)\n 2. \\<And>x xa.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (rewrite conversep_iff[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xb y.\n       \\<lbrakk>x2 = xb; x1 = y;\n        rel_G\n         (rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n           Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n           Contra2\\<inverse>\\<inverse>)\n         L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n         Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n         Contra2\\<inverse>\\<inverse> (D_U xb) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> (rel_G\n                           (\\<lambda>uu_ uua_.\n                               rel_U L1\\<inverse>\\<inverse>\n                                Co1\\<inverse>\\<inverse>\n                                Co2\\<inverse>\\<inverse>\n                                Contra1\\<inverse>\\<inverse>\n                                Contra2\\<inverse>\\<inverse> uua_ uu_ \\<or>\n                               rel_U L1 Co1 Co2 Contra1 Contra2 uu_ uua_)\n                           L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse>\n                          (D_U xb) (D_U y)\n 2. \\<And>x xa.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (fold rel_G_conversep)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xb y.\n       \\<lbrakk>x2 = xb; x1 = y;\n        rel_G\n         (rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n           Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n           Contra2\\<inverse>\\<inverse>)\n         L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n         Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n         Contra2\\<inverse>\\<inverse> (D_U xb) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              rel_U L1\\<inverse>\\<inverse>\n                               Co1\\<inverse>\\<inverse>\n                               Co2\\<inverse>\\<inverse>\n                               Contra1\\<inverse>\\<inverse>\n                               Contra2\\<inverse>\\<inverse> uua_ uu_ \\<or>\n                              rel_U L1 Co1 Co2 Contra1 Contra2 uu_\n                               uua_)\\<inverse>\\<inverse>\n                          L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n                          Co2\\<inverse>\\<inverse>\n                          Contra1\\<inverse>\\<inverse>\n                          Contra2\\<inverse>\\<inverse> (D_U xb) (D_U y)\n 2. \\<And>x xa.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (erule rel_G_mono'; blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x\n        xa \\<Longrightarrow>\n       rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n        Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n        Contra2\\<inverse>\\<inverse> x xa", "apply (erule rel_U.coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa x1 x2.\n       (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> x1\n        x2 \\<Longrightarrow>\n       \\<exists>x y.\n          x1 = x \\<and>\n          x2 = y \\<and>\n          rel_G\n           (\\<lambda>uu_ uua_.\n               (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> uu_\n                uua_ \\<or>\n               rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n                Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n                Contra2\\<inverse>\\<inverse> uu_ uua_)\n           L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n           Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n           Contra2\\<inverse>\\<inverse> (D_U x) (D_U y)", "apply (subst (asm) conversep_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa x1 x2.\n       rel_U L1 Co1 Co2 Contra1 Contra2 x2 x1 \\<Longrightarrow>\n       \\<exists>x y.\n          x1 = x \\<and>\n          x2 = y \\<and>\n          rel_G\n           (\\<lambda>uu_ uua_.\n               (rel_U L1 Co1 Co2 Contra1 Contra2)\\<inverse>\\<inverse> uu_\n                uua_ \\<or>\n               rel_U L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n                Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n                Contra2\\<inverse>\\<inverse> uu_ uua_)\n           L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n           Co2\\<inverse>\\<inverse> Contra1\\<inverse>\\<inverse>\n           Contra2\\<inverse>\\<inverse> (D_U x) (D_U y)", "apply (erule rel_U.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa x1 x2 xb y.\n       \\<lbrakk>x2 = xb; x1 = y;\n        rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2\n         (D_U xb) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            x1 = x \\<and>\n                            x2 = y \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 (rel_U L1 Co1 Co2 Contra1\n                                   Contra2)\\<inverse>\\<inverse>\n                                  uu_ uua_ \\<or>\n                                 rel_U L1\\<inverse>\\<inverse>\n                                  Co1\\<inverse>\\<inverse>\n                                  Co2\\<inverse>\\<inverse>\n                                  Contra1\\<inverse>\\<inverse>\n                                  Contra2\\<inverse>\\<inverse> uu_ uua_)\n                             L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n                             Co2\\<inverse>\\<inverse>\n                             Contra1\\<inverse>\\<inverse>\n                             Contra2\\<inverse>\\<inverse> (D_U x) (D_U y)", "apply (simp del: conversep_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xb y.\n       \\<lbrakk>x2 = xb; x1 = y;\n        rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2\n         (D_U xb) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              (rel_U L1 Co1 Co2 Contra1\n                                Contra2)\\<inverse>\\<inverse>\n                               uu_ uua_ \\<or>\n                              rel_U L1\\<inverse>\\<inverse>\n                               Co1\\<inverse>\\<inverse>\n                               Co2\\<inverse>\\<inverse>\n                               Contra1\\<inverse>\\<inverse>\n                               Contra2\\<inverse>\\<inverse> uu_ uua_)\n                          L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n                          Co2\\<inverse>\\<inverse>\n                          Contra1\\<inverse>\\<inverse>\n                          Contra2\\<inverse>\\<inverse> (D_U y) (D_U xb)", "apply (rewrite conversep_iff[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xb y.\n       \\<lbrakk>x2 = xb; x1 = y;\n        rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2\n         (D_U xb) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> (rel_G\n                           (\\<lambda>uu_ uua_.\n                               (rel_U L1 Co1 Co2 Contra1\n                                 Contra2)\\<inverse>\\<inverse>\n                                uu_ uua_ \\<or>\n                               rel_U L1\\<inverse>\\<inverse>\n                                Co1\\<inverse>\\<inverse>\n                                Co2\\<inverse>\\<inverse>\n                                Contra1\\<inverse>\\<inverse>\n                                Contra2\\<inverse>\\<inverse> uu_ uua_)\n                           L1\\<inverse>\\<inverse> Co1\\<inverse>\\<inverse>\n                           Co2\\<inverse>\\<inverse>\n                           Contra1\\<inverse>\\<inverse>\n                           Contra2\\<inverse>\\<inverse>)\\<inverse>\\<inverse>\n                          (D_U xb) (D_U y)", "apply (unfold rel_G_conversep[symmetric] conversep_conversep)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xb y.\n       \\<lbrakk>x2 = xb; x1 = y;\n        rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2\n         (D_U xb) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              (rel_U L1 Co1 Co2 Contra1\n                                Contra2)\\<inverse>\\<inverse>\n                               uu_ uua_ \\<or>\n                              rel_U L1\\<inverse>\\<inverse>\n                               Co1\\<inverse>\\<inverse>\n                               Co2\\<inverse>\\<inverse>\n                               Contra1\\<inverse>\\<inverse>\n                               Contra2\\<inverse>\\<inverse> uu_\n                               uua_)\\<inverse>\\<inverse>\n                          L1 Co1 Co2 Contra1 Contra2 (D_U xb) (D_U y)", "apply (erule rel_G_mono'; blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma map_U_id0: \"map_U id id id id id = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_U id id id id id = id", "unfolding mapl_U_alt_def[symmetric] U.map_id0"], ["proof (prove)\ngoal (1 subgoal):\n 1. id = id", ".."], ["", "lemma map_U_id: \"map_U id id id id id x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_U id id id id id x = x", "by (simp add: map_U_id0)"], ["", "lemma map_U_comp: \"map_U l1 co1 co2 contra1 contra2 \\<circ> map_U l1' co1' co2' contra1' contra2' =\n  map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2') (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_U l1 co1 co2 contra1 contra2 \\<circ>\n    map_U l1' co1' co2' contra1' contra2' =\n    map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n     (contra1' \\<circ> contra1) (contra2' \\<circ> contra2)", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (map_U l1 co1 co2 contra1 contra2 \\<circ>\n        map_U l1' co1' co2' contra1' contra2')\n        x =\n       map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n        (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x", "subgoal for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (map_U l1 co1 co2 contra1 contra2 \\<circ>\n     map_U l1' co1' co2' contra1' contra2')\n     x =\n    map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n     (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x", "apply (coinduction arbitrary: x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       rell_G\n        (\\<lambda>U__ U'__.\n            \\<exists>x.\n               U__ =\n               (map_U l1 co1 co2 contra1 contra2 \\<circ>\n                map_U l1' co1' co2' contra1' contra2')\n                x \\<and>\n               U'__ =\n               map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n                (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x)\n        (=)\n        (D_U ((map_U l1 co1 co2 contra1 contra2 \\<circ>\n               map_U l1' co1' co2' contra1' contra2')\n               x))\n        (D_U (map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n               (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x))", "apply (simp add: mapl_G_def map_G_comp[THEN fun_cong, simplified])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       rell_G\n        (\\<lambda>U__ U'__.\n            \\<exists>x.\n               U__ =\n               map_U l1 co1 co2 contra1 contra2\n                (map_U l1' co1' co2' contra1' contra2' x) \\<and>\n               U'__ =\n               map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n                (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x)\n        (=)\n        (map_G\n          (map_U l1 co1 co2 contra1 contra2 \\<circ>\n           map_U l1' co1' co2' contra1' contra2')\n          (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n          (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) (D_U x))\n        (map_G\n          (map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n            (contra1' \\<circ> contra1) (contra2' \\<circ> contra2))\n          (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n          (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) (D_U x))", "apply (unfold rell_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       rel_G\n        (\\<lambda>U__ U'__.\n            \\<exists>x.\n               U__ =\n               map_U l1 co1 co2 contra1 contra2\n                (map_U l1' co1' co2' contra1' contra2' x) \\<and>\n               U'__ =\n               map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n                (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x)\n        (=) (=) (=) (=) (=)\n        (map_G\n          (map_U l1 co1 co2 contra1 contra2 \\<circ>\n           map_U l1' co1' co2' contra1' contra2')\n          (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n          (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) (D_U x))\n        (map_G\n          (map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n            (contra1' \\<circ> contra1) (contra2' \\<circ> contra2))\n          (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n          (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) (D_U x))", "apply (rule map_G_rel_cong[OF rel_G_eq_refl])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x xa y.\n       xa = y \\<Longrightarrow>\n       \\<exists>x.\n          (map_U l1 co1 co2 contra1 contra2 \\<circ>\n           map_U l1' co1' co2' contra1' contra2')\n           xa =\n          map_U l1 co1 co2 contra1 contra2\n           (map_U l1' co1' co2' contra1' contra2' x) \\<and>\n          map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n           (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) y =\n          map_U (l1 \\<circ> l1') (co1 \\<circ> co1') (co2 \\<circ> co2')\n           (contra1' \\<circ> contra1) (contra2' \\<circ> contra2) x\n 2. \\<And>x xa y.\n       xa = y \\<Longrightarrow> (l1 \\<circ> l1') xa = (l1 \\<circ> l1') y\n 3. \\<And>x xa y.\n       xa = y \\<Longrightarrow> (co1 \\<circ> co1') xa = (co1 \\<circ> co1') y\n 4. \\<And>x xa y.\n       xa = y \\<Longrightarrow> (co2 \\<circ> co2') xa = (co2 \\<circ> co2') y\n 5. \\<And>x xa y.\n       xa = y \\<Longrightarrow>\n       (contra1' \\<circ> contra1) xa = (contra1' \\<circ> contra1) y\n 6. \\<And>x xa y.\n       xa = y \\<Longrightarrow>\n       (contra2' \\<circ> contra2) xa = (contra2' \\<circ> contra2) y", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma map_U_parametric: \"rel_fun (rel_fun L1 L1')\n  (rel_fun (rel_fun Co1 Co1') (rel_fun (rel_fun Co2 Co2')\n  (rel_fun (rel_fun Contra1' Contra1) (rel_fun (rel_fun Contra2' Contra2)\n  (rel_fun (rel_U L1 Co1 Co2 Contra1 Contra2) (rel_U L1' Co1' Co2' Contra1' Contra2'))))))\n  map_U map_U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_fun (rel_fun L1 L1')\n     (rel_fun (rel_fun Co1 Co1')\n       (rel_fun (rel_fun Co2 Co2')\n         (rel_fun (rel_fun Contra1' Contra1)\n           (rel_fun (rel_fun Contra2' Contra2)\n             (rel_fun (rel_U L1 Co1 Co2 Contra1 Contra2)\n               (rel_U L1' Co1' Co2' Contra1' Contra2'))))))\n     map_U map_U", "apply (intro rel_funI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya xb yb xc yc xd yd xe ye.\n       \\<lbrakk>rel_fun L1 L1' x y; rel_fun Co1 Co1' xa ya;\n        rel_fun Co2 Co2' xb yb; rel_fun Contra1' Contra1 xc yc;\n        rel_fun Contra2' Contra2 xd yd;\n        rel_U L1 Co1 Co2 Contra1 Contra2 xe ye\\<rbrakk>\n       \\<Longrightarrow> rel_U L1' Co1' Co2' Contra1' Contra2'\n                          (map_U x xa xb xc xd xe) (map_U y ya yb yc yd ye)", "apply (coinduction)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda;\n        rel_U L1 Co1 Co2 Contra1 Contra2 xea yea\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            map_U xf xaa xba xca xda xea = x \\<and>\n                            map_U yf yaa yba yca yda yea = y \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 (\\<exists>x y xa ya xb yb xc yc xd yd xe\n                                     ye.\n                                     uu_ = map_U x xa xb xc xd xe \\<and>\n                                     uua_ = map_U y ya yb yc yd ye \\<and>\n                                     rel_fun L1 L1' x y \\<and>\n                                     rel_fun Co1 Co1' xa ya \\<and>\n                                     rel_fun Co2 Co2' xb yb \\<and>\n                                     rel_fun Contra1' Contra1 xc yc \\<and>\n                                     rel_fun Contra2' Contra2 xd yd \\<and>\n                                     rel_U L1 Co1 Co2 Contra1 Contra2 xe\nye) \\<or>\n                                 rel_U L1' Co1' Co2' Contra1' Contra2' uu_\n                                  uua_)\n                             L1' Co1' Co2' Contra1' Contra2' (D_U x) (D_U y)", "apply (simp add: mapl_G_def map_G_comp[THEN fun_cong, simplified])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda;\n        rel_U L1 Co1 Co2 Contra1 Contra2 xea yea\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              (\\<exists>x y xa ya xb yb xc yc xd yd xe.\n                                  uu_ = map_U x xa xb xc xd xe \\<and>\n                                  (\\<exists>ye.\nuua_ = map_U y ya yb yc yd ye \\<and>\nrel_fun L1 L1' x y \\<and>\nrel_fun Co1 Co1' xa ya \\<and>\nrel_fun Co2 Co2' xb yb \\<and>\nrel_fun Contra1' Contra1 xc yc \\<and>\nrel_fun Contra2' Contra2 xd yd \\<and>\nrel_U L1 Co1 Co2 Contra1 Contra2 xe ye)) \\<or>\n                              rel_U L1' Co1' Co2' Contra1' Contra2' uu_\n                               uua_)\n                          L1' Co1' Co2' Contra1' Contra2'\n                          (map_G (map_U xf xaa xba xca xda) xf xaa xba xca\n                            xda (D_U xea))\n                          (map_G (map_U yf yaa yba yca yda) yf yaa yba yca\n                            yda (D_U yea))", "apply (erule rel_U.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea x y.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda; xea = x; yea = y;\n        rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2\n         (D_U x) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              (\\<exists>x y xa ya xb yb xc yc xd yd xe.\n                                  uu_ = map_U x xa xb xc xd xe \\<and>\n                                  (\\<exists>ye.\nuua_ = map_U y ya yb yc yd ye \\<and>\nrel_fun L1 L1' x y \\<and>\nrel_fun Co1 Co1' xa ya \\<and>\nrel_fun Co2 Co2' xb yb \\<and>\nrel_fun Contra1' Contra1 xc yc \\<and>\nrel_fun Contra2' Contra2 xd yd \\<and>\nrel_U L1 Co1 Co2 Contra1 Contra2 xe ye)) \\<or>\n                              rel_U L1' Co1' Co2' Contra1' Contra2' uu_\n                               uua_)\n                          L1' Co1' Co2' Contra1' Contra2'\n                          (map_G (map_U xf xaa xba xca xda) xf xaa xba xca\n                            xda (D_U xea))\n                          (map_G (map_U yf yaa yba yca yda) yf yaa yba yca\n                            yda (D_U yea))", "apply (hypsubst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea x y.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda;\n        rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2\n         (D_U x) (D_U y)\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              (\\<exists>x y xa ya xb yb xc yc xd yd xe.\n                                  uu_ = map_U x xa xb xc xd xe \\<and>\n                                  (\\<exists>ye.\nuua_ = map_U y ya yb yc yd ye \\<and>\nrel_fun L1 L1' x y \\<and>\nrel_fun Co1 Co1' xa ya \\<and>\nrel_fun Co2 Co2' xb yb \\<and>\nrel_fun Contra1' Contra1 xc yc \\<and>\nrel_fun Contra2' Contra2 xd yd \\<and>\nrel_U L1 Co1 Co2 Contra1 Contra2 xe ye)) \\<or>\n                              rel_U L1' Co1' Co2' Contra1' Contra2' uu_\n                               uua_)\n                          L1' Co1' Co2' Contra1' Contra2'\n                          (map_G (map_U xf xaa xba xca xda) xf xaa xba xca\n                            xda (D_U x))\n                          (map_G (map_U yf yaa yba yca yda) yf yaa yba yca\n                            yda (D_U y))", "apply (erule map_G_rel_cong)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea x y xa ya.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda;\n        rel_U L1 Co1 Co2 Contra1 Contra2 xa ya\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x y xab yab xb yb xc yc xd yd xe.\n                             map_U xf xaa xba xca xda xa =\n                             map_U x xab xb xc xd xe \\<and>\n                             (\\<exists>ye.\n                                 map_U yf yaa yba yca yda ya =\n                                 map_U y yab yb yc yd ye \\<and>\n                                 rel_fun L1 L1' x y \\<and>\n                                 rel_fun Co1 Co1' xab yab \\<and>\n                                 rel_fun Co2 Co2' xb yb \\<and>\n                                 rel_fun Contra1' Contra1 xc yc \\<and>\n                                 rel_fun Contra2' Contra2 xd yd \\<and>\n                                 rel_U L1 Co1 Co2 Contra1 Contra2 xe\n                                  ye)) \\<or>\n                         rel_U L1' Co1' Co2' Contra1' Contra2'\n                          (map_U xf xaa xba xca xda xa)\n                          (map_U yf yaa yba yca yda ya)\n 2. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea x y xa ya.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda; L1 xa ya\\<rbrakk>\n       \\<Longrightarrow> L1' (xf xa) (yf ya)\n 3. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea x y xa ya.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda; Co1 xa ya\\<rbrakk>\n       \\<Longrightarrow> Co1' (xaa xa) (yaa ya)\n 4. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea x y xa ya.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda; Co2 xa ya\\<rbrakk>\n       \\<Longrightarrow> Co2' (xba xa) (yba ya)\n 5. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea x y xa ya.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda; Contra1' xa ya\\<rbrakk>\n       \\<Longrightarrow> Contra1 (xca xa) (yca ya)\n 6. \\<And>xf yf xaa yaa xba yba xca yca xda yda xea yea x y xa ya.\n       \\<lbrakk>rel_fun L1 L1' xf yf; rel_fun Co1 Co1' xaa yaa;\n        rel_fun Co2 Co2' xba yba; rel_fun Contra1' Contra1 xca yca;\n        rel_fun Contra2' Contra2 xda yda; Contra2' xa ya\\<rbrakk>\n       \\<Longrightarrow> Contra2 (xda xa) (yda ya)", "apply (blast elim: rel_funE)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition rel_U_pos_distr_cond :: \"('co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool) \\<Rightarrow> ('co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool) \\<Rightarrow> ('co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool) \\<Rightarrow> ('contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool) \\<Rightarrow> ('contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself \\<Rightarrow> bool\" where\n  \"rel_U_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' _ \\<longleftrightarrow>\n  (\\<forall>(L1 :: 'l1 \\<Rightarrow> 'l1' \\<Rightarrow> bool) (L1' :: 'l1' \\<Rightarrow> 'l1'' \\<Rightarrow> bool).\n    (rel_U L1 Co1 Co2 Contra1 Contra2 :: (_, _, _, _, _, 'f) U \\<Rightarrow> _) OO\n      rel_U L1' Co1' Co2' Contra1' Contra2' \\<le>\n    rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2'))\""], ["", "definition rel_U_neg_distr_cond :: \"('co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool) \\<Rightarrow> ('co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool) \\<Rightarrow> ('co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool) \\<Rightarrow> ('contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool) \\<Rightarrow> ('contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself \\<Rightarrow> bool\" where\n  \"rel_U_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' _ \\<longleftrightarrow>\n  (\\<forall>(L1 :: 'l1 \\<Rightarrow> 'l1' \\<Rightarrow> bool) (L1' :: 'l1' \\<Rightarrow> 'l1'' \\<Rightarrow> bool).\n    rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2') \\<le>\n    (rel_U L1 Co1 Co2 Contra1 Contra2 :: (_, _, _, _, _, 'f) U \\<Rightarrow> _) OO\n      rel_U L1' Co1' Co2' Contra1' Contra2')\""], ["", "primcorec rel_U_witness :: \"('l1 \\<Rightarrow> 'l1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool) \\<Rightarrow> ('co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool) \\<Rightarrow> ('co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool) \\<Rightarrow> ('contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool) \\<Rightarrow> ('contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool) \\<Rightarrow>\n    ('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n    ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<Rightarrow>\n    ('l1 \\<times> 'l1'', 'co1', 'co2', 'contra1', 'contra2', 'f) U\" where\n  \"D_U (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' xy) =\n  mapl_G (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2') id\n    (rel_G_witness (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2'))\n    L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' (D_U (fst xy), D_U (snd xy)))\""], ["", "lemma rel_U_pos_distr_imp:\n  fixes Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n      ('l1', 'co1', 'co2', 'contra1', 'contra2', 'f) U \\<times>\n      ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<times> 'l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n    and tytok_T :: \"('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n  assumes \"rel_G_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n  shows \"rel_U_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U_pos_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n     tytok_T", "unfolding rel_U_pos_distr_cond_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>L1 L1'.\n       rel_U L1 Co1 Co2 Contra1 Contra2 OO\n       rel_U L1' Co1' Co2' Contra1' Contra2'\n       \\<le> rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n              (Contra1 OO Contra1') (Contra2 OO Contra2')", "apply (intro allI predicate2I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L1 L1' x y.\n       (rel_U L1 Co1 Co2 Contra1 Contra2 OO\n        rel_U L1' Co1' Co2' Contra1' Contra2')\n        x y \\<Longrightarrow>\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y", "apply (erule relcomppE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L1 L1' x y b.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x b;\n        rel_U L1' Co1' Co2' Contra1' Contra2' b y\\<rbrakk>\n       \\<Longrightarrow> rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2') x y", "subgoal premises prems for L1 L1' x z y"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x z", "using prems"], ["proof (prove)\nusing this:\n  rel_U L1 Co1 Co2 Contra1 Contra2 x y\n  rel_U L1' Co1' Co2' Contra1' Contra2' y z\n\ngoal (1 subgoal):\n 1. rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n     (Contra2 OO Contra2') x z", "apply (coinduction arbitrary: x y z)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa y.\n                            x = xa \\<and>\n                            z = y \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 (\\<exists>x y z.\n                                     uu_ = x \\<and>\n                                     uua_ = z \\<and>\n                                     rel_U L1 Co1 Co2 Contra1 Contra2 x\ny \\<and>\n                                     rel_U L1' Co1' Co2' Contra1' Contra2' y\nz) \\<or>\n                                 rel_U (L1 OO L1') (Co1 OO Co1')\n                                  (Co2 OO Co2') (Contra1 OO Contra1')\n                                  (Contra2 OO Contra2') uu_ uua_)\n                             (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                             (Contra1 OO Contra1') (Contra2 OO Contra2')\n                             (D_U xa) (D_U y)", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> rel_G\n                          (\\<lambda>uu_ uua_.\n                              (\\<exists>y.\n                                  rel_U L1 Co1 Co2 Contra1 Contra2 uu_\n                                   y \\<and>\n                                  rel_U L1' Co1' Co2' Contra1' Contra2' y\n                                   uua_) \\<or>\n                              rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                               (Contra1 OO Contra1') (Contra2 OO Contra2')\n                               uu_ uua_)\n                          (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n                          (Contra1 OO Contra1') (Contra2 OO Contra2')\n                          (D_U x) (D_U z)", "apply (rule rel_G_pos_distr[THEN predicate2D,\n          OF assms relcomppI, THEN rel_G_mono'])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> rel_G (?L1.7 x y z) (?L2.7 x y z) Co1 Co2 Contra1\n                          Contra2 (D_U x) (?b8 x y z)\n 2. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> rel_G (?L1'7 x y z) (?L2'7 x y z) Co1' Co2'\n                          Contra1' Contra2' (?b8 x y z) (D_U z)\n 3. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> ?L1.7 x y z OO ?L1'7 x y z\n                         \\<le> (\\<lambda>uu_ uua_.\n                                   (\\<exists>y.\n rel_U L1 Co1 Co2 Contra1 Contra2 uu_ y \\<and>\n rel_U L1' Co1' Co2' Contra1' Contra2' y uua_) \\<or>\n                                   rel_U (L1 OO L1') (Co1 OO Co1')\n                                    (Co2 OO Co2') (Contra1 OO Contra1')\n                                    (Contra2 OO Contra2') uu_ uua_)\n 4. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> ?L2.7 x y z OO ?L2'7 x y z \\<le> L1 OO L1'\n 5. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> Co1 OO Co1' \\<le> Co1 OO Co1'\n 6. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> Co2 OO Co2' \\<le> Co2 OO Co2'\n 7. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> Contra1 OO Contra1' \\<le> Contra1 OO Contra1'\n 8. \\<And>x y z.\n       \\<lbrakk>rel_U L1 Co1 Co2 Contra1 Contra2 x y;\n        rel_U L1' Co1' Co2' Contra1' Contra2' y z\\<rbrakk>\n       \\<Longrightarrow> Contra2 OO Contra2' \\<le> Contra2 OO Contra2'", "apply (auto elim: rel_U.cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rel_U_witness1:\n  fixes L1 :: \"'l1 \\<Rightarrow> 'l1'' \\<Rightarrow> bool\"\n    and Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n             (('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n              ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U) \\<times>\n             ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<times>\n             'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and x :: \"(_, _, _, _, _, 'f) U\"\n  assumes cond: \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n    and rel_OO: \"rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2') x y\"\n  shows \"rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2 x\n      (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' (x, y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     x (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (x, y))", "using rel_OO"], ["proof (prove)\nusing this:\n  rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n   (Contra2 OO Contra2') x y\n\ngoal (1 subgoal):\n 1. rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n     x (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n         (x, y))", "apply (coinduction arbitrary: x y)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       \\<exists>xa ya.\n          x = xa \\<and>\n          rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n           Contra2' (x, y) =\n          ya \\<and>\n          rel_G\n           (\\<lambda>uu_ uua_.\n               (\\<exists>x y.\n                   uu_ = x \\<and>\n                   uua_ =\n                   rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' (x, y) \\<and>\n                   rel_U L1 (Co1 OO Co1') (Co2 OO Co2')\n                    (Contra1 OO Contra1') (Contra2 OO Contra2') x y) \\<or>\n               rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2\n                Contra1 Contra2 uu_ uua_)\n           (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n           Contra2 (D_U xa) (D_U ya)", "apply (erule rel_U.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>x = xa; y = ya;\n        rel_G\n         (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n           (Contra2 OO Contra2'))\n         L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n         (Contra2 OO Contra2') (D_U xa) (D_U ya)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ya.\n                            x = xa \\<and>\n                            rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                             Contra1' Contra2 Contra2' (x, y) =\n                            ya \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 (\\<exists>x y.\n                                     uu_ = x \\<and>\n                                     uua_ =\n                                     rel_U_witness L1 Co1 Co1' Co2 Co2'\nContra1 Contra1' Contra2 Contra2' (x, y) \\<and>\n                                     rel_U L1 (Co1 OO Co1') (Co2 OO Co2')\n(Contra1 OO Contra1') (Contra2 OO Contra2') x y) \\<or>\n                                 rel_U\n                                  (\\<lambda>x (x', y). x' = x \\<and> L1 x y)\n                                  Co1 Co2 Contra1 Contra2 uu_ uua_)\n                             (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1\n                             Co2 Contra1 Contra2 (D_U xa) (D_U ya)", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       rel_G\n        (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2'))\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') (D_U xa) (D_U ya) \\<Longrightarrow>\n       rel_G\n        (\\<lambda>uu_ uua_.\n            (\\<exists>y.\n                uua_ =\n                rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                 Contra2' (uu_, y) \\<and>\n                rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') uu_ y) \\<or>\n            rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n             Contra2 uu_ uua_)\n        (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n        (D_U xa)\n        (mapl_G\n          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2')\n          id (rel_G_witness\n               (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2'))\n               L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n               (D_U xa, D_U ya)))", "apply (rewrite in \"rel_G _ _ _ _ _ _ \\<hole> _\" map_G_id[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       rel_G\n        (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2'))\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') (D_U xa) (D_U ya) \\<Longrightarrow>\n       rel_G\n        (\\<lambda>uu_ uua_.\n            (\\<exists>y.\n                uua_ =\n                rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                 Contra2' (uu_, y) \\<and>\n                rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') uu_ y) \\<or>\n            rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n             Contra2 uu_ uua_)\n        (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n        (map_G id id id id id id (D_U xa))\n        (mapl_G\n          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2')\n          id (rel_G_witness\n               (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2'))\n               L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n               (D_U xa, D_U ya)))", "apply (subst mapl_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       rel_G\n        (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2'))\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') (D_U xa) (D_U ya) \\<Longrightarrow>\n       rel_G\n        (\\<lambda>uu_ uua_.\n            (\\<exists>y.\n                uua_ =\n                rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                 Contra2' (uu_, y) \\<and>\n                rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') uu_ y) \\<or>\n            rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1\n             Contra2 uu_ uua_)\n        (\\<lambda>x (x', y). x' = x \\<and> L1 x y) Co1 Co2 Contra1 Contra2\n        (map_G id id id id id id (D_U xa))\n        (map_G\n          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2')\n          id id id id id\n          (rel_G_witness\n            (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n              (Contra2 OO Contra2'))\n            L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n            (D_U xa, D_U ya)))", "apply (rule map_G_rel_cong)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>xa ya.\n       rel_G\n        (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2'))\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') (D_U xa) (D_U ya) \\<Longrightarrow>\n       rel_G (?L1.18 xa ya) (?L2.18 xa ya) (?Co1.18 xa ya) (?Co2.18 xa ya)\n        (?Contra1.18 xa ya) (?Contra2.18 xa ya) (D_U xa)\n        (rel_G_witness\n          (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n            (Contra2 OO Contra2'))\n          L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n          (D_U xa, D_U ya))\n 2. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        ?L1.18 xa ya x y\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                              Contra1' Contra2 Contra2' y =\n                             rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                              Contra1' Contra2 Contra2' (id x, ya) \\<and>\n                             rel_U L1 (Co1 OO Co1') (Co2 OO Co2')\n                              (Contra1 OO Contra1') (Contra2 OO Contra2')\n                              (id x) ya) \\<or>\n                         rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y)\n                          Co1 Co2 Contra1 Contra2 (id x)\n                          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                            Contra1' Contra2 Contra2' y)\n 3. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        ?L2.18 xa ya x y\\<rbrakk>\n       \\<Longrightarrow> case id y of\n                         (x', y) \\<Rightarrow> x' = id x \\<and> L1 (id x) y\n 4. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        ?Co1.18 xa ya x y\\<rbrakk>\n       \\<Longrightarrow> Co1 (id x) (id y)\n 5. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        ?Co2.18 xa ya x y\\<rbrakk>\n       \\<Longrightarrow> Co2 (id x) (id y)\n 6. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Contra1 x y\\<rbrakk>\n       \\<Longrightarrow> ?Contra1.18 xa ya (id x) (id y)\n 7. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Contra2 x y\\<rbrakk>\n       \\<Longrightarrow> ?Contra2.18 xa ya (id x) (id y)", "apply (erule rel_G_witness1[OF cond])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        case y of\n        (x', y) \\<Rightarrow>\n          x' = x \\<and>\n          rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n           (Contra2 OO Contra2') x y\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ya.\n                             rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                              Contra1' Contra2 Contra2' y =\n                             rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                              Contra1' Contra2 Contra2' (id x, ya) \\<and>\n                             rel_U L1 (Co1 OO Co1') (Co2 OO Co2')\n                              (Contra1 OO Contra1') (Contra2 OO Contra2')\n                              (id x) ya) \\<or>\n                         rel_U (\\<lambda>x (x', y). x' = x \\<and> L1 x y)\n                          Co1 Co2 Contra1 Contra2 (id x)\n                          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                            Contra1' Contra2 Contra2' y)\n 2. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        case y of (x', y) \\<Rightarrow> x' = x \\<and> L1 x y\\<rbrakk>\n       \\<Longrightarrow> case id y of\n                         (x', y) \\<Rightarrow> x' = id x \\<and> L1 (id x) y\n 3. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Co1 x y\\<rbrakk>\n       \\<Longrightarrow> Co1 (id x) (id y)\n 4. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Co2 x y\\<rbrakk>\n       \\<Longrightarrow> Co2 (id x) (id y)\n 5. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Contra1 x y\\<rbrakk>\n       \\<Longrightarrow> Contra1 (id x) (id y)\n 6. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Contra2 x y\\<rbrakk>\n       \\<Longrightarrow> Contra2 (id x) (id y)", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rel_U_witness2:\n  fixes L1 :: \"'l1 \\<Rightarrow> 'l1'' \\<Rightarrow> bool\"\n    and Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n             (('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n              ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U) \\<times>\n             ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<times>\n             'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and x :: \"(_, _, _, _, _, 'f) U\"\n  assumes cond: \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n    and rel_OO: \"rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1') (Contra2 OO Contra2') x y\"\n  shows \"rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1' Contra2'\n      (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' (x, y)) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n     Contra2'\n     (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (x, y))\n     y", "using rel_OO"], ["proof (prove)\nusing this:\n  rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n   (Contra2 OO Contra2') x y\n\ngoal (1 subgoal):\n 1. rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n     Contra2'\n     (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n       (x, y))\n     y", "apply (coinduction arbitrary: x y)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       \\<exists>xa ya.\n          rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n           Contra2' (x, y) =\n          xa \\<and>\n          y = ya \\<and>\n          rel_G\n           (\\<lambda>uu_ uua_.\n               (\\<exists>x y.\n                   uu_ =\n                   rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1'\n                    Contra2 Contra2' (x, y) \\<and>\n                   uua_ = y \\<and>\n                   rel_U L1 (Co1 OO Co1') (Co2 OO Co2')\n                    (Contra1 OO Contra1') (Contra2 OO Contra2') x y) \\<or>\n               rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n                Contra1' Contra2' uu_ uua_)\n           (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n           Contra2' (D_U xa) (D_U ya)", "apply (erule rel_U.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>x = xa; y = ya;\n        rel_G\n         (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n           (Contra2 OO Contra2'))\n         L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n         (Contra2 OO Contra2') (D_U xa) (D_U ya)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ya.\n                            rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                             Contra1' Contra2 Contra2' (x, y) =\n                            xa \\<and>\n                            y = ya \\<and>\n                            rel_G\n                             (\\<lambda>uu_ uua_.\n                                 (\\<exists>x y.\n                                     uu_ =\n                                     rel_U_witness L1 Co1 Co1' Co2 Co2'\nContra1 Contra1' Contra2 Contra2' (x, y) \\<and>\n                                     uua_ = y \\<and>\n                                     rel_U L1 (Co1 OO Co1') (Co2 OO Co2')\n(Contra1 OO Contra1') (Contra2 OO Contra2') x y) \\<or>\n                                 rel_U\n                                  (\\<lambda>(x, y') y. y' = y \\<and> L1 x y)\n                                  Co1' Co2' Contra1' Contra2' uu_ uua_)\n                             (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1'\n                             Co2' Contra1' Contra2' (D_U xa) (D_U ya)", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       rel_G\n        (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2'))\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') (D_U xa) (D_U ya) \\<Longrightarrow>\n       rel_G\n        (\\<lambda>uu_ uua_.\n            (\\<exists>x.\n                uu_ =\n                rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                 Contra2' (x, uua_) \\<and>\n                rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x uua_) \\<or>\n            rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n             Contra1' Contra2' uu_ uua_)\n        (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n        Contra2'\n        (mapl_G\n          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2')\n          id (rel_G_witness\n               (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2'))\n               L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n               (D_U xa, D_U ya)))\n        (D_U ya)", "apply (rewrite in \"rel_G _ _ _ _ _ _ _ \\<hole>\" map_G_id[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       rel_G\n        (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2'))\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') (D_U xa) (D_U ya) \\<Longrightarrow>\n       rel_G\n        (\\<lambda>uu_ uua_.\n            (\\<exists>x.\n                uu_ =\n                rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                 Contra2' (x, uua_) \\<and>\n                rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x uua_) \\<or>\n            rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n             Contra1' Contra2' uu_ uua_)\n        (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n        Contra2'\n        (mapl_G\n          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2')\n          id (rel_G_witness\n               (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2'))\n               L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n               (D_U xa, D_U ya)))\n        (map_G id id id id id id (D_U ya))", "apply (subst mapl_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       rel_G\n        (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2'))\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') (D_U xa) (D_U ya) \\<Longrightarrow>\n       rel_G\n        (\\<lambda>uu_ uua_.\n            (\\<exists>x.\n                uu_ =\n                rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n                 Contra2' (x, uua_) \\<and>\n                rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') x uua_) \\<or>\n            rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2'\n             Contra1' Contra2' uu_ uua_)\n        (\\<lambda>(x, y') y. y' = y \\<and> L1 x y) Co1' Co2' Contra1'\n        Contra2'\n        (map_G\n          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n            Contra2')\n          id id id id id\n          (rel_G_witness\n            (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n              (Contra2 OO Contra2'))\n            L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n            (D_U xa, D_U ya)))\n        (map_G id id id id id id (D_U ya))", "apply (rule map_G_rel_cong)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>xa ya.\n       rel_G\n        (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n          (Contra2 OO Contra2'))\n        L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') (D_U xa) (D_U ya) \\<Longrightarrow>\n       rel_G (?L1.18 xa ya) (?L2.18 xa ya) (?Co1.18 xa ya) (?Co2.18 xa ya)\n        (?Contra1.18 xa ya) (?Contra2.18 xa ya)\n        (rel_G_witness\n          (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n            (Contra2 OO Contra2'))\n          L1 Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n          (D_U xa, D_U ya))\n        (D_U ya)\n 2. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        ?L1.18 xa ya x y\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>xa.\n                             rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                              Contra1' Contra2 Contra2' x =\n                             rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                              Contra1' Contra2 Contra2' (xa, id y) \\<and>\n                             rel_U L1 (Co1 OO Co1') (Co2 OO Co2')\n                              (Contra1 OO Contra1') (Contra2 OO Contra2') xa\n                              (id y)) \\<or>\n                         rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y)\n                          Co1' Co2' Contra1' Contra2'\n                          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                            Contra1' Contra2 Contra2' x)\n                          (id y)\n 3. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        ?L2.18 xa ya x y\\<rbrakk>\n       \\<Longrightarrow> (case id x of\n                          (x, y') \\<Rightarrow>\n                            \\<lambda>y. y' = y \\<and> L1 x y)\n                          (id y)\n 4. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        ?Co1.18 xa ya x y\\<rbrakk>\n       \\<Longrightarrow> Co1' (id x) (id y)\n 5. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        ?Co2.18 xa ya x y\\<rbrakk>\n       \\<Longrightarrow> Co2' (id x) (id y)\n 6. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Contra1' x y\\<rbrakk>\n       \\<Longrightarrow> ?Contra1.18 xa ya (id x) (id y)\n 7. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Contra2' x y\\<rbrakk>\n       \\<Longrightarrow> ?Contra2.18 xa ya (id x) (id y)", "apply (erule rel_G_witness2[OF cond])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        (case x of\n         (x, y') \\<Rightarrow>\n           \\<lambda>y.\n              y' = y \\<and>\n              rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n               (Contra2 OO Contra2') x y)\n         y\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>xa.\n                             rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                              Contra1' Contra2 Contra2' x =\n                             rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                              Contra1' Contra2 Contra2' (xa, id y) \\<and>\n                             rel_U L1 (Co1 OO Co1') (Co2 OO Co2')\n                              (Contra1 OO Contra1') (Contra2 OO Contra2') xa\n                              (id y)) \\<or>\n                         rel_U (\\<lambda>(x, y') y. y' = y \\<and> L1 x y)\n                          Co1' Co2' Contra1' Contra2'\n                          (rel_U_witness L1 Co1 Co1' Co2 Co2' Contra1\n                            Contra1' Contra2 Contra2' x)\n                          (id y)\n 2. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        (case x of (x, y') \\<Rightarrow> \\<lambda>y. y' = y \\<and> L1 x y)\n         y\\<rbrakk>\n       \\<Longrightarrow> (case id x of\n                          (x, y') \\<Rightarrow>\n                            \\<lambda>y. y' = y \\<and> L1 x y)\n                          (id y)\n 3. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Co1' x y\\<rbrakk>\n       \\<Longrightarrow> Co1' (id x) (id y)\n 4. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Co2' x y\\<rbrakk>\n       \\<Longrightarrow> Co2' (id x) (id y)\n 5. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Contra1' x y\\<rbrakk>\n       \\<Longrightarrow> Contra1' (id x) (id y)\n 6. \\<And>xa ya x y.\n       \\<lbrakk>rel_G\n                 (rel_U L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                   (Contra2 OO Contra2'))\n                 L1 (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n                 (Contra2 OO Contra2') (D_U xa) (D_U ya);\n        Contra2' x y\\<rbrakk>\n       \\<Longrightarrow> Contra2' (id x) (id y)", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rel_U_neg_distr_imp:\n  fixes Co1 :: \"'co1 \\<Rightarrow> 'co1' \\<Rightarrow> bool\" and Co1' :: \"'co1' \\<Rightarrow> 'co1'' \\<Rightarrow> bool\"\n    and Co2 :: \"'co2 \\<Rightarrow> 'co2' \\<Rightarrow> bool\" and Co2' :: \"'co2' \\<Rightarrow> 'co2'' \\<Rightarrow> bool\"\n    and Contra1 :: \"'contra1 \\<Rightarrow> 'contra1' \\<Rightarrow> bool\" and Contra1' :: \"'contra1' \\<Rightarrow> 'contra1'' \\<Rightarrow> bool\"\n    and Contra2 :: \"'contra2 \\<Rightarrow> 'contra2' \\<Rightarrow> bool\" and Contra2' :: \"'contra2' \\<Rightarrow> 'contra2'' \\<Rightarrow> bool\"\n    and tytok_G :: \"(('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n          (('l1, 'co1, 'co2, 'contra1, 'contra2, 'f) U \\<times>\n           ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U) \\<times>\n          ('l1'', 'co1'', 'co2'', 'contra1'', 'contra2'', 'f) U \\<times>\n          'l1 \\<times> ('l1 \\<times> 'l1'') \\<times> 'l1'' \\<times> 'f) itself\"\n    and tytok_T :: \"('l1 \\<times> 'l1' \\<times> 'l1'' \\<times> 'f) itself\"\n  assumes \"rel_G_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_G\"\n  shows \"rel_U_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' tytok_T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U_neg_distr_cond Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2'\n     tytok_T", "unfolding rel_U_neg_distr_cond_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>L1 L1'.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2')\n       \\<le> rel_U L1 Co1 Co2 Contra1 Contra2 OO\n             rel_U L1' Co1' Co2' Contra1' Contra2'", "proof (intro allI predicate2I relcomppI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1 Co1 Co2 Contra1 Contra2 x (?b3 L1 L1' x y)\n 2. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1' Co1' Co2' Contra1' Contra2' (?b3 L1 L1' x y) y", "fix L1 :: \"'l1 \\<Rightarrow> 'l1' \\<Rightarrow> bool\" and L1' :: \"'l1' \\<Rightarrow> 'l1'' \\<Rightarrow> bool\"\n    and x :: \"(_, _, _, _, _, 'f) U\" and y :: \"(_, _, _, _, _, 'f) U\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1 Co1 Co2 Contra1 Contra2 x (?b3 L1 L1' x y)\n 2. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1' Co1' Co2' Contra1' Contra2' (?b3 L1 L1' x y) y", "assume *: \"rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2')\n    (Contra1 OO Contra1') (Contra2 OO Contra2') x y\""], ["proof (state)\nthis:\n  rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n   (Contra2 OO Contra2') x y\n\ngoal (2 subgoals):\n 1. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1 Co1 Co2 Contra1 Contra2 x (?b3 L1 L1' x y)\n 2. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1' Co1' Co2' Contra1' Contra2' (?b3 L1 L1' x y) y", "let ?z = \"map_U (relcompp_witness L1 L1') id id id id\n    (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2 Contra2' (x, y))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1 Co1 Co2 Contra1 Contra2 x (?b3 L1 L1' x y)\n 2. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1' Co1' Co2' Contra1' Contra2' (?b3 L1 L1' x y) y", "show \"rel_U L1 Co1 Co2 Contra1 Contra2 x ?z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U L1 Co1 Co2 Contra1 Contra2 x\n     (map_U (relcompp_witness L1 L1') id id id id\n       (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n         Contra2' (x, y)))", "apply(subst map_U_id[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U L1 Co1 Co2 Contra1 Contra2 (map_U id id id id id x)\n     (map_U (relcompp_witness L1 L1') id id id id\n       (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n         Contra2' (x, y)))", "apply(rule map_U_parametric[unfolded rel_fun_def, rule_format, rotated -1])"], ["proof (prove)\ngoal (6 subgoals):\n 1. rel_U ?L1.0 ?Co1.0 ?Co2.0 ?Contra1.0 ?Contra2.0 x\n     (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n       Contra2' (x, y))\n 2. \\<And>x y.\n       ?L1.0 x y \\<Longrightarrow> L1 (id x) (relcompp_witness L1 L1' y)\n 3. \\<And>x y. ?Co1.0 x y \\<Longrightarrow> Co1 (id x) (id y)\n 4. \\<And>x y. ?Co2.0 x y \\<Longrightarrow> Co2 (id x) (id y)\n 5. \\<And>x y. Contra1 x y \\<Longrightarrow> ?Contra1.0 (id x) (id y)\n 6. \\<And>x y. Contra2 x y \\<Longrightarrow> ?Contra2.0 (id x) (id y)", "apply(rule rel_U_witness1[OF assms *])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       case y of\n       (x', y) \\<Rightarrow> x' = x \\<and> (L1 OO L1') x y \\<Longrightarrow>\n       L1 (id x) (relcompp_witness L1 L1' y)\n 2. \\<And>x y. Co1 x y \\<Longrightarrow> Co1 (id x) (id y)\n 3. \\<And>x y. Co2 x y \\<Longrightarrow> Co2 (id x) (id y)\n 4. \\<And>x y. Contra1 x y \\<Longrightarrow> Contra1 (id x) (id y)\n 5. \\<And>x y. Contra2 x y \\<Longrightarrow> Contra2 (id x) (id y)", "apply(auto simp add: vimage2p_def del: relcomppE elim!: relcompp_witness)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  rel_U L1 Co1 Co2 Contra1 Contra2 x\n   (map_U (relcompp_witness L1 L1') id id id id\n     (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n       Contra2' (x, y)))\n\ngoal (1 subgoal):\n 1. \\<And>L1 L1' x y.\n       rel_U (L1 OO L1') (Co1 OO Co1') (Co2 OO Co2') (Contra1 OO Contra1')\n        (Contra2 OO Contra2') x y \\<Longrightarrow>\n       rel_U L1' Co1' Co2' Contra1' Contra2'\n        (map_U (relcompp_witness L1 L1') id id id id\n          (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1'\n            Contra2 Contra2' (x, y)))\n        y", "show \"rel_U L1' Co1' Co2' Contra1' Contra2' ?z y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U L1' Co1' Co2' Contra1' Contra2'\n     (map_U (relcompp_witness L1 L1') id id id id\n       (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n         Contra2' (x, y)))\n     y", "apply(rewrite in \"rel_U _ _ _ _ _ _ \\<hole>\" map_U_id[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U L1' Co1' Co2' Contra1' Contra2'\n     (map_U (relcompp_witness L1 L1') id id id id\n       (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n         Contra2' (x, y)))\n     (map_U id id id id id y)", "apply(rule map_U_parametric[unfolded rel_fun_def, rule_format, rotated -1])"], ["proof (prove)\ngoal (6 subgoals):\n 1. rel_U ?L1.3 ?Co1.3 ?Co2.3 ?Contra1.3 ?Contra2.3\n     (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n       Contra2' (x, y))\n     y\n 2. \\<And>x y.\n       ?L1.3 x y \\<Longrightarrow> L1' (relcompp_witness L1 L1' x) (id y)\n 3. \\<And>x y. ?Co1.3 x y \\<Longrightarrow> Co1' (id x) (id y)\n 4. \\<And>x y. ?Co2.3 x y \\<Longrightarrow> Co2' (id x) (id y)\n 5. \\<And>x y. Contra1' x y \\<Longrightarrow> ?Contra1.3 (id x) (id y)\n 6. \\<And>x y. Contra2' x y \\<Longrightarrow> ?Contra2.3 (id x) (id y)", "apply(rule rel_U_witness2[OF assms *])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       (case x of\n        (x, y') \\<Rightarrow> \\<lambda>y. y' = y \\<and> (L1 OO L1') x y)\n        y \\<Longrightarrow>\n       L1' (relcompp_witness L1 L1' x) (id y)\n 2. \\<And>x y. Co1' x y \\<Longrightarrow> Co1' (id x) (id y)\n 3. \\<And>x y. Co2' x y \\<Longrightarrow> Co2' (id x) (id y)\n 4. \\<And>x y. Contra1' x y \\<Longrightarrow> Contra1' (id x) (id y)\n 5. \\<And>x y. Contra2' x y \\<Longrightarrow> Contra2' (id x) (id y)", "apply(auto simp add: vimage2p_def del: relcomppE elim!: relcompp_witness)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  rel_U L1' Co1' Co2' Contra1' Contra2'\n   (map_U (relcompp_witness L1 L1') id id id id\n     (rel_U_witness (L1 OO L1') Co1 Co1' Co2 Co2' Contra1 Contra1' Contra2\n       Contra2' (x, y)))\n   y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rel_U_pos_distr_cond_eq:\n  \"\\<And>tytok. rel_U_pos_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tytok. rel_U_pos_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok", "by (intro rel_U_pos_distr_imp rel_G_pos_distr_cond_eq)"], ["", "lemma rel_U_neg_distr_cond_eq:\n  \"\\<And>tytok. rel_U_neg_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tytok. rel_U_neg_distr_cond (=) (=) (=) (=) (=) (=) (=) (=) tytok", "by (intro rel_U_neg_distr_imp rel_G_neg_distr_cond_eq)"], ["", "text \\<open>The BNF axioms are proved by the datatype package.\\<close>"], ["", "thm U.set_map U.bd_card_order U.bd_cinfinite U.set_bd U.map_cong[OF refl]\n  U.rel_mono_strong U.wit"], ["", "subsubsection \\<open>Parametricity laws\\<close>"], ["", "context includes lifting_syntax begin"], ["", "lemma C_U_parametric: \"(rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2 ===>\n  rel_U L1 Co1 Co2 Contra1 Contra2) C_U C_U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1\n      Contra2 ===>\n     rel_U L1 Co1 Co2 Contra1 Contra2)\n     C_U C_U", "by (fastforce intro: rel_U.intros)"], ["", "lemma D_U_parametric: \"(rel_U L1 Co1 Co2 Contra1 Contra2 ===>\n  rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2) D_U D_U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_U L1 Co1 Co2 Contra1 Contra2 ===>\n     rel_G (rel_U L1 Co1 Co2 Contra1 Contra2) L1 Co1 Co2 Contra1 Contra2)\n     D_U D_U", "by (fast elim: rel_U.cases)"], ["", "lemma corec_U_parametric:\n  \"((A ===> rel_G (rel_sum (rel_U L1 Co1 Co2 Contra1 Contra2) A) L1 Co1 Co2 Contra1 Contra2) ===>\n  A ===> rel_U L1 Co1 Co2 Contra1 Contra2) corec_U corec_U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A ===>\n      rel_G (rel_sum (rel_U L1 Co1 Co2 Contra1 Contra2) A) L1 Co1 Co2\n       Contra1 Contra2) ===>\n     A ===> rel_U L1 Co1 Co2 Contra1 Contra2)\n     corec_U corec_U", "apply (intro rel_funI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>(A ===>\n                 rel_G (rel_sum (rel_U L1 Co1 Co2 Contra1 Contra2) A) L1 Co1\n                  Co2 Contra1 Contra2)\n                 x y;\n        A xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_U L1 Co1 Co2 Contra1 Contra2 (corec_U x xa)\n                          (corec_U y ya)", "subgoal premises prems for f g x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_U L1 Co1 Co2 Contra1 Contra2 (corec_U f x) (corec_U g y)", "using prems(2)"], ["proof (prove)\nusing this:\n  A x y\n\ngoal (1 subgoal):\n 1. rel_U L1 Co1 Co2 Contra1 Contra2 (corec_U f x) (corec_U g y)", "apply (coinduction arbitrary: x y)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       A x y \\<Longrightarrow>\n       \\<exists>xa ya.\n          corec_U f x = xa \\<and>\n          corec_U g y = ya \\<and>\n          rel_G\n           (\\<lambda>uu_ uua_.\n               (\\<exists>x y.\n                   uu_ = corec_U f x \\<and>\n                   uua_ = corec_U g y \\<and> A x y) \\<or>\n               rel_U L1 Co1 Co2 Contra1 Contra2 uu_ uua_)\n           L1 Co1 Co2 Contra1 Contra2 (D_U xa) (D_U ya)", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       A x y \\<Longrightarrow>\n       rel_G\n        (\\<lambda>uu_ uua_.\n            (\\<exists>x.\n                uu_ = corec_U f x \\<and>\n                (\\<exists>y. uua_ = corec_U g y \\<and> A x y)) \\<or>\n            rel_U L1 Co1 Co2 Contra1 Contra2 uu_ uua_)\n        L1 Co1 Co2 Contra1 Contra2\n        (mapl_G\n          (\\<lambda>x.\n              case x of Inl U \\<Rightarrow> U\n              | Inr a \\<Rightarrow> corec_U f a)\n          id (f x))\n        (mapl_G (case_sum (\\<lambda>U. U) (corec_U g)) id (g y))", "apply (unfold mapl_G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       A x y \\<Longrightarrow>\n       rel_G\n        (\\<lambda>uu_ uua_.\n            (\\<exists>x.\n                uu_ = corec_U f x \\<and>\n                (\\<exists>y. uua_ = corec_U g y \\<and> A x y)) \\<or>\n            rel_U L1 Co1 Co2 Contra1 Contra2 uu_ uua_)\n        L1 Co1 Co2 Contra1 Contra2\n        (map_G (case_sum (\\<lambda>U. U) (corec_U f)) id id id id id (f x))\n        (map_G (case_sum (\\<lambda>U. U) (corec_U g)) id id id id id (g y))", "apply (rule map_G_rel_cong)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x y.\n       A x y \\<Longrightarrow>\n       rel_G (?L1.3 x y) (?L2.3 x y) (?Co1.3 x y) (?Co2.3 x y)\n        (?Contra1.3 x y) (?Contra2.3 x y) (f x) (g y)\n 2. \\<And>x y xa ya.\n       \\<lbrakk>A x y; ?L1.3 x y xa ya\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             (case xa of Inl U \\<Rightarrow> U\n                              | Inr x \\<Rightarrow> corec_U f x) =\n                             corec_U f x \\<and>\n                             (\\<exists>y.\n                                 (case ya of Inl U \\<Rightarrow> U\n                                  | Inr x \\<Rightarrow> corec_U g x) =\n                                 corec_U g y \\<and>\n                                 A x y)) \\<or>\n                         rel_U L1 Co1 Co2 Contra1 Contra2\n                          (case xa of Inl U \\<Rightarrow> U\n                           | Inr x \\<Rightarrow> corec_U f x)\n                          (case ya of Inl U \\<Rightarrow> U\n                           | Inr x \\<Rightarrow> corec_U g x)\n 3. \\<And>x y xa ya.\n       \\<lbrakk>A x y; ?L2.3 x y xa ya\\<rbrakk>\n       \\<Longrightarrow> L1 (id xa) (id ya)\n 4. \\<And>x y xa ya.\n       \\<lbrakk>A x y; ?Co1.3 x y xa ya\\<rbrakk>\n       \\<Longrightarrow> Co1 (id xa) (id ya)\n 5. \\<And>x y xa ya.\n       \\<lbrakk>A x y; ?Co2.3 x y xa ya\\<rbrakk>\n       \\<Longrightarrow> Co2 (id xa) (id ya)\n 6. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Contra1 xa ya\\<rbrakk>\n       \\<Longrightarrow> ?Contra1.3 x y (id xa) (id ya)\n 7. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Contra2 xa ya\\<rbrakk>\n       \\<Longrightarrow> ?Contra2.3 x y (id xa) (id ya)", "apply (erule prems(1)[THEN rel_funD])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>A x y;\n        rel_sum (rel_U L1 Co1 Co2 Contra1 Contra2) A xa ya\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             (case xa of Inl U \\<Rightarrow> U\n                              | Inr x \\<Rightarrow> corec_U f x) =\n                             corec_U f x \\<and>\n                             (\\<exists>y.\n                                 (case ya of Inl U \\<Rightarrow> U\n                                  | Inr x \\<Rightarrow> corec_U g x) =\n                                 corec_U g y \\<and>\n                                 A x y)) \\<or>\n                         rel_U L1 Co1 Co2 Contra1 Contra2\n                          (case xa of Inl U \\<Rightarrow> U\n                           | Inr x \\<Rightarrow> corec_U f x)\n                          (case ya of Inl U \\<Rightarrow> U\n                           | Inr x \\<Rightarrow> corec_U g x)\n 2. \\<And>x y xa ya.\n       \\<lbrakk>A x y; L1 xa ya\\<rbrakk>\n       \\<Longrightarrow> L1 (id xa) (id ya)\n 3. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Co1 xa ya\\<rbrakk>\n       \\<Longrightarrow> Co1 (id xa) (id ya)\n 4. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Co2 xa ya\\<rbrakk>\n       \\<Longrightarrow> Co2 (id xa) (id ya)\n 5. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Contra1 xa ya\\<rbrakk>\n       \\<Longrightarrow> Contra1 (id xa) (id ya)\n 6. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Contra2 xa ya\\<rbrakk>\n       \\<Longrightarrow> Contra2 (id xa) (id ya)", "apply (fastforce elim: rel_sum.cases)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y xa ya.\n       \\<lbrakk>A x y; L1 xa ya\\<rbrakk>\n       \\<Longrightarrow> L1 (id xa) (id ya)\n 2. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Co1 xa ya\\<rbrakk>\n       \\<Longrightarrow> Co1 (id xa) (id ya)\n 3. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Co2 xa ya\\<rbrakk>\n       \\<Longrightarrow> Co2 (id xa) (id ya)\n 4. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Contra1 xa ya\\<rbrakk>\n       \\<Longrightarrow> Contra1 (id xa) (id ya)\n 5. \\<And>x y xa ya.\n       \\<lbrakk>A x y; Contra2 xa ya\\<rbrakk>\n       \\<Longrightarrow> Contra2 (id xa) (id ya)", "apply (simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "end"]]}