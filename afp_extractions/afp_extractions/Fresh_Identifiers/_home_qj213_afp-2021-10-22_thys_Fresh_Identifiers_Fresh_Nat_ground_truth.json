{"file_name": "/home/qj213/afp-2021-10-22/thys/Fresh_Identifiers/Fresh_Nat.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Fresh_Identifiers", "problem_names": ["lemma fresh2_notIn: \"finite xs \\<Longrightarrow> fresh2 xs x y \\<notin> xs\"", "lemma fresh2_eq: \"x \\<notin> xs \\<Longrightarrow> fresh2 xs x y = x\"", "lemma fresh2_list[code]:\n  \"fresh2 (set xs) x y =\n     (if x \\<notin> set xs then x else\n      if y \\<notin> set xs then y else\n      fresh2 (set xs) (x-1) (y+1))\""], "translations": [["", "lemma fresh2_notIn: \"finite xs \\<Longrightarrow> fresh2 xs x y \\<notin> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite xs \\<Longrightarrow> fresh2 xs x y \\<notin> xs", "by (induct xs x y rule: fresh2.induct) auto"], ["", "lemma fresh2_eq: \"x \\<notin> xs \\<Longrightarrow> fresh2 xs x y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> xs \\<Longrightarrow> fresh2 xs x y = x", "by auto"], ["", "declare fresh2.simps[simp del]"], ["", "instantiation nat :: fresh\nbegin"], ["", "text \\<open>\\<open>fresh xs x y\\<close> returns an element\nthat is fresh for \\<open>xs\\<close> and closest to \\<open>x\\<close>, favoring smaller elements: \\<close>"], ["", "definition fresh_nat :: \"nat set \\<Rightarrow> nat \\<Rightarrow> nat\" where\n\"fresh_nat xs x \\<equiv> fresh2 xs x x\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(nat, fresh_class)", "by standard (use fresh2_notIn fresh2_eq in \\<open>auto simp add: fresh_nat_def\\<close>)"], ["", "end"], ["", "(* instantiation *)"], ["", "text \\<open>Code generation\\<close>"], ["", "lemma fresh2_list[code]:\n  \"fresh2 (set xs) x y =\n     (if x \\<notin> set xs then x else\n      if y \\<notin> set xs then y else\n      fresh2 (set xs) (x-1) (y+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fresh2 (set xs) x y =\n    (if x \\<notin> set xs then x\n     else if y \\<notin> set xs then y else fresh2 (set xs) (x - 1) (y + 1))", "by (auto simp: fresh2.simps)"], ["", "text \\<open>Some tests: \\<close>"], ["", "value \"[fresh {} (1::nat),\n        fresh {3,5,2,4} 3]\""], ["", "end"]]}