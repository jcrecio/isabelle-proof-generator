{"file_name": "/home/qj213/afp-2021-10-22/thys/Algebraic_Numbers/Complex_Roots_Real_Poly.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Algebraic_Numbers", "problem_names": ["lemma real_poly_real_coeff: assumes \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"coeff p x \\<in> \\<real>\"", "lemma complex_conjugate_root: \n  assumes real: \"set (coeffs p) \\<subseteq> \\<real>\" and rt: \"poly p c = 0\"\n  shows \"poly p (cnj c) = 0\"", "lemma map_poly_Re_poly: fixes x :: real \n  shows \"poly (map_poly Re p) x = poly p (of_real x)\"", "lemma map_poly_Re_coeffs:\n  \"coeffs (map_poly Re p) = map Re (coeffs p)\"", "lemma map_poly_Re_0: \"map_poly Re p = 0 \\<Longrightarrow> p = 0\"", "lemma real_poly_add: \n  assumes \"set (coeffs p) \\<subseteq> \\<real>\" \"set (coeffs q) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (p + q)) \\<subseteq> \\<real>\"", "lemma real_poly_sum: \n  assumes \"\\<And> x. x \\<in> S \\<Longrightarrow> set (coeffs (f x)) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (sum f S)) \\<subseteq> \\<real>\"", "lemma real_poly_smult: fixes p :: \"'a :: {idom,real_algebra_1} poly\"\n  assumes \"c \\<in> \\<real>\" \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (smult c p)) \\<subseteq> \\<real>\"", "lemma real_poly_pCons: \n  assumes \"c \\<in> \\<real>\" \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (pCons c p)) \\<subseteq> \\<real>\"", "lemma real_poly_mult: fixes p :: \"'a :: {idom,real_algebra_1} poly\"\n  assumes p: \"set (coeffs p) \\<subseteq> \\<real>\" and q: \"set (coeffs q) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (p * q)) \\<subseteq> \\<real>\"", "lemma real_poly_power: fixes p :: \"'a :: {idom,real_algebra_1} poly\"\n  assumes p: \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (p ^ n)) \\<subseteq> \\<real>\"", "lemma real_poly_prod: fixes f :: \"'a \\<Rightarrow> 'b :: {idom,real_algebra_1} poly\"\n  assumes \"\\<And> x. x \\<in> S \\<Longrightarrow> set (coeffs (f x)) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (prod f S)) \\<subseteq> \\<real>\"", "lemma real_poly_uminus: \n  assumes \"set (coeffs p) \\<subseteq> \\<real>\" \n  shows \"set (coeffs (-p)) \\<subseteq> \\<real>\"", "lemma real_poly_minus: \n  assumes \"set (coeffs p) \\<subseteq> \\<real>\" \"set (coeffs q) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (p - q)) \\<subseteq> \\<real>\"", "lemma fixes p :: \"'a :: real_field poly\" \n  assumes p: \"set (coeffs p) \\<subseteq> \\<real>\" and *: \"set (coeffs q) \\<subseteq> \\<real>\"\n  shows real_poly_div: \"set (coeffs (q div p)) \\<subseteq> \\<real>\"\n    and real_poly_mod: \"set (coeffs (q mod p)) \\<subseteq> \\<real>\"", "lemma real_poly_factor: fixes p :: \"'a :: real_field poly\"\n  assumes \"set (coeffs (p * q)) \\<subseteq> \\<real>\"\n   \"set (coeffs p) \\<subseteq> \\<real>\"\n  \"p \\<noteq> 0\"\n  shows \"set (coeffs q) \\<subseteq> \\<real>\"", "lemma complex_conjugate_order: assumes real: \"set (coeffs p) \\<subseteq> \\<real>\"\n  \"p \\<noteq> 0\"\n  shows \"order (cnj c) p = order c p\"", "lemma map_poly_of_real_Re: assumes \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"map_poly of_real (map_poly Re p) = p\"", "lemma map_poly_Re_of_real: \"map_poly Re (map_poly of_real p) = p\"", "lemma map_poly_Re_mult: assumes p: \"set (coeffs p) \\<subseteq> \\<real>\"\n  and q: \"set (coeffs q) \\<subseteq> \\<real>\" shows \"map_poly Re (p * q) = map_poly Re p * map_poly Re q\"", "lemma map_poly_Re_power: assumes p: \"set (coeffs p) \\<subseteq> \\<real>\"\n shows \"map_poly Re (p^n) = (map_poly Re p)^n\"", "lemma real_degree_2_factorization_exists_complex: fixes p :: \"complex poly\"\n  assumes pR: \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"\\<exists> qs. p = prod_list qs \\<and> (\\<forall> q \\<in> set qs. set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\"", "lemma real_degree_2_factorization_exists: fixes p :: \"real poly\"\n  shows \"\\<exists> qs. p = prod_list qs \\<and> (\\<forall> q \\<in> set qs. degree q \\<le> 2)\"", "lemma odd_degree_imp_real_root: assumes \"odd (degree p)\"\n  shows \"\\<exists> x. poly p x = (0 :: real)\""], "translations": [["", "lemma real_poly_real_coeff: assumes \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"coeff p x \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff p x \\<in> \\<real>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. coeff p x \\<in> \\<real>", "have \"coeff p x \\<in> range (coeff p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff p x \\<in> range (coeff p)", "by auto"], ["proof (state)\nthis:\n  coeff p x \\<in> range (coeff p)\n\ngoal (1 subgoal):\n 1. coeff p x \\<in> \\<real>", "from this[unfolded range_coeff] assms"], ["proof (chain)\npicking this:\n  coeff p x \\<in> insert (0::'a) (set (coeffs p))\n  set (coeffs p) \\<subseteq> \\<real>", "show ?thesis"], ["proof (prove)\nusing this:\n  coeff p x \\<in> insert (0::'a) (set (coeffs p))\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. coeff p x \\<in> \\<real>", "by auto"], ["proof (state)\nthis:\n  coeff p x \\<in> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complex_conjugate_root: \n  assumes real: \"set (coeffs p) \\<subseteq> \\<real>\" and rt: \"poly p c = 0\"\n  shows \"poly p (cnj c) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "let ?c = \"cnj c\""], ["proof (state)\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "have \"coeff p x \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff p x \\<in> \\<real>", "by (rule real_poly_real_coeff[OF real])"], ["proof (state)\nthis:\n  coeff p x \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "hence \"cnj (coeff p x) = coeff p x\""], ["proof (prove)\nusing this:\n  coeff p x \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. cnj (coeff p x) = coeff p x", "by (cases \"coeff p x\", auto)"], ["proof (state)\nthis:\n  cnj (coeff p x) = coeff p x\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "}"], ["proof (state)\nthis:\n  cnj (coeff p ?x2) = coeff p ?x2\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "note cnj_coeff = this"], ["proof (state)\nthis:\n  cnj (coeff p ?x2) = coeff p ?x2\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "have \"poly p ?c = poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) ?c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p (cnj c) =\n    poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) (cnj c)", "unfolding poly_as_sum_of_monoms"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p (cnj c) = poly p (cnj c)", ".."], ["proof (state)\nthis:\n  poly p (cnj c) = poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) (cnj c)\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "also"], ["proof (state)\nthis:\n  poly p (cnj c) = poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) (cnj c)\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "have \"\\<dots> = (\\<Sum>x\\<le>degree p . coeff p x * cnj (c ^ x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) (cnj c) =\n    (\\<Sum>x\\<le>degree p. coeff p x * cnj (c ^ x))", "unfolding poly_sum poly_monom complex_cnj_power"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>degree p. coeff p k * cnj c ^ k) =\n    (\\<Sum>x\\<le>degree p. coeff p x * cnj c ^ x)", ".."], ["proof (state)\nthis:\n  poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) (cnj c) =\n  (\\<Sum>x\\<le>degree p. coeff p x * cnj (c ^ x))\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "also"], ["proof (state)\nthis:\n  poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) (cnj c) =\n  (\\<Sum>x\\<le>degree p. coeff p x * cnj (c ^ x))\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "have \"\\<dots> = (\\<Sum>x\\<le>degree p . cnj (coeff p x * c ^ x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<le>degree p. coeff p x * cnj (c ^ x)) =\n    (\\<Sum>x\\<le>degree p. cnj (coeff p x * c ^ x))", "unfolding complex_cnj_mult cnj_coeff"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<le>degree p. coeff p x * cnj (c ^ x)) =\n    (\\<Sum>x\\<le>degree p. coeff p x * cnj (c ^ x))", ".."], ["proof (state)\nthis:\n  (\\<Sum>x\\<le>degree p. coeff p x * cnj (c ^ x)) =\n  (\\<Sum>x\\<le>degree p. cnj (coeff p x * c ^ x))\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<le>degree p. coeff p x * cnj (c ^ x)) =\n  (\\<Sum>x\\<le>degree p. cnj (coeff p x * c ^ x))\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "have \"\\<dots> = cnj (\\<Sum>x\\<le>degree p . coeff p x * c ^ x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<le>degree p. cnj (coeff p x * c ^ x)) =\n    cnj (\\<Sum>x\\<le>degree p. coeff p x * c ^ x)", "unfolding cnj_sum"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<le>degree p. cnj (coeff p x * c ^ x)) =\n    (\\<Sum>x\\<le>degree p. cnj (coeff p x * c ^ x))", ".."], ["proof (state)\nthis:\n  (\\<Sum>x\\<le>degree p. cnj (coeff p x * c ^ x)) =\n  cnj (\\<Sum>x\\<le>degree p. coeff p x * c ^ x)\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<le>degree p. cnj (coeff p x * c ^ x)) =\n  cnj (\\<Sum>x\\<le>degree p. coeff p x * c ^ x)\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "have \"(\\<Sum>x\\<le>degree p . coeff p x * c ^ x) = \n    poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<le>degree p. coeff p x * c ^ x) =\n    poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) c", "unfolding poly_sum poly_monom"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<le>degree p. coeff p x * c ^ x) =\n    (\\<Sum>k\\<le>degree p. coeff p k * c ^ k)", ".."], ["proof (state)\nthis:\n  (\\<Sum>x\\<le>degree p. coeff p x * c ^ x) =\n  poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) c\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<le>degree p. coeff p x * c ^ x) =\n  poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) c\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) c = 0", "unfolding poly_as_sum_of_monoms rt"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = 0", ".."], ["proof (state)\nthis:\n  poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) c = 0\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "also"], ["proof (state)\nthis:\n  poly (\\<Sum>x\\<le>degree p. monom (coeff p x) x) c = 0\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "have \"cnj 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj 0 = 0", "by simp"], ["proof (state)\nthis:\n  cnj 0 = 0\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "finally"], ["proof (chain)\npicking this:\n  poly p (cnj c) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  poly p (cnj c) = 0\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "."], ["proof (state)\nthis:\n  poly p (cnj c) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes p :: \"complex poly\"\n  assumes coeffs: \"set (coeffs p) \\<subseteq> \\<real>\"\nbegin"], ["", "lemma map_poly_Re_poly: fixes x :: real \n  shows \"poly (map_poly Re p) x = poly p (of_real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (poly (map_poly Re p) x) = poly p (complex_of_real x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_of_real (poly (map_poly Re p) x) = poly p (complex_of_real x)", "have id: \"map_poly (of_real o Re) p = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly (complex_of_real \\<circ> Re) p = p", "by (rule map_poly_idI, insert coeffs, auto)"], ["proof (state)\nthis:\n  map_poly (complex_of_real \\<circ> Re) p = p\n\ngoal (1 subgoal):\n 1. complex_of_real (poly (map_poly Re p) x) = poly p (complex_of_real x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (poly (map_poly Re p) x) = poly p (complex_of_real x)", "unfolding arg_cong[OF id, of poly, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (poly (map_poly Re p) x) =\n    poly (map_poly (complex_of_real \\<circ> Re) p) (complex_of_real x)", "by (subst map_poly_map_poly[symmetric], auto)"], ["proof (state)\nthis:\n  complex_of_real (poly (map_poly Re p) x) = poly p (complex_of_real x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma map_poly_Re_coeffs:\n  \"coeffs (map_poly Re p) = map Re (coeffs p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeffs (map_poly Re p) = map Re (coeffs p)", "proof (rule coeffs_map_poly)"], ["proof (state)\ngoal (1 subgoal):\n 1. (Re (lead_coeff p) = 0) = (p = 0)", "have \"lead_coeff p \\<in> range (coeff p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff p \\<in> range (coeff p)", "by auto"], ["proof (state)\nthis:\n  lead_coeff p \\<in> range (coeff p)\n\ngoal (1 subgoal):\n 1. (Re (lead_coeff p) = 0) = (p = 0)", "hence x: \"lead_coeff p \\<in> \\<real>\""], ["proof (prove)\nusing this:\n  lead_coeff p \\<in> range (coeff p)\n\ngoal (1 subgoal):\n 1. lead_coeff p \\<in> \\<real>", "using coeffs"], ["proof (prove)\nusing this:\n  lead_coeff p \\<in> range (coeff p)\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. lead_coeff p \\<in> \\<real>", "by (auto simp: range_coeff)"], ["proof (state)\nthis:\n  lead_coeff p \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. (Re (lead_coeff p) = 0) = (p = 0)", "show \"(Re (lead_coeff p) = 0) = (p = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Re (lead_coeff p) = 0) = (p = 0)", "using of_real_Re[OF x]"], ["proof (prove)\nusing this:\n  complex_of_real (Re (lead_coeff p)) = lead_coeff p\n\ngoal (1 subgoal):\n 1. (Re (lead_coeff p) = 0) = (p = 0)", "by auto"], ["proof (state)\nthis:\n  (Re (lead_coeff p) = 0) = (p = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma map_poly_Re_0: \"map_poly Re p = 0 \\<Longrightarrow> p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re p = 0 \\<Longrightarrow> p = 0", "using map_poly_Re_coeffs"], ["proof (prove)\nusing this:\n  coeffs (map_poly Re p) = map Re (coeffs p)\n\ngoal (1 subgoal):\n 1. map_poly Re p = 0 \\<Longrightarrow> p = 0", "by auto"], ["", "end"], ["", "lemma real_poly_add: \n  assumes \"set (coeffs p) \\<subseteq> \\<real>\" \"set (coeffs q) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (p + q)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (p + q)) \\<subseteq> \\<real>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set (coeffs (p + q)) \\<subseteq> \\<real>", "define pp where \"pp = coeffs p\""], ["proof (state)\nthis:\n  pp = coeffs p\n\ngoal (1 subgoal):\n 1. set (coeffs (p + q)) \\<subseteq> \\<real>", "define qq where \"qq = coeffs q\""], ["proof (state)\nthis:\n  qq = coeffs q\n\ngoal (1 subgoal):\n 1. set (coeffs (p + q)) \\<subseteq> \\<real>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (p + q)) \\<subseteq> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  set (coeffs p) \\<subseteq> \\<real>\n  set (coeffs q) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (p + q)) \\<subseteq> \\<real>", "unfolding coeffs_plus_eq_plus_coeffs pp_def[symmetric] qq_def[symmetric]"], ["proof (prove)\nusing this:\n  set pp \\<subseteq> \\<real>\n  set qq \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (plus_coeffs pp qq) \\<subseteq> \\<real>", "by (induct pp qq rule: plus_coeffs.induct, auto simp: cCons_def)"], ["proof (state)\nthis:\n  set (coeffs (p + q)) \\<subseteq> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_poly_sum: \n  assumes \"\\<And> x. x \\<in> S \\<Longrightarrow> set (coeffs (f x)) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (sum f S)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (sum f S)) \\<subseteq> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow> set (coeffs (f ?x)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (sum f S)) \\<subseteq> \\<real>", "proof (induct S rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x.\n           x \\<in> A \\<Longrightarrow>\n           set (coeffs (f x)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (sum f A)) \\<subseteq> \\<real>\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n    set (coeffs (sum f {})) \\<subseteq> \\<real>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow>\n            set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n        set (coeffs (sum f F)) \\<subseteq> \\<real>;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow>\n           set (coeffs (f xa)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (sum f (insert x F)))\n                         \\<subseteq> \\<real>", "case (insert x S)"], ["proof (state)\nthis:\n  finite S\n  x \\<notin> S\n  (\\<And>x.\n      x \\<in> S \\<Longrightarrow>\n      set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n  set (coeffs (sum f S)) \\<subseteq> \\<real>\n  ?x \\<in> insert x S \\<Longrightarrow>\n  set (coeffs (f ?x)) \\<subseteq> \\<real>\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x.\n           x \\<in> A \\<Longrightarrow>\n           set (coeffs (f x)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (sum f A)) \\<subseteq> \\<real>\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n    set (coeffs (sum f {})) \\<subseteq> \\<real>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow>\n            set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n        set (coeffs (sum f F)) \\<subseteq> \\<real>;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow>\n           set (coeffs (f xa)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (sum f (insert x F)))\n                         \\<subseteq> \\<real>", "hence id: \"sum f (insert x S) = f x + sum f S\""], ["proof (prove)\nusing this:\n  finite S\n  x \\<notin> S\n  (\\<And>x.\n      x \\<in> S \\<Longrightarrow>\n      set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n  set (coeffs (sum f S)) \\<subseteq> \\<real>\n  ?x \\<in> insert x S \\<Longrightarrow>\n  set (coeffs (f ?x)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. sum f (insert x S) = f x + sum f S", "by auto"], ["proof (state)\nthis:\n  sum f (insert x S) = f x + sum f S\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x.\n           x \\<in> A \\<Longrightarrow>\n           set (coeffs (f x)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (sum f A)) \\<subseteq> \\<real>\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n    set (coeffs (sum f {})) \\<subseteq> \\<real>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow>\n            set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n        set (coeffs (sum f F)) \\<subseteq> \\<real>;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow>\n           set (coeffs (f xa)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (sum f (insert x F)))\n                         \\<subseteq> \\<real>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (sum f (insert x S))) \\<subseteq> \\<real>", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (f x + sum f S)) \\<subseteq> \\<real>", "by (rule real_poly_add[OF _ insert(3)], insert insert, auto)"], ["proof (state)\nthis:\n  set (coeffs (sum f (insert x S))) \\<subseteq> \\<real>\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x.\n           x \\<in> A \\<Longrightarrow>\n           set (coeffs (f x)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (sum f A)) \\<subseteq> \\<real>\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n    set (coeffs (sum f {})) \\<subseteq> \\<real>", "qed auto"], ["", "lemma real_poly_smult: fixes p :: \"'a :: {idom,real_algebra_1} poly\"\n  assumes \"c \\<in> \\<real>\" \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (smult c p)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (smult c p)) \\<subseteq> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> \\<real>\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (smult c p)) \\<subseteq> \\<real>", "by (auto simp: coeffs_smult)"], ["", "lemma real_poly_pCons: \n  assumes \"c \\<in> \\<real>\" \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (pCons c p)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (pCons c p)) \\<subseteq> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> \\<real>\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (pCons c p)) \\<subseteq> \\<real>", "by (auto simp: cCons_def)"], ["", "lemma real_poly_mult: fixes p :: \"'a :: {idom,real_algebra_1} poly\"\n  assumes p: \"set (coeffs p) \\<subseteq> \\<real>\" and q: \"set (coeffs q) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (p * q)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (p * q)) \\<subseteq> \\<real>", "using p"], ["proof (prove)\nusing this:\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (p * q)) \\<subseteq> \\<real>", "proof (induct p)"], ["proof (state)\ngoal (2 subgoals):\n 1. set (coeffs 0) \\<subseteq> \\<real> \\<Longrightarrow>\n    set (coeffs (0 * q)) \\<subseteq> \\<real>\n 2. \\<And>a p.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> p \\<noteq> 0;\n        set (coeffs p) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (p * q)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a p)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a p * q)) \\<subseteq> \\<real>", "case (pCons a p)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a) \\<or> p \\<noteq> 0\n  set (coeffs p) \\<subseteq> \\<real> \\<Longrightarrow>\n  set (coeffs (p * q)) \\<subseteq> \\<real>\n  set (coeffs (pCons a p)) \\<subseteq> \\<real>\n\ngoal (2 subgoals):\n 1. set (coeffs 0) \\<subseteq> \\<real> \\<Longrightarrow>\n    set (coeffs (0 * q)) \\<subseteq> \\<real>\n 2. \\<And>a p.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> p \\<noteq> 0;\n        set (coeffs p) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (p * q)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a p)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a p * q)) \\<subseteq> \\<real>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (pCons a p * q)) \\<subseteq> \\<real>", "unfolding mult_pCons_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (smult a q + pCons (0::'a) (p * q))) \\<subseteq> \\<real>", "by (intro real_poly_add real_poly_smult real_poly_pCons pCons(2) q,\n    insert pCons(1,3), auto simp: cCons_def if_splits)"], ["proof (state)\nthis:\n  set (coeffs (pCons a p * q)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs 0) \\<subseteq> \\<real> \\<Longrightarrow>\n    set (coeffs (0 * q)) \\<subseteq> \\<real>", "qed simp"], ["", "lemma real_poly_power: fixes p :: \"'a :: {idom,real_algebra_1} poly\"\n  assumes p: \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (p ^ n)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (p ^ n)) \\<subseteq> \\<real>", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. set (coeffs (p ^ 0)) \\<subseteq> \\<real>\n 2. \\<And>n.\n       set (coeffs (p ^ n)) \\<subseteq> \\<real> \\<Longrightarrow>\n       set (coeffs (p ^ Suc n)) \\<subseteq> \\<real>", "case (Suc n)"], ["proof (state)\nthis:\n  set (coeffs (p ^ n)) \\<subseteq> \\<real>\n\ngoal (2 subgoals):\n 1. set (coeffs (p ^ 0)) \\<subseteq> \\<real>\n 2. \\<And>n.\n       set (coeffs (p ^ n)) \\<subseteq> \\<real> \\<Longrightarrow>\n       set (coeffs (p ^ Suc n)) \\<subseteq> \\<real>", "from real_poly_mult[OF p this]"], ["proof (chain)\npicking this:\n  set (coeffs (p * p ^ n)) \\<subseteq> \\<real>", "show ?case"], ["proof (prove)\nusing this:\n  set (coeffs (p * p ^ n)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (p ^ Suc n)) \\<subseteq> \\<real>", "by simp"], ["proof (state)\nthis:\n  set (coeffs (p ^ Suc n)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (p ^ 0)) \\<subseteq> \\<real>", "qed simp"], ["", "lemma real_poly_prod: fixes f :: \"'a \\<Rightarrow> 'b :: {idom,real_algebra_1} poly\"\n  assumes \"\\<And> x. x \\<in> S \\<Longrightarrow> set (coeffs (f x)) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (prod f S)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (prod f S)) \\<subseteq> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow> set (coeffs (f ?x)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (prod f S)) \\<subseteq> \\<real>", "proof (induct S rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x.\n           x \\<in> A \\<Longrightarrow>\n           set (coeffs (f x)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (prod f A)) \\<subseteq> \\<real>\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n    set (coeffs (prod f {})) \\<subseteq> \\<real>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow>\n            set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n        set (coeffs (prod f F)) \\<subseteq> \\<real>;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow>\n           set (coeffs (f xa)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (prod f (insert x F)))\n                         \\<subseteq> \\<real>", "case (insert x S)"], ["proof (state)\nthis:\n  finite S\n  x \\<notin> S\n  (\\<And>x.\n      x \\<in> S \\<Longrightarrow>\n      set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n  set (coeffs (prod f S)) \\<subseteq> \\<real>\n  ?x \\<in> insert x S \\<Longrightarrow>\n  set (coeffs (f ?x)) \\<subseteq> \\<real>\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x.\n           x \\<in> A \\<Longrightarrow>\n           set (coeffs (f x)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (prod f A)) \\<subseteq> \\<real>\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n    set (coeffs (prod f {})) \\<subseteq> \\<real>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow>\n            set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n        set (coeffs (prod f F)) \\<subseteq> \\<real>;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow>\n           set (coeffs (f xa)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (prod f (insert x F)))\n                         \\<subseteq> \\<real>", "hence id: \"prod f (insert x S) = f x * prod f S\""], ["proof (prove)\nusing this:\n  finite S\n  x \\<notin> S\n  (\\<And>x.\n      x \\<in> S \\<Longrightarrow>\n      set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n  set (coeffs (prod f S)) \\<subseteq> \\<real>\n  ?x \\<in> insert x S \\<Longrightarrow>\n  set (coeffs (f ?x)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. prod f (insert x S) = f x * prod f S", "by auto"], ["proof (state)\nthis:\n  prod f (insert x S) = f x * prod f S\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x.\n           x \\<in> A \\<Longrightarrow>\n           set (coeffs (f x)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (prod f A)) \\<subseteq> \\<real>\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n    set (coeffs (prod f {})) \\<subseteq> \\<real>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow>\n            set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n        set (coeffs (prod f F)) \\<subseteq> \\<real>;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow>\n           set (coeffs (f xa)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (prod f (insert x F)))\n                         \\<subseteq> \\<real>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (prod f (insert x S))) \\<subseteq> \\<real>", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (f x * prod f S)) \\<subseteq> \\<real>", "by (rule real_poly_mult[OF _ insert(3)], insert insert, auto)"], ["proof (state)\nthis:\n  set (coeffs (prod f (insert x S))) \\<subseteq> \\<real>\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x.\n           x \\<in> A \\<Longrightarrow>\n           set (coeffs (f x)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (prod f A)) \\<subseteq> \\<real>\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        set (coeffs (f x)) \\<subseteq> \\<real>) \\<Longrightarrow>\n    set (coeffs (prod f {})) \\<subseteq> \\<real>", "qed auto"], ["", "lemma real_poly_uminus: \n  assumes \"set (coeffs p) \\<subseteq> \\<real>\" \n  shows \"set (coeffs (-p)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (- p)) \\<subseteq> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (- p)) \\<subseteq> \\<real>", "unfolding coeffs_uminus"], ["proof (prove)\nusing this:\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (map uminus (coeffs p)) \\<subseteq> \\<real>", "by auto"], ["", "lemma real_poly_minus: \n  assumes \"set (coeffs p) \\<subseteq> \\<real>\" \"set (coeffs q) \\<subseteq> \\<real>\"\n  shows \"set (coeffs (p - q)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (p - q)) \\<subseteq> \\<real>", "using assms"], ["proof (prove)\nusing this:\n  set (coeffs p) \\<subseteq> \\<real>\n  set (coeffs q) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (p - q)) \\<subseteq> \\<real>", "unfolding diff_conv_add_uminus"], ["proof (prove)\nusing this:\n  set (coeffs p) \\<subseteq> \\<real>\n  set (coeffs q) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (p + - q)) \\<subseteq> \\<real>", "by (intro real_poly_uminus real_poly_add, auto)"], ["", "lemma fixes p :: \"'a :: real_field poly\" \n  assumes p: \"set (coeffs p) \\<subseteq> \\<real>\" and *: \"set (coeffs q) \\<subseteq> \\<real>\"\n  shows real_poly_div: \"set (coeffs (q div p)) \\<subseteq> \\<real>\"\n    and real_poly_mod: \"set (coeffs (q mod p)) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (q div p)) \\<subseteq> \\<real> &&&\n    set (coeffs (q mod p)) \\<subseteq> \\<real>", "proof (atomize(full), insert *, induct q)"], ["proof (state)\ngoal (2 subgoals):\n 1. set (coeffs 0) \\<subseteq> \\<real> \\<Longrightarrow>\n    set (coeffs (0 div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (0 mod p)) \\<subseteq> \\<real>\n 2. \\<And>a q.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> q \\<noteq> 0;\n        set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n        set (coeffs (q mod p)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a q)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a q div p))\n                         \\<subseteq> \\<real> \\<and>\n                         set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "case 0"], ["proof (state)\nthis:\n  set (coeffs 0) \\<subseteq> \\<real>\n\ngoal (2 subgoals):\n 1. set (coeffs 0) \\<subseteq> \\<real> \\<Longrightarrow>\n    set (coeffs (0 div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (0 mod p)) \\<subseteq> \\<real>\n 2. \\<And>a q.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> q \\<noteq> 0;\n        set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n        set (coeffs (q mod p)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a q)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a q div p))\n                         \\<subseteq> \\<real> \\<and>\n                         set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "thus ?case"], ["proof (prove)\nusing this:\n  set (coeffs 0) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (0 div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (0 mod p)) \\<subseteq> \\<real>", "by auto"], ["proof (state)\nthis:\n  set (coeffs (0 div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (0 mod p)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<And>a q.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> q \\<noteq> 0;\n        set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n        set (coeffs (q mod p)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a q)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a q div p))\n                         \\<subseteq> \\<real> \\<and>\n                         set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a q.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> q \\<noteq> 0;\n        set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n        set (coeffs (q mod p)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a q)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a q div p))\n                         \\<subseteq> \\<real> \\<and>\n                         set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "case (pCons a q)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a) \\<or> q \\<noteq> 0\n  set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n  set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (q mod p)) \\<subseteq> \\<real>\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<And>a q.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> q \\<noteq> 0;\n        set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n        set (coeffs (q mod p)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a q)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a q div p))\n                         \\<subseteq> \\<real> \\<and>\n                         set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "from pCons(1,3)"], ["proof (chain)\npicking this:\n  a \\<noteq> (0::'a) \\<or> q \\<noteq> 0\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>", "have a: \"a \\<in> \\<real>\" and q: \"set (coeffs q) \\<subseteq> \\<real>\""], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a) \\<or> q \\<noteq> 0\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real> &&& set (coeffs q) \\<subseteq> \\<real>", "by auto"], ["proof (state)\nthis:\n  a \\<in> \\<real>\n  set (coeffs q) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<And>a q.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> q \\<noteq> 0;\n        set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n        set (coeffs (q mod p)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a q)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a q div p))\n                         \\<subseteq> \\<real> \\<and>\n                         set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "note res = pCons"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a) \\<or> q \\<noteq> 0\n  set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n  set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (q mod p)) \\<subseteq> \\<real>\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<And>a q.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> q \\<noteq> 0;\n        set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n        set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n        set (coeffs (q mod p)) \\<subseteq> \\<real>;\n        set (coeffs (pCons a q)) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> set (coeffs (pCons a q div p))\n                         \\<subseteq> \\<real> \\<and>\n                         set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "with res pCons(3)"], ["proof (chain)\npicking this:\n  a \\<noteq> (0::'a) \\<or> q \\<noteq> 0\n  set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n  set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (q mod p)) \\<subseteq> \\<real>\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>\n  p = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a) \\<or> q \\<noteq> 0\n  set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n  set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (q mod p)) \\<subseteq> \\<real>\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>\n  p = 0\n\ngoal (1 subgoal):\n 1. set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "by auto"], ["proof (state)\nthis:\n  set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "from pCons"], ["proof (chain)\npicking this:\n  a \\<noteq> (0::'a) \\<or> q \\<noteq> 0\n  set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n  set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (q mod p)) \\<subseteq> \\<real>\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>", "have IH: \"set (coeffs (q div p)) \\<subseteq> \\<real>\" \"set (coeffs (q mod p)) \\<subseteq> \\<real>\""], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a) \\<or> q \\<noteq> 0\n  set (coeffs q) \\<subseteq> \\<real> \\<Longrightarrow>\n  set (coeffs (q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (q mod p)) \\<subseteq> \\<real>\n  set (coeffs (pCons a q)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (q div p)) \\<subseteq> \\<real> &&&\n    set (coeffs (q mod p)) \\<subseteq> \\<real>", "by auto"], ["proof (state)\nthis:\n  set (coeffs (q div p)) \\<subseteq> \\<real>\n  set (coeffs (q mod p)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "define c where \"c = coeff (pCons a (q mod p)) (degree p) / coeff p (degree p)\""], ["proof (state)\nthis:\n  c = coeff (pCons a (q mod p)) (degree p) / lead_coeff p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "{"], ["proof (state)\nthis:\n  c = coeff (pCons a (q mod p)) (degree p) / lead_coeff p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "have \"coeff (pCons a (q mod p)) (degree p) \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (pCons a (q mod p)) (degree p) \\<in> \\<real>", "by (rule real_poly_real_coeff, insert IH a, intro real_poly_pCons)"], ["proof (state)\nthis:\n  coeff (pCons a (q mod p)) (degree p) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "moreover"], ["proof (state)\nthis:\n  coeff (pCons a (q mod p)) (degree p) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "have \"coeff p (degree p) \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff p \\<in> \\<real>", "by (rule real_poly_real_coeff[OF p])"], ["proof (state)\nthis:\n  lead_coeff p \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "ultimately"], ["proof (chain)\npicking this:\n  coeff (pCons a (q mod p)) (degree p) \\<in> \\<real>\n  lead_coeff p \\<in> \\<real>", "have \"c \\<in> \\<real>\""], ["proof (prove)\nusing this:\n  coeff (pCons a (q mod p)) (degree p) \\<in> \\<real>\n  lead_coeff p \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. c \\<in> \\<real>", "unfolding c_def"], ["proof (prove)\nusing this:\n  coeff (pCons a (q mod p)) (degree p) \\<in> \\<real>\n  lead_coeff p \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. coeff (pCons a (q mod p)) (degree p) / lead_coeff p \\<in> \\<real>", "by simp"], ["proof (state)\nthis:\n  c \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "}"], ["proof (state)\nthis:\n  c \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "note c = this"], ["proof (state)\nthis:\n  c \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "from False"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have r: \"pCons a q div p = pCons c (q div p)\" and s: \"pCons a q mod p = pCons a (q mod p) - smult c p\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pCons a q div p = pCons c (q div p) &&&\n    pCons a q mod p = pCons a (q mod p) - smult c p", "unfolding c_def div_pCons_eq mod_pCons_eq"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if p = 0 then 0\n     else pCons (coeff (pCons a (q mod p)) (degree p) / lead_coeff p)\n           (q div p)) =\n    pCons (coeff (pCons a (q mod p)) (degree p) / lead_coeff p)\n     (q div p) &&&\n    (if p = 0 then pCons a q\n     else pCons a (q mod p) -\n          smult (coeff (pCons a (q mod p)) (degree p) / lead_coeff p) p) =\n    pCons a (q mod p) -\n    smult (coeff (pCons a (q mod p)) (degree p) / lead_coeff p) p", "by simp_all"], ["proof (state)\nthis:\n  pCons a q div p = pCons c (q div p)\n  pCons a q mod p = pCons a (q mod p) - smult c p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>", "unfolding r s"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (pCons c (q div p))) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a (q mod p) - smult c p)) \\<subseteq> \\<real>", "using a p c IH"], ["proof (prove)\nusing this:\n  a \\<in> \\<real>\n  set (coeffs p) \\<subseteq> \\<real>\n  c \\<in> \\<real>\n  set (coeffs (q div p)) \\<subseteq> \\<real>\n  set (coeffs (q mod p)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs (pCons c (q div p))) \\<subseteq> \\<real> \\<and>\n    set (coeffs (pCons a (q mod p) - smult c p)) \\<subseteq> \\<real>", "by (intro conjI real_poly_pCons real_poly_minus real_poly_smult)"], ["proof (state)\nthis:\n  set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set (coeffs (pCons a q div p)) \\<subseteq> \\<real> \\<and>\n  set (coeffs (pCons a q mod p)) \\<subseteq> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_poly_factor: fixes p :: \"'a :: real_field poly\"\n  assumes \"set (coeffs (p * q)) \\<subseteq> \\<real>\"\n   \"set (coeffs p) \\<subseteq> \\<real>\"\n  \"p \\<noteq> 0\"\n  shows \"set (coeffs q) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs q) \\<subseteq> \\<real>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set (coeffs q) \\<subseteq> \\<real>", "have \"q = p * q div p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = p * q div p", "using \\<open>p \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q = p * q div p", "by simp"], ["proof (state)\nthis:\n  q = p * q div p\n\ngoal (1 subgoal):\n 1. set (coeffs q) \\<subseteq> \\<real>", "hence id: \"coeffs q = coeffs (p * q div p)\""], ["proof (prove)\nusing this:\n  q = p * q div p\n\ngoal (1 subgoal):\n 1. coeffs q = coeffs (p * q div p)", "by simp"], ["proof (state)\nthis:\n  coeffs q = coeffs (p * q div p)\n\ngoal (1 subgoal):\n 1. set (coeffs q) \\<subseteq> \\<real>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs q) \\<subseteq> \\<real>", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (p * q div p)) \\<subseteq> \\<real>", "by (rule real_poly_div, insert assms, auto)"], ["proof (state)\nthis:\n  set (coeffs q) \\<subseteq> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complex_conjugate_order: assumes real: \"set (coeffs p) \\<subseteq> \\<real>\"\n  \"p \\<noteq> 0\"\n  shows \"order (cnj c) p = order c p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "define n where \"n = degree p\""], ["proof (state)\nthis:\n  n = degree p\n\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "have \"degree p \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p \\<le> n", "unfolding n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p \\<le> degree p", "by auto"], ["proof (state)\nthis:\n  degree p \\<le> n\n\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "thus ?thesis"], ["proof (prove)\nusing this:\n  degree p \\<le> n\n\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "using assms"], ["proof (prove)\nusing this:\n  degree p \\<le> n\n  set (coeffs p) \\<subseteq> \\<real>\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "proof (induct n arbitrary: p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>degree p \\<le> 0; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p\n 2. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "case (0 p)"], ["proof (state)\nthis:\n  degree p \\<le> 0\n  set (coeffs p) \\<subseteq> \\<real>\n  p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>degree p \\<le> 0; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p\n 2. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "{"], ["proof (state)\nthis:\n  degree p \\<le> 0\n  set (coeffs p) \\<subseteq> \\<real>\n  p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>degree p \\<le> 0; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p\n 2. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>degree p \\<le> 0; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p\n 2. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "have \"order x p \\<le> degree p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order x p \\<le> degree p", "by (rule order_degree[OF 0(3)])"], ["proof (state)\nthis:\n  order x p \\<le> degree p\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>degree p \\<le> 0; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p\n 2. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "hence \"order x p = 0\""], ["proof (prove)\nusing this:\n  order x p \\<le> degree p\n\ngoal (1 subgoal):\n 1. order x p = 0", "using 0"], ["proof (prove)\nusing this:\n  order x p \\<le> degree p\n  degree p \\<le> 0\n  set (coeffs p) \\<subseteq> \\<real>\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. order x p = 0", "by auto"], ["proof (state)\nthis:\n  order x p = 0\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>degree p \\<le> 0; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p\n 2. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "}"], ["proof (state)\nthis:\n  order ?x2 p = 0\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>degree p \\<le> 0; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p\n 2. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "thus ?case"], ["proof (prove)\nusing this:\n  order ?x2 p = 0\n\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "by simp"], ["proof (state)\nthis:\n  order (cnj c) p = order c p\n\ngoal (1 subgoal):\n 1. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "case (Suc m p)"], ["proof (state)\nthis:\n  \\<lbrakk>degree ?p \\<le> m; set (coeffs ?p) \\<subseteq> \\<real>;\n   ?p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> order (cnj c) ?p = order c ?p\n  degree p \\<le> Suc m\n  set (coeffs p) \\<subseteq> \\<real>\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "note order = order[OF \\<open>p \\<noteq> 0\\<close>]"], ["proof (state)\nthis:\n  [:- ?a, 1:] ^ order ?a p dvd p \\<and>\n  \\<not> [:- ?a, 1:] ^ Suc (order ?a p) dvd p\n\ngoal (1 subgoal):\n 1. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "let ?c = \"cnj c\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>degree p \\<le> n;\n                    set (coeffs p) \\<subseteq> \\<real>;\n                    p \\<noteq> 0\\<rbrakk>\n                   \\<Longrightarrow> order (cnj c) p = order c p;\n        degree p \\<le> Suc n; set (coeffs p) \\<subseteq> \\<real>;\n        p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> order (cnj c) p = order c p", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "proof (cases \"poly p c = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. poly p c = 0 \\<Longrightarrow> order (cnj c) p = order c p\n 2. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "case True"], ["proof (state)\nthis:\n  poly p c = 0\n\ngoal (2 subgoals):\n 1. poly p c = 0 \\<Longrightarrow> order (cnj c) p = order c p\n 2. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "note rt1 = this"], ["proof (state)\nthis:\n  poly p c = 0\n\ngoal (2 subgoals):\n 1. poly p c = 0 \\<Longrightarrow> order (cnj c) p = order c p\n 2. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "from complex_conjugate_root[OF Suc(3) True]"], ["proof (chain)\npicking this:\n  poly p (cnj c) = 0", "have rt2: \"poly p ?c = 0\""], ["proof (prove)\nusing this:\n  poly p (cnj c) = 0\n\ngoal (1 subgoal):\n 1. poly p (cnj c) = 0", "."], ["proof (state)\nthis:\n  poly p (cnj c) = 0\n\ngoal (2 subgoals):\n 1. poly p c = 0 \\<Longrightarrow> order (cnj c) p = order c p\n 2. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "proof (cases \"c \\<in> \\<real>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> \\<real> \\<Longrightarrow> order (cnj c) p = order c p\n 2. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "case True"], ["proof (state)\nthis:\n  c \\<in> \\<real>\n\ngoal (2 subgoals):\n 1. c \\<in> \\<real> \\<Longrightarrow> order (cnj c) p = order c p\n 2. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "hence \"?c = c\""], ["proof (prove)\nusing this:\n  c \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. cnj c = c", "by (cases c, auto)"], ["proof (state)\nthis:\n  cnj c = c\n\ngoal (2 subgoals):\n 1. c \\<in> \\<real> \\<Longrightarrow> order (cnj c) p = order c p\n 2. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "thus ?thesis"], ["proof (prove)\nusing this:\n  cnj c = c\n\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "by auto"], ["proof (state)\nthis:\n  order (cnj c) p = order c p\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "case False"], ["proof (state)\nthis:\n  c \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "hence neq: \"?c \\<noteq> c\""], ["proof (prove)\nusing this:\n  c \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. cnj c \\<noteq> c", "by (simp add: Reals_cnj_iff)"], ["proof (state)\nthis:\n  cnj c \\<noteq> c\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "let ?fac1 = \"[: -c, 1 :]\""], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "let ?fac2 = \"[: -?c, 1 :]\""], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "let ?fac = \"?fac1 * ?fac2\""], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "from rt1"], ["proof (chain)\npicking this:\n  poly p c = 0", "have \"?fac1 dvd p\""], ["proof (prove)\nusing this:\n  poly p c = 0\n\ngoal (1 subgoal):\n 1. [:- c, 1:] dvd p", "unfolding poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  [:- c, 1:] dvd p\n\ngoal (1 subgoal):\n 1. [:- c, 1:] dvd p", "."], ["proof (state)\nthis:\n  [:- c, 1:] dvd p\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "from this[unfolded dvd_def]"], ["proof (chain)\npicking this:\n  \\<exists>k. p = [:- c, 1:] * k", "obtain q where p: \"p = ?fac1 * q\""], ["proof (prove)\nusing this:\n  \\<exists>k. p = [:- c, 1:] * k\n\ngoal (1 subgoal):\n 1. (\\<And>q. p = [:- c, 1:] * q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = [:- c, 1:] * q\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "from rt2[unfolded p poly_mult] neq"], ["proof (chain)\npicking this:\n  poly [:- c, 1:] (cnj c) * poly q (cnj c) = 0\n  cnj c \\<noteq> c", "have \"poly q ?c = 0\""], ["proof (prove)\nusing this:\n  poly [:- c, 1:] (cnj c) * poly q (cnj c) = 0\n  cnj c \\<noteq> c\n\ngoal (1 subgoal):\n 1. poly q (cnj c) = 0", "by auto"], ["proof (state)\nthis:\n  poly q (cnj c) = 0\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "hence \"?fac2 dvd q\""], ["proof (prove)\nusing this:\n  poly q (cnj c) = 0\n\ngoal (1 subgoal):\n 1. [:- cnj c, 1:] dvd q", "unfolding poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  [:- cnj c, 1:] dvd q\n\ngoal (1 subgoal):\n 1. [:- cnj c, 1:] dvd q", "."], ["proof (state)\nthis:\n  [:- cnj c, 1:] dvd q\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "from this[unfolded dvd_def]"], ["proof (chain)\npicking this:\n  \\<exists>k. q = [:- cnj c, 1:] * k", "obtain r where q: \"q = ?fac2 * r\""], ["proof (prove)\nusing this:\n  \\<exists>k. q = [:- cnj c, 1:] * k\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        q = [:- cnj c, 1:] * r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q = [:- cnj c, 1:] * r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have p: \"p = ?fac * r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = [:- c, 1:] * [:- cnj c, 1:] * r", "unfolding p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- c, 1:] * ([:- cnj c, 1:] * r) = [:- c, 1:] * [:- cnj c, 1:] * r", "by algebra"], ["proof (state)\nthis:\n  p = [:- c, 1:] * [:- cnj c, 1:] * r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "from \\<open>p \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have nz: \"?fac1 \\<noteq> 0\" \"?fac2 \\<noteq> 0\" \"?fac \\<noteq> 0\" \"r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ([:- c, 1:] \\<noteq> 0 &&& [:- cnj c, 1:] \\<noteq> 0) &&&\n    [:- c, 1:] * [:- cnj c, 1:] \\<noteq> 0 &&& r \\<noteq> 0", "unfolding p"], ["proof (prove)\nusing this:\n  [:- c, 1:] * [:- cnj c, 1:] * r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ([:- c, 1:] \\<noteq> 0 &&& [:- cnj c, 1:] \\<noteq> 0) &&&\n    [:- c, 1:] * [:- cnj c, 1:] \\<noteq> 0 &&& r \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  [:- c, 1:] \\<noteq> 0\n  [:- cnj c, 1:] \\<noteq> 0\n  [:- c, 1:] * [:- cnj c, 1:] \\<noteq> 0\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have id: \"?fac = [: ?c * c, - (?c + c), 1 :]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- c, 1:] * [:- cnj c, 1:] = [:cnj c * c, - (cnj c + c), 1:]", "by simp"], ["proof (state)\nthis:\n  [:- c, 1:] * [:- cnj c, 1:] = [:cnj c * c, - (cnj c + c), 1:]\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have cfac: \"coeffs ?fac = [ ?c * c, - (?c + c), 1 ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeffs ([:- c, 1:] * [:- cnj c, 1:]) = [cnj c * c, - (cnj c + c), 1]", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeffs [:cnj c * c, - (cnj c + c), 1:] = [cnj c * c, - (cnj c + c), 1]", "by simp"], ["proof (state)\nthis:\n  coeffs ([:- c, 1:] * [:- cnj c, 1:]) = [cnj c * c, - (cnj c + c), 1]\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have cfac: \"set (coeffs ?fac) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs ([:- c, 1:] * [:- cnj c, 1:])) \\<subseteq> \\<real>", "unfolding cfac"], ["proof (prove)\ngoal (1 subgoal):\n 1. set [cnj c * c, - (cnj c + c), 1] \\<subseteq> \\<real>", "by (cases c, auto simp: Reals_cnj_iff)"], ["proof (state)\nthis:\n  set (coeffs ([:- c, 1:] * [:- cnj c, 1:])) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have \"degree p = degree ?fac + degree r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p = degree ([:- c, 1:] * [:- cnj c, 1:]) + degree r", "unfolding p"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree ([:- c, 1:] * [:- cnj c, 1:] * r) =\n    degree ([:- c, 1:] * [:- cnj c, 1:]) + degree r", "by (rule degree_mult_eq, insert nz, auto)"], ["proof (state)\nthis:\n  degree p = degree ([:- c, 1:] * [:- cnj c, 1:]) + degree r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "also"], ["proof (state)\nthis:\n  degree p = degree ([:- c, 1:] * [:- cnj c, 1:]) + degree r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have \"degree ?fac = degree ?fac1 + degree ?fac2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree ([:- c, 1:] * [:- cnj c, 1:]) =\n    degree [:- c, 1:] + degree [:- cnj c, 1:]", "by (rule degree_mult_eq, insert nz, auto)"], ["proof (state)\nthis:\n  degree ([:- c, 1:] * [:- cnj c, 1:]) =\n  degree [:- c, 1:] + degree [:- cnj c, 1:]\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "finally"], ["proof (chain)\npicking this:\n  degree p = degree [:- c, 1:] + degree [:- cnj c, 1:] + degree r", "have \"degree p = 2 + degree r\""], ["proof (prove)\nusing this:\n  degree p = degree [:- c, 1:] + degree [:- cnj c, 1:] + degree r\n\ngoal (1 subgoal):\n 1. degree p = 2 + degree r", "by simp"], ["proof (state)\nthis:\n  degree p = 2 + degree r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "with Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>degree ?p \\<le> m; set (coeffs ?p) \\<subseteq> \\<real>;\n   ?p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> order (cnj c) ?p = order c ?p\n  degree p \\<le> Suc m\n  set (coeffs p) \\<subseteq> \\<real>\n  p \\<noteq> 0\n  degree p = 2 + degree r", "have deg: \"degree r \\<le> m\""], ["proof (prove)\nusing this:\n  \\<lbrakk>degree ?p \\<le> m; set (coeffs ?p) \\<subseteq> \\<real>;\n   ?p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> order (cnj c) ?p = order c ?p\n  degree p \\<le> Suc m\n  set (coeffs p) \\<subseteq> \\<real>\n  p \\<noteq> 0\n  degree p = 2 + degree r\n\ngoal (1 subgoal):\n 1. degree r \\<le> m", "by auto"], ["proof (state)\nthis:\n  degree r \\<le> m\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "from real_poly_factor[OF Suc(3)[unfolded p] cfac] nz"], ["proof (chain)\npicking this:\n  [:- c, 1:] * [:- cnj c, 1:] \\<noteq> 0 \\<Longrightarrow>\n  set (coeffs r) \\<subseteq> \\<real>\n  [:- c, 1:] \\<noteq> 0\n  [:- cnj c, 1:] \\<noteq> 0\n  [:- c, 1:] * [:- cnj c, 1:] \\<noteq> 0\n  r \\<noteq> 0", "have \"set (coeffs r) \\<subseteq> \\<real>\""], ["proof (prove)\nusing this:\n  [:- c, 1:] * [:- cnj c, 1:] \\<noteq> 0 \\<Longrightarrow>\n  set (coeffs r) \\<subseteq> \\<real>\n  [:- c, 1:] \\<noteq> 0\n  [:- cnj c, 1:] \\<noteq> 0\n  [:- c, 1:] * [:- cnj c, 1:] \\<noteq> 0\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. set (coeffs r) \\<subseteq> \\<real>", "by auto"], ["proof (state)\nthis:\n  set (coeffs r) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "from Suc(1)[OF deg this \\<open>r \\<noteq> 0\\<close>]"], ["proof (chain)\npicking this:\n  order (cnj c) r = order c r", "have IH: \"order ?c r = order c r\""], ["proof (prove)\nusing this:\n  order (cnj c) r = order c r\n\ngoal (1 subgoal):\n 1. order (cnj c) r = order c r", "."], ["proof (state)\nthis:\n  order (cnj c) r = order c r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "{"], ["proof (state)\nthis:\n  order (cnj c) r = order c r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "fix cc"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have \"order cc p = order cc ?fac + order cc r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order cc p = order cc ([:- c, 1:] * [:- cnj c, 1:]) + order cc r", "using \\<open>p \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. order cc p = order cc ([:- c, 1:] * [:- cnj c, 1:]) + order cc r", "unfolding p"], ["proof (prove)\nusing this:\n  [:- c, 1:] * [:- cnj c, 1:] * r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. order cc ([:- c, 1:] * [:- cnj c, 1:] * r) =\n    order cc ([:- c, 1:] * [:- cnj c, 1:]) + order cc r", "by (rule order_mult)"], ["proof (state)\nthis:\n  order cc p = order cc ([:- c, 1:] * [:- cnj c, 1:]) + order cc r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "also"], ["proof (state)\nthis:\n  order cc p = order cc ([:- c, 1:] * [:- cnj c, 1:]) + order cc r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have \"order cc ?fac = order cc ?fac1 + order cc ?fac2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order cc ([:- c, 1:] * [:- cnj c, 1:]) =\n    order cc [:- c, 1:] + order cc [:- cnj c, 1:]", "by (rule order_mult, rule nz)"], ["proof (state)\nthis:\n  order cc ([:- c, 1:] * [:- cnj c, 1:]) =\n  order cc [:- c, 1:] + order cc [:- cnj c, 1:]\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "also"], ["proof (state)\nthis:\n  order cc ([:- c, 1:] * [:- cnj c, 1:]) =\n  order cc [:- c, 1:] + order cc [:- cnj c, 1:]\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have \"order cc ?fac1 = (if cc = c then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order cc [:- c, 1:] = (if cc = c then 1 else 0)", "unfolding order_linear'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if - c = - cc then 1 else 0) = (if cc = c then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  order cc [:- c, 1:] = (if cc = c then 1 else 0)\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "also"], ["proof (state)\nthis:\n  order cc [:- c, 1:] = (if cc = c then 1 else 0)\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "have \"order cc ?fac2 = (if cc = ?c then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order cc [:- cnj c, 1:] = (if cc = cnj c then 1 else 0)", "unfolding order_linear'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if - cnj c = - cc then 1 else 0) = (if cc = cnj c then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  order cc [:- cnj c, 1:] = (if cc = cnj c then 1 else 0)\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "finally"], ["proof (chain)\npicking this:\n  order cc p =\n  (if cc = c then 1 else 0) + (if cc = cnj c then 1 else 0) + order cc r", "have \"order cc p = \n            (if cc = c then 1 else 0) + (if cc = cnj c then 1 else 0) + order cc r\""], ["proof (prove)\nusing this:\n  order cc p =\n  (if cc = c then 1 else 0) + (if cc = cnj c then 1 else 0) + order cc r\n\ngoal (1 subgoal):\n 1. order cc p =\n    (if cc = c then 1 else 0) + (if cc = cnj c then 1 else 0) + order cc r", "."], ["proof (state)\nthis:\n  order cc p =\n  (if cc = c then 1 else 0) + (if cc = cnj c then 1 else 0) + order cc r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "}"], ["proof (state)\nthis:\n  order ?cc2 p =\n  (if ?cc2 = c then 1 else 0) + (if ?cc2 = cnj c then 1 else 0) +\n  order ?cc2 r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "note order = this"], ["proof (state)\nthis:\n  order ?cc2 p =\n  (if ?cc2 = c then 1 else 0) + (if ?cc2 = cnj c then 1 else 0) +\n  order ?cc2 r\n\ngoal (1 subgoal):\n 1. c \\<notin> \\<real> \\<Longrightarrow> order (cnj c) p = order c p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "unfolding order IH"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if cnj c = c then 1 else 0) + (if cnj c = cnj c then 1 else 0) +\n    order c r =\n    (if c = c then 1 else 0) + (if c = cnj c then 1 else 0) + order c r", "by auto"], ["proof (state)\nthis:\n  order (cnj c) p = order c p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  order (cnj c) p = order c p\n\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "case False"], ["proof (state)\nthis:\n  poly p c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "note rt1 = this"], ["proof (state)\nthis:\n  poly p c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "{"], ["proof (state)\nthis:\n  poly p c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "assume \"poly p ?c = 0\""], ["proof (state)\nthis:\n  poly p (cnj c) = 0\n\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "from complex_conjugate_root[OF Suc(3) this] rt1"], ["proof (chain)\npicking this:\n  poly p (cnj (cnj c)) = 0\n  poly p c \\<noteq> 0", "have False"], ["proof (prove)\nusing this:\n  poly p (cnj (cnj c)) = 0\n  poly p c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "}"], ["proof (state)\nthis:\n  poly p (cnj c) = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "hence rt2: \"poly p ?c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly p (cnj c) = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. poly p (cnj c) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  poly p (cnj c) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p c \\<noteq> 0 \\<Longrightarrow> order (cnj c) p = order c p", "from rt1 rt2"], ["proof (chain)\npicking this:\n  poly p c \\<noteq> 0\n  poly p (cnj c) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  poly p c \\<noteq> 0\n  poly p (cnj c) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "unfolding order_root"], ["proof (prove)\nusing this:\n  \\<not> (p = 0 \\<or> order c p \\<noteq> 0)\n  \\<not> (p = 0 \\<or> order (cnj c) p \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. order (cnj c) p = order c p", "by simp"], ["proof (state)\nthis:\n  order (cnj c) p = order c p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  order (cnj c) p = order c p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  order (cnj c) p = order c p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma map_poly_of_real_Re: assumes \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"map_poly of_real (map_poly Re p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly complex_of_real (map_poly Re p) = p", "by (subst map_poly_map_poly, force+, rule map_poly_idI, insert assms, auto)"], ["", "lemma map_poly_Re_of_real: \"map_poly Re (map_poly of_real p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (map_poly complex_of_real p) = p", "by (subst map_poly_map_poly, force+, rule map_poly_idI, auto)"], ["", "lemma map_poly_Re_mult: assumes p: \"set (coeffs p) \\<subseteq> \\<real>\"\n  and q: \"set (coeffs q) \\<subseteq> \\<real>\" shows \"map_poly Re (p * q) = map_poly Re p * map_poly Re q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "let ?r = \"map_poly Re\""], ["proof (state)\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "let ?c = \"map_poly complex_of_real\""], ["proof (state)\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "have \"?r (p * q) = ?r (?c (?r p) * ?c (?r q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (p * q) =\n    map_poly Re\n     (map_poly complex_of_real (map_poly Re p) *\n      map_poly complex_of_real (map_poly Re q))", "unfolding map_poly_of_real_Re[OF p] map_poly_of_real_Re[OF q]"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re (p * q)", "by simp"], ["proof (state)\nthis:\n  map_poly Re (p * q) =\n  map_poly Re\n   (map_poly complex_of_real (map_poly Re p) *\n    map_poly complex_of_real (map_poly Re q))\n\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "also"], ["proof (state)\nthis:\n  map_poly Re (p * q) =\n  map_poly Re\n   (map_poly complex_of_real (map_poly Re p) *\n    map_poly complex_of_real (map_poly Re q))\n\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "have \"?c (?r p) * ?c (?r q) = ?c (?r p * ?r q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly complex_of_real (map_poly Re p) *\n    map_poly complex_of_real (map_poly Re q) =\n    map_poly complex_of_real (map_poly Re p * map_poly Re q)", "by (simp add: hom_distribs)"], ["proof (state)\nthis:\n  map_poly complex_of_real (map_poly Re p) *\n  map_poly complex_of_real (map_poly Re q) =\n  map_poly complex_of_real (map_poly Re p * map_poly Re q)\n\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "also"], ["proof (state)\nthis:\n  map_poly complex_of_real (map_poly Re p) *\n  map_poly complex_of_real (map_poly Re q) =\n  map_poly complex_of_real (map_poly Re p * map_poly Re q)\n\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "have \"?r \\<dots> = ?r p * ?r q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (map_poly complex_of_real (map_poly Re p * map_poly Re q)) =\n    map_poly Re p * map_poly Re q", "unfolding map_poly_Re_of_real"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re p * map_poly Re q = map_poly Re p * map_poly Re q", ".."], ["proof (state)\nthis:\n  map_poly Re (map_poly complex_of_real (map_poly Re p * map_poly Re q)) =\n  map_poly Re p * map_poly Re q\n\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "finally"], ["proof (chain)\npicking this:\n  map_poly Re (p * q) = map_poly Re p * map_poly Re q", "show ?thesis"], ["proof (prove)\nusing this:\n  map_poly Re (p * q) = map_poly Re p * map_poly Re q\n\ngoal (1 subgoal):\n 1. map_poly Re (p * q) = map_poly Re p * map_poly Re q", "."], ["proof (state)\nthis:\n  map_poly Re (p * q) = map_poly Re p * map_poly Re q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma map_poly_Re_power: assumes p: \"set (coeffs p) \\<subseteq> \\<real>\"\n shows \"map_poly Re (p^n) = (map_poly Re p)^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (p ^ n) = map_poly Re p ^ n", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0\n 2. \\<And>n.\n       map_poly Re (p ^ n) = map_poly Re p ^ n \\<Longrightarrow>\n       map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "case (Suc n)"], ["proof (state)\nthis:\n  map_poly Re (p ^ n) = map_poly Re p ^ n\n\ngoal (2 subgoals):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0\n 2. \\<And>n.\n       map_poly Re (p ^ n) = map_poly Re p ^ n \\<Longrightarrow>\n       map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "let ?r = \"map_poly Re\""], ["proof (state)\ngoal (2 subgoals):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0\n 2. \\<And>n.\n       map_poly Re (p ^ n) = map_poly Re p ^ n \\<Longrightarrow>\n       map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "have \"?r (p^Suc n) = ?r (p * p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (p ^ Suc n) = map_poly Re (p * p ^ n)", "by simp"], ["proof (state)\nthis:\n  map_poly Re (p ^ Suc n) = map_poly Re (p * p ^ n)\n\ngoal (2 subgoals):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0\n 2. \\<And>n.\n       map_poly Re (p ^ n) = map_poly Re p ^ n \\<Longrightarrow>\n       map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "also"], ["proof (state)\nthis:\n  map_poly Re (p ^ Suc n) = map_poly Re (p * p ^ n)\n\ngoal (2 subgoals):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0\n 2. \\<And>n.\n       map_poly Re (p ^ n) = map_poly Re p ^ n \\<Longrightarrow>\n       map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "have \"\\<dots> = ?r p * ?r (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (p * p ^ n) = map_poly Re p * map_poly Re (p ^ n)", "by (rule map_poly_Re_mult[OF p real_poly_power[OF p]])"], ["proof (state)\nthis:\n  map_poly Re (p * p ^ n) = map_poly Re p * map_poly Re (p ^ n)\n\ngoal (2 subgoals):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0\n 2. \\<And>n.\n       map_poly Re (p ^ n) = map_poly Re p ^ n \\<Longrightarrow>\n       map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "also"], ["proof (state)\nthis:\n  map_poly Re (p * p ^ n) = map_poly Re p * map_poly Re (p ^ n)\n\ngoal (2 subgoals):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0\n 2. \\<And>n.\n       map_poly Re (p ^ n) = map_poly Re p ^ n \\<Longrightarrow>\n       map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "have \"?r (p^n) = (?r p)^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly Re (p ^ n) = map_poly Re p ^ n", "by (rule Suc)"], ["proof (state)\nthis:\n  map_poly Re (p ^ n) = map_poly Re p ^ n\n\ngoal (2 subgoals):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0\n 2. \\<And>n.\n       map_poly Re (p ^ n) = map_poly Re p ^ n \\<Longrightarrow>\n       map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "finally"], ["proof (chain)\npicking this:\n  map_poly Re (p ^ Suc n) = map_poly Re p * map_poly Re p ^ n", "show ?case"], ["proof (prove)\nusing this:\n  map_poly Re (p ^ Suc n) = map_poly Re p * map_poly Re p ^ n\n\ngoal (1 subgoal):\n 1. map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n", "by simp"], ["proof (state)\nthis:\n  map_poly Re (p ^ Suc n) = map_poly Re p ^ Suc n\n\ngoal (1 subgoal):\n 1. map_poly Re (p ^ 0) = map_poly Re p ^ 0", "qed simp"], ["", "lemma real_degree_2_factorization_exists_complex: fixes p :: \"complex poly\"\n  assumes pR: \"set (coeffs p) \\<subseteq> \\<real>\"\n  shows \"\\<exists> qs. p = prod_list qs \\<and> (\\<forall> q \\<in> set qs. set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "obtain n where \"degree p = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. degree p = n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  degree p = n\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  degree p = n\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "using pR"], ["proof (prove)\nusing this:\n  degree p = n\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "proof (induct n arbitrary: p rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x p.\n       \\<lbrakk>\\<And>y p.\n                   \\<lbrakk>y < x; degree p = y;\n                    set (coeffs p) \\<subseteq> \\<real>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>qs.\n  p = prod_list qs \\<and>\n  (\\<forall>q\\<in>set qs.\n      set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2);\n        degree p = x; set (coeffs p) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>qs.\n                            p = prod_list qs \\<and>\n                            (\\<forall>q\\<in>set qs.\n                                set (coeffs q) \\<subseteq> \\<real> \\<and>\n                                degree q \\<le> 2)", "case (less n p)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < n; degree ?p = ?y;\n   set (coeffs ?p) \\<subseteq> \\<real>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>qs.\n                       ?p = prod_list qs \\<and>\n                       (\\<forall>q\\<in>set qs.\n                           set (coeffs q) \\<subseteq> \\<real> \\<and>\n                           degree q \\<le> 2)\n  degree p = n\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<And>x p.\n       \\<lbrakk>\\<And>y p.\n                   \\<lbrakk>y < x; degree p = y;\n                    set (coeffs p) \\<subseteq> \\<real>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>qs.\n  p = prod_list qs \\<and>\n  (\\<forall>q\\<in>set qs.\n      set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2);\n        degree p = x; set (coeffs p) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>qs.\n                            p = prod_list qs \\<and>\n                            (\\<forall>q\\<in>set qs.\n                                set (coeffs q) \\<subseteq> \\<real> \\<and>\n                                degree q \\<le> 2)", "hence pR: \"set (coeffs p) \\<subseteq> \\<real>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?y < n; degree ?p = ?y;\n   set (coeffs ?p) \\<subseteq> \\<real>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>qs.\n                       ?p = prod_list qs \\<and>\n                       (\\<forall>q\\<in>set qs.\n                           set (coeffs q) \\<subseteq> \\<real> \\<and>\n                           degree q \\<le> 2)\n  degree p = n\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs p) \\<subseteq> \\<real>", "by auto"], ["proof (state)\nthis:\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<And>x p.\n       \\<lbrakk>\\<And>y p.\n                   \\<lbrakk>y < x; degree p = y;\n                    set (coeffs p) \\<subseteq> \\<real>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>qs.\n  p = prod_list qs \\<and>\n  (\\<forall>q\\<in>set qs.\n      set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2);\n        degree p = x; set (coeffs p) \\<subseteq> \\<real>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>qs.\n                            p = prod_list qs \\<and>\n                            (\\<forall>q\\<in>set qs.\n                                set (coeffs q) \\<subseteq> \\<real> \\<and>\n                                degree q \\<le> 2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "proof (cases \"n \\<le> 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\n 2. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "case True"], ["proof (state)\nthis:\n  n \\<le> 2\n\ngoal (2 subgoals):\n 1. n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\n 2. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "using pR"], ["proof (prove)\nusing this:\n  n \\<le> 2\n  set (coeffs p) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "by (intro exI[of _ \"[p]\"], insert less(2), auto)"], ["proof (state)\nthis:\n  \\<exists>qs.\n     p = prod_list qs \\<and>\n     (\\<forall>q\\<in>set qs.\n         set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "case False"], ["proof (state)\nthis:\n  \\<not> n \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "hence degp: \"degree p \\<ge> 2\""], ["proof (prove)\nusing this:\n  \\<not> n \\<le> 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> degree p", "using less(2)"], ["proof (prove)\nusing this:\n  \\<not> n \\<le> 2\n  degree p = n\n\ngoal (1 subgoal):\n 1. 2 \\<le> degree p", "by auto"], ["proof (state)\nthis:\n  2 \\<le> degree p\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "hence \"\\<not> constant (poly p)\""], ["proof (prove)\nusing this:\n  2 \\<le> degree p\n\ngoal (1 subgoal):\n 1. \\<not> constant (poly p)", "by (simp add: constant_degree)"], ["proof (state)\nthis:\n  \\<not> constant (poly p)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "from fundamental_theorem_of_algebra[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>z. poly p z = 0", "obtain x where x: \"poly p x = 0\""], ["proof (prove)\nusing this:\n  \\<exists>z. poly p z = 0\n\ngoal (1 subgoal):\n 1. (\\<And>x. poly p x = 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "from x"], ["proof (chain)\npicking this:\n  poly p x = 0", "have dvd: \"[: -x, 1 :] dvd p\""], ["proof (prove)\nusing this:\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. [:- x, 1:] dvd p", "using poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  poly p x = 0\n  (poly ?p ?c = (0::?'a)) = ([:- ?c, 1::?'a:] dvd ?p)\n\ngoal (1 subgoal):\n 1. [:- x, 1:] dvd p", "by blast"], ["proof (state)\nthis:\n  [:- x, 1:] dvd p\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "have \"\\<exists> f. f dvd p \\<and> set (coeffs f) \\<subseteq> \\<real> \\<and> 1 \\<le> degree f \\<and> degree f \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "proof (cases \"x \\<in> \\<real>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2\n 2. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "case True"], ["proof (state)\nthis:\n  x \\<in> \\<real>\n\ngoal (2 subgoals):\n 1. x \\<in> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2\n 2. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "with dvd"], ["proof (chain)\npicking this:\n  [:- x, 1:] dvd p\n  x \\<in> \\<real>", "show ?thesis"], ["proof (prove)\nusing this:\n  [:- x, 1:] dvd p\n  x \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "by (intro exI[of _ \"[: -x, 1:]\"], auto)"], ["proof (state)\nthis:\n  \\<exists>f.\n     f dvd p \\<and>\n     set (coeffs f) \\<subseteq> \\<real> \\<and>\n     1 \\<le> degree f \\<and> degree f \\<le> 2\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "case False"], ["proof (state)\nthis:\n  x \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "let ?x = \"cnj x\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "let ?a = \"?x * x\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "let ?b = \"- ?x - x\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "from complex_conjugate_root[OF pR x]"], ["proof (chain)\npicking this:\n  poly p (cnj x) = 0", "have xx: \"poly p ?x = 0\""], ["proof (prove)\nusing this:\n  poly p (cnj x) = 0\n\ngoal (1 subgoal):\n 1. poly p (cnj x) = 0", "by auto"], ["proof (state)\nthis:\n  poly p (cnj x) = 0\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "from False"], ["proof (chain)\npicking this:\n  x \\<notin> \\<real>", "have diff: \"x \\<noteq> ?x\""], ["proof (prove)\nusing this:\n  x \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. x \\<noteq> cnj x", "by (simp add: Reals_cnj_iff)"], ["proof (state)\nthis:\n  x \\<noteq> cnj x\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "from dvd"], ["proof (chain)\npicking this:\n  [:- x, 1:] dvd p", "obtain r where p: \"p = [: -x, 1 :] * r\""], ["proof (prove)\nusing this:\n  [:- x, 1:] dvd p\n\ngoal (1 subgoal):\n 1. (\\<And>r. p = [:- x, 1:] * r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. p = [:- x, 1:] * k\n\ngoal (1 subgoal):\n 1. (\\<And>r. p = [:- x, 1:] * r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = [:- x, 1:] * r\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "from xx[unfolded this] diff"], ["proof (chain)\npicking this:\n  poly ([:- x, 1:] * r) (cnj x) = 0\n  x \\<noteq> cnj x", "have \"poly r ?x = 0\""], ["proof (prove)\nusing this:\n  poly ([:- x, 1:] * r) (cnj x) = 0\n  x \\<noteq> cnj x\n\ngoal (1 subgoal):\n 1. poly r (cnj x) = 0", "by simp"], ["proof (state)\nthis:\n  poly r (cnj x) = 0\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "hence \"[: -?x, 1 :] dvd r\""], ["proof (prove)\nusing this:\n  poly r (cnj x) = 0\n\ngoal (1 subgoal):\n 1. [:- cnj x, 1:] dvd r", "using poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  poly r (cnj x) = 0\n  (poly ?p ?c = (0::?'a)) = ([:- ?c, 1::?'a:] dvd ?p)\n\ngoal (1 subgoal):\n 1. [:- cnj x, 1:] dvd r", "by blast"], ["proof (state)\nthis:\n  [:- cnj x, 1:] dvd r\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "then"], ["proof (chain)\npicking this:\n  [:- cnj x, 1:] dvd r", "obtain s where r: \"r = [: -?x, 1 :] * s\""], ["proof (prove)\nusing this:\n  [:- cnj x, 1:] dvd r\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        r = [:- cnj x, 1:] * s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. r = [:- cnj x, 1:] * k\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        r = [:- cnj x, 1:] * s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = [:- cnj x, 1:] * s\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "have \"p = ([: -x, 1:] * [: -?x, 1 :]) * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = [:- x, 1:] * [:- cnj x, 1:] * s", "unfolding p r"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- x, 1:] * ([:- cnj x, 1:] * s) = [:- x, 1:] * [:- cnj x, 1:] * s", "by algebra"], ["proof (state)\nthis:\n  p = [:- x, 1:] * [:- cnj x, 1:] * s\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "also"], ["proof (state)\nthis:\n  p = [:- x, 1:] * [:- cnj x, 1:] * s\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "have \"[: -x, 1:] * [: -?x, 1 :] = [: ?a, ?b, 1 :]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- x, 1:] * [:- cnj x, 1:] = [:cnj x * x, - cnj x - x, 1:]", "by simp"], ["proof (state)\nthis:\n  [:- x, 1:] * [:- cnj x, 1:] = [:cnj x * x, - cnj x - x, 1:]\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "finally"], ["proof (chain)\npicking this:\n  p = [:cnj x * x, - cnj x - x, 1:] * s", "have \"[: ?a, ?b, 1 :] dvd p\""], ["proof (prove)\nusing this:\n  p = [:cnj x * x, - cnj x - x, 1:] * s\n\ngoal (1 subgoal):\n 1. [:cnj x * x, - cnj x - x, 1:] dvd p", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  p = [:cnj x * x, - cnj x - x, 1:] * s\n\ngoal (1 subgoal):\n 1. \\<exists>k. p = [:cnj x * x, - cnj x - x, 1:] * k", "by auto"], ["proof (state)\nthis:\n  [:cnj x * x, - cnj x - x, 1:] dvd p\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "moreover"], ["proof (state)\nthis:\n  [:cnj x * x, - cnj x - x, 1:] dvd p\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "have \"?a \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj x * x \\<in> \\<real>", "by (simp add: Reals_cnj_iff)"], ["proof (state)\nthis:\n  cnj x * x \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "moreover"], ["proof (state)\nthis:\n  cnj x * x \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "have \"?b \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - cnj x - x \\<in> \\<real>", "by (simp add: Reals_cnj_iff)"], ["proof (state)\nthis:\n  - cnj x - x \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<real> \\<Longrightarrow>\n    \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "ultimately"], ["proof (chain)\npicking this:\n  [:cnj x * x, - cnj x - x, 1:] dvd p\n  cnj x * x \\<in> \\<real>\n  - cnj x - x \\<in> \\<real>", "show ?thesis"], ["proof (prove)\nusing this:\n  [:cnj x * x, - cnj x - x, 1:] dvd p\n  cnj x * x \\<in> \\<real>\n  - cnj x - x \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       f dvd p \\<and>\n       set (coeffs f) \\<subseteq> \\<real> \\<and>\n       1 \\<le> degree f \\<and> degree f \\<le> 2", "by (intro exI[of _ \"[:?a,?b,1:]\"], auto)"], ["proof (state)\nthis:\n  \\<exists>f.\n     f dvd p \\<and>\n     set (coeffs f) \\<subseteq> \\<real> \\<and>\n     1 \\<le> degree f \\<and> degree f \\<le> 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>f.\n     f dvd p \\<and>\n     set (coeffs f) \\<subseteq> \\<real> \\<and>\n     1 \\<le> degree f \\<and> degree f \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "then"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     f dvd p \\<and>\n     set (coeffs f) \\<subseteq> \\<real> \\<and>\n     1 \\<le> degree f \\<and> degree f \\<le> 2", "obtain f where dvd: \"f dvd p\" and fR: \"set (coeffs f) \\<subseteq> \\<real>\" and degf: \"1 \\<le> degree f\" \"degree f \\<le> 2\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f dvd p \\<and>\n     set (coeffs f) \\<subseteq> \\<real> \\<and>\n     1 \\<le> degree f \\<and> degree f \\<le> 2\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f dvd p; set (coeffs f) \\<subseteq> \\<real>;\n         1 \\<le> degree f; degree f \\<le> 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f dvd p\n  set (coeffs f) \\<subseteq> \\<real>\n  1 \\<le> degree f\n  degree f \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "from dvd"], ["proof (chain)\npicking this:\n  f dvd p", "obtain r where p: \"p = f * r\""], ["proof (prove)\nusing this:\n  f dvd p\n\ngoal (1 subgoal):\n 1. (\\<And>r. p = f * r \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. p = f * k\n\ngoal (1 subgoal):\n 1. (\\<And>r. p = f * r \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  p = f * r\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "from degp"], ["proof (chain)\npicking this:\n  2 \\<le> degree p", "have p0: \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  2 \\<le> degree p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "with p"], ["proof (chain)\npicking this:\n  p = f * r\n  p \\<noteq> 0", "have f0: \"f \\<noteq> 0\" and r0: \"r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p = f * r\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0 &&& r \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  f \\<noteq> 0\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "from real_poly_factor[OF pR[unfolded p] fR f0]"], ["proof (chain)\npicking this:\n  set (coeffs r) \\<subseteq> \\<real>", "have rR: \"set (coeffs r) \\<subseteq> \\<real>\""], ["proof (prove)\nusing this:\n  set (coeffs r) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. set (coeffs r) \\<subseteq> \\<real>", "."], ["proof (state)\nthis:\n  set (coeffs r) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "have deg: \"degree p = degree f + degree r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p = degree f + degree r", "unfolding p"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (f * r) = degree f + degree r", "by (rule degree_mult_eq[OF f0 r0])"], ["proof (state)\nthis:\n  degree p = degree f + degree r\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "with degf less(2)"], ["proof (chain)\npicking this:\n  1 \\<le> degree f\n  degree f \\<le> 2\n  degree p = n\n  degree p = degree f + degree r", "have degr: \"degree r < n\""], ["proof (prove)\nusing this:\n  1 \\<le> degree f\n  degree f \\<le> 2\n  degree p = n\n  degree p = degree f + degree r\n\ngoal (1 subgoal):\n 1. degree r < n", "by auto"], ["proof (state)\nthis:\n  degree r < n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "from less(1)[OF this refl rR]"], ["proof (chain)\npicking this:\n  \\<exists>qs.\n     r = prod_list qs \\<and>\n     (\\<forall>q\\<in>set qs.\n         set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "obtain qs \n        where IH: \"r = prod_list qs\" \"(\\<forall>q\\<in>set qs. set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\""], ["proof (prove)\nusing this:\n  \\<exists>qs.\n     r = prod_list qs \\<and>\n     (\\<forall>q\\<in>set qs.\n         set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\n\ngoal (1 subgoal):\n 1. (\\<And>qs.\n        \\<lbrakk>r = prod_list qs;\n         \\<forall>q\\<in>set qs.\n            set (coeffs q) \\<subseteq> \\<real> \\<and>\n            degree q \\<le> 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = prod_list qs\n  \\<forall>q\\<in>set qs.\n     set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "from IH(1)"], ["proof (chain)\npicking this:\n  r = prod_list qs", "have p: \"p = prod_list (f # qs)\""], ["proof (prove)\nusing this:\n  r = prod_list qs\n\ngoal (1 subgoal):\n 1. p = prod_list (f # qs)", "unfolding p"], ["proof (prove)\nusing this:\n  r = prod_list qs\n\ngoal (1 subgoal):\n 1. f * r = prod_list (f # qs)", "by auto"], ["proof (state)\nthis:\n  p = prod_list (f # qs)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 2 \\<Longrightarrow>\n    \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "with IH(2) fR degf"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>set qs.\n     set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2\n  set (coeffs f) \\<subseteq> \\<real>\n  1 \\<le> degree f\n  degree f \\<le> 2\n  p = prod_list (f # qs)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>set qs.\n     set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2\n  set (coeffs f) \\<subseteq> \\<real>\n  1 \\<le> degree f\n  degree f \\<le> 2\n  p = prod_list (f # qs)\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs.\n           set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "by (intro exI[of _ \"f # qs\"], auto)"], ["proof (state)\nthis:\n  \\<exists>qs.\n     p = prod_list qs \\<and>\n     (\\<forall>q\\<in>set qs.\n         set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>qs.\n     p = prod_list qs \\<and>\n     (\\<forall>q\\<in>set qs.\n         set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>qs.\n     p = prod_list qs \\<and>\n     (\\<forall>q\\<in>set qs.\n         set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_degree_2_factorization_exists: fixes p :: \"real poly\"\n  shows \"\\<exists> qs. p = prod_list qs \\<and> (\\<forall> q \\<in> set qs. degree q \\<le> 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "let ?cp = \"map_poly complex_of_real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "let ?rp = \"map_poly Re\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "let ?p = \"?cp p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "have \"set (coeffs ?p) \\<subseteq> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (coeffs (map_poly complex_of_real p)) \\<subseteq> \\<real>", "by auto"], ["proof (state)\nthis:\n  set (coeffs (map_poly complex_of_real p)) \\<subseteq> \\<real>\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "from real_degree_2_factorization_exists_complex[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>qs.\n     map_poly complex_of_real p = prod_list qs \\<and>\n     (\\<forall>q\\<in>set qs.\n         set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)", "obtain qs where p: \"?p = prod_list qs\" and \n    qs: \"\\<And> q. q \\<in> set qs \\<Longrightarrow> set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2\""], ["proof (prove)\nusing this:\n  \\<exists>qs.\n     map_poly complex_of_real p = prod_list qs \\<and>\n     (\\<forall>q\\<in>set qs.\n         set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2)\n\ngoal (1 subgoal):\n 1. (\\<And>qs.\n        \\<lbrakk>map_poly complex_of_real p = prod_list qs;\n         \\<And>q.\n            q \\<in> set qs \\<Longrightarrow>\n            set (coeffs q) \\<subseteq> \\<real> \\<and>\n            degree q \\<le> 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  map_poly complex_of_real p = prod_list qs\n  ?q \\<in> set qs \\<Longrightarrow>\n  set (coeffs ?q) \\<subseteq> \\<real> \\<and> degree ?q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "have p: \"p = ?rp (prod_list qs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = map_poly Re (prod_list qs)", "unfolding arg_cong[OF p, of ?rp, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. p = map_poly Re (map_poly complex_of_real p)", "by (subst map_poly_map_poly, force, rule sym, rule map_poly_idI, auto)"], ["proof (state)\nthis:\n  p = map_poly Re (prod_list qs)\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "from qs"], ["proof (chain)\npicking this:\n  ?q \\<in> set qs \\<Longrightarrow>\n  set (coeffs ?q) \\<subseteq> \\<real> \\<and> degree ?q \\<le> 2", "have \"\\<exists> rs. prod_list qs = ?cp (prod_list rs) \\<and> (\\<forall> r \\<in> set rs. degree r \\<le> 2)\""], ["proof (prove)\nusing this:\n  ?q \\<in> set qs \\<Longrightarrow>\n  set (coeffs ?q) \\<subseteq> \\<real> \\<and> degree ?q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       prod_list qs = map_poly complex_of_real (prod_list rs) \\<and>\n       (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "proof (induct qs)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>q.\n        q \\<in> set [] \\<Longrightarrow>\n        set (coeffs q) \\<subseteq> \\<real> \\<and>\n        degree q \\<le> 2) \\<Longrightarrow>\n    \\<exists>rs.\n       prod_list [] = map_poly complex_of_real (prod_list rs) \\<and>\n       (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n 2. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "case Nil"], ["proof (state)\nthis:\n  ?q \\<in> set [] \\<Longrightarrow>\n  set (coeffs ?q) \\<subseteq> \\<real> \\<and> degree ?q \\<le> 2\n\ngoal (2 subgoals):\n 1. (\\<And>q.\n        q \\<in> set [] \\<Longrightarrow>\n        set (coeffs q) \\<subseteq> \\<real> \\<and>\n        degree q \\<le> 2) \\<Longrightarrow>\n    \\<exists>rs.\n       prod_list [] = map_poly complex_of_real (prod_list rs) \\<and>\n       (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n 2. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       prod_list [] = map_poly complex_of_real (prod_list rs) \\<and>\n       (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "by (auto intro!: exI[of _ Nil])"], ["proof (state)\nthis:\n  \\<exists>rs.\n     prod_list [] = map_poly complex_of_real (prod_list rs) \\<and>\n     (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n\ngoal (1 subgoal):\n 1. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "case (Cons q qs)"], ["proof (state)\nthis:\n  (\\<And>q.\n      q \\<in> set qs \\<Longrightarrow>\n      set (coeffs q) \\<subseteq> \\<real> \\<and>\n      degree q \\<le> 2) \\<Longrightarrow>\n  \\<exists>rs.\n     prod_list qs = map_poly complex_of_real (prod_list rs) \\<and>\n     (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n  ?q \\<in> set (q # qs) \\<Longrightarrow>\n  set (coeffs ?q) \\<subseteq> \\<real> \\<and> degree ?q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "then"], ["proof (chain)\npicking this:\n  (\\<And>q.\n      q \\<in> set qs \\<Longrightarrow>\n      set (coeffs q) \\<subseteq> \\<real> \\<and>\n      degree q \\<le> 2) \\<Longrightarrow>\n  \\<exists>rs.\n     prod_list qs = map_poly complex_of_real (prod_list rs) \\<and>\n     (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n  ?q \\<in> set (q # qs) \\<Longrightarrow>\n  set (coeffs ?q) \\<subseteq> \\<real> \\<and> degree ?q \\<le> 2", "obtain rs where qs: \"prod_list qs = ?cp (prod_list rs)\"\n      and rs: \"\\<And> q. q\\<in>set rs \\<Longrightarrow> degree q \\<le> 2\""], ["proof (prove)\nusing this:\n  (\\<And>q.\n      q \\<in> set qs \\<Longrightarrow>\n      set (coeffs q) \\<subseteq> \\<real> \\<and>\n      degree q \\<le> 2) \\<Longrightarrow>\n  \\<exists>rs.\n     prod_list qs = map_poly complex_of_real (prod_list rs) \\<and>\n     (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n  ?q \\<in> set (q # qs) \\<Longrightarrow>\n  set (coeffs ?q) \\<subseteq> \\<real> \\<and> degree ?q \\<le> 2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>prod_list qs = map_poly complex_of_real (prod_list rs);\n         \\<And>q. q \\<in> set rs \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force+"], ["proof (state)\nthis:\n  prod_list qs = map_poly complex_of_real (prod_list rs)\n  ?q \\<in> set rs \\<Longrightarrow> degree ?q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "from Cons(2)[of q]"], ["proof (chain)\npicking this:\n  q \\<in> set (q # qs) \\<Longrightarrow>\n  set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2", "have q: \"set (coeffs q) \\<subseteq> \\<real>\" and dq: \"degree q \\<le> 2\""], ["proof (prove)\nusing this:\n  q \\<in> set (q # qs) \\<Longrightarrow>\n  set (coeffs q) \\<subseteq> \\<real> \\<and> degree q \\<le> 2\n\ngoal (1 subgoal):\n 1. set (coeffs q) \\<subseteq> \\<real> &&& degree q \\<le> 2", "by auto"], ["proof (state)\nthis:\n  set (coeffs q) \\<subseteq> \\<real>\n  degree q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "define r where \"r = ?rp q\""], ["proof (state)\nthis:\n  r = map_poly Re q\n\ngoal (1 subgoal):\n 1. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "have q: \"q = ?cp r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = map_poly complex_of_real r", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. q = map_poly complex_of_real (map_poly Re q)", "by (subst map_poly_map_poly, force, rule sym, rule map_poly_idI, insert q, auto)"], ["proof (state)\nthis:\n  q = map_poly complex_of_real r\n\ngoal (1 subgoal):\n 1. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "have dr: \"degree r \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree r \\<le> 2", "using dq"], ["proof (prove)\nusing this:\n  degree q \\<le> 2\n\ngoal (1 subgoal):\n 1. degree r \\<le> 2", "unfolding q"], ["proof (prove)\nusing this:\n  degree (map_poly complex_of_real r) \\<le> 2\n\ngoal (1 subgoal):\n 1. degree r \\<le> 2", "by (simp add: degree_map_poly)"], ["proof (state)\nthis:\n  degree r \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<And>a qs.\n       \\<lbrakk>(\\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    set (coeffs q) \\<subseteq> \\<real> \\<and>\n                    degree q \\<le> 2) \\<Longrightarrow>\n                \\<exists>rs.\n                   prod_list qs =\n                   map_poly complex_of_real (prod_list rs) \\<and>\n                   (\\<forall>r\\<in>set rs. degree r \\<le> 2);\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow>\n           set (coeffs q) \\<subseteq> \\<real> \\<and>\n           degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            prod_list (a # qs) =\n                            map_poly complex_of_real (prod_list rs) \\<and>\n                            (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       prod_list (q # qs) = map_poly complex_of_real (prod_list rs) \\<and>\n       (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "by (rule exI[of _ \"r # rs\"], unfold prod_list.Cons qs q, insert dr rs, auto simp: hom_distribs)"], ["proof (state)\nthis:\n  \\<exists>rs.\n     prod_list (q # qs) = map_poly complex_of_real (prod_list rs) \\<and>\n     (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rs.\n     prod_list qs = map_poly complex_of_real (prod_list rs) \\<and>\n     (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "then"], ["proof (chain)\npicking this:\n  \\<exists>rs.\n     prod_list qs = map_poly complex_of_real (prod_list rs) \\<and>\n     (\\<forall>r\\<in>set rs. degree r \\<le> 2)", "obtain rs where id: \"prod_list qs = ?cp (prod_list rs)\" and deg: \"\\<forall> r \\<in> set rs. degree r \\<le> 2\""], ["proof (prove)\nusing this:\n  \\<exists>rs.\n     prod_list qs = map_poly complex_of_real (prod_list rs) \\<and>\n     (\\<forall>r\\<in>set rs. degree r \\<le> 2)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>prod_list qs = map_poly complex_of_real (prod_list rs);\n         \\<forall>r\\<in>set rs. degree r \\<le> 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prod_list qs = map_poly complex_of_real (prod_list rs)\n  \\<forall>r\\<in>set rs. degree r \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "unfolding p id"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>qs.\n       map_poly Re (map_poly complex_of_real (prod_list rs)) =\n       prod_list qs \\<and>\n       (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "by (intro exI, rule conjI[OF _ deg], subst map_poly_map_poly, force, rule map_poly_idI, auto)"], ["proof (state)\nthis:\n  \\<exists>qs.\n     p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma odd_degree_imp_real_root: assumes \"odd (degree p)\"\n  shows \"\\<exists> x. poly p x = (0 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0", "from real_degree_2_factorization_exists[of p]"], ["proof (chain)\npicking this:\n  \\<exists>qs.\n     p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)", "obtain qs where\n    id: \"p = prod_list qs\" and qs: \"\\<And> q. q \\<in> set qs \\<Longrightarrow> degree q \\<le> 2\""], ["proof (prove)\nusing this:\n  \\<exists>qs.\n     p = prod_list qs \\<and> (\\<forall>q\\<in>set qs. degree q \\<le> 2)\n\ngoal (1 subgoal):\n 1. (\\<And>qs.\n        \\<lbrakk>p = prod_list qs;\n         \\<And>q. q \\<in> set qs \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = prod_list qs\n  ?q \\<in> set qs \\<Longrightarrow> degree ?q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0", "using assms qs"], ["proof (prove)\nusing this:\n  odd (degree p)\n  ?q \\<in> set qs \\<Longrightarrow> degree ?q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0", "unfolding id"], ["proof (prove)\nusing this:\n  odd (degree (prod_list qs))\n  ?q \\<in> set qs \\<Longrightarrow> degree ?q \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly (prod_list qs) x = 0", "proof (induct qs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>odd (degree (prod_list []));\n     \\<And>q. q \\<in> set [] \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. poly (prod_list []) x = 0\n 2. \\<And>a qs.\n       \\<lbrakk>\\<lbrakk>odd (degree (prod_list qs));\n                 \\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    degree q \\<le> 2\\<rbrakk>\n                \\<Longrightarrow> \\<exists>x. poly (prod_list qs) x = 0;\n        odd (degree (prod_list (a # qs)));\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. poly (prod_list (a # qs)) x = 0", "case (Cons q qs)"], ["proof (state)\nthis:\n  \\<lbrakk>odd (degree (prod_list qs));\n   \\<And>q. q \\<in> set qs \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. poly (prod_list qs) x = 0\n  odd (degree (prod_list (q # qs)))\n  ?q \\<in> set (q # qs) \\<Longrightarrow> degree ?q \\<le> 2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>odd (degree (prod_list []));\n     \\<And>q. q \\<in> set [] \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. poly (prod_list []) x = 0\n 2. \\<And>a qs.\n       \\<lbrakk>\\<lbrakk>odd (degree (prod_list qs));\n                 \\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    degree q \\<le> 2\\<rbrakk>\n                \\<Longrightarrow> \\<exists>x. poly (prod_list qs) x = 0;\n        odd (degree (prod_list (a # qs)));\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. poly (prod_list (a # qs)) x = 0", "from Cons(3)[of q]"], ["proof (chain)\npicking this:\n  q \\<in> set (q # qs) \\<Longrightarrow> degree q \\<le> 2", "have dq: \"degree q \\<le> 2\""], ["proof (prove)\nusing this:\n  q \\<in> set (q # qs) \\<Longrightarrow> degree q \\<le> 2\n\ngoal (1 subgoal):\n 1. degree q \\<le> 2", "by auto"], ["proof (state)\nthis:\n  degree q \\<le> 2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>odd (degree (prod_list []));\n     \\<And>q. q \\<in> set [] \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. poly (prod_list []) x = 0\n 2. \\<And>a qs.\n       \\<lbrakk>\\<lbrakk>odd (degree (prod_list qs));\n                 \\<And>q.\n                    q \\<in> set qs \\<Longrightarrow>\n                    degree q \\<le> 2\\<rbrakk>\n                \\<Longrightarrow> \\<exists>x. poly (prod_list qs) x = 0;\n        odd (degree (prod_list (a # qs)));\n        \\<And>q.\n           q \\<in> set (a # qs) \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. poly (prod_list (a # qs)) x = 0", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. poly (prod_list (q # qs)) x = 0", "proof (cases \"degree q = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. degree q = 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0\n 2. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "case True"], ["proof (state)\nthis:\n  degree q = 1\n\ngoal (2 subgoals):\n 1. degree q = 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0\n 2. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "from roots1[OF this]"], ["proof (chain)\npicking this:\n  {x. poly q x = 0} = {roots1 q}", "show ?thesis"], ["proof (prove)\nusing this:\n  {x. poly q x = 0} = {roots1 q}\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly (prod_list (q # qs)) x = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. poly (prod_list (q # qs)) x = 0\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "case False"], ["proof (state)\nthis:\n  degree q \\<noteq> 1\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "with dq"], ["proof (chain)\npicking this:\n  degree q \\<le> 2\n  degree q \\<noteq> 1", "have deg: \"degree q = 0 \\<or> degree q = 2\""], ["proof (prove)\nusing this:\n  degree q \\<le> 2\n  degree q \\<noteq> 1\n\ngoal (1 subgoal):\n 1. degree q = 0 \\<or> degree q = 2", "by arith"], ["proof (state)\nthis:\n  degree q = 0 \\<or> degree q = 2\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "from Cons(2)"], ["proof (chain)\npicking this:\n  odd (degree (prod_list (q # qs)))", "have \"q * prod_list qs \\<noteq> 0\""], ["proof (prove)\nusing this:\n  odd (degree (prod_list (q # qs)))\n\ngoal (1 subgoal):\n 1. q * prod_list qs \\<noteq> 0", "by fastforce"], ["proof (state)\nthis:\n  q * prod_list qs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "hence \"q \\<noteq> 0\" \"prod_list qs \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q * prod_list qs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 &&& prod_list qs \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> 0\n  prod_list qs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "from degree_mult_eq[OF this]"], ["proof (chain)\npicking this:\n  degree (q * prod_list qs) = degree q + degree (prod_list qs)", "have \"degree (prod_list (q # qs)) = degree q + degree (prod_list qs)\""], ["proof (prove)\nusing this:\n  degree (q * prod_list qs) = degree q + degree (prod_list qs)\n\ngoal (1 subgoal):\n 1. degree (prod_list (q # qs)) = degree q + degree (prod_list qs)", "by simp"], ["proof (state)\nthis:\n  degree (prod_list (q # qs)) = degree q + degree (prod_list qs)\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "from Cons(2)[unfolded this] deg"], ["proof (chain)\npicking this:\n  odd (degree q + degree (prod_list qs))\n  degree q = 0 \\<or> degree q = 2", "have \"odd (degree (prod_list qs))\""], ["proof (prove)\nusing this:\n  odd (degree q + degree (prod_list qs))\n  degree q = 0 \\<or> degree q = 2\n\ngoal (1 subgoal):\n 1. odd (degree (prod_list qs))", "by auto"], ["proof (state)\nthis:\n  odd (degree (prod_list qs))\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "from Cons(1)[OF this Cons(3)]"], ["proof (chain)\npicking this:\n  (\\<And>qa.\n      qa \\<in> set qs \\<Longrightarrow>\n      qa \\<in> set (q # qs)) \\<Longrightarrow>\n  \\<exists>x. poly (prod_list qs) x = 0", "obtain x where \"poly (prod_list qs) x = 0\""], ["proof (prove)\nusing this:\n  (\\<And>qa.\n      qa \\<in> set qs \\<Longrightarrow>\n      qa \\<in> set (q # qs)) \\<Longrightarrow>\n  \\<exists>x. poly (prod_list qs) x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        poly (prod_list qs) x = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  poly (prod_list qs) x = 0\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>x. poly (prod_list (q # qs)) x = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  poly (prod_list qs) x = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly (prod_list (q # qs)) x = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. poly (prod_list (q # qs)) x = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x. poly (prod_list (q # qs)) x = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd (degree (prod_list []));\n     \\<And>q. q \\<in> set [] \\<Longrightarrow> degree q \\<le> 2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. poly (prod_list []) x = 0", "qed simp"], ["proof (state)\nthis:\n  \\<exists>x. poly p x = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}