{"file_name": "/home/qj213/afp-2021-10-22/thys/Algebraic_Numbers/Factors_of_Int_Poly.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Algebraic_Numbers", "problem_names": ["lemma degree_of_gcd: \"degree (gcd q r) \\<noteq> 0 \\<longleftrightarrow>\n degree (gcd (of_int_poly q :: 'a :: {field_char_0, field_gcd} poly) (of_int_poly r)) \\<noteq> 0\"", "lemma factors_of_int_poly_const: assumes \"degree p = 0\"\n  shows \"factors_of_int_poly p = []\"", "lemma factors_of_int_poly:\n  defines \"rp \\<equiv> ipoly :: int poly \\<Rightarrow> 'a :: {field_gcd,field_char_0} \\<Rightarrow> 'a\"\n  assumes \"factors_of_int_poly p = qs\"\n  shows \"\\<And> q. q \\<in> set qs \\<Longrightarrow> irreducible q \\<and> lead_coeff q > 0 \\<and> degree q \\<le> degree p \\<and> degree q \\<noteq> 0\"\n  \"p \\<noteq> 0 \\<Longrightarrow> rp p x = 0 \\<longleftrightarrow> (\\<exists> q \\<in> set qs. rp q x = 0)\"\n  \"p \\<noteq> 0 \\<Longrightarrow> rp p x = 0 \\<Longrightarrow> \\<exists>! q \\<in> set qs. rp q x = 0\"\n  \"distinct qs\"", "lemma factors_int_poly_represents:\n  fixes x :: \"'a :: {field_char_0,field_gcd}\"\n  assumes p: \"p represents x\"\n  shows \"\\<exists> q \\<in> set (factors_of_int_poly p).\n    q represents x \\<and> irreducible q \\<and> lead_coeff q > 0  \\<and> degree q \\<le> degree p\"", "lemma irreducible_preservation:\n  fixes x :: \"'a :: {field_char_0,field_gcd}\"\n  assumes irr: \"irreducible p\"\n  and x: \"p represents x\"\n  and y: \"q represents y\"\n  and deg: \"degree p \\<ge> degree q\"\n  and f: \"\\<And> q. q represents y \\<Longrightarrow> (f q) represents x \\<and> degree (f q) \\<le> degree q\"\n  and pr: \"primitive q\"\n  shows \"irreducible q\"", "lemma poly_uminus_irreducible:\n  assumes p: \"irreducible (p :: int poly)\" and deg: \"degree p \\<noteq> 0\"\n  shows \"irreducible (poly_uminus p)\"", "lemma reflect_poly_irreducible:\n  fixes x :: \"'a :: {field_char_0,field_gcd}\"\n  assumes p: \"irreducible p\" and x: \"p represents x\" and x0: \"x \\<noteq> 0\"\n  shows \"irreducible (reflect_poly p)\"", "lemma poly_add_rat_irreducible:\n  assumes p: \"irreducible p\" and deg: \"degree p \\<noteq> 0\"\n  shows \"irreducible (cf_pos_poly (poly_add_rat r p))\"", "lemma poly_mult_rat_irreducible:\n  assumes p: \"irreducible p\" and deg: \"degree p \\<noteq> 0\" and r: \"r \\<noteq> 0\"\n  shows \"irreducible (cf_pos_poly (poly_mult_rat r p))\""], "translations": [["", "lemma degree_of_gcd: \"degree (gcd q r) \\<noteq> 0 \\<longleftrightarrow>\n degree (gcd (of_int_poly q :: 'a :: {field_char_0, field_gcd} poly) (of_int_poly r)) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "let ?r = \"of_rat :: rat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "interpret rpoly: field_hom' ?r"], ["proof (prove)\ngoal (1 subgoal):\n 1. field_hom' of_rat", "by (unfold_locales, auto simp: of_rat_add of_rat_mult)"], ["proof (state)\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "have \"of_int_poly p = map_poly (?r o of_int) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int_poly p = map_poly (of_rat \\<circ> rat_of_int) p", "unfolding o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int_poly p = map_poly (\\<lambda>x. of_rat (rat_of_int x)) p", "by auto"], ["proof (state)\nthis:\n  of_int_poly p = map_poly (of_rat \\<circ> rat_of_int) p\n\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "also"], ["proof (state)\nthis:\n  of_int_poly p = map_poly (of_rat \\<circ> rat_of_int) p\n\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "have \"\\<dots> = map_poly ?r (map_poly of_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly (of_rat \\<circ> rat_of_int) p = map_poly of_rat (of_int_poly p)", "by (subst map_poly_map_poly, auto)"], ["proof (state)\nthis:\n  map_poly (of_rat \\<circ> rat_of_int) p = map_poly of_rat (of_int_poly p)\n\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "finally"], ["proof (chain)\npicking this:\n  of_int_poly p = map_poly of_rat (of_int_poly p)", "have \"of_int_poly p = map_poly ?r (map_poly of_int p)\""], ["proof (prove)\nusing this:\n  of_int_poly p = map_poly of_rat (of_int_poly p)\n\ngoal (1 subgoal):\n 1. of_int_poly p = map_poly of_rat (of_int_poly p)", "."], ["proof (state)\nthis:\n  of_int_poly p = map_poly of_rat (of_int_poly p)\n\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "}"], ["proof (state)\nthis:\n  of_int_poly ?p2 = map_poly of_rat (of_int_poly ?p2)\n\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "note id = this"], ["proof (state)\nthis:\n  of_int_poly ?p2 = map_poly of_rat (of_int_poly ?p2)\n\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. (degree (gcd q r) \\<noteq> 0) =\n    (degree\n      (gcd (map_poly of_rat (of_int_poly q))\n        (map_poly of_rat (of_int_poly r))) \\<noteq>\n     0)", "by (fold hom_distribs, simp add: gcd_rat_to_gcd_int)"], ["proof (state)\nthis:\n  (degree (gcd q r) \\<noteq> 0) =\n  (degree (gcd (of_int_poly q) (of_int_poly r)) \\<noteq> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition factors_of_int_poly :: \"int poly \\<Rightarrow> int poly list\" where\n  \"factors_of_int_poly p = map (abs_int_poly o fst) (snd (factorize_int_poly p))\""], ["", "lemma factors_of_int_poly_const: assumes \"degree p = 0\"\n  shows \"factors_of_int_poly p = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. factors_of_int_poly p = []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. factors_of_int_poly p = []", "from degree0_coeffs[OF assms]"], ["proof (chain)\npicking this:\n  \\<exists>a. p = [:a:]", "obtain a where p: \"p = [: a :]\""], ["proof (prove)\nusing this:\n  \\<exists>a. p = [:a:]\n\ngoal (1 subgoal):\n 1. (\\<And>a. p = [:a:] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  p = [:a:]\n\ngoal (1 subgoal):\n 1. factors_of_int_poly p = []", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. factors_of_int_poly p = []", "unfolding p factors_of_int_poly_def\n    factorize_int_poly_generic_def x_split_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (abs_int_poly \\<circ> fst)\n     (snd (case let fs = coeffs [:a:]; zs = takeWhile ((=) 0) fs\n                in case zs of [] \\<Rightarrow> (0, [:a:])\n                   | a # list \\<Rightarrow>\n                       (length zs, poly_of_list (dropWhile ((=) 0) fs)) of\n           (n, g) \\<Rightarrow>\n             if g = 0 then (0, [])\n             else case factorize_int_last_nz_poly\n                        berlekamp_zassenhaus_factorization_algorithm g of\n                  (a, fs) \\<Rightarrow>\n                    if n = 0 then (a, fs)\n                    else (a, (monom 1 1, n - 1) # fs))) =\n    []", "by (cases \"a = 0\", auto simp add: Let_def factorize_int_last_nz_poly_def)"], ["proof (state)\nthis:\n  factors_of_int_poly p = []\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma factors_of_int_poly:\n  defines \"rp \\<equiv> ipoly :: int poly \\<Rightarrow> 'a :: {field_gcd,field_char_0} \\<Rightarrow> 'a\"\n  assumes \"factors_of_int_poly p = qs\"\n  shows \"\\<And> q. q \\<in> set qs \\<Longrightarrow> irreducible q \\<and> lead_coeff q > 0 \\<and> degree q \\<le> degree p \\<and> degree q \\<noteq> 0\"\n  \"p \\<noteq> 0 \\<Longrightarrow> rp p x = 0 \\<longleftrightarrow> (\\<exists> q \\<in> set qs. rp q x = 0)\"\n  \"p \\<noteq> 0 \\<Longrightarrow> rp p x = 0 \\<Longrightarrow> \\<exists>! q \\<in> set qs. rp q x = 0\"\n  \"distinct qs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>q.\n         q \\<in> set qs \\<Longrightarrow>\n         irreducible q \\<and>\n         0 < lead_coeff q \\<and>\n         degree q \\<le> degree p \\<and> degree q \\<noteq> 0) &&&\n     (p \\<noteq> 0 \\<Longrightarrow>\n      (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a)))) &&&\n    (\\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n     \\<Longrightarrow> \\<exists>!q.\n                          q \\<in> set qs \\<and> rp q x = (0::'a)) &&&\n    distinct qs", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "obtain c qis where factt: \"factorize_int_poly p = (c,qis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c qis.\n        factorize_int_poly p = (c, qis) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  factorize_int_poly p = (c, qis)\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "from assms[unfolded factors_of_int_poly_def factt]"], ["proof (chain)\npicking this:\n  rp \\<equiv> ipoly\n  map (abs_int_poly \\<circ> fst) (snd (c, qis)) = qs", "have qs: \"qs = map (abs_int_poly \\<circ> fst) (snd (c, qis))\""], ["proof (prove)\nusing this:\n  rp \\<equiv> ipoly\n  map (abs_int_poly \\<circ> fst) (snd (c, qis)) = qs\n\ngoal (1 subgoal):\n 1. qs = map (abs_int_poly \\<circ> fst) (snd (c, qis))", "by auto"], ["proof (state)\nthis:\n  qs = map (abs_int_poly \\<circ> fst) (snd (c, qis))\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "note fact = factorize_int_poly(1)[OF factt]"], ["proof (state)\nthis:\n  square_free_factorization p (c, qis)\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "note fact_mem = factorize_int_poly(2,3)[OF factt]"], ["proof (state)\nthis:\n  (?fi, ?i) \\<in> set qis \\<Longrightarrow> irreducible ?fi\n  (?fi, ?i) \\<in> set qis \\<Longrightarrow> degree ?fi \\<noteq> 0\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "have sqf: \"square_free_factorization p (c, qis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_free_factorization p (c, qis)", "by (rule fact(1))"], ["proof (state)\nthis:\n  square_free_factorization p (c, qis)\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "note sff = square_free_factorizationD[OF sqf]"], ["proof (state)\nthis:\n  p = Polynomial.smult c (\\<Prod>(a, i)\\<in>set qis. a ^ Suc i)\n  (?a, ?i) \\<in> set qis \\<Longrightarrow>\n  square_free ?a \\<and> degree ?a \\<noteq> 0\n  \\<lbrakk>(?a, ?i) \\<in> set qis; (?b, ?j) \\<in> set qis;\n   (?a, ?i) \\<noteq> (?b, ?j)\\<rbrakk>\n  \\<Longrightarrow> algebraic_semidom_class.coprime ?a ?b\n  p = 0 \\<Longrightarrow> c = 0 \\<and> qis = []\n  distinct qis\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "have sff': \"p = Polynomial.smult c (\\<Prod>(a, i)\\<leftarrow> qis. a ^ Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = Polynomial.smult c (\\<Prod>(a, i)\\<leftarrow>qis. a ^ Suc i)", "unfolding sff(1) prod.distinct_set_conv_list[OF sff(5)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial.smult c (\\<Prod>(a, i)\\<leftarrow>qis. a ^ Suc i) =\n    Polynomial.smult c (\\<Prod>(a, i)\\<leftarrow>qis. a ^ Suc i)", ".."], ["proof (state)\nthis:\n  p = Polynomial.smult c (\\<Prod>(a, i)\\<leftarrow>qis. a ^ Suc i)\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "{"], ["proof (state)\nthis:\n  p = Polynomial.smult c (\\<Prod>(a, i)\\<leftarrow>qis. a ^ Suc i)\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "fix q"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "assume q: \"q \\<in> set qs\""], ["proof (state)\nthis:\n  q \\<in> set qs\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "then"], ["proof (chain)\npicking this:\n  q \\<in> set qs", "obtain r i where qi: \"(r,i) \\<in> set qis\" and qr: \"q = abs_int_poly r\""], ["proof (prove)\nusing this:\n  q \\<in> set qs\n\ngoal (1 subgoal):\n 1. (\\<And>r i.\n        \\<lbrakk>(r, i) \\<in> set qis; q = abs_int_poly r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding qs"], ["proof (prove)\nusing this:\n  q \\<in> set (map (abs_int_poly \\<circ> fst) (snd (c, qis)))\n\ngoal (1 subgoal):\n 1. (\\<And>r i.\n        \\<lbrakk>(r, i) \\<in> set qis; q = abs_int_poly r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (r, i) \\<in> set qis\n  q = abs_int_poly r\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "from split_list[OF qi]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs. qis = ys @ (r, i) # zs", "obtain qis1 qis2 where qis: \"qis = qis1 @ (r,i) # qis2\""], ["proof (prove)\nusing this:\n  \\<exists>ys zs. qis = ys @ (r, i) # zs\n\ngoal (1 subgoal):\n 1. (\\<And>qis1 qis2.\n        qis = qis1 @ (r, i) # qis2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  qis = qis1 @ (r, i) # qis2\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "have dvd: \"r dvd p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r dvd p", "unfolding sff' qis dvd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       Polynomial.smult c\n        (\\<Prod>(a, i)\\<leftarrow>qis1 @ (r, i) # qis2. a ^ Suc i) =\n       r * k", "by (intro exI[of _ \"smult c (r ^ i * (\\<Prod>(a, i)\\<leftarrow>qis1 @  qis2. a ^ Suc i))\"], auto)"], ["proof (state)\nthis:\n  r dvd p\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "from fact_mem[OF qi]"], ["proof (chain)\npicking this:\n  irreducible r\n  degree r \\<noteq> 0", "have r0: \"r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  irreducible r\n  degree r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. r \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  r \\<noteq> 0\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "from qi factt"], ["proof (chain)\npicking this:\n  (r, i) \\<in> set qis\n  factorize_int_poly p = (c, qis)", "have p: \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (r, i) \\<in> set qis\n  factorize_int_poly p = (c, qis)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by (cases p, auto)"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "with dvd"], ["proof (chain)\npicking this:\n  r dvd p\n  p \\<noteq> 0", "have deg: \"degree r \\<le> degree p\""], ["proof (prove)\nusing this:\n  r dvd p\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree r \\<le> degree p", "by (metis dvd_imp_degree_le)"], ["proof (state)\nthis:\n  degree r \\<le> degree p\n\ngoal (4 subgoals):\n 1. \\<And>q.\n       q \\<in> set qs \\<Longrightarrow>\n       irreducible q \\<and>\n       0 < lead_coeff q \\<and>\n       degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 3. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 4. distinct qs", "with fact_mem[OF qi] r0"], ["proof (chain)\npicking this:\n  irreducible r\n  degree r \\<noteq> 0\n  r \\<noteq> 0\n  degree r \\<le> degree p", "show \"irreducible q \\<and> lead_coeff q > 0 \\<and> degree q \\<le> degree p \\<and> degree q \\<noteq> 0\""], ["proof (prove)\nusing this:\n  irreducible r\n  degree r \\<noteq> 0\n  r \\<noteq> 0\n  degree r \\<le> degree p\n\ngoal (1 subgoal):\n 1. irreducible q \\<and>\n    0 < lead_coeff q \\<and>\n    degree q \\<le> degree p \\<and> degree q \\<noteq> 0", "unfolding qr lead_coeff_abs_int_poly"], ["proof (prove)\nusing this:\n  irreducible r\n  degree r \\<noteq> 0\n  r \\<noteq> 0\n  degree r \\<le> degree p\n\ngoal (1 subgoal):\n 1. irreducible (abs_int_poly r) \\<and>\n    0 < \\<bar>lead_coeff r\\<bar> \\<and>\n    degree (abs_int_poly r) \\<le> degree p \\<and>\n    degree (abs_int_poly r) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  irreducible q \\<and>\n  0 < lead_coeff q \\<and> degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n\ngoal (3 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 3. distinct qs", "}"], ["proof (state)\nthis:\n  ?q2 \\<in> set qs \\<Longrightarrow>\n  irreducible ?q2 \\<and>\n  0 < lead_coeff ?q2 \\<and>\n  degree ?q2 \\<le> degree p \\<and> degree ?q2 \\<noteq> 0\n\ngoal (3 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 3. distinct qs", "note * = this"], ["proof (state)\nthis:\n  ?q2 \\<in> set qs \\<Longrightarrow>\n  irreducible ?q2 \\<and>\n  0 < lead_coeff ?q2 \\<and>\n  degree ?q2 \\<le> degree p \\<and> degree ?q2 \\<noteq> 0\n\ngoal (3 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n 3. distinct qs", "show \"distinct qs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct qs", "unfolding distinct_conv_nth"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<length qs.\n       \\<forall>j<length qs.\n          i \\<noteq> j \\<longrightarrow> qs ! i \\<noteq> qs ! j", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "assume \"i < length qs\" \"j < length qs\" and diff: \"i \\<noteq> j\""], ["proof (state)\nthis:\n  i < length qs\n  j < length qs\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "hence ij: \"i < length qis\" \"j < length qis\"\n      and id: \"qs ! i = abs_int_poly (fst (qis ! i))\" \"qs ! j = abs_int_poly (fst (qis ! j))\""], ["proof (prove)\nusing this:\n  i < length qs\n  j < length qs\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (i < length qis &&& j < length qis) &&&\n    qs ! i = abs_int_poly (fst (qis ! i)) &&&\n    qs ! j = abs_int_poly (fst (qis ! j))", "unfolding qs"], ["proof (prove)\nusing this:\n  i < length (map (abs_int_poly \\<circ> fst) (snd (c, qis)))\n  j < length (map (abs_int_poly \\<circ> fst) (snd (c, qis)))\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (i < length qis &&& j < length qis) &&&\n    map (abs_int_poly \\<circ> fst) (snd (c, qis)) ! i =\n    abs_int_poly (fst (qis ! i)) &&&\n    map (abs_int_poly \\<circ> fst) (snd (c, qis)) ! j =\n    abs_int_poly (fst (qis ! j))", "by auto"], ["proof (state)\nthis:\n  i < length qis\n  j < length qis\n  qs ! i = abs_int_poly (fst (qis ! i))\n  qs ! j = abs_int_poly (fst (qis ! j))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "obtain qi I where qi: \"qis ! i = (qi, I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>qi I.\n        qis ! i = (qi, I) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  qis ! i = (qi, I)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "obtain qj J where qj: \"qis ! j = (qj, J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>qj J.\n        qis ! j = (qj, J) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  qis ! j = (qj, J)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "from sff(5)[unfolded distinct_conv_nth, rule_format, OF ij diff] qi qj"], ["proof (chain)\npicking this:\n  qis ! i \\<noteq> qis ! j\n  qis ! i = (qi, I)\n  qis ! j = (qj, J)", "have diff: \"(qi, I) \\<noteq> (qj, J)\""], ["proof (prove)\nusing this:\n  qis ! i \\<noteq> qis ! j\n  qis ! i = (qi, I)\n  qis ! j = (qj, J)\n\ngoal (1 subgoal):\n 1. (qi, I) \\<noteq> (qj, J)", "by auto"], ["proof (state)\nthis:\n  (qi, I) \\<noteq> (qj, J)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "from ij qi qj"], ["proof (chain)\npicking this:\n  i < length qis\n  j < length qis\n  qis ! i = (qi, I)\n  qis ! j = (qj, J)", "have \"(qi, I) \\<in> set qis\" \"(qj, J) \\<in> set qis\""], ["proof (prove)\nusing this:\n  i < length qis\n  j < length qis\n  qis ! i = (qi, I)\n  qis ! j = (qj, J)\n\ngoal (1 subgoal):\n 1. (qi, I) \\<in> set qis &&& (qj, J) \\<in> set qis", "unfolding set_conv_nth"], ["proof (prove)\nusing this:\n  i < length qis\n  j < length qis\n  qis ! i = (qi, I)\n  qis ! j = (qj, J)\n\ngoal (1 subgoal):\n 1. (qi, I) \\<in> {qis ! i |i. i < length qis} &&&\n    (qj, J) \\<in> {qis ! i |i. i < length qis}", "by force+"], ["proof (state)\nthis:\n  (qi, I) \\<in> set qis\n  (qj, J) \\<in> set qis\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "from sff(3)[OF this diff] sff(2) this"], ["proof (chain)\npicking this:\n  algebraic_semidom_class.coprime qi qj\n  (?a, ?i) \\<in> set qis \\<Longrightarrow>\n  square_free ?a \\<and> degree ?a \\<noteq> 0\n  (qi, I) \\<in> set qis\n  (qj, J) \\<in> set qis", "have cop: \"coprime qi qj\" \"degree qi \\<noteq> 0\" \"degree qj \\<noteq> 0\""], ["proof (prove)\nusing this:\n  algebraic_semidom_class.coprime qi qj\n  (?a, ?i) \\<in> set qis \\<Longrightarrow>\n  square_free ?a \\<and> degree ?a \\<noteq> 0\n  (qi, I) \\<in> set qis\n  (qj, J) \\<in> set qis\n\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime qi qj &&&\n    degree qi \\<noteq> 0 &&& degree qj \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  comm_monoid_mult_class.coprime qi qj\n  degree qi \\<noteq> 0\n  degree qj \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "note i = cf_pos_poly_main[of qi, unfolded smult_prod monom_0]"], ["proof (state)\nthis:\n  [:sgn (lead_coeff qi) * content qi:] * cf_pos_poly qi = qi\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "note j = cf_pos_poly_main[of qj, unfolded smult_prod monom_0]"], ["proof (state)\nthis:\n  [:sgn (lead_coeff qj) * content qj:] * cf_pos_poly qj = qj\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "from cop(2) i"], ["proof (chain)\npicking this:\n  degree qi \\<noteq> 0\n  [:sgn (lead_coeff qi) * content qi:] * cf_pos_poly qi = qi", "have deg: \"degree (qs ! i) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  degree qi \\<noteq> 0\n  [:sgn (lead_coeff qi) * content qi:] * cf_pos_poly qi = qi\n\ngoal (1 subgoal):\n 1. degree (qs ! i) \\<noteq> 0", "by (auto simp: id qi)"], ["proof (state)\nthis:\n  degree (qs ! i) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "have cop: \"coprime (qs ! i) (qs ! j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime (qs ! i) (qs ! j)", "unfolding id qi qj fst_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime (abs_int_poly qi) (abs_int_poly qj)", "apply (rule coprime_prod[of \"[:sgn (lead_coeff qi):]\" \"[:sgn (lead_coeff qj):]\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. [:sgn (lead_coeff qi):] \\<noteq> 0\n 2. [:sgn (lead_coeff qj):] \\<noteq> 0\n 3. comm_monoid_mult_class.coprime\n     ([:sgn (lead_coeff qi):] * abs_int_poly qi)\n     ([:sgn (lead_coeff qj):] * abs_int_poly qj)", "using cop"], ["proof (prove)\nusing this:\n  comm_monoid_mult_class.coprime qi qj\n  degree qi \\<noteq> 0\n  degree qj \\<noteq> 0\n\ngoal (3 subgoals):\n 1. [:sgn (lead_coeff qi):] \\<noteq> 0\n 2. [:sgn (lead_coeff qj):] \\<noteq> 0\n 3. comm_monoid_mult_class.coprime\n     ([:sgn (lead_coeff qi):] * abs_int_poly qi)\n     ([:sgn (lead_coeff qj):] * abs_int_poly qj)", "unfolding i j"], ["proof (prove)\nusing this:\n  comm_monoid_mult_class.coprime qi qj\n  degree qi \\<noteq> 0\n  degree qj \\<noteq> 0\n\ngoal (3 subgoals):\n 1. [:sgn (lead_coeff qi):] \\<noteq> 0\n 2. [:sgn (lead_coeff qj):] \\<noteq> 0\n 3. comm_monoid_mult_class.coprime\n     ([:sgn (lead_coeff qi):] * abs_int_poly qi)\n     ([:sgn (lead_coeff qj):] * abs_int_poly qj)", "by (auto simp: sgn_eq_0_iff)"], ["proof (state)\nthis:\n  comm_monoid_mult_class.coprime (qs ! i) (qs ! j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length qs; j < length qs; i \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> qs ! i \\<noteq> qs ! j", "show \"qs ! i \\<noteq> qs ! j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qs ! i \\<noteq> qs ! j", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. qs ! i = qs ! j \\<Longrightarrow> False", "assume id: \"qs ! i = qs ! j\""], ["proof (state)\nthis:\n  qs ! i = qs ! j\n\ngoal (1 subgoal):\n 1. qs ! i = qs ! j \\<Longrightarrow> False", "have \"degree (gcd (qs ! i) (qs ! j)) = degree (qs ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (gcd (qs ! i) (qs ! j)) = degree (qs ! i)", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (gcd (qs ! j) (qs ! j)) = degree (qs ! j)", "by simp"], ["proof (state)\nthis:\n  degree (gcd (qs ! i) (qs ! j)) = degree (qs ! i)\n\ngoal (1 subgoal):\n 1. qs ! i = qs ! j \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  degree (gcd (qs ! i) (qs ! j)) = degree (qs ! i)\n\ngoal (1 subgoal):\n 1. qs ! i = qs ! j \\<Longrightarrow> False", "have \"\\<dots> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (qs ! i) \\<noteq> 0", "using deg"], ["proof (prove)\nusing this:\n  degree (qs ! i) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree (qs ! i) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  degree (qs ! i) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. qs ! i = qs ! j \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  degree (gcd (qs ! i) (qs ! j)) \\<noteq> 0", "show False"], ["proof (prove)\nusing this:\n  degree (gcd (qs ! i) (qs ! j)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "using cop"], ["proof (prove)\nusing this:\n  degree (gcd (qs ! i) (qs ! j)) \\<noteq> 0\n  comm_monoid_mult_class.coprime (qs ! i) (qs ! j)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  qs ! i \\<noteq> qs ! j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  distinct qs\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "assume p: \"p \\<noteq> 0\""], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "from fact(1) p"], ["proof (chain)\npicking this:\n  square_free_factorization p (c, qis)\n  p \\<noteq> 0", "have c: \"c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  square_free_factorization p (c, qis)\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0", "using sff(1)"], ["proof (prove)\nusing this:\n  square_free_factorization p (c, qis)\n  p \\<noteq> 0\n  p = Polynomial.smult c (\\<Prod>(a, i)\\<in>set qis. a ^ Suc i)\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "let ?r = \"of_int :: int \\<Rightarrow> 'a\""], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "let ?rp = \"map_poly ?r\""], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "have rp: \"\\<And> x p. rp p x = 0 \\<longleftrightarrow> poly (?rp p) x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x p. (rp p x = (0::'a)) = (ipoly p x = (0::'a))", "unfolding rp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x p. (ipoly p x = (0::'a)) = (ipoly p x = (0::'a))", ".."], ["proof (state)\nthis:\n  (rp ?p ?x = (0::'a)) = (ipoly ?p ?x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "have \"rp p x = 0 \\<longleftrightarrow> rp (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rp p x = (0::'a)) =\n    (rp (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a))", "unfolding sff'(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rp (Polynomial.smult c (\\<Prod>(a, i)\\<leftarrow>qis. a ^ Suc i)) x =\n     (0::'a)) =\n    (rp (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a))", "unfolding rp hom_distribs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly\n      (Polynomial.smult (of_int c)\n        (of_int_poly (\\<Prod>(a, i)\\<leftarrow>qis. a ^ Suc i)))\n      x =\n     (0::'a)) =\n    (ipoly (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a))", "using c"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (poly\n      (Polynomial.smult (of_int c)\n        (of_int_poly (\\<Prod>(a, i)\\<leftarrow>qis. a ^ Suc i)))\n      x =\n     (0::'a)) =\n    (ipoly (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a))", "by simp"], ["proof (state)\nthis:\n  (rp p x = (0::'a)) =\n  (rp (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "also"], ["proof (state)\nthis:\n  (rp p x = (0::'a)) =\n  (rp (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "have \"\\<dots> = (\\<exists> (q,i) \\<in>set qis. poly (?rp (q ^ Suc i)) x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rp (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a)) =\n    (\\<exists>(q, i)\\<in>set qis. ipoly (q ^ Suc i) x = (0::'a))", "unfolding qs rp of_int_poly_hom.hom_prod_list poly_prod_list_zero_iff set_map"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>p\\<in>of_int_poly ` (\\<lambda>(x, y). x ^ Suc y) ` set qis.\n        poly p x = (0::'a)) =\n    (\\<exists>(q, i)\\<in>set qis. ipoly (q ^ Suc i) x = (0::'a))", "by fastforce"], ["proof (state)\nthis:\n  (rp (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a)) =\n  (\\<exists>(q, i)\\<in>set qis. ipoly (q ^ Suc i) x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "also"], ["proof (state)\nthis:\n  (rp (\\<Prod>(x, y)\\<leftarrow>qis. x ^ Suc y) x = (0::'a)) =\n  (\\<exists>(q, i)\\<in>set qis. ipoly (q ^ Suc i) x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "have \"\\<dots> = (\\<exists> (q,i) \\<in>set qis. poly (?rp q) x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>(q, i)\\<in>set qis. ipoly (q ^ Suc i) x = (0::'a)) =\n    (\\<exists>(q, i)\\<in>set qis. ipoly q x = (0::'a))", "unfolding of_int_poly_hom.hom_power poly_power_zero_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>(q, i)\\<in>set qis.\n        Suc i \\<noteq> 0 \\<and> ipoly q x = (0::'a)) =\n    (\\<exists>(q, i)\\<in>set qis. ipoly q x = (0::'a))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>(q, i)\\<in>set qis. ipoly (q ^ Suc i) x = (0::'a)) =\n  (\\<exists>(q, i)\\<in>set qis. ipoly q x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<exists>(q, i)\\<in>set qis. ipoly (q ^ Suc i) x = (0::'a)) =\n  (\\<exists>(q, i)\\<in>set qis. ipoly q x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "have \"\\<dots> = (\\<exists> q \\<in> fst ` set qis. poly (?rp q) x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>(q, i)\\<in>set qis. ipoly q x = (0::'a)) =\n    (\\<exists>q\\<in>fst ` set qis. ipoly q x = (0::'a))", "by force"], ["proof (state)\nthis:\n  (\\<exists>(q, i)\\<in>set qis. ipoly q x = (0::'a)) =\n  (\\<exists>q\\<in>fst ` set qis. ipoly q x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<exists>(q, i)\\<in>set qis. ipoly q x = (0::'a)) =\n  (\\<exists>q\\<in>fst ` set qis. ipoly q x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "have \"\\<dots> = (\\<exists> q \\<in> set qs. rp q x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>q\\<in>fst ` set qis. ipoly q x = (0::'a)) =\n    (\\<exists>q\\<in>set qs. rp q x = (0::'a))", "unfolding rp qs snd_conv o_def bex_simps set_map"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>xa\\<in>set qis. ipoly (fst xa) x = (0::'a)) =\n    (\\<exists>xa\\<in>set qis. ipoly (abs_int_poly (fst xa)) x = (0::'a))", "by simp"], ["proof (state)\nthis:\n  (\\<exists>q\\<in>fst ` set qis. ipoly q x = (0::'a)) =\n  (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n\ngoal (2 subgoals):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n 2. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))", "show iff: \"rp p x = 0 \\<longleftrightarrow> (\\<exists> q \\<in> set qs. rp q x = 0)\""], ["proof (prove)\nusing this:\n  (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n\ngoal (1 subgoal):\n 1. (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))", "by auto"], ["proof (state)\nthis:\n  (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "assume \"rp p x = 0\""], ["proof (state)\nthis:\n  rp p x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "with iff"], ["proof (chain)\npicking this:\n  (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n  rp p x = (0::'a)", "obtain q where q: \"q \\<in> set qs\" and rtq: \"rp q x = 0\""], ["proof (prove)\nusing this:\n  (rp p x = (0::'a)) = (\\<exists>q\\<in>set qs. rp q x = (0::'a))\n  rp p x = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> set qs; rp q x = (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<in> set qs\n  rp q x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "then"], ["proof (chain)\npicking this:\n  q \\<in> set qs\n  rp q x = (0::'a)", "obtain i q' where qi: \"(q',i) \\<in> set qis\" and qq': \"q = abs_int_poly q'\""], ["proof (prove)\nusing this:\n  q \\<in> set qs\n  rp q x = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>q' i.\n        \\<lbrakk>(q', i) \\<in> set qis; q = abs_int_poly q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding qs"], ["proof (prove)\nusing this:\n  q \\<in> set (map (abs_int_poly \\<circ> fst) (snd (c, qis)))\n  rp q x = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>q' i.\n        \\<lbrakk>(q', i) \\<in> set qis; q = abs_int_poly q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (q', i) \\<in> set qis\n  q = abs_int_poly q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<noteq> 0; rp p x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "show \"\\<exists>! q \\<in> set qs. rp q x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)", "proof (intro ex1I, intro conjI, rule q, rule rtq, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "assume \"r \\<in> set qs\" and rtr: \"rp r x = 0\""], ["proof (state)\nthis:\n  r \\<in> set qs\n  rp r x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "then"], ["proof (chain)\npicking this:\n  r \\<in> set qs\n  rp r x = (0::'a)", "obtain j r' where rj: \"(r',j) \\<in> set qis\" and rr': \"r = abs_int_poly r'\""], ["proof (prove)\nusing this:\n  r \\<in> set qs\n  rp r x = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>r' j.\n        \\<lbrakk>(r', j) \\<in> set qis; r = abs_int_poly r'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding qs"], ["proof (prove)\nusing this:\n  r \\<in> set (map (abs_int_poly \\<circ> fst) (snd (c, qis)))\n  rp r x = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>r' j.\n        \\<lbrakk>(r', j) \\<in> set qis; r = abs_int_poly r'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (r', j) \\<in> set qis\n  r = abs_int_poly r'\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "from rtr rtq"], ["proof (chain)\npicking this:\n  rp r x = (0::'a)\n  rp q x = (0::'a)", "have rtr: \"rp r' x = 0\" and rtq: \"rp q' x = 0\""], ["proof (prove)\nusing this:\n  rp r x = (0::'a)\n  rp q x = (0::'a)\n\ngoal (1 subgoal):\n 1. rp r' x = (0::'a) &&& rp q' x = (0::'a)", "unfolding rp rr' qq'"], ["proof (prove)\nusing this:\n  ipoly (abs_int_poly r') x = (0::'a)\n  ipoly (abs_int_poly q') x = (0::'a)\n\ngoal (1 subgoal):\n 1. ipoly r' x = (0::'a) &&& ipoly q' x = (0::'a)", "by auto"], ["proof (state)\nthis:\n  rp r' x = (0::'a)\n  rp q' x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "from rtr rtq"], ["proof (chain)\npicking this:\n  rp r' x = (0::'a)\n  rp q' x = (0::'a)", "have \"[:-x,1:] dvd ?rp q'\" \"[:-x,1:] dvd ?rp r'\""], ["proof (prove)\nusing this:\n  rp r' x = (0::'a)\n  rp q' x = (0::'a)\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd of_int_poly q' &&& [:- x, 1::'a:] dvd of_int_poly r'", "unfolding rp"], ["proof (prove)\nusing this:\n  ipoly r' x = (0::'a)\n  ipoly q' x = (0::'a)\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd of_int_poly q' &&& [:- x, 1::'a:] dvd of_int_poly r'", "by (auto simp: poly_eq_0_iff_dvd)"], ["proof (state)\nthis:\n  [:- x, 1::'a:] dvd of_int_poly q'\n  [:- x, 1::'a:] dvd of_int_poly r'\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "hence \"[:-x,1:] dvd gcd (?rp q') (?rp r')\""], ["proof (prove)\nusing this:\n  [:- x, 1::'a:] dvd of_int_poly q'\n  [:- x, 1::'a:] dvd of_int_poly r'\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd gcd (of_int_poly q') (of_int_poly r')", "by simp"], ["proof (state)\nthis:\n  [:- x, 1::'a:] dvd gcd (of_int_poly q') (of_int_poly r')\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "hence \"gcd (?rp q') (?rp r') = 0 \\<or> degree (gcd (?rp q') (?rp r')) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  [:- x, 1::'a:] dvd gcd (of_int_poly q') (of_int_poly r')\n\ngoal (1 subgoal):\n 1. gcd (of_int_poly q') (of_int_poly r') = 0 \\<or>\n    degree (gcd (of_int_poly q') (of_int_poly r')) \\<noteq> 0", "by (metis is_unit_gcd_iff is_unit_iff_degree is_unit_pCons_iff one_poly_eq_simps(1))"], ["proof (state)\nthis:\n  gcd (of_int_poly q') (of_int_poly r') = 0 \\<or>\n  degree (gcd (of_int_poly q') (of_int_poly r')) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "hence \"gcd q' r' = 0 \\<or> degree (gcd q' r') \\<noteq> 0\""], ["proof (prove)\nusing this:\n  gcd (of_int_poly q') (of_int_poly r') = 0 \\<or>\n  degree (gcd (of_int_poly q') (of_int_poly r')) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. gcd q' r' = 0 \\<or> degree (gcd q' r') \\<noteq> 0", "unfolding gcd_eq_0_iff degree_of_gcd[of q' r',symmetric]"], ["proof (prove)\nusing this:\n  of_int_poly q' = 0 \\<and> of_int_poly r' = 0 \\<or>\n  degree (gcd q' r') \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q' = 0 \\<and> r' = 0 \\<or> degree (gcd q' r') \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  gcd q' r' = 0 \\<or> degree (gcd q' r') \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "hence \"\\<not> coprime q' r'\""], ["proof (prove)\nusing this:\n  gcd q' r' = 0 \\<or> degree (gcd q' r') \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> comm_monoid_mult_class.coprime q' r'", "by auto"], ["proof (state)\nthis:\n  \\<not> comm_monoid_mult_class.coprime q' r'\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "with sff(3)[OF qi rj]"], ["proof (chain)\npicking this:\n  (q', i) \\<noteq> (r', j) \\<Longrightarrow>\n  algebraic_semidom_class.coprime q' r'\n  \\<not> comm_monoid_mult_class.coprime q' r'", "have \"q' = r'\""], ["proof (prove)\nusing this:\n  (q', i) \\<noteq> (r', j) \\<Longrightarrow>\n  algebraic_semidom_class.coprime q' r'\n  \\<not> comm_monoid_mult_class.coprime q' r'\n\ngoal (1 subgoal):\n 1. q' = r'", "by auto"], ["proof (state)\nthis:\n  q' = r'\n\ngoal (1 subgoal):\n 1. \\<And>qa.\n       \\<lbrakk>qa \\<in> set qs; rp qa x = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> qa = q", "thus \"r = q\""], ["proof (prove)\nusing this:\n  q' = r'\n\ngoal (1 subgoal):\n 1. r = q", "unfolding rr' qq'"], ["proof (prove)\nusing this:\n  q' = r'\n\ngoal (1 subgoal):\n 1. abs_int_poly r' = abs_int_poly q'", "by simp"], ["proof (state)\nthis:\n  r = q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!q. q \\<in> set qs \\<and> rp q x = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma factors_int_poly_represents:\n  fixes x :: \"'a :: {field_char_0,field_gcd}\"\n  assumes p: \"p represents x\"\n  shows \"\\<exists> q \\<in> set (factors_of_int_poly p).\n    q represents x \\<and> irreducible q \\<and> lead_coeff q > 0  \\<and> degree q \\<le> degree p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>set (factors_of_int_poly p).\n       q represents x \\<and>\n       irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>set (factors_of_int_poly p).\n       q represents x \\<and>\n       irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree p", "from representsD[OF p]"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  ipoly p x = (0::'a)", "have p: \"p \\<noteq> 0\" and rt: \"ipoly p x = 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  ipoly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 &&& ipoly p x = (0::'a)", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n  ipoly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>set (factors_of_int_poly p).\n       q represents x \\<and>\n       irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree p", "note fact = factors_of_int_poly[OF refl]"], ["proof (state)\nthis:\n  ?q \\<in> set (factors_of_int_poly ?p) \\<Longrightarrow>\n  irreducible ?q \\<and>\n  0 < lead_coeff ?q \\<and>\n  degree ?q \\<le> degree ?p \\<and> degree ?q \\<noteq> 0\n  ?p \\<noteq> 0 \\<Longrightarrow>\n  (ipoly ?p ?x = (0::?'a)) =\n  (\\<exists>q\\<in>set (factors_of_int_poly ?p). ipoly q ?x = (0::?'a))\n  \\<lbrakk>?p \\<noteq> 0; ipoly ?p ?x = (0::?'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!q.\n                       q \\<in> set (factors_of_int_poly ?p) \\<and>\n                       ipoly q ?x = (0::?'a)\n  distinct (factors_of_int_poly ?p)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>set (factors_of_int_poly p).\n       q represents x \\<and>\n       irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree p", "from fact(2)[OF p, of x] rt"], ["proof (chain)\npicking this:\n  (ipoly p x = (0::'a)) =\n  (\\<exists>q\\<in>set (factors_of_int_poly p). ipoly q x = (0::'a))\n  ipoly p x = (0::'a)", "obtain q where q: \"q \\<in> set (factors_of_int_poly p)\" and\n    rt: \"ipoly q x = 0\""], ["proof (prove)\nusing this:\n  (ipoly p x = (0::'a)) =\n  (\\<exists>q\\<in>set (factors_of_int_poly p). ipoly q x = (0::'a))\n  ipoly p x = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> set (factors_of_int_poly p);\n         ipoly q x = (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<in> set (factors_of_int_poly p)\n  ipoly q x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>set (factors_of_int_poly p).\n       q represents x \\<and>\n       irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree p", "from fact(1)[OF q] rt"], ["proof (chain)\npicking this:\n  irreducible q \\<and>\n  0 < lead_coeff q \\<and> degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n  ipoly q x = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  irreducible q \\<and>\n  0 < lead_coeff q \\<and> degree q \\<le> degree p \\<and> degree q \\<noteq> 0\n  ipoly q x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>set (factors_of_int_poly p).\n       q represents x \\<and>\n       irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree p", "by (intro bexI[OF _ q], auto simp: represents_def irreducible_def)"], ["proof (state)\nthis:\n  \\<exists>q\\<in>set (factors_of_int_poly p).\n     q represents x \\<and>\n     irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree p\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary irreducible_represents_imp_degree:\n  fixes x :: \"'a :: {field_char_0,field_gcd}\"\n  assumes \"irreducible f\" and \"f represents x\" and \"g represents x\"\n  shows \"degree f \\<le> degree g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "from factors_of_int_poly(1)[OF refl, of _ g] factors_of_int_poly(3)[OF refl, of g x]\n     assms(3)"], ["proof (chain)\npicking this:\n  ?q \\<in> set (factors_of_int_poly g) \\<Longrightarrow>\n  irreducible ?q \\<and>\n  0 < lead_coeff ?q \\<and>\n  degree ?q \\<le> degree g \\<and> degree ?q \\<noteq> 0\n  \\<lbrakk>g \\<noteq> 0; ipoly g x = (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!q.\n                       q \\<in> set (factors_of_int_poly g) \\<and>\n                       ipoly q x = (0::'a)\n  g represents x", "obtain h where *: \"h represents x\" \"degree h \\<le> degree g\" \"irreducible h\""], ["proof (prove)\nusing this:\n  ?q \\<in> set (factors_of_int_poly g) \\<Longrightarrow>\n  irreducible ?q \\<and>\n  0 < lead_coeff ?q \\<and>\n  degree ?q \\<le> degree g \\<and> degree ?q \\<noteq> 0\n  \\<lbrakk>g \\<noteq> 0; ipoly g x = (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!q.\n                       q \\<in> set (factors_of_int_poly g) \\<and>\n                       ipoly q x = (0::'a)\n  g represents x\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h represents x; degree h \\<le> degree g;\n         irreducible h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  h represents x\n  degree h \\<le> degree g\n  irreducible h\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "let ?af = \"abs_int_poly f\""], ["proof (state)\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "let ?ah = \"abs_int_poly h\""], ["proof (state)\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "from assms"], ["proof (chain)\npicking this:\n  irreducible f\n  f represents x\n  g represents x", "have af: \"irreducible ?af\" \"?af represents x\" \"lead_coeff ?af > 0\""], ["proof (prove)\nusing this:\n  irreducible f\n  f represents x\n  g represents x\n\ngoal (1 subgoal):\n 1. irreducible (abs_int_poly f) &&&\n    abs_int_poly f represents x &&& 0 < lead_coeff (abs_int_poly f)", "by fastforce+"], ["proof (state)\nthis:\n  irreducible (abs_int_poly f)\n  abs_int_poly f represents x\n  0 < lead_coeff (abs_int_poly f)\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "from *"], ["proof (chain)\npicking this:\n  h represents x\n  degree h \\<le> degree g\n  irreducible h", "have ah: \"irreducible ?ah\" \"?ah represents x\" \"lead_coeff ?ah > 0\""], ["proof (prove)\nusing this:\n  h represents x\n  degree h \\<le> degree g\n  irreducible h\n\ngoal (1 subgoal):\n 1. irreducible (abs_int_poly h) &&&\n    abs_int_poly h represents x &&& 0 < lead_coeff (abs_int_poly h)", "by fastforce+"], ["proof (state)\nthis:\n  irreducible (abs_int_poly h)\n  abs_int_poly h represents x\n  0 < lead_coeff (abs_int_poly h)\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "from algebraic_imp_represents_unique[of x] af ah"], ["proof (chain)\npicking this:\n  algebraic x \\<Longrightarrow>\n  \\<exists>!p. p represents x \\<and> irreducible p \\<and> 0 < lead_coeff p\n  irreducible (abs_int_poly f)\n  abs_int_poly f represents x\n  0 < lead_coeff (abs_int_poly f)\n  irreducible (abs_int_poly h)\n  abs_int_poly h represents x\n  0 < lead_coeff (abs_int_poly h)", "have id: \"?af = ?ah\""], ["proof (prove)\nusing this:\n  algebraic x \\<Longrightarrow>\n  \\<exists>!p. p represents x \\<and> irreducible p \\<and> 0 < lead_coeff p\n  irreducible (abs_int_poly f)\n  abs_int_poly f represents x\n  0 < lead_coeff (abs_int_poly f)\n  irreducible (abs_int_poly h)\n  abs_int_poly h represents x\n  0 < lead_coeff (abs_int_poly h)\n\ngoal (1 subgoal):\n 1. abs_int_poly f = abs_int_poly h", "unfolding algebraic_iff_represents"], ["proof (prove)\nusing this:\n  \\<exists>p. p represents x \\<Longrightarrow>\n  \\<exists>!p. p represents x \\<and> irreducible p \\<and> 0 < lead_coeff p\n  irreducible (abs_int_poly f)\n  abs_int_poly f represents x\n  0 < lead_coeff (abs_int_poly f)\n  irreducible (abs_int_poly h)\n  abs_int_poly h represents x\n  0 < lead_coeff (abs_int_poly h)\n\ngoal (1 subgoal):\n 1. abs_int_poly f = abs_int_poly h", "by blast"], ["proof (state)\nthis:\n  abs_int_poly f = abs_int_poly h\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "using arg_cong[OF id, of degree] \\<open>degree h \\<le> degree g\\<close>"], ["proof (prove)\nusing this:\n  degree (abs_int_poly f) = degree (abs_int_poly h)\n  degree h \\<le> degree g\n\ngoal (1 subgoal):\n 1. degree f \\<le> degree g", "by simp"], ["proof (state)\nthis:\n  degree f \\<le> degree g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma irreducible_preservation:\n  fixes x :: \"'a :: {field_char_0,field_gcd}\"\n  assumes irr: \"irreducible p\"\n  and x: \"p represents x\"\n  and y: \"q represents y\"\n  and deg: \"degree p \\<ge> degree q\"\n  and f: \"\\<And> q. q represents y \\<Longrightarrow> (f q) represents x \\<and> degree (f q) \\<le> degree q\"\n  and pr: \"primitive q\"\n  shows \"irreducible q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible q", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "define pp where \"pp = abs_int_poly p\""], ["proof (state)\nthis:\n  pp = abs_int_poly p\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "have dp: \"degree p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0", "using x"], ["proof (prove)\nusing this:\n  p represents x\n\ngoal (1 subgoal):\n 1. degree p \\<noteq> 0", "by (rule represents_degree)"], ["proof (state)\nthis:\n  degree p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "have dq: \"degree q \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree q \\<noteq> 0", "using y"], ["proof (prove)\nusing this:\n  q represents y\n\ngoal (1 subgoal):\n 1. degree q \\<noteq> 0", "by (rule represents_degree)"], ["proof (state)\nthis:\n  degree q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from dp"], ["proof (chain)\npicking this:\n  degree p \\<noteq> 0", "have p0: \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  degree p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from x deg irr p0"], ["proof (chain)\npicking this:\n  p represents x\n  degree q \\<le> degree p\n  irreducible p\n  p \\<noteq> 0", "have irr: \"irreducible pp\" and x: \"pp represents x\" and\n    deg: \"degree pp \\<ge> degree q\" and cf_pos: \"lead_coeff pp > 0\""], ["proof (prove)\nusing this:\n  p represents x\n  degree q \\<le> degree p\n  irreducible p\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (irreducible pp &&& pp represents x) &&&\n    degree q \\<le> degree pp &&& 0 < lead_coeff pp", "unfolding pp_def lead_coeff_abs_int_poly"], ["proof (prove)\nusing this:\n  p represents x\n  degree q \\<le> degree p\n  irreducible p\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (irreducible (abs_int_poly p) &&& abs_int_poly p represents x) &&&\n    degree q \\<le> degree (abs_int_poly p) &&& 0 < \\<bar>lead_coeff p\\<bar>", "by (auto intro!: representsI)"], ["proof (state)\nthis:\n  irreducible pp\n  pp represents x\n  degree q \\<le> degree pp\n  0 < lead_coeff pp\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from x"], ["proof (chain)\npicking this:\n  pp represents x", "have ax: \"algebraic x\""], ["proof (prove)\nusing this:\n  pp represents x\n\ngoal (1 subgoal):\n 1. algebraic x", "unfolding algebraic_altdef_ipoly represents_def"], ["proof (prove)\nusing this:\n  ipoly pp x = (0::'a) \\<and> pp \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>p. ipoly p x = (0::'a) \\<and> p \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  algebraic x\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> irreducible q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from this irreducible_connect_int[of q] pr"], ["proof (chain)\npicking this:\n  \\<not> irreducible q\n  \\<lbrakk>irreducible\\<^sub>d q; content q = 1\\<rbrakk>\n  \\<Longrightarrow> irreducible q\n  primitive q", "have \"\\<not> irreducible\\<^sub>d q\""], ["proof (prove)\nusing this:\n  \\<not> irreducible q\n  \\<lbrakk>irreducible\\<^sub>d q; content q = 1\\<rbrakk>\n  \\<Longrightarrow> irreducible q\n  primitive q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d q", "by auto"], ["proof (state)\nthis:\n  \\<not> irreducible\\<^sub>d q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from this dq"], ["proof (chain)\npicking this:\n  \\<not> irreducible\\<^sub>d q\n  degree q \\<noteq> 0", "obtain r where\n    r: \"degree r \\<noteq> 0\" \"degree r < degree q\" and \"r dvd q\""], ["proof (prove)\nusing this:\n  \\<not> irreducible\\<^sub>d q\n  degree q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>degree r \\<noteq> 0; degree r < degree q; r dvd q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  degree r \\<noteq> 0\n  degree r < degree q\n  r dvd q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  r dvd q", "obtain rr where q: \"q = r * rr\""], ["proof (prove)\nusing this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  r dvd q\n\ngoal (1 subgoal):\n 1. (\\<And>rr. q = r * rr \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  \\<exists>k. q = r * k\n\ngoal (1 subgoal):\n 1. (\\<And>rr. q = r * rr \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  q = r * rr\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "have \"degree q = degree r + degree rr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree q = degree r + degree rr", "using dq"], ["proof (prove)\nusing this:\n  degree q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree q = degree r + degree rr", "unfolding q"], ["proof (prove)\nusing this:\n  degree (r * rr) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree (r * rr) = degree r + degree rr", "by (subst degree_mult_eq, auto)"], ["proof (state)\nthis:\n  degree q = degree r + degree rr\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "with r"], ["proof (chain)\npicking this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  degree q = degree r + degree rr", "have rr: \"degree rr \\<noteq> 0\" \"degree rr < degree q\""], ["proof (prove)\nusing this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  degree q = degree r + degree rr\n\ngoal (1 subgoal):\n 1. degree rr \\<noteq> 0 &&& degree rr < degree q", "by auto"], ["proof (state)\nthis:\n  degree rr \\<noteq> 0\n  degree rr < degree q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from representsD(2)[OF y, unfolded q hom_distribs]"], ["proof (chain)\npicking this:\n  ipoly r y * ipoly rr y = (0::'b)", "have \"ipoly r y = 0 \\<or> ipoly rr y = 0\""], ["proof (prove)\nusing this:\n  ipoly r y * ipoly rr y = (0::'b)\n\ngoal (1 subgoal):\n 1. ipoly r y = (0::'b) \\<or> ipoly rr y = (0::'b)", "by auto"], ["proof (state)\nthis:\n  ipoly r y = (0::'b) \\<or> ipoly rr y = (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "with r rr"], ["proof (chain)\npicking this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  degree rr \\<noteq> 0\n  degree rr < degree q\n  ipoly r y = (0::'b) \\<or> ipoly rr y = (0::'b)", "have \"r represents y \\<or> rr represents y\""], ["proof (prove)\nusing this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  degree rr \\<noteq> 0\n  degree rr < degree q\n  ipoly r y = (0::'b) \\<or> ipoly rr y = (0::'b)\n\ngoal (1 subgoal):\n 1. r represents y \\<or> rr represents y", "unfolding represents_def"], ["proof (prove)\nusing this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  degree rr \\<noteq> 0\n  degree rr < degree q\n  ipoly r y = (0::'b) \\<or> ipoly rr y = (0::'b)\n\ngoal (1 subgoal):\n 1. ipoly r y = (0::'b) \\<and> r \\<noteq> 0 \\<or>\n    ipoly rr y = (0::'b) \\<and> rr \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  r represents y \\<or> rr represents y\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "with r rr"], ["proof (chain)\npicking this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  degree rr \\<noteq> 0\n  degree rr < degree q\n  r represents y \\<or> rr represents y", "obtain r where r: \"r represents y\" \"degree r < degree q\""], ["proof (prove)\nusing this:\n  degree r \\<noteq> 0\n  degree r < degree q\n  degree rr \\<noteq> 0\n  degree rr < degree q\n  r represents y \\<or> rr represents y\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r represents y; degree r < degree q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r represents y\n  degree r < degree q\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from f[OF r(1)] deg r(2)"], ["proof (chain)\npicking this:\n  f r represents x \\<and> degree (f r) \\<le> degree r\n  degree q \\<le> degree pp\n  degree r < degree q", "obtain r where r: \"r represents x\" \"degree r < degree pp\""], ["proof (prove)\nusing this:\n  f r represents x \\<and> degree (f r) \\<le> degree r\n  degree q \\<le> degree pp\n  degree r < degree q\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r represents x; degree r < degree pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r represents x\n  degree r < degree pp\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from factors_int_poly_represents[OF r(1)] r(2)"], ["proof (chain)\npicking this:\n  \\<exists>q\\<in>set (factors_of_int_poly r).\n     q represents x \\<and>\n     irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree r\n  degree r < degree pp", "obtain r where\n    r: \"r represents x\" \"irreducible r\" \"lead_coeff r > 0\" and deg: \"degree r < degree pp\""], ["proof (prove)\nusing this:\n  \\<exists>q\\<in>set (factors_of_int_poly r).\n     q represents x \\<and>\n     irreducible q \\<and> 0 < lead_coeff q \\<and> degree q \\<le> degree r\n  degree r < degree pp\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r represents x; irreducible r; 0 < lead_coeff r;\n         degree r < degree pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  r represents x\n  irreducible r\n  0 < lead_coeff r\n  degree r < degree pp\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "from algebraic_imp_represents_unique[OF ax] r irr cf_pos x"], ["proof (chain)\npicking this:\n  \\<exists>!p. p represents x \\<and> irreducible p \\<and> 0 < lead_coeff p\n  r represents x\n  irreducible r\n  0 < lead_coeff r\n  irreducible pp\n  0 < lead_coeff pp\n  pp represents x", "have \"r = pp\""], ["proof (prove)\nusing this:\n  \\<exists>!p. p represents x \\<and> irreducible p \\<and> 0 < lead_coeff p\n  r represents x\n  irreducible r\n  0 < lead_coeff r\n  irreducible pp\n  0 < lead_coeff pp\n  pp represents x\n\ngoal (1 subgoal):\n 1. r = pp", "by auto"], ["proof (state)\nthis:\n  r = pp\n\ngoal (1 subgoal):\n 1. \\<not> irreducible q \\<Longrightarrow> False", "with deg"], ["proof (chain)\npicking this:\n  degree r < degree pp\n  r = pp", "show False"], ["proof (prove)\nusing this:\n  degree r < degree pp\n  r = pp\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "declare irreducible_const_poly_iff [simp]"], ["", "lemma poly_uminus_irreducible:\n  assumes p: \"irreducible (p :: int poly)\" and deg: \"degree p \\<noteq> 0\"\n  shows \"irreducible (poly_uminus p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible (poly_uminus p)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. irreducible (poly_uminus p)", "from deg_nonzero_represents[OF deg]"], ["proof (chain)\npicking this:\n  \\<exists>x. p represents x", "obtain x :: complex where x: \"p represents x\""], ["proof (prove)\nusing this:\n  \\<exists>x. p represents x\n\ngoal (1 subgoal):\n 1. (\\<And>x. p represents x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p represents x\n\ngoal (1 subgoal):\n 1. irreducible (poly_uminus p)", "from represents_uminus[OF x]"], ["proof (chain)\npicking this:\n  poly_uminus p represents - x", "have y: \"poly_uminus p represents (- x)\""], ["proof (prove)\nusing this:\n  poly_uminus p represents - x\n\ngoal (1 subgoal):\n 1. poly_uminus p represents - x", "."], ["proof (state)\nthis:\n  poly_uminus p represents - x\n\ngoal (1 subgoal):\n 1. irreducible (poly_uminus p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible (poly_uminus p)", "proof (rule irreducible_preservation[OF p x y], force)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents - x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (poly_uminus p)", "from deg irreducible_imp_primitive[OF p]"], ["proof (chain)\npicking this:\n  degree p \\<noteq> 0\n  degree p \\<noteq> 0 \\<Longrightarrow> primitive p", "have \"primitive p\""], ["proof (prove)\nusing this:\n  degree p \\<noteq> 0\n  degree p \\<noteq> 0 \\<Longrightarrow> primitive p\n\ngoal (1 subgoal):\n 1. primitive p", "by auto"], ["proof (state)\nthis:\n  primitive p\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents - x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (poly_uminus p)", "then"], ["proof (chain)\npicking this:\n  primitive p", "show \"primitive (poly_uminus p)\""], ["proof (prove)\nusing this:\n  primitive p\n\ngoal (1 subgoal):\n 1. primitive (poly_uminus p)", "by simp"], ["proof (state)\nthis:\n  primitive (poly_uminus p)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q represents - x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       q represents - x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q", "assume \"q represents (- x)\""], ["proof (state)\nthis:\n  q represents - x\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q represents - x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q", "from represents_uminus[OF this]"], ["proof (chain)\npicking this:\n  poly_uminus q represents - (- x)", "have \"(poly_uminus q) represents x\""], ["proof (prove)\nusing this:\n  poly_uminus q represents - (- x)\n\ngoal (1 subgoal):\n 1. poly_uminus q represents x", "by simp"], ["proof (state)\nthis:\n  poly_uminus q represents x\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q represents - x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q", "thus \"(poly_uminus q) represents x \\<and> degree (poly_uminus q) \\<le> degree q\""], ["proof (prove)\nusing this:\n  poly_uminus q represents x\n\ngoal (1 subgoal):\n 1. poly_uminus q represents x \\<and> degree (poly_uminus q) \\<le> degree q", "by auto"], ["proof (state)\nthis:\n  poly_uminus q represents x \\<and> degree (poly_uminus q) \\<le> degree q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  irreducible (poly_uminus p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reflect_poly_irreducible:\n  fixes x :: \"'a :: {field_char_0,field_gcd}\"\n  assumes p: \"irreducible p\" and x: \"p represents x\" and x0: \"x \\<noteq> 0\"\n  shows \"irreducible (reflect_poly p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible (reflect_poly p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. irreducible (reflect_poly p)", "from represents_inverse[OF x0 x]"], ["proof (chain)\npicking this:\n  reflect_poly p represents inverse x", "have y: \"(reflect_poly p) represents (inverse x)\""], ["proof (prove)\nusing this:\n  reflect_poly p represents inverse x\n\ngoal (1 subgoal):\n 1. reflect_poly p represents inverse x", "by simp"], ["proof (state)\nthis:\n  reflect_poly p represents inverse x\n\ngoal (1 subgoal):\n 1. irreducible (reflect_poly p)", "from x0"], ["proof (chain)\npicking this:\n  x \\<noteq> (0::'a)", "have ix0: \"inverse x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  x \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. inverse x \\<noteq> (0::'a)", "by auto"], ["proof (state)\nthis:\n  inverse x \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. irreducible (reflect_poly p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible (reflect_poly p)", "proof (rule irreducible_preservation[OF p x y])"], ["proof (state)\ngoal (3 subgoals):\n 1. degree (reflect_poly p) \\<le> degree p\n 2. \\<And>q.\n       q represents inverse x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 3. primitive (reflect_poly p)", "from x irreducible_imp_primitive[OF p]"], ["proof (chain)\npicking this:\n  p represents x\n  degree p \\<noteq> 0 \\<Longrightarrow> primitive p", "show \"primitive (reflect_poly p)\""], ["proof (prove)\nusing this:\n  p represents x\n  degree p \\<noteq> 0 \\<Longrightarrow> primitive p\n\ngoal (1 subgoal):\n 1. primitive (reflect_poly p)", "by (auto simp: content_reflect_poly)"], ["proof (state)\nthis:\n  primitive (reflect_poly p)\n\ngoal (2 subgoals):\n 1. degree (reflect_poly p) \\<le> degree p\n 2. \\<And>q.\n       q represents inverse x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. degree (reflect_poly p) \\<le> degree p\n 2. \\<And>q.\n       q represents inverse x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q", "assume \"q represents (inverse x)\""], ["proof (state)\nthis:\n  q represents inverse x\n\ngoal (2 subgoals):\n 1. degree (reflect_poly p) \\<le> degree p\n 2. \\<And>q.\n       q represents inverse x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q", "from represents_inverse[OF ix0 this]"], ["proof (chain)\npicking this:\n  reflect_poly q represents inverse (inverse x)", "have \"(reflect_poly q) represents x\""], ["proof (prove)\nusing this:\n  reflect_poly q represents inverse (inverse x)\n\ngoal (1 subgoal):\n 1. reflect_poly q represents x", "by simp"], ["proof (state)\nthis:\n  reflect_poly q represents x\n\ngoal (2 subgoals):\n 1. degree (reflect_poly p) \\<le> degree p\n 2. \\<And>q.\n       q represents inverse x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q", "with degree_reflect_poly_le"], ["proof (chain)\npicking this:\n  degree (reflect_poly ?p) \\<le> degree ?p\n  reflect_poly q represents x", "show \"(reflect_poly q) represents x \\<and> degree (reflect_poly q) \\<le> degree q\""], ["proof (prove)\nusing this:\n  degree (reflect_poly ?p) \\<le> degree ?p\n  reflect_poly q represents x\n\ngoal (1 subgoal):\n 1. reflect_poly q represents x \\<and>\n    degree (reflect_poly q) \\<le> degree q", "by auto"], ["proof (state)\nthis:\n  reflect_poly q represents x \\<and> degree (reflect_poly q) \\<le> degree q\n\ngoal (1 subgoal):\n 1. degree (reflect_poly p) \\<le> degree p", "qed (insert p, auto simp: degree_reflect_poly_le)"], ["proof (state)\nthis:\n  irreducible (reflect_poly p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_add_rat_irreducible:\n  assumes p: \"irreducible p\" and deg: \"degree p \\<noteq> 0\"\n  shows \"irreducible (cf_pos_poly (poly_add_rat r p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_add_rat r p))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_add_rat r p))", "from deg_nonzero_represents[OF deg]"], ["proof (chain)\npicking this:\n  \\<exists>x. p represents x", "obtain x :: complex where x: \"p represents x\""], ["proof (prove)\nusing this:\n  \\<exists>x. p represents x\n\ngoal (1 subgoal):\n 1. (\\<And>x. p represents x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p represents x\n\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_add_rat r p))", "from represents_add_rat[OF x]"], ["proof (chain)\npicking this:\n  poly_add_rat ?r p represents of_rat ?r + x", "have y: \"cf_pos_poly (poly_add_rat r p) represents (of_rat r + x)\""], ["proof (prove)\nusing this:\n  poly_add_rat ?r p represents of_rat ?r + x\n\ngoal (1 subgoal):\n 1. cf_pos_poly (poly_add_rat r p) represents of_rat r + x", "by simp"], ["proof (state)\nthis:\n  cf_pos_poly (poly_add_rat r p) represents of_rat r + x\n\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_add_rat r p))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_add_rat r p))", "proof (rule irreducible_preservation[OF p x y], force)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r + x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_add_rat r p))", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r + x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_add_rat r p))", "assume \"q represents (of_rat r + x)\""], ["proof (state)\nthis:\n  q represents of_rat r + x\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r + x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_add_rat r p))", "from represents_add_rat[OF this, of \"- r\"]"], ["proof (chain)\npicking this:\n  poly_add_rat (- r) q represents of_rat (- r) + (of_rat r + x)", "have \"(poly_add_rat (- r) q) represents x\""], ["proof (prove)\nusing this:\n  poly_add_rat (- r) q represents of_rat (- r) + (of_rat r + x)\n\ngoal (1 subgoal):\n 1. poly_add_rat (- r) q represents x", "by (simp add: of_rat_minus)"], ["proof (state)\nthis:\n  poly_add_rat (- r) q represents x\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r + x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_add_rat r p))", "thus \"(poly_add_rat (- r) q) represents x \\<and> degree (poly_add_rat (- r) q) \\<le> degree q\""], ["proof (prove)\nusing this:\n  poly_add_rat (- r) q represents x\n\ngoal (1 subgoal):\n 1. poly_add_rat (- r) q represents x \\<and>\n    degree (poly_add_rat (- r) q) \\<le> degree q", "by auto"], ["proof (state)\nthis:\n  poly_add_rat (- r) q represents x \\<and>\n  degree (poly_add_rat (- r) q) \\<le> degree q\n\ngoal (1 subgoal):\n 1. primitive (cf_pos_poly (poly_add_rat r p))", "qed (insert p, auto)"], ["proof (state)\nthis:\n  irreducible (cf_pos_poly (poly_add_rat r p))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_mult_rat_irreducible:\n  assumes p: \"irreducible p\" and deg: \"degree p \\<noteq> 0\" and r: \"r \\<noteq> 0\"\n  shows \"irreducible (cf_pos_poly (poly_mult_rat r p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_mult_rat r p))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_mult_rat r p))", "from deg_nonzero_represents[OF deg]"], ["proof (chain)\npicking this:\n  \\<exists>x. p represents x", "obtain x :: complex where x: \"p represents x\""], ["proof (prove)\nusing this:\n  \\<exists>x. p represents x\n\ngoal (1 subgoal):\n 1. (\\<And>x. p represents x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p represents x\n\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_mult_rat r p))", "from represents_mult_rat[OF r x]"], ["proof (chain)\npicking this:\n  poly_mult_rat r p represents of_rat r * x", "have y: \"cf_pos_poly (poly_mult_rat r p) represents (of_rat r * x)\""], ["proof (prove)\nusing this:\n  poly_mult_rat r p represents of_rat r * x\n\ngoal (1 subgoal):\n 1. cf_pos_poly (poly_mult_rat r p) represents of_rat r * x", "by simp"], ["proof (state)\nthis:\n  cf_pos_poly (poly_mult_rat r p) represents of_rat r * x\n\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_mult_rat r p))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible (cf_pos_poly (poly_mult_rat r p))", "proof (rule irreducible_preservation[OF p x y], force simp: r)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r * x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_mult_rat r p))", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r * x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_mult_rat r p))", "from r"], ["proof (chain)\npicking this:\n  r \\<noteq> 0", "have r': \"inverse r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. inverse r \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  inverse r \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r * x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_mult_rat r p))", "assume \"q represents (of_rat r * x)\""], ["proof (state)\nthis:\n  q represents of_rat r * x\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r * x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_mult_rat r p))", "from represents_mult_rat[OF r' this]"], ["proof (chain)\npicking this:\n  poly_mult_rat (inverse r) q represents of_rat (inverse r) * (of_rat r * x)", "have \"(poly_mult_rat (inverse r) q) represents x\""], ["proof (prove)\nusing this:\n  poly_mult_rat (inverse r) q represents of_rat (inverse r) * (of_rat r * x)\n\ngoal (1 subgoal):\n 1. poly_mult_rat (inverse r) q represents x", "using r"], ["proof (prove)\nusing this:\n  poly_mult_rat (inverse r) q represents of_rat (inverse r) * (of_rat r * x)\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_mult_rat (inverse r) q represents x", "by (simp add: of_rat_divide field_simps)"], ["proof (state)\nthis:\n  poly_mult_rat (inverse r) q represents x\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       q represents of_rat r * x \\<Longrightarrow>\n       ?f q represents x \\<and> degree (?f q) \\<le> degree q\n 2. primitive (cf_pos_poly (poly_mult_rat r p))", "thus \"(poly_mult_rat (inverse r) q) represents x \\<and> degree (poly_mult_rat (inverse r) q) \\<le> degree q\""], ["proof (prove)\nusing this:\n  poly_mult_rat (inverse r) q represents x\n\ngoal (1 subgoal):\n 1. poly_mult_rat (inverse r) q represents x \\<and>\n    degree (poly_mult_rat (inverse r) q) \\<le> degree q", "using r"], ["proof (prove)\nusing this:\n  poly_mult_rat (inverse r) q represents x\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_mult_rat (inverse r) q represents x \\<and>\n    degree (poly_mult_rat (inverse r) q) \\<le> degree q", "by auto"], ["proof (state)\nthis:\n  poly_mult_rat (inverse r) q represents x \\<and>\n  degree (poly_mult_rat (inverse r) q) \\<le> degree q\n\ngoal (1 subgoal):\n 1. primitive (cf_pos_poly (poly_mult_rat r p))", "qed (insert p r, auto)"], ["proof (state)\nthis:\n  irreducible (cf_pos_poly (poly_mult_rat r p))\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation coeff_lift_hom:\n  factor_preserving_hom \"coeff_lift :: 'a :: {comm_semiring_1,semiring_no_zero_divisors} \\<Rightarrow> _\""], ["proof (prove)\ngoal (1 subgoal):\n 1. factor_preserving_hom (\\<lambda>a. [:a:])", "by (unfold_locales, auto)"], ["", "end"]]}