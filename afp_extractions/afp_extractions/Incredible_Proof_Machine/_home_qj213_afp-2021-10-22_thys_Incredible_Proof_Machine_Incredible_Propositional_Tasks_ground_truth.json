{"file_name": "/home/qj213/afp-2021-10-22/thys/Incredible_Proof_Machine/Incredible_Propositional_Tasks.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Incredible_Proof_Machine", "problem_names": ["lemma eff_NatRuleI:\n  \"nat_rule rule c ants\n    \\<Longrightarrow> entail = (\\<Gamma> \\<turnstile> subst s (freshen a c))\n    \\<Longrightarrow> hyps = ((\\<lambda>ant. ((\\<lambda>p. subst s (freshen a p)) |`| a_hyps ant |\\<union>| \\<Gamma> \\<turnstile> subst s (freshen a (a_conc ant)))) |`| ants)\n    \\<Longrightarrow> (\\<And> ant f. ant |\\<in>| ants \\<Longrightarrow> f |\\<in>| \\<Gamma> \\<Longrightarrow> freshenLC a ` (a_fresh ant) \\<inter> lconsts f = {})\n    \\<Longrightarrow> (\\<And> ant. ant |\\<in>| ants \\<Longrightarrow> freshenLC a ` (a_fresh ant) \\<inter> subst_lconsts s = {})\n    \\<Longrightarrow> eff (NatRule rule) entail hyps\"", "lemma  natEff_InstI:\n  \"rule = (r,c)\n  \\<Longrightarrow> c \\<in> set (consequent r)\n  \\<Longrightarrow> antec = f_antecedent r\n  \\<Longrightarrow> natEff_Inst rule c antec\"", "lemma \"task1_1.solved\"", "lemma path_one_edge[simp]:\n  \"task1_1.path v1 v2 pth \\<longleftrightarrow>\n    (v1 = 0 \\<and> v2 = 1 \\<and> pth = [((0,Reg A),(1,plain_ant A))] \\<or>\n    pth = [] \\<and> v1 = v2)\"", "lemma n_andI [simp]: \"n_andI = (andI, Fun and [X,Y])\"", "lemma n_andE1 [simp]: \"n_andE1 = (andE, X)\"", "lemma n_andE2 [simp]: \"n_andE2 = (andE, Y)\"", "lemma n_impI [simp]: \"n_impI = (impI, Fun imp [X,Y])\"", "lemma n_impE [simp]: \"n_impE = (impE, Y)\"", "lemma subst_Var_eq_id [simp]: \"subst Var = id\"", "lemma xy_update: \"f = undefined(''X'' := x, ''Y'' := y) \\<Longrightarrow> x = f ''X'' \\<and> y = f ''Y''\"", "lemma y_update: \"f = undefined(''Y'':=y) \\<Longrightarrow> y = f ''Y''\""], "translations": [["", "lemma eff_NatRuleI:\n  \"nat_rule rule c ants\n    \\<Longrightarrow> entail = (\\<Gamma> \\<turnstile> subst s (freshen a c))\n    \\<Longrightarrow> hyps = ((\\<lambda>ant. ((\\<lambda>p. subst s (freshen a p)) |`| a_hyps ant |\\<union>| \\<Gamma> \\<turnstile> subst s (freshen a (a_conc ant)))) |`| ants)\n    \\<Longrightarrow> (\\<And> ant f. ant |\\<in>| ants \\<Longrightarrow> f |\\<in>| \\<Gamma> \\<Longrightarrow> freshenLC a ` (a_fresh ant) \\<inter> lconsts f = {})\n    \\<Longrightarrow> (\\<And> ant. ant |\\<in>| ants \\<Longrightarrow> freshenLC a ` (a_fresh ant) \\<inter> subst_lconsts s = {})\n    \\<Longrightarrow> eff (NatRule rule) entail hyps\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_rule rule c ants;\n     entail = (\\<Gamma> \\<turnstile> subst s (freshen a c));\n     hyps =\n     (\\<lambda>ant.\n         (\\<lambda>p. subst s (freshen a p)) |`| a_hyps ant |\\<union>|\n         \\<Gamma> \\<turnstile>\n         subst s (freshen a (a_conc ant))) |`|\n     ants;\n     \\<And>ant f.\n        \\<lbrakk>ant |\\<in>| ants; f |\\<in>| \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> freshenLC a ` a_fresh ant \\<inter> lconsts f = {};\n     \\<And>ant.\n        ant |\\<in>| ants \\<Longrightarrow>\n        freshenLC a ` a_fresh ant \\<inter> subst_lconsts s = {}\\<rbrakk>\n    \\<Longrightarrow> eff (NatRule rule) entail hyps", "by (drule eff.intros(2)) simp_all"], ["", "end"], ["", "context Abstract_Task begin"], ["", "lemma  natEff_InstI:\n  \"rule = (r,c)\n  \\<Longrightarrow> c \\<in> set (consequent r)\n  \\<Longrightarrow> antec = f_antecedent r\n  \\<Longrightarrow> natEff_Inst rule c antec\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rule = (r, c); c \\<in> set (consequent r);\n     antec = f_antecedent r\\<rbrakk>\n    \\<Longrightarrow> natEff_Inst rule c antec", "by (metis natEff_Inst.intros)"], ["", "end"], ["", "context begin"], ["", "subsubsection \\<open>Task 1.1\\<close>"], ["", "text \\<open>This is the very first task of the Incredible Proof Machine: @{term \"A \\<longrightarrow> A\"}\\<close>"], ["", "abbreviation A :: \"(string,prop_funs) pform\"\n  where \"A \\<equiv> Fun (Const ''A'') []\""], ["", "text \\<open>First the task is defined as an @{term Abstract_Task}.\\<close>"], ["", "interpretation task1_1: Abstract_Task\n  \"curry (SOME f. bij f):: nat \\<Rightarrow> string \\<Rightarrow> string\"\n  \"\\<lambda>_. id\"\n  \"\\<lambda>_. {}\"\n  \"closed :: (string, prop_funs) pform \\<Rightarrow> bool\"\n  subst\n  \"\\<lambda>_. {}\"\n  \"\\<lambda>_. id\"\n  \"Var undefined\"\n  antecedent\n  consequent\n  prop_rules\n  \"[A]\"\n  \"[A]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Task (curry (SOME f. bij f)) (\\<lambda>_. id) (\\<lambda>_. {})\n     Propositional_Formulas.closed subst (\\<lambda>_. {}) (\\<lambda>_. id)\n     (Var undefined) antecedent consequent prop_rules [A] [A]", "by unfold_locales simp"], ["", "text \\<open>Then we show, that this task has a proof within our formalization of natural deduction\n  by giving a concrete proof tree.\\<close>"], ["", "lemma \"task1_1.solved\""], ["proof (prove)\ngoal (1 subgoal):\n 1. task1_1.solved", "unfolding task1_1.solved_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       c |\\<in>| task1_1.conc_forms \\<longrightarrow>\n       (\\<exists>\\<Gamma> t.\n           fst (tree.root t) = (\\<Gamma> \\<turnstile> c) \\<and>\n           \\<Gamma> |\\<subseteq>| task1_1.ass_forms \\<and>\n           task1_1.wf t \\<and> tfinite t)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma> t.\n       fst (tree.root t) = (\\<Gamma> \\<turnstile> A) \\<and>\n       \\<Gamma> |\\<subseteq>| task1_1.ass_forms \\<and>\n       task1_1.wf t \\<and> tfinite t", "apply (rule_tac x=\"{|A|}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       fst (tree.root t) = ({|A|} \\<turnstile> A) \\<and>\n       {|A|} |\\<subseteq>| task1_1.ass_forms \\<and>\n       task1_1.wf t \\<and> tfinite t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       fst (tree.root t) = ({|A|} \\<turnstile> A) \\<and>\n       task1_1.wf t \\<and> tfinite t", "apply (rule_tac x=\"Node ({|A|} \\<turnstile> A, Axiom) {||}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (tree.root (Node ({|A|} \\<turnstile> A, Axiom) {||})) =\n    ({|A|} \\<turnstile> A) \\<and>\n    task1_1.wf (Node ({|A|} \\<turnstile> A, Axiom) {||}) \\<and>\n    tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. task1_1.wf (Node ({|A|} \\<turnstile> A, Axiom) {||}) \\<and>\n    tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. task1_1.wf (Node ({|A|} \\<turnstile> A, Axiom) {||})\n 2. tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "apply (rule task1_1.wf)"], ["proof (prove)\ngoal (4 subgoals):\n 1. snd (tree.root (Node ({|A|} \\<turnstile> A, Axiom) {||}))\n    \\<in> task1_1.R\n 2. task1_1.effStep (tree.root (Node ({|A|} \\<turnstile> A, Axiom) {||}))\n     ((fst \\<circ> tree.root) |`|\n      cont (Node ({|A|} \\<turnstile> A, Axiom) {||}))\n 3. \\<And>t'.\n       t' |\\<in>|\n       cont (Node ({|A|} \\<turnstile> A, Axiom) {||}) \\<Longrightarrow>\n       task1_1.wf t'\n 4. tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "apply (solves clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.effStep (tree.root (Node ({|A|} \\<turnstile> A, Axiom) {||}))\n     ((fst \\<circ> tree.root) |`|\n      cont (Node ({|A|} \\<turnstile> A, Axiom) {||}))\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont (Node ({|A|} \\<turnstile> A, Axiom) {||}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.eff Axiom ({|A|} \\<turnstile> A) {||}\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont (Node ({|A|} \\<turnstile> A, Axiom) {||}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "apply (rule task1_1.eff.intros(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. A |\\<in>| {|A|}\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont (Node ({|A|} \\<turnstile> A, Axiom) {||}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "apply (solves simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       t' |\\<in>|\n       cont (Node ({|A|} \\<turnstile> A, Axiom) {||}) \\<Longrightarrow>\n       task1_1.wf t'\n 2. tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "apply (solves clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. tfinite (Node ({|A|} \\<turnstile> A, Axiom) {||})", "by (auto intro: tfinite.intros)"], ["", "print_locale Vertex_Graph"], ["", "interpretation task1_1: Vertex_Graph task1_1.nodes task1_1.inPorts task1_1.outPorts \"{|0::nat,1|}\"\n  \"undefined(0 := Assumption A, 1 := Conclusion A)\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "print_locale Pre_Port_Graph"], ["", "interpretation task1_1: Pre_Port_Graph task1_1.nodes task1_1.inPorts task1_1.outPorts \"{|0::nat,1|}\"\n  \"undefined(0 := Assumption A, 1 := Conclusion A)\"\n  \"{((0,Reg A),(1,plain_ant A))}\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "print_locale Instantiation"], ["", "interpretation task1_1: Instantiation\n  task1_1.inPorts\n  task1_1.outPorts\n  \"undefined(0 := Assumption A, 1 := Conclusion A)\"\n  task1_1.hyps\n  task1_1.nodes\n  \"{((0,Reg A),(1,plain_ant A))}\"\n  \"{|0::nat,1|}\"\n  task1_1.labelsIn\n  task1_1.labelsOut\n  \"curry (SOME f. bij f):: nat \\<Rightarrow> string \\<Rightarrow> string\"\n  \"\\<lambda>_. id\"\n  \"\\<lambda>_. {}\"\n  \"closed :: (string, prop_funs) pform \\<Rightarrow> bool\"\n  subst\n  \"\\<lambda>_. {}\"\n  \"\\<lambda>_. id\"\n  \"Var undefined\"\n  \"id\"\n  \"undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Instantiation task1_1.inPorts task1_1.outPorts task1_1.hyps {|0, 1|}\n     (curry (SOME f. bij f)) (\\<lambda>_. id) (\\<lambda>_. {})\n     Propositional_Formulas.closed subst (\\<lambda>_. {}) (\\<lambda>_. id)\n     (Var undefined) id", "by unfold_locales simp"], ["", "declare One_nat_def [simp del]"], ["", "lemma path_one_edge[simp]:\n  \"task1_1.path v1 v2 pth \\<longleftrightarrow>\n    (v1 = 0 \\<and> v2 = 1 \\<and> pth = [((0,Reg A),(1,plain_ant A))] \\<or>\n    pth = [] \\<and> v1 = v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. task1_1.path v1 v2 pth =\n    (v1 = 0 \\<and> v2 = 1 \\<and> pth = [((0, Reg A), 1, plain_ant A)] \\<or>\n     pth = [] \\<and> v1 = v2)", "apply (cases pth)"], ["proof (prove)\ngoal (2 subgoals):\n 1. pth = [] \\<Longrightarrow>\n    task1_1.path v1 v2 pth =\n    (v1 = 0 \\<and> v2 = 1 \\<and> pth = [((0, Reg A), 1, plain_ant A)] \\<or>\n     pth = [] \\<and> v1 = v2)\n 2. \\<And>a list.\n       pth = a # list \\<Longrightarrow>\n       task1_1.path v1 v2 pth =\n       (v1 = 0 \\<and>\n        v2 = 1 \\<and> pth = [((0, Reg A), 1, plain_ant A)] \\<or>\n        pth = [] \\<and> v1 = v2)", "apply (auto simp add: task1_1.path_cons_simp')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>list.\n       \\<lbrakk>pth = ((0, Reg A), 1, plain_ant A) # list;\n        task1_1.path 1 v2 list; v1 = 0\\<rbrakk>\n       \\<Longrightarrow> v2 = 1\n 2. \\<And>list.\n       \\<lbrakk>pth = ((0, Reg A), 1, plain_ant A) # list;\n        task1_1.path 1 v2 list; v1 = 0\\<rbrakk>\n       \\<Longrightarrow> list = []", "apply (rename_tac list, case_tac list, auto simp add: task1_1.path_cons_simp')+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Finally we can also show that there is a proof graph for this task.\\<close>"], ["", "interpretation Tasked_Proof_Graph\n  \"curry (SOME f. bij f):: nat \\<Rightarrow> string \\<Rightarrow> string\"\n  \"\\<lambda>_. id\"\n  \"\\<lambda>_. {}\"\n  \"closed :: (string, prop_funs) pform \\<Rightarrow> bool\"\n  subst\n  \"\\<lambda>_. {}\"\n  \"\\<lambda>_. id\"\n  \"Var undefined\"\n  antecedent\n  consequent\n  prop_rules\n  \"[A]\"\n  \"[A]\"\n  \"{|0::nat,1|}\"\n  \"undefined(0 := Assumption A, 1 := Conclusion A)\"\n  \"{((0,Reg A),(1,plain_ant A))}\"\n  \"id\"\n  \"undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tasked_Proof_Graph (curry (SOME f. bij f)) (\\<lambda>_. id)\n     (\\<lambda>_. {}) Propositional_Formulas.closed subst (\\<lambda>_. {})\n     (\\<lambda>_. id) (Var undefined) antecedent consequent prop_rules [A]\n     [A] {|0, 1|} (undefined(0 := Assumption A, 1 := Conclusion A))\n     {((0, Reg A), 1, plain_ant A)} id undefined", "apply unfold_locales"], ["proof (prove)\ngoal (9 subgoals):\n 1. undefined(0 := Assumption A, 1 := Conclusion A) ` fset {|0, 1|}\n    \\<subseteq> i.R task1_1.nodes\n 2. \\<forall>(ps1, ps2)\\<in>{((0, Reg A), 1, plain_ant A)}.\n       task1_1.valid_out_port ps1 \\<and> task1_1.valid_in_port ps2\n 3. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2 p'.\n       \\<lbrakk>((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n                \\<in> {((0, Reg A), 1, plain_ant A)};\n        task1_1.hyps\n         ((undefined(0 := Assumption A, 1 := Conclusion A)) v\\<^sub>1)\n         p\\<^sub>1 =\n        Some p'\\<rbrakk>\n       \\<Longrightarrow> (v\\<^sub>2, p\\<^sub>2) = (v\\<^sub>1, p') \\<or>\n                         v\\<^sub>2 \\<in> task1_1.scope (v\\<^sub>1, p')\n 4. \\<And>v pth.\n       \\<lbrakk>task1_1.path v v pth;\n        Scoped_Graph.hyps_free\n         (undefined(0 := Assumption A, 1 := Conclusion A)) task1_1.hyps\n         pth\\<rbrakk>\n       \\<Longrightarrow> pth = []\n 5. \\<And>v p.\n       task1_1.valid_in_port (v, p) \\<Longrightarrow>\n       \\<exists>e\\<in>{((0, Reg A), 1, plain_ant A)}. snd e = (v, p)\n 6. \\<And>v.\n       v |\\<in>| {|0, 1|} \\<Longrightarrow>\n       \\<exists>pth v'.\n          task1_1.path v v' pth \\<and> task1_1.terminal_vertex v'\n 7. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2.\n       ((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n       \\<in> {((0, Reg A), 1, plain_ant A)} \\<Longrightarrow>\n       task1_1.labelAtOut v\\<^sub>1 p\\<^sub>1 =\n       task1_1.labelAtIn v\\<^sub>2 p\\<^sub>2\n 8. \\<And>v p var v'.\n       \\<lbrakk>task1_1.valid_in_port (v, p);\n        var\n        \\<in> task1_1.local_vars\n               ((undefined(0 := Assumption A, 1 := Conclusion A)) v) p;\n        v' |\\<in>| {|0, 1|};\n        curry (SOME f. bij f) (id v) var \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> task1_1.scope (v, p)\n 9. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves simp)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<forall>(ps1, ps2)\\<in>{((0, Reg A), 1, plain_ant A)}.\n       task1_1.valid_out_port ps1 \\<and> task1_1.valid_in_port ps2\n 2. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2 p'.\n       \\<lbrakk>((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n                \\<in> {((0, Reg A), 1, plain_ant A)};\n        task1_1.hyps\n         ((undefined(0 := Assumption A, 1 := Conclusion A)) v\\<^sub>1)\n         p\\<^sub>1 =\n        Some p'\\<rbrakk>\n       \\<Longrightarrow> (v\\<^sub>2, p\\<^sub>2) = (v\\<^sub>1, p') \\<or>\n                         v\\<^sub>2 \\<in> task1_1.scope (v\\<^sub>1, p')\n 3. \\<And>v pth.\n       \\<lbrakk>task1_1.path v v pth;\n        Scoped_Graph.hyps_free\n         (undefined(0 := Assumption A, 1 := Conclusion A)) task1_1.hyps\n         pth\\<rbrakk>\n       \\<Longrightarrow> pth = []\n 4. \\<And>v p.\n       task1_1.valid_in_port (v, p) \\<Longrightarrow>\n       \\<exists>e\\<in>{((0, Reg A), 1, plain_ant A)}. snd e = (v, p)\n 5. \\<And>v.\n       v |\\<in>| {|0, 1|} \\<Longrightarrow>\n       \\<exists>pth v'.\n          task1_1.path v v' pth \\<and> task1_1.terminal_vertex v'\n 6. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2.\n       ((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n       \\<in> {((0, Reg A), 1, plain_ant A)} \\<Longrightarrow>\n       task1_1.labelAtOut v\\<^sub>1 p\\<^sub>1 =\n       task1_1.labelAtIn v\\<^sub>2 p\\<^sub>2\n 7. \\<And>v p var v'.\n       \\<lbrakk>task1_1.valid_in_port (v, p);\n        var\n        \\<in> task1_1.local_vars\n               ((undefined(0 := Assumption A, 1 := Conclusion A)) v) p;\n        v' |\\<in>| {|0, 1|};\n        curry (SOME f. bij f) (id v) var \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> task1_1.scope (v, p)\n 8. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves clarsimp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2 p'.\n       \\<lbrakk>((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n                \\<in> {((0, Reg A), 1, plain_ant A)};\n        task1_1.hyps\n         ((undefined(0 := Assumption A, 1 := Conclusion A)) v\\<^sub>1)\n         p\\<^sub>1 =\n        Some p'\\<rbrakk>\n       \\<Longrightarrow> (v\\<^sub>2, p\\<^sub>2) = (v\\<^sub>1, p') \\<or>\n                         v\\<^sub>2 \\<in> task1_1.scope (v\\<^sub>1, p')\n 2. \\<And>v pth.\n       \\<lbrakk>task1_1.path v v pth;\n        Scoped_Graph.hyps_free\n         (undefined(0 := Assumption A, 1 := Conclusion A)) task1_1.hyps\n         pth\\<rbrakk>\n       \\<Longrightarrow> pth = []\n 3. \\<And>v p.\n       task1_1.valid_in_port (v, p) \\<Longrightarrow>\n       \\<exists>e\\<in>{((0, Reg A), 1, plain_ant A)}. snd e = (v, p)\n 4. \\<And>v.\n       v |\\<in>| {|0, 1|} \\<Longrightarrow>\n       \\<exists>pth v'.\n          task1_1.path v v' pth \\<and> task1_1.terminal_vertex v'\n 5. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2.\n       ((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n       \\<in> {((0, Reg A), 1, plain_ant A)} \\<Longrightarrow>\n       task1_1.labelAtOut v\\<^sub>1 p\\<^sub>1 =\n       task1_1.labelAtIn v\\<^sub>2 p\\<^sub>2\n 6. \\<And>v p var v'.\n       \\<lbrakk>task1_1.valid_in_port (v, p);\n        var\n        \\<in> task1_1.local_vars\n               ((undefined(0 := Assumption A, 1 := Conclusion A)) v) p;\n        v' |\\<in>| {|0, 1|};\n        curry (SOME f. bij f) (id v) var \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> task1_1.scope (v, p)\n 7. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves clarsimp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>v pth.\n       \\<lbrakk>task1_1.path v v pth;\n        Scoped_Graph.hyps_free\n         (undefined(0 := Assumption A, 1 := Conclusion A)) task1_1.hyps\n         pth\\<rbrakk>\n       \\<Longrightarrow> pth = []\n 2. \\<And>v p.\n       task1_1.valid_in_port (v, p) \\<Longrightarrow>\n       \\<exists>e\\<in>{((0, Reg A), 1, plain_ant A)}. snd e = (v, p)\n 3. \\<And>v.\n       v |\\<in>| {|0, 1|} \\<Longrightarrow>\n       \\<exists>pth v'.\n          task1_1.path v v' pth \\<and> task1_1.terminal_vertex v'\n 4. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2.\n       ((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n       \\<in> {((0, Reg A), 1, plain_ant A)} \\<Longrightarrow>\n       task1_1.labelAtOut v\\<^sub>1 p\\<^sub>1 =\n       task1_1.labelAtIn v\\<^sub>2 p\\<^sub>2\n 5. \\<And>v p var v'.\n       \\<lbrakk>task1_1.valid_in_port (v, p);\n        var\n        \\<in> task1_1.local_vars\n               ((undefined(0 := Assumption A, 1 := Conclusion A)) v) p;\n        v' |\\<in>| {|0, 1|};\n        curry (SOME f. bij f) (id v) var \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> task1_1.scope (v, p)\n 6. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves clarsimp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>v p.\n       task1_1.valid_in_port (v, p) \\<Longrightarrow>\n       \\<exists>e\\<in>{((0, Reg A), 1, plain_ant A)}. snd e = (v, p)\n 2. \\<And>v.\n       v |\\<in>| {|0, 1|} \\<Longrightarrow>\n       \\<exists>pth v'.\n          task1_1.path v v' pth \\<and> task1_1.terminal_vertex v'\n 3. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2.\n       ((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n       \\<in> {((0, Reg A), 1, plain_ant A)} \\<Longrightarrow>\n       task1_1.labelAtOut v\\<^sub>1 p\\<^sub>1 =\n       task1_1.labelAtIn v\\<^sub>2 p\\<^sub>2\n 4. \\<And>v p var v'.\n       \\<lbrakk>task1_1.valid_in_port (v, p);\n        var\n        \\<in> task1_1.local_vars\n               ((undefined(0 := Assumption A, 1 := Conclusion A)) v) p;\n        v' |\\<in>| {|0, 1|};\n        curry (SOME f. bij f) (id v) var \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> task1_1.scope (v, p)\n 5. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves fastforce)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>v.\n       v |\\<in>| {|0, 1|} \\<Longrightarrow>\n       \\<exists>pth v'.\n          task1_1.path v v' pth \\<and> task1_1.terminal_vertex v'\n 2. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2.\n       ((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n       \\<in> {((0, Reg A), 1, plain_ant A)} \\<Longrightarrow>\n       task1_1.labelAtOut v\\<^sub>1 p\\<^sub>1 =\n       task1_1.labelAtIn v\\<^sub>2 p\\<^sub>2\n 3. \\<And>v p var v'.\n       \\<lbrakk>task1_1.valid_in_port (v, p);\n        var\n        \\<in> task1_1.local_vars\n               ((undefined(0 := Assumption A, 1 := Conclusion A)) v) p;\n        v' |\\<in>| {|0, 1|};\n        curry (SOME f. bij f) (id v) var \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> task1_1.scope (v, p)\n 4. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves fastforce)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v\\<^sub>1 p\\<^sub>1 v\\<^sub>2 p\\<^sub>2.\n       ((v\\<^sub>1, p\\<^sub>1), v\\<^sub>2, p\\<^sub>2)\n       \\<in> {((0, Reg A), 1, plain_ant A)} \\<Longrightarrow>\n       task1_1.labelAtOut v\\<^sub>1 p\\<^sub>1 =\n       task1_1.labelAtIn v\\<^sub>2 p\\<^sub>2\n 2. \\<And>v p var v'.\n       \\<lbrakk>task1_1.valid_in_port (v, p);\n        var\n        \\<in> task1_1.local_vars\n               ((undefined(0 := Assumption A, 1 := Conclusion A)) v) p;\n        v' |\\<in>| {|0, 1|};\n        curry (SOME f. bij f) (id v) var \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> task1_1.scope (v, p)\n 3. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves \\<open>clarsimp simp add: task1_1.labelAtOut_def task1_1.labelAtIn_def\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v p var v'.\n       \\<lbrakk>task1_1.valid_in_port (v, p);\n        var\n        \\<in> task1_1.local_vars\n               ((undefined(0 := Assumption A, 1 := Conclusion A)) v) p;\n        v' |\\<in>| {|0, 1|};\n        curry (SOME f. bij f) (id v) var \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> task1_1.scope (v, p)\n 2. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map Conclusion [A])\n    \\<subseteq> undefined(0 := Assumption A, 1 := Conclusion A) `\n                fset {|0, 1|}", "apply (solves clarsimp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>Task 2.11\\<close>"], ["", "text \\<open>This is a slightly more interesting task as it involves both our connectives: @{term \"P \\<and> Q \\<longrightarrow> R \\<Longrightarrow> P \\<longrightarrow> (Q \\<longrightarrow> R)\"}\\<close>"], ["", "abbreviation B :: \"(string,prop_funs) pform\"\n  where \"B \\<equiv> Fun (Const ''B'') []\""], ["", "abbreviation C :: \"(string,prop_funs) pform\"\n  where \"C \\<equiv> Fun (Const ''C'') []\""], ["", "interpretation task2_11: Abstract_Task\n  \"curry (SOME f. bij f):: nat \\<Rightarrow> string \\<Rightarrow> string\"\n  \"\\<lambda>_. id\"\n  \"\\<lambda>_. {}\"\n  \"closed :: (string, prop_funs) pform \\<Rightarrow> bool\"\n  subst\n  \"\\<lambda>_. {}\"\n  \"\\<lambda>_. id\"\n  \"Var undefined\"\n  antecedent\n  consequent\n  prop_rules\n  \"[Fun imp [Fun and [A,B],C]]\"\n  \"[Fun imp [A,Fun imp [B,C]]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Task (curry (SOME f. bij f)) (\\<lambda>_. id) (\\<lambda>_. {})\n     Propositional_Formulas.closed subst (\\<lambda>_. {}) (\\<lambda>_. id)\n     (Var undefined) antecedent consequent prop_rules\n     [Fun imp [Fun and [A, B], C]] [Fun imp [A, Fun imp [B, C]]]", "by unfold_locales simp_all"], ["", "abbreviation \"n_andI \\<equiv> task2_11.n_rules !! 0\""], ["", "abbreviation \"n_andE1 \\<equiv> task2_11.n_rules !! 1\""], ["", "abbreviation \"n_andE2 \\<equiv> task2_11.n_rules !! 2\""], ["", "abbreviation \"n_impI \\<equiv> task2_11.n_rules !! 3\""], ["", "abbreviation \"n_impE \\<equiv> task2_11.n_rules !! 4\""], ["", "lemma n_andI [simp]: \"n_andI = (andI, Fun and [X,Y])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n_andI = (andI, Fun and [X, Y])", "unfolding task2_11.n_rules_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. flat (smap (\\<lambda>r. map (Pair r) (consequent r)) prop_rules) !! 0 =\n    (andI, Fun and [X, Y])", "by (simp add: prop_rules_def)"], ["", "lemma n_andE1 [simp]: \"n_andE1 = (andE, X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n_andE1 = (andE, X)", "unfolding task2_11.n_rules_def One_nat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. flat (smap (\\<lambda>r. map (Pair r) (consequent r)) prop_rules) !!\n    Suc 0 =\n    (andE, X)", "by (simp add: prop_rules_def)"], ["", "lemma n_andE2 [simp]: \"n_andE2 = (andE, Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n_andE2 = (andE, Y)", "unfolding task2_11.n_rules_def numeral_2_eq_2"], ["proof (prove)\ngoal (1 subgoal):\n 1. flat (smap (\\<lambda>r. map (Pair r) (consequent r)) prop_rules) !!\n    Suc (Suc 0) =\n    (andE, Y)", "by (simp add: prop_rules_def)"], ["", "lemma n_impI [simp]: \"n_impI = (impI, Fun imp [X,Y])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n_impI = (impI, Fun imp [X, Y])", "unfolding task2_11.n_rules_def numeral_3_eq_3"], ["proof (prove)\ngoal (1 subgoal):\n 1. flat (smap (\\<lambda>r. map (Pair r) (consequent r)) prop_rules) !!\n    Suc (Suc (Suc 0)) =\n    (impI, Fun imp [X, Y])", "by (simp add: prop_rules_def)"], ["", "lemma n_impE [simp]: \"n_impE = (impE, Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n_impE = (impE, Y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n_impE = (impE, Y)", "have \"n_impE = task2_11.n_rules !! Suc 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n_impE = task2_11.n_rules !! Suc 3", "by simp"], ["proof (state)\nthis:\n  n_impE = task2_11.n_rules !! Suc 3\n\ngoal (1 subgoal):\n 1. n_impE = (impE, Y)", "also"], ["proof (state)\nthis:\n  n_impE = task2_11.n_rules !! Suc 3\n\ngoal (1 subgoal):\n 1. n_impE = (impE, Y)", "have \"... = (impE, Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. task2_11.n_rules !! Suc 3 = (impE, Y)", "unfolding task2_11.n_rules_def numeral_3_eq_3"], ["proof (prove)\ngoal (1 subgoal):\n 1. flat (smap (\\<lambda>r. map (Pair r) (consequent r)) prop_rules) !!\n    Suc (Suc (Suc (Suc 0))) =\n    (impE, Y)", "by (simp add: prop_rules_def)"], ["proof (state)\nthis:\n  task2_11.n_rules !! Suc 3 = (impE, Y)\n\ngoal (1 subgoal):\n 1. n_impE = (impE, Y)", "finally"], ["proof (chain)\npicking this:\n  n_impE = (impE, Y)", "show ?thesis"], ["proof (prove)\nusing this:\n  n_impE = (impE, Y)\n\ngoal (1 subgoal):\n 1. n_impE = (impE, Y)", "."], ["proof (state)\nthis:\n  n_impE = (impE, Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_Var_eq_id [simp]: \"subst Var = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst Var = id", "by (rule ext) (induct_tac x; auto simp: map_idI)"], ["", "lemma xy_update: \"f = undefined(''X'' := x, ''Y'' := y) \\<Longrightarrow> x = f ''X'' \\<and> y = f ''Y''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = undefined(''X'' := x, ''Y'' := y) \\<Longrightarrow>\n    x = f ''X'' \\<and> y = f ''Y''", "by force"], ["", "lemma y_update: \"f = undefined(''Y'':=y) \\<Longrightarrow> y = f ''Y''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = undefined(''Y'' := y) \\<Longrightarrow> y = f ''Y''", "by force"], ["", "declare snth.simps(1) [simp del]"], ["", "text \\<open>By interpreting @{term Solved_Task} we show that there is a proof tree for the task.\n  We get the existence of the proof graph for free by using the completeness theorem.\\<close>"], ["", "interpretation task2_11: Solved_Task\n  \"curry (SOME f. bij f):: nat \\<Rightarrow> string \\<Rightarrow> string\"\n  \"\\<lambda>_. id\"\n  \"\\<lambda>_. {}\"\n  \"closed :: (string, prop_funs) pform \\<Rightarrow> bool\"\n  subst\n  \"\\<lambda>_. {}\"\n  \"\\<lambda>_. id\"\n  \"Var undefined\"\n  antecedent\n  consequent\n  prop_rules\n  \"[Fun imp [Fun and [A,B],C]]\"\n  \"[Fun imp [A,Fun imp [B,C]]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Solved_Task (curry (SOME f. bij f)) (\\<lambda>_. id) (\\<lambda>_. {})\n     Propositional_Formulas.closed subst (\\<lambda>_. {}) (\\<lambda>_. id)\n     (Var undefined) antecedent consequent prop_rules\n     [Fun imp [Fun and [A, B], C]] [Fun imp [A, Fun imp [B, C]]]", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. task2_11.solved", "unfolding task2_11.solved_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       c |\\<in>| task2_11.conc_forms \\<longrightarrow>\n       (\\<exists>\\<Gamma> t.\n           fst (tree.root t) = (\\<Gamma> \\<turnstile> c) \\<and>\n           \\<Gamma> |\\<subseteq>| task2_11.ass_forms \\<and>\n           task1_1.wf t \\<and> tfinite t)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma> t.\n       fst (tree.root t) =\n       (\\<Gamma> \\<turnstile> Fun imp [A, Fun imp [B, C]]) \\<and>\n       \\<Gamma> |\\<subseteq>| task2_11.ass_forms \\<and>\n       task1_1.wf t \\<and> tfinite t", "apply (rule_tac x=\"{|Fun imp [Fun and [A,B],C]|}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       fst (tree.root t) =\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]]) \\<and>\n       {|Fun imp [Fun and [A, B], C]|} |\\<subseteq>|\n       task2_11.ass_forms \\<and>\n       task1_1.wf t \\<and> tfinite t", "apply clarsimp\n\\<comment> \\<open>The actual proof tree for this task.\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       fst (tree.root t) =\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]]) \\<and>\n       task1_1.wf t \\<and> tfinite t", "apply (rule_tac x=\"Node ({|Fun imp [Fun and [A, B], C]|} \\<turnstile> Fun imp [A, Fun imp [B, C]],NatRule n_impI)\n  {|Node ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B,C],NatRule n_impI)\n    {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,NatRule n_impE)\n      {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun imp [Fun and [A,B], C],Axiom) {||},\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A,B],NatRule n_andI) \n          {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,Axiom) {||},\n            Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,Axiom) {||}\n          |}\n      |}\n    |}\n  |}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (tree.root\n          (Node\n            ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n             Fun imp [A, Fun imp [B, C]],\n             NatRule n_impI)\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile>\n                Fun imp [B, C],\n                NatRule n_impI)\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                   NatRule n_impE)\n                  {|Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                      Fun imp [Fun and [A, B], C],\n                      Axiom)\n                     {||},\n                    Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                      Fun and [A, B],\n                      NatRule n_andI)\n                     {|Node\n                        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                         A,\n                         Axiom)\n                        {||},\n                       Node\n                        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                         B,\n                         Axiom)\n                        {||}|}|}|}|})) =\n    ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n     Fun imp [A, Fun imp [B, C]]) \\<and>\n    task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule n_impI)\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule n_impI)\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule n_impE)\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule n_andI)\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|}) \\<and>\n    tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule n_impI)\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule n_impI)\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule n_impE)\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule n_andI)\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|}) \\<and>\n    tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})\n 2. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task1_1.wf)"], ["proof (prove)\ngoal (4 subgoals):\n 1. snd (tree.root\n          (Node\n            ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n             Fun imp [A, Fun imp [B, C]],\n             NatRule (impI, Fun imp [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile>\n                Fun imp [B, C],\n                NatRule (impI, Fun imp [X, Y]))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                   NatRule (impE, Y))\n                  {|Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                      Fun imp [Fun and [A, B], C],\n                      Axiom)\n                     {||},\n                    Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                      Fun and [A, B],\n                      NatRule (andI, Fun and [X, Y]))\n                     {|Node\n                        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                         A,\n                         Axiom)\n                        {||},\n                       Node\n                        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                         B,\n                         Axiom)\n                        {||}|}|}|}|}))\n    \\<in> task1_1.R\n 2. task1_1.effStep\n     (tree.root\n       (Node\n         ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n          Fun imp [A, Fun imp [B, C]],\n          NatRule (impI, Fun imp [X, Y]))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n             NatRule (impI, Fun imp [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                NatRule (impE, Y))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun imp [Fun and [A, B], C],\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun and [A, B],\n                   NatRule (andI, Fun and [X, Y]))\n                  {|Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                      Axiom)\n                     {||},\n                    Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                      Axiom)\n                     {||}|}|}|}|}))\n     ((fst \\<circ> tree.root) |`|\n      cont\n       (Node\n         ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n          Fun imp [A, Fun imp [B, C]],\n          NatRule (impI, Fun imp [X, Y]))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n             NatRule (impI, Fun imp [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                NatRule (impE, Y))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun imp [Fun and [A, B], C],\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun and [A, B],\n                   NatRule (andI, Fun and [X, Y]))\n                  {|Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                      Axiom)\n                     {||},\n                    Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                      Axiom)\n                     {||}|}|}|}|}))\n 3. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n           Fun imp [A, Fun imp [B, C]],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile>\n              Fun imp [B, C],\n              NatRule (impI, Fun imp [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                 NatRule (impE, Y))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                    Fun imp [Fun and [A, B], C],\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                    Fun and [A, B],\n                    NatRule (andI, Fun and [X, Y]))\n                   {|Node\n                      ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                       Axiom)\n                      {||},\n                     Node\n                      ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                       Axiom)\n                      {||}|}|}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>clarsimp; metis n_impI snth_smap snth_sset\\<close>)"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.effStep\n     (tree.root\n       (Node\n         ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n          Fun imp [A, Fun imp [B, C]],\n          NatRule (impI, Fun imp [X, Y]))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n             NatRule (impI, Fun imp [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                NatRule (impE, Y))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun imp [Fun and [A, B], C],\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun and [A, B],\n                   NatRule (andI, Fun and [X, Y]))\n                  {|Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                      Axiom)\n                     {||},\n                    Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                      Axiom)\n                     {||}|}|}|}|}))\n     ((fst \\<circ> tree.root) |`|\n      cont\n       (Node\n         ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n          Fun imp [A, Fun imp [B, C]],\n          NatRule (impI, Fun imp [X, Y]))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n             NatRule (impI, Fun imp [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                NatRule (impE, Y))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun imp [Fun and [A, B], C],\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun and [A, B],\n                   NatRule (andI, Fun and [X, Y]))\n                  {|Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                      Axiom)\n                     {||},\n                    Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                      Axiom)\n                     {||}|}|}|}|}))\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n           Fun imp [A, Fun imp [B, C]],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile>\n              Fun imp [B, C],\n              NatRule (impI, Fun imp [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                 NatRule (impE, Y))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                    Fun imp [Fun and [A, B], C],\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                    Fun and [A, B],\n                    NatRule (andI, Fun and [X, Y]))\n                   {|Node\n                      ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                       Axiom)\n                      {||},\n                     Node\n                      ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                       Axiom)\n                      {||}|}|}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.eff (NatRule (impI, Fun imp [X, Y]))\n     ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n      Fun imp [A, Fun imp [B, C]])\n     {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|}\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n           Fun imp [A, Fun imp [B, C]],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile>\n              Fun imp [B, C],\n              NatRule (impI, Fun imp [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                 NatRule (impE, Y))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                    Fun imp [Fun and [A, B], C],\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                    Fun and [A, B],\n                    NatRule (andI, Fun and [X, Y]))\n                   {|Node\n                      ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                       Axiom)\n                      {||},\n                     Node\n                      ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                       Axiom)\n                      {||}|}|}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task1_1.eff_NatRuleI [unfolded propositional.freshen_def, simplified])"], ["proof (prove)\ngoal (5 subgoals):\n 1. task2_11.natEff_Inst (impI, Fun imp [X, Y]) ?c24 ?ants24\n 2. ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n     Fun imp [A, Fun imp [B, C]]) =\n    (?\\<Gamma>24 \\<turnstile> subst ?s24 ?c24)\n 3. {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|} =\n    (\\<lambda>ant.\n        subst ?s24 |`| a_hyps ant |\\<union>| ?\\<Gamma>24 \\<turnstile>\n        subst ?s24 (a_conc ant)) |`|\n    ?ants24\n 4. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n           Fun imp [A, Fun imp [B, C]],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile>\n              Fun imp [B, C],\n              NatRule (impI, Fun imp [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                 NatRule (impE, Y))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                    Fun imp [Fun and [A, B], C],\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                    Fun and [A, B],\n                    NatRule (andI, Fun and [X, Y]))\n                   {|Node\n                      ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                       Axiom)\n                      {||},\n                     Node\n                      ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                       Axiom)\n                      {||}|}|}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply simp_all[4]"], ["proof (prove)\ngoal (5 subgoals):\n 1. task2_11.natEff_Inst (impI, Fun imp [X, Y]) ?c24 ?ants24\n 2. {|Fun imp [Fun and [A, B], C]|} = ?\\<Gamma>24 \\<and>\n    Fun imp [A, Fun imp [B, C]] = subst ?s24 ?c24\n 3. {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|} =\n    (\\<lambda>ant.\n        subst ?s24 |`| a_hyps ant |\\<union>| ?\\<Gamma>24 \\<turnstile>\n        subst ?s24 (a_conc ant)) |`|\n    ?ants24\n 4. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}|})\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task2_11.natEff_InstI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. (impI, Fun imp [X, Y]) = (?r36, ?c24)\n 2. ?c24 \\<in> set (consequent ?r36)\n 3. ?ants24 = propositional.f_antecedent ?r36\n 4. {|Fun imp [Fun and [A, B], C]|} = ?\\<Gamma>24 \\<and>\n    Fun imp [A, Fun imp [B, C]] = subst ?s24 ?c24\n 5. {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|} =\n    (\\<lambda>ant.\n        subst ?s24 |`| a_hyps ant |\\<union>| ?\\<Gamma>24 \\<turnstile>\n        subst ?s24 (a_conc ant)) |`|\n    ?ants24\n 6. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}|})\n 7. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. Fun imp [X, Y] \\<in> set (consequent impI)\n 2. ?ants24 = propositional.f_antecedent impI\n 3. {|Fun imp [Fun and [A, B], C]|} = ?\\<Gamma>24 \\<and>\n    Fun imp [A, Fun imp [B, C]] = subst ?s24 (Fun imp [X, Y])\n 4. {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|} =\n    (\\<lambda>ant.\n        subst ?s24 |`| a_hyps ant |\\<union>| ?\\<Gamma>24 \\<turnstile>\n        subst ?s24 (a_conc ant)) |`|\n    ?ants24\n 5. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}|})\n 6. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. ?ants24 = propositional.f_antecedent impI\n 2. {|Fun imp [Fun and [A, B], C]|} = ?\\<Gamma>24 \\<and>\n    Fun imp [A, Fun imp [B, C]] = subst ?s24 (Fun imp [X, Y])\n 3. {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|} =\n    (\\<lambda>ant.\n        subst ?s24 |`| a_hyps ant |\\<union>| ?\\<Gamma>24 \\<turnstile>\n        subst ?s24 (a_conc ant)) |`|\n    ?ants24\n 4. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}|})\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. {|Fun imp [Fun and [A, B], C]|} = ?\\<Gamma>24 \\<and>\n    Fun imp [A, Fun imp [B, C]] = subst ?s24 (Fun imp [X, Y])\n 2. {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|} =\n    (\\<lambda>ant.\n        subst ?s24 |`| a_hyps ant |\\<union>| ?\\<Gamma>24 \\<turnstile>\n        subst ?s24 (a_conc ant)) |`|\n    propositional.f_antecedent impI\n 3. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}|})\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (intro conjI; simp; rule xy_update)"], ["proof (prove)\ngoal (4 subgoals):\n 1. ?f59 = undefined(''X'' := A, ''Y'' := Fun imp [B, C])\n 2. {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|} =\n    (\\<lambda>ant.\n        subst ?s24 |`| a_hyps ant |\\<union>|\n        {|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        subst ?s24 (a_conc ant)) |`|\n    propositional.f_antecedent impI\n 3. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}|})\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})\nflex-flex pairs:\n  ?f59 ''Y'' \\<equiv>\\<^sup>? ?s24 ''Y''\n  ?f59 ''X'' \\<equiv>\\<^sup>? ?s24 ''X''", "apply (solves simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. {|{|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]|} =\n    (\\<lambda>ant.\n        subst (undefined(''X'' := A, ''Y'' := Fun imp [B, C])) |`|\n        a_hyps ant |\\<union>|\n        {|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        subst (undefined(''X'' := A, ''Y'' := Fun imp [B, C]))\n         (a_conc ant)) |`|\n    propositional.f_antecedent impI\n 2. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}|})\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>fastforce simp: propositional.f_antecedent_def\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}|})\n 2. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task1_1.wf)"], ["proof (prove)\ngoal (4 subgoals):\n 1. snd (tree.root\n          (Node\n            ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n             NatRule (impI, Fun imp [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n                NatRule (impE, Y))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun imp [Fun and [A, B], C],\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                   Fun and [A, B],\n                   NatRule (andI, Fun and [X, Y]))\n                  {|Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                      Axiom)\n                     {||},\n                    Node\n                     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                      Axiom)\n                     {||}|}|}|}))\n    \\<in> task1_1.R\n 2. task1_1.effStep\n     (tree.root\n       (Node\n         ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n          NatRule (impI, Fun imp [X, Y]))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n             NatRule (impE, Y))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun imp [Fun and [A, B], C],\n                Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun and [A, B],\n                NatRule (andI, Fun and [X, Y]))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                   Axiom)\n                  {||}|}|}|}))\n     ((fst \\<circ> tree.root) |`|\n      cont\n       (Node\n         ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n          NatRule (impI, Fun imp [X, Y]))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n             NatRule (impE, Y))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun imp [Fun and [A, B], C],\n                Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun and [A, B],\n                NatRule (andI, Fun and [X, Y]))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                   Axiom)\n                  {||}|}|}|}))\n 3. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>clarsimp; metis n_impI snth_smap snth_sset\\<close>)"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.effStep\n     (tree.root\n       (Node\n         ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n          NatRule (impI, Fun imp [X, Y]))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n             NatRule (impE, Y))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun imp [Fun and [A, B], C],\n                Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun and [A, B],\n                NatRule (andI, Fun and [X, Y]))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                   Axiom)\n                  {||}|}|}|}))\n     ((fst \\<circ> tree.root) |`|\n      cont\n       (Node\n         ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n          NatRule (impI, Fun imp [X, Y]))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n             NatRule (impE, Y))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun imp [Fun and [A, B], C],\n                Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun and [A, B],\n                NatRule (andI, Fun and [X, Y]))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                   Axiom)\n                  {||}|}|}|}))\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.eff (NatRule (impI, Fun imp [X, Y]))\n     ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C])\n     {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|}\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task1_1.eff_NatRuleI [unfolded propositional.freshen_def, simplified])"], ["proof (prove)\ngoal (5 subgoals):\n 1. task2_11.natEff_Inst (impI, Fun imp [X, Y]) ?c116 ?ants116\n 2. ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C]) =\n    (?\\<Gamma>116 \\<turnstile> subst ?s116 ?c116)\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|} =\n    (\\<lambda>ant.\n        subst ?s116 |`| a_hyps ant |\\<union>| ?\\<Gamma>116 \\<turnstile>\n        subst ?s116 (a_conc ant)) |`|\n    ?ants116\n 4. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply simp_all[4]"], ["proof (prove)\ngoal (5 subgoals):\n 1. task2_11.natEff_Inst (impI, Fun imp [X, Y]) ?c116 ?ants116\n 2. {|Fun imp [Fun and [A, B], C], A|} = ?\\<Gamma>116 \\<and>\n    Fun imp [B, C] = subst ?s116 ?c116\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|} =\n    (\\<lambda>ant.\n        subst ?s116 |`| a_hyps ant |\\<union>| ?\\<Gamma>116 \\<turnstile>\n        subst ?s116 (a_conc ant)) |`|\n    ?ants116\n 4. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n        NatRule (impE, Y))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun imp [Fun and [A, B], C],\n           Axiom)\n          {||},\n         Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun and [A, B],\n           NatRule (andI, Fun and [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n             {||}|}|})\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task2_11.natEff_InstI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. (impI, Fun imp [X, Y]) = (?r128, ?c116)\n 2. ?c116 \\<in> set (consequent ?r128)\n 3. ?ants116 = propositional.f_antecedent ?r128\n 4. {|Fun imp [Fun and [A, B], C], A|} = ?\\<Gamma>116 \\<and>\n    Fun imp [B, C] = subst ?s116 ?c116\n 5. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|} =\n    (\\<lambda>ant.\n        subst ?s116 |`| a_hyps ant |\\<union>| ?\\<Gamma>116 \\<turnstile>\n        subst ?s116 (a_conc ant)) |`|\n    ?ants116\n 6. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n        NatRule (impE, Y))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun imp [Fun and [A, B], C],\n           Axiom)\n          {||},\n         Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun and [A, B],\n           NatRule (andI, Fun and [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n             {||}|}|})\n 7. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. Fun imp [X, Y] \\<in> set (consequent impI)\n 2. ?ants116 = propositional.f_antecedent impI\n 3. {|Fun imp [Fun and [A, B], C], A|} = ?\\<Gamma>116 \\<and>\n    Fun imp [B, C] = subst ?s116 (Fun imp [X, Y])\n 4. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|} =\n    (\\<lambda>ant.\n        subst ?s116 |`| a_hyps ant |\\<union>| ?\\<Gamma>116 \\<turnstile>\n        subst ?s116 (a_conc ant)) |`|\n    ?ants116\n 5. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n        NatRule (impE, Y))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun imp [Fun and [A, B], C],\n           Axiom)\n          {||},\n         Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun and [A, B],\n           NatRule (andI, Fun and [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n             {||}|}|})\n 6. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. ?ants116 = propositional.f_antecedent impI\n 2. {|Fun imp [Fun and [A, B], C], A|} = ?\\<Gamma>116 \\<and>\n    Fun imp [B, C] = subst ?s116 (Fun imp [X, Y])\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|} =\n    (\\<lambda>ant.\n        subst ?s116 |`| a_hyps ant |\\<union>| ?\\<Gamma>116 \\<turnstile>\n        subst ?s116 (a_conc ant)) |`|\n    ?ants116\n 4. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n        NatRule (impE, Y))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun imp [Fun and [A, B], C],\n           Axiom)\n          {||},\n         Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun and [A, B],\n           NatRule (andI, Fun and [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n             {||}|}|})\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. {|Fun imp [Fun and [A, B], C], A|} = ?\\<Gamma>116 \\<and>\n    Fun imp [B, C] = subst ?s116 (Fun imp [X, Y])\n 2. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|} =\n    (\\<lambda>ant.\n        subst ?s116 |`| a_hyps ant |\\<union>| ?\\<Gamma>116 \\<turnstile>\n        subst ?s116 (a_conc ant)) |`|\n    propositional.f_antecedent impI\n 3. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n        NatRule (impE, Y))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun imp [Fun and [A, B], C],\n           Axiom)\n          {||},\n         Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun and [A, B],\n           NatRule (andI, Fun and [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n             {||}|}|})\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (intro conjI; simp; rule xy_update)"], ["proof (prove)\ngoal (4 subgoals):\n 1. ?f151 = undefined(''X'' := B, ''Y'' := C)\n 2. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|} =\n    (\\<lambda>ant.\n        subst ?s116 |`| a_hyps ant |\\<union>|\n        {|Fun imp [Fun and [A, B], C], A|} \\<turnstile>\n        subst ?s116 (a_conc ant)) |`|\n    propositional.f_antecedent impI\n 3. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n        NatRule (impE, Y))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun imp [Fun and [A, B], C],\n           Axiom)\n          {||},\n         Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun and [A, B],\n           NatRule (andI, Fun and [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n             {||}|}|})\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})\nflex-flex pairs:\n  ?f151 ''Y'' \\<equiv>\\<^sup>? ?s116 ''Y''\n  ?f151 ''X'' \\<equiv>\\<^sup>? ?s116 ''X''", "apply (solves simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C|} =\n    (\\<lambda>ant.\n        subst (undefined(''X'' := B, ''Y'' := C)) |`| a_hyps ant |\\<union>|\n        {|Fun imp [Fun and [A, B], C], A|} \\<turnstile>\n        subst (undefined(''X'' := B, ''Y'' := C)) (a_conc ant)) |`|\n    propositional.f_antecedent impI\n 2. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n        NatRule (impE, Y))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun imp [Fun and [A, B], C],\n           Axiom)\n          {||},\n         Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun and [A, B],\n           NatRule (andI, Fun and [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n             {||}|}|})\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>fastforce simp: propositional.f_antecedent_def\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. task1_1.wf\n     (Node\n       ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n        NatRule (impE, Y))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun imp [Fun and [A, B], C],\n           Axiom)\n          {||},\n         Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n           Fun and [A, B],\n           NatRule (andI, Fun and [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n             {||}|}|})\n 2. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task1_1.wf)"], ["proof (prove)\ngoal (4 subgoals):\n 1. snd (tree.root\n          (Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n             NatRule (impE, Y))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun imp [Fun and [A, B], C],\n                Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                Fun and [A, B],\n                NatRule (andI, Fun and [X, Y]))\n               {|Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                   Axiom)\n                  {||},\n                 Node\n                  ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                   Axiom)\n                  {||}|}|}))\n    \\<in> task1_1.R\n 2. task1_1.effStep\n     (tree.root\n       (Node\n         ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n          NatRule (impE, Y))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n             Fun imp [Fun and [A, B], C],\n             Axiom)\n            {||},\n           Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n             Fun and [A, B],\n             NatRule (andI, Fun and [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n               {||}|}|}))\n     ((fst \\<circ> tree.root) |`|\n      cont\n       (Node\n         ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n          NatRule (impE, Y))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n             Fun imp [Fun and [A, B], C],\n             Axiom)\n            {||},\n           Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n             Fun and [A, B],\n             NatRule (andI, Fun and [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n               {||}|}|}))\n 3. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>clarsimp; metis n_impE snth_smap snth_sset\\<close>)"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.effStep\n     (tree.root\n       (Node\n         ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n          NatRule (impE, Y))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n             Fun imp [Fun and [A, B], C],\n             Axiom)\n            {||},\n           Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n             Fun and [A, B],\n             NatRule (andI, Fun and [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n               {||}|}|}))\n     ((fst \\<circ> tree.root) |`|\n      cont\n       (Node\n         ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n          NatRule (impE, Y))\n         {|Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n             Fun imp [Fun and [A, B], C],\n             Axiom)\n            {||},\n           Node\n            ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n             Fun and [A, B],\n             NatRule (andI, Fun and [X, Y]))\n            {|Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n               {||},\n              Node\n               ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n               {||}|}|}))\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.eff (NatRule (impE, Y))\n     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C)\n     {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n       Fun imp [Fun and [A, B], C],\n       {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]|}\n 2. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task1_1.eff_NatRuleI [unfolded propositional.freshen_def, simplified, where s=\"undefined(''Y'':=C,''X'':=Fun and [A,B])\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. task2_11.natEff_Inst (impE, Y) ?c270 ?ants270\n 2. ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C) =\n    (?\\<Gamma>270 \\<turnstile>\n     subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) ?c270)\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n      Fun imp [Fun and [A, B], C],\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]|} =\n    (\\<lambda>ant.\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) |`|\n        a_hyps ant |\\<union>|\n        ?\\<Gamma>270 \\<turnstile>\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B]))\n         (a_conc ant)) |`|\n    ?ants270\n 4. \\<And>t'.\n       t' |\\<in>|\n       cont\n        (Node\n          ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n           NatRule (impE, Y))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun imp [Fun and [A, B], C],\n              Axiom)\n             {||},\n            Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n              Fun and [A, B],\n              NatRule (andI, Fun and [X, Y]))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                 Axiom)\n                {||}|}|}) \\<Longrightarrow>\n       task1_1.wf t'\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply simp_all[4]"], ["proof (prove)\ngoal (5 subgoals):\n 1. task2_11.natEff_Inst (impE, Y) ?c270 ?ants270\n 2. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>270 \\<and>\n    C = subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) ?c270\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n      Fun imp [Fun and [A, B], C],\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]|} =\n    (\\<lambda>ant.\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) |`|\n        a_hyps ant |\\<union>|\n        ?\\<Gamma>270 \\<turnstile>\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B]))\n         (a_conc ant)) |`|\n    ?ants270\n 4. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n         Fun imp [Fun and [A, B], C],\n         Axiom)\n        {||} \\<or>\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task2_11.natEff_InstI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. (impE, Y) = (?r276, ?c270)\n 2. ?c270 \\<in> set (consequent ?r276)\n 3. ?ants270 = propositional.f_antecedent ?r276\n 4. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>270 \\<and>\n    C = subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) ?c270\n 5. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n      Fun imp [Fun and [A, B], C],\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]|} =\n    (\\<lambda>ant.\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) |`|\n        a_hyps ant |\\<union>|\n        ?\\<Gamma>270 \\<turnstile>\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B]))\n         (a_conc ant)) |`|\n    ?ants270\n 6. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n         Fun imp [Fun and [A, B], C],\n         Axiom)\n        {||} \\<or>\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 7. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. Y \\<in> set (consequent impE)\n 2. ?ants270 = propositional.f_antecedent impE\n 3. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>270 \\<and>\n    C = subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) Y\n 4. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n      Fun imp [Fun and [A, B], C],\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]|} =\n    (\\<lambda>ant.\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) |`|\n        a_hyps ant |\\<union>|\n        ?\\<Gamma>270 \\<turnstile>\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B]))\n         (a_conc ant)) |`|\n    ?ants270\n 5. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n         Fun imp [Fun and [A, B], C],\n         Axiom)\n        {||} \\<or>\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 6. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. ?ants270 = propositional.f_antecedent impE\n 2. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>270 \\<and>\n    C = subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) Y\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n      Fun imp [Fun and [A, B], C],\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]|} =\n    (\\<lambda>ant.\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) |`|\n        a_hyps ant |\\<union>|\n        ?\\<Gamma>270 \\<turnstile>\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B]))\n         (a_conc ant)) |`|\n    ?ants270\n 4. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n         Fun imp [Fun and [A, B], C],\n         Axiom)\n        {||} \\<or>\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>270 \\<and>\n    C = subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) Y\n 2. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n      Fun imp [Fun and [A, B], C],\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]|} =\n    (\\<lambda>ant.\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) |`|\n        a_hyps ant |\\<union>|\n        ?\\<Gamma>270 \\<turnstile>\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B]))\n         (a_conc ant)) |`|\n    propositional.f_antecedent impE\n 3. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n         Fun imp [Fun and [A, B], C],\n         Axiom)\n        {||} \\<or>\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>intro conjI; simp\\<close>)"], ["proof (prove)\ngoal (3 subgoals):\n 1. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n      Fun imp [Fun and [A, B], C],\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]|} =\n    (\\<lambda>ant.\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B])) |`|\n        a_hyps ant |\\<union>|\n        {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n        subst (undefined(''Y'' := C, ''X'' := Fun and [A, B]))\n         (a_conc ant)) |`|\n    propositional.f_antecedent impE\n 2. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n         Fun imp [Fun and [A, B], C],\n         Axiom)\n        {||} \\<or>\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>simp add: propositional.f_antecedent_def\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n         Fun imp [Fun and [A, B], C],\n         Axiom)\n        {||} \\<or>\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 2. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n         Fun imp [Fun and [A, B], C],\n         Axiom)\n        {||} \\<Longrightarrow>\n       task1_1.wf t'\n 2. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (auto intro: task1_1.wf intro!: task1_1.eff.intros(1))[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.wf t'\n 2. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task1_1.wf)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       snd (tree.root t') \\<in> task1_1.R\n 2. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.effStep (tree.root t') ((fst \\<circ> tree.root) |`| cont t')\n 3. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a |\\<in>| cont t'\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>clarsimp; metis n_andI snth_smap snth_sset\\<close>)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t'.\n       t' =\n       Node\n        ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B],\n         NatRule (andI, Fun and [X, Y]))\n        {|Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n           {||},\n          Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n           {||}|} \\<Longrightarrow>\n       task1_1.effStep (tree.root t') ((fst \\<circ> tree.root) |`| cont t')\n 2. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a |\\<in>| cont t'\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. task1_1.eff (NatRule (andI, Fun and [X, Y]))\n     ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B])\n     {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n       {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|}\n 2. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a |\\<in>| cont t'\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task1_1.eff_NatRuleI [unfolded propositional.freshen_def, simplified])"], ["proof (prove)\ngoal (5 subgoals):\n 1. task2_11.natEff_Inst (andI, Fun and [X, Y]) ?c329 ?ants329\n 2. ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> Fun and [A, B]) =\n    (?\\<Gamma>329 \\<turnstile> subst ?s329 ?c329)\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|} =\n    (\\<lambda>ant.\n        subst ?s329 |`| a_hyps ant |\\<union>| ?\\<Gamma>329 \\<turnstile>\n        subst ?s329 (a_conc ant)) |`|\n    ?ants329\n 4. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a |\\<in>| cont t'\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply simp_all[4]"], ["proof (prove)\ngoal (5 subgoals):\n 1. task2_11.natEff_Inst (andI, Fun and [X, Y]) ?c329 ?ants329\n 2. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>329 \\<and>\n    Fun and [A, B] = subst ?s329 ?c329\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|} =\n    (\\<lambda>ant.\n        subst ?s329 |`| a_hyps ant |\\<union>| ?\\<Gamma>329 \\<turnstile>\n        subst ?s329 (a_conc ant)) |`|\n    ?ants329\n 4. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n         {||} \\<or>\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n         {||}\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (rule task2_11.natEff_InstI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. (andI, Fun and [X, Y]) = (?r341, ?c329)\n 2. ?c329 \\<in> set (consequent ?r341)\n 3. ?ants329 = propositional.f_antecedent ?r341\n 4. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>329 \\<and>\n    Fun and [A, B] = subst ?s329 ?c329\n 5. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|} =\n    (\\<lambda>ant.\n        subst ?s329 |`| a_hyps ant |\\<union>| ?\\<Gamma>329 \\<turnstile>\n        subst ?s329 (a_conc ant)) |`|\n    ?ants329\n 6. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n         {||} \\<or>\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n         {||}\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 7. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. Fun and [X, Y] \\<in> set (consequent andI)\n 2. ?ants329 = propositional.f_antecedent andI\n 3. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>329 \\<and>\n    Fun and [A, B] = subst ?s329 (Fun and [X, Y])\n 4. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|} =\n    (\\<lambda>ant.\n        subst ?s329 |`| a_hyps ant |\\<union>| ?\\<Gamma>329 \\<turnstile>\n        subst ?s329 (a_conc ant)) |`|\n    ?ants329\n 5. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n         {||} \\<or>\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n         {||}\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 6. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. ?ants329 = propositional.f_antecedent andI\n 2. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>329 \\<and>\n    Fun and [A, B] = subst ?s329 (Fun and [X, Y])\n 3. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|} =\n    (\\<lambda>ant.\n        subst ?s329 |`| a_hyps ant |\\<union>| ?\\<Gamma>329 \\<turnstile>\n        subst ?s329 (a_conc ant)) |`|\n    ?ants329\n 4. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n         {||} \\<or>\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n         {||}\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 5. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. {|Fun imp [Fun and [A, B], C], A, B|} = ?\\<Gamma>329 \\<and>\n    Fun and [A, B] = subst ?s329 (Fun and [X, Y])\n 2. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|} =\n    (\\<lambda>ant.\n        subst ?s329 |`| a_hyps ant |\\<union>| ?\\<Gamma>329 \\<turnstile>\n        subst ?s329 (a_conc ant)) |`|\n    propositional.f_antecedent andI\n 3. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n         {||} \\<or>\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n         {||}\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (intro conjI; simp; rule xy_update)"], ["proof (prove)\ngoal (4 subgoals):\n 1. ?f364 = undefined(''X'' := A, ''Y'' := B)\n 2. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|} =\n    (\\<lambda>ant.\n        subst ?s329 |`| a_hyps ant |\\<union>|\n        {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n        subst ?s329 (a_conc ant)) |`|\n    propositional.f_antecedent andI\n 3. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n         {||} \\<or>\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n         {||}\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 4. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})\nflex-flex pairs:\n  ?f364 ''Y'' \\<equiv>\\<^sup>? ?s329 ''Y''\n  ?f364 ''X'' \\<equiv>\\<^sup>? ?s329 ''X''", "apply (solves simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. {|{|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n      {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B|} =\n    (\\<lambda>ant.\n        subst (undefined(''X'' := A, ''Y'' := B)) |`| a_hyps ant |\\<union>|\n        {|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n        subst (undefined(''X'' := A, ''Y'' := B)) (a_conc ant)) |`|\n    propositional.f_antecedent andI\n 2. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n         {||} \\<or>\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n         {||}\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>simp add: propositional.f_antecedent_def\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t' t'a.\n       \\<lbrakk>t' =\n                Node\n                 ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                  Fun and [A, B],\n                  NatRule (andI, Fun and [X, Y]))\n                 {|Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                     Axiom)\n                    {||},\n                   Node\n                    ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                     Axiom)\n                    {||}|};\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n         {||} \\<or>\n        t'a =\n        Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n         {||}\\<rbrakk>\n       \\<Longrightarrow> task1_1.wf t'a\n 2. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'a.\n       t'a =\n       Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n        {||} \\<or>\n       t'a =\n       Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n        {||} \\<Longrightarrow>\n       task1_1.wf t'a\n 2. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t'a.\n       t'a =\n       Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A, Axiom)\n        {||} \\<Longrightarrow>\n       task1_1.wf t'a\n 2. \\<And>t'a.\n       t'a =\n       Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n        {||} \\<Longrightarrow>\n       task1_1.wf t'a\n 3. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>rule task1_1.wf; auto intro: task1_1.eff.intros(1)\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'a.\n       t'a =\n       Node ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B, Axiom)\n        {||} \\<Longrightarrow>\n       task1_1.wf t'a\n 2. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "apply (solves \\<open>rule task1_1.wf; auto intro: task1_1.eff.intros(1)\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. tfinite\n     (Node\n       ({|Fun imp [Fun and [A, B], C]|} \\<turnstile>\n        Fun imp [A, Fun imp [B, C]],\n        NatRule (impI, Fun imp [X, Y]))\n       {|Node\n          ({|Fun imp [Fun and [A, B], C], A|} \\<turnstile> Fun imp [B, C],\n           NatRule (impI, Fun imp [X, Y]))\n          {|Node\n             ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> C,\n              NatRule (impE, Y))\n             {|Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun imp [Fun and [A, B], C],\n                 Axiom)\n                {||},\n               Node\n                ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile>\n                 Fun and [A, B],\n                 NatRule (andI, Fun and [X, Y]))\n                {|Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> A,\n                    Axiom)\n                   {||},\n                  Node\n                   ({|Fun imp [Fun and [A, B], C], A, B|} \\<turnstile> B,\n                    Axiom)\n                   {||}|}|}|}|})", "by (rule tfinite.intros; auto)+"], ["", "interpretation Tasked_Proof_Graph\n  \"curry (SOME f. bij f):: nat \\<Rightarrow> string \\<Rightarrow> string\"\n  \"\\<lambda>_. id\"\n  \"\\<lambda>_. {}\"\n  \"closed :: (string, prop_funs) pform \\<Rightarrow> bool\"\n  subst\n  \"\\<lambda>_. {}\"\n  \"\\<lambda>_. id\"\n  \"Var undefined\"\n  antecedent\n  consequent\n  prop_rules\n  \"[Fun imp [Fun and [A,B],C]]\"\n  \"[Fun imp [A,Fun imp [B,C]]]\"\n  task2_11.vertices \n  task2_11.nodeOf \n  task2_11.edges\n  task2_11.vidx\n  task2_11.inst"], ["proof (prove)\ngoal (1 subgoal):\n 1. Tasked_Proof_Graph (curry (SOME f. bij f)) (\\<lambda>_. id)\n     (\\<lambda>_. {}) Propositional_Formulas.closed subst (\\<lambda>_. {})\n     (\\<lambda>_. id) (Var undefined) antecedent consequent prop_rules\n     [Fun imp [Fun and [A, B], C]] [Fun imp [A, Fun imp [B, C]]]\n     task2_11.vertices task2_11.nodeOf task2_11.edges task2_11.vidx\n     task2_11.inst", "by unfold_locales"], ["", "end"], ["", "end"]]}