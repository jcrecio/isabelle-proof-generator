{"file_name": "/home/qj213/afp-2021-10-22/thys/Incredible_Proof_Machine/Indexed_FSet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Incredible_Proof_Machine", "problem_names": ["lemma mem_fset_from_list[simp]: \"x |\\<in>| fset_from_list l  \\<longleftrightarrow> x \\<in> set l\"", "lemma fimage_fset_from_list[simp]: \"f |`| fset_from_list l = fset_from_list (map f l)\"", "lemma fset_fset_from_list[simp]: \"fset (fset_from_list l) = set l\"", "lemmas fset_simps[simp] = set_simps[Transfer.transferred]", "lemma size_fset_from_list[simp]: \"distinct l \\<Longrightarrow> size (fset_from_list l) = length l\"", "lemma fset_from_list_of_fset[simp]: \"fset_from_list (list_of_fset s) = s\"\n  and distinct_list_of_fset[simp]: \"distinct (list_of_fset s)\"", "lemma length_list_of_fset[simp]: \"length (list_of_fset s) = size s\"", "lemma nth_list_of_fset_mem[simp]: \"i < size s \\<Longrightarrow> list_of_fset s ! i |\\<in>| s\"", "lemma indexed_fmember_is_fmember: \"x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow> x |\\<in>| s\"", "lemma fmember_is_indexed_fmember:\n  assumes \"x |\\<in>| s\"\n  shows \"\\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s\"", "lemma indexed_fmember_unique: \"x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow> y |\\<in>|\\<^bsub>j\\<^esub> s \\<Longrightarrow> x = y \\<longleftrightarrow> i = j\"", "lemma mem_set_indexed_members:\n  \"(i,x) \\<in> set (indexed_members s) \\<longleftrightarrow> x |\\<in>|\\<^bsub>i\\<^esub> s\"", "lemma mem_set_indexed_members'[simp]:\n  \"t \\<in> set (indexed_members s) \\<longleftrightarrow> snd t |\\<in>|\\<^bsub>fst t\\<^esub> s\"", "lemma fnth_indexed_fmember: \"i < size s \\<Longrightarrow> s |!| i |\\<in>|\\<^bsub>i\\<^esub> s\"", "lemma indexed_fmember_fnth: \"x |\\<in>|\\<^bsub>i\\<^esub> s \\<longleftrightarrow> (s |!| i = x \\<and> i < size s)\"", "lemma fidx_eq[simp]: \"x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow> fidx s x = i\"", "lemma fidx_inj[simp]: \"x |\\<in>| s \\<Longrightarrow> y |\\<in>| s \\<Longrightarrow> fidx s x = fidx s y \\<longleftrightarrow> x = y\"", "lemma inj_on_fidx: \"inj_on (fidx vertices) (fset vertices)\""], "translations": [["", "lemma mem_fset_from_list[simp]: \"x |\\<in>| fset_from_list l  \\<longleftrightarrow> x \\<in> set l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x |\\<in>| fset_from_list l) = (x \\<in> set l)", "by transfer rule"], ["", "lemma fimage_fset_from_list[simp]: \"f |`| fset_from_list l = fset_from_list (map f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |`| fset_from_list l = fset_from_list (map f l)", "by transfer auto"], ["", "lemma fset_fset_from_list[simp]: \"fset (fset_from_list l) = set l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fset (fset_from_list l) = set l", "by transfer auto"], ["", "lemmas fset_simps[simp] = set_simps[Transfer.transferred]"], ["", "lemma size_fset_from_list[simp]: \"distinct l \\<Longrightarrow> size (fset_from_list l) = length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct l \\<Longrightarrow> size (fset_from_list l) = length l", "by (induction l) auto"], ["", "definition list_of_fset :: \"'a fset \\<Rightarrow> 'a list\" where\n  \"list_of_fset s = (SOME l. fset_from_list l = s \\<and> distinct l)\""], ["", "lemma fset_from_list_of_fset[simp]: \"fset_from_list (list_of_fset s) = s\"\n  and distinct_list_of_fset[simp]: \"distinct (list_of_fset s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fset_from_list (list_of_fset s) = s &&& distinct (list_of_fset s)", "unfolding atomize_conj list_of_fset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fset_from_list (SOME l. fset_from_list l = s \\<and> distinct l) =\n    s \\<and>\n    distinct (SOME l. fset_from_list l = s \\<and> distinct l)", "by (transfer, rule someI_ex, rule finite_distinct_list)"], ["", "lemma length_list_of_fset[simp]: \"length (list_of_fset s) = size s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (list_of_fset s) = size s", "by (metis distinct_list_of_fset fset_from_list_of_fset size_fset_from_list)"], ["", "lemma nth_list_of_fset_mem[simp]: \"i < size s \\<Longrightarrow> list_of_fset s ! i |\\<in>| s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < size s \\<Longrightarrow> list_of_fset s ! i |\\<in>| s", "by (metis fset_from_list_of_fset length_list_of_fset mem_fset_from_list nth_mem)"], ["", "inductive indexed_fmember :: \"'a \\<Rightarrow> nat \\<Rightarrow> 'a fset \\<Rightarrow> bool\" (\"_ |\\<in>|\\<^bsub>_\\<^esub> _\" [50,50,50] 50 ) where\n  \"i < size s \\<Longrightarrow> list_of_fset s ! i |\\<in>|\\<^bsub>i\\<^esub> s\""], ["", "lemma indexed_fmember_is_fmember: \"x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow> x |\\<in>| s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow> x |\\<in>| s", "proof (induction rule: indexed_fmember.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i s. i < size s \\<Longrightarrow> list_of_fset s ! i |\\<in>| s", "case (1 i s)"], ["proof (state)\nthis:\n  i < size s\n\ngoal (1 subgoal):\n 1. \\<And>i s. i < size s \\<Longrightarrow> list_of_fset s ! i |\\<in>| s", "hence \"i < length (list_of_fset s)\""], ["proof (prove)\nusing this:\n  i < size s\n\ngoal (1 subgoal):\n 1. i < length (list_of_fset s)", "by (metis length_list_of_fset)"], ["proof (state)\nthis:\n  i < length (list_of_fset s)\n\ngoal (1 subgoal):\n 1. \\<And>i s. i < size s \\<Longrightarrow> list_of_fset s ! i |\\<in>| s", "hence \"list_of_fset s ! i \\<in> set (list_of_fset s)\""], ["proof (prove)\nusing this:\n  i < length (list_of_fset s)\n\ngoal (1 subgoal):\n 1. list_of_fset s ! i \\<in> set (list_of_fset s)", "by (rule nth_mem)"], ["proof (state)\nthis:\n  list_of_fset s ! i \\<in> set (list_of_fset s)\n\ngoal (1 subgoal):\n 1. \\<And>i s. i < size s \\<Longrightarrow> list_of_fset s ! i |\\<in>| s", "thus \"list_of_fset s ! i |\\<in>| s\""], ["proof (prove)\nusing this:\n  list_of_fset s ! i \\<in> set (list_of_fset s)\n\ngoal (1 subgoal):\n 1. list_of_fset s ! i |\\<in>| s", "by (metis mem_fset_from_list fset_from_list_of_fset)"], ["proof (state)\nthis:\n  list_of_fset s ! i |\\<in>| s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmember_is_indexed_fmember:\n  assumes \"x |\\<in>| s\"\n  shows \"\\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s", "from assms"], ["proof (chain)\npicking this:\n  x |\\<in>| s", "have \"x \\<in> set (list_of_fset s)\""], ["proof (prove)\nusing this:\n  x |\\<in>| s\n\ngoal (1 subgoal):\n 1. x \\<in> set (list_of_fset s)", "using mem_fset_from_list"], ["proof (prove)\nusing this:\n  x |\\<in>| s\n  (?x |\\<in>| fset_from_list ?l) = (?x \\<in> set ?l)\n\ngoal (1 subgoal):\n 1. x \\<in> set (list_of_fset s)", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> set (list_of_fset s)\n\ngoal (1 subgoal):\n 1. \\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s", "then"], ["proof (chain)\npicking this:\n  x \\<in> set (list_of_fset s)", "obtain i where \"i < length (list_of_fset s)\" and \"x = list_of_fset s ! i\""], ["proof (prove)\nusing this:\n  x \\<in> set (list_of_fset s)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < length (list_of_fset s);\n         x = list_of_fset s ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis in_set_conv_nth)"], ["proof (state)\nthis:\n  i < length (list_of_fset s)\n  x = list_of_fset s ! i\n\ngoal (1 subgoal):\n 1. \\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s", "hence \"x |\\<in>|\\<^bsub>i\\<^esub> s\""], ["proof (prove)\nusing this:\n  i < length (list_of_fset s)\n  x = list_of_fset s ! i\n\ngoal (1 subgoal):\n 1. x |\\<in>|\\<^bsub>i\\<^esub> s", "by (simp add: indexed_fmember.simps)"], ["proof (state)\nthis:\n  x |\\<in>|\\<^bsub>i\\<^esub> s\n\ngoal (1 subgoal):\n 1. \\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  x |\\<in>|\\<^bsub>i\\<^esub> s\n\ngoal (1 subgoal):\n 1. \\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s", ".."], ["proof (state)\nthis:\n  \\<exists>i. x |\\<in>|\\<^bsub>i\\<^esub> s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma indexed_fmember_unique: \"x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow> y |\\<in>|\\<^bsub>j\\<^esub> s \\<Longrightarrow> x = y \\<longleftrightarrow> i = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x |\\<in>|\\<^bsub>i\\<^esub> s;\n     y |\\<in>|\\<^bsub>j\\<^esub> s\\<rbrakk>\n    \\<Longrightarrow> (x = y) = (i = j)", "by (metis distinct_list_of_fset indexed_fmember.cases length_list_of_fset nth_eq_iff_index_eq)"], ["", "definition indexed_members :: \"'a fset \\<Rightarrow> (nat \\<times> 'a) list\" where\n  \"indexed_members s = zip [0..<size s] (list_of_fset s)\""], ["", "lemma mem_set_indexed_members:\n  \"(i,x) \\<in> set (indexed_members s) \\<longleftrightarrow> x |\\<in>|\\<^bsub>i\\<^esub> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((i, x) \\<in> set (indexed_members s)) = (x |\\<in>|\\<^bsub>i\\<^esub> s)", "unfolding indexed_members_def indexed_fmember.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((i, x) \\<in> set (zip [0..<size s] (list_of_fset s))) =\n    (\\<exists>ia sa.\n        x = list_of_fset sa ! ia \\<and>\n        i = ia \\<and> s = sa \\<and> ia < size sa)", "by (force simp add: set_zip)"], ["", "lemma mem_set_indexed_members'[simp]:\n  \"t \\<in> set (indexed_members s) \\<longleftrightarrow> snd t |\\<in>|\\<^bsub>fst t\\<^esub> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<in> set (indexed_members s)) =\n    (snd t |\\<in>|\\<^bsub>fst t\\<^esub> s)", "by (cases t, simp add: mem_set_indexed_members)"], ["", "definition fnth (infixl \"|!|\" 100)  where\n  \"s |!| n = list_of_fset s ! n\""], ["", "lemma fnth_indexed_fmember: \"i < size s \\<Longrightarrow> s |!| i |\\<in>|\\<^bsub>i\\<^esub> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < size s \\<Longrightarrow> s |!| i |\\<in>|\\<^bsub>i\\<^esub> s", "unfolding fnth_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < size s \\<Longrightarrow>\n    list_of_fset s ! i |\\<in>|\\<^bsub>i\\<^esub> s", "by (rule indexed_fmember.intros)"], ["", "lemma indexed_fmember_fnth: \"x |\\<in>|\\<^bsub>i\\<^esub> s \\<longleftrightarrow> (s |!| i = x \\<and> i < size s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x |\\<in>|\\<^bsub>i\\<^esub> s) = (s |!| i = x \\<and> i < size s)", "unfolding fnth_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x |\\<in>|\\<^bsub>i\\<^esub> s) =\n    (list_of_fset s ! i = x \\<and> i < size s)", "by (metis indexed_fmember.simps)"], ["", "end"], ["", "definition fidx :: \"'a fset \\<Rightarrow> 'a \\<Rightarrow> nat\" where\n  \"fidx s x = (SOME i. x |\\<in>|\\<^bsub>i\\<^esub> s)\""], ["", "lemma fidx_eq[simp]: \"x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow> fidx s x = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow> fidx s x = i", "unfolding fidx_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x |\\<in>|\\<^bsub>i\\<^esub> s \\<Longrightarrow>\n    (SOME i. x |\\<in>|\\<^bsub>i\\<^esub> s) = i", "by (rule someI2)(auto simp add: indexed_fmember_fnth fnth_def nth_eq_iff_index_eq)"], ["", "lemma fidx_inj[simp]: \"x |\\<in>| s \\<Longrightarrow> y |\\<in>| s \\<Longrightarrow> fidx s x = fidx s y \\<longleftrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x |\\<in>| s; y |\\<in>| s\\<rbrakk>\n    \\<Longrightarrow> (fidx s x = fidx s y) = (x = y)", "by (auto dest!: fmember_is_indexed_fmember simp add: indexed_fmember_unique)"], ["", "lemma inj_on_fidx: \"inj_on (fidx vertices) (fset vertices)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (fidx vertices) (fset vertices)", "by (rule inj_onI) (auto simp: fmember.rep_eq [symmetric])"], ["", "end"]]}