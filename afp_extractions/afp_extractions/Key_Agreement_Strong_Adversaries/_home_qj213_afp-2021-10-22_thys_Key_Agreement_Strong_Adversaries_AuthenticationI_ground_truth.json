{"file_name": "/home/qj213/afp-2021-10-22/thys/Key_Agreement_Strong_Adversaries/AuthenticationI.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Key_Agreement_Strong_Adversaries", "problem_names": ["lemmas a0i_running_def = a0n_running_def", "lemmas a0i_defs = a0n_defs a0i_def a0i_trans_def a0i_commit_def", "lemma a0i_obs [simp]: \"obs a0i = id\"", "lemma a0i_anyP_observable [iff]: \"observable (obs a0i) P\"", "lemmas a0i_agreementI = \n  a0i_agreement_def [THEN setc_def_to_intro, rule_format]", "lemmas a0i_agreementE [elim] = \n  a0i_agreement_def [THEN setc_def_to_elim, rule_format]", "lemmas a0i_agreementD = \n  a0i_agreement_def [THEN setc_def_to_dest, rule_format, rotated 1]", "lemma PO_a0i_agreement_init [iff]:\n  \"init a0i \\<subseteq> a0i_agreement\"", "lemma PO_a0i_agreement_trans [iff]:\n  \"{a0i_agreement} trans a0i {> a0i_agreement}\"", "lemma PO_a0i_agreement [iff]: \"reach a0i \\<subseteq> a0i_agreement\"", "lemma PO_a0i_obs_agreement [iff]: \"oreach a0i \\<subseteq> a0i_agreement\"", "lemma PO_a0i_running_refines_a0n_running:\n  \"{R0n0i} a0n_running A B M, a0i_running A B M {> R0n0i}\"", "lemma PO_a0i_commit_refines_a0n_commit:\n  \"{R0n0i} a0n_commit A B M, a0i_commit A B M {> R0n0i}\"", "lemmas PO_a0i_trans_refines_a0n_trans = \n  PO_a0i_running_refines_a0n_running\n  PO_a0i_commit_refines_a0n_commit", "lemma PO_a0i_refines_init_a0n [iff]:\n  \"init a0i \\<subseteq> R0n0i``(init a0n)\"", "lemma PO_a0i_refines_trans_a0n [iff]:\n  \"{R0n0i} trans a0n, trans a0i {> R0n0i}\"", "lemma PO_obs_consistent [iff]:\n  \"obs_consistent R0n0i med0n0i a0n a0i\"", "lemma PO_a0i_refines_a0n:\n  \"refines R0n0i med0n0i a0n a0i\"", "lemma iagreement_implies_niagreement [iff]: \"a0i_agreement \\<subseteq> a0n_agreement\"", "lemma PO_a0i_a0n_agreement [iff]: \"reach a0i \\<subseteq> a0n_agreement\"", "lemma PO_a0i_obs_a0n_agreement [iff]: \"oreach a0i \\<subseteq> a0n_agreement\""], "translations": [["", "lemmas a0i_running_def = a0n_running_def"], ["", "definition \n  a0i_commit :: \"agent \\<Rightarrow> agent \\<Rightarrow> msg \\<Rightarrow> (a0i_state \\<times> a0i_state) set\"\nwhere \n  \"a0i_commit A B M \\<equiv> {(s, s').\n   \\<comment> \\<open>guard\\<close>\n     signals s (Commit A B M) < signals s (Running A B M) \\<and>\n   \\<comment> \\<open>actions:\\<close>\n     s' = s\\<lparr>signals := addSignal (signals s) (Commit A B M)\\<rparr>\n  }\""], ["", "definition \n  a0i_trans :: \"(a0i_state \\<times> a0i_state) set\" where\n  \"a0i_trans \\<equiv> (\\<Union> A B M. a0i_running A B M) \\<union> (\\<Union> A B M. a0i_commit A B M) \\<union> Id\""], ["", "definition \n  a0i :: \"(a0i_state,a0i_obs) spec\" where\n  \"a0i \\<equiv> \\<lparr>\n    init = a0i_init,\n    trans = a0i_trans, \n    obs = id\n  \\<rparr>\""], ["", "lemmas a0i_defs = a0n_defs a0i_def a0i_trans_def a0i_commit_def"], ["", "lemma a0i_obs [simp]: \"obs a0i = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obs a0i = id", "by (simp add: a0i_def)"], ["", "lemma a0i_anyP_observable [iff]: \"observable (obs a0i) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. observable (obs a0i) P", "by (auto)"], ["", "(**************************************************************************************************)"], ["", "subsection \\<open>Injective agreement invariant\\<close>"], ["", "(**************************************************************************************************)"], ["", "definition \n  a0i_agreement :: \"a0i_state set\" \nwhere\n  \"a0i_agreement \\<equiv> {s. \\<forall>A B M.\n    signals s (Commit A B M) \\<le> signals s (Running A B M)\n  }\""], ["", "lemmas a0i_agreementI = \n  a0i_agreement_def [THEN setc_def_to_intro, rule_format]"], ["", "lemmas a0i_agreementE [elim] = \n  a0i_agreement_def [THEN setc_def_to_elim, rule_format]"], ["", "lemmas a0i_agreementD = \n  a0i_agreement_def [THEN setc_def_to_dest, rule_format, rotated 1]"], ["", "lemma PO_a0i_agreement_init [iff]:\n  \"init a0i \\<subseteq> a0i_agreement\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init a0i \\<subseteq> a0i_agreement", "by (auto simp add: a0i_defs intro!: a0i_agreementI)"], ["", "lemma PO_a0i_agreement_trans [iff]:\n  \"{a0i_agreement} trans a0i {> a0i_agreement}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a0i_agreement} TS.trans a0i {> a0i_agreement}", "apply (auto simp add: PO_hoare_defs a0i_defs intro!: a0i_agreementI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa xb xc xd.\n       xa \\<in> a0i_agreement \\<Longrightarrow>\n       signals xa (Commit xb xc xd)\n       \\<le> Suc (signals xa (Running xb xc xd))\n 2. \\<And>A B M xa xc.\n       \\<lbrakk>xa \\<in> a0i_agreement; B \\<noteq> xc\\<rbrakk>\n       \\<Longrightarrow> signals xa (Commit A B M)\n                         \\<le> signals xa (Running A B M)\n 3. \\<And>A B M xa xb.\n       \\<lbrakk>xa \\<in> a0i_agreement; A \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> signals xa (Commit A B M)\n                         \\<le> signals xa (Running A B M)\n 4. \\<And>A B M xa xd.\n       \\<lbrakk>xa \\<in> a0i_agreement; M \\<noteq> xd\\<rbrakk>\n       \\<Longrightarrow> signals xa (Commit A B M)\n                         \\<le> signals xa (Running A B M)", "apply (auto dest: a0i_agreementD intro: le_SucI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma PO_a0i_agreement [iff]: \"reach a0i \\<subseteq> a0i_agreement\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach a0i \\<subseteq> a0i_agreement", "by (rule inv_rule_basic) (auto)"], ["", "lemma PO_a0i_obs_agreement [iff]: \"oreach a0i \\<subseteq> a0i_agreement\""], ["proof (prove)\ngoal (1 subgoal):\n 1. oreach a0i \\<subseteq> a0i_agreement", "apply (rule external_from_internal_invariant, fast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. obs a0i ` reach a0i \\<subseteq> a0i_agreement", "apply (subst a0i_def, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(**************************************************************************************************)"], ["", "subsection \\<open>Refinement\\<close>"], ["", "(**************************************************************************************************)"], ["", "definition\n  med0n0i :: \"a0i_obs \\<Rightarrow> a0i_obs\"\nwhere\n  \"med0n0i \\<equiv> id\""], ["", "definition\n  R0n0i :: \"(a0n_state \\<times> a0i_state) set\"\nwhere\n  \"R0n0i \\<equiv> Id\""], ["", "lemma PO_a0i_running_refines_a0n_running:\n  \"{R0n0i} a0n_running A B M, a0i_running A B M {> R0n0i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R0n0i} a0i_running A B M, a0i_running A B M {> R0n0i}", "by (unfold R0n0i_def) (rule relhoare_refl)"], ["", "lemma PO_a0i_commit_refines_a0n_commit:\n  \"{R0n0i} a0n_commit A B M, a0i_commit A B M {> R0n0i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R0n0i} a0n_commit A B M, a0i_commit A B M {> R0n0i}", "by (auto simp add: PO_rhoare_defs R0n0i_def a0i_defs)"], ["", "lemmas PO_a0i_trans_refines_a0n_trans = \n  PO_a0i_running_refines_a0n_running\n  PO_a0i_commit_refines_a0n_commit"], ["", "lemma PO_a0i_refines_init_a0n [iff]:\n  \"init a0i \\<subseteq> R0n0i``(init a0n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init a0i \\<subseteq> R0n0i `` init a0n", "by (auto simp add: R0n0i_def a0i_defs)"], ["", "lemma PO_a0i_refines_trans_a0n [iff]:\n  \"{R0n0i} trans a0n, trans a0i {> R0n0i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {R0n0i} TS.trans a0n, TS.trans a0i {> R0n0i}", "by (auto simp add: a0n_def a0n_trans_def a0i_def a0i_trans_def\n         intro!: PO_a0i_trans_refines_a0n_trans relhoare_abstract_UN)"], ["", "lemma PO_obs_consistent [iff]:\n  \"obs_consistent R0n0i med0n0i a0n a0i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obs_consistent R0n0i med0n0i a0n a0i", "by (auto simp add: obs_consistent_def R0n0i_def med0n0i_def a0i_def a0n_def)"], ["", "lemma PO_a0i_refines_a0n:\n  \"refines R0n0i med0n0i a0n a0i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refines R0n0i med0n0i a0n a0i", "by (rule Refinement_basic) (auto)"], ["", "(**************************************************************************************************)"], ["", "subsection \\<open>Derived invariant\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma iagreement_implies_niagreement [iff]: \"a0i_agreement \\<subseteq> a0n_agreement\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a0i_agreement \\<subseteq> a0n_agreement", "apply (auto intro!: a0n_agreementI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x A B M.\n       \\<lbrakk>x \\<in> a0i_agreement; 0 < signals x (Commit A B M)\\<rbrakk>\n       \\<Longrightarrow> 0 < signals x (Running A B M)", "apply (drule a0i_agreementD, drule order.strict_trans2, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma PO_a0i_a0n_agreement [iff]: \"reach a0i \\<subseteq> a0n_agreement\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach a0i \\<subseteq> a0n_agreement", "by (rule subset_trans, rule, rule)"], ["", "lemma PO_a0i_obs_a0n_agreement [iff]: \"oreach a0i \\<subseteq> a0n_agreement\""], ["proof (prove)\ngoal (1 subgoal):\n 1. oreach a0i \\<subseteq> a0n_agreement", "by (rule subset_trans, rule, rule)"], ["", "end"]]}