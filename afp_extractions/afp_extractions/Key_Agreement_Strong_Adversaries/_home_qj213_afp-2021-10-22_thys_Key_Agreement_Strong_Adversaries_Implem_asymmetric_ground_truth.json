{"file_name": "/home/qj213/afp-2021-10-22/thys/Key_Agreement_Strong_Adversaries/Implem_asymmetric.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Key_Agreement_Strong_Adversaries", "problem_names": ["lemma implInsecSet_implInsecSet_aux: \"asym.implInsecSet G \\<subseteq> implInsecSet_aux G\"", "lemma implAuthSet_implAuthSet_aux: \"asym.implAuthSet G \\<subseteq> implAuthSet_aux G\"", "lemma implConfidSet_implConfidSet_aux: \"asym.implConfidSet Ag G \\<subseteq> implConfidSet_aux Ag G\"", "lemma implSecureSet_implSecureSet_aux: \"asym.implSecureSet Ag G \\<subseteq> implSecureSet_aux Ag G\"", "lemmas implSet_implSet_aux =\n  implInsecSet_implInsecSet_aux implAuthSet_implAuthSet_aux\n  implConfidSet_implConfidSet_aux implSecureSet_implSecureSet_aux", "lemma analz_Un_PairAgentSet:\nshows\n  \"analz (PairSet AgentSet G \\<union> H) \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union> analz (G \\<union> H)\"", "lemma analz_Un_implInsecSet_aux_aux:\nassumes \"Enc_keys_clean (G \\<union> H)\"\nshows \"analz (implInsecSet_aux G \\<union> H) \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> synth (analz (G \\<union> H))\"", "lemma analz_Un_implInsecSet_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implInsecSet_aux G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implInsecSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (asym.implInsecSet G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implConfidSet_aux_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> \n  implConfidSet_aux Ag G \\<union> PairSet AgentSet G \\<union>\n  synth (analz (G \\<union> H))\"", "lemma analz_Un_implConfidSet_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implConfidSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (asym.implConfidSet Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implConfidSet_aux_aux_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> implConfidSet_aux Ag G \\<union> synth (analz H)\"", "lemma analz_Un_implConfidSet_aux_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\"", "lemma analz_Un_implConfidSet_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (asym.implConfidSet Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\"", "lemma analz_Un_implAuthSet_aux_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implAuthSet_aux G \\<union> H) \\<subseteq> implAuthSet_aux G \\<union> synth (analz (G \\<union> H))\"", "lemma analz_Un_implAuthSet_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implAuthSet_aux G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implAuthSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (asym.implAuthSet G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implSecureSet_aux_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq>\n   implSecureSet_aux Ag G \\<union> AencSet (PairSet Tags (PairSet AgentSet G)) (pubK` (Ag`` UNIV)) \\<union> \n   PairSet Tags (PairSet AgentSet G) \\<union> Tags \\<union> PairSet AgentSet G \\<union>\n   synth (analz (G \\<union> H))\"", "lemma analz_Un_implSecureSet_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implSecureSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (asym.implSecureSet Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implSecureSet_aux_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> \n   implSecureSet_aux Ag G \\<union> AencSet (PairSet Tags (PairSet AgentSet G)) (pubK` (Ag`` UNIV)) \\<union>\n   synth (analz H)\"", "lemma analz_Un_implSecureSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\"", "lemma analz_Un_implSecureSet_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (asym.implSecureSet Ag G \\<union> H) \\<subseteq>\n   synth (analz H) \\<union> -payload\"", "lemma implInsec_synth_analz:\n  \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   asym.implInsec A B M \\<in> synth (analz H) \\<Longrightarrow>\n   asym.implInsec A B M \\<in> I \\<or> M \\<in> synth (analz H)\"", "lemma implConfid_synth_analz:\n  \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   asym.implConfid A B M \\<in> synth (analz H) \\<Longrightarrow>\n   asym.implConfid A B M \\<in> H \\<or> M \\<in> synth (analz H)\"", "lemma implAuth_synth_analz:\n  \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   asym.implAuth A B M \\<in> synth (analz H) \\<Longrightarrow>\n   asym.implAuth A B M \\<in> H \\<or> (M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H)\"", "lemma implSecure_synth_analz:\n  \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   asym.implSecure A B M \\<in> synth (analz H) \\<Longrightarrow>\n   asym.implSecure A B M \\<in> H \\<or> (M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H)\""], "translations": [["", "lemma implInsecSet_implInsecSet_aux: \"asym.implInsecSet G \\<subseteq> implInsecSet_aux G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {asym.implInsec A B M |A B M. M \\<in> G} \\<subseteq> implInsecSet_aux G", "by auto"], ["", "lemma implAuthSet_implAuthSet_aux: \"asym.implAuthSet G \\<subseteq> implAuthSet_aux G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {asym.implAuth A B M |A B M. M \\<in> G} \\<subseteq> implAuthSet_aux G", "by auto"], ["", "lemma implConfidSet_implConfidSet_aux: \"asym.implConfidSet Ag G \\<subseteq> implConfidSet_aux Ag G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {asym.implConfid A B M |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G}\n    \\<subseteq> implConfidSet_aux Ag G", "by (auto, blast)"], ["", "lemma implSecureSet_implSecureSet_aux: \"asym.implSecureSet Ag G \\<subseteq> implSecureSet_aux Ag G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {asym.implSecure A B M |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G}\n    \\<subseteq> implSecureSet_aux Ag G", "by (auto, blast)"], ["", "lemmas implSet_implSet_aux =\n  implInsecSet_implInsecSet_aux implAuthSet_implAuthSet_aux\n  implConfidSet_implConfidSet_aux implSecureSet_implSecureSet_aux"], ["", "declare Enc_keys_clean_msgSet_Un [intro]"], ["", "(**************************************************************************************************)"], ["", "subsection \\<open>Lemmas to pull implementation sets out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "text \\<open>\nAll these proofs are similar:\n\\begin{enumerate}\n\\item prove the lemma for the @{term \"implSet_aux\"} and with the set added outside of  \n  @{term analz} given explicitly,\n\\item prove the lemma for the @{term \"implSet_aux\"} but with payload, and\n\\item prove the lemma for the @{term \"implSet\"}.\n\\end{enumerate}\nThere  are two cases for the confidential and secure messages:\nthe general case (the payloads stay in @{term  analz}) and the case where the key is unknown\n(the messages cannot be opened and are completely removed from the @{term analz}).\n\\<close>"], ["", "subsubsection \\<open>Pull @{term PairAgentSet} out of \\<open>analz\\<close>\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_PairAgentSet:\nshows\n  \"analz (PairSet AgentSet G \\<union> H) \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union> analz (G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n                analz (G \\<union> H)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n                analz (G \\<union> H)", "have \"analz (PairSet AgentSet G \\<union> H) \\<subseteq> PairSet AgentSet G \\<union> analz (AgentSet \\<union> G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> H)", "by (rule analz_Un_PairSet)"], ["proof (state)\nthis:\n  analz (PairSet AgentSet G \\<union> H)\n  \\<subseteq> PairSet AgentSet G \\<union>\n              analz (AgentSet \\<union> G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  analz (PairSet AgentSet G \\<union> H)\n  \\<subseteq> PairSet AgentSet G \\<union>\n              analz (AgentSet \\<union> G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n                analz (G \\<union> H)", "have \"... \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union> analz (G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet AgentSet G \\<union> analz (AgentSet \\<union> G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n                analz (G \\<union> H)", "apply (simp only: Un_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet AgentSet G \\<union> analz (AgentSet \\<union> (G \\<union> H))\n    \\<subseteq> PairSet AgentSet G \\<union>\n                (AgentSet \\<union> analz (G \\<union> H))", "apply (intro Un_mono analz_Un_AgentSet, fast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  PairSet AgentSet G \\<union> analz (AgentSet \\<union> G \\<union> H)\n  \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n                analz (G \\<union> H)", "finally"], ["proof (chain)\npicking this:\n  analz (PairSet AgentSet G \\<union> H)\n  \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n              analz (G \\<union> H)", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (PairSet AgentSet G \\<union> H)\n  \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n                analz (G \\<union> H)", "."], ["proof (state)\nthis:\n  analz (PairSet AgentSet G \\<union> H)\n  \\<subseteq> PairSet AgentSet G \\<union> AgentSet \\<union>\n              analz (G \\<union> H)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Pull @{term implInsecSet} out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_implInsecSet_aux_aux:\nassumes \"Enc_keys_clean (G \\<union> H)\"\nshows \"analz (implInsecSet_aux G \\<union> H) \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "have \"analz (implInsecSet_aux G \\<union> H) \\<subseteq> \n         implInsecSet_aux G \\<union> analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union>\n                analz\n                 (Tags \\<union>\n                  PairSet AgentSet (PairSet AgentSet G) \\<union>\n                  H)", "by (rule analz_Un_PairSet)"], ["proof (state)\nthis:\n  analz (implInsecSet_aux G \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union>\n              analz\n               (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union>\n                H)\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  analz (implInsecSet_aux G \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union>\n              analz\n               (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union>\n                H)\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "have \"... \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implInsecSet_aux G \\<union>\n    analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)", "using assms"], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. implInsecSet_aux G \\<union>\n    analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    implInsecSet_aux G \\<union>\n    analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)", "apply (simp only: Un_assoc, rule Un_mono, fast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (Tags \\<union> (PairSet AgentSet (PairSet AgentSet G) \\<union> H))\n    \\<subseteq> Tags \\<union>\n                analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)", "apply (rule analz_Un_Tag, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  implInsecSet_aux G \\<union>\n  analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  implInsecSet_aux G \\<union>\n  analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "have \"... \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> AgentSet \n                     \\<union> analz (PairSet AgentSet G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implInsecSet_aux G \\<union> Tags \\<union>\n    analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                AgentSet \\<union>\n                analz (PairSet AgentSet G \\<union> H)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. implInsecSet_aux G \\<union> Tags \\<union>\n    analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                AgentSet \\<union>\n                analz (PairSet AgentSet G \\<union> H)", "apply (simp only: Un_assoc, (rule Un_mono, fast)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> PairSet AgentSet (PairSet AgentSet G) \\<union>\n                (AgentSet \\<union> analz (PairSet AgentSet G \\<union> H))", "apply (simp only: Un_assoc [symmetric], rule analz_Un_PairAgentSet)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  implInsecSet_aux G \\<union> Tags \\<union>\n  analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              AgentSet \\<union>\n              analz (PairSet AgentSet G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  implInsecSet_aux G \\<union> Tags \\<union>\n  analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              AgentSet \\<union>\n              analz (PairSet AgentSet G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "have \n     \"... \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> AgentSet \n            \\<union> PairSet AgentSet G \\<union> AgentSet \\<union> analz (G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implInsecSet_aux G \\<union> Tags \\<union>\n    PairSet AgentSet (PairSet AgentSet G) \\<union>\n    AgentSet \\<union>\n    analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                AgentSet \\<union>\n                PairSet AgentSet G \\<union>\n                AgentSet \\<union>\n                analz (G \\<union> H)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. implInsecSet_aux G \\<union> Tags \\<union>\n    PairSet AgentSet (PairSet AgentSet G) \\<union>\n    AgentSet \\<union>\n    analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                AgentSet \\<union>\n                PairSet AgentSet G \\<union>\n                AgentSet \\<union>\n                analz (G \\<union> H)", "apply (simp only: Un_assoc, (rule Un_mono, fast)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union>\n                (AgentSet \\<union> analz (G \\<union> H))", "apply (simp only: Un_assoc [symmetric], rule analz_Un_PairAgentSet)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  implInsecSet_aux G \\<union> Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  AgentSet \\<union>\n  analz (PairSet AgentSet G \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              AgentSet \\<union>\n              PairSet AgentSet G \\<union>\n              AgentSet \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  implInsecSet_aux G \\<union> Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  AgentSet \\<union>\n  analz (PairSet AgentSet G \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              AgentSet \\<union>\n              PairSet AgentSet G \\<union>\n              AgentSet \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "have \"... \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implInsecSet_aux G \\<union> Tags \\<union>\n    PairSet AgentSet (PairSet AgentSet G) \\<union>\n    AgentSet \\<union>\n    PairSet AgentSet G \\<union>\n    AgentSet \\<union>\n    analz (G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. implInsecSet_aux G \\<union> Tags \\<union>\n    PairSet AgentSet (PairSet AgentSet G) \\<union>\n    AgentSet \\<union>\n    PairSet AgentSet G \\<union>\n    AgentSet \\<union>\n    analz (G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "apply (simp only: Un_assoc, (rule Un_mono, fast)+, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  implInsecSet_aux G \\<union> Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  AgentSet \\<union>\n  PairSet AgentSet G \\<union>\n  AgentSet \\<union>\n  analz (G \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "finally"], ["proof (chain)\npicking this:\n  analz (implInsecSet_aux G \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              synth (analz (G \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (implInsecSet_aux G \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n                synth (analz (G \\<union> H))", "."], ["proof (state)\nthis:\n  analz (implInsecSet_aux G \\<union> H)\n  \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implInsecSet_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implInsecSet_aux G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implInsecSet_aux_aux], auto)"], ["", "lemma analz_Un_implInsecSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (asym.implInsecSet G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz ({asym.implInsec A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implInsecSet_aux G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz ({asym.implInsec A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> analz (implInsecSet_aux G \\<union> H)\n 2. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implInsecSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (blast dest: analz_Un_implInsecSet_aux)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Pull @{term implConfidSet} out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_implConfidSet_aux_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> \n  implConfidSet_aux Ag G \\<union> PairSet AgentSet G \\<union>\n  synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implConfidSet_aux Ag G \\<union> H)\n    \\<subseteq> implConfidSet_aux Ag G \\<union> PairSet AgentSet G \\<union>\n                synth (analz (G \\<union> H))", "apply (rule subset_trans [OF analz_Un_AencSet], blast, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    implConfidSet_aux Ag G \\<union> analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> implConfidSet_aux Ag G \\<union> PairSet AgentSet G \\<union>\n                synth (analz (G \\<union> H))", "apply (simp only: Un_assoc, rule Un_mono, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> synth (analz (G \\<union> H))", "apply (rule subset_trans [OF analz_Un_PairAgentSet], blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_Un_implConfidSet_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implConfidSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implConfidSet_aux_aux], auto)"], ["", "lemma analz_Un_implConfidSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (asym.implConfidSet Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     ({asym.implConfid A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implConfidSet_aux Ag G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     ({asym.implConfid A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> analz (implConfidSet_aux Ag G \\<union> H)\n 2. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implConfidSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implConfidSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "using analz_Un_implConfidSet_aux"], ["proof (prove)\nusing this:\n  Enc_keys_clean (?G \\<union> ?H) \\<Longrightarrow>\n  analz (implConfidSet_aux ?Ag ?G \\<union> ?H)\n  \\<subseteq> synth (analz (?G \\<union> ?H)) \\<union> - payload\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implConfidSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Pull @{term implConfidSet} out of @{term analz}, 2nd case where the agents are honest.\\<close>"], ["", "lemma analz_Un_implConfidSet_aux_aux_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> implConfidSet_aux Ag G \\<union> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implConfidSet_aux Ag G \\<union> H)\n                      \\<subseteq> implConfidSet_aux Ag G \\<union>\n                                  synth (analz H)", "apply (rule subset_trans [OF analz_Un_AencSet2], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> priK ` Ag `` UNIV \\<inter> synth (analz H) = {}\n 2. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> implConfidSet_aux Ag G \\<union> analz H\n                      \\<subseteq> implConfidSet_aux Ag G \\<union>\n                                  synth (analz H)", "apply (auto dest:analz_into_parts)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_Un_implConfidSet_aux_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implConfidSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implConfidSet_aux_aux_2], auto)"], ["", "lemma analz_Un_implConfidSet_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (asym.implConfidSet Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       ({asym.implConfid A B M |A B M.\n                         (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                        H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implConfidSet_aux Ag G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       ({asym.implConfid A B M |A B M.\n                         (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                        H)\n                      \\<subseteq> analz (implConfidSet_aux Ag G \\<union> H)\n 2. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implConfidSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implConfidSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "using analz_Un_implConfidSet_aux_2"], ["proof (prove)\nusing this:\n  \\<lbrakk>Enc_keys_clean ?H;\n   ?Ag \\<inter> broken (parts ?H \\<inter> range LtK) = {}\\<rbrakk>\n  \\<Longrightarrow> analz (implConfidSet_aux ?Ag ?G \\<union> ?H)\n                    \\<subseteq> synth (analz ?H) \\<union> - payload\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implConfidSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Pull @{term implAuthSet} out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_implAuthSet_aux_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implAuthSet_aux G \\<union> H) \\<subseteq> implAuthSet_aux G \\<union> synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union> synth (analz (G \\<union> H))", "apply (rule subset_trans [OF analz_Un_SignSet], blast, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    implAuthSet_aux G \\<union> analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union> synth (analz (G \\<union> H))", "apply (rule Un_mono, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H))", "apply (rule subset_trans [OF analz_Un_PairAgentSet], blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_Un_implAuthSet_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implAuthSet_aux G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implAuthSet_aux_aux], auto)"], ["", "lemma analz_Un_implAuthSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (asym.implAuthSet G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz ({asym.implAuth A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implAuthSet_aux G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz ({asym.implAuth A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> analz (implAuthSet_aux G \\<union> H)\n 2. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "using analz_Un_implAuthSet_aux"], ["proof (prove)\nusing this:\n  Enc_keys_clean (?G \\<union> ?H) \\<Longrightarrow>\n  analz (implAuthSet_aux ?G \\<union> ?H)\n  \\<subseteq> synth (analz (?G \\<union> ?H)) \\<union> - payload\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Pull @{term implSecureSet} out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_implSecureSet_aux_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq>\n   implSecureSet_aux Ag G \\<union> AencSet (PairSet Tags (PairSet AgentSet G)) (pubK` (Ag`` UNIV)) \\<union> \n   PairSet Tags (PairSet AgentSet G) \\<union> Tags \\<union> PairSet AgentSet G \\<union>\n   synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union>\n                AencSet (PairSet Tags (PairSet AgentSet G))\n                 (pubK ` Ag `` UNIV) \\<union>\n                PairSet Tags (PairSet AgentSet G) \\<union>\n                Tags \\<union>\n                PairSet AgentSet G \\<union>\n                synth (analz (G \\<union> H))", "apply (rule subset_trans [OF analz_Un_SignSet], blast, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    implSecureSet_aux Ag G \\<union>\n    analz\n     (AencSet (PairSet Tags (PairSet AgentSet G))\n       (pubK ` Ag `` UNIV) \\<union>\n      H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union>\n                AencSet (PairSet Tags (PairSet AgentSet G))\n                 (pubK ` Ag `` UNIV) \\<union>\n                PairSet Tags (PairSet AgentSet G) \\<union>\n                Tags \\<union>\n                PairSet AgentSet G \\<union>\n                synth (analz (G \\<union> H))", "apply (simp only:Un_assoc, rule Un_mono, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     (AencSet (PairSet Tags (PairSet AgentSet G))\n       (pubK ` Ag `` UNIV) \\<union>\n      H)\n    \\<subseteq> AencSet (PairSet Tags (PairSet AgentSet G))\n                 (pubK ` Ag `` UNIV) \\<union>\n                (PairSet Tags (PairSet AgentSet G) \\<union>\n                 (Tags \\<union>\n                  (PairSet AgentSet G \\<union>\n                   synth (analz (G \\<union> H)))))", "apply (rule subset_trans [OF analz_Un_AencSet], blast, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    AencSet (PairSet Tags (PairSet AgentSet G)) (pubK ` Ag `` UNIV) \\<union>\n    analz (PairSet Tags (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> AencSet (PairSet Tags (PairSet AgentSet G))\n                 (pubK ` Ag `` UNIV) \\<union>\n                (PairSet Tags (PairSet AgentSet G) \\<union>\n                 (Tags \\<union>\n                  (PairSet AgentSet G \\<union>\n                   synth (analz (G \\<union> H)))))", "apply (rule Un_mono, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> PairSet Tags (PairSet AgentSet G) \\<union>\n                (Tags \\<union>\n                 (PairSet AgentSet G \\<union> synth (analz (G \\<union> H))))", "apply (rule subset_trans [OF analz_Un_PairSet], rule Un_mono, simp, simp only: Un_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (Tags \\<union> (PairSet AgentSet G \\<union> H))\n    \\<subseteq> Tags \\<union>\n                (PairSet AgentSet G \\<union> synth (analz (G \\<union> H)))", "apply (rule subset_trans [OF analz_Un_Tag], blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    Tags \\<union> analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> Tags \\<union>\n                (PairSet AgentSet G \\<union> synth (analz (G \\<union> H)))", "apply (rule Un_mono, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet AgentSet G \\<union> H)\n    \\<subseteq> PairSet AgentSet G \\<union> synth (analz (G \\<union> H))", "apply (rule subset_trans [OF analz_Un_PairAgentSet], blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_Un_implSecureSet_aux:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implSecureSet_aux_aux], auto)"], ["", "lemma analz_Un_implSecureSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (asym.implSecureSet Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     ({asym.implSecure A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implSecureSet_aux Ag G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     ({asym.implSecure A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> analz (implSecureSet_aux Ag G \\<union> H)\n 2. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "using analz_Un_implSecureSet_aux"], ["proof (prove)\nusing this:\n  Enc_keys_clean (?G \\<union> ?H) \\<Longrightarrow>\n  analz (implSecureSet_aux ?Ag ?G \\<union> ?H)\n  \\<subseteq> synth (analz (?G \\<union> ?H)) \\<union> - payload\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>\nPull @{term implSecureSet} out of @{term analz}, 2nd case, where the agents are honest. \n\\<close>"], ["", "lemma analz_Un_implSecureSet_aux_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> \n   implSecureSet_aux Ag G \\<union> AencSet (PairSet Tags (PairSet AgentSet G)) (pubK` (Ag`` UNIV)) \\<union>\n   synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> implSecureSet_aux Ag G \\<union>\n                                  AencSet\n                                   (PairSet Tags (PairSet AgentSet G))\n                                   (pubK ` Ag `` UNIV) \\<union>\n                                  synth (analz H)", "apply (rule subset_trans [OF analz_Un_SignSet], blast, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> implSecureSet_aux Ag G \\<union>\n                      analz\n                       (AencSet (PairSet Tags (PairSet AgentSet G))\n                         (pubK ` Ag `` UNIV) \\<union>\n                        H)\n                      \\<subseteq> implSecureSet_aux Ag G \\<union>\n                                  AencSet\n                                   (PairSet Tags (PairSet AgentSet G))\n                                   (pubK ` Ag `` UNIV) \\<union>\n                                  synth (analz H)", "apply (simp only: Un_assoc, rule Un_mono, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       (AencSet (PairSet Tags (PairSet AgentSet G))\n                         (pubK ` Ag `` UNIV) \\<union>\n                        H)\n                      \\<subseteq> AencSet\n                                   (PairSet Tags (PairSet AgentSet G))\n                                   (pubK ` Ag `` UNIV) \\<union>\n                                  synth (analz H)", "apply (rule subset_trans [OF analz_Un_AencSet2], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> priK ` Ag `` UNIV \\<inter> synth (analz H) = {}\n 2. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> AencSet (PairSet Tags (PairSet AgentSet G))\n                       (pubK ` Ag `` UNIV) \\<union>\n                      analz H\n                      \\<subseteq> AencSet\n                                   (PairSet Tags (PairSet AgentSet G))\n                                   (pubK ` Ag `` UNIV) \\<union>\n                                  synth (analz H)", "apply (auto dest: analz_into_parts)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_Un_implSecureSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implSecureSet_aux_aux_2], auto)"], ["", "lemma analz_Un_implSecureSet_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (asym.implSecureSet Ag G \\<union> H) \\<subseteq>\n   synth (analz H) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       ({asym.implSecure A B M |A B M.\n                         (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                        H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implSecureSet_aux Ag G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       ({asym.implSecure A B M |A B M.\n                         (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                        H)\n                      \\<subseteq> analz (implSecureSet_aux Ag G \\<union> H)\n 2. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "using analz_Un_implSecureSet_aux_2"], ["proof (prove)\nusing this:\n  \\<lbrakk>Enc_keys_clean (?G \\<union> ?H);\n   ?Ag \\<inter> broken (parts ?H \\<inter> range LtK) = {}\\<rbrakk>\n  \\<Longrightarrow> analz (implSecureSet_aux ?Ag ?G \\<union> ?H)\n                    \\<subseteq> synth (analz ?H) \\<union> - payload\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean (G \\<union> H);\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare Enc_keys_clean_msgSet_Un [rule del]"], ["", "subsection \\<open>Locale interpretations\\<close>"], ["", "(**************************************************************************************************)"], ["", "interpretation asym: semivalid_implem implem_asym"], ["proof (prove)\ngoal (1 subgoal):\n 1. semivalid_implem implem_asym", "proof (unfold_locales)"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x A B M x' A' B' M'.\n       (implem_asym (Chan x A B M) = implem_asym (Chan x' A' B' M')) =\n       (x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M')\n 2. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_asym (Chan x A B M)\n        \\<in> parts {implem_asym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 3. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 4. \\<And>Z. composed (implem_asym Z)\n 5. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 6. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 10. \\<And>G H.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 12 subgoals...", "fix x A B M x' A' B' M'"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x A B M x' A' B' M'.\n       (implem_asym (Chan x A B M) = implem_asym (Chan x' A' B' M')) =\n       (x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M')\n 2. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_asym (Chan x A B M)\n        \\<in> parts {implem_asym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 3. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 4. \\<And>Z. composed (implem_asym Z)\n 5. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 6. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 10. \\<And>G H.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 12 subgoals...", "show \"implem_asym (Chan x A B M) = implem_asym (Chan x' A' B' M') \\<longleftrightarrow>\n        x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (implem_asym (Chan x A B M) = implem_asym (Chan x' A' B' M')) =\n    (x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M')", "by (cases x, (cases x', auto)+)"], ["proof (state)\nthis:\n  (implem_asym (Chan x A B M) = implem_asym (Chan x' A' B' M')) =\n  (x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M')\n\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_asym (Chan x A B M)\n        \\<in> parts {implem_asym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_asym Z)\n 4. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_asym (Chan x A B M)\n        \\<in> parts {implem_asym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_asym Z)\n 4. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "fix M' M x x' A A' B B'"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_asym (Chan x A B M)\n        \\<in> parts {implem_asym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_asym Z)\n 4. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "assume \"M' \\<in> payload\" \"implem_asym (Chan x A B M) \\<in> parts {implem_asym (Chan x' A' B' M')}\""], ["proof (state)\nthis:\n  M' \\<in> payload\n  implem_asym (Chan x A B M) \\<in> parts {implem_asym (Chan x' A' B' M')}\n\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_asym (Chan x A B M)\n        \\<in> parts {implem_asym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_asym Z)\n 4. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  M' \\<in> payload\n  implem_asym (Chan x A B M) \\<in> parts {implem_asym (Chan x' A' B' M')}", "show \"x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\""], ["proof (prove)\nusing this:\n  M' \\<in> payload\n  implem_asym (Chan x A B M) \\<in> parts {implem_asym (Chan x' A' B' M')}\n\ngoal (1 subgoal):\n 1. x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'", "by (cases \"x\", auto,(cases x', auto)+)"], ["proof (state)\nthis:\n  x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n\ngoal (10 subgoals):\n 1. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 2. \\<And>Z. composed (implem_asym Z)\n 3. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 4. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 8. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n         Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 2. \\<And>Z. composed (implem_asym Z)\n 3. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 4. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 8. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n         Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz H) \\<union> - payload", "fix I"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 2. \\<And>Z. composed (implem_asym Z)\n 3. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 4. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 8. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n         Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz H) \\<union> - payload", "assume \"I \\<subseteq> asym.valid\""], ["proof (state)\nthis:\n  I \\<subseteq> asym.valid\n\ngoal (10 subgoals):\n 1. \\<And>I. I \\<subseteq> asym.valid \\<Longrightarrow> Enc_keys_clean I\n 2. \\<And>Z. composed (implem_asym Z)\n 3. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 4. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 8. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n         Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({asym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  I \\<subseteq> asym.valid", "show \"Enc_keys_clean I\""], ["proof (prove)\nusing this:\n  I \\<subseteq> asym.valid\n\ngoal (1 subgoal):\n 1. Enc_keys_clean I", "proof (simp add: Enc_keys_clean_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>I \\<subseteq> asym.valid; I \\<subseteq> asym.valid;\n        Enc X Y \\<in> parts I\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> range LtK \\<or> Y \\<in> payload", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>I \\<subseteq> asym.valid; I \\<subseteq> asym.valid;\n        Enc X Y \\<in> parts I\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> range LtK \\<or> Y \\<in> payload", "assume \"Enc X Y \\<in> parts I\""], ["proof (state)\nthis:\n  Enc X Y \\<in> parts I\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>I \\<subseteq> asym.valid; I \\<subseteq> asym.valid;\n        Enc X Y \\<in> parts I\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> range LtK \\<or> Y \\<in> payload", "obtain x A B M where \"M \\<in> payload\" and \"Enc X Y \\<in> parts {implem_asym (Chan x A B M)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M x A B.\n        \\<lbrakk>M \\<in> payload;\n         Enc X Y \\<in> parts {implem_asym (Chan x A B M)}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parts_singleton [OF \\<open>Enc X Y \\<in> parts I\\<close>] \\<open>I \\<subseteq> asym.valid\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>Ya\\<in>I. Enc X Y \\<in> parts {Ya}\n  I \\<subseteq> asym.valid\n\ngoal (1 subgoal):\n 1. (\\<And>M x A B.\n        \\<lbrakk>M \\<in> payload;\n         Enc X Y \\<in> parts {implem_asym (Chan x A B M)}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: asym.validE)"], ["proof (state)\nthis:\n  M \\<in> payload\n  Enc X Y \\<in> parts {implem_asym (Chan x A B M)}\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>I \\<subseteq> asym.valid; I \\<subseteq> asym.valid;\n        Enc X Y \\<in> parts I\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> range LtK \\<or> Y \\<in> payload", "then"], ["proof (chain)\npicking this:\n  M \\<in> payload\n  Enc X Y \\<in> parts {implem_asym (Chan x A B M)}", "show \"Y \\<in> range LtK \\<or> Y \\<in> payload\""], ["proof (prove)\nusing this:\n  M \\<in> payload\n  Enc X Y \\<in> parts {implem_asym (Chan x A B M)}\n\ngoal (1 subgoal):\n 1. Y \\<in> range LtK \\<or> Y \\<in> payload", "by (cases x, auto)"], ["proof (state)\nthis:\n  Y \\<in> range LtK \\<or> Y \\<in> payload\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Enc_keys_clean I\n\ngoal (9 subgoals):\n 1. \\<And>Z. composed (implem_asym Z)\n 2. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 3. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>Z. composed (implem_asym Z)\n 2. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 3. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix Z"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>Z. composed (implem_asym Z)\n 2. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 3. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "show \"composed (implem_asym Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composed (implem_asym Z)", "proof (cases Z, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 x4.\n       Z = Chan x1 x2 x3 x4 \\<Longrightarrow>\n       composed (implem_asym (Chan x1 x2 x3 x4))", "fix x A B M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 x4.\n       Z = Chan x1 x2 x3 x4 \\<Longrightarrow>\n       composed (implem_asym (Chan x1 x2 x3 x4))", "show \"composed (implem_asym (Chan x A B M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composed (implem_asym (Chan x A B M))", "by (cases x, auto)"], ["proof (state)\nthis:\n  composed (implem_asym (Chan x A B M))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  composed (implem_asym Z)\n\ngoal (8 subgoals):\n 1. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 2. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 2. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix x A B M"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x A B M. implem_asym (Chan x A B M) \\<notin> payload\n 2. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "show \"implem_asym (Chan x A B M) \\<notin> payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implem_asym (Chan x A B M) \\<notin> payload", "by (cases x, auto)"], ["proof (state)\nthis:\n  implem_asym (Chan x A B M) \\<notin> payload\n\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix X K"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"X \\<in> asym.valid\""], ["proof (state)\nthis:\n  X \\<in> asym.valid\n\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  X \\<in> asym.valid", "obtain x A B M where \"M \\<in> payload\" \"X = implem_asym (Chan x A B M)\""], ["proof (prove)\nusing this:\n  X \\<in> asym.valid\n\ngoal (1 subgoal):\n 1. (\\<And>M x A B.\n        \\<lbrakk>M \\<in> payload; X = implem_asym (Chan x A B M)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: asym.validE)"], ["proof (state)\nthis:\n  M \\<in> payload\n  X = implem_asym (Chan x A B M)\n\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> asym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  M \\<in> payload\n  X = implem_asym (Chan x A B M)", "show \"LtK K \\<notin> parts {X}\""], ["proof (prove)\nusing this:\n  M \\<in> payload\n  X = implem_asym (Chan x A B M)\n\ngoal (1 subgoal):\n 1. LtK K \\<notin> parts {X}", "by (cases x, auto)"], ["proof (state)\nthis:\n  LtK K \\<notin> parts {X}\n\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "show \"analz ({implem_asym (Insec A B M) |A B M. M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz (G \\<union> H)) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz ({asym.implInsec A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule analz_Un_implInsecSet)"], ["proof (state)\nthis:\n  analz ({asym.implInsec A B M |A B M. M \\<in> G} \\<union> H)\n  \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload\n\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "show \"analz ({implem_asym (Auth A B M) |A B M. M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz (G \\<union> H)) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz ({asym.implAuth A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule analz_Un_implAuthSet)"], ["proof (state)\nthis:\n  analz ({asym.implAuth A B M |A B M. M \\<in> G} \\<union> H)\n  \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload\n\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H Ag"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "show \"analz ({implem_asym (Confid A B M) |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz (G \\<union> H)) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz\n     ({asym.implConfid A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule analz_Un_implConfidSet)"], ["proof (state)\nthis:\n  analz\n   ({asym.implConfid A B M |A B M.\n     (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n    H)\n  \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload\n\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H Ag"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "show \"analz ({implem_asym (Secure A B M) |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz (G \\<union> H)) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz\n     ({asym.implSecure A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule analz_Un_implSecureSet)"], ["proof (state)\nthis:\n  analz\n   ({asym.implSecure A B M |A B M.\n     (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n    H)\n  \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H Ag"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "(*unused*)"], ["proof (state)\nthis:\n  G \\<subseteq> payload\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  Enc_keys_clean H\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "moreover"], ["proof (state)\nthis:\n  Enc_keys_clean H\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\""], ["proof (state)\nthis:\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "ultimately"], ["proof (chain)\npicking this:\n  Enc_keys_clean H\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}", "show \"analz ({implem_asym (Confid A B M) |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz H) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean H\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\n\ngoal (1 subgoal):\n 1. analz\n     ({asym.implConfid A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz H) \\<union> - payload", "by (rule analz_Un_implConfidSet_2)"], ["proof (state)\nthis:\n  analz\n   ({asym.implConfid A B M |A B M.\n     (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n    H)\n  \\<subseteq> synth (analz H) \\<union> - payload\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H Ag"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "moreover"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\""], ["proof (state)\nthis:\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({asym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "ultimately"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}", "show \"analz ({implem_asym (Secure A B M) |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union> H) \\<subseteq> \n          synth (analz H) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\n\ngoal (1 subgoal):\n 1. analz\n     ({asym.implSecure A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz H) \\<union> - payload", "by (rule analz_Un_implSecureSet_2)"], ["proof (state)\nthis:\n  analz\n   ({asym.implSecure A B M |A B M.\n     (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n    H)\n  \\<subseteq> synth (analz H) \\<union> - payload\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThird step: @{locale \"valid_implem\"}. The lemmas giving conditions on $M$, $A$ and $B$ for \n@{prop [display] \"implXXX A B M \\<in> synth (analz Z)\"}.\n\\<close>"], ["", "lemma implInsec_synth_analz:\n  \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   asym.implInsec A B M \\<in> synth (analz H) \\<Longrightarrow>\n   asym.implInsec A B M \\<in> I \\<or> M \\<in> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     asym.implInsec A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> asym.implInsec A B M \\<in> I \\<or>\n                      M \\<in> synth (analz H)", "apply (erule synth.cases, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma implConfid_synth_analz:\n  \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   asym.implConfid A B M \\<in> synth (analz H) \\<Longrightarrow>\n   asym.implConfid A B M \\<in> H \\<or> M \\<in> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     asym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> asym.implConfid A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H)", "apply (erule synth.cases, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Aenc \\<langle>Messages.Agent A, M\\<rangle> (pubK B) \\<in> analz H;\n     M \\<notin> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> Aenc \\<langle>Messages.Agent A, M\\<rangle> (pubK B)\n                      \\<in> H", "apply (frule asym.analz_valid [where x=confid], auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma implAuth_synth_analz:\n  \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   asym.implAuth A B M \\<in> synth (analz H) \\<Longrightarrow>\n   asym.implAuth A B M \\<in> H \\<or> (M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "apply (erule synth.cases, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<in> analz H;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> M \\<in> synth (analz H)\n 2. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<in> analz H;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H\n 3. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     M \\<in> synth (analz H); priK A \\<in> analz H;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H", "apply (frule asym.analz_valid [where x=auth], auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<in> analz H;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H\n 2. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     M \\<in> synth (analz H); priK A \\<in> analz H;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H", "apply (frule asym.analz_valid [where x=auth], auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     M \\<in> synth (analz H); priK A \\<in> analz H;\n     Sign \\<langle>Messages.Agent B, M\\<rangle> (priK A) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H", "apply (blast dest: asym.analz_LtKeys)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma implSecure_synth_analz:\n  \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   asym.implSecure A B M \\<in> synth (analz H) \\<Longrightarrow>\n   asym.implSecure A B M \\<in> H \\<or> (M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "using [[simproc del: defined_all]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "proof (erule synth.cases, simp_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Sign\n         (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n         (priK A) =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix X"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Sign\n         (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n         (priK A) =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume H:\"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Sign\n         (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n         (priK A) =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume H':\"Sign (Aenc \\<langle>SecureTag, Agent A, M\\<rangle> (pubK B)) (priK A) = X\"\n            \" X \\<in> analz H\""], ["proof (state)\nthis:\n  Sign (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n   (priK A) =\n  X\n  X \\<in> analz H\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Sign\n         (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n         (priK A) =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "hence \"asym.implSecure A B M \\<in> analz H\""], ["proof (prove)\nusing this:\n  Sign (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n   (priK A) =\n  X\n  X \\<in> analz H\n\ngoal (1 subgoal):\n 1. asym.implSecure A B M \\<in> analz H", "by auto"], ["proof (state)\nthis:\n  asym.implSecure A B M \\<in> analz H\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Sign\n         (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n         (priK A) =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "with H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implSecure A B M \\<in> analz H", "have \"asym.implSecure A B M \\<in> H\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implSecure A B M \\<in> analz H\n\ngoal (1 subgoal):\n 1. asym.implSecure A B M \\<in> H", "by (rule asym.analz_valid)"], ["proof (state)\nthis:\n  asym.implSecure A B M \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Sign\n         (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n         (priK A) =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "with H'"], ["proof (chain)\npicking this:\n  Sign (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n   (priK A) =\n  X\n  X \\<in> analz H\n  asym.implSecure A B M \\<in> H", "show \"X \\<in> H \\<or> M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  Sign (Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B))\n   (priK A) =\n  X\n  X \\<in> analz H\n  asym.implSecure A B M \\<in> H\n\ngoal (1 subgoal):\n 1. X \\<in> H \\<or> M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "by auto"], ["proof (state)\nthis:\n  X \\<in> H \\<or> M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume H:\"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume H':\"Aenc \\<langle>SecureTag, Agent A, M\\<rangle> (pubK B) = X \\<and> priK A = Y\"\n            \"X \\<in> synth (analz H)\" \"Y \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) = X \\<and>\n  priK A = Y\n  X \\<in> synth (analz H)\n  Y \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "hence \"priK A \\<in> analz H\""], ["proof (prove)\nusing this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) = X \\<and>\n  priK A = Y\n  X \\<in> synth (analz H)\n  Y \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. priK A \\<in> analz H", "by auto"], ["proof (state)\nthis:\n  priK A \\<in> analz H\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "with H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  priK A \\<in> analz H", "have HAgents:\"(A, B) \\<in> broken H \""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  priK A \\<in> analz H\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> broken H", "by (auto dest: asym.analz_LtKeys)"], ["proof (state)\nthis:\n  (A, B) \\<in> broken H\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "from H'"], ["proof (chain)\npicking this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) = X \\<and>\n  priK A = Y\n  X \\<in> synth (analz H)\n  Y \\<in> synth (analz H)", "have \"Aenc \\<langle>SecureTag, Agent A, M\\<rangle> (pubK B) \\<in> synth (analz H)\""], ["proof (prove)\nusing this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) = X \\<and>\n  priK A = Y\n  X \\<in> synth (analz H)\n  Y \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> synth (analz H)", "by auto"], ["proof (state)\nthis:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> synth (analz H)", "have \"Aenc \\<langle>SecureTag, Agent A, M\\<rangle> (pubK B) \\<in> analz H \\<or> \n             M \\<in> synth (analz H)\""], ["proof (prove)\nusing this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<or>\n    M \\<in> synth (analz H)", "by (rule synth.cases, auto)"], ["proof (state)\nthis:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> analz H \\<or>\n  M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) =\n        X \\<and>\n        priK A = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> Sign X Y \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> analz H \\<or>\n  M \\<in> synth (analz H)", "show \"Sign X Y \\<in> H \\<or> M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> analz H \\<or>\n  M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n 2. M \\<in> synth (analz H) \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "assume \"M \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  M \\<in> synth (analz H)\n\ngoal (2 subgoals):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n 2. M \\<in> synth (analz H) \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "with HAgents"], ["proof (chain)\npicking this:\n  (A, B) \\<in> broken H\n  M \\<in> synth (analz H)", "show ?thesis"], ["proof (prove)\nusing this:\n  (A, B) \\<in> broken H\n  M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "by auto"], ["proof (state)\nthis:\n  Sign X Y \\<in> H \\<or>\n  M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "assume \"Aenc \\<langle>SecureTag, Agent A, M\\<rangle> (pubK B) \\<in> analz H\""], ["proof (state)\nthis:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> analz H\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "hence \"Aenc \\<langle>SecureTag, Agent A, M\\<rangle> (pubK B) \\<in> parts H\""], ["proof (prove)\nusing this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> analz H\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> parts H", "by (rule analz_into_parts)"], ["proof (state)\nthis:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts H\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "from H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags", "obtain Z where \n        \"Z \\<in> H\" and H'':\"Aenc \\<langle>SecureTag, Agent A, M\\<rangle> (pubK B) \\<in> parts {Z}\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n\ngoal (1 subgoal):\n 1. (\\<And>Z.\n        \\<lbrakk>Z \\<in> H;\n         Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n         \\<in> parts {Z}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parts_singleton [OF \\<open>Aenc \\<langle>SecureTag, Agent A, M\\<rangle> (pubK B) \\<in> parts H\\<close>]"], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  \\<exists>Y\\<in>H.\n     Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n     \\<in> parts {Y}\n\ngoal (1 subgoal):\n 1. (\\<And>Z.\n        \\<lbrakk>Z \\<in> H;\n         Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n         \\<in> parts {Z}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Z \\<in> H\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts {Z}\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "moreover"], ["proof (state)\nthis:\n  Z \\<in> H\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts {Z}\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "with H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  Z \\<in> H\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts {Z}", "have \"Z \\<in> asym.valid\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  Z \\<in> H\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts {Z}\n\ngoal (1 subgoal):\n 1. Z \\<in> asym.valid", "by (auto dest!: subsetD)"], ["proof (state)\nthis:\n  Z \\<in> asym.valid\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "moreover"], ["proof (state)\nthis:\n  Z \\<in> asym.valid\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "with H''"], ["proof (chain)\npicking this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts {Z}\n  Z \\<in> asym.valid", "have \"Z = asym.implSecure A B M\""], ["proof (prove)\nusing this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts {Z}\n  Z \\<in> asym.valid\n\ngoal (1 subgoal):\n 1. Z = asym.implSecure A B M", "by (auto) (erule asym.valid_cases, auto)"], ["proof (state)\nthis:\n  Z = asym.implSecure A B M\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "ultimately"], ["proof (chain)\npicking this:\n  Z \\<in> H\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts {Z}\n  Z \\<in> asym.valid\n  Z = asym.implSecure A B M", "have \"asym.implSecure A B M \\<in> H\""], ["proof (prove)\nusing this:\n  Z \\<in> H\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n  \\<in> parts {Z}\n  Z \\<in> asym.valid\n  Z = asym.implSecure A B M\n\ngoal (1 subgoal):\n 1. asym.implSecure A B M \\<in> H", "by auto"], ["proof (state)\nthis:\n  asym.implSecure A B M \\<in> H\n\ngoal (1 subgoal):\n 1. Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B)\n    \\<in> analz H \\<Longrightarrow>\n    Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "with H'"], ["proof (chain)\npicking this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) = X \\<and>\n  priK A = Y\n  X \\<in> synth (analz H)\n  Y \\<in> synth (analz H)\n  asym.implSecure A B M \\<in> H", "show ?thesis"], ["proof (prove)\nusing this:\n  Aenc \\<langle>SecureTag, Messages.Agent A, M\\<rangle> (pubK B) = X \\<and>\n  priK A = Y\n  X \\<in> synth (analz H)\n  Y \\<in> synth (analz H)\n  asym.implSecure A B M \\<in> H\n\ngoal (1 subgoal):\n 1. Sign X Y \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "by auto"], ["proof (state)\nthis:\n  Sign X Y \\<in> H \\<or>\n  M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sign X Y \\<in> H \\<or>\n  M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation asym: valid_implem implem_asym"], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_implem implem_asym", "proof (unfold_locales)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implInsec A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implInsec A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 4. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix H A B M"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implInsec A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implInsec A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 4. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\"\n         \"implem_asym (Insec A B M) \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implInsec A B M \\<in> synth (analz H)\n\ngoal (4 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implInsec A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implInsec A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 4. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implInsec A B M \\<in> synth (analz H)", "show \"implem_asym (Insec A B M) \\<in> H \\<or> M \\<in> synth (analz H)\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implInsec A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. asym.implInsec A B M \\<in> H \\<or> M \\<in> synth (analz H)", "by (rule implInsec_synth_analz)"], ["proof (state)\nthis:\n  asym.implInsec A B M \\<in> H \\<or> M \\<in> synth (analz H)\n\ngoal (3 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix H A B M"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\"\n         \"implem_asym (Confid A B M) \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implConfid A B M \\<in> synth (analz H)\n\ngoal (3 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implConfid A B M \\<in> synth (analz H)", "show \"implem_asym (Confid A B M) \\<in> H \\<or> M \\<in> synth (analz H)\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implConfid A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. asym.implConfid A B M \\<in> H \\<or> M \\<in> synth (analz H)", "by (rule implConfid_synth_analz)"], ["proof (state)\nthis:\n  asym.implConfid A B M \\<in> H \\<or> M \\<in> synth (analz H)\n\ngoal (2 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix H A B M"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\"\n         \"implem_asym (Auth A B M) \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implAuth A B M \\<in> synth (analz H)\n\ngoal (2 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implAuth A B M \\<in> synth (analz H)", "show \"implem_asym (Auth A B M) \\<in> H \\<or> \n             M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implAuth A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. asym.implAuth A B M \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "by (rule implAuth_synth_analz)"], ["proof (state)\nthis:\n  asym.implAuth A B M \\<in> H \\<or>\n  M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal (1 subgoal):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix H A B M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume \"H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\"\n         \"implem_asym (Secure A B M) \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implSecure A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> asym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        asym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> asym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implSecure A B M \\<in> synth (analz H)", "show \"implem_asym (Secure A B M) \\<in> H \\<or> \n             M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> asym.valid \\<union> range LtK \\<union> Tags\n  asym.implSecure A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. asym.implSecure A B M \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "by (rule implSecure_synth_analz)"], ["proof (state)\nthis:\n  asym.implSecure A B M \\<in> H \\<or>\n  M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}