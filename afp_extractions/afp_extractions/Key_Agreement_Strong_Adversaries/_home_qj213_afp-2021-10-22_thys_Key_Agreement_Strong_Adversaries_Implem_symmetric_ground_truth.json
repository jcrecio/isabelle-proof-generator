{"file_name": "/home/qj213/afp-2021-10-22/thys/Key_Agreement_Strong_Adversaries/Implem_symmetric.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Key_Agreement_Strong_Adversaries", "problem_names": ["lemma implInsecSet_implInsecSet_aux: \"sym.implInsecSet G \\<subseteq> implInsecSet_aux G\"", "lemma implAuthSet_implAuthSet_aux: \"sym.implAuthSet G \\<subseteq> implAuthSet_aux G\"", "lemma implConfidSet_implConfidSet_aux: \"sym.implConfidSet Ag G \\<subseteq> implConfidSet_aux Ag G\"", "lemma implSecureSet_implSecureSet_aux: \"sym.implSecureSet Ag G \\<subseteq> implSecureSet_aux Ag G\"", "lemmas implSet_implSet_aux =\n  implInsecSet_implInsecSet_aux implAuthSet_implAuthSet_aux\n  implConfidSet_implConfidSet_aux implSecureSet_implSecureSet_aux", "lemma analz_Un_implInsecSet_aux_1:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implInsecSet_aux G \\<union> H) \\<subseteq> \n     implInsecSet_aux G \\<union> Tags \\<union>\n     PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n     PairSet (range Agent) G \\<union>\n     analz (range Agent \\<union> G \\<union> (range Agent \\<union> H))\"", "lemma analz_Un_implInsecSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implInsecSet_aux G \\<union> H) \\<subseteq> \n     implInsecSet_aux G \\<union> Tags \\<union> \n     synth (analz (G \\<union> H))\"", "lemma analz_Un_implInsecSet_aux_3:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implInsecSet_aux G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implInsecSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (sym.implInsecSet G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implConfidSet_aux_1:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> \n     implConfidSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n     analz (G \\<union> H)\"", "lemma analz_Un_implConfidSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> \n     implConfidSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n     synth (analz (G \\<union> H))\"", "lemma analz_Un_implConfidSet_aux_3:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implConfidSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (sym.implConfidSet Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implConfidSet_2_aux_1:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> implConfidSet_aux Ag G \\<union> synth (analz H)\"", "lemma analz_Un_implConfidSet_2_aux_3:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\"", "lemma analz_Un_implConfidSet_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (sym.implConfidSet Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\"", "lemma analz_Un_implSecureSet_aux_1:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> \n     implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n     analz (G \\<union> H)\"", "lemma analz_Un_implSecureSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> \n     implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n     synth (analz (G \\<union> H))\"", "lemma analz_Un_implSecureSet_aux_3:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implSecureSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (sym.implSecureSet Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implSecureSet_2_aux_1:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> implSecureSet_aux Ag G \\<union> synth (analz H)\"", "lemma analz_Un_implSecureSet_2_aux_3:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\"", "lemma analz_Un_implSecureSet_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (sym.implSecureSet Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\"", "lemma analz_Un_implAuthSet_aux_1:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implAuthSet_aux G \\<union> H) \\<subseteq> \n     implAuthSet_aux G \\<union> HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union>\n     analz (G \\<union> H)\"", "lemma analz_Un_implAuthSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implAuthSet_aux G \\<union> H) \\<subseteq>\n     implAuthSet_aux G \\<union> HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union>\n     synth (analz (G \\<union> H))\"", "lemma analz_Un_implAuthSet_aux_3:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implAuthSet_aux G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma analz_Un_implAuthSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (sym.implAuthSet G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\"", "lemma implInsec_synth_analz:\n  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   sym.implInsec A B M \\<in> synth (analz H) \\<Longrightarrow>\n   sym.implInsec A B M \\<in> H \\<or> M \\<in> synth (analz H)\"", "lemma implConfid_synth_analz:\n  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   sym.implConfid A B M \\<in> synth (analz H) \\<Longrightarrow>\n   sym.implConfid A B M \\<in> H \\<or> M \\<in> synth (analz H)\"", "lemma implAuth_synth_analz:\n  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   sym.implAuth A B M \\<in> synth (analz H) \\<Longrightarrow>\n   sym.implAuth A B M \\<in> H \\<or> (M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H)\"", "lemma implSecure_synth_analz:\n  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   sym.implSecure A B M \\<in> synth (analz H) \\<Longrightarrow>\n   sym.implSecure A B M \\<in> H \\<or> (M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H)\""], "translations": [["", "lemma implInsecSet_implInsecSet_aux: \"sym.implInsecSet G \\<subseteq> implInsecSet_aux G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sym.implInsec A B M |A B M. M \\<in> G}\n    \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G))", "by auto"], ["", "lemma implAuthSet_implAuthSet_aux: \"sym.implAuthSet G \\<subseteq> implAuthSet_aux G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sym.implAuth A B M |A B M. M \\<in> G} \\<subseteq> implAuthSet_aux G", "by (auto, auto)"], ["", "lemma implConfidSet_implConfidSet_aux: \"sym.implConfidSet Ag G \\<subseteq> implConfidSet_aux Ag G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sym.implConfid A B M |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G}\n    \\<subseteq> implSecureSet_aux Ag G", "by (auto)"], ["", "lemma implSecureSet_implSecureSet_aux: \"sym.implSecureSet Ag G \\<subseteq> implSecureSet_aux Ag G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sym.implSecure A B M |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G}\n    \\<subseteq> implSecureSet_aux Ag G", "by (auto)"], ["", "lemmas implSet_implSet_aux =\n  implInsecSet_implInsecSet_aux implAuthSet_implAuthSet_aux\n  implConfidSet_implConfidSet_aux implSecureSet_implSecureSet_aux"], ["", "declare Enc_keys_clean_msgSet_Un [intro]"], ["", "(**************************************************************************************************)"], ["", "subsection \\<open>Lemmas to pull implementation sets out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "text \\<open>\nAll these proofs are similar:\n\\begin{enumerate}\n\\item prove the lemma for the @{term \"implSet_aux\"} and with the set added outside of  \n  @{term analz} given explicitly,\n\\item prove the lemma for the @{term \"implSet_aux\"} but with payload, and\n\\item prove the lemma for the @{term \"implSet\"}.\n\\end{enumerate}\nThere  are two cases for the confidential and secure messages:\nthe general case (the payloads stay in @{term  analz}) and the case where the key is unknown\n(the messages cannot be opened and are completely removed from the @{term analz}).\n\\<close>"], ["", "subsubsection \\<open>Pull @{term implInsecSet} out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_implInsecSet_aux_1:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implInsecSet_aux G \\<union> H) \\<subseteq> \n     implInsecSet_aux G \\<union> Tags \\<union>\n     PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n     PairSet (range Agent) G \\<union>\n     analz (range Agent \\<union> G \\<union> (range Agent \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "assume H:\"Enc_keys_clean (G \\<union> H)\""], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "have \"analz (implInsecSet_aux G \\<union> H) \\<subseteq> implInsecSet_aux G \\<union>\n          analz (Tags \\<union> PairSet (range Agent) (PairSet (range Agent) G) \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                analz\n                 (Tags \\<union>\n                  PairSet AgentSet (PairSet AgentSet G) \\<union>\n                  H)", "by (rule analz_Un_PairSet)"], ["proof (state)\nthis:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              analz\n               (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union>\n                H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "also"], ["proof (state)\nthis:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              analz\n               (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union>\n                H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "have \"... = implInsecSet_aux G \\<union> \n            analz (Tags \\<union> (PairSet (range Agent) (PairSet (range Agent) G) \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H) =\n    PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    analz (Tags \\<union> (PairSet AgentSet (PairSet AgentSet G) \\<union> H))", "by (simp only: Un_assoc)"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  analz (Tags \\<union> (PairSet AgentSet (PairSet AgentSet G) \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "also"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  analz (Tags \\<union> PairSet AgentSet (PairSet AgentSet G) \\<union> H) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  analz (Tags \\<union> (PairSet AgentSet (PairSet AgentSet G) \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "have \"... \\<subseteq> implInsecSet_aux G \\<union>\n          (Tags \\<union> analz (PairSet (range Agent) (PairSet (range Agent) G) \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    analz (Tags \\<union> (PairSet AgentSet (PairSet AgentSet G) \\<union> H))\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                (Tags \\<union>\n                 analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H))", "by (rule Un_mono, blast, rule analz_Un_Tag, blast intro: H)"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  analz (Tags \\<union> (PairSet AgentSet (PairSet AgentSet G) \\<union> H))\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              (Tags \\<union>\n               analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "also"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  analz (Tags \\<union> (PairSet AgentSet (PairSet AgentSet G) \\<union> H))\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              (Tags \\<union>\n               analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "have \"... = implInsecSet_aux G \\<union> Tags \\<union>\n                  analz (PairSet (range Agent) (PairSet (range Agent) G) \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    (Tags \\<union>\n     analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)) =\n    PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)", "by auto"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  (Tags \\<union> analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "also"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  (Tags \\<union> analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "have \"... \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> (PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n                  analz (range Agent \\<union> PairSet (range Agent) G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                (PairSet AgentSet (PairSet AgentSet G) \\<union>\n                 analz (AgentSet \\<union> PairSet AgentSet G \\<union> H))", "by (rule Un_mono, blast, rule analz_Un_PairSet)"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              (PairSet AgentSet (PairSet AgentSet G) \\<union>\n               analz (AgentSet \\<union> PairSet AgentSet G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "also"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  analz (PairSet AgentSet (PairSet AgentSet G) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              (PairSet AgentSet (PairSet AgentSet G) \\<union>\n               analz (AgentSet \\<union> PairSet AgentSet G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "have \"... = implInsecSet_aux G \\<union> Tags \\<union> PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n                  analz (PairSet (range Agent) G \\<union> (range Agent \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    (PairSet AgentSet (PairSet AgentSet G) \\<union>\n     analz (AgentSet \\<union> PairSet AgentSet G \\<union> H)) =\n    PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    PairSet AgentSet (PairSet AgentSet G) \\<union>\n    analz (PairSet AgentSet G \\<union> (AgentSet \\<union> H))", "by (auto simp add: Un_assoc Un_commute)"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  (PairSet AgentSet (PairSet AgentSet G) \\<union>\n   analz (AgentSet \\<union> PairSet AgentSet G \\<union> H)) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  analz (PairSet AgentSet G \\<union> (AgentSet \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "also"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  (PairSet AgentSet (PairSet AgentSet G) \\<union>\n   analz (AgentSet \\<union> PairSet AgentSet G \\<union> H)) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  analz (PairSet AgentSet G \\<union> (AgentSet \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "have \"... \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n                  (PairSet (range Agent) G \\<union> analz (range Agent \\<union> G \\<union> (range Agent \\<union> H)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    PairSet AgentSet (PairSet AgentSet G) \\<union>\n    analz (PairSet AgentSet G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                (PairSet AgentSet G \\<union>\n                 analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)))", "by (rule Un_mono, blast, rule analz_Un_PairSet)"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  analz (PairSet AgentSet G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              (PairSet AgentSet G \\<union>\n               analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "also"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  analz (PairSet AgentSet G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              (PairSet AgentSet G \\<union>\n               analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "have \"... = implInsecSet_aux G \\<union> Tags \\<union> (PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n                  PairSet (range Agent) G) \\<union> analz (range Agent \\<union> G \\<union> (range Agent \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    PairSet AgentSet (PairSet AgentSet G) \\<union>\n    (PairSet AgentSet G \\<union>\n     analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))) =\n    PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    (PairSet AgentSet (PairSet AgentSet G) \\<union>\n     PairSet AgentSet G) \\<union>\n    analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "by (simp only: Un_assoc Un_commute)"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  (PairSet AgentSet G \\<union>\n   analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  (PairSet AgentSet (PairSet AgentSet G) \\<union>\n   PairSet AgentSet G) \\<union>\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "finally"], ["proof (chain)\npicking this:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              (PairSet AgentSet (PairSet AgentSet G) \\<union>\n               PairSet AgentSet G) \\<union>\n              analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              (PairSet AgentSet (PairSet AgentSet G) \\<union>\n               PairSet AgentSet G) \\<union>\n              analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "by auto"], ["proof (state)\nthis:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              PairSet AgentSet G \\<union>\n              analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implInsecSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implInsecSet_aux G \\<union> H) \\<subseteq> \n     implInsecSet_aux G \\<union> Tags \\<union> \n     synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "assume H:\"Enc_keys_clean (G \\<union> H)\""], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "have HH:\"PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n                  PairSet (range Agent) G \\<subseteq> synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet AgentSet (PairSet AgentSet G) \\<union> PairSet AgentSet G\n    \\<subseteq> synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  PairSet AgentSet (PairSet AgentSet G) \\<union> PairSet AgentSet G\n  \\<subseteq> synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "have HHH:\"analz (range Agent \\<union> G \\<union> (range Agent \\<union> H)) \\<subseteq> synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "have \"analz (range Agent \\<union> G \\<union> (range Agent \\<union> H)) \\<subseteq> \n            synth (analz (range Agent \\<union> G \\<union> (range Agent \\<union> H)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth\n                 (analz\n                   (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)))", "by auto"], ["proof (state)\nthis:\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth\n               (analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)))\n\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth\n               (analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)))\n\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "have \"... = synth (analz (synth (range Agent \\<union> G \\<union> (range Agent \\<union> H))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. synth (analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))) =\n    synth\n     (analz (synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))))", "by auto"], ["proof (state)\nthis:\n  synth (analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))) =\n  synth (analz (synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))))\n\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  synth (analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))) =\n  synth (analz (synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))))\n\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "have \"... \\<subseteq> synth (analz (synth (G \\<union> H)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. synth\n     (analz (synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))))\n    \\<subseteq> synth (analz (synth (G \\<union> H)))", "proof (rule synth_analz_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (G \\<union> H)", "have \"range Agent \\<union> G \\<union> (range Agent \\<union> H) \\<subseteq> synth (G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AgentSet \\<union> G \\<union> (AgentSet \\<union> H)\n    \\<subseteq> synth (G \\<union> H)", "by auto"], ["proof (state)\nthis:\n  AgentSet \\<union> G \\<union> (AgentSet \\<union> H)\n  \\<subseteq> synth (G \\<union> H)\n\ngoal (1 subgoal):\n 1. synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (G \\<union> H)", "then"], ["proof (chain)\npicking this:\n  AgentSet \\<union> G \\<union> (AgentSet \\<union> H)\n  \\<subseteq> synth (G \\<union> H)", "have \"synth (range Agent \\<union> G \\<union> (range Agent \\<union> H)) \\<subseteq> synth (synth (G \\<union> H))\""], ["proof (prove)\nusing this:\n  AgentSet \\<union> G \\<union> (AgentSet \\<union> H)\n  \\<subseteq> synth (G \\<union> H)\n\ngoal (1 subgoal):\n 1. synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (synth (G \\<union> H))", "by (rule synth_mono)"], ["proof (state)\nthis:\n  synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth (synth (G \\<union> H))\n\ngoal (1 subgoal):\n 1. synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (G \\<union> H)", "then"], ["proof (chain)\npicking this:\n  synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth (synth (G \\<union> H))", "show \"synth (range Agent \\<union> G \\<union> (range Agent \\<union> H)) \\<subseteq> synth (G \\<union> H)\""], ["proof (prove)\nusing this:\n  synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth (synth (G \\<union> H))\n\ngoal (1 subgoal):\n 1. synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (G \\<union> H)", "by auto"], ["proof (state)\nthis:\n  synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth (G \\<union> H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  synth (analz (synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))))\n  \\<subseteq> synth (analz (synth (G \\<union> H)))\n\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  synth (analz (synth (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))))\n  \\<subseteq> synth (analz (synth (G \\<union> H)))\n\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "have \"... = synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. synth (analz (synth (G \\<union> H))) = synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  synth (analz (synth (G \\<union> H))) = synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "finally"], ["proof (chain)\npicking this:\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth (analz (G \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> synth (analz (G \\<union> H))", "."], ["proof (state)\nthis:\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth (analz (G \\<union> H))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "from H"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "have \n   \"analz (implInsecSet_aux G \\<union> H) \\<subseteq>  \n      implInsecSet_aux G \\<union> Tags \\<union> PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n      PairSet (range Agent) G \\<union> analz (range Agent \\<union> G \\<union> (range Agent \\<union> H))\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                PairSet AgentSet (PairSet AgentSet G) \\<union>\n                PairSet AgentSet G \\<union>\n                analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "by (rule analz_Un_implInsecSet_aux_1)"], ["proof (state)\nthis:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              PairSet AgentSet G \\<union>\n              analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              PairSet AgentSet (PairSet AgentSet G) \\<union>\n              PairSet AgentSet G \\<union>\n              analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "have \"... = implInsecSet_aux G \\<union> Tags \\<union> \n                   (PairSet (range Agent) (PairSet (range Agent) G) \\<union>\n                   PairSet (range Agent) G) \\<union> analz (range Agent \\<union> G \\<union> (range Agent \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    PairSet AgentSet (PairSet AgentSet G) \\<union>\n    PairSet AgentSet G \\<union>\n    analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)) =\n    PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    (PairSet AgentSet (PairSet AgentSet G) \\<union>\n     PairSet AgentSet G) \\<union>\n    analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))", "by (simp only: Un_assoc Un_commute)"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  PairSet AgentSet G \\<union>\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  (PairSet AgentSet (PairSet AgentSet G) \\<union>\n   PairSet AgentSet G) \\<union>\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  PairSet AgentSet (PairSet AgentSet G) \\<union>\n  PairSet AgentSet G \\<union>\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H)) =\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  (PairSet AgentSet (PairSet AgentSet G) \\<union>\n   PairSet AgentSet G) \\<union>\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "have \"... \\<subseteq> implInsecSet_aux G \\<union> Tags \\<union> synth (analz (G \\<union> H)) \\<union> \n                    synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n    Tags \\<union>\n    (PairSet AgentSet (PairSet AgentSet G) \\<union>\n     PairSet AgentSet G) \\<union>\n    analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H)) \\<union>\n                synth (analz (G \\<union> H))", "by ((rule Un_mono)+, auto simp add: HH HHH)"], ["proof (state)\nthis:\n  PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n  Tags \\<union>\n  (PairSet AgentSet (PairSet AgentSet G) \\<union>\n   PairSet AgentSet G) \\<union>\n  analz (AgentSet \\<union> G \\<union> (AgentSet \\<union> H))\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H)) \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "finally"], ["proof (chain)\npicking this:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H)) \\<union>\n              synth (analz (G \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H)) \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> PairSet Tags\n                 (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n  \\<subseteq> PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implInsecSet_aux_3:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implInsecSet_aux G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implInsecSet_aux_2], auto)"], ["", "lemma analz_Un_implInsecSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (sym.implInsecSet G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz ({sym.implInsec A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implInsecSet_aux G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz ({sym.implInsec A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> analz\n                 (PairSet Tags\n                   (PairSet AgentSet (PairSet AgentSet G)) \\<union>\n                  H)\n 2. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "using analz_Un_implInsecSet_aux_3"], ["proof (prove)\nusing this:\n  Enc_keys_clean (?G \\<union> ?H) \\<Longrightarrow>\n  analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet ?G)) \\<union> ?H)\n  \\<subseteq> synth (analz (?G \\<union> ?H)) \\<union> - payload\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (PairSet Tags (PairSet AgentSet (PairSet AgentSet G)) \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Pull @{term implConfidSet} out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_implConfidSet_aux_1:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> \n     implConfidSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n     analz (G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "assume H:\"Enc_keys_clean (G \\<union> H)\""], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "have \"analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> \n        implConfidSet_aux Ag G \\<union> analz (PairSet Tags G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union>\n                analz (PairSet Tags G \\<union> H)", "by (rule analz_Un_EncSet, fast, blast intro: H)"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union>\n              analz (PairSet Tags G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union>\n              analz (PairSet Tags G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "have \"... \\<subseteq> implConfidSet_aux Ag G \\<union> (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implSecureSet_aux Ag G \\<union> analz (PairSet Tags G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union>\n                (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H))", "by (rule Un_mono, blast, rule analz_Un_PairSet)"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union> analz (PairSet Tags G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union>\n              (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union> analz (PairSet Tags G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union>\n              (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "have \"... = implConfidSet_aux Ag G \\<union> PairSet Tags G \\<union> analz (Tags \\<union> (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implSecureSet_aux Ag G \\<union>\n    (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H)) =\n    implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n    analz (Tags \\<union> (G \\<union> H))", "by (simp only: Un_assoc)"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union>\n  (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H)) =\n  implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n  analz (Tags \\<union> (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union>\n  (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H)) =\n  implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n  analz (Tags \\<union> (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "have \"... \\<subseteq> implConfidSet_aux Ag G \\<union> PairSet Tags G \\<union> (Tags \\<union> analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n    analz (Tags \\<union> (G \\<union> H))\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                (Tags \\<union> analz (G \\<union> H))", "by (rule Un_mono, blast, rule analz_Un_Tag, blast intro: H)"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n  analz (Tags \\<union> (G \\<union> H))\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              (Tags \\<union> analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "finally"], ["proof (chain)\npicking this:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              (Tags \\<union> analz (G \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              (Tags \\<union> analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "by auto"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              analz (G \\<union> H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implConfidSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> \n     implConfidSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n     synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "assume H:\"Enc_keys_clean (G \\<union> H)\""], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "from H"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "have \"analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> \n                implConfidSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union> analz (G \\<union> H)\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "by (rule analz_Un_implConfidSet_aux_1)"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "have \"... \\<subseteq> implConfidSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union> synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n    analz (G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n  analz (G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "finally"], ["proof (chain)\npicking this:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implConfidSet_aux_3:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implConfidSet_aux_2], auto)"], ["", "lemma analz_Un_implConfidSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (sym.implConfidSet Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     ({sym.implConfid A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implConfidSet_aux Ag G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     ({sym.implConfid A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> analz (implSecureSet_aux Ag G \\<union> H)\n 2. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "using analz_Un_implConfidSet_aux_3"], ["proof (prove)\nusing this:\n  Enc_keys_clean (?G \\<union> ?H) \\<Longrightarrow>\n  analz (implSecureSet_aux ?Ag ?G \\<union> ?H)\n  \\<subseteq> synth (analz (?G \\<union> ?H)) \\<union> - payload\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Pull @{term implConfidSet} out of @{term analz}, 2nd case where the agents are honest.\\<close>"], ["", "lemma analz_Un_implConfidSet_2_aux_1:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> implConfidSet_aux Ag G \\<union> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> implSecureSet_aux Ag G \\<union>\n                                  synth (analz H)", "apply (rule subset_trans [OF analz_Un_EncSet2], simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(A, B). shrK A B) ` Ag \\<subseteq> range LtK\n 2. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(A, B). shrK A B) ` Ag \\<inter>\n                      synth (analz H) =\n                      {}\n 3. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> implSecureSet_aux Ag G \\<union> analz H\n                      \\<subseteq> implSecureSet_aux Ag G \\<union>\n                                  synth (analz H)", "apply (auto dest:analz_into_parts)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_Un_implConfidSet_2_aux_3:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implConfidSet_aux Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implConfidSet_2_aux_1], auto)"], ["", "lemma analz_Un_implConfidSet_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (sym.implConfidSet Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       ({sym.implConfid A B M |A B M.\n                         (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                        H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implConfidSet_aux Ag G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       ({sym.implConfid A B M |A B M.\n                         (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                        H)\n                      \\<subseteq> analz (implSecureSet_aux Ag G \\<union> H)\n 2. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "using analz_Un_implConfidSet_2_aux_3"], ["proof (prove)\nusing this:\n  \\<lbrakk>Enc_keys_clean ?H;\n   ?Ag \\<inter> broken (parts ?H \\<inter> range LtK) = {}\\<rbrakk>\n  \\<Longrightarrow> analz (implSecureSet_aux ?Ag ?G \\<union> ?H)\n                    \\<subseteq> synth (analz ?H) \\<union> - payload\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Pull @{term implSecureSet} out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_implSecureSet_aux_1:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> \n     implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n     analz (G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "assume H:\"Enc_keys_clean (G \\<union> H)\""], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "have \"analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> \n        implSecureSet_aux Ag G \\<union> analz (PairSet Tags G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union>\n                analz (PairSet Tags G \\<union> H)", "by (rule analz_Un_EncSet, fast, blast intro: H)"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union>\n              analz (PairSet Tags G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union>\n              analz (PairSet Tags G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "have \"... \\<subseteq> implSecureSet_aux Ag G \\<union> (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implSecureSet_aux Ag G \\<union> analz (PairSet Tags G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union>\n                (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H))", "by (rule Un_mono, blast, rule analz_Un_PairSet)"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union> analz (PairSet Tags G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union>\n              (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union> analz (PairSet Tags G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union>\n              (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "have \"... = implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> analz (Tags \\<union> (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implSecureSet_aux Ag G \\<union>\n    (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H)) =\n    implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n    analz (Tags \\<union> (G \\<union> H))", "by (simp only: Un_assoc)"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union>\n  (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H)) =\n  implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n  analz (Tags \\<union> (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union>\n  (PairSet Tags G \\<union> analz (Tags \\<union> G \\<union> H)) =\n  implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n  analz (Tags \\<union> (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "have \"... \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> (Tags \\<union> analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n    analz (Tags \\<union> (G \\<union> H))\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                (Tags \\<union> analz (G \\<union> H))", "by (rule Un_mono, blast, rule analz_Un_Tag, blast intro: H)"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n  analz (Tags \\<union> (G \\<union> H))\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              (Tags \\<union> analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "finally"], ["proof (chain)\npicking this:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              (Tags \\<union> analz (G \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              (Tags \\<union> analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "by auto"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              analz (G \\<union> H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implSecureSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> \n     implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n     synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "assume H:\"Enc_keys_clean (G \\<union> H)\""], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "from H"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "have \"analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> \n                implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union> analz (G \\<union> H)\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                analz (G \\<union> H)", "by (rule analz_Un_implSecureSet_aux_1)"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "have \"... \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union> synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n    analz (G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union> Tags \\<union>\n  analz (G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "finally"], ["proof (chain)\npicking this:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n                Tags \\<union>\n                synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  analz (implSecureSet_aux Ag G \\<union> H)\n  \\<subseteq> implSecureSet_aux Ag G \\<union> PairSet Tags G \\<union>\n              Tags \\<union>\n              synth (analz (G \\<union> H))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implSecureSet_aux_3:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implSecureSet_aux_2], auto)"], ["", "lemma analz_Un_implSecureSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (sym.implSecureSet Ag G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     ({sym.implSecure A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implSecureSet_aux Ag G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz\n     ({sym.implSecure A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> analz (implSecureSet_aux Ag G \\<union> H)\n 2. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "using analz_Un_implSecureSet_aux_3"], ["proof (prove)\nusing this:\n  Enc_keys_clean (?G \\<union> ?H) \\<Longrightarrow>\n  analz (implSecureSet_aux ?Ag ?G \\<union> ?H)\n  \\<subseteq> synth (analz (?G \\<union> ?H)) \\<union> - payload\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implSecureSet_aux Ag G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>\nPull @{term implSecureSet} out of @{term analz}, 2nd case, where the agents are honest. \n\\<close>"], ["", "lemma analz_Un_implSecureSet_2_aux_1:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> implSecureSet_aux Ag G \\<union> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> implSecureSet_aux Ag G \\<union>\n                                  synth (analz H)", "apply (rule subset_trans [OF analz_Un_EncSet2], simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(A, B). shrK A B) ` Ag \\<subseteq> range LtK\n 2. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>(A, B). shrK A B) ` Ag \\<inter>\n                      synth (analz H) =\n                      {}\n 3. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> implSecureSet_aux Ag G \\<union> analz H\n                      \\<subseteq> implSecureSet_aux Ag G \\<union>\n                                  synth (analz H)", "apply (auto dest:analz_into_parts)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_Un_implSecureSet_2_aux_3:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (implSecureSet_aux Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implSecureSet_2_aux_1], auto)"], ["", "lemma analz_Un_implSecureSet_2:\n  \"Enc_keys_clean H \\<Longrightarrow>\n   Ag \\<inter> broken (parts H \\<inter> range LtK) = {} \\<Longrightarrow>\n   analz (sym.implSecureSet Ag G \\<union> H) \\<subseteq> synth (analz H) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       ({sym.implSecure A B M |A B M.\n                         (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                        H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implSecureSet_aux Ag G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz\n                       ({sym.implSecure A B M |A B M.\n                         (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                        H)\n                      \\<subseteq> analz (implSecureSet_aux Ag G \\<union> H)\n 2. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "using analz_Un_implSecureSet_2_aux_3"], ["proof (prove)\nusing this:\n  \\<lbrakk>Enc_keys_clean ?H;\n   ?Ag \\<inter> broken (parts ?H \\<inter> range LtK) = {}\\<rbrakk>\n  \\<Longrightarrow> analz (implSecureSet_aux ?Ag ?G \\<union> ?H)\n                    \\<subseteq> synth (analz ?H) \\<union> - payload\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Enc_keys_clean H;\n     Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n    \\<Longrightarrow> analz (implSecureSet_aux Ag G \\<union> H)\n                      \\<subseteq> synth (analz H) \\<union> - payload", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Pull @{term implAuthSet} out of @{term analz}\\<close>"], ["", "(**************************************************************************************************)"], ["", "lemma analz_Un_implAuthSet_aux_1:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implAuthSet_aux G \\<union> H) \\<subseteq> \n     implAuthSet_aux G \\<union> HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union>\n     analz (G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "assume H:\"Enc_keys_clean (G \\<union> H)\""], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "have \"analz (implAuthSet_aux G \\<union> H) \\<subseteq> implAuthSet_aux G \\<union>\n          analz (G \\<union> HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                analz\n                 (G \\<union>\n                  HashSet\n                   (PairSet (PairSet Tags G)\n                     (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                  H)", "by (rule analz_Un_PairSet)"], ["proof (state)\nthis:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              analz\n               (G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              analz\n               (G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "have \"... = implAuthSet_aux G \\<union>\n          analz (HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union> G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implAuthSet_aux G \\<union>\n    analz\n     (G \\<union>\n      HashSet\n       (PairSet (PairSet Tags G)\n         (range (\\<lambda>(A, B). shrK A B))) \\<union>\n      H) =\n    implAuthSet_aux G \\<union>\n    analz\n     (HashSet\n       (PairSet (PairSet Tags G)\n         (range (\\<lambda>(A, B). shrK A B))) \\<union>\n      G \\<union>\n      H)", "by (simp only: Un_assoc Un_commute)"], ["proof (state)\nthis:\n  implAuthSet_aux G \\<union>\n  analz\n   (G \\<union>\n    HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    H) =\n  implAuthSet_aux G \\<union>\n  analz\n   (HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    G \\<union>\n    H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  implAuthSet_aux G \\<union>\n  analz\n   (G \\<union>\n    HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    H) =\n  implAuthSet_aux G \\<union>\n  analz\n   (HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    G \\<union>\n    H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "have \"... = implAuthSet_aux G \\<union>\n          analz (HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union> (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implAuthSet_aux G \\<union>\n    analz\n     (HashSet\n       (PairSet (PairSet Tags G)\n         (range (\\<lambda>(A, B). shrK A B))) \\<union>\n      G \\<union>\n      H) =\n    implAuthSet_aux G \\<union>\n    analz\n     (HashSet\n       (PairSet (PairSet Tags G)\n         (range (\\<lambda>(A, B). shrK A B))) \\<union>\n      (G \\<union> H))", "by (simp only: Un_assoc)"], ["proof (state)\nthis:\n  implAuthSet_aux G \\<union>\n  analz\n   (HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    G \\<union>\n    H) =\n  implAuthSet_aux G \\<union>\n  analz\n   (HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  implAuthSet_aux G \\<union>\n  analz\n   (HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    G \\<union>\n    H) =\n  implAuthSet_aux G \\<union>\n  analz\n   (HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "have \n    \"... \\<subseteq> implAuthSet_aux G \\<union> \n            (HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union>\n             analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implAuthSet_aux G \\<union>\n    analz\n     (HashSet\n       (PairSet (PairSet Tags G)\n         (range (\\<lambda>(A, B). shrK A B))) \\<union>\n      (G \\<union> H))\n    \\<subseteq> implAuthSet_aux G \\<union>\n                (HashSet\n                  (PairSet (PairSet Tags G)\n                    (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                 analz (G \\<union> H))", "by (rule Un_mono, blast, rule analz_Un_HashSet, blast intro: H, auto)"], ["proof (state)\nthis:\n  implAuthSet_aux G \\<union>\n  analz\n   (HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    (G \\<union> H))\n  \\<subseteq> implAuthSet_aux G \\<union>\n              (HashSet\n                (PairSet (PairSet Tags G)\n                  (range (\\<lambda>(A, B). shrK A B))) \\<union>\n               analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "also"], ["proof (state)\nthis:\n  implAuthSet_aux G \\<union>\n  analz\n   (HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    (G \\<union> H))\n  \\<subseteq> implAuthSet_aux G \\<union>\n              (HashSet\n                (PairSet (PairSet Tags G)\n                  (range (\\<lambda>(A, B). shrK A B))) \\<union>\n               analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "have \"... = implAuthSet_aux G \\<union> \n                   HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union>\n                   analz (G \\<union> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implAuthSet_aux G \\<union>\n    (HashSet\n      (PairSet (PairSet Tags G)\n        (range (\\<lambda>(A, B). shrK A B))) \\<union>\n     analz (G \\<union> H)) =\n    implAuthSet_aux G \\<union>\n    HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    analz (G \\<union> H)", "by auto"], ["proof (state)\nthis:\n  implAuthSet_aux G \\<union>\n  (HashSet\n    (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n   analz (G \\<union> H)) =\n  implAuthSet_aux G \\<union>\n  HashSet\n   (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n  analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "finally"], ["proof (chain)\npicking this:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              analz (G \\<union> H)", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "by auto"], ["proof (state)\nthis:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              analz (G \\<union> H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implAuthSet_aux_2:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (implAuthSet_aux G \\<union> H) \\<subseteq>\n     implAuthSet_aux G \\<union> HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union>\n     synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                synth (analz (G \\<union> H))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                synth (analz (G \\<union> H))", "assume H:\"Enc_keys_clean (G \\<union> H)\""], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                synth (analz (G \\<union> H))", "from H"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "have \n    \"analz (implAuthSet_aux G \\<union> H) \\<subseteq> \n       implAuthSet_aux G \\<union> \n       HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union>\n       analz (G \\<union> H)\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                analz (G \\<union> H)", "by (rule analz_Un_implAuthSet_aux_1)"], ["proof (state)\nthis:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                synth (analz (G \\<union> H))", "also"], ["proof (state)\nthis:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              analz (G \\<union> H)\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                synth (analz (G \\<union> H))", "have \n    \"... \\<subseteq> implAuthSet_aux G \\<union> \n            HashSet (PairSet (PairSet Tags G) (range (case_prod shrK))) \\<union>\n            synth (analz (G \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implAuthSet_aux G \\<union>\n    HashSet\n     (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n    analz (G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  implAuthSet_aux G \\<union>\n  HashSet\n   (PairSet (PairSet Tags G) (range (\\<lambda>(A, B). shrK A B))) \\<union>\n  analz (G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                synth (analz (G \\<union> H))", "finally"], ["proof (chain)\npicking this:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              synth (analz (G \\<union> H))", "show ?thesis"], ["proof (prove)\nusing this:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              synth (analz (G \\<union> H))\n\ngoal (1 subgoal):\n 1. analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> implAuthSet_aux G \\<union>\n                HashSet\n                 (PairSet (PairSet Tags G)\n                   (range (\\<lambda>(A, B). shrK A B))) \\<union>\n                synth (analz (G \\<union> H))", "by auto"], ["proof (state)\nthis:\n  analz (implAuthSet_aux G \\<union> H)\n  \\<subseteq> implAuthSet_aux G \\<union>\n              HashSet\n               (PairSet (PairSet Tags G)\n                 (range (\\<lambda>(A, B). shrK A B))) \\<union>\n              synth (analz (G \\<union> H))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma analz_Un_implAuthSet_aux_3:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n  analz (implAuthSet_aux G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule subset_trans [OF analz_Un_implAuthSet_aux_2], auto)"], ["", "lemma analz_Un_implAuthSet:\n  \"Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n   analz (sym.implAuthSet G \\<union> H) \\<subseteq> synth (analz (G \\<union> H)) \\<union> -payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz ({sym.implAuth A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule subset_trans [of _ \"analz (implAuthSet_aux G \\<union> H)\" _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz ({sym.implAuth A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> analz (implAuthSet_aux G \\<union> H)\n 2. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply (rule analz_mono, rule Un_mono, blast intro!: implSet_implSet_aux, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "using analz_Un_implAuthSet_aux_3"], ["proof (prove)\nusing this:\n  Enc_keys_clean (?G \\<union> ?H) \\<Longrightarrow>\n  analz (implAuthSet_aux ?G \\<union> ?H)\n  \\<subseteq> synth (analz (?G \\<union> ?H)) \\<union> - payload\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H) \\<Longrightarrow>\n    analz (implAuthSet_aux G \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare Enc_keys_clean_msgSet_Un [rule del]"], ["", "subsection \\<open>Locale interpretations\\<close>"], ["", "(**************************************************************************************************)"], ["", "interpretation sym: semivalid_implem implem_sym"], ["proof (prove)\ngoal (1 subgoal):\n 1. semivalid_implem implem_sym", "proof (unfold_locales)"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x A B M x' A' B' M'.\n       (implem_sym (Chan x A B M) = implem_sym (Chan x' A' B' M')) =\n       (x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M')\n 2. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_sym (Chan x A B M)\n        \\<in> parts {implem_sym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 3. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 4. \\<And>Z. composed (implem_sym Z)\n 5. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 6. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 10. \\<And>G H.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 12 subgoals...", "fix x A B M x' A' B' M'"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x A B M x' A' B' M'.\n       (implem_sym (Chan x A B M) = implem_sym (Chan x' A' B' M')) =\n       (x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M')\n 2. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_sym (Chan x A B M)\n        \\<in> parts {implem_sym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 3. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 4. \\<And>Z. composed (implem_sym Z)\n 5. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 6. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 10. \\<And>G H.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 12 subgoals...", "show \"implem_sym (Chan x A B M) = implem_sym (Chan x' A' B' M') \\<longleftrightarrow>\n        x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (implem_sym (Chan x A B M) = implem_sym (Chan x' A' B' M')) =\n    (x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M')", "by (cases x, (cases x', auto)+)"], ["proof (state)\nthis:\n  (implem_sym (Chan x A B M) = implem_sym (Chan x' A' B' M')) =\n  (x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M')\n\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_sym (Chan x A B M)\n        \\<in> parts {implem_sym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_sym Z)\n 4. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_sym (Chan x A B M)\n        \\<in> parts {implem_sym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_sym Z)\n 4. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "fix M' M x x' A A' B B'"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_sym (Chan x A B M)\n        \\<in> parts {implem_sym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_sym Z)\n 4. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "assume H: \"M' \\<in> payload\""], ["proof (state)\nthis:\n  M' \\<in> payload\n\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_sym (Chan x A B M)\n        \\<in> parts {implem_sym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_sym Z)\n 4. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  M' \\<in> payload", "have A1: \"\\<And>y. y \\<in> parts {M'} \\<Longrightarrow> y \\<in> payload\" \n        and A2: \"\\<And>y. M' = y \\<Longrightarrow> y \\<in> payload\""], ["proof (prove)\nusing this:\n  M' \\<in> payload\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> parts {M'} \\<Longrightarrow> y \\<in> payload) &&&\n    (\\<And>y. M' = y \\<Longrightarrow> y \\<in> payload)", "by auto"], ["proof (state)\nthis:\n  ?y \\<in> parts {M'} \\<Longrightarrow> ?y \\<in> payload\n  M' = ?y \\<Longrightarrow> ?y \\<in> payload\n\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_sym (Chan x A B M)\n        \\<in> parts {implem_sym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_sym Z)\n 4. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "assume \"implem_sym (Chan x A B M) \\<in> parts {implem_sym (Chan x' A' B' M')}\""], ["proof (state)\nthis:\n  implem_sym (Chan x A B M) \\<in> parts {implem_sym (Chan x' A' B' M')}\n\ngoal (11 subgoals):\n 1. \\<And>M' x A B M x' A' B'.\n       \\<lbrakk>M' \\<in> payload;\n        implem_sym (Chan x A B M)\n        \\<in> parts {implem_sym (Chan x' A' B' M')}\\<rbrakk>\n       \\<Longrightarrow> x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n 2. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 3. \\<And>Z. composed (implem_sym Z)\n 4. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 5. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 9. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n- payload\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  implem_sym (Chan x A B M) \\<in> parts {implem_sym (Chan x' A' B' M')}", "show \"x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\""], ["proof (prove)\nusing this:\n  implem_sym (Chan x A B M) \\<in> parts {implem_sym (Chan x' A' B' M')}\n\ngoal (1 subgoal):\n 1. x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'", "by (cases \"x\", (cases x', auto dest!: A1 A2)+)"], ["proof (state)\nthis:\n  x = x' \\<and> A = A' \\<and> B = B' \\<and> M = M'\n\ngoal (10 subgoals):\n 1. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 2. \\<And>Z. composed (implem_sym Z)\n 3. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 4. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 8. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n         Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 2. \\<And>Z. composed (implem_sym Z)\n 3. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 4. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 8. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n         Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz H) \\<union> - payload", "fix I"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 2. \\<And>Z. composed (implem_sym Z)\n 3. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 4. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 8. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n         Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz H) \\<union> - payload", "assume \"I \\<subseteq> sym.valid\""], ["proof (state)\nthis:\n  I \\<subseteq> sym.valid\n\ngoal (10 subgoals):\n 1. \\<And>I. I \\<subseteq> sym.valid \\<Longrightarrow> Enc_keys_clean I\n 2. \\<And>Z. composed (implem_sym Z)\n 3. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 4. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 8. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 10. \\<And>G H Ag.\n        \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n         Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n        \\<Longrightarrow> analz\n                           ({sym.implSecure A B M |A B M.\n                             (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                            H)\n                          \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  I \\<subseteq> sym.valid", "show \"Enc_keys_clean I\""], ["proof (prove)\nusing this:\n  I \\<subseteq> sym.valid\n\ngoal (1 subgoal):\n 1. Enc_keys_clean I", "proof (simp add: Enc_keys_clean_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>I \\<subseteq> sym.valid; I \\<subseteq> sym.valid;\n        Enc X Y \\<in> parts I\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> range LtK \\<or> Y \\<in> payload", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>I \\<subseteq> sym.valid; I \\<subseteq> sym.valid;\n        Enc X Y \\<in> parts I\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> range LtK \\<or> Y \\<in> payload", "assume \"Enc X Y \\<in> parts I\""], ["proof (state)\nthis:\n  Enc X Y \\<in> parts I\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>I \\<subseteq> sym.valid; I \\<subseteq> sym.valid;\n        Enc X Y \\<in> parts I\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> range LtK \\<or> Y \\<in> payload", "obtain x A B M where \"M \\<in> payload\" and \"Enc X Y \\<in> parts {implem_sym (Chan x A B M)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M x A B.\n        \\<lbrakk>M \\<in> payload;\n         Enc X Y \\<in> parts {implem_sym (Chan x A B M)}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parts_singleton [OF \\<open>Enc X Y \\<in> parts I\\<close>] \\<open>I \\<subseteq> sym.valid\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>Ya\\<in>I. Enc X Y \\<in> parts {Ya}\n  I \\<subseteq> sym.valid\n\ngoal (1 subgoal):\n 1. (\\<And>M x A B.\n        \\<lbrakk>M \\<in> payload;\n         Enc X Y \\<in> parts {implem_sym (Chan x A B M)}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: sym.validE)"], ["proof (state)\nthis:\n  M \\<in> payload\n  Enc X Y \\<in> parts {implem_sym (Chan x A B M)}\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>I \\<subseteq> sym.valid; I \\<subseteq> sym.valid;\n        Enc X Y \\<in> parts I\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> range LtK \\<or> Y \\<in> payload", "then"], ["proof (chain)\npicking this:\n  M \\<in> payload\n  Enc X Y \\<in> parts {implem_sym (Chan x A B M)}", "show \"Y \\<in> range LtK \\<or> Y \\<in> payload\""], ["proof (prove)\nusing this:\n  M \\<in> payload\n  Enc X Y \\<in> parts {implem_sym (Chan x A B M)}\n\ngoal (1 subgoal):\n 1. Y \\<in> range LtK \\<or> Y \\<in> payload", "by (cases x, auto)"], ["proof (state)\nthis:\n  Y \\<in> range LtK \\<or> Y \\<in> payload\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Enc_keys_clean I\n\ngoal (9 subgoals):\n 1. \\<And>Z. composed (implem_sym Z)\n 2. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 3. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>Z. composed (implem_sym Z)\n 2. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 3. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix Z"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>Z. composed (implem_sym Z)\n 2. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 3. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 7. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 9. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "show \"composed (implem_sym Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composed (implem_sym Z)", "proof (cases Z, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 x4.\n       Z = Chan x1 x2 x3 x4 \\<Longrightarrow>\n       composed (implem_sym (Chan x1 x2 x3 x4))", "fix x A B M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 x4.\n       Z = Chan x1 x2 x3 x4 \\<Longrightarrow>\n       composed (implem_sym (Chan x1 x2 x3 x4))", "show \"composed (implem_sym (Chan x A B M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composed (implem_sym (Chan x A B M))", "by (cases x, auto)"], ["proof (state)\nthis:\n  composed (implem_sym (Chan x A B M))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  composed (implem_sym Z)\n\ngoal (8 subgoals):\n 1. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 2. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 2. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix x A B M"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x A B M. implem_sym (Chan x A B M) \\<notin> payload\n 2. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 6. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 8. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "show \"implem_sym (Chan x A B M) \\<notin> payload\""], ["proof (prove)\ngoal (1 subgoal):\n 1. implem_sym (Chan x A B M) \\<notin> payload", "by (cases x, auto)"], ["proof (state)\nthis:\n  implem_sym (Chan x A B M) \\<notin> payload\n\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix X K"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"X \\<in> sym.valid\""], ["proof (state)\nthis:\n  X \\<in> sym.valid\n\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  X \\<in> sym.valid", "obtain x A B M where \"M \\<in> payload\" \"X = implem_sym (Chan x A B M)\""], ["proof (prove)\nusing this:\n  X \\<in> sym.valid\n\ngoal (1 subgoal):\n 1. (\\<And>M x A B.\n        \\<lbrakk>M \\<in> payload; X = implem_sym (Chan x A B M)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: sym.validE)"], ["proof (state)\nthis:\n  M \\<in> payload\n  X = implem_sym (Chan x A B M)\n\ngoal (7 subgoals):\n 1. \\<And>X K. X \\<in> sym.valid \\<Longrightarrow> LtK K \\<notin> parts {X}\n 2. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 5. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 7. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  M \\<in> payload\n  X = implem_sym (Chan x A B M)", "show \"LtK K \\<notin> parts {X}\""], ["proof (prove)\nusing this:\n  M \\<in> payload\n  X = implem_sym (Chan x A B M)\n\ngoal (1 subgoal):\n 1. LtK K \\<notin> parts {X}", "by (cases x, auto)"], ["proof (state)\nthis:\n  LtK K \\<notin> parts {X}\n\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (6 subgoals):\n 1. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implInsec A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 4. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 6. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "show \"analz ({implem_sym (Insec A B M) |A B M. M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz (G \\<union> H)) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz ({sym.implInsec A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule analz_Un_implInsecSet)"], ["proof (state)\nthis:\n  analz ({sym.implInsec A B M |A B M. M \\<in> G} \\<union> H)\n  \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload\n\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (5 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implAuth A B M |A B M. M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 5. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "show \"analz ({implem_sym (Auth A B M) |A B M. M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz (G \\<union> H)) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz ({sym.implAuth A B M |A B M. M \\<in> G} \\<union> H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule analz_Un_implAuthSet)"], ["proof (state)\nthis:\n  analz ({sym.implAuth A B M |A B M. M \\<in> G} \\<union> H)\n  \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload\n\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H Ag"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (4 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 4. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "show \"analz ({implem_sym (Confid A B M) |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz (G \\<union> H)) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz\n     ({sym.implConfid A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule analz_Un_implConfidSet)"], ["proof (state)\nthis:\n  analz\n   ({sym.implConfid A B M |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n    H)\n  \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload\n\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H Ag"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"G \\<subseteq> payload\" \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean (G \\<union> H)\""], ["proof (prove)\nusing this:\n  G \\<subseteq> payload\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean (G \\<union> H)", "by (auto intro: Enc_keys_clean_Un)"], ["proof (state)\nthis:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (3 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz (G \\<union> H)) \\<union>\n                                     - payload\n 3. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "then"], ["proof (chain)\npicking this:\n  Enc_keys_clean (G \\<union> H)", "show \"analz ({implem_sym (Secure A B M) |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz (G \\<union> H)) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean (G \\<union> H)\n\ngoal (1 subgoal):\n 1. analz\n     ({sym.implSecure A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload", "by (rule analz_Un_implSecureSet)"], ["proof (state)\nthis:\n  analz\n   ({sym.implSecure A B M |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n    H)\n  \\<subseteq> synth (analz (G \\<union> H)) \\<union> - payload\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H Ag"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  Enc_keys_clean H\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "hence \"Enc_keys_clean H\""], ["proof (prove)\nusing this:\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. Enc_keys_clean H", "by auto"], ["proof (state)\nthis:\n  Enc_keys_clean H\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "moreover"], ["proof (state)\nthis:\n  Enc_keys_clean H\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\""], ["proof (state)\nthis:\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\n\ngoal (2 subgoals):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implConfid A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload\n 2. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "ultimately"], ["proof (chain)\npicking this:\n  Enc_keys_clean H\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}", "show \"analz ({implem_sym (Confid A B M) |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz H) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean H\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\n\ngoal (1 subgoal):\n 1. analz\n     ({sym.implConfid A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz H) \\<union> - payload", "by (rule analz_Un_implConfidSet_2)"], ["proof (state)\nthis:\n  analz\n   ({sym.implConfid A B M |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n    H)\n  \\<subseteq> synth (analz H) \\<union> - payload\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "fix G H Ag"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"Enc_keys_clean H\""], ["proof (state)\nthis:\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "moreover"], ["proof (state)\nthis:\n  Enc_keys_clean H\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "assume \"Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\""], ["proof (state)\nthis:\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\n\ngoal (1 subgoal):\n 1. \\<And>G H Ag.\n       \\<lbrakk>G \\<subseteq> payload; Enc_keys_clean H;\n        Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\\<rbrakk>\n       \\<Longrightarrow> analz\n                          ({sym.implSecure A B M |A B M.\n                            (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n                           H)\n                         \\<subseteq> synth (analz H) \\<union> - payload", "ultimately"], ["proof (chain)\npicking this:\n  Enc_keys_clean H\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}", "show \"analz ({implem_sym (Secure A B M) |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union> H) \\<subseteq> \n               synth (analz H) \\<union> - payload\""], ["proof (prove)\nusing this:\n  Enc_keys_clean H\n  Ag \\<inter> broken (parts H \\<inter> range LtK) = {}\n\ngoal (1 subgoal):\n 1. analz\n     ({sym.implSecure A B M |A B M.\n       (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n      H)\n    \\<subseteq> synth (analz H) \\<union> - payload", "by (rule analz_Un_implSecureSet_2)"], ["proof (state)\nthis:\n  analz\n   ({sym.implSecure A B M |A B M. (A, B) \\<in> Ag \\<and> M \\<in> G} \\<union>\n    H)\n  \\<subseteq> synth (analz H) \\<union> - payload\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThird step: @{locale \"valid_implem\"}.\nThe lemmas giving conditions on $M$, $A$ and $B$ for \n@{prop \"implXXX A B M \\<in> synth (analz Z)\"}.\n\\<close>"], ["", "lemma implInsec_synth_analz:\n  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   sym.implInsec A B M \\<in> synth (analz H) \\<Longrightarrow>\n   sym.implInsec A B M \\<in> H \\<or> M \\<in> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     sym.implInsec A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> sym.implInsec A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H)", "apply (erule synth.cases, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma implConfid_synth_analz:\n  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   sym.implConfid A B M \\<in> synth (analz H) \\<Longrightarrow>\n   sym.implConfid A B M \\<in> H \\<or> M \\<in> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     sym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> sym.implConfid A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H)", "apply (erule synth.cases, auto)\n\\<comment> \\<open>1 subgoal\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Enc \\<langle>ConfidTag, M\\<rangle> (shrK A B) \\<in> analz H;\n     M \\<notin> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> Enc \\<langle>ConfidTag, M\\<rangle> (shrK A B) \\<in> H", "apply (frule sym.analz_valid [where x=confid], auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma implAuth_synth_analz:\n  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   sym.implAuth A B M \\<in> synth (analz H) \\<Longrightarrow>\n   sym.implAuth A B M \\<in> H \\<or> (M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "using [[simproc del: defined_all]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "proof (erule synth.cases, simp_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "fix X"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "assume H:  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "assume H':\"\\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> = X\" \" X \\<in> analz H\""], ["proof (state)\nthis:\n  \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> = X\n  X \\<in> analz H\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "hence \"sym.implAuth A B M \\<in> analz H\""], ["proof (prove)\nusing this:\n  \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> = X\n  X \\<in> analz H\n\ngoal (1 subgoal):\n 1. sym.implAuth A B M \\<in> analz H", "by auto"], ["proof (state)\nthis:\n  sym.implAuth A B M \\<in> analz H\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "with H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implAuth A B M \\<in> analz H", "have \"sym.implAuth A B M \\<in> H\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implAuth A B M \\<in> analz H\n\ngoal (1 subgoal):\n 1. sym.implAuth A B M \\<in> H", "by (rule sym.analz_valid)"], ["proof (state)\nthis:\n  sym.implAuth A B M \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> =\n        X;\n        X \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "with H'"], ["proof (chain)\npicking this:\n  \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> = X\n  X \\<in> analz H\n  sym.implAuth A B M \\<in> H", "show \"X \\<in> H \\<or> M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  \\<langle>M, hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\\<rangle> = X\n  X \\<in> analz H\n  sym.implAuth A B M \\<in> H\n\ngoal (1 subgoal):\n 1. X \\<in> H \\<or> M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "by auto"], ["proof (state)\nthis:\n  X \\<in> H \\<or> M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "assume H:\"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "assume H':\"M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y\" \"Y \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y\n  Y \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "hence \"hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> synth (analz H)\""], ["proof (prove)\nusing this:\n  M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y\n  Y \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> synth (analz H)", "by auto"], ["proof (state)\nthis:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> synth (analz H)", "have \"hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> analz H \\<or> \n             shrK A B \\<in> synth (analz H)\""], ["proof (prove)\nusing this:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> analz H \\<or>\n    shrK A B \\<in> synth (analz H)", "by (rule synth.cases, auto)"], ["proof (state)\nthis:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> analz H \\<or>\n  shrK A B \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y;\n        X \\<in> synth (analz H); Y \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>X,\n                           hmac \\<langle>AuthTag, X\\<rangle>\n                            (shrK A B)\\<rangle>\n                         \\<in> H \\<or>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> analz H \\<or>\n  shrK A B \\<in> synth (analz H)", "show \"\\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle> \\<in> H \\<or> (A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> analz H \\<or>\n  shrK A B \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H\n 2. shrK A B \\<in> synth (analz H) \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "assume \"shrK A B \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  shrK A B \\<in> synth (analz H)\n\ngoal (2 subgoals):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H\n 2. shrK A B \\<in> synth (analz H) \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "with H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  shrK A B \\<in> synth (analz H)", "have \"(A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  shrK A B \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. (A, B) \\<in> broken H", "by (auto dest:sym.analz_LtKeys)"], ["proof (state)\nthis:\n  (A, B) \\<in> broken H\n\ngoal (2 subgoals):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H\n 2. shrK A B \\<in> synth (analz H) \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  (A, B) \\<in> broken H", "show ?thesis"], ["proof (prove)\nusing this:\n  (A, B) \\<in> broken H\n\ngoal (1 subgoal):\n 1. \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "by auto"], ["proof (state)\nthis:\n  \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n  \\<in> H \\<or>\n  (A, B) \\<in> broken H\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "assume \"hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> analz H\""], ["proof (state)\nthis:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> analz H\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "hence \"hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H\""], ["proof (prove)\nusing this:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> analz H\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H", "by (rule analz_into_parts)"], ["proof (state)\nthis:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "with H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H", "have \"hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H", "by (auto dest!:payload_parts elim!:payload_Hash)"], ["proof (state)\nthis:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "from H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags", "obtain Z where \"Z \\<in> H\" and H'':\"hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n\ngoal (1 subgoal):\n 1. (\\<And>Z.\n        \\<lbrakk>Z \\<in> H;\n         hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n         \\<in> parts {Z}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parts_singleton [OF \\<open>hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts H\\<close>]"], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  \\<exists>Y\\<in>H.\n     hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Y}\n\ngoal (1 subgoal):\n 1. (\\<And>Z.\n        \\<lbrakk>Z \\<in> H;\n         hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n         \\<in> parts {Z}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Z \\<in> H\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "moreover"], ["proof (state)\nthis:\n  Z \\<in> H\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "with H"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  Z \\<in> H\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}", "have \"Z \\<in> sym.valid\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  Z \\<in> H\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}\n\ngoal (1 subgoal):\n 1. Z \\<in> sym.valid", "by (auto dest!: subsetD)"], ["proof (state)\nthis:\n  Z \\<in> sym.valid\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "moreover"], ["proof (state)\nthis:\n  Z \\<in> sym.valid\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "with H''"], ["proof (chain)\npicking this:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}\n  Z \\<in> sym.valid", "have \"Z = sym.implAuth A B M\""], ["proof (prove)\nusing this:\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}\n  Z \\<in> sym.valid\n\ngoal (1 subgoal):\n 1. Z = sym.implAuth A B M", "by (auto) (erule sym.valid_cases, auto)"], ["proof (state)\nthis:\n  Z = sym.implAuth A B M\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "ultimately"], ["proof (chain)\npicking this:\n  Z \\<in> H\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}\n  Z \\<in> sym.valid\n  Z = sym.implAuth A B M", "have \"sym.implAuth A B M \\<in> H\""], ["proof (prove)\nusing this:\n  Z \\<in> H\n  hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) \\<in> parts {Z}\n  Z \\<in> sym.valid\n  Z = sym.implAuth A B M\n\ngoal (1 subgoal):\n 1. sym.implAuth A B M \\<in> H", "by auto"], ["proof (state)\nthis:\n  sym.implAuth A B M \\<in> H\n\ngoal (1 subgoal):\n 1. hmac \\<langle>AuthTag, M\\<rangle> (shrK A B)\n    \\<in> analz H \\<Longrightarrow>\n    \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "with H'"], ["proof (chain)\npicking this:\n  M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y\n  Y \\<in> synth (analz H)\n  sym.implAuth A B M \\<in> H", "show ?thesis"], ["proof (prove)\nusing this:\n  M = X \\<and> hmac \\<langle>AuthTag, M\\<rangle> (shrK A B) = Y\n  Y \\<in> synth (analz H)\n  sym.implAuth A B M \\<in> H\n\ngoal (1 subgoal):\n 1. \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n    \\<in> H \\<or>\n    (A, B) \\<in> broken H", "by auto"], ["proof (state)\nthis:\n  \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n  \\<in> H \\<or>\n  (A, B) \\<in> broken H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>X, hmac \\<langle>AuthTag, X\\<rangle> (shrK A B)\\<rangle>\n  \\<in> H \\<or>\n  (A, B) \\<in> broken H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma implSecure_synth_analz:\n  \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags \\<Longrightarrow>\n   sym.implSecure A B M \\<in> synth (analz H) \\<Longrightarrow>\n   sym.implSecure A B M \\<in> H \\<or> (M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                      M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "apply (erule synth.cases, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> M \\<in> synth (analz H)\n 2. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H\n 3. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     shrK A B \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H;\n     SecureTag \\<in> synth (analz H); M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H", "(* 1 subgoal*)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> M \\<in> synth (analz H)\n 2. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H\n 3. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     shrK A B \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H;\n     SecureTag \\<in> synth (analz H); M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H", "apply (frule sym.analz_valid [where x=secure], auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H\n 2. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     shrK A B \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H;\n     SecureTag \\<in> synth (analz H); M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H", "apply (frule sym.analz_valid [where x=secure], auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                           range LtK \\<union>\n                           Tags;\n     shrK A B \\<in> analz H;\n     Enc \\<langle>SecureTag, M\\<rangle> (shrK A B) \\<notin> H;\n     priK A \\<notin> H; priK B \\<notin> H; shrK B A \\<notin> H;\n     SecureTag \\<in> synth (analz H); M \\<in> synth (analz H)\\<rbrakk>\n    \\<Longrightarrow> shrK A B \\<in> H", "apply (auto dest:sym.analz_LtKeys)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "interpretation sym: valid_implem implem_sym"], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_implem implem_sym", "proof (unfold_locales)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implInsec A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implInsec A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 4. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix H A B M"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implInsec A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implInsec A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 4. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\"\n         \"implem_sym (Insec A B M) \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implInsec A B M \\<in> synth (analz H)\n\ngoal (4 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implInsec A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implInsec A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 4. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implInsec A B M \\<in> synth (analz H)", "show \"implem_sym (Insec A B M) \\<in> H \\<or> M \\<in> synth (analz H)\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implInsec A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. sym.implInsec A B M \\<in> H \\<or> M \\<in> synth (analz H)", "by (rule implInsec_synth_analz)"], ["proof (state)\nthis:\n  sym.implInsec A B M \\<in> H \\<or> M \\<in> synth (analz H)\n\ngoal (3 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix H A B M"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\"\n         \"implem_sym (Confid A B M) \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implConfid A B M \\<in> synth (analz H)\n\ngoal (3 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implConfid A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implConfid A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H)\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 3. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implConfid A B M \\<in> synth (analz H)", "show \"implem_sym (Confid A B M) \\<in> H \\<or> M \\<in> synth (analz H)\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implConfid A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. sym.implConfid A B M \\<in> H \\<or> M \\<in> synth (analz H)", "by (rule implConfid_synth_analz)"], ["proof (state)\nthis:\n  sym.implConfid A B M \\<in> H \\<or> M \\<in> synth (analz H)\n\ngoal (2 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix H A B M"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\"\n         \"implem_sym (Auth A B M) \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implAuth A B M \\<in> synth (analz H)\n\ngoal (2 subgoals):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implAuth A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implAuth A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H\n 2. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implAuth A B M \\<in> synth (analz H)", "show \"implem_sym (Auth A B M) \\<in> H \\<or> \n             M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implAuth A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. sym.implAuth A B M \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "by (rule implAuth_synth_analz)"], ["proof (state)\nthis:\n  sym.implAuth A B M \\<in> H \\<or>\n  M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal (1 subgoal):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "fix H A B M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "assume \"H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\"\n         \"implem_sym (Secure A B M) \\<in> synth (analz H)\""], ["proof (state)\nthis:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implSecure A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. \\<And>H A B M.\n       \\<lbrakk>H \\<subseteq> payload \\<union> sym.valid \\<union>\n                              range LtK \\<union>\n                              Tags;\n        sym.implSecure A B M \\<in> synth (analz H)\\<rbrakk>\n       \\<Longrightarrow> sym.implSecure A B M \\<in> H \\<or>\n                         M \\<in> synth (analz H) \\<and>\n                         (A, B) \\<in> broken H", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implSecure A B M \\<in> synth (analz H)", "show \"implem_sym (Secure A B M) \\<in> H \\<or> \n             M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\""], ["proof (prove)\nusing this:\n  H \\<subseteq> payload \\<union> sym.valid \\<union> range LtK \\<union> Tags\n  sym.implSecure A B M \\<in> synth (analz H)\n\ngoal (1 subgoal):\n 1. sym.implSecure A B M \\<in> H \\<or>\n    M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H", "by (rule implSecure_synth_analz)"], ["proof (state)\nthis:\n  sym.implSecure A B M \\<in> H \\<or>\n  M \\<in> synth (analz H) \\<and> (A, B) \\<in> broken H\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}