{"file_name": "/home/qj213/afp-2021-10-22/thys/Separation_Logic_Imperative_HOL/Examples/List_Seg.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Separation_Logic_Imperative_HOL", "problem_names": ["lemma lseg_if_splitf1[simp, sep_dflt_simps]: \n  \"lseg l None None = \\<up>(l=[])\"", "lemma lseg_if_splitf2[simp, sep_dflt_simps]: \n  \"lseg (x#xs) p q \n    = (\\<exists>\\<^sub>App n. pp \\<mapsto>\\<^sub>r (Node x n) * lseg xs n q * \\<up>(p=Some pp))\"", "lemma lseg_prepend: \n  \"p\\<mapsto>\\<^sub>rNode x q * lseg l q s \\<Longrightarrow>\\<^sub>A lseg (x#l) (Some p) s\"", "lemma lseg_append: \n  \"lseg l p (Some s) * s\\<mapsto>\\<^sub>rNode x q \\<Longrightarrow>\\<^sub>A lseg (l@[x]) p q\"", "lemma lseg_conc: \"lseg l1 p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A lseg (l1@l2) p r\"", "lemma lseg_split: \n  \"lseg (l1@l2) p r \\<Longrightarrow>\\<^sub>A \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r\"", "lemma lseg_prec1: \n  \"\\<forall>l l'. (h\\<Turnstile>\n      (lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1) \n       \\<and>\\<^sub>A (lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2)) \n    \\<longrightarrow> l=l'\"", "lemma lseg_prec2: \n  \"\\<forall>l l'. (h\\<Turnstile>\n      (lseg l p None * F1) \\<and>\\<^sub>A (lseg l' p None * F2)) \n    \\<longrightarrow> l=l'\"", "lemma lseg_prec3: \n  \"\\<forall>q q'. h \\<Turnstile> (lseg l p q * F1) \\<and>\\<^sub>A (lseg l p q' * F2) \\<longrightarrow> q=q'\""], "translations": [["", "lemma lseg_if_splitf1[simp, sep_dflt_simps]: \n  \"lseg l None None = \\<up>(l=[])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg l None None = \\<up> (l = [])", "apply (cases l, simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lseg_if_splitf2[simp, sep_dflt_simps]: \n  \"lseg (x#xs) p q \n    = (\\<exists>\\<^sub>App n. pp \\<mapsto>\\<^sub>r (Node x n) * lseg xs n q * \\<up>(p=Some pp))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg (x # xs) p q =\n    (\\<exists>\\<^sub>App n.\n        pp \\<mapsto>\\<^sub>r Node x n * lseg xs n q * \\<up> (p = Some pp))", "apply (cases p, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       (\\<exists>\\<^sub>Aqa. a \\<mapsto>\\<^sub>r Node x qa * lseg xs qa q) =\n       (\\<exists>\\<^sub>App n.\n           pp \\<mapsto>\\<^sub>r Node x n * lseg xs n q * \\<up> (a = pp))", "(* TODO: One-point simproc for assertions! *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       (\\<exists>\\<^sub>Aqa. a \\<mapsto>\\<^sub>r Node x qa * lseg xs qa q) =\n       (\\<exists>\\<^sub>App n.\n           pp \\<mapsto>\\<^sub>r Node x n * lseg xs n q * \\<up> (a = pp))", "apply (rule ent_iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       \\<exists>\\<^sub>Aqa.\n          a \\<mapsto>\\<^sub>r Node x qa *\n          lseg xs qa q \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>App n.\n          pp \\<mapsto>\\<^sub>r Node x n * lseg xs n q * \\<up> (a = pp)\n 2. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       \\<exists>\\<^sub>App n.\n          pp \\<mapsto>\\<^sub>r Node x n * lseg xs n q *\n          \\<up> (a = pp) \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aqa. a \\<mapsto>\\<^sub>r Node x qa * lseg xs qa q", "apply solve_entails"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       \\<exists>\\<^sub>App n.\n          pp \\<mapsto>\\<^sub>r Node x n * lseg xs n q *\n          \\<up> (a = pp) \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aqa. a \\<mapsto>\\<^sub>r Node x qa * lseg xs qa q", "apply solve_entails"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Lemmas\\<close>"], ["", "subsubsection \\<open>Concatenation\\<close>"], ["", "lemma lseg_prepend: \n  \"p\\<mapsto>\\<^sub>rNode x q * lseg l q s \\<Longrightarrow>\\<^sub>A lseg (x#l) (Some p) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<mapsto>\\<^sub>r Node x q * lseg l q s \\<Longrightarrow>\\<^sub>A\n    lseg (x # l) (Some p) s", "by sep_auto"], ["", "lemma lseg_append: \n  \"lseg l p (Some s) * s\\<mapsto>\\<^sub>rNode x q \\<Longrightarrow>\\<^sub>A lseg (l@[x]) p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg l p (Some s) *\n    s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n    lseg (l @ [x]) p q", "proof (induction l arbitrary: p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       lseg [] p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ([] @ [x]) p q\n 2. \\<And>a l p.\n       (\\<And>p.\n           lseg l p (Some s) *\n           s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n           lseg (l @ [x]) p q) \\<Longrightarrow>\n       lseg (a # l) p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l) @ [x]) p q", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>p.\n       lseg [] p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ([] @ [x]) p q\n 2. \\<And>a l p.\n       (\\<And>p.\n           lseg l p (Some s) *\n           s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n           lseg (l @ [x]) p q) \\<Longrightarrow>\n       lseg (a # l) p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l) @ [x]) p q", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg [] p (Some s) *\n    s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n    lseg ([] @ [x]) p q", "by sep_auto"], ["proof (state)\nthis:\n  lseg [] p (Some s) *\n  s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n  lseg ([] @ [x]) p q\n\ngoal (1 subgoal):\n 1. \\<And>a l p.\n       (\\<And>p.\n           lseg l p (Some s) *\n           s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n           lseg (l @ [x]) p q) \\<Longrightarrow>\n       lseg (a # l) p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l) @ [x]) p q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l p.\n       (\\<And>p.\n           lseg l p (Some s) *\n           s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n           lseg (l @ [x]) p q) \\<Longrightarrow>\n       lseg (a # l) p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l) @ [x]) p q", "case (Cons y l)"], ["proof (state)\nthis:\n  lseg l ?p (Some s) *\n  s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n  lseg (l @ [x]) ?p q\n\ngoal (1 subgoal):\n 1. \\<And>a l p.\n       (\\<And>p.\n           lseg l p (Some s) *\n           s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n           lseg (l @ [x]) p q) \\<Longrightarrow>\n       lseg (a # l) p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l) @ [x]) p q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg (y # l) p (Some s) *\n    s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n    lseg ((y # l) @ [x]) p q", "apply (cases p)"], ["proof (prove)\ngoal (2 subgoals):\n 1. p = None \\<Longrightarrow>\n    lseg (y # l) p (Some s) *\n    s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n    lseg ((y # l) @ [x]) p q\n 2. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       lseg (y # l) p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ((y # l) @ [x]) p q", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       lseg (y # l) p (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg ((y # l) @ [x]) p q", "apply (sep_auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node y n * lseg l n (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       pp \\<mapsto>\\<^sub>r Node y (?n11 pp pp n) *\n       lseg (l @ [x]) (?n11 pp pp n) q", "apply (rule ent_frame_fwd[OF Cons.IH])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node y n * lseg l n (Some s) *\n       s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n       lseg l (?p16 pp n) (Some s) * s \\<mapsto>\\<^sub>r Node x q *\n       ?F15 pp n\n 2. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       lseg (l @ [x]) (?p16 pp n) q * ?F15 pp n \\<Longrightarrow>\\<^sub>A\n       pp \\<mapsto>\\<^sub>r Node y (?n11 pp pp n) *\n       lseg (l @ [x]) (?n11 pp pp n) q", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       lseg (l @ [x]) n q *\n       pp \\<mapsto>\\<^sub>r Node y n \\<Longrightarrow>\\<^sub>A\n       pp \\<mapsto>\\<^sub>r Node y (?n11 pp pp n) *\n       lseg (l @ [x]) (?n11 pp pp n) q", "apply solve_entails"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lseg (y # l) p (Some s) *\n  s \\<mapsto>\\<^sub>r Node x q \\<Longrightarrow>\\<^sub>A\n  lseg ((y # l) @ [x]) p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lseg_conc: \"lseg l1 p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A lseg (l1@l2) p r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg l1 p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A lseg (l1 @ l2) p r", "proof (induct l1 arbitrary: p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       lseg [] p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       lseg ([] @ l2) p r\n 2. \\<And>a l1 p.\n       (\\<And>p.\n           lseg l1 p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n           lseg (l1 @ l2) p r) \\<Longrightarrow>\n       lseg (a # l1) p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l1) @ l2) p r", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>p.\n       lseg [] p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       lseg ([] @ l2) p r\n 2. \\<And>a l1 p.\n       (\\<And>p.\n           lseg l1 p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n           lseg (l1 @ l2) p r) \\<Longrightarrow>\n       lseg (a # l1) p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l1) @ l2) p r", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg [] p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A lseg ([] @ l2) p r", "by simp"], ["proof (state)\nthis:\n  lseg [] p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A lseg ([] @ l2) p r\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg l1 p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n           lseg (l1 @ l2) p r) \\<Longrightarrow>\n       lseg (a # l1) p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l1) @ l2) p r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg l1 p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n           lseg (l1 @ l2) p r) \\<Longrightarrow>\n       lseg (a # l1) p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l1) @ l2) p r", "case (Cons x l1)"], ["proof (state)\nthis:\n  lseg l1 ?p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A lseg (l1 @ l2) ?p r\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg l1 p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n           lseg (l1 @ l2) p r) \\<Longrightarrow>\n       lseg (a # l1) p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       lseg ((a # l1) @ l2) p r", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg (x # l1) p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n    lseg ((x # l1) @ l2) p r", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>App n.\n       pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n       \\<up> (p = Some pp) \\<Longrightarrow>\\<^sub>A\n    \\<exists>\\<^sub>App n.\n       pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r *\n       \\<up> (p = Some pp)", "apply sep_auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q *\n       lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       pp \\<mapsto>\\<^sub>r Node x (?n11 pp n) *\n       lseg (l1 @ l2) (?n11 pp n) r", "apply (rule ent_frame_fwd[OF Cons.hyps])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q *\n       lseg l2 q r \\<Longrightarrow>\\<^sub>A\n       lseg l1 (?p22 pp n) q * lseg l2 q r * ?F21 pp n\n 2. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       lseg (l1 @ l2) (?p22 pp n) r * ?F21 pp n \\<Longrightarrow>\\<^sub>A\n       pp \\<mapsto>\\<^sub>r Node x (?n11 pp n) *\n       lseg (l1 @ l2) (?n11 pp n) r", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       lseg (l1 @ l2) n r *\n       pp \\<mapsto>\\<^sub>r Node x n \\<Longrightarrow>\\<^sub>A\n       pp \\<mapsto>\\<^sub>r Node x (?n11 pp n) *\n       lseg (l1 @ l2) (?n11 pp n) r", "apply solve_entails"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lseg (x # l1) p q * lseg l2 q r \\<Longrightarrow>\\<^sub>A\n  lseg ((x # l1) @ l2) p r\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Splitting\\<close>"], ["", "lemma lseg_split: \n  \"lseg (l1@l2) p r \\<Longrightarrow>\\<^sub>A \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n    \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r", "proof (induct l1 arbitrary: p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       lseg ([] @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg [] p q * lseg l2 q r\n 2. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>p.\n       lseg ([] @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg [] p q * lseg l2 q r\n 2. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg ([] @ l2) p r \\<Longrightarrow>\\<^sub>A\n    \\<exists>\\<^sub>Aq. lseg [] p q * lseg l2 q r", "by sep_auto"], ["proof (state)\nthis:\n  lseg ([] @ l2) p r \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>Aq. lseg [] p q * lseg l2 q r\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "case (Cons x l1)"], ["proof (state)\nthis:\n  lseg (l1 @ l2) ?p r \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>Aq. lseg l1 ?p q * lseg l2 q r\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "have \"lseg ((x # l1) @ l2) p r \n    \\<Longrightarrow>\\<^sub>A \\<exists>\\<^sub>App n. pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r * \\<up> (p = Some pp)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lseg ((x # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n    \\<exists>\\<^sub>App n.\n       pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r *\n       \\<up> (p = Some pp)", "by simp"], ["proof (state)\nthis:\n  lseg ((x # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>App n.\n     pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r *\n     \\<up> (p = Some pp)\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "also"], ["proof (state)\nthis:\n  lseg ((x # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>App n.\n     pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r *\n     \\<up> (p = Some pp)\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "have \"\\<dots> \\<Longrightarrow>\\<^sub>A \n    \\<exists>\\<^sub>App n q. pp \\<mapsto>\\<^sub>r Node x n \n      * lseg l1 n q \n      * lseg l2 q r \n      * \\<up>(p = Some pp)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>App n.\n       pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r *\n       \\<up> (p = Some pp) \\<Longrightarrow>\\<^sub>A\n    \\<exists>\\<^sub>App n q.\n       pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n       \\<up> (p = Some pp)", "apply (intro ent_ex_preI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n.\n       pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r *\n       \\<up> (p = Some pp) \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>App n q.\n          pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n          \\<up> (p = Some pp)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node x n *\n       lseg (l1 @ l2) n r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Appa n q.\n          ppa \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n          \\<up> (pp = ppa)", "apply (rule ent_frame_fwd[OF Cons.hyps])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node x n *\n       lseg (l1 @ l2) n r \\<Longrightarrow>\\<^sub>A\n       lseg (l1 @ l2) (?p5 pp n) r * ?F4 pp n\n 2. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       (\\<exists>\\<^sub>Aq. lseg l1 (?p5 pp n) q * lseg l2 q r) *\n       ?F4 pp n \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Appa n q.\n          ppa \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n          \\<up> (pp = ppa)", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n.\n       p = Some pp \\<Longrightarrow>\n       (\\<exists>\\<^sub>Aq. lseg l1 n q * lseg l2 q r) *\n       pp \\<mapsto>\\<^sub>r Node x n \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Appa n q.\n          ppa \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n          \\<up> (pp = ppa)", "apply sep_auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>App n.\n     pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r *\n     \\<up> (p = Some pp) \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>App n q.\n     pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n     \\<up> (p = Some pp)\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "also"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>App n.\n     pp \\<mapsto>\\<^sub>r Node x n * lseg (l1 @ l2) n r *\n     \\<up> (p = Some pp) \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>App n q.\n     pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n     \\<up> (p = Some pp)\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "have \"\\<dots> \\<Longrightarrow>\\<^sub>A \\<exists>\\<^sub>Aq. lseg (x#l1) p q * lseg l2 q r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>App n q.\n       pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n       \\<up> (p = Some pp) \\<Longrightarrow>\\<^sub>A\n    \\<exists>\\<^sub>Aq. lseg (x # l1) p q * lseg l2 q r", "by sep_auto"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>App n q.\n     pp \\<mapsto>\\<^sub>r Node x n * lseg l1 n q * lseg l2 q r *\n     \\<up> (p = Some pp) \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>Aq. lseg (x # l1) p q * lseg l2 q r\n\ngoal (1 subgoal):\n 1. \\<And>a l1 p.\n       (\\<And>p.\n           lseg (l1 @ l2) p r \\<Longrightarrow>\\<^sub>A\n           \\<exists>\\<^sub>Aq. lseg l1 p q * lseg l2 q r) \\<Longrightarrow>\n       lseg ((a # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>Aq. lseg (a # l1) p q * lseg l2 q r", "finally"], ["proof (chain)\npicking this:\n  lseg ((x # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>Aq. lseg (x # l1) p q * lseg l2 q r", "show ?case"], ["proof (prove)\nusing this:\n  lseg ((x # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>Aq. lseg (x # l1) p q * lseg l2 q r\n\ngoal (1 subgoal):\n 1. lseg ((x # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n    \\<exists>\\<^sub>Aq. lseg (x # l1) p q * lseg l2 q r", "."], ["proof (state)\nthis:\n  lseg ((x # l1) @ l2) p r \\<Longrightarrow>\\<^sub>A\n  \\<exists>\\<^sub>Aq. lseg (x # l1) p q * lseg l2 q r\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Precision\\<close>"], ["", "lemma lseg_prec1: \n  \"\\<forall>l l'. (h\\<Turnstile>\n      (lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1) \n       \\<and>\\<^sub>A (lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2)) \n    \\<longrightarrow> l=l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l l'.\n       h \\<Turnstile>\n       lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       l = l'", "apply (intro allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l l'.\n       h \\<Turnstile>\n       lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       l = l'", "subgoal for l l'"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n    lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n    l = l'", "proof (induct l arbitrary: p l' F1 F2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p l' F1 F2.\n       h \\<Turnstile>\n       lseg [] p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       [] = l'\n 2. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n           lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       a # l = l'", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>p l' F1 F2.\n       h \\<Turnstile>\n       lseg [] p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       [] = l'\n 2. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n           lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       a # l = l'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    lseg [] p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n    lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n    [] = l'", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n    lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<and>\n    p = Some q \\<longrightarrow>\n    [] = l'", "apply (cases l')"], ["proof (prove)\ngoal (2 subgoals):\n 1. l' = [] \\<Longrightarrow>\n    h \\<Turnstile>\n    q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n    lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<and>\n    p = Some q \\<longrightarrow>\n    [] = l'\n 2. \\<And>a list.\n       l' = a # list \\<Longrightarrow>\n       h \\<Turnstile>\n       q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<and>\n       p = Some q \\<longrightarrow>\n       [] = l'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l' = a # list \\<Longrightarrow>\n       h \\<Turnstile>\n       q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<and>\n       p = Some q \\<longrightarrow>\n       [] = l'", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg [] p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n  lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n  [] = l'\n\ngoal (1 subgoal):\n 1. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n           lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       a # l = l'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n           lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       a # l = l'", "case (Cons y l)"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg l ?p (Some q) * q \\<mapsto>\\<^sub>r x * ?F1.0 \\<and>\\<^sub>A\n  lseg ?l' ?p (Some q) * q \\<mapsto>\\<^sub>r x * ?F2.0 \\<longrightarrow>\n  l = ?l'\n\ngoal (1 subgoal):\n 1. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n           lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       a # l = l'", "from Cons.prems"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    lseg (y # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n    lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n    y # l = l'", "apply (cases l')"], ["proof (prove)\ngoal (2 subgoals):\n 1. l' = [] \\<Longrightarrow>\n    h \\<Turnstile>\n    lseg (y # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n    lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n    y # l = l'\n 2. \\<And>a list.\n       l' = a # list \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (y # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       y # l = l'", "apply auto []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l' = a # list \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (y # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n       lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n       y # l = l'", "apply (cases p)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>l' = a # list; p = None\\<rbrakk>\n       \\<Longrightarrow> h \\<Turnstile>\n                         lseg (y # l) p (Some q) * q \\<mapsto>\\<^sub>r x *\n                         F1 \\<and>\\<^sub>A\n                         lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x *\n                         F2 \\<longrightarrow>\n                         y # l = l'\n 2. \\<And>a list aa.\n       \\<lbrakk>l' = a # list; p = Some aa\\<rbrakk>\n       \\<Longrightarrow> h \\<Turnstile>\n                         lseg (y # l) p (Some q) * q \\<mapsto>\\<^sub>r x *\n                         F1 \\<and>\\<^sub>A\n                         lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x *\n                         F2 \\<longrightarrow>\n                         y # l = l'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa.\n       \\<lbrakk>l' = a # list; p = Some aa\\<rbrakk>\n       \\<Longrightarrow> h \\<Turnstile>\n                         lseg (y # l) p (Some q) * q \\<mapsto>\\<^sub>r x *\n                         F1 \\<and>\\<^sub>A\n                         lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x *\n                         F2 \\<longrightarrow>\n                         y # l = l'", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        h \\<Turnstile>\n        aa \\<mapsto>\\<^sub>r Node y na * lseg l na (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F1 \\<and>\\<^sub>A\n        aa \\<mapsto>\\<^sub>r Node a n * lseg list n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F2\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> l = list", "apply (subgoal_tac \"y=a \\<and> na=n\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list aa n.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        h \\<Turnstile>\n        aa \\<mapsto>\\<^sub>r Node a n * lseg l n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F1 \\<and>\\<^sub>A\n        aa \\<mapsto>\\<^sub>r Node a n * lseg list n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F2;\n        y = a\\<rbrakk>\n       \\<Longrightarrow> l = list\n 2. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        h \\<Turnstile>\n        aa \\<mapsto>\\<^sub>r Node y na * lseg l na (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F1 \\<and>\\<^sub>A\n        aa \\<mapsto>\\<^sub>r Node a n * lseg list n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F2\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> na = n", "using Cons.hyps"], ["proof (prove)\nusing this:\n  h \\<Turnstile>\n  lseg l ?p (Some q) * q \\<mapsto>\\<^sub>r x * ?F1.0 \\<and>\\<^sub>A\n  lseg ?l' ?p (Some q) * q \\<mapsto>\\<^sub>r x * ?F2.0 \\<longrightarrow>\n  l = ?l'\n\ngoal (2 subgoals):\n 1. \\<And>a list aa n.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        h \\<Turnstile>\n        aa \\<mapsto>\\<^sub>r Node a n * lseg l n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F1 \\<and>\\<^sub>A\n        aa \\<mapsto>\\<^sub>r Node a n * lseg list n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F2;\n        y = a\\<rbrakk>\n       \\<Longrightarrow> l = list\n 2. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        h \\<Turnstile>\n        aa \\<mapsto>\\<^sub>r Node y na * lseg l na (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F1 \\<and>\\<^sub>A\n        aa \\<mapsto>\\<^sub>r Node a n * lseg list n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F2\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> na = n", "apply (erule prec_frame')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list aa n.\n       \\<lbrakk>l' = a # list; p = Some aa; y = a\\<rbrakk>\n       \\<Longrightarrow> aa \\<mapsto>\\<^sub>r Node a n * lseg l n (Some q) *\n                         q \\<mapsto>\\<^sub>r x *\n                         F1 \\<Longrightarrow>\\<^sub>A\n                         lseg l (?p22 a list aa n l) (Some q) *\n                         q \\<mapsto>\\<^sub>r x *\n                         ?F1.20 a list aa n\n 2. \\<And>a list aa n.\n       \\<lbrakk>l' = a # list; p = Some aa; y = a\\<rbrakk>\n       \\<Longrightarrow> aa \\<mapsto>\\<^sub>r Node a n *\n                         lseg list n (Some q) *\n                         q \\<mapsto>\\<^sub>r x *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         lseg list (?p22 a list aa n list) (Some q) *\n                         q \\<mapsto>\\<^sub>r x *\n                         ?F2.20 a list aa n\n 3. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        h \\<Turnstile>\n        aa \\<mapsto>\\<^sub>r Node y na * lseg l na (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F1 \\<and>\\<^sub>A\n        aa \\<mapsto>\\<^sub>r Node a n * lseg list n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F2\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> na = n\nflex-flex pairs:\n  \\<lambda>a list aa n. ?p22 a list aa n list \\<equiv>\\<^sup>?\n    \\<lambda>a list aa n. ?p22 a list aa n l", "apply frame_inference"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list aa n.\n       \\<lbrakk>l' = a # list; p = Some aa; y = a\\<rbrakk>\n       \\<Longrightarrow> aa \\<mapsto>\\<^sub>r Node a n *\n                         lseg list n (Some q) *\n                         q \\<mapsto>\\<^sub>r x *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         lseg list n (Some q) * q \\<mapsto>\\<^sub>r x *\n                         ?F2.20 a list aa n\n 2. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        h \\<Turnstile>\n        aa \\<mapsto>\\<^sub>r Node y na * lseg l na (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F1 \\<and>\\<^sub>A\n        aa \\<mapsto>\\<^sub>r Node a n * lseg list n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F2\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> na = n", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        h \\<Turnstile>\n        aa \\<mapsto>\\<^sub>r Node y na * lseg l na (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F1 \\<and>\\<^sub>A\n        aa \\<mapsto>\\<^sub>r Node a n * lseg list n (Some q) *\n        q \\<mapsto>\\<^sub>r x *\n        F2\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> na = n", "apply (drule_tac p=aa in prec_frame[OF sngr_prec])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa\\<rbrakk>\n       \\<Longrightarrow> aa \\<mapsto>\\<^sub>r Node y na *\n                         lseg l na (Some q) *\n                         q \\<mapsto>\\<^sub>r x *\n                         F1 \\<Longrightarrow>\\<^sub>A\n                         aa \\<mapsto>\\<^sub>r ?x46 a list aa n na *\n                         ?F1.46 a list aa n na\n 2. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa\\<rbrakk>\n       \\<Longrightarrow> aa \\<mapsto>\\<^sub>r Node a n *\n                         lseg list n (Some q) *\n                         q \\<mapsto>\\<^sub>r x *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         aa \\<mapsto>\\<^sub>r ?y46 a list aa n na *\n                         ?F2.46 a list aa n na\n 3. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        ?x46 a list aa n na = ?y46 a list aa n na\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> na = n", "apply frame_inference"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa\\<rbrakk>\n       \\<Longrightarrow> aa \\<mapsto>\\<^sub>r Node a n *\n                         lseg list n (Some q) *\n                         q \\<mapsto>\\<^sub>r x *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         aa \\<mapsto>\\<^sub>r ?y46 a list aa n na *\n                         ?F2.46 a list aa n na\n 2. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa;\n        Node y na = ?y46 a list aa n na\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> na = n", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa n na.\n       \\<lbrakk>l' = a # list; p = Some aa; Node y na = Node a n\\<rbrakk>\n       \\<Longrightarrow> y = a \\<and> na = n", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg (y # l) p (Some q) * q \\<mapsto>\\<^sub>r x * F1 \\<and>\\<^sub>A\n  lseg l' p (Some q) * q \\<mapsto>\\<^sub>r x * F2 \\<longrightarrow>\n  y # l = l'\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lseg_prec2: \n  \"\\<forall>l l'. (h\\<Turnstile>\n      (lseg l p None * F1) \\<and>\\<^sub>A (lseg l' p None * F2)) \n    \\<longrightarrow> l=l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l l'.\n       h \\<Turnstile>\n       lseg l p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       l = l'", "apply (intro allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l l'.\n       h \\<Turnstile>\n       lseg l p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       l = l'", "subgoal for l l'"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    lseg l p None * F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<longrightarrow>\n    l = l'", "proof (induct l arbitrary: p l' F1 F2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p l' F1 F2.\n       h \\<Turnstile>\n       lseg [] p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       [] = l'\n 2. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p None * F1 \\<and>\\<^sub>A\n           lseg l' p None * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       a # l = l'", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>p l' F1 F2.\n       h \\<Turnstile>\n       lseg [] p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       [] = l'\n 2. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p None * F1 \\<and>\\<^sub>A\n           lseg l' p None * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       a # l = l'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    lseg [] p None * F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<longrightarrow>\n    [] = l'", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile> F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<and>\n    p = None \\<longrightarrow>\n    [] = l'", "apply (cases l')"], ["proof (prove)\ngoal (2 subgoals):\n 1. l' = [] \\<Longrightarrow>\n    h \\<Turnstile> F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<and>\n    p = None \\<longrightarrow>\n    [] = l'\n 2. \\<And>a list.\n       l' = a # list \\<Longrightarrow>\n       h \\<Turnstile> F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<and>\n       p = None \\<longrightarrow>\n       [] = l'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l' = a # list \\<Longrightarrow>\n       h \\<Turnstile> F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<and>\n       p = None \\<longrightarrow>\n       [] = l'", "apply (cases p)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>l' = a # list; p = None\\<rbrakk>\n       \\<Longrightarrow> h \\<Turnstile>\n                         F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<and>\n                         p = None \\<longrightarrow>\n                         [] = l'\n 2. \\<And>a list aa.\n       \\<lbrakk>l' = a # list; p = Some aa\\<rbrakk>\n       \\<Longrightarrow> h \\<Turnstile>\n                         F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<and>\n                         p = None \\<longrightarrow>\n                         [] = l'", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg [] p None * F1 \\<and>\\<^sub>A lseg l' p None * F2 \\<longrightarrow>\n  [] = l'\n\ngoal (1 subgoal):\n 1. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p None * F1 \\<and>\\<^sub>A\n           lseg l' p None * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       a # l = l'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p None * F1 \\<and>\\<^sub>A\n           lseg l' p None * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       a # l = l'", "case (Cons y l)"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg l ?p None * ?F1.0 \\<and>\\<^sub>A\n  lseg ?l' ?p None * ?F2.0 \\<longrightarrow>\n  l = ?l'\n\ngoal (1 subgoal):\n 1. \\<And>a l p l' F1 F2.\n       (\\<And>p l' F1 F2.\n           h \\<Turnstile>\n           lseg l p None * F1 \\<and>\\<^sub>A\n           lseg l' p None * F2 \\<longrightarrow>\n           l = l') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       a # l = l'", "from Cons.prems"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    lseg (y # l) p None * F1 \\<and>\\<^sub>A\n    lseg l' p None * F2 \\<longrightarrow>\n    y # l = l'", "apply (cases p)"], ["proof (prove)\ngoal (2 subgoals):\n 1. p = None \\<Longrightarrow>\n    h \\<Turnstile>\n    lseg (y # l) p None * F1 \\<and>\\<^sub>A\n    lseg l' p None * F2 \\<longrightarrow>\n    y # l = l'\n 2. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (y # l) p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       y # l = l'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       p = Some a \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (y # l) p None * F1 \\<and>\\<^sub>A\n       lseg l' p None * F2 \\<longrightarrow>\n       y # l = l'", "apply (cases l')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>p = Some a; l' = []\\<rbrakk>\n       \\<Longrightarrow> h \\<Turnstile>\n                         lseg (y # l) p None * F1 \\<and>\\<^sub>A\n                         lseg l' p None * F2 \\<longrightarrow>\n                         y # l = l'\n 2. \\<And>a aa list.\n       \\<lbrakk>p = Some a; l' = aa # list\\<rbrakk>\n       \\<Longrightarrow> h \\<Turnstile>\n                         lseg (y # l) p None * F1 \\<and>\\<^sub>A\n                         lseg l' p None * F2 \\<longrightarrow>\n                         y # l = l'", "apply (auto) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa list.\n       \\<lbrakk>p = Some a; l' = aa # list\\<rbrakk>\n       \\<Longrightarrow> h \\<Turnstile>\n                         lseg (y # l) p None * F1 \\<and>\\<^sub>A\n                         lseg l' p None * F2 \\<longrightarrow>\n                         y # l = l'", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        h \\<Turnstile>\n        a \\<mapsto>\\<^sub>r Node y na * lseg l na None * F1 \\<and>\\<^sub>A\n        a \\<mapsto>\\<^sub>r Node aa n * lseg list n None * F2\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> l = list", "apply (subgoal_tac \"y=aa \\<and> na=n\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa list n.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        h \\<Turnstile>\n        a \\<mapsto>\\<^sub>r Node aa n * lseg l n None * F1 \\<and>\\<^sub>A\n        a \\<mapsto>\\<^sub>r Node aa n * lseg list n None * F2;\n        y = aa\\<rbrakk>\n       \\<Longrightarrow> l = list\n 2. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        h \\<Turnstile>\n        a \\<mapsto>\\<^sub>r Node y na * lseg l na None * F1 \\<and>\\<^sub>A\n        a \\<mapsto>\\<^sub>r Node aa n * lseg list n None * F2\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> na = n", "using Cons.hyps"], ["proof (prove)\nusing this:\n  h \\<Turnstile>\n  lseg l ?p None * ?F1.0 \\<and>\\<^sub>A\n  lseg ?l' ?p None * ?F2.0 \\<longrightarrow>\n  l = ?l'\n\ngoal (2 subgoals):\n 1. \\<And>a aa list n.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        h \\<Turnstile>\n        a \\<mapsto>\\<^sub>r Node aa n * lseg l n None * F1 \\<and>\\<^sub>A\n        a \\<mapsto>\\<^sub>r Node aa n * lseg list n None * F2;\n        y = aa\\<rbrakk>\n       \\<Longrightarrow> l = list\n 2. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        h \\<Turnstile>\n        a \\<mapsto>\\<^sub>r Node y na * lseg l na None * F1 \\<and>\\<^sub>A\n        a \\<mapsto>\\<^sub>r Node aa n * lseg list n None * F2\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> na = n", "apply (erule prec_frame')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a aa list n.\n       \\<lbrakk>p = Some a; l' = aa # list; y = aa\\<rbrakk>\n       \\<Longrightarrow> a \\<mapsto>\\<^sub>r Node aa n * lseg l n None *\n                         F1 \\<Longrightarrow>\\<^sub>A\n                         lseg l (?p12 a aa list n l) None *\n                         ?F1.10 a aa list n\n 2. \\<And>a aa list n.\n       \\<lbrakk>p = Some a; l' = aa # list; y = aa\\<rbrakk>\n       \\<Longrightarrow> a \\<mapsto>\\<^sub>r Node aa n * lseg list n None *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         lseg list (?p12 a aa list n list) None *\n                         ?F2.10 a aa list n\n 3. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        h \\<Turnstile>\n        a \\<mapsto>\\<^sub>r Node y na * lseg l na None * F1 \\<and>\\<^sub>A\n        a \\<mapsto>\\<^sub>r Node aa n * lseg list n None * F2\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> na = n\nflex-flex pairs:\n  \\<lambda>a aa list n. ?p12 a aa list n list \\<equiv>\\<^sup>?\n    \\<lambda>a aa list n. ?p12 a aa list n l", "apply frame_inference"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa list n.\n       \\<lbrakk>p = Some a; l' = aa # list; y = aa\\<rbrakk>\n       \\<Longrightarrow> a \\<mapsto>\\<^sub>r Node aa n * lseg list n None *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         lseg list n None * ?F2.10 a aa list n\n 2. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        h \\<Turnstile>\n        a \\<mapsto>\\<^sub>r Node y na * lseg l na None * F1 \\<and>\\<^sub>A\n        a \\<mapsto>\\<^sub>r Node aa n * lseg list n None * F2\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> na = n", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        h \\<Turnstile>\n        a \\<mapsto>\\<^sub>r Node y na * lseg l na None * F1 \\<and>\\<^sub>A\n        a \\<mapsto>\\<^sub>r Node aa n * lseg list n None * F2\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> na = n", "apply (drule_tac p=a in prec_frame[OF sngr_prec])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<mapsto>\\<^sub>r Node y na * lseg l na None *\n                         F1 \\<Longrightarrow>\\<^sub>A\n                         a \\<mapsto>\\<^sub>r ?x30 a aa list n na *\n                         ?F1.30 a aa list n na\n 2. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<mapsto>\\<^sub>r Node aa n * lseg list n None *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         a \\<mapsto>\\<^sub>r ?y30 a aa list n na *\n                         ?F2.30 a aa list n na\n 3. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        ?x30 a aa list n na = ?y30 a aa list n na\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> na = n", "apply frame_inference"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<mapsto>\\<^sub>r Node aa n * lseg list n None *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         a \\<mapsto>\\<^sub>r ?y30 a aa list n na *\n                         ?F2.30 a aa list n na\n 2. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list;\n        Node y na = ?y30 a aa list n na\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> na = n", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa list n na.\n       \\<lbrakk>p = Some a; l' = aa # list; Node y na = Node aa n\\<rbrakk>\n       \\<Longrightarrow> y = aa \\<and> na = n", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg (y # l) p None * F1 \\<and>\\<^sub>A\n  lseg l' p None * F2 \\<longrightarrow>\n  y # l = l'\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lseg_prec3: \n  \"\\<forall>q q'. h \\<Turnstile> (lseg l p q * F1) \\<and>\\<^sub>A (lseg l p q' * F2) \\<longrightarrow> q=q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>q q'.\n       h \\<Turnstile>\n       lseg l p q * F1 \\<and>\\<^sub>A lseg l p q' * F2 \\<longrightarrow>\n       q = q'", "apply (intro allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q q'.\n       h \\<Turnstile>\n       lseg l p q * F1 \\<and>\\<^sub>A lseg l p q' * F2 \\<longrightarrow>\n       q = q'", "proof (induct l arbitrary: p F1 F2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q q' p F1 F2.\n       h \\<Turnstile>\n       lseg [] p q * F1 \\<and>\\<^sub>A lseg [] p q' * F2 \\<longrightarrow>\n       q = q'\n 2. \\<And>a l q q' p F1 F2.\n       (\\<And>q q' p F1 F2.\n           h \\<Turnstile>\n           lseg l p q * F1 \\<and>\\<^sub>A lseg l p q' * F2 \\<longrightarrow>\n           q = q') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p q * F1 \\<and>\\<^sub>A\n       lseg (a # l) p q' * F2 \\<longrightarrow>\n       q = q'", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>q q' p F1 F2.\n       h \\<Turnstile>\n       lseg [] p q * F1 \\<and>\\<^sub>A lseg [] p q' * F2 \\<longrightarrow>\n       q = q'\n 2. \\<And>a l q q' p F1 F2.\n       (\\<And>q q' p F1 F2.\n           h \\<Turnstile>\n           lseg l p q * F1 \\<and>\\<^sub>A lseg l p q' * F2 \\<longrightarrow>\n           q = q') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p q * F1 \\<and>\\<^sub>A\n       lseg (a # l) p q' * F2 \\<longrightarrow>\n       q = q'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    lseg [] p q * F1 \\<and>\\<^sub>A lseg [] p q' * F2 \\<longrightarrow>\n    q = q'", "by auto"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg [] p q * F1 \\<and>\\<^sub>A lseg [] p q' * F2 \\<longrightarrow>\n  q = q'\n\ngoal (1 subgoal):\n 1. \\<And>a l q q' p F1 F2.\n       (\\<And>q q' p F1 F2.\n           h \\<Turnstile>\n           lseg l p q * F1 \\<and>\\<^sub>A lseg l p q' * F2 \\<longrightarrow>\n           q = q') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p q * F1 \\<and>\\<^sub>A\n       lseg (a # l) p q' * F2 \\<longrightarrow>\n       q = q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l q q' p F1 F2.\n       (\\<And>q q' p F1 F2.\n           h \\<Turnstile>\n           lseg l p q * F1 \\<and>\\<^sub>A lseg l p q' * F2 \\<longrightarrow>\n           q = q') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p q * F1 \\<and>\\<^sub>A\n       lseg (a # l) p q' * F2 \\<longrightarrow>\n       q = q'", "case (Cons x l)"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg l ?p ?q * ?F1.0 \\<and>\\<^sub>A\n  lseg l ?p ?q' * ?F2.0 \\<longrightarrow>\n  ?q = ?q'\n\ngoal (1 subgoal):\n 1. \\<And>a l q q' p F1 F2.\n       (\\<And>q q' p F1 F2.\n           h \\<Turnstile>\n           lseg l p q * F1 \\<and>\\<^sub>A lseg l p q' * F2 \\<longrightarrow>\n           q = q') \\<Longrightarrow>\n       h \\<Turnstile>\n       lseg (a # l) p q * F1 \\<and>\\<^sub>A\n       lseg (a # l) p q' * F2 \\<longrightarrow>\n       q = q'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile>\n    lseg (x # l) p q * F1 \\<and>\\<^sub>A\n    lseg (x # l) p q' * F2 \\<longrightarrow>\n    q = q'", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n na.\n       \\<lbrakk>h \\<Turnstile>\n                pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                F1 \\<and>\\<^sub>A\n                pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' * F2;\n        p = Some pp\\<rbrakk>\n       \\<Longrightarrow> q = q'", "apply (subgoal_tac \"na=n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp n na.\n       \\<lbrakk>h \\<Turnstile>\n                pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                F1 \\<and>\\<^sub>A\n                pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' * F2;\n        p = Some pp; na = n\\<rbrakk>\n       \\<Longrightarrow> q = q'\n 2. \\<And>pp n na.\n       \\<lbrakk>h \\<Turnstile>\n                pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                F1 \\<and>\\<^sub>A\n                pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' * F2;\n        p = Some pp\\<rbrakk>\n       \\<Longrightarrow> na = n", "using Cons.hyps"], ["proof (prove)\nusing this:\n  h \\<Turnstile>\n  lseg l ?p ?q * ?F1.0 \\<and>\\<^sub>A\n  lseg l ?p ?q' * ?F2.0 \\<longrightarrow>\n  ?q = ?q'\n\ngoal (2 subgoals):\n 1. \\<And>pp n na.\n       \\<lbrakk>h \\<Turnstile>\n                pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                F1 \\<and>\\<^sub>A\n                pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' * F2;\n        p = Some pp; na = n\\<rbrakk>\n       \\<Longrightarrow> q = q'\n 2. \\<And>pp n na.\n       \\<lbrakk>h \\<Turnstile>\n                pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                F1 \\<and>\\<^sub>A\n                pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' * F2;\n        p = Some pp\\<rbrakk>\n       \\<Longrightarrow> na = n", "apply (erule prec_frame')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>pp n na.\n       \\<lbrakk>p = Some pp; na = n\\<rbrakk>\n       \\<Longrightarrow> pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                         F1 \\<Longrightarrow>\\<^sub>A\n                         lseg l (?p18 pp n na q) q * ?F1.15 pp n na\n 2. \\<And>pp n na.\n       \\<lbrakk>p = Some pp; na = n\\<rbrakk>\n       \\<Longrightarrow> pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         lseg l (?p18 pp n na q') q' * ?F2.15 pp n na\n 3. \\<And>pp n na.\n       \\<lbrakk>h \\<Turnstile>\n                pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                F1 \\<and>\\<^sub>A\n                pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' * F2;\n        p = Some pp\\<rbrakk>\n       \\<Longrightarrow> na = n\nflex-flex pairs:\n  \\<lambda>pp n na. ?p18 pp n na q' \\<equiv>\\<^sup>?\n    \\<lambda>pp n na. ?p18 pp n na q", "apply frame_inference"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp n na.\n       \\<lbrakk>p = Some pp; na = n\\<rbrakk>\n       \\<Longrightarrow> pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' *\n                         F2 \\<Longrightarrow>\\<^sub>A\n                         lseg l na q' * ?F2.15 pp n na\n 2. \\<And>pp n na.\n       \\<lbrakk>h \\<Turnstile>\n                pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                F1 \\<and>\\<^sub>A\n                pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' * F2;\n        p = Some pp\\<rbrakk>\n       \\<Longrightarrow> na = n", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n na.\n       \\<lbrakk>h \\<Turnstile>\n                pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n                F1 \\<and>\\<^sub>A\n                pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' * F2;\n        p = Some pp\\<rbrakk>\n       \\<Longrightarrow> na = n", "apply (drule prec_frame[OF sngr_prec])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>pp n na.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node x na * lseg l na q *\n       F1 \\<Longrightarrow>\\<^sub>A\n       ?p41 pp n na \\<mapsto>\\<^sub>r ?x41 pp n na * ?F1.41 pp n na\n 2. \\<And>pp n na.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' *\n       F2 \\<Longrightarrow>\\<^sub>A\n       ?p41 pp n na \\<mapsto>\\<^sub>r ?y41 pp n na * ?F2.41 pp n na\n 3. \\<And>pp n na.\n       \\<lbrakk>p = Some pp; ?x41 pp n na = ?y41 pp n na\\<rbrakk>\n       \\<Longrightarrow> na = n", "apply frame_inference"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp n na.\n       p = Some pp \\<Longrightarrow>\n       pp \\<mapsto>\\<^sub>r Node x n * lseg l n q' *\n       F2 \\<Longrightarrow>\\<^sub>A\n       pp \\<mapsto>\\<^sub>r ?y41 pp n na * ?F2.41 pp n na\n 2. \\<And>pp n na.\n       \\<lbrakk>p = Some pp; Node x na = ?y41 pp n na\\<rbrakk>\n       \\<Longrightarrow> na = n", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp n na.\n       \\<lbrakk>p = Some pp; Node x na = Node x n\\<rbrakk>\n       \\<Longrightarrow> na = n", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  h \\<Turnstile>\n  lseg (x # l) p q * F1 \\<and>\\<^sub>A\n  lseg (x # l) p q' * F2 \\<longrightarrow>\n  q = q'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}