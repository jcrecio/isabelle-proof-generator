{"file_name": "/home/qj213/afp-2021-10-22/thys/Adaptive_State_Counting/ASC/ASC_Sufficiency.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Adaptive_State_Counting", "problem_names": ["lemma minimal_sequence_to_failure_extending_implies_Rep_Pre :\n  assumes \"minimal_sequence_to_failure_extending V M1 M2 vs xs\"\n  and     \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"V'' \\<in> N (vs@xs') M1 V\"\n  and     \"prefix xs' xs\"\n  shows \"\\<not> Rep_Pre M2 M1 vs xs'\"", "lemma minimal_sequence_to_failure_extending_implies_Rep_Cov :\n  assumes \"minimal_sequence_to_failure_extending V M1 M2 vs xs\"\n  and     \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"V'' \\<in> N (vs@xsR) M1 V\"\n  and     \"prefix xsR xs\"\nshows \"\\<not> Rep_Cov M2 M1 V'' vs xsR\"", "lemma mstfe_no_repetition :\n  assumes \"minimal_sequence_to_failure_extending V M1 M2 vs xs\"\n  and     \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"V'' \\<in> N (vs@xs') M1 V\"\n  and     \"prefix xs' xs\"\nshows \"\\<not> Rep_Pre M2 M1 vs xs'\"\n  and \"\\<not> Rep_Cov M2 M1 V'' vs xs'\"", "lemma asc_sufficiency :\n  assumes \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"asc_fault_domain M2 M1 m\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"final_iteration M2 M1 \\<Omega> V m i\"  \nshows \"M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m i) . \\<Omega>\\<rbrakk> M2 \\<longrightarrow> M1 \\<preceq> M2\"", "lemma asc_soundness :\n  assumes     \"OFSM M1\"\n  and         \"OFSM M2\"\nshows \"M1 \\<preceq> M2 \\<longrightarrow> atc_io_reduction_on_sets M1 T \\<Omega> M2\"", "lemma asc_main_theorem :\n  assumes \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"asc_fault_domain M2 M1 m\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"final_iteration M2 M1 \\<Omega> V m i\"\nshows     \"M1 \\<preceq> M2 \\<longleftrightarrow> atc_io_reduction_on_sets M1 (TS M2 M1 \\<Omega> V m i) \\<Omega> M2\""], "translations": [["", "lemma minimal_sequence_to_failure_extending_implies_Rep_Pre :\n  assumes \"minimal_sequence_to_failure_extending V M1 M2 vs xs\"\n  and     \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"V'' \\<in> N (vs@xs') M1 V\"\n  and     \"prefix xs' xs\"\n  shows \"\\<not> Rep_Pre M2 M1 vs xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Rep_Pre M2 M1 vs xs'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "assume \"Rep_Pre M2 M1 vs xs'\""], ["proof (state)\nthis:\n  Rep_Pre M2 M1 vs xs'\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Rep_Pre M2 M1 vs xs'", "obtain xs1 xs2 s1 s2 where  \"prefix xs1 xs2\"   \n                                   \"prefix xs2 xs'\"\n                                   \"xs1 \\<noteq> xs2\"\n                                   \"io_targets M2 (initial M2) (vs @ xs1) = {s2}\" \n                                   \"io_targets M2 (initial M2) (vs @ xs2) = {s2}\"\n                                   \"io_targets M1 (initial M1) (vs @ xs1) = {s1}\"\n                                   \"io_targets M1 (initial M1) (vs @ xs2) = {s1}\""], ["proof (prove)\nusing this:\n  Rep_Pre M2 M1 vs xs'\n\ngoal (1 subgoal):\n 1. (\\<And>xs1 xs2 s2 s1.\n        \\<lbrakk>prefix xs1 xs2; prefix xs2 xs'; xs1 \\<noteq> xs2;\n         io_targets M2 (initial M2) (vs @ xs1) = {s2};\n         io_targets M2 (initial M2) (vs @ xs2) = {s2};\n         io_targets M1 (initial M1) (vs @ xs1) = {s1};\n         io_targets M1 (initial M1) (vs @ xs2) = {s1}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prefix xs1 xs2\n  prefix xs2 xs'\n  xs1 \\<noteq> xs2\n  io_targets M2 (initial M2) (vs @ xs1) = {s2}\n  io_targets M2 (initial M2) (vs @ xs2) = {s2}\n  io_targets M1 (initial M1) (vs @ xs1) = {s1}\n  io_targets M1 (initial M1) (vs @ xs2) = {s1}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  prefix xs1 xs2\n  prefix xs2 xs'\n  xs1 \\<noteq> xs2\n  io_targets M2 (initial M2) (vs @ xs1) = {s2}\n  io_targets M2 (initial M2) (vs @ xs2) = {s2}\n  io_targets M1 (initial M1) (vs @ xs1) = {s1}\n  io_targets M1 (initial M1) (vs @ xs2) = {s1}", "have \"s2 \\<in> io_targets M2 (initial M2) (vs @ xs1)\"\n            \"s2 \\<in> io_targets M2 (initial M2) (vs @ xs2)\"\n            \"s1 \\<in> io_targets M1 (initial M1) (vs @ xs1)\"\n            \"s1 \\<in> io_targets M1 (initial M1) (vs @ xs2)\""], ["proof (prove)\nusing this:\n  prefix xs1 xs2\n  prefix xs2 xs'\n  xs1 \\<noteq> xs2\n  io_targets M2 (initial M2) (vs @ xs1) = {s2}\n  io_targets M2 (initial M2) (vs @ xs2) = {s2}\n  io_targets M1 (initial M1) (vs @ xs1) = {s1}\n  io_targets M1 (initial M1) (vs @ xs2) = {s1}\n\ngoal (1 subgoal):\n 1. (s2 \\<in> io_targets M2 (initial M2) (vs @ xs1) &&&\n     s2 \\<in> io_targets M2 (initial M2) (vs @ xs2)) &&&\n    s1 \\<in> io_targets M1 (initial M1) (vs @ xs1) &&&\n    s1 \\<in> io_targets M1 (initial M1) (vs @ xs2)", "by auto"], ["proof (state)\nthis:\n  s2 \\<in> io_targets M2 (initial M2) (vs @ xs1)\n  s2 \\<in> io_targets M2 (initial M2) (vs @ xs2)\n  s1 \\<in> io_targets M1 (initial M1) (vs @ xs1)\n  s1 \\<in> io_targets M1 (initial M1) (vs @ xs2)\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"vs@xs1 \\<in> L M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs1 \\<in> L M1", "using io_target_implies_L[OF \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs1)\\<close>]"], ["proof (prove)\nusing this:\n  vs @ xs1 \\<in> L M1\n\ngoal (1 subgoal):\n 1. vs @ xs1 \\<in> L M1", "by assumption"], ["proof (state)\nthis:\n  vs @ xs1 \\<in> L M1\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"vs@xs2 \\<in> L M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs2 \\<in> L M1", "using io_target_implies_L[OF \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs2)\\<close>]"], ["proof (prove)\nusing this:\n  vs @ xs2 \\<in> L M1\n\ngoal (1 subgoal):\n 1. vs @ xs2 \\<in> L M1", "by assumption"], ["proof (state)\nthis:\n  vs @ xs2 \\<in> L M1\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"vs@xs1 \\<in> L M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs1 \\<in> L M2", "using io_target_implies_L[OF \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs1)\\<close>]"], ["proof (prove)\nusing this:\n  vs @ xs1 \\<in> L M2\n\ngoal (1 subgoal):\n 1. vs @ xs1 \\<in> L M2", "by assumption"], ["proof (state)\nthis:\n  vs @ xs1 \\<in> L M2\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"vs@xs2 \\<in> L M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs2 \\<in> L M2", "using io_target_implies_L[OF \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs2)\\<close>]"], ["proof (prove)\nusing this:\n  vs @ xs2 \\<in> L M2\n\ngoal (1 subgoal):\n 1. vs @ xs2 \\<in> L M2", "by assumption"], ["proof (state)\nthis:\n  vs @ xs2 \\<in> L M2\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "obtain tr1_1 where \"path M1 (vs@xs1 || tr1_1) (initial M1)\" \n                     \"length tr1_1 = length (vs@xs1)\" \n                     \"target (vs@xs1 || tr1_1) (initial M1) = s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tr1_1.\n        \\<lbrakk>path M1 (vs @ xs1 || tr1_1) (initial M1);\n         length tr1_1 = length (vs @ xs1);\n         target (vs @ xs1 || tr1_1) (initial M1) = s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs1)\\<close>"], ["proof (prove)\nusing this:\n  s1 \\<in> io_targets M1 (initial M1) (vs @ xs1)\n\ngoal (1 subgoal):\n 1. (\\<And>tr1_1.\n        \\<lbrakk>path M1 (vs @ xs1 || tr1_1) (initial M1);\n         length tr1_1 = length (vs @ xs1);\n         target (vs @ xs1 || tr1_1) (initial M1) = s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  path M1 (vs @ xs1 || tr1_1) (initial M1)\n  length tr1_1 = length (vs @ xs1)\n  target (vs @ xs1 || tr1_1) (initial M1) = s1\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "obtain tr1_2 where \"path M1 (vs@xs2 || tr1_2) (initial M1)\" \n                     \"length tr1_2 = length (vs@xs2)\" \n                     \"target (vs@xs2 || tr1_2) (initial M1) = s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tr1_2.\n        \\<lbrakk>path M1 (vs @ xs2 || tr1_2) (initial M1);\n         length tr1_2 = length (vs @ xs2);\n         target (vs @ xs2 || tr1_2) (initial M1) = s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs2)\\<close>"], ["proof (prove)\nusing this:\n  s1 \\<in> io_targets M1 (initial M1) (vs @ xs2)\n\ngoal (1 subgoal):\n 1. (\\<And>tr1_2.\n        \\<lbrakk>path M1 (vs @ xs2 || tr1_2) (initial M1);\n         length tr1_2 = length (vs @ xs2);\n         target (vs @ xs2 || tr1_2) (initial M1) = s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  path M1 (vs @ xs2 || tr1_2) (initial M1)\n  length tr1_2 = length (vs @ xs2)\n  target (vs @ xs2 || tr1_2) (initial M1) = s1\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "obtain tr2_1 where \"path M2 (vs@xs1 || tr2_1) (initial M2)\" \n                     \"length tr2_1 = length (vs@xs1)\" \n                     \"target (vs@xs1 || tr2_1) (initial M2) = s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tr2_1.\n        \\<lbrakk>path M2 (vs @ xs1 || tr2_1) (initial M2);\n         length tr2_1 = length (vs @ xs1);\n         target (vs @ xs1 || tr2_1) (initial M2) = s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs1)\\<close>"], ["proof (prove)\nusing this:\n  s2 \\<in> io_targets M2 (initial M2) (vs @ xs1)\n\ngoal (1 subgoal):\n 1. (\\<And>tr2_1.\n        \\<lbrakk>path M2 (vs @ xs1 || tr2_1) (initial M2);\n         length tr2_1 = length (vs @ xs1);\n         target (vs @ xs1 || tr2_1) (initial M2) = s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  path M2 (vs @ xs1 || tr2_1) (initial M2)\n  length tr2_1 = length (vs @ xs1)\n  target (vs @ xs1 || tr2_1) (initial M2) = s2\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "obtain tr2_2 where \"path M2 (vs@xs2 || tr2_2) (initial M2)\"\n                     \"length tr2_2 = length (vs@xs2)\"\n                     \"target (vs@xs2 || tr2_2) (initial M2) = s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tr2_2.\n        \\<lbrakk>path M2 (vs @ xs2 || tr2_2) (initial M2);\n         length tr2_2 = length (vs @ xs2);\n         target (vs @ xs2 || tr2_2) (initial M2) = s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs2)\\<close>"], ["proof (prove)\nusing this:\n  s2 \\<in> io_targets M2 (initial M2) (vs @ xs2)\n\ngoal (1 subgoal):\n 1. (\\<And>tr2_2.\n        \\<lbrakk>path M2 (vs @ xs2 || tr2_2) (initial M2);\n         length tr2_2 = length (vs @ xs2);\n         target (vs @ xs2 || tr2_2) (initial M2) = s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  path M2 (vs @ xs2 || tr2_2) (initial M2)\n  length tr2_2 = length (vs @ xs2)\n  target (vs @ xs2 || tr2_2) (initial M2) = s2\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"productF M2 M1 FAIL PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. productF M2 M1 FAIL PM", "using assms(4)"], ["proof (prove)\nusing this:\n  test_tools M2 M1 FAIL PM V \\<Omega>\n\ngoal (1 subgoal):\n 1. productF M2 M1 FAIL PM", "by auto"], ["proof (state)\nthis:\n  productF M2 M1 FAIL PM\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"well_formed M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_formed M1", "using assms(2)"], ["proof (prove)\nusing this:\n  OFSM M1\n\ngoal (1 subgoal):\n 1. well_formed M1", "by auto"], ["proof (state)\nthis:\n  well_formed M1\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"well_formed M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_formed M2", "using assms(3)"], ["proof (prove)\nusing this:\n  OFSM M2\n\ngoal (1 subgoal):\n 1. well_formed M2", "by auto"], ["proof (state)\nthis:\n  well_formed M2\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"observable PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. observable PM", "by (meson assms(2) assms(3) assms(4) observable_productF)"], ["proof (state)\nthis:\n  observable PM\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"length (vs@xs1) = length tr2_1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (vs @ xs1) = length tr2_1", "using \\<open>length tr2_1 = length (vs @ xs1)\\<close>"], ["proof (prove)\nusing this:\n  length tr2_1 = length (vs @ xs1)\n\ngoal (1 subgoal):\n 1. length (vs @ xs1) = length tr2_1", "by presburger"], ["proof (state)\nthis:\n  length (vs @ xs1) = length tr2_1\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  length (vs @ xs1) = length tr2_1", "have \"length tr2_1 = length tr1_1\""], ["proof (prove)\nusing this:\n  length (vs @ xs1) = length tr2_1\n\ngoal (1 subgoal):\n 1. length tr2_1 = length tr1_1", "using \\<open>length tr1_1 = length (vs@xs1)\\<close>"], ["proof (prove)\nusing this:\n  length (vs @ xs1) = length tr2_1\n  length tr1_1 = length (vs @ xs1)\n\ngoal (1 subgoal):\n 1. length tr2_1 = length tr1_1", "by presburger"], ["proof (state)\nthis:\n  length tr2_1 = length tr1_1\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"vs@xs1 \\<in> L PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs1 \\<in> L PM", "using productF_path_inclusion[OF \\<open>length (vs@xs1) = length tr2_1\\<close> \\<open>length tr2_1 = length tr1_1\\<close> \n                                     \\<open>productF M2 M1 FAIL PM\\<close> \\<open>well_formed M2\\<close> \\<open>well_formed M1\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>path M2 (vs @ xs1 || tr2_1) ?p1.0 \\<and>\n           path M1 (vs @ xs1 || tr1_1) ?p2.0;\n   ?p1.0 \\<in> nodes M2; ?p2.0 \\<in> nodes M1\\<rbrakk>\n  \\<Longrightarrow> path PM (vs @ xs1 || tr2_1 || tr1_1) (?p1.0, ?p2.0)\n\ngoal (1 subgoal):\n 1. vs @ xs1 \\<in> L PM", "by (meson Int_iff \\<open>productF M2 M1 FAIL PM\\<close> \\<open>vs @ xs1 \\<in> L M1\\<close> \\<open>vs @ xs1 \\<in> L M2\\<close> \\<open>well_formed M1\\<close> \n        \\<open>well_formed M2\\<close> productF_language)"], ["proof (state)\nthis:\n  vs @ xs1 \\<in> L PM\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"length (vs@xs2) = length tr2_2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (vs @ xs2) = length tr2_2", "using \\<open>length tr2_2 = length (vs @ xs2)\\<close>"], ["proof (prove)\nusing this:\n  length tr2_2 = length (vs @ xs2)\n\ngoal (1 subgoal):\n 1. length (vs @ xs2) = length tr2_2", "by presburger"], ["proof (state)\nthis:\n  length (vs @ xs2) = length tr2_2\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  length (vs @ xs2) = length tr2_2", "have \"length tr2_2 = length tr1_2\""], ["proof (prove)\nusing this:\n  length (vs @ xs2) = length tr2_2\n\ngoal (1 subgoal):\n 1. length tr2_2 = length tr1_2", "using \\<open>length tr1_2 = length (vs@xs2)\\<close>"], ["proof (prove)\nusing this:\n  length (vs @ xs2) = length tr2_2\n  length tr1_2 = length (vs @ xs2)\n\ngoal (1 subgoal):\n 1. length tr2_2 = length tr1_2", "by presburger"], ["proof (state)\nthis:\n  length tr2_2 = length tr1_2\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"vs@xs2 \\<in> L PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs2 \\<in> L PM", "using productF_path_inclusion[OF \\<open>length (vs@xs2) = length tr2_2\\<close> \\<open>length tr2_2 = length tr1_2\\<close> \n                                     \\<open>productF M2 M1 FAIL PM\\<close> \\<open>well_formed M2\\<close> \\<open>well_formed M1\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>path M2 (vs @ xs2 || tr2_2) ?p1.0 \\<and>\n           path M1 (vs @ xs2 || tr1_2) ?p2.0;\n   ?p1.0 \\<in> nodes M2; ?p2.0 \\<in> nodes M1\\<rbrakk>\n  \\<Longrightarrow> path PM (vs @ xs2 || tr2_2 || tr1_2) (?p1.0, ?p2.0)\n\ngoal (1 subgoal):\n 1. vs @ xs2 \\<in> L PM", "by (meson Int_iff \\<open>productF M2 M1 FAIL PM\\<close> \\<open>vs @ xs2 \\<in> L M1\\<close> \\<open>vs @ xs2 \\<in> L M2\\<close> \\<open>well_formed M1\\<close> \n        \\<open>well_formed M2\\<close> productF_language)"], ["proof (state)\nthis:\n  vs @ xs2 \\<in> L PM\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}", "using productF_path_io_targets_reverse\n          [OF \\<open>productF M2 M1 FAIL PM\\<close> \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs1)\\<close> \n              \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs1)\\<close> \\<open>vs @ xs1 \\<in> L M2\\<close> \\<open>vs @ xs1 \\<in> L M1\\<close> ]"], ["proof (prove)\nusing this:\n  \\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n   initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n  \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs1) =\n                    {(s2, s1)}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n      initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n     \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs1) =\n                       {(s2, s1)}) \\<Longrightarrow>\n    io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}", "have \"\\<forall>c f. c \\<noteq> initial (f::('a, 'b, 'c) FSM) \\<or> c \\<in> nodes f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f", "by blast"], ["proof (state)\nthis:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n      initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n     \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs1) =\n                       {(s2, s1)}) \\<Longrightarrow>\n    io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}", "then"], ["proof (chain)\npicking this:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}", "by (metis (no_types) \\<open>\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1; \n                             initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk> \n                            \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}\\<close> \n          assms(2) assms(3))"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}", "using productF_path_io_targets_reverse\n          [OF \\<open>productF M2 M1 FAIL PM\\<close> \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs2)\\<close> \n              \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs2)\\<close> \\<open>vs @ xs2 \\<in> L M2\\<close> \\<open>vs @ xs2 \\<in> L M1\\<close> ]"], ["proof (prove)\nusing this:\n  \\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n   initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n  \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs2) =\n                    {(s2, s1)}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n      initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n     \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs2) =\n                       {(s2, s1)}) \\<Longrightarrow>\n    io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}", "have \"\\<forall>c f. c \\<noteq> initial (f::('a, 'b, 'c) FSM) \\<or> c \\<in> nodes f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f", "by blast"], ["proof (state)\nthis:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n      initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n     \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs2) =\n                       {(s2, s1)}) \\<Longrightarrow>\n    io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}", "then"], ["proof (chain)\npicking this:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}", "by (metis (no_types) \\<open>\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1; \n                             initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk> \n                            \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}\\<close> \n          assms(2) assms(3))"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"prefix (vs @ xs1) (vs @ xs2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (vs @ xs1) (vs @ xs2)", "using \\<open>prefix xs1 xs2\\<close>"], ["proof (prove)\nusing this:\n  prefix xs1 xs2\n\ngoal (1 subgoal):\n 1. prefix (vs @ xs1) (vs @ xs2)", "by auto"], ["proof (state)\nthis:\n  prefix (vs @ xs1) (vs @ xs2)\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"sequence_to_failure M1 M2 (vs@xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_to_failure M1 M2 (vs @ xs)", "using assms(1)"], ["proof (prove)\nusing this:\n  minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. sequence_to_failure M1 M2 (vs @ xs)", "by auto"], ["proof (state)\nthis:\n  sequence_to_failure M1 M2 (vs @ xs)\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"prefix (vs@xs1) (vs@xs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (vs @ xs1) (vs @ xs')", "using \\<open>prefix xs1 xs2\\<close> \\<open>prefix xs2 xs'\\<close> prefix_order.dual_order.trans same_prefix_prefix"], ["proof (prove)\nusing this:\n  prefix xs1 xs2\n  prefix xs2 xs'\n  \\<lbrakk>prefix ?b ?a; prefix ?c ?b\\<rbrakk>\n  \\<Longrightarrow> prefix ?c ?a\n  prefix (?xs @ ?ys) (?xs @ ?zs) = prefix ?ys ?zs\n\ngoal (1 subgoal):\n 1. prefix (vs @ xs1) (vs @ xs')", "by blast"], ["proof (state)\nthis:\n  prefix (vs @ xs1) (vs @ xs')\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"prefix (vs@xs2) (vs@xs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (vs @ xs2) (vs @ xs')", "using \\<open>prefix xs2 xs'\\<close> prefix_order.dual_order.trans same_prefix_prefix"], ["proof (prove)\nusing this:\n  prefix xs2 xs'\n  \\<lbrakk>prefix ?b ?a; prefix ?c ?b\\<rbrakk>\n  \\<Longrightarrow> prefix ?c ?a\n  prefix (?xs @ ?ys) (?xs @ ?zs) = prefix ?ys ?zs\n\ngoal (1 subgoal):\n 1. prefix (vs @ xs2) (vs @ xs')", "by blast"], ["proof (state)\nthis:\n  prefix (vs @ xs2) (vs @ xs')\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"io_targets PM (initial PM) (vs @ xs1) = {(s2,s1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs @ xs1) = {(s2, s1)}", "using \\<open>io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}\\<close> assms(4)"], ["proof (prove)\nusing this:\n  io_targets PM (initial M2, initial M1) (vs @ xs1) = {(s2, s1)}\n  test_tools M2 M1 FAIL PM V \\<Omega>\n\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs @ xs1) = {(s2, s1)}", "by auto"], ["proof (state)\nthis:\n  io_targets PM (initial PM) (vs @ xs1) = {(s2, s1)}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"io_targets PM (initial PM) (vs @ xs2) = {(s2,s1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs @ xs2) = {(s2, s1)}", "using \\<open>io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}\\<close> assms(4)"], ["proof (prove)\nusing this:\n  io_targets PM (initial M2, initial M1) (vs @ xs2) = {(s2, s1)}\n  test_tools M2 M1 FAIL PM V \\<Omega>\n\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs @ xs2) = {(s2, s1)}", "by auto"], ["proof (state)\nthis:\n  io_targets PM (initial PM) (vs @ xs2) = {(s2, s1)}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"(vs @ xs2) @ (drop (length xs2) xs) = vs@xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vs @ xs2) @ drop (length xs2) xs = vs @ xs", "by (metis \\<open>prefix xs2 xs'\\<close>  append_eq_appendI append_eq_conv_conj assms(6) prefixE)"], ["proof (state)\nthis:\n  (vs @ xs2) @ drop (length xs2) xs = vs @ xs\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (vs @ xs2) @ drop (length xs2) xs = vs @ xs\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"io_targets PM (initial PM) (vs@xs) = {FAIL}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs @ xs) = {FAIL}", "using sequence_to_failure_reaches_FAIL_ob[OF \\<open>sequence_to_failure M1 M2 (vs@xs)\\<close> assms(2,3) \n                                                 \\<open>productF M2 M1 FAIL PM\\<close>]"], ["proof (prove)\nusing this:\n  io_targets PM (initial PM) (vs @ xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs @ xs) = {FAIL}", "by assumption"], ["proof (state)\nthis:\n  io_targets PM (initial PM) (vs @ xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (vs @ xs2) @ drop (length xs2) xs = vs @ xs\n  io_targets PM (initial PM) (vs @ xs) = {FAIL}", "have \"io_targets PM (initial PM) ((vs @ xs2) @ (drop (length xs2) xs)) = {FAIL}\""], ["proof (prove)\nusing this:\n  (vs @ xs2) @ drop (length xs2) xs = vs @ xs\n  io_targets PM (initial PM) (vs @ xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) ((vs @ xs2) @ drop (length xs2) xs) = {FAIL}", "by auto"], ["proof (state)\nthis:\n  io_targets PM (initial PM) ((vs @ xs2) @ drop (length xs2) xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"io_targets PM (s2,s1) (drop (length xs2) xs) = {FAIL}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (s2, s1) (drop (length xs2) xs) = {FAIL}", "using observable_io_targets_split\n          [OF \\<open>observable PM\\<close>\n              \\<open>io_targets PM (initial PM) ((vs @ xs2) @ (drop (length xs2) xs)) = {FAIL}\\<close>\n              \\<open>io_targets PM (initial PM) (vs @ xs2) = {(s2, s1)}\\<close>]"], ["proof (prove)\nusing this:\n  io_targets PM (s2, s1) (drop (length xs2) xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. io_targets PM (s2, s1) (drop (length xs2) xs) = {FAIL}", "by assumption"], ["proof (state)\nthis:\n  io_targets PM (s2, s1) (drop (length xs2) xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"io_targets PM (initial PM) (vs@xs1@(drop (length xs2) xs)) = {FAIL}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs @ xs1 @ drop (length xs2) xs) = {FAIL}", "using observable_io_targets_append\n          [OF \\<open>observable PM\\<close> \\<open>io_targets PM (initial PM) (vs @ xs1) = {(s2,s1)}\\<close> \n              \\<open>io_targets PM (s2,s1) (drop (length xs2) xs) = {FAIL}\\<close>]"], ["proof (prove)\nusing this:\n  io_targets PM (initial PM) ((vs @ xs1) @ drop (length xs2) xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs @ xs1 @ drop (length xs2) xs) = {FAIL}", "by simp"], ["proof (state)\nthis:\n  io_targets PM (initial PM) (vs @ xs1 @ drop (length xs2) xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"sequence_to_failure M1 M2 (vs@xs1@(drop (length xs2) xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs)", "using sequence_to_failure_alt_def\n          [OF \\<open>io_targets PM (initial PM) (vs@xs1@(drop (length xs2) xs)) = {FAIL}\\<close> assms(2,3)]\n          assms(4)"], ["proof (prove)\nusing this:\n  productF M2 M1 FAIL PM \\<Longrightarrow>\n  sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs)\n  test_tools M2 M1 FAIL PM V \\<Omega>\n\ngoal (1 subgoal):\n 1. sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs)", "by blast"], ["proof (state)\nthis:\n  sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs)\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"length xs1 < length xs2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length xs1 < length xs2", "using \\<open>prefix xs1 xs2\\<close> \\<open>xs1 \\<noteq> xs2\\<close> prefix_length_prefix"], ["proof (prove)\nusing this:\n  prefix xs1 xs2\n  xs1 \\<noteq> xs2\n  \\<lbrakk>prefix ?ps ?xs; prefix ?qs ?xs;\n   length ?ps \\<le> length ?qs\\<rbrakk>\n  \\<Longrightarrow> prefix ?ps ?qs\n\ngoal (1 subgoal):\n 1. length xs1 < length xs2", "by fastforce"], ["proof (state)\nthis:\n  length xs1 < length xs2\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"xs = (xs1 @ (drop (length xs1) xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs = xs1 @ drop (length xs1) xs", "by (metis (no_types) \\<open>(vs @ xs2) @ drop (length xs2) xs = vs @ xs\\<close> \\<open>prefix xs1 xs2\\<close> \n        append_assoc append_eq_conv_conj prefixE)"], ["proof (state)\nthis:\n  xs = xs1 @ drop (length xs1) xs\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"length xs1 < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length xs1 < length xs", "using \\<open>prefix xs1 xs2\\<close> \\<open>prefix xs2 xs'\\<close> \\<open>xs = xs1 @ drop (length xs1) xs\\<close> \\<open>xs1 \\<noteq> xs2\\<close> \n          assms(6) leI"], ["proof (prove)\nusing this:\n  prefix xs1 xs2\n  prefix xs2 xs'\n  xs = xs1 @ drop (length xs1) xs\n  xs1 \\<noteq> xs2\n  prefix xs' xs\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. length xs1 < length xs", "by fastforce"], ["proof (state)\nthis:\n  length xs1 < length xs\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"length (xs1@(drop (length xs2) xs)) < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (xs1 @ drop (length xs2) xs) < length xs", "using \\<open>length xs1 < length xs2\\<close> \\<open>length xs1 < length xs\\<close>"], ["proof (prove)\nusing this:\n  length xs1 < length xs2\n  length xs1 < length xs\n\ngoal (1 subgoal):\n 1. length (xs1 @ drop (length xs2) xs) < length xs", "by auto"], ["proof (state)\nthis:\n  length (xs1 @ drop (length xs2) xs) < length xs\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "have \"vs \\<in> L\\<^sub>i\\<^sub>n M1 V \n        \\<and> sequence_to_failure M1 M2 (vs @ xs1@(drop (length xs2) xs)) \n        \\<and> length (xs1@(drop (length xs2) xs)) < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs \\<in> L\\<^sub>i\\<^sub>n M1 V \\<and>\n    sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs) \\<and>\n    length (xs1 @ drop (length xs2) xs) < length xs", "using \\<open>length (xs1 @ drop (length xs2) xs) < length xs\\<close> \n          \\<open>sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs)\\<close> \n          assms(1) minimal_sequence_to_failure_extending.simps"], ["proof (prove)\nusing this:\n  length (xs1 @ drop (length xs2) xs) < length xs\n  sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs)\n  minimal_sequence_to_failure_extending V M1 M2 vs xs\n  minimal_sequence_to_failure_extending ?V ?M1.0 ?M2.0 ?v' ?io =\n  (?v' \\<in> L\\<^sub>i\\<^sub>n ?M1.0 ?V \\<and>\n   sequence_to_failure ?M1.0 ?M2.0 (?v' @ ?io) \\<and>\n   (\\<nexists>io'.\n       \\<exists>w'\\<in>L\\<^sub>i\\<^sub>n ?M1.0 ?V.\n          sequence_to_failure ?M1.0 ?M2.0 (w' @ io') \\<and>\n          length io' < length ?io))\n\ngoal (1 subgoal):\n 1. vs \\<in> L\\<^sub>i\\<^sub>n M1 V \\<and>\n    sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs) \\<and>\n    length (xs1 @ drop (length xs2) xs) < length xs", "by blast"], ["proof (state)\nthis:\n  vs \\<in> L\\<^sub>i\\<^sub>n M1 V \\<and>\n  sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs) \\<and>\n  length (xs1 @ drop (length xs2) xs) < length xs\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  vs \\<in> L\\<^sub>i\\<^sub>n M1 V \\<and>\n  sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs) \\<and>\n  length (xs1 @ drop (length xs2) xs) < length xs", "have \"\\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs\""], ["proof (prove)\nusing this:\n  vs \\<in> L\\<^sub>i\\<^sub>n M1 V \\<and>\n  sequence_to_failure M1 M2 (vs @ xs1 @ drop (length xs2) xs) \\<and>\n  length (xs1 @ drop (length xs2) xs) < length xs\n\ngoal (1 subgoal):\n 1. \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs", "by (meson minimal_sequence_to_failure_extending.elims(2))"], ["proof (state)\nthis:\n  \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. Rep_Pre M2 M1 vs xs' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs", "show \"False\""], ["proof (prove)\nusing this:\n  \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. False", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs\n  minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma minimal_sequence_to_failure_extending_implies_Rep_Cov :\n  assumes \"minimal_sequence_to_failure_extending V M1 M2 vs xs\"\n  and     \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"V'' \\<in> N (vs@xsR) M1 V\"\n  and     \"prefix xsR xs\"\nshows \"\\<not> Rep_Cov M2 M1 V'' vs xsR\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Rep_Cov M2 M1 V'' vs xsR", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "assume \"Rep_Cov M2 M1 V'' vs xsR\""], ["proof (state)\nthis:\n  Rep_Cov M2 M1 V'' vs xsR\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Rep_Cov M2 M1 V'' vs xsR", "obtain xs' vs' s2 s1 where \"xs' \\<noteq> []\" \n                                  \"prefix xs' xsR\" \n                                  \"vs' \\<in> V''\"\n                                  \"io_targets M2 (initial M2) (vs @ xs') = {s2}\" \n                                  \"io_targets M2 (initial M2) (vs') = {s2}\"\n                                  \"io_targets M1 (initial M1) (vs @ xs') = {s1}\" \n                                  \"io_targets M1 (initial M1) (vs') = {s1}\""], ["proof (prove)\nusing this:\n  Rep_Cov M2 M1 V'' vs xsR\n\ngoal (1 subgoal):\n 1. (\\<And>xs' vs' s2 s1.\n        \\<lbrakk>xs' \\<noteq> []; prefix xs' xsR; vs' \\<in> V'';\n         io_targets M2 (initial M2) (vs @ xs') = {s2};\n         io_targets M2 (initial M2) vs' = {s2};\n         io_targets M1 (initial M1) (vs @ xs') = {s1};\n         io_targets M1 (initial M1) vs' = {s1}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs' \\<noteq> []\n  prefix xs' xsR\n  vs' \\<in> V''\n  io_targets M2 (initial M2) (vs @ xs') = {s2}\n  io_targets M2 (initial M2) vs' = {s2}\n  io_targets M1 (initial M1) (vs @ xs') = {s1}\n  io_targets M1 (initial M1) vs' = {s1}\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  xs' \\<noteq> []\n  prefix xs' xsR\n  vs' \\<in> V''\n  io_targets M2 (initial M2) (vs @ xs') = {s2}\n  io_targets M2 (initial M2) vs' = {s2}\n  io_targets M1 (initial M1) (vs @ xs') = {s1}\n  io_targets M1 (initial M1) vs' = {s1}", "have \"s2 \\<in> io_targets M2 (initial M2) (vs @ xs')\"\n            \"s2 \\<in> io_targets M2 (initial M2) (vs')\"\n            \"s1 \\<in> io_targets M1 (initial M1) (vs @ xs')\"\n            \"s1 \\<in> io_targets M1 (initial M1) (vs')\""], ["proof (prove)\nusing this:\n  xs' \\<noteq> []\n  prefix xs' xsR\n  vs' \\<in> V''\n  io_targets M2 (initial M2) (vs @ xs') = {s2}\n  io_targets M2 (initial M2) vs' = {s2}\n  io_targets M1 (initial M1) (vs @ xs') = {s1}\n  io_targets M1 (initial M1) vs' = {s1}\n\ngoal (1 subgoal):\n 1. (s2 \\<in> io_targets M2 (initial M2) (vs @ xs') &&&\n     s2 \\<in> io_targets M2 (initial M2) vs') &&&\n    s1 \\<in> io_targets M1 (initial M1) (vs @ xs') &&&\n    s1 \\<in> io_targets M1 (initial M1) vs'", "by auto"], ["proof (state)\nthis:\n  s2 \\<in> io_targets M2 (initial M2) (vs @ xs')\n  s2 \\<in> io_targets M2 (initial M2) vs'\n  s1 \\<in> io_targets M1 (initial M1) (vs @ xs')\n  s1 \\<in> io_targets M1 (initial M1) vs'\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"vs@xs' \\<in> L M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs' \\<in> L M1", "using io_target_implies_L[OF \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs')\\<close>]"], ["proof (prove)\nusing this:\n  vs @ xs' \\<in> L M1\n\ngoal (1 subgoal):\n 1. vs @ xs' \\<in> L M1", "by assumption"], ["proof (state)\nthis:\n  vs @ xs' \\<in> L M1\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"vs' \\<in> L M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs' \\<in> L M1", "using io_target_implies_L[OF \\<open>s1 \\<in> io_targets M1 (initial M1) (vs')\\<close>]"], ["proof (prove)\nusing this:\n  vs' \\<in> L M1\n\ngoal (1 subgoal):\n 1. vs' \\<in> L M1", "by assumption"], ["proof (state)\nthis:\n  vs' \\<in> L M1\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"vs@xs' \\<in> L M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs' \\<in> L M2", "using io_target_implies_L[OF \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs')\\<close>]"], ["proof (prove)\nusing this:\n  vs @ xs' \\<in> L M2\n\ngoal (1 subgoal):\n 1. vs @ xs' \\<in> L M2", "by assumption"], ["proof (state)\nthis:\n  vs @ xs' \\<in> L M2\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"vs' \\<in> L M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs' \\<in> L M2", "using io_target_implies_L[OF \\<open>s2 \\<in> io_targets M2 (initial M2) (vs')\\<close>]"], ["proof (prove)\nusing this:\n  vs' \\<in> L M2\n\ngoal (1 subgoal):\n 1. vs' \\<in> L M2", "by assumption"], ["proof (state)\nthis:\n  vs' \\<in> L M2\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "obtain tr1_1 where \"path M1 (vs@xs' || tr1_1) (initial M1)\"\n                     \"length tr1_1 = length (vs@xs')\"\n                     \"target (vs@xs' || tr1_1) (initial M1) = s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tr1_1.\n        \\<lbrakk>path M1 (vs @ xs' || tr1_1) (initial M1);\n         length tr1_1 = length (vs @ xs');\n         target (vs @ xs' || tr1_1) (initial M1) = s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs')\\<close>"], ["proof (prove)\nusing this:\n  s1 \\<in> io_targets M1 (initial M1) (vs @ xs')\n\ngoal (1 subgoal):\n 1. (\\<And>tr1_1.\n        \\<lbrakk>path M1 (vs @ xs' || tr1_1) (initial M1);\n         length tr1_1 = length (vs @ xs');\n         target (vs @ xs' || tr1_1) (initial M1) = s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  path M1 (vs @ xs' || tr1_1) (initial M1)\n  length tr1_1 = length (vs @ xs')\n  target (vs @ xs' || tr1_1) (initial M1) = s1\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "obtain tr1_2 where \"path M1 (vs' || tr1_2) (initial M1)\"\n                     \"length tr1_2 = length (vs')\"\n                     \"target (vs' || tr1_2) (initial M1) = s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tr1_2.\n        \\<lbrakk>path M1 (vs' || tr1_2) (initial M1);\n         length tr1_2 = length vs';\n         target (vs' || tr1_2) (initial M1) = s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s1 \\<in> io_targets M1 (initial M1) (vs')\\<close>"], ["proof (prove)\nusing this:\n  s1 \\<in> io_targets M1 (initial M1) vs'\n\ngoal (1 subgoal):\n 1. (\\<And>tr1_2.\n        \\<lbrakk>path M1 (vs' || tr1_2) (initial M1);\n         length tr1_2 = length vs';\n         target (vs' || tr1_2) (initial M1) = s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  path M1 (vs' || tr1_2) (initial M1)\n  length tr1_2 = length vs'\n  target (vs' || tr1_2) (initial M1) = s1\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "obtain tr2_1 where \"path M2 (vs@xs' || tr2_1) (initial M2)\"\n                     \"length tr2_1 = length (vs@xs')\"\n                     \"target (vs@xs' || tr2_1) (initial M2) = s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tr2_1.\n        \\<lbrakk>path M2 (vs @ xs' || tr2_1) (initial M2);\n         length tr2_1 = length (vs @ xs');\n         target (vs @ xs' || tr2_1) (initial M2) = s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs')\\<close>"], ["proof (prove)\nusing this:\n  s2 \\<in> io_targets M2 (initial M2) (vs @ xs')\n\ngoal (1 subgoal):\n 1. (\\<And>tr2_1.\n        \\<lbrakk>path M2 (vs @ xs' || tr2_1) (initial M2);\n         length tr2_1 = length (vs @ xs');\n         target (vs @ xs' || tr2_1) (initial M2) = s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  path M2 (vs @ xs' || tr2_1) (initial M2)\n  length tr2_1 = length (vs @ xs')\n  target (vs @ xs' || tr2_1) (initial M2) = s2\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "obtain tr2_2 where \"path M2 (vs' || tr2_2) (initial M2)\"\n                     \"length tr2_2 = length (vs')\"\n                     \"target (vs' || tr2_2) (initial M2) = s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tr2_2.\n        \\<lbrakk>path M2 (vs' || tr2_2) (initial M2);\n         length tr2_2 = length vs';\n         target (vs' || tr2_2) (initial M2) = s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s2 \\<in> io_targets M2 (initial M2) (vs')\\<close>"], ["proof (prove)\nusing this:\n  s2 \\<in> io_targets M2 (initial M2) vs'\n\ngoal (1 subgoal):\n 1. (\\<And>tr2_2.\n        \\<lbrakk>path M2 (vs' || tr2_2) (initial M2);\n         length tr2_2 = length vs';\n         target (vs' || tr2_2) (initial M2) = s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  path M2 (vs' || tr2_2) (initial M2)\n  length tr2_2 = length vs'\n  target (vs' || tr2_2) (initial M2) = s2\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"productF M2 M1 FAIL PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. productF M2 M1 FAIL PM", "using assms(4)"], ["proof (prove)\nusing this:\n  test_tools M2 M1 FAIL PM V \\<Omega>\n\ngoal (1 subgoal):\n 1. productF M2 M1 FAIL PM", "by auto"], ["proof (state)\nthis:\n  productF M2 M1 FAIL PM\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"well_formed M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_formed M1", "using assms(2)"], ["proof (prove)\nusing this:\n  OFSM M1\n\ngoal (1 subgoal):\n 1. well_formed M1", "by auto"], ["proof (state)\nthis:\n  well_formed M1\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"well_formed M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_formed M2", "using assms(3)"], ["proof (prove)\nusing this:\n  OFSM M2\n\ngoal (1 subgoal):\n 1. well_formed M2", "by auto"], ["proof (state)\nthis:\n  well_formed M2\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"observable PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. observable PM", "by (meson assms(2) assms(3) assms(4) observable_productF)"], ["proof (state)\nthis:\n  observable PM\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"length (vs@xs') = length tr2_1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (vs @ xs') = length tr2_1", "using \\<open>length tr2_1 = length (vs @ xs')\\<close>"], ["proof (prove)\nusing this:\n  length tr2_1 = length (vs @ xs')\n\ngoal (1 subgoal):\n 1. length (vs @ xs') = length tr2_1", "by presburger"], ["proof (state)\nthis:\n  length (vs @ xs') = length tr2_1\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  length (vs @ xs') = length tr2_1", "have \"length tr2_1 = length tr1_1\""], ["proof (prove)\nusing this:\n  length (vs @ xs') = length tr2_1\n\ngoal (1 subgoal):\n 1. length tr2_1 = length tr1_1", "using \\<open>length tr1_1 = length (vs@xs')\\<close>"], ["proof (prove)\nusing this:\n  length (vs @ xs') = length tr2_1\n  length tr1_1 = length (vs @ xs')\n\ngoal (1 subgoal):\n 1. length tr2_1 = length tr1_1", "by presburger"], ["proof (state)\nthis:\n  length tr2_1 = length tr1_1\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"vs@xs' \\<in> L PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs' \\<in> L PM", "using productF_path_inclusion[OF \\<open>length (vs@xs') = length tr2_1\\<close> \\<open>length tr2_1 = length tr1_1\\<close> \n                                     \\<open>productF M2 M1 FAIL PM\\<close> \\<open>well_formed M2\\<close> \\<open>well_formed M1\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>path M2 (vs @ xs' || tr2_1) ?p1.0 \\<and>\n           path M1 (vs @ xs' || tr1_1) ?p2.0;\n   ?p1.0 \\<in> nodes M2; ?p2.0 \\<in> nodes M1\\<rbrakk>\n  \\<Longrightarrow> path PM (vs @ xs' || tr2_1 || tr1_1) (?p1.0, ?p2.0)\n\ngoal (1 subgoal):\n 1. vs @ xs' \\<in> L PM", "by (meson Int_iff \\<open>productF M2 M1 FAIL PM\\<close> \\<open>vs @ xs' \\<in> L M1\\<close> \\<open>vs @ xs' \\<in> L M2\\<close> \\<open>well_formed M1\\<close>\n        \\<open>well_formed M2\\<close> productF_language)"], ["proof (state)\nthis:\n  vs @ xs' \\<in> L PM\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"length (vs') = length tr2_2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length vs' = length tr2_2", "using \\<open>length tr2_2 = length (vs')\\<close>"], ["proof (prove)\nusing this:\n  length tr2_2 = length vs'\n\ngoal (1 subgoal):\n 1. length vs' = length tr2_2", "by presburger"], ["proof (state)\nthis:\n  length vs' = length tr2_2\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  length vs' = length tr2_2", "have \"length tr2_2 = length tr1_2\""], ["proof (prove)\nusing this:\n  length vs' = length tr2_2\n\ngoal (1 subgoal):\n 1. length tr2_2 = length tr1_2", "using \\<open>length tr1_2 = length (vs')\\<close>"], ["proof (prove)\nusing this:\n  length vs' = length tr2_2\n  length tr1_2 = length vs'\n\ngoal (1 subgoal):\n 1. length tr2_2 = length tr1_2", "by presburger"], ["proof (state)\nthis:\n  length tr2_2 = length tr1_2\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"vs' \\<in> L PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs' \\<in> L PM", "using productF_path_inclusion[OF \\<open>length (vs') = length tr2_2\\<close> \\<open>length tr2_2 = length tr1_2\\<close> \n                                     \\<open>productF M2 M1 FAIL PM\\<close> \\<open>well_formed M2\\<close> \\<open>well_formed M1\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>path M2 (vs' || tr2_2) ?p1.0 \\<and> path M1 (vs' || tr1_2) ?p2.0;\n   ?p1.0 \\<in> nodes M2; ?p2.0 \\<in> nodes M1\\<rbrakk>\n  \\<Longrightarrow> path PM (vs' || tr2_2 || tr1_2) (?p1.0, ?p2.0)\n\ngoal (1 subgoal):\n 1. vs' \\<in> L PM", "by (meson Int_iff \\<open>productF M2 M1 FAIL PM\\<close> \\<open>vs' \\<in> L M1\\<close> \\<open>vs' \\<in> L M2\\<close> \\<open>well_formed M1\\<close> \n        \\<open>well_formed M2\\<close> productF_language)"], ["proof (state)\nthis:\n  vs' \\<in> L PM\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}", "using productF_path_io_targets_reverse\n          [OF \\<open>productF M2 M1 FAIL PM\\<close> \\<open>s2 \\<in> io_targets M2 (initial M2) (vs @ xs')\\<close> \n              \\<open>s1 \\<in> io_targets M1 (initial M1) (vs @ xs')\\<close> \\<open>vs @ xs' \\<in> L M2\\<close> \\<open>vs @ xs' \\<in> L M1\\<close> ]"], ["proof (prove)\nusing this:\n  \\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n   initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n  \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs') =\n                    {(s2, s1)}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n      initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n     \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs') =\n                       {(s2, s1)}) \\<Longrightarrow>\n    io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}", "have \"\\<forall>c f. c \\<noteq> initial (f::('a, 'b, 'c) FSM) \\<or> c \\<in> nodes f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f", "by blast"], ["proof (state)\nthis:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n      initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n     \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs') =\n                       {(s2, s1)}) \\<Longrightarrow>\n    io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}", "then"], ["proof (chain)\npicking this:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}", "by (metis (no_types) \\<open>\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1; \n                              initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk> \n                            \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}\\<close> \n          assms(2) assms(3))"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"io_targets PM (initial M2, initial M1) (vs') = {(s2, s1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}", "using productF_path_io_targets_reverse\n          [OF \\<open>productF M2 M1 FAIL PM\\<close> \\<open>s2 \\<in> io_targets M2 (initial M2) (vs')\\<close> \n              \\<open>s1 \\<in> io_targets M1 (initial M1) (vs')\\<close> \\<open>vs' \\<in> L M2\\<close> \\<open>vs' \\<in> L M1\\<close> ]"], ["proof (prove)\nusing this:\n  \\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n   initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n  \\<Longrightarrow> io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n      initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n     \\<Longrightarrow> io_targets PM (initial M2, initial M1) vs' =\n                       {(s2, s1)}) \\<Longrightarrow>\n    io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}", "have \"\\<forall>c f. c \\<noteq> initial (f::('a, 'b, 'c) FSM) \\<or> c \\<in> nodes f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f", "by blast"], ["proof (state)\nthis:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1;\n      initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk>\n     \\<Longrightarrow> io_targets PM (initial M2, initial M1) vs' =\n                       {(s2, s1)}) \\<Longrightarrow>\n    io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}", "then"], ["proof (chain)\npicking this:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>c f. c \\<noteq> initial f \\<or> c \\<in> nodes f\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}", "by (metis (no_types) \\<open>\\<lbrakk>observable M2; observable M1; well_formed M2; well_formed M1; \n                              initial M2 \\<in> nodes M2; initial M1 \\<in> nodes M1\\<rbrakk> \n                            \\<Longrightarrow> io_targets PM (initial M2, initial M1) (vs') = {(s2, s1)}\\<close> \n          assms(2) assms(3))"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"io_targets PM (initial PM) (vs') = {(s2, s1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) vs' = {(s2, s1)}", "by (metis (no_types) \\<open>io_targets PM (initial M2, initial M1) vs' = {(s2, s1)}\\<close> \n        \\<open>productF M2 M1 FAIL PM\\<close> productF_simps(4))"], ["proof (state)\nthis:\n  io_targets PM (initial PM) vs' = {(s2, s1)}\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"sequence_to_failure M1 M2 (vs@xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_to_failure M1 M2 (vs @ xs)", "using assms(1)"], ["proof (prove)\nusing this:\n  minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. sequence_to_failure M1 M2 (vs @ xs)", "by auto"], ["proof (state)\nthis:\n  sequence_to_failure M1 M2 (vs @ xs)\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"xs = xs' @ (drop (length xs') xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs = xs' @ drop (length xs') xs", "by (metis \\<open>prefix xs' xsR\\<close> append_assoc append_eq_conv_conj assms(6) prefixE)"], ["proof (state)\nthis:\n  xs = xs' @ drop (length xs') xs\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  xs = xs' @ drop (length xs') xs", "have \"io_targets PM (initial M2, initial M1) (vs @ xs' @ (drop (length xs') xs)) = {FAIL}\""], ["proof (prove)\nusing this:\n  xs = xs' @ drop (length xs') xs\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1)\n     (vs @ xs' @ drop (length xs') xs) =\n    {FAIL}", "by (metis \\<open>productF M2 M1 FAIL PM\\<close> \\<open>sequence_to_failure M1 M2 (vs @ xs)\\<close> assms(2) assms(3) \n        productF_simps(4) sequence_to_failure_reaches_FAIL_ob)"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1) (vs @ xs' @ drop (length xs') xs) =\n  {FAIL}\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  io_targets PM (initial M2, initial M1) (vs @ xs' @ drop (length xs') xs) =\n  {FAIL}", "have \"io_targets PM (initial M2, initial M1) ((vs @ xs') @ (drop (length xs') xs)) = {FAIL}\""], ["proof (prove)\nusing this:\n  io_targets PM (initial M2, initial M1) (vs @ xs' @ drop (length xs') xs) =\n  {FAIL}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial M2, initial M1)\n     ((vs @ xs') @ drop (length xs') xs) =\n    {FAIL}", "by auto"], ["proof (state)\nthis:\n  io_targets PM (initial M2, initial M1)\n   ((vs @ xs') @ drop (length xs') xs) =\n  {FAIL}\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"io_targets PM (s2, s1) (drop (length xs') xs) = {FAIL}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (s2, s1) (drop (length xs') xs) = {FAIL}", "using observable_io_targets_split\n          [OF \\<open>observable PM\\<close> \n              \\<open>io_targets PM (initial M2,initial M1) ((vs @ xs') @ (drop (length xs') xs)) = {FAIL}\\<close> \n              \\<open>io_targets PM (initial M2, initial M1) (vs @ xs') = {(s2, s1)}\\<close>]"], ["proof (prove)\nusing this:\n  io_targets PM (s2, s1) (drop (length xs') xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. io_targets PM (s2, s1) (drop (length xs') xs) = {FAIL}", "by assumption"], ["proof (state)\nthis:\n  io_targets PM (s2, s1) (drop (length xs') xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"io_targets PM (initial PM) (vs' @ (drop (length xs') xs)) = {FAIL}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs' @ drop (length xs') xs) = {FAIL}", "using observable_io_targets_append\n          [OF \\<open>observable PM\\<close> \\<open>io_targets PM (initial PM) (vs') = {(s2, s1)}\\<close>\n              \\<open>io_targets PM (s2, s1) (drop (length xs') xs) = {FAIL}\\<close>]"], ["proof (prove)\nusing this:\n  io_targets PM (initial PM) (vs' @ drop (length xs') xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. io_targets PM (initial PM) (vs' @ drop (length xs') xs) = {FAIL}", "by assumption"], ["proof (state)\nthis:\n  io_targets PM (initial PM) (vs' @ drop (length xs') xs) = {FAIL}\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"sequence_to_failure M1 M2 (vs' @ (drop (length xs') xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sequence_to_failure M1 M2 (vs' @ drop (length xs') xs)", "using sequence_to_failure_alt_def\n          [OF \\<open>io_targets PM (initial PM) (vs' @ (drop (length xs') xs)) = {FAIL}\\<close> assms(2,3)] \n          assms(4)"], ["proof (prove)\nusing this:\n  productF M2 M1 FAIL PM \\<Longrightarrow>\n  sequence_to_failure M1 M2 (vs' @ drop (length xs') xs)\n  test_tools M2 M1 FAIL PM V \\<Omega>\n\ngoal (1 subgoal):\n 1. sequence_to_failure M1 M2 (vs' @ drop (length xs') xs)", "by blast"], ["proof (state)\nthis:\n  sequence_to_failure M1 M2 (vs' @ drop (length xs') xs)\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"length (drop (length xs') xs) < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (drop (length xs') xs) < length xs", "by (metis (no_types) \\<open>xs = xs' @ drop (length xs') xs\\<close> \\<open>xs' \\<noteq> []\\<close> length_append \n        length_greater_0_conv less_add_same_cancel2)"], ["proof (state)\nthis:\n  length (drop (length xs') xs) < length xs\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"vs' \\<in> L\\<^sub>i\\<^sub>n M1 V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "have \"V'' \\<in> Perm V M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V'' \\<in> Perm V M1", "using assms(5)"], ["proof (prove)\nusing this:\n  V'' \\<in> N (vs @ xsR) M1 V\n\ngoal (1 subgoal):\n 1. V'' \\<in> Perm V M1", "unfolding N.simps"], ["proof (prove)\nusing this:\n  V''\n  \\<in> {V'' \\<in> Perm V M1.\n         map fst (mcp' (vs @ xsR) V'') = mcp' (map fst (vs @ xsR)) V}\n\ngoal (1 subgoal):\n 1. V'' \\<in> Perm V M1", "by blast"], ["proof (state)\nthis:\n  V'' \\<in> Perm V M1\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "then"], ["proof (chain)\npicking this:\n  V'' \\<in> Perm V M1", "obtain f where f_def : \"V'' = image f V \n                                  \\<and> (\\<forall> v \\<in> V . f v \\<in> language_state_for_input M1 (initial M1) v)\""], ["proof (prove)\nusing this:\n  V'' \\<in> Perm V M1\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        V'' = f ` V \\<and>\n        (\\<forall>v\\<in>V.\n            f v\n            \\<in> language_state_for_input M1 (initial M1)\n                   v) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding Perm.simps"], ["proof (prove)\nusing this:\n  V''\n  \\<in> {f ` V |f.\n         \\<forall>v\\<in>V.\n            f v \\<in> language_state_for_input M1 (initial M1) v}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        V'' = f ` V \\<and>\n        (\\<forall>v\\<in>V.\n            f v\n            \\<in> language_state_for_input M1 (initial M1)\n                   v) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  V'' = f ` V \\<and>\n  (\\<forall>v\\<in>V. f v \\<in> language_state_for_input M1 (initial M1) v)\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "then"], ["proof (chain)\npicking this:\n  V'' = f ` V \\<and>\n  (\\<forall>v\\<in>V. f v \\<in> language_state_for_input M1 (initial M1) v)", "obtain v where \"v \\<in> V\" \"vs' = f v\""], ["proof (prove)\nusing this:\n  V'' = f ` V \\<and>\n  (\\<forall>v\\<in>V. f v \\<in> language_state_for_input M1 (initial M1) v)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> V; vs' = f v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>vs' \\<in> V''\\<close>"], ["proof (prove)\nusing this:\n  V'' = f ` V \\<and>\n  (\\<forall>v\\<in>V. f v \\<in> language_state_for_input M1 (initial M1) v)\n  vs' \\<in> V''\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> V; vs' = f v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> V\n  vs' = f v\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "then"], ["proof (chain)\npicking this:\n  v \\<in> V\n  vs' = f v", "have \"vs' \\<in> language_state_for_input M1 (initial M1) v\""], ["proof (prove)\nusing this:\n  v \\<in> V\n  vs' = f v\n\ngoal (1 subgoal):\n 1. vs' \\<in> language_state_for_input M1 (initial M1) v", "using f_def"], ["proof (prove)\nusing this:\n  v \\<in> V\n  vs' = f v\n  V'' = f ` V \\<and>\n  (\\<forall>v\\<in>V. f v \\<in> language_state_for_input M1 (initial M1) v)\n\ngoal (1 subgoal):\n 1. vs' \\<in> language_state_for_input M1 (initial M1) v", "by auto"], ["proof (state)\nthis:\n  vs' \\<in> language_state_for_input M1 (initial M1) v\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "have \"language_state_for_input M1 (initial M1) v = L\\<^sub>i\\<^sub>n M1 {v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. language_state_for_input M1 (initial M1) v = L\\<^sub>i\\<^sub>n M1 {v}", "by auto"], ["proof (state)\nthis:\n  language_state_for_input M1 (initial M1) v = L\\<^sub>i\\<^sub>n M1 {v}\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "moreover"], ["proof (state)\nthis:\n  language_state_for_input M1 (initial M1) v = L\\<^sub>i\\<^sub>n M1 {v}\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "have \"{v} \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v} \\<subseteq> V", "using \\<open>v \\<in> V\\<close>"], ["proof (prove)\nusing this:\n  v \\<in> V\n\ngoal (1 subgoal):\n 1. {v} \\<subseteq> V", "by blast"], ["proof (state)\nthis:\n  {v} \\<subseteq> V\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "ultimately"], ["proof (chain)\npicking this:\n  language_state_for_input M1 (initial M1) v = L\\<^sub>i\\<^sub>n M1 {v}\n  {v} \\<subseteq> V", "have \"language_state_for_input M1 (initial M1) v \\<subseteq> L\\<^sub>i\\<^sub>n M1 V\""], ["proof (prove)\nusing this:\n  language_state_for_input M1 (initial M1) v = L\\<^sub>i\\<^sub>n M1 {v}\n  {v} \\<subseteq> V\n\ngoal (1 subgoal):\n 1. language_state_for_input M1 (initial M1) v\n    \\<subseteq> L\\<^sub>i\\<^sub>n M1 V", "unfolding language_state_for_inputs.simps language_state_for_input.simps"], ["proof (prove)\nusing this:\n  {v || ys |ys. length v = length ys \\<and> v || ys \\<in> L M1} =\n  {xs || ys |xs ys.\n   xs \\<in> {v} \\<and> length xs = length ys \\<and> xs || ys \\<in> L M1}\n  {v} \\<subseteq> V\n\ngoal (1 subgoal):\n 1. {v || ys |ys. length v = length ys \\<and> v || ys \\<in> L M1}\n    \\<subseteq> {xs || ys |xs ys.\n                 xs \\<in> V \\<and>\n                 length xs = length ys \\<and> xs || ys \\<in> L M1}", "by blast"], ["proof (state)\nthis:\n  language_state_for_input M1 (initial M1) v\n  \\<subseteq> L\\<^sub>i\\<^sub>n M1 V\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "then"], ["proof (chain)\npicking this:\n  language_state_for_input M1 (initial M1) v\n  \\<subseteq> L\\<^sub>i\\<^sub>n M1 V", "show ?thesis"], ["proof (prove)\nusing this:\n  language_state_for_input M1 (initial M1) v\n  \\<subseteq> L\\<^sub>i\\<^sub>n M1 V\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "using\\<open>vs' \\<in> language_state_for_input M1 (initial M1) v\\<close>"], ["proof (prove)\nusing this:\n  language_state_for_input M1 (initial M1) v\n  \\<subseteq> L\\<^sub>i\\<^sub>n M1 V\n  vs' \\<in> language_state_for_input M1 (initial M1) v\n\ngoal (1 subgoal):\n 1. vs' \\<in> L\\<^sub>i\\<^sub>n M1 V", "by blast"], ["proof (state)\nthis:\n  vs' \\<in> L\\<^sub>i\\<^sub>n M1 V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vs' \\<in> L\\<^sub>i\\<^sub>n M1 V\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "have \"\\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs", "using \\<open>vs' \\<in> L\\<^sub>i\\<^sub>n M1 V\\<close>\n          \\<open>sequence_to_failure M1 M2 (vs' @ (drop (length xs') xs))\\<close>\n          \\<open>length (drop (length xs') xs) < length xs\\<close>"], ["proof (prove)\nusing this:\n  vs' \\<in> L\\<^sub>i\\<^sub>n M1 V\n  sequence_to_failure M1 M2 (vs' @ drop (length xs') xs)\n  length (drop (length xs') xs) < length xs\n\ngoal (1 subgoal):\n 1. \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs", "using minimal_sequence_to_failure_extending.elims(2)"], ["proof (prove)\nusing this:\n  vs' \\<in> L\\<^sub>i\\<^sub>n M1 V\n  sequence_to_failure M1 M2 (vs' @ drop (length xs') xs)\n  length (drop (length xs') xs) < length xs\n  \\<lbrakk>minimal_sequence_to_failure_extending ?x ?xa ?xb ?xc ?xd;\n   \\<And>V M1 M2 v' io.\n      \\<lbrakk>?x = V; ?xa = M1; ?xb = M2; ?xc = v'; ?xd = io;\n       v' \\<in> L\\<^sub>i\\<^sub>n M1 V \\<and>\n       sequence_to_failure M1 M2 (v' @ io) \\<and>\n       (\\<nexists>io'.\n           \\<exists>w'\\<in>L\\<^sub>i\\<^sub>n M1 V.\n              sequence_to_failure M1 M2 (w' @ io') \\<and>\n              length io' < length io)\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs", "by blast"], ["proof (state)\nthis:\n  \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. Rep_Cov M2 M1 V'' vs xsR \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs", "show \"False\""], ["proof (prove)\nusing this:\n  \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. False", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<not> minimal_sequence_to_failure_extending V M1 M2 vs xs\n  minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mstfe_no_repetition :\n  assumes \"minimal_sequence_to_failure_extending V M1 M2 vs xs\"\n  and     \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"V'' \\<in> N (vs@xs') M1 V\"\n  and     \"prefix xs' xs\"\nshows \"\\<not> Rep_Pre M2 M1 vs xs'\"\n  and \"\\<not> Rep_Cov M2 M1 V'' vs xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Rep_Pre M2 M1 vs xs' &&& \\<not> Rep_Cov M2 M1 V'' vs xs'", "using minimal_sequence_to_failure_extending_implies_Rep_Pre[OF assms]\n        minimal_sequence_to_failure_extending_implies_Rep_Cov[OF assms]"], ["proof (prove)\nusing this:\n  \\<not> Rep_Pre M2 M1 vs xs'\n  \\<not> Rep_Cov M2 M1 V'' vs xs'\n\ngoal (1 subgoal):\n 1. \\<not> Rep_Pre M2 M1 vs xs' &&& \\<not> Rep_Cov M2 M1 V'' vs xs'", "by linarith+"], ["", "subsection \\<open> Sufficiency of the test suite to test for reduction \\<close>"], ["", "text \\<open>\nThe following lemma proves that set of input sequences generated in the final iteration of the\n@{verbatim TS} function constitutes a test suite sufficient to test for reduction the FSMs it has \nbeen generated for.\n\nThis proof is performed by contradiction: If the test suite is not sufficient, then some minimal\nsequence to a failure extending the deterministic state cover must exist. Due to the test suite\nbeing assumed insufficient, this sequence cannot be contained in it and hence a prefix of it must\nhave been contained in one of the sets calculated by the @{verbatim R} function. This is only \npossible if the prefix is not a minimal sequence to a failure extending the deterministic state \ncover or if the test suite observes a failure, both of which violates the assumptions.\n\\<close>"], ["", "lemma asc_sufficiency :\n  assumes \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"asc_fault_domain M2 M1 m\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"final_iteration M2 M1 \\<Omega> V m i\"  \nshows \"M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m i) . \\<Omega>\\<rbrakk> M2 \\<longrightarrow> M1 \\<preceq> M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m\n                           i).\\<Omega>\\<rbrakk> M2 \\<longrightarrow>\n    M1 \\<preceq> M2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m\n                           i).\\<Omega>\\<rbrakk> M2 \\<Longrightarrow>\n    M1 \\<preceq> M2", "assume \"atc_io_reduction_on_sets M1 (TS M2 M1 \\<Omega> V m i) \\<Omega> M2\""], ["proof (state)\nthis:\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m i).\\<Omega>\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m\n                           i).\\<Omega>\\<rbrakk> M2 \\<Longrightarrow>\n    M1 \\<preceq> M2", "show \"M1 \\<preceq> M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 \\<preceq> M2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "let ?TS = \"\\<lambda> n . TS M2 M1 \\<Omega> V m n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "let ?C = \"\\<lambda> n . C M2 M1 \\<Omega> V m n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "let ?RM = \"\\<lambda> n . RM M2 M1 \\<Omega> V m n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "assume \"\\<not> M1 \\<preceq> M2\""], ["proof (state)\nthis:\n  \\<not> M1 \\<preceq> M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "obtain vs xs where \"minimal_sequence_to_failure_extending V M1 M2 vs xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>vs xs.\n        minimal_sequence_to_failure_extending V M1 M2 vs\n         xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using  assms(1) assms(2) assms(4) \n             minimal_sequence_to_failure_extending_det_state_cover_ob[OF _ _ _ _ \\<open>\\<not> M1 \\<preceq> M2\\<close>, of V]"], ["proof (prove)\nusing this:\n  OFSM M1\n  OFSM M2\n  test_tools M2 M1 FAIL PM V \\<Omega>\n  \\<lbrakk>well_formed M1; well_formed M2; observable M2;\n   is_det_state_cover M2 V;\n   \\<And>vs xs.\n      minimal_sequence_to_failure_extending V M1 M2 vs xs \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>vs xs.\n        minimal_sequence_to_failure_extending V M1 M2 vs\n         xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  minimal_sequence_to_failure_extending V M1 M2 vs xs", "have \"vs \\<in> L\\<^sub>i\\<^sub>n M1 V\" \n              \"sequence_to_failure M1 M2 (vs @ xs)\" \n              \"\\<not> (\\<exists> io' . \\<exists> w' \\<in> L\\<^sub>i\\<^sub>n M1 V . sequence_to_failure M1 M2 (w' @ io') \n                                                          \\<and> length io' < length xs)\""], ["proof (prove)\nusing this:\n  minimal_sequence_to_failure_extending V M1 M2 vs xs\n\ngoal (1 subgoal):\n 1. vs \\<in> L\\<^sub>i\\<^sub>n M1 V &&&\n    sequence_to_failure M1 M2 (vs @ xs) &&&\n    \\<nexists>io'.\n       \\<exists>w'\\<in>L\\<^sub>i\\<^sub>n M1 V.\n          sequence_to_failure M1 M2 (w' @ io') \\<and> length io' < length xs", "by auto"], ["proof (state)\nthis:\n  vs \\<in> L\\<^sub>i\\<^sub>n M1 V\n  sequence_to_failure M1 M2 (vs @ xs)\n  \\<nexists>io'.\n     \\<exists>w'\\<in>L\\<^sub>i\\<^sub>n M1 V.\n        sequence_to_failure M1 M2 (w' @ io') \\<and> length io' < length xs\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  vs \\<in> L\\<^sub>i\\<^sub>n M1 V\n  sequence_to_failure M1 M2 (vs @ xs)\n  \\<nexists>io'.\n     \\<exists>w'\\<in>L\\<^sub>i\\<^sub>n M1 V.\n        sequence_to_failure M1 M2 (w' @ io') \\<and> length io' < length xs", "have \"vs@xs \\<in> L M1 - L M2\""], ["proof (prove)\nusing this:\n  vs \\<in> L\\<^sub>i\\<^sub>n M1 V\n  sequence_to_failure M1 M2 (vs @ xs)\n  \\<nexists>io'.\n     \\<exists>w'\\<in>L\\<^sub>i\\<^sub>n M1 V.\n        sequence_to_failure M1 M2 (w' @ io') \\<and> length io' < length xs\n\ngoal (1 subgoal):\n 1. vs @ xs \\<in> L M1 - L M2", "by auto"], ["proof (state)\nthis:\n  vs @ xs \\<in> L M1 - L M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"vs@xs \\<in> L\\<^sub>i\\<^sub>n M1 {map fst (vs@xs)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs \\<in> L\\<^sub>i\\<^sub>n M1 {map fst (vs @ xs)}", "by (metis (full_types) Diff_iff \\<open>vs @ xs \\<in> L M1 - L M2\\<close> insertI1 \n          language_state_for_inputs_map_fst)"], ["proof (state)\nthis:\n  vs @ xs \\<in> L\\<^sub>i\\<^sub>n M1 {map fst (vs @ xs)}\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"vs@xs \\<notin> L\\<^sub>i\\<^sub>n M2 {map fst (vs@xs)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ xs \\<notin> L\\<^sub>i\\<^sub>n M2 {map fst (vs @ xs)}", "by (meson Diff_iff \\<open>vs @ xs \\<in> L M1 - L M2\\<close> language_state_for_inputs_in_language_state \n          subsetCE)"], ["proof (state)\nthis:\n  vs @ xs \\<notin> L\\<^sub>i\\<^sub>n M2 {map fst (vs @ xs)}\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"finite V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V", "using det_state_cover_finite assms(4,2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_det_state_cover ?M ?V; finite (nodes ?M)\\<rbrakk>\n  \\<Longrightarrow> finite ?V\n  test_tools M2 M1 FAIL PM V \\<Omega>\n  OFSM M2\n\ngoal (1 subgoal):\n 1. finite V", "by auto"], ["proof (state)\nthis:\n  finite V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  finite V", "have \"finite (?TS i)\""], ["proof (prove)\nusing this:\n  finite V\n\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m i)", "using TS_finite[of V M2] assms(2)"], ["proof (prove)\nusing this:\n  finite V\n  \\<lbrakk>finite V; finite (inputs M2)\\<rbrakk>\n  \\<Longrightarrow> finite (TS M2 ?M1.0 ?\\<Omega> V ?m ?n)\n  OFSM M2\n\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m i)", "by auto"], ["proof (state)\nthis:\n  finite (TS M2 M1 \\<Omega> V m i)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  finite (TS M2 M1 \\<Omega> V m i)", "have \"io_reduction_on M1 (?TS i) M2\""], ["proof (prove)\nusing this:\n  finite (TS M2 M1 \\<Omega> V m i)\n\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>TS M2 M1 \\<Omega> V m i\\<rbrakk> M2", "using io_reduction_from_atc_io_reduction\n            [OF \\<open>atc_io_reduction_on_sets M1 (TS M2 M1 \\<Omega> V m i) \\<Omega> M2\\<close>]"], ["proof (prove)\nusing this:\n  finite (TS M2 M1 \\<Omega> V m i)\n  finite (TS M2 M1 \\<Omega> V m i) \\<Longrightarrow>\n  M1 \\<preceq>\\<lbrakk>TS M2 M1 \\<Omega> V m i\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>TS M2 M1 \\<Omega> V m i\\<rbrakk> M2", "by auto"], ["proof (state)\nthis:\n  M1 \\<preceq>\\<lbrakk>TS M2 M1 \\<Omega> V m i\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"map fst (vs@xs) \\<notin> ?TS i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i", "have f1: \"\\<forall>ps P Pa. (ps::('a \\<times> 'b) list) \\<notin> P - Pa \\<or> ps \\<in> P \\<and> ps \\<notin> Pa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ps P Pa.\n       ps \\<notin> P - Pa \\<or> ps \\<in> P \\<and> ps \\<notin> Pa", "by blast"], ["proof (state)\nthis:\n  \\<forall>ps P Pa.\n     ps \\<notin> P - Pa \\<or> ps \\<in> P \\<and> ps \\<notin> Pa\n\ngoal (1 subgoal):\n 1. map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i", "have \"\\<forall>P Pa ps. \\<not> P \\<subseteq> Pa \\<or> (ps::('a \\<times> 'b) list) \\<in> Pa \\<or> ps \\<notin> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Pa ps.\n       \\<not> P \\<subseteq> Pa \\<or> ps \\<in> Pa \\<or> ps \\<notin> P", "by blast"], ["proof (state)\nthis:\n  \\<forall>P Pa ps.\n     \\<not> P \\<subseteq> Pa \\<or> ps \\<in> Pa \\<or> ps \\<notin> P\n\ngoal (1 subgoal):\n 1. map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i", "then"], ["proof (chain)\npicking this:\n  \\<forall>P Pa ps.\n     \\<not> P \\<subseteq> Pa \\<or> ps \\<in> Pa \\<or> ps \\<notin> P", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>P Pa ps.\n     \\<not> P \\<subseteq> Pa \\<or> ps \\<in> Pa \\<or> ps \\<notin> P\n\ngoal (1 subgoal):\n 1. map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i", "using f1"], ["proof (prove)\nusing this:\n  \\<forall>P Pa ps.\n     \\<not> P \\<subseteq> Pa \\<or> ps \\<in> Pa \\<or> ps \\<notin> P\n  \\<forall>ps P Pa.\n     ps \\<notin> P - Pa \\<or> ps \\<in> P \\<and> ps \\<notin> Pa\n\ngoal (1 subgoal):\n 1. map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i", "by (metis (no_types) \\<open>vs @ xs \\<in> L M1 - L M2\\<close> \\<open>io_reduction_on M1 (?TS i) M2\\<close> \n                     language_state_for_inputs_in_language_state language_state_for_inputs_map_fst)"], ["proof (state)\nthis:\n  map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"map fst vs \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst vs \\<in> V", "using \\<open>vs \\<in> L\\<^sub>i\\<^sub>n M1 V\\<close>"], ["proof (prove)\nusing this:\n  vs \\<in> L\\<^sub>i\\<^sub>n M1 V\n\ngoal (1 subgoal):\n 1. map fst vs \\<in> V", "by auto"], ["proof (state)\nthis:\n  map fst vs \\<in> V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "let ?stf = \"map fst (vs@xs)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "let ?stfV = \"map fst vs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "let ?stfX = \"map fst xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"?stf = ?stfV @ ?stfX\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst (vs @ xs) = map fst vs @ map fst xs", "by simp"], ["proof (state)\nthis:\n  map fst (vs @ xs) = map fst vs @ map fst xs\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  map fst (vs @ xs) = map fst vs @ map fst xs", "have \"?stfV @ ?stfX \\<notin> ?TS i\""], ["proof (prove)\nusing this:\n  map fst (vs @ xs) = map fst vs @ map fst xs\n\ngoal (1 subgoal):\n 1. map fst vs @ map fst xs \\<notin> TS M2 M1 \\<Omega> V m i", "using \\<open>?stf \\<notin> ?TS i\\<close>"], ["proof (prove)\nusing this:\n  map fst (vs @ xs) = map fst vs @ map fst xs\n  map fst (vs @ xs) \\<notin> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. map fst vs @ map fst xs \\<notin> TS M2 M1 \\<Omega> V m i", "by auto"], ["proof (state)\nthis:\n  map fst vs @ map fst xs \\<notin> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"mcp (?stfV @ ?stfX) V ?stfV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcp (map fst vs @ map fst xs) V (map fst vs)", "by (metis \\<open>map fst (vs @ xs) = map fst vs @ map fst xs\\<close> \n          \\<open>minimal_sequence_to_failure_extending V M1 M2 vs xs\\<close> assms(1) assms(2) assms(4) \n          minimal_sequence_to_failure_extending_mcp)"], ["proof (state)\nthis:\n  mcp (map fst vs @ map fst xs) V (map fst vs)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"set ?stf \\<subseteq> inputs M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map fst (vs @ xs)) \\<subseteq> inputs M1", "by (meson DiffD1 \\<open>vs @ xs \\<in> L M1 - L M2\\<close> assms(1) language_state_inputs)"], ["proof (state)\nthis:\n  set (map fst (vs @ xs)) \\<subseteq> inputs M1\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  set (map fst (vs @ xs)) \\<subseteq> inputs M1", "have \"set ?stf \\<subseteq> inputs M2\""], ["proof (prove)\nusing this:\n  set (map fst (vs @ xs)) \\<subseteq> inputs M1\n\ngoal (1 subgoal):\n 1. set (map fst (vs @ xs)) \\<subseteq> inputs M2", "using assms(3)"], ["proof (prove)\nusing this:\n  set (map fst (vs @ xs)) \\<subseteq> inputs M1\n  asc_fault_domain M2 M1 m\n\ngoal (1 subgoal):\n 1. set (map fst (vs @ xs)) \\<subseteq> inputs M2", "by blast"], ["proof (state)\nthis:\n  set (map fst (vs @ xs)) \\<subseteq> inputs M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  set (map fst (vs @ xs)) \\<subseteq> inputs M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"set ?stf = set ?stfV \\<union> set ?stfX\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map fst (vs @ xs)) = set (map fst vs) \\<union> set (map fst xs)", "by simp"], ["proof (state)\nthis:\n  set (map fst (vs @ xs)) = set (map fst vs) \\<union> set (map fst xs)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  set (map fst (vs @ xs)) \\<subseteq> inputs M2\n  set (map fst (vs @ xs)) = set (map fst vs) \\<union> set (map fst xs)", "have \"set ?stfX \\<subseteq> inputs M2\""], ["proof (prove)\nusing this:\n  set (map fst (vs @ xs)) \\<subseteq> inputs M2\n  set (map fst (vs @ xs)) = set (map fst vs) \\<union> set (map fst xs)\n\ngoal (1 subgoal):\n 1. set (map fst xs) \\<subseteq> inputs M2", "by blast"], ["proof (state)\nthis:\n  set (map fst xs) \\<subseteq> inputs M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "obtain xr j where \"xr \\<noteq> ?stfX\" \n                      \"prefix xr ?stfX\" \n                      \"Suc j \\<le> i\" \n                      \"?stfV@xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xr j.\n        \\<lbrakk>xr \\<noteq> map fst xs; prefix xr (map fst xs);\n         Suc j \\<le> i;\n         map fst vs @ xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using TS_non_containment_causes_final_suc[OF \\<open>?stfV @ ?stfX \\<notin> ?TS i\\<close> \n            \\<open>mcp (?stfV @ ?stfX) V ?stfV\\<close> \\<open>set ?stfX \\<subseteq> inputs M2\\<close> assms(5,2)]"], ["proof (prove)\nusing this:\n  (\\<And>xr j.\n      \\<lbrakk>xr \\<noteq> map fst xs; prefix xr (map fst xs);\n       Suc j \\<le> i;\n       map fst vs @ xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>xr j.\n        \\<lbrakk>xr \\<noteq> map fst xs; prefix xr (map fst xs);\n         Suc j \\<le> i;\n         map fst vs @ xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xr \\<noteq> map fst xs\n  prefix xr (map fst xs)\n  Suc j \\<le> i\n  map fst vs @ xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "let ?yr = \"take (length xr) (map snd xs)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"length ?yr = length xr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (take (length xr) (map snd xs)) = length xr", "using \\<open>prefix xr (map fst xs)\\<close> prefix_length_le"], ["proof (prove)\nusing this:\n  prefix xr (map fst xs)\n  prefix ?xs ?ys \\<Longrightarrow> length ?xs \\<le> length ?ys\n\ngoal (1 subgoal):\n 1. length (take (length xr) (map snd xs)) = length xr", "by fastforce"], ["proof (state)\nthis:\n  length (take (length xr) (map snd xs)) = length xr\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"(xr || ?yr) = take (length xr) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xr || take (length xr) (map snd xs) = take (length xr) xs", "by (metis (no_types, hide_lams) \\<open>prefix xr (map fst xs)\\<close> append_eq_conv_conj prefixE take_zip\n          zip_map_fst_snd)"], ["proof (state)\nthis:\n  xr || take (length xr) (map snd xs) = take (length xr) xs\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"prefix (vs@(xr || ?yr)) (vs@xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (vs @ (xr || take (length xr) (map snd xs))) (vs @ xs)", "by (simp add: \\<open>xr || take (length xr) (map snd xs) = take (length xr) xs\\<close> take_is_prefix)"], ["proof (state)\nthis:\n  prefix (vs @ (xr || take (length xr) (map snd xs))) (vs @ xs)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"xr = take (length xr) (map fst xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xr = take (length xr) (map fst xs)", "by (metis \\<open>length (take (length xr) (map snd xs)) = length xr\\<close> \n          \\<open>xr || take (length xr) (map snd xs) = take (length xr) xs\\<close> map_fst_zip take_map)"], ["proof (state)\nthis:\n  xr = take (length xr) (map fst xs)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"vs@(xr || ?yr) \\<in> L M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs @ (xr || take (length xr) (map snd xs)) \\<in> L M1", "by (metis DiffD1 \\<open>prefix (vs @ (xr || take (length xr) (map snd xs))) (vs @ xs)\\<close> \n          \\<open>vs @ xs \\<in> L M1 - L M2\\<close> language_state_prefix prefixE)"], ["proof (state)\nthis:\n  vs @ (xr || take (length xr) (map snd xs)) \\<in> L M1\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  vs @ (xr || take (length xr) (map snd xs)) \\<in> L M1", "have \"vs@(xr || ?yr) \\<in> L\\<^sub>i\\<^sub>n M1 {?stfV @ xr}\""], ["proof (prove)\nusing this:\n  vs @ (xr || take (length xr) (map snd xs)) \\<in> L M1\n\ngoal (1 subgoal):\n 1. vs @ (xr || take (length xr) (map snd xs))\n    \\<in> L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}", "by (metis \\<open>length (take (length xr) (map snd xs)) = length xr\\<close> insertI1 \n          language_state_for_inputs_map_fst map_append map_fst_zip)"], ["proof (state)\nthis:\n  vs @ (xr || take (length xr) (map snd xs))\n  \\<in> L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"length xr < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length xr < length xs", "by (metis \\<open>xr = take (length xr) (map fst xs)\\<close> \\<open>xr \\<noteq> map fst xs\\<close> not_le_imp_less take_all \n          take_map)"], ["proof (state)\nthis:\n  length xr < length xs\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "from \\<open>?stfV@xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\\<close>"], ["proof (chain)\npicking this:\n  map fst vs @ xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)", "have \"?stfV@xr \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j) .\n        (\\<not> (L\\<^sub>i\\<^sub>n M1 {xs'} \\<subseteq> L\\<^sub>i\\<^sub>n M2 {xs'}))\n        \\<or> (\\<forall> io \\<in> L\\<^sub>i\\<^sub>n M1 {xs'} .\n            (\\<exists> V'' \\<in> N io M1 V .  \n              (\\<exists> S1 . \n                (\\<exists> vs xs .\n                  io = (vs@xs)\n                  \\<and> mcp (vs@xs) V'' vs\n                  \\<and> S1 \\<subseteq> nodes M2\n                  \\<and> (\\<forall> s1 \\<in> S1 . \\<forall> s2 \\<in> S1 .\n                    s1 \\<noteq> s2 \\<longrightarrow> \n                      (\\<forall> io1 \\<in> RP M2 s1 vs xs V'' .\n                         \\<forall> io2 \\<in> RP M2 s2 vs xs V'' .\n                           B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega> ))\n                  \\<and> m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V'' ))))}\""], ["proof (prove)\nusing this:\n  map fst vs @ xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. map fst vs @ xr\n    \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j).\n           \\<not> M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2 \\<or>\n           (\\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {xs'}.\n               \\<exists>V''\\<in>N io M1 V.\n                  \\<exists>S1 vs xs.\n                     io = vs @ xs \\<and>\n                     mcp (vs @ xs) V'' vs \\<and>\n                     S1 \\<subseteq> nodes M2 \\<and>\n                     (\\<forall>s1\\<in>S1.\n                         \\<forall>s2\\<in>S1.\n                            s1 \\<noteq> s2 \\<longrightarrow>\n                            (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                                \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                                   B M1 io1 \\<Omega> \\<noteq>\n                                   B M1 io2 \\<Omega>)) \\<and>\n                     m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V)\n                          S1 \\<Omega> V'')}", "unfolding RM.simps"], ["proof (prove)\nusing this:\n  map fst vs @ xr\n  \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j).\n         \\<not> M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2 \\<or>\n         (\\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {xs'}.\n             \\<exists>V''\\<in>N io M1 V.\n                \\<exists>S1 vs xs.\n                   io = vs @ xs \\<and>\n                   mcp (vs @ xs) V'' vs \\<and>\n                   S1 \\<subseteq> nodes M2 \\<and>\n                   (\\<forall>s1\\<in>S1.\n                       \\<forall>s2\\<in>S1.\n                          s1 \\<noteq> s2 \\<longrightarrow>\n                          (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                              \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                                 B M1 io1 \\<Omega> \\<noteq>\n                                 B M1 io2 \\<Omega>)) \\<and>\n                   m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V)\n                        S1 \\<Omega> V'')}\n\ngoal (1 subgoal):\n 1. map fst vs @ xr\n    \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j).\n           \\<not> M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2 \\<or>\n           (\\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {xs'}.\n               \\<exists>V''\\<in>N io M1 V.\n                  \\<exists>S1 vs xs.\n                     io = vs @ xs \\<and>\n                     mcp (vs @ xs) V'' vs \\<and>\n                     S1 \\<subseteq> nodes M2 \\<and>\n                     (\\<forall>s1\\<in>S1.\n                         \\<forall>s2\\<in>S1.\n                            s1 \\<noteq> s2 \\<longrightarrow>\n                            (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                                \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                                   B M1 io1 \\<Omega> \\<noteq>\n                                   B M1 io2 \\<Omega>)) \\<and>\n                     m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V)\n                          S1 \\<Omega> V'')}", "by blast"], ["proof (state)\nthis:\n  map fst vs @ xr\n  \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j).\n         \\<not> M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2 \\<or>\n         (\\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {xs'}.\n             \\<exists>V''\\<in>N io M1 V.\n                \\<exists>S1 vs xs.\n                   io = vs @ xs \\<and>\n                   mcp (vs @ xs) V'' vs \\<and>\n                   S1 \\<subseteq> nodes M2 \\<and>\n                   (\\<forall>s1\\<in>S1.\n                       \\<forall>s2\\<in>S1.\n                          s1 \\<noteq> s2 \\<longrightarrow>\n                          (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                              \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                                 B M1 io1 \\<Omega> \\<noteq>\n                                 B M1 io2 \\<Omega>)) \\<and>\n                   m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V)\n                        S1 \\<Omega> V'')}\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  map fst vs @ xr\n  \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j).\n         \\<not> M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2 \\<or>\n         (\\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {xs'}.\n             \\<exists>V''\\<in>N io M1 V.\n                \\<exists>S1 vs xs.\n                   io = vs @ xs \\<and>\n                   mcp (vs @ xs) V'' vs \\<and>\n                   S1 \\<subseteq> nodes M2 \\<and>\n                   (\\<forall>s1\\<in>S1.\n                       \\<forall>s2\\<in>S1.\n                          s1 \\<noteq> s2 \\<longrightarrow>\n                          (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                              \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                                 B M1 io1 \\<Omega> \\<noteq>\n                                 B M1 io2 \\<Omega>)) \\<and>\n                   m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V)\n                        S1 \\<Omega> V'')}\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"\\<forall> xs' \\<in> ?C (Suc j) . L\\<^sub>i\\<^sub>n M1 {xs'} \\<subseteq> L\\<^sub>i\\<^sub>n M2 {xs'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs'\\<in>C M2 M1 \\<Omega> V m (Suc j).\n       M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs'.\n       xs' \\<in> C M2 M1 \\<Omega> V m (Suc j) \\<Longrightarrow>\n       M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "fix xs'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs'.\n       xs' \\<in> C M2 M1 \\<Omega> V m (Suc j) \\<Longrightarrow>\n       M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "assume \"xs' \\<in> ?C (Suc j)\""], ["proof (state)\nthis:\n  xs' \\<in> C M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>xs'.\n       xs' \\<in> C M2 M1 \\<Omega> V m (Suc j) \\<Longrightarrow>\n       M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "from \\<open>Suc j \\<le> i\\<close>"], ["proof (chain)\npicking this:\n  Suc j \\<le> i", "have \"?C (Suc j) \\<subseteq> ?TS i\""], ["proof (prove)\nusing this:\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. C M2 M1 \\<Omega> V m (Suc j) \\<subseteq> TS M2 M1 \\<Omega> V m i", "using C_subset TS_subset"], ["proof (prove)\nusing this:\n  Suc j \\<le> i\n  C ?M2.0 ?M1.0 ?\\<Omega> ?V ?m ?i\n  \\<subseteq> TS ?M2.0 ?M1.0 ?\\<Omega> ?V ?m ?i\n  ?i \\<le> ?j \\<Longrightarrow>\n  TS ?M2.0 ?M1.0 ?\\<Omega> ?V ?m ?i\n  \\<subseteq> TS ?M2.0 ?M1.0 ?\\<Omega> ?V ?m ?j\n\ngoal (1 subgoal):\n 1. C M2 M1 \\<Omega> V m (Suc j) \\<subseteq> TS M2 M1 \\<Omega> V m i", "by blast"], ["proof (state)\nthis:\n  C M2 M1 \\<Omega> V m (Suc j) \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. \\<And>xs'.\n       xs' \\<in> C M2 M1 \\<Omega> V m (Suc j) \\<Longrightarrow>\n       M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "then"], ["proof (chain)\npicking this:\n  C M2 M1 \\<Omega> V m (Suc j) \\<subseteq> TS M2 M1 \\<Omega> V m i", "have \"{xs'} \\<subseteq> ?TS i\""], ["proof (prove)\nusing this:\n  C M2 M1 \\<Omega> V m (Suc j) \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. {xs'} \\<subseteq> TS M2 M1 \\<Omega> V m i", "using \\<open>xs' \\<in> ?C (Suc j)\\<close>"], ["proof (prove)\nusing this:\n  C M2 M1 \\<Omega> V m (Suc j) \\<subseteq> TS M2 M1 \\<Omega> V m i\n  xs' \\<in> C M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. {xs'} \\<subseteq> TS M2 M1 \\<Omega> V m i", "by blast"], ["proof (state)\nthis:\n  {xs'} \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. \\<And>xs'.\n       xs' \\<in> C M2 M1 \\<Omega> V m (Suc j) \\<Longrightarrow>\n       M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "show \"L\\<^sub>i\\<^sub>n M1 {xs'} \\<subseteq> L\\<^sub>i\\<^sub>n M2 {xs'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "using io_reduction_on_subset[OF \\<open>io_reduction_on M1 (?TS i) M2\\<close> \\<open>{xs'} \\<subseteq> ?TS i\\<close>]"], ["proof (prove)\nusing this:\n  M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "by assumption"], ["proof (state)\nthis:\n  M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>xs'\\<in>C M2 M1 \\<Omega> V m (Suc j).\n     M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  map fst vs @ xr\n  \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j).\n         \\<not> M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2 \\<or>\n         (\\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {xs'}.\n             \\<exists>V''\\<in>N io M1 V.\n                \\<exists>S1 vs xs.\n                   io = vs @ xs \\<and>\n                   mcp (vs @ xs) V'' vs \\<and>\n                   S1 \\<subseteq> nodes M2 \\<and>\n                   (\\<forall>s1\\<in>S1.\n                       \\<forall>s2\\<in>S1.\n                          s1 \\<noteq> s2 \\<longrightarrow>\n                          (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                              \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                                 B M1 io1 \\<Omega> \\<noteq>\n                                 B M1 io2 \\<Omega>)) \\<and>\n                   m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V)\n                        S1 \\<Omega> V'')}\n  \\<forall>xs'\\<in>C M2 M1 \\<Omega> V m (Suc j).\n     M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2", "have \"(\\<forall> io \\<in> L\\<^sub>i\\<^sub>n M1 {?stfV@xr} .\n            (\\<exists> V'' \\<in> N io M1 V .  \n              (\\<exists> S1 . \n                (\\<exists> vs xs .\n                  io = (vs@xs)\n                  \\<and> mcp (vs@xs) V'' vs\n                  \\<and> S1 \\<subseteq> nodes M2\n                  \\<and> (\\<forall> s1 \\<in> S1 . \\<forall> s2 \\<in> S1 .\n                    s1 \\<noteq> s2 \\<longrightarrow> \n                      (\\<forall> io1 \\<in> RP M2 s1 vs xs V'' .\n                         \\<forall> io2 \\<in> RP M2 s2 vs xs V'' .\n                           B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega> ))\n                  \\<and> m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V'' ))))\""], ["proof (prove)\nusing this:\n  map fst vs @ xr\n  \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j).\n         \\<not> M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2 \\<or>\n         (\\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {xs'}.\n             \\<exists>V''\\<in>N io M1 V.\n                \\<exists>S1 vs xs.\n                   io = vs @ xs \\<and>\n                   mcp (vs @ xs) V'' vs \\<and>\n                   S1 \\<subseteq> nodes M2 \\<and>\n                   (\\<forall>s1\\<in>S1.\n                       \\<forall>s2\\<in>S1.\n                          s1 \\<noteq> s2 \\<longrightarrow>\n                          (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                              \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                                 B M1 io1 \\<Omega> \\<noteq>\n                                 B M1 io2 \\<Omega>)) \\<and>\n                   m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V)\n                        S1 \\<Omega> V'')}\n  \\<forall>xs'\\<in>C M2 M1 \\<Omega> V m (Suc j).\n     M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. \\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}.\n       \\<exists>V''\\<in>N io M1 V.\n          \\<exists>S1 vs xs.\n             io = vs @ xs \\<and>\n             mcp (vs @ xs) V'' vs \\<and>\n             S1 \\<subseteq> nodes M2 \\<and>\n             (\\<forall>s1\\<in>S1.\n                 \\<forall>s2\\<in>S1.\n                    s1 \\<noteq> s2 \\<longrightarrow>\n                    (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                        \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                           B M1 io1 \\<Omega> \\<noteq>\n                           B M1 io2 \\<Omega>)) \\<and>\n             m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n                  \\<Omega> V''", "by blast"], ["proof (state)\nthis:\n  \\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}.\n     \\<exists>V''\\<in>N io M1 V.\n        \\<exists>S1 vs xs.\n           io = vs @ xs \\<and>\n           mcp (vs @ xs) V'' vs \\<and>\n           S1 \\<subseteq> nodes M2 \\<and>\n           (\\<forall>s1\\<in>S1.\n               \\<forall>s2\\<in>S1.\n                  s1 \\<noteq> s2 \\<longrightarrow>\n                  (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                      \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                         B M1 io1 \\<Omega> \\<noteq>\n                         B M1 io2 \\<Omega>)) \\<and>\n           m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n                \\<Omega> V''\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}.\n     \\<exists>V''\\<in>N io M1 V.\n        \\<exists>S1 vs xs.\n           io = vs @ xs \\<and>\n           mcp (vs @ xs) V'' vs \\<and>\n           S1 \\<subseteq> nodes M2 \\<and>\n           (\\<forall>s1\\<in>S1.\n               \\<forall>s2\\<in>S1.\n                  s1 \\<noteq> s2 \\<longrightarrow>\n                  (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                      \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                         B M1 io1 \\<Omega> \\<noteq>\n                         B M1 io2 \\<Omega>)) \\<and>\n           m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n                \\<Omega> V''", "have \"\n            (\\<exists> V'' \\<in> N (vs@(xr || ?yr)) M1 V .  \n              (\\<exists> S1 . \n                (\\<exists> vs' xs' .\n                  vs@(xr || ?yr) = (vs'@xs')\n                  \\<and> mcp (vs'@xs') V'' vs'\n                  \\<and> S1 \\<subseteq> nodes M2\n                  \\<and> (\\<forall> s1 \\<in> S1 . \\<forall> s2 \\<in> S1 .\n                    s1 \\<noteq> s2 \\<longrightarrow> \n                      (\\<forall> io1 \\<in> RP M2 s1 vs' xs' V'' .\n                         \\<forall> io2 \\<in> RP M2 s2 vs' xs' V'' .\n                           B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega> ))\n                  \\<and> m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V'' )))\""], ["proof (prove)\nusing this:\n  \\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}.\n     \\<exists>V''\\<in>N io M1 V.\n        \\<exists>S1 vs xs.\n           io = vs @ xs \\<and>\n           mcp (vs @ xs) V'' vs \\<and>\n           S1 \\<subseteq> nodes M2 \\<and>\n           (\\<forall>s1\\<in>S1.\n               \\<forall>s2\\<in>S1.\n                  s1 \\<noteq> s2 \\<longrightarrow>\n                  (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                      \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                         B M1 io1 \\<Omega> \\<noteq>\n                         B M1 io2 \\<Omega>)) \\<and>\n           m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n                \\<Omega> V''\n\ngoal (1 subgoal):\n 1. \\<exists>V''\\<in>N (vs @ (xr || take (length xr) (map snd xs))) M1 V.\n       \\<exists>S1 vs' xs'.\n          vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs' \\<and>\n          mcp (vs' @ xs') V'' vs' \\<and>\n          S1 \\<subseteq> nodes M2 \\<and>\n          (\\<forall>s1\\<in>S1.\n              \\<forall>s2\\<in>S1.\n                 s1 \\<noteq> s2 \\<longrightarrow>\n                 (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n                     \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n                        B M1 io1 \\<Omega> \\<noteq>\n                        B M1 io2 \\<Omega>)) \\<and>\n          m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n               \\<Omega> V''", "using \\<open>vs@(xr || ?yr) \\<in> L\\<^sub>i\\<^sub>n M1 {?stfV @ xr}\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}.\n     \\<exists>V''\\<in>N io M1 V.\n        \\<exists>S1 vs xs.\n           io = vs @ xs \\<and>\n           mcp (vs @ xs) V'' vs \\<and>\n           S1 \\<subseteq> nodes M2 \\<and>\n           (\\<forall>s1\\<in>S1.\n               \\<forall>s2\\<in>S1.\n                  s1 \\<noteq> s2 \\<longrightarrow>\n                  (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                      \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                         B M1 io1 \\<Omega> \\<noteq>\n                         B M1 io2 \\<Omega>)) \\<and>\n           m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n                \\<Omega> V''\n  vs @ (xr || take (length xr) (map snd xs))\n  \\<in> L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}\n\ngoal (1 subgoal):\n 1. \\<exists>V''\\<in>N (vs @ (xr || take (length xr) (map snd xs))) M1 V.\n       \\<exists>S1 vs' xs'.\n          vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs' \\<and>\n          mcp (vs' @ xs') V'' vs' \\<and>\n          S1 \\<subseteq> nodes M2 \\<and>\n          (\\<forall>s1\\<in>S1.\n              \\<forall>s2\\<in>S1.\n                 s1 \\<noteq> s2 \\<longrightarrow>\n                 (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n                     \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n                        B M1 io1 \\<Omega> \\<noteq>\n                        B M1 io2 \\<Omega>)) \\<and>\n          m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n               \\<Omega> V''", "by blast"], ["proof (state)\nthis:\n  \\<exists>V''\\<in>N (vs @ (xr || take (length xr) (map snd xs))) M1 V.\n     \\<exists>S1 vs' xs'.\n        vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs' \\<and>\n        mcp (vs' @ xs') V'' vs' \\<and>\n        S1 \\<subseteq> nodes M2 \\<and>\n        (\\<forall>s1\\<in>S1.\n            \\<forall>s2\\<in>S1.\n               s1 \\<noteq> s2 \\<longrightarrow>\n               (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n                   \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n                      B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega>)) \\<and>\n        m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n             \\<Omega> V''\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>V''\\<in>N (vs @ (xr || take (length xr) (map snd xs))) M1 V.\n     \\<exists>S1 vs' xs'.\n        vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs' \\<and>\n        mcp (vs' @ xs') V'' vs' \\<and>\n        S1 \\<subseteq> nodes M2 \\<and>\n        (\\<forall>s1\\<in>S1.\n            \\<forall>s2\\<in>S1.\n               s1 \\<noteq> s2 \\<longrightarrow>\n               (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n                   \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n                      B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega>)) \\<and>\n        m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n             \\<Omega> V''", "obtain V'' S1 vs' xs' where RM_impl :  \n                                     \"V'' \\<in> N (vs@(xr || ?yr)) M1 V\"\n                                     \"vs@(xr || ?yr) = (vs'@xs')\"\n                                     \"mcp (vs'@xs') V'' vs'\"\n                                     \"S1 \\<subseteq> nodes M2\"\n                                     \"(\\<forall> s1 \\<in> S1 . \\<forall> s2 \\<in> S1 .\n                                       s1 \\<noteq> s2 \\<longrightarrow> \n                                          (\\<forall> io1 \\<in> RP M2 s1 vs' xs' V'' .\n                                             \\<forall> io2 \\<in> RP M2 s2 vs' xs' V'' .\n                                               B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega> ))\"\n                                     \" m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\""], ["proof (prove)\nusing this:\n  \\<exists>V''\\<in>N (vs @ (xr || take (length xr) (map snd xs))) M1 V.\n     \\<exists>S1 vs' xs'.\n        vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs' \\<and>\n        mcp (vs' @ xs') V'' vs' \\<and>\n        S1 \\<subseteq> nodes M2 \\<and>\n        (\\<forall>s1\\<in>S1.\n            \\<forall>s2\\<in>S1.\n               s1 \\<noteq> s2 \\<longrightarrow>\n               (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n                   \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n                      B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega>)) \\<and>\n        m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n             \\<Omega> V''\n\ngoal (1 subgoal):\n 1. (\\<And>V'' vs' xs' S1.\n        \\<lbrakk>V''\n                 \\<in> N (vs @ (xr || take (length xr) (map snd xs))) M1 V;\n         vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs';\n         mcp (vs' @ xs') V'' vs'; S1 \\<subseteq> nodes M2;\n         \\<forall>s1\\<in>S1.\n            \\<forall>s2\\<in>S1.\n               s1 \\<noteq> s2 \\<longrightarrow>\n               (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n                   \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n                      B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega>);\n         m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1\n              \\<Omega> V''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  V'' \\<in> N (vs @ (xr || take (length xr) (map snd xs))) M1 V\n  vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs'\n  mcp (vs' @ xs') V'' vs'\n  S1 \\<subseteq> nodes M2\n  \\<forall>s1\\<in>S1.\n     \\<forall>s2\\<in>S1.\n        s1 \\<noteq> s2 \\<longrightarrow>\n        (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n            \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n               B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega>)\n  m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"?stfV = mcp' (map fst (vs @ (xr || take (length xr) (map snd xs)))) V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst vs =\n    mcp' (map fst (vs @ (xr || take (length xr) (map snd xs)))) V", "by (metis (full_types) \\<open>length (take (length xr) (map snd xs)) = length xr\\<close> \n          \\<open>mcp (map fst vs @ map fst xs) V (map fst vs)\\<close> \\<open>prefix xr (map fst xs)\\<close> map_append \n          map_fst_zip mcp'_intro mcp_prefix_of_suffix)"], ["proof (state)\nthis:\n  map fst vs = mcp' (map fst (vs @ (xr || take (length xr) (map snd xs)))) V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"is_det_state_cover M2 V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_det_state_cover M2 V", "using assms(4)"], ["proof (prove)\nusing this:\n  test_tools M2 M1 FAIL PM V \\<Omega>\n\ngoal (1 subgoal):\n 1. is_det_state_cover M2 V", "by blast"], ["proof (state)\nthis:\n  is_det_state_cover M2 V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  is_det_state_cover M2 V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"well_formed M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_formed M2", "using assms(2)"], ["proof (prove)\nusing this:\n  OFSM M2\n\ngoal (1 subgoal):\n 1. well_formed M2", "by auto"], ["proof (state)\nthis:\n  well_formed M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  well_formed M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"finite V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V", "using det_state_cover_finite assms(4,2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_det_state_cover ?M ?V; finite (nodes ?M)\\<rbrakk>\n  \\<Longrightarrow> finite ?V\n  test_tools M2 M1 FAIL PM V \\<Omega>\n  OFSM M2\n\ngoal (1 subgoal):\n 1. finite V", "by auto"], ["proof (state)\nthis:\n  finite V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  is_det_state_cover M2 V\n  well_formed M2\n  finite V", "have \"vs \\<in> V''\"  \n                    \"vs = mcp' (vs @ (xr || take (length xr) (map snd xs))) V''\""], ["proof (prove)\nusing this:\n  is_det_state_cover M2 V\n  well_formed M2\n  finite V\n\ngoal (1 subgoal):\n 1. vs \\<in> V'' &&&\n    vs = mcp' (vs @ (xr || take (length xr) (map snd xs))) V''", "using N_mcp_prefix[OF \\<open>?stfV = mcp' (map fst (vs @ (xr || take (length xr) (map snd xs)))) V\\<close> \n            \\<open>V'' \\<in> N (vs@(xr || ?yr)) M1 V\\<close>, of M2]"], ["proof (prove)\nusing this:\n  is_det_state_cover M2 V\n  well_formed M2\n  finite V\n  \\<lbrakk>is_det_state_cover M2 V; well_formed M2; finite V\\<rbrakk>\n  \\<Longrightarrow> vs \\<in> V''\n  \\<lbrakk>is_det_state_cover M2 V; well_formed M2; finite V\\<rbrakk>\n  \\<Longrightarrow> vs =\n                    mcp' (vs @ (xr || take (length xr) (map snd xs))) V''\n\ngoal (1 subgoal):\n 1. vs \\<in> V'' &&&\n    vs = mcp' (vs @ (xr || take (length xr) (map snd xs))) V''", "by simp+"], ["proof (state)\nthis:\n  vs \\<in> V''\n  vs = mcp' (vs @ (xr || take (length xr) (map snd xs))) V''\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"vs' = vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs' = vs", "by (metis (no_types) \\<open>mcp (vs' @ xs') V'' vs'\\<close> \n          \\<open>vs = mcp' (vs @ (xr || take (length xr) (map snd xs))) V''\\<close> \n          \\<open>vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs'\\<close> mcp'_intro)"], ["proof (state)\nthis:\n  vs' = vs\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  vs' = vs", "have \"xs' = (xr || ?yr)\""], ["proof (prove)\nusing this:\n  vs' = vs\n\ngoal (1 subgoal):\n 1. xs' = xr || take (length xr) (map snd xs)", "using \\<open>vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs'\\<close>"], ["proof (prove)\nusing this:\n  vs' = vs\n  vs @ (xr || take (length xr) (map snd xs)) = vs' @ xs'\n\ngoal (1 subgoal):\n 1. xs' = xr || take (length xr) (map snd xs)", "by blast"], ["proof (state)\nthis:\n  xs' = xr || take (length xr) (map snd xs)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"V \\<subseteq> ?TS i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<subseteq> TS M2 M1 \\<Omega> V m i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V \\<subseteq> TS M2 M1 \\<Omega> V m i", "have \"1 \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> i", "using \\<open>Suc j \\<le> i\\<close>"], ["proof (prove)\nusing this:\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. 1 \\<le> i", "by linarith"], ["proof (state)\nthis:\n  1 \\<le> i\n\ngoal (1 subgoal):\n 1. V \\<subseteq> TS M2 M1 \\<Omega> V m i", "then"], ["proof (chain)\npicking this:\n  1 \\<le> i", "have \"?TS 1 \\<subseteq> ?TS i\""], ["proof (prove)\nusing this:\n  1 \\<le> i\n\ngoal (1 subgoal):\n 1. TS M2 M1 \\<Omega> V m 1 \\<subseteq> TS M2 M1 \\<Omega> V m i", "using TS_subset"], ["proof (prove)\nusing this:\n  1 \\<le> i\n  ?i \\<le> ?j \\<Longrightarrow>\n  TS ?M2.0 ?M1.0 ?\\<Omega> ?V ?m ?i\n  \\<subseteq> TS ?M2.0 ?M1.0 ?\\<Omega> ?V ?m ?j\n\ngoal (1 subgoal):\n 1. TS M2 M1 \\<Omega> V m 1 \\<subseteq> TS M2 M1 \\<Omega> V m i", "by blast"], ["proof (state)\nthis:\n  TS M2 M1 \\<Omega> V m 1 \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. V \\<subseteq> TS M2 M1 \\<Omega> V m i", "then"], ["proof (chain)\npicking this:\n  TS M2 M1 \\<Omega> V m 1 \\<subseteq> TS M2 M1 \\<Omega> V m i", "show ?thesis"], ["proof (prove)\nusing this:\n  TS M2 M1 \\<Omega> V m 1 \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. V \\<subseteq> TS M2 M1 \\<Omega> V m i", "by auto"], ["proof (state)\nthis:\n  V \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"?stfV@xr \\<in> ?C (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)", "using \\<open>?stfV@xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\\<close>"], ["proof (prove)\nusing this:\n  map fst vs @ xr \\<in> RM M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)", "unfolding RM.simps"], ["proof (prove)\nusing this:\n  map fst vs @ xr\n  \\<in> {xs' \\<in> C M2 M1 \\<Omega> V m (Suc j).\n         \\<not> M1 \\<preceq>\\<lbrakk>{xs'}\\<rbrakk> M2 \\<or>\n         (\\<forall>io\\<in>L\\<^sub>i\\<^sub>n M1 {xs'}.\n             \\<exists>V''\\<in>N io M1 V.\n                \\<exists>S1 vs xs.\n                   io = vs @ xs \\<and>\n                   mcp (vs @ xs) V'' vs \\<and>\n                   S1 \\<subseteq> nodes M2 \\<and>\n                   (\\<forall>s1\\<in>S1.\n                       \\<forall>s2\\<in>S1.\n                          s1 \\<noteq> s2 \\<longrightarrow>\n                          (\\<forall>io1\\<in>RP M2 s1 vs xs V''.\n                              \\<forall>io2\\<in>RP M2 s2 vs xs V''.\n                                 B M1 io1 \\<Omega> \\<noteq>\n                                 B M1 io2 \\<Omega>)) \\<and>\n                   m < LB M2 M1 vs xs (TS M2 M1 \\<Omega> V m j \\<union> V)\n                        S1 \\<Omega> V'')}\n\ngoal (1 subgoal):\n 1. map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)", "by blast\n  \n  \n  \n    \\<comment> \\<open>show that the prerequisites (@{verbatim Prereq}) for @{verbatim LB} are met by construction\\<close>"], ["proof (state)\nthis:\n  map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"(\\<forall>vs'a\\<in>V''. prefix vs'a (vs' @ xs') \\<longrightarrow> length vs'a \\<le> length vs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>vs'a\\<in>V''.\n       prefix vs'a (vs' @ xs') \\<longrightarrow>\n       length vs'a \\<le> length vs'", "using \\<open>mcp (vs' @ xs') V'' vs'\\<close>"], ["proof (prove)\nusing this:\n  mcp (vs' @ xs') V'' vs'\n\ngoal (1 subgoal):\n 1. \\<forall>vs'a\\<in>V''.\n       prefix vs'a (vs' @ xs') \\<longrightarrow>\n       length vs'a \\<le> length vs'", "by auto"], ["proof (state)\nthis:\n  \\<forall>vs'a\\<in>V''.\n     prefix vs'a (vs' @ xs') \\<longrightarrow> length vs'a \\<le> length vs'\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>vs'a\\<in>V''.\n     prefix vs'a (vs' @ xs') \\<longrightarrow> length vs'a \\<le> length vs'\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"atc_io_reduction_on_sets M1 (?TS j \\<union> V) \\<Omega> M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                          V).\\<Omega>\\<rbrakk> M2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                          V).\\<Omega>\\<rbrakk> M2", "have \"j < i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < i", "using \\<open>Suc j \\<le> i\\<close>"], ["proof (prove)\nusing this:\n  Suc j \\<le> i\n\ngoal (1 subgoal):\n 1. j < i", "by auto"], ["proof (state)\nthis:\n  j < i\n\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                          V).\\<Omega>\\<rbrakk> M2", "then"], ["proof (chain)\npicking this:\n  j < i", "have \"?TS j \\<subseteq> ?TS i\""], ["proof (prove)\nusing this:\n  j < i\n\ngoal (1 subgoal):\n 1. TS M2 M1 \\<Omega> V m j \\<subseteq> TS M2 M1 \\<Omega> V m i", "by (simp add: TS_subset)"], ["proof (state)\nthis:\n  TS M2 M1 \\<Omega> V m j \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                          V).\\<Omega>\\<rbrakk> M2", "then"], ["proof (chain)\npicking this:\n  TS M2 M1 \\<Omega> V m j \\<subseteq> TS M2 M1 \\<Omega> V m i", "show ?thesis"], ["proof (prove)\nusing this:\n  TS M2 M1 \\<Omega> V m j \\<subseteq> TS M2 M1 \\<Omega> V m i\n\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                          V).\\<Omega>\\<rbrakk> M2", "using atc_io_reduction_on_subset\n              [OF \\<open>atc_io_reduction_on_sets M1 (TS M2 M1 \\<Omega> V m i) \\<Omega> M2\\<close>, of \"?TS j\"]"], ["proof (prove)\nusing this:\n  TS M2 M1 \\<Omega> V m j \\<subseteq> TS M2 M1 \\<Omega> V m i\n  TS M2 M1 \\<Omega> V m j\n  \\<subseteq> TS M2 M1 \\<Omega> V m i \\<Longrightarrow>\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j).\\<Omega>\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                          V).\\<Omega>\\<rbrakk> M2", "by (meson Un_subset_iff \\<open>V \\<subseteq> ?TS i\\<close> \\<open>atc_io_reduction_on_sets M1 (TS M2 M1 \\<Omega> V m i) \\<Omega> M2\\<close>\n            atc_io_reduction_on_subset)"], ["proof (state)\nthis:\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                        V).\\<Omega>\\<rbrakk> M2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                        V).\\<Omega>\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                        V).\\<Omega>\\<rbrakk> M2\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"finite (?TS j \\<union> V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m j \\<union> V)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m j \\<union> V)", "have \"finite (?TS j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m j)", "using TS_finite[OF \\<open>finite V\\<close>, of M2 M1 \\<Omega> m j] assms(2)"], ["proof (prove)\nusing this:\n  finite (inputs M2) \\<Longrightarrow> finite (TS M2 M1 \\<Omega> V m j)\n  OFSM M2\n\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m j)", "by auto"], ["proof (state)\nthis:\n  finite (TS M2 M1 \\<Omega> V m j)\n\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m j \\<union> V)", "then"], ["proof (chain)\npicking this:\n  finite (TS M2 M1 \\<Omega> V m j)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (TS M2 M1 \\<Omega> V m j)\n\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m j \\<union> V)", "using \\<open>finite V\\<close>"], ["proof (prove)\nusing this:\n  finite (TS M2 M1 \\<Omega> V m j)\n  finite V\n\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m j \\<union> V)", "by blast"], ["proof (state)\nthis:\n  finite (TS M2 M1 \\<Omega> V m j \\<union> V)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (TS M2 M1 \\<Omega> V m j \\<union> V)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  finite (TS M2 M1 \\<Omega> V m j \\<union> V)\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"V \\<subseteq> ?TS j \\<union> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<subseteq> TS M2 M1 \\<Omega> V m j \\<union> V", "by blast"], ["proof (state)\nthis:\n  V \\<subseteq> TS M2 M1 \\<Omega> V m j \\<union> V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  V \\<subseteq> TS M2 M1 \\<Omega> V m j \\<union> V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"(\\<forall> p . (prefix p xs' \\<and> p \\<noteq> xs') \\<longrightarrow> map fst (vs' @ p) \\<in> ?TS j \\<union> V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n       map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n       map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n       map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "show \"prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow> map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "assume \"prefix p xs' \\<and> p \\<noteq> xs'\""], ["proof (state)\nthis:\n  prefix p xs' \\<and> p \\<noteq> xs'\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have \"prefix (map fst (vs' @ p)) (map fst (vs' @ xs'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (map fst (vs' @ p)) (map fst (vs' @ xs'))", "by (simp add: \\<open>prefix p xs' \\<and> p \\<noteq> xs'\\<close> map_mono_prefix)"], ["proof (state)\nthis:\n  prefix (map fst (vs' @ p)) (map fst (vs' @ xs'))\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have \"prefix (map fst (vs' @ p)) (?stfV @ xr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (map fst (vs' @ p)) (map fst vs @ xr)", "using \\<open>length (take (length xr) (map snd xs)) = length xr\\<close> \n                \\<open>prefix (map fst (vs' @ p)) (map fst (vs' @ xs'))\\<close> \n                \\<open>vs' = vs\\<close> \\<open>xs' = xr || take (length xr) (map snd xs)\\<close>"], ["proof (prove)\nusing this:\n  length (take (length xr) (map snd xs)) = length xr\n  prefix (map fst (vs' @ p)) (map fst (vs' @ xs'))\n  vs' = vs\n  xs' = xr || take (length xr) (map snd xs)\n\ngoal (1 subgoal):\n 1. prefix (map fst (vs' @ p)) (map fst vs @ xr)", "by auto"], ["proof (state)\nthis:\n  prefix (map fst (vs' @ p)) (map fst vs @ xr)\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "then"], ["proof (chain)\npicking this:\n  prefix (map fst (vs' @ p)) (map fst vs @ xr)", "have \"prefix (map fst vs' @ map fst p) (?stfV @ xr)\""], ["proof (prove)\nusing this:\n  prefix (map fst (vs' @ p)) (map fst vs @ xr)\n\ngoal (1 subgoal):\n 1. prefix (map fst vs' @ map fst p) (map fst vs @ xr)", "by simp"], ["proof (state)\nthis:\n  prefix (map fst vs' @ map fst p) (map fst vs @ xr)\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "then"], ["proof (chain)\npicking this:\n  prefix (map fst vs' @ map fst p) (map fst vs @ xr)", "have \"prefix (map fst p) xr\""], ["proof (prove)\nusing this:\n  prefix (map fst vs' @ map fst p) (map fst vs @ xr)\n\ngoal (1 subgoal):\n 1. prefix (map fst p) xr", "by (simp add: \\<open>vs' = vs\\<close>)"], ["proof (state)\nthis:\n  prefix (map fst p) xr\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have \"?stfV @ xr \\<in> ?TS (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "then"], ["proof (chain)\npicking this:\n  j = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "using \\<open>map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)\\<close>"], ["proof (prove)\nusing this:\n  j = 0\n  map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "by auto"], ["proof (state)\nthis:\n  map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "case (Suc nat)"], ["proof (state)\nthis:\n  j = Suc nat\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "then"], ["proof (chain)\npicking this:\n  j = Suc nat", "show ?thesis"], ["proof (prove)\nusing this:\n  j = Suc nat\n\ngoal (1 subgoal):\n 1. map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "using TS.simps(3) \\<open>map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)\\<close>"], ["proof (prove)\nusing this:\n  j = Suc nat\n  TS ?M2.0 ?M1.0 ?\\<Omega> ?V ?m (Suc (Suc ?v)) =\n  TS ?M2.0 ?M1.0 ?\\<Omega> ?V ?m (Suc ?v) \\<union>\n  C ?M2.0 ?M1.0 ?\\<Omega> ?V ?m (Suc (Suc ?v))\n  map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "by blast"], ["proof (state)\nthis:\n  map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map fst vs @ xr \\<in> TS M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have \"mcp (map fst vs @ xr) V (map fst vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcp (map fst vs @ xr) V (map fst vs)", "using \\<open>mcp (map fst vs @ map fst xs) V (map fst vs)\\<close> \\<open>prefix xr (map fst xs)\\<close> \n                mcp_prefix_of_suffix"], ["proof (prove)\nusing this:\n  mcp (map fst vs @ map fst xs) V (map fst vs)\n  prefix xr (map fst xs)\n  \\<lbrakk>mcp (?vs @ ?xs) ?V ?vs; prefix ?xs' ?xs\\<rbrakk>\n  \\<Longrightarrow> mcp (?vs @ ?xs') ?V ?vs\n\ngoal (1 subgoal):\n 1. mcp (map fst vs @ xr) V (map fst vs)", "by blast"], ["proof (state)\nthis:\n  mcp (map fst vs @ xr) V (map fst vs)\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have \"map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "using TS_prefix_containment[OF \\<open>?stfV @ xr \\<in> ?TS (Suc j)\\<close> \n                                         \\<open>mcp (map fst vs @ xr) V (map fst vs)\\<close> \n                                         \\<open>prefix (map fst p) xr\\<close>]"], ["proof (prove)\nusing this:\n  map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m (Suc j)", "by assumption"], ["proof (state)\nthis:\n  map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m (Suc j)\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have \"Suc (length xr) = (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (length xr) = Suc j", "using C_index[OF \\<open>?stfV@xr \\<in> ?C (Suc j)\\<close> \\<open>mcp (map fst vs @ xr) V (map fst vs)\\<close>]"], ["proof (prove)\nusing this:\n  Suc (length xr) = Suc j\n\ngoal (1 subgoal):\n 1. Suc (length xr) = Suc j", "by assumption"], ["proof (state)\nthis:\n  Suc (length xr) = Suc j\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have\"Suc (length p) < (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (length p) < Suc j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc (length p) < Suc j", "have \"map fst xs' = xr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst xs' = xr", "by (metis \\<open>xr = take (length xr) (map fst xs)\\<close> \n                \\<open>xr || take (length xr) (map snd xs) = take (length xr) xs\\<close> \n                \\<open>xs' = xr || take (length xr) (map snd xs)\\<close> take_map)"], ["proof (state)\nthis:\n  map fst xs' = xr\n\ngoal (1 subgoal):\n 1. Suc (length p) < Suc j", "then"], ["proof (chain)\npicking this:\n  map fst xs' = xr", "show ?thesis"], ["proof (prove)\nusing this:\n  map fst xs' = xr\n\ngoal (1 subgoal):\n 1. Suc (length p) < Suc j", "by (metis (no_types) Suc_less_eq \\<open>Suc (length xr) = Suc j\\<close> \\<open>prefix p xs' \\<and> p \\<noteq> xs'\\<close> \n                append_eq_conv_conj length_map nat_less_le prefixE prefix_length_le take_all)"], ["proof (state)\nthis:\n  Suc (length p) < Suc j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc (length p) < Suc j\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have \"mcp (map fst vs @ map fst p) V (map fst vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcp (map fst vs @ map fst p) V (map fst vs)", "using \\<open>mcp (map fst vs @ xr) V (map fst vs)\\<close> \\<open>prefix (map fst p) xr\\<close> mcp_prefix_of_suffix"], ["proof (prove)\nusing this:\n  mcp (map fst vs @ xr) V (map fst vs)\n  prefix (map fst p) xr\n  \\<lbrakk>mcp (?vs @ ?xs) ?V ?vs; prefix ?xs' ?xs\\<rbrakk>\n  \\<Longrightarrow> mcp (?vs @ ?xs') ?V ?vs\n\ngoal (1 subgoal):\n 1. mcp (map fst vs @ map fst p) V (map fst vs)", "by blast"], ["proof (state)\nthis:\n  mcp (map fst vs @ map fst p) V (map fst vs)\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "then"], ["proof (chain)\npicking this:\n  mcp (map fst vs @ map fst p) V (map fst vs)", "have \"map fst vs @ map fst p \\<in> ?C (Suc (length (map fst p)))\""], ["proof (prove)\nusing this:\n  mcp (map fst vs @ map fst p) V (map fst vs)\n\ngoal (1 subgoal):\n 1. map fst vs @ map fst p\n    \\<in> C M2 M1 \\<Omega> V m (Suc (length (map fst p)))", "using TS_index(2)[OF \\<open>map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m (Suc j)\\<close>]"], ["proof (prove)\nusing this:\n  mcp (map fst vs @ map fst p) V (map fst vs)\n  mcp (map fst vs @ map fst p) V (map fst vs) \\<Longrightarrow>\n  map fst vs @ map fst p\n  \\<in> C M2 M1 \\<Omega> V m (Suc (length (map fst p)))\n\ngoal (1 subgoal):\n 1. map fst vs @ map fst p\n    \\<in> C M2 M1 \\<Omega> V m (Suc (length (map fst p)))", "by auto"], ["proof (state)\nthis:\n  map fst vs @ map fst p\n  \\<in> C M2 M1 \\<Omega> V m (Suc (length (map fst p)))\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "have \"map fst vs @ map fst p \\<in> ?TS j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j", "using TS_union[of M2 M1 \\<Omega> V m j]"], ["proof (prove)\nusing this:\n  TS M2 M1 \\<Omega> V m j =\n  \\<Union> (C M2 M1 \\<Omega> V m ` set [0..<Suc j])\n\ngoal (1 subgoal):\n 1. map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. TS M2 M1 \\<Omega> V m j =\n    \\<Union> (C M2 M1 \\<Omega> V m ` set [0..<Suc j]) \\<Longrightarrow>\n    map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j", "have \"Suc (length p) \\<in> {0..<Suc j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (length p) \\<in> {0..<Suc j}", "using \\<open>Suc (length p) < Suc j\\<close>"], ["proof (prove)\nusing this:\n  Suc (length p) < Suc j\n\ngoal (1 subgoal):\n 1. Suc (length p) \\<in> {0..<Suc j}", "by force"], ["proof (state)\nthis:\n  Suc (length p) \\<in> {0..<Suc j}\n\ngoal (1 subgoal):\n 1. TS M2 M1 \\<Omega> V m j =\n    \\<Union> (C M2 M1 \\<Omega> V m ` set [0..<Suc j]) \\<Longrightarrow>\n    map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j", "then"], ["proof (chain)\npicking this:\n  Suc (length p) \\<in> {0..<Suc j}", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc (length p) \\<in> {0..<Suc j}\n\ngoal (1 subgoal):\n 1. map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j", "by (metis UN_I \\<open>TS M2 M1 \\<Omega> V m j = (\\<Union>j\\<in>set [0..<Suc j]. C M2 M1 \\<Omega> V m j)\\<close> \n                \\<open>map fst vs @ map fst p \\<in> C M2 M1 \\<Omega> V m (Suc (length (map fst p)))\\<close> \n                length_map set_upt)"], ["proof (state)\nthis:\n  map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j\n\ngoal (1 subgoal):\n 1. prefix p xs' \\<and> p \\<noteq> xs' \\<Longrightarrow>\n    map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "then"], ["proof (chain)\npicking this:\n  map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j", "show \"map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\""], ["proof (prove)\nusing this:\n  map fst vs @ map fst p \\<in> TS M2 M1 \\<Omega> V m j\n\ngoal (1 subgoal):\n 1. map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V", "by (simp add: \\<open>vs' = vs\\<close>)"], ["proof (state)\nthis:\n  map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n  map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>p.\n     prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n     map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>p.\n     prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n     map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"vs' @ xs' \\<in> L M2 \\<inter> L M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs' @ xs' \\<in> L M2 \\<inter> L M1", "by (metis (no_types, lifting) IntI RM_impl(2) \n          \\<open>\\<forall>xs'\\<in>C M2 M1 \\<Omega> V m (Suc j). L\\<^sub>i\\<^sub>n M1 {xs'} \\<subseteq> L\\<^sub>i\\<^sub>n M2 {xs'}\\<close> \n          \\<open>map fst vs @ xr \\<in> C M2 M1 \\<Omega> V m (Suc j)\\<close> \n          \\<open>vs @ (xr || take (length xr) (map snd xs)) \\<in> L\\<^sub>i\\<^sub>n M1 {map fst vs @ xr}\\<close> \n          language_state_for_inputs_in_language_state subsetCE)"], ["proof (state)\nthis:\n  vs' @ xs' \\<in> L M2 \\<inter> L M1\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>vs'a\\<in>V''.\n     prefix vs'a (vs' @ xs') \\<longrightarrow> length vs'a \\<le> length vs'\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                        V).\\<Omega>\\<rbrakk> M2\n  finite (TS M2 M1 \\<Omega> V m j \\<union> V)\n  V \\<subseteq> TS M2 M1 \\<Omega> V m j \\<union> V\n  \\<forall>p.\n     prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n     map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\n  vs' @ xs' \\<in> L M2 \\<inter> L M1", "have \"Prereq M2 M1 vs' xs' (?TS j \\<union> V) S1 \\<Omega> V''\""], ["proof (prove)\nusing this:\n  \\<forall>vs'a\\<in>V''.\n     prefix vs'a (vs' @ xs') \\<longrightarrow> length vs'a \\<le> length vs'\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                        V).\\<Omega>\\<rbrakk> M2\n  finite (TS M2 M1 \\<Omega> V m j \\<union> V)\n  V \\<subseteq> TS M2 M1 \\<Omega> V m j \\<union> V\n  \\<forall>p.\n     prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n     map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\n  vs' @ xs' \\<in> L M2 \\<inter> L M1\n\ngoal (1 subgoal):\n 1. Prereq M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega>\n     V''", "using RM_impl(4,5)"], ["proof (prove)\nusing this:\n  \\<forall>vs'a\\<in>V''.\n     prefix vs'a (vs' @ xs') \\<longrightarrow> length vs'a \\<le> length vs'\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                        V).\\<Omega>\\<rbrakk> M2\n  finite (TS M2 M1 \\<Omega> V m j \\<union> V)\n  V \\<subseteq> TS M2 M1 \\<Omega> V m j \\<union> V\n  \\<forall>p.\n     prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n     map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\n  vs' @ xs' \\<in> L M2 \\<inter> L M1\n  S1 \\<subseteq> nodes M2\n  \\<forall>s1\\<in>S1.\n     \\<forall>s2\\<in>S1.\n        s1 \\<noteq> s2 \\<longrightarrow>\n        (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n            \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n               B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega>)\n\ngoal (1 subgoal):\n 1. Prereq M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega>\n     V''", "unfolding Prereq.simps"], ["proof (prove)\nusing this:\n  \\<forall>vs'a\\<in>V''.\n     prefix vs'a (vs' @ xs') \\<longrightarrow> length vs'a \\<le> length vs'\n  M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m j \\<union>\n                        V).\\<Omega>\\<rbrakk> M2\n  finite (TS M2 M1 \\<Omega> V m j \\<union> V)\n  V \\<subseteq> TS M2 M1 \\<Omega> V m j \\<union> V\n  \\<forall>p.\n     prefix p xs' \\<and> p \\<noteq> xs' \\<longrightarrow>\n     map fst (vs' @ p) \\<in> TS M2 M1 \\<Omega> V m j \\<union> V\n  vs' @ xs' \\<in> L M2 \\<inter> L M1\n  S1 \\<subseteq> nodes M2\n  \\<forall>s1\\<in>S1.\n     \\<forall>s2\\<in>S1.\n        s1 \\<noteq> s2 \\<longrightarrow>\n        (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n            \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n               B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega>)\n\ngoal (1 subgoal):\n 1. finite (TS M2 M1 \\<Omega> V m j \\<union> V) \\<and>\n    vs' @ xs' \\<in> L M2 \\<inter> L M1 \\<and>\n    S1 \\<subseteq> nodes M2 \\<and>\n    (\\<forall>s1\\<in>S1.\n        \\<forall>s2\\<in>S1.\n           s1 \\<noteq> s2 \\<longrightarrow>\n           (\\<forall>io1\\<in>RP M2 s1 vs' xs' V''.\n               \\<forall>io2\\<in>RP M2 s2 vs' xs' V''.\n                  B M1 io1 \\<Omega> \\<noteq> B M1 io2 \\<Omega>))", "by blast"], ["proof (state)\nthis:\n  Prereq M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"V'' \\<in> Perm V M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V'' \\<in> Perm V M1", "using \\<open>V'' \\<in> N (vs@(xr || ?yr)) M1 V\\<close>"], ["proof (prove)\nusing this:\n  V'' \\<in> N (vs @ (xr || take (length xr) (map snd xs))) M1 V\n\ngoal (1 subgoal):\n 1. V'' \\<in> Perm V M1", "unfolding N.simps"], ["proof (prove)\nusing this:\n  V''\n  \\<in> {V'' \\<in> Perm V M1.\n         map fst (mcp' (vs @ (xr || take (length xr) (map snd xs))) V'') =\n         mcp' (map fst (vs @ (xr || take (length xr) (map snd xs)))) V}\n\ngoal (1 subgoal):\n 1. V'' \\<in> Perm V M1", "by blast"], ["proof (state)\nthis:\n  V'' \\<in> Perm V M1\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \\<open>prefix (xr || ?yr) xs\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (xr || take (length xr) (map snd xs)) xs", "by (simp add: \\<open>xr || take (length xr) (map snd xs) = take (length xr) xs\\<close> take_is_prefix)\n  \n  \n    \\<comment> \\<open> show that furthermore neither @{verbatim Rep_Pre} nor @{verbatim Rep_Cov} holds \\<close>"], ["proof (state)\nthis:\n  prefix (xr || take (length xr) (map snd xs)) xs\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"\\<not> Rep_Pre M2 M1 vs (xr || ?yr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Rep_Pre M2 M1 vs (xr || take (length xr) (map snd xs))", "using minimal_sequence_to_failure_extending_implies_Rep_Pre\n            [OF \\<open>minimal_sequence_to_failure_extending V M1 M2 vs xs\\<close> assms(1,2) \n                \\<open>test_tools M2 M1 FAIL PM V \\<Omega>\\<close> RM_impl(1) \n                \\<open>prefix (xr || take (length xr) (map snd xs)) xs\\<close>]"], ["proof (prove)\nusing this:\n  \\<not> Rep_Pre M2 M1 vs (xr || take (length xr) (map snd xs))\n\ngoal (1 subgoal):\n 1. \\<not> Rep_Pre M2 M1 vs (xr || take (length xr) (map snd xs))", "by assumption"], ["proof (state)\nthis:\n  \\<not> Rep_Pre M2 M1 vs (xr || take (length xr) (map snd xs))\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> Rep_Pre M2 M1 vs (xr || take (length xr) (map snd xs))", "have \"\\<not> Rep_Pre M2 M1 vs' xs'\""], ["proof (prove)\nusing this:\n  \\<not> Rep_Pre M2 M1 vs (xr || take (length xr) (map snd xs))\n\ngoal (1 subgoal):\n 1. \\<not> Rep_Pre M2 M1 vs' xs'", "using \\<open>vs' = vs\\<close> \\<open>xs' = xr || ?yr\\<close>"], ["proof (prove)\nusing this:\n  \\<not> Rep_Pre M2 M1 vs (xr || take (length xr) (map snd xs))\n  vs' = vs\n  xs' = xr || take (length xr) (map snd xs)\n\ngoal (1 subgoal):\n 1. \\<not> Rep_Pre M2 M1 vs' xs'", "by blast"], ["proof (state)\nthis:\n  \\<not> Rep_Pre M2 M1 vs' xs'\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"\\<not> Rep_Cov M2 M1 V'' vs (xr || ?yr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Rep_Cov M2 M1 V'' vs (xr || take (length xr) (map snd xs))", "using minimal_sequence_to_failure_extending_implies_Rep_Cov\n            [OF \\<open>minimal_sequence_to_failure_extending V M1 M2 vs xs\\<close> assms(1,2) \n                \\<open>test_tools M2 M1 FAIL PM V \\<Omega>\\<close> RM_impl(1) \n                \\<open>prefix (xr || take (length xr) (map snd xs)) xs\\<close>]"], ["proof (prove)\nusing this:\n  \\<not> Rep_Cov M2 M1 V'' vs (xr || take (length xr) (map snd xs))\n\ngoal (1 subgoal):\n 1. \\<not> Rep_Cov M2 M1 V'' vs (xr || take (length xr) (map snd xs))", "by assumption"], ["proof (state)\nthis:\n  \\<not> Rep_Cov M2 M1 V'' vs (xr || take (length xr) (map snd xs))\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> Rep_Cov M2 M1 V'' vs (xr || take (length xr) (map snd xs))", "have \"\\<not> Rep_Cov M2 M1 V'' vs' xs'\""], ["proof (prove)\nusing this:\n  \\<not> Rep_Cov M2 M1 V'' vs (xr || take (length xr) (map snd xs))\n\ngoal (1 subgoal):\n 1. \\<not> Rep_Cov M2 M1 V'' vs' xs'", "using \\<open>vs' = vs\\<close> \\<open>xs' = xr || ?yr\\<close>"], ["proof (prove)\nusing this:\n  \\<not> Rep_Cov M2 M1 V'' vs (xr || take (length xr) (map snd xs))\n  vs' = vs\n  xs' = xr || take (length xr) (map snd xs)\n\ngoal (1 subgoal):\n 1. \\<not> Rep_Cov M2 M1 V'' vs' xs'", "by blast"], ["proof (state)\nthis:\n  \\<not> Rep_Cov M2 M1 V'' vs' xs'\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"vs'@xs' \\<in> L M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs' @ xs' \\<in> L M1", "using \\<open>vs @ (xr || take (length xr) (map snd xs)) \\<in> L M1\\<close> \n            \\<open>vs' = vs\\<close> \\<open>xs' = xr || take (length xr) (map snd xs)\\<close>"], ["proof (prove)\nusing this:\n  vs @ (xr || take (length xr) (map snd xs)) \\<in> L M1\n  vs' = vs\n  xs' = xr || take (length xr) (map snd xs)\n\ngoal (1 subgoal):\n 1. vs' @ xs' \\<in> L M1", "by blast \n    \n  \n    \\<comment> \\<open> therefore it is impossible to remove the prefix of the minimal sequence to a failure,\n         as this would require @{verbatim M1} to have more than m states \\<close>"], ["proof (state)\nthis:\n  vs' @ xs' \\<in> L M1\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "have \"LB M2 M1 vs' xs' (?TS j \\<union> V) S1 \\<Omega> V'' \\<le> card (nodes M1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n    \\<le> |M1|", "using LB_count[OF \\<open>vs'@xs' \\<in> L M1\\<close> assms(1,2,3) \\<open>test_tools M2 M1 FAIL PM V \\<Omega>\\<close> \n                        \\<open>V'' \\<in> Perm V M1\\<close> \\<open>Prereq M2 M1 vs' xs' (?TS j \\<union> V) S1 \\<Omega> V''\\<close> \n                        \\<open>\\<not> Rep_Pre M2 M1 vs' xs'\\<close> \\<open> \\<not> Rep_Cov M2 M1 V'' vs' xs'\\<close>]"], ["proof (prove)\nusing this:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> |M1|\n\ngoal (1 subgoal):\n 1. LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n    \\<le> |M1|", "by assumption"], ["proof (state)\nthis:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> |M1|\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> |M1|", "have \"LB M2 M1 vs' xs' (?TS j \\<union> V) S1 \\<Omega> V'' \\<le> m\""], ["proof (prove)\nusing this:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> |M1|\n\ngoal (1 subgoal):\n 1. LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n    \\<le> m", "using assms(3)"], ["proof (prove)\nusing this:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> |M1|\n  asc_fault_domain M2 M1 m\n\ngoal (1 subgoal):\n 1. LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n    \\<le> m", "by linarith"], ["proof (state)\nthis:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> m\n\ngoal (1 subgoal):\n 1. \\<not> M1 \\<preceq> M2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> m", "show \"False\""], ["proof (prove)\nusing this:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> m\n\ngoal (1 subgoal):\n 1. False", "using \\<open>m < LB M2 M1 vs' xs' (?TS j \\<union> V) S1 \\<Omega> V''\\<close>"], ["proof (prove)\nusing this:\n  LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n  \\<le> m\n  m < LB M2 M1 vs' xs' (TS M2 M1 \\<Omega> V m j \\<union> V) S1 \\<Omega> V''\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M1 \\<preceq> M2\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open> Main result \\<close>"], ["", "text \\<open>\nThe following lemmata add to the previous result to show that some FSM @{verbatim M1} is a reduction \nof FSM @{verbatim M2} if and only if it is a reduction on the test suite generated by the adaptive \nstate counting algorithm for these FSMs.\n\\<close>"], ["", "lemma asc_soundness :\n  assumes     \"OFSM M1\"\n  and         \"OFSM M2\"\nshows \"M1 \\<preceq> M2 \\<longrightarrow> atc_io_reduction_on_sets M1 T \\<Omega> M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 \\<preceq> M2 \\<longrightarrow>\n    M1 \\<preceq>\\<lbrakk>T.\\<Omega>\\<rbrakk> M2", "using atc_io_reduction_on_sets_reduction assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M1.0 \\<preceq> ?M2.0; observable ?M1.0;\n   observable ?M2.0\\<rbrakk>\n  \\<Longrightarrow> ?M1.0 \\<preceq>\\<lbrakk>?TS.?\\<Omega>\\<rbrakk> ?M2.0\n  OFSM M1\n  OFSM M2\n\ngoal (1 subgoal):\n 1. M1 \\<preceq> M2 \\<longrightarrow>\n    M1 \\<preceq>\\<lbrakk>T.\\<Omega>\\<rbrakk> M2", "by blast"], ["", "lemma asc_main_theorem :\n  assumes \"OFSM M1\"\n  and     \"OFSM M2\"\n  and     \"asc_fault_domain M2 M1 m\"\n  and     \"test_tools M2 M1 FAIL PM V \\<Omega>\"\n  and     \"final_iteration M2 M1 \\<Omega> V m i\"\nshows     \"M1 \\<preceq> M2 \\<longleftrightarrow> atc_io_reduction_on_sets M1 (TS M2 M1 \\<Omega> V m i) \\<Omega> M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 \\<preceq> M2 =\n    M1 \\<preceq>\\<lbrakk>(TS M2 M1 \\<Omega> V m i).\\<Omega>\\<rbrakk> M2", "by (metis asc_sufficiency assms(1-5) atc_io_reduction_on_sets_reduction)"], ["", "end"]]}