{"file_name": "/home/qj213/afp-2021-10-22/thys/Linear_Programming/Matrix_LinPoly.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Linear_Programming", "problem_names": ["lemma eval_poly_with_sum: \"(v \\<lbrace> X \\<rbrace>) = (\\<Sum>x\\<in> vars v. coeff v x * X x)\"", "lemma eval_poly_with_sum_superset:\n  assumes \"finite S\"\n  assumes \"S \\<supseteq> vars v\"\n  shows \"(v \\<lbrace>X\\<rbrace>) = (\\<Sum>x\\<in>S. coeff v x * X x)\"", "lemma empty_list_0poly:\n  shows \"list_to_lpoly [] = 0\"", "lemma sum_list_map_upto_coeff_limit:\n  assumes \"i \\<ge> length L\"\n  shows \"coeff (list_to_lpoly L) i = 0\"", "lemma rl_lpoly_coeff_nth_non_empty:\n  assumes \"i < length cs\"\n  assumes \"cs \\<noteq> []\"\n  shows \"coeff (list_to_lpoly cs) i = cs!i\"", "lemma list_to_lpoly_coeff_nth:\n  assumes \"i < length cs \"\n  shows \"coeff (list_to_lpoly cs) i = cs ! i\"", "lemma rat_list_outside_zero:\n  assumes \"length cs \\<le> i\"\n  shows \"coeff (list_to_lpoly cs) i = 0\"", "lemma all_greater_dim_poly_zero[simp]: \n  assumes \"x \\<ge> dim_poly p\" \n  shows \"coeff p x = 0\"", "lemma lpoly_to_vec_0_iff_zero_poly [iff]:\n  shows \"(lpoly_to_vec p) = 0\\<^sub>v 0 \\<longleftrightarrow> p = 0\"", "lemma dim_poly_dim_vec_equiv:\n  \"dim_vec (lpoly_to_vec p) = dim_poly p\"", "lemma dim_poly_greater_ex_coeff: \"dim_poly x > d \\<Longrightarrow> \\<exists>i\\<ge>d. coeff x i \\<noteq> 0\"", "lemma dimpoly_all_zero_limit: \n  assumes \"\\<And>i. i \\<ge> d \\<Longrightarrow> coeff x i = 0\"\n  shows \"dim_poly x \\<le> d\"", "lemma construct_poly_from_lower_dim_poly: \n  assumes \"dim_poly x = d+1\"\n  obtains p c where \"dim_poly p \\<le> d\" \"x = p + lp_monom c d\"", "lemma vars_subset_0_dim_poly:\n  \"vars z \\<subseteq> {0..<dim_poly z}\"", "lemma in_dim_and_not_var_zero: \"x \\<in> {0..<dim_poly z} - vars z \\<Longrightarrow> coeff z x = 0\"", "lemma valuate_with_dim_poly: \"z \\<lbrace> X \\<rbrace> = (\\<Sum>i\\<in>{0..<dim_poly z}. coeff z i * X i)\"", "lemma lin_poly_to_vec_coeff_access:\n  assumes \"x < dim_poly y\"\n  shows \"(lpoly_to_vec y) $ x = coeff y x\"", "lemma addition_over_lin_poly_to_vec:\n  fixes x y\n  assumes \"a < dim_poly x\"\n  assumes \"dim_poly x = dim_poly y\"\n  shows  \"(lpoly_to_vec x + lpoly_to_vec y) $ a = coeff (x + y) a\"", "lemma list_to_lpoly_dim_less: \"length cs \\<ge> dim_poly (list_to_lpoly cs)\"", "lemma vec_to_lin_poly_coeff_access:\n  assumes \"x < dim_vec y\"           \n  shows \"y $ x = coeff (vec_to_lpoly y) x\"", "lemma addition_over_vec_to_lin_poly:\n  fixes x y\n  assumes \"a < dim_vec x\"\n  assumes \"dim_vec x = dim_vec y\"\n  shows  \"(x + y) $ a = coeff (vec_to_lpoly x + vec_to_lpoly y) a\"", "lemma outside_list_coeff0:\n  assumes \"i \\<ge> dim_vec xs\"\n  shows \"coeff (vec_to_lpoly xs) i = 0\"", "lemma vec_to_poly_dim_less:\n  \"dim_poly (vec_to_lpoly x) \\<le> dim_vec x\"", "lemma vec_to_lpoly_from_lpoly_coeff_dual1: \n  \"coeff (vec_to_lpoly (lpoly_to_vec p)) i = coeff p i\"", "lemma vec_to_lpoly_from_lpoly_coeff_dual2:\n  assumes \"i < dim_vec (lpoly_to_vec (vec_to_lpoly v))\" \n  shows \"(lpoly_to_vec (vec_to_lpoly v)) $ i = v $ i\"", "lemma vars_subset_dim_vec_to_lpoly_dim: \"vars (vec_to_lpoly v) \\<subseteq> {0..<dim_vec v}\"", "lemma sum_dim_vec_equals_sum_dim_poly:\n  shows \"(\\<Sum>a = 0..<dim_vec A. coeff (vec_to_lpoly  A) a * X a) = \n         (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A). coeff (vec_to_lpoly  A) a * X a)\"", "lemma vec_to_lpoly_vNil [simp]: \"vec_to_lpoly vNil = 0\"", "lemma zero_vector_is_zero_poly: \"coeff (vec_to_lpoly (0\\<^sub>v n)) i = 0\"", "lemma coeff_nonzero_dim_vec_non_zero:\n  assumes \"coeff (vec_to_lpoly v) i \\<noteq> 0\"\n  shows \"v $ i \\<noteq> 0\" \"i < dim_vec v\"", "lemma lpoly_of_v_equals_v_append0: \n  \"vec_to_lpoly v = vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)\" (is \"?lhs = ?rhs\")", "lemma vec_to_lpoly_eval_dot_prod:\n\"(vec_to_lpoly v) \\<lbrace> x \\<rbrace> = v \\<bullet> (vec (dim_vec v) x)\"", "lemma dim_poly_of_append_vec:\n  \"dim_poly (vec_to_lpoly (a@\\<^sub>vb)) \\<le> dim_vec a + dim_vec b\"", "lemma vec_coeff_append1: \"i \\<in> {0..<dim_vec a} \\<Longrightarrow> coeff (vec_to_lpoly (a@\\<^sub>vb)) i = a$i\"", "lemma vec_coeff_append2: \n  \"i \\<in> {dim_vec a..<dim_vec (a@\\<^sub>vb)} \\<Longrightarrow> coeff (vec_to_lpoly (a@\\<^sub>vb)) i = b$(i-dim_vec a)\"", "lemma vec_to_lpoly_poly_of_vec_eq: \"vec_to_lpoly v = poly_of_vec v\"", "lemma vars_vec_append_subset: \"vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) \\<subseteq> {n..<n+dim_vec v}\"", "lemma matrix_to_lpolies_vec_of_row: \n  \"i <dim_row A \\<Longrightarrow> matrix_to_lpolies A ! i = vec_to_lpoly (row A i)\"", "lemma outside_of_col_range_is_0:\n  assumes \"i < dim_row A\" and \"j \\<ge> dim_col A\"\n  shows \"coeff ((matrix_to_lpolies A)!i) j = 0\"", "lemma polys_greater_col_zero:\n  assumes \"x \\<in> set (matrix_to_lpolies A)\"\n  assumes \"j \\<ge> dim_col A\"\n  shows \"coeff x j = 0\"", "lemma matrix_to_lp_vec_to_lpoly_row [simp]:\n  assumes \"i < dim_row A\"\n  shows \"(matrix_to_lpolies A)!i = vec_to_lpoly (row A i)\"", "lemma matrix_to_lpolies_coeff_access: \n  assumes \"i < dim_row A\" and \"j < dim_col A\"\n  shows \"coeff (matrix_to_lpolies A ! i) j = A $$ (i,j)\"", "lemma lin_polies_to_rat_mat_coeff_index: \n  assumes \"i < length L\" and \"j <  (max_dim_poly_list L)\"\n  shows \"coeff (L ! i) j = (lin_polies_to_mat L) $$ (i,j)\"", "lemma vec_to_lpoly_valuate_equiv_dot_prod:\n  assumes \"dim_vec y = dim_vec x\"  (* Can be \\<ge> *)\n  shows \"(vec_to_lpoly y) \\<lbrace> ($)x \\<rbrace> = y \\<bullet> x\"", "lemma matrix_to_lpolies_valuate_scalarP:\n  assumes \"i < dim_row A\"\nassumes \"dim_col A = dim_vec x\"\nshows \"(matrix_to_lpolies A!i) \\<lbrace> ($)x \\<rbrace> = (row A i) \\<bullet> x\"", "lemma matrix_to_lpolies_lambda_valuate_scalarP:\n  assumes \"i < dim_row A\"\n  assumes \"dim_col A = dim_vec x\"\nshows \"(matrix_to_lpolies A!i) \\<lbrace> (\\<lambda>i. (if i < dim_vec x then x$i else 0)) \\<rbrace> = (row A i) \\<bullet> x\""], "translations": [["", "lemma eval_poly_with_sum: \"(v \\<lbrace> X \\<rbrace>) = (\\<Sum>x\\<in> vars v. coeff v x * X x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x)", "using linear_poly_sum sum.cong"], ["proof (prove)\nusing this:\n  ?p \\<lbrace> ?v \\<rbrace> =\n  (\\<Sum>x\\<in>vars ?p. Abstract_Linear_Poly.coeff ?p x *R ?v x)\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x)", "by fastforce"], ["", "lemma eval_poly_with_sum_superset:\n  assumes \"finite S\"\n  assumes \"S \\<supseteq> vars v\"\n  shows \"(v \\<lbrace>X\\<rbrace>) = (\\<Sum>x\\<in>S. coeff v x * X x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "define D where D: \"D = S - vars v\""], ["proof (state)\nthis:\n  D = S - vars v\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "have zeros: \"\\<forall>x \\<in> D. coeff v x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>D. Abstract_Linear_Poly.coeff v x = 0", "using D coeff_zero"], ["proof (prove)\nusing this:\n  D = S - vars v\n  (Abstract_Linear_Poly.coeff ?p ?x \\<noteq> 0) = (?x \\<in> vars ?p)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>D. Abstract_Linear_Poly.coeff v x = 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>D. Abstract_Linear_Poly.coeff v x = 0\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "have fnt: \"finite (vars v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (vars v)", "using finite_vars"], ["proof (prove)\nusing this:\n  finite (vars ?p)\n\ngoal (1 subgoal):\n 1. finite (vars v)", "by auto"], ["proof (state)\nthis:\n  finite (vars v)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "have \"(v \\<lbrace>X\\<rbrace>) = (\\<Sum>x\\<in> vars v. coeff v x * X x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x)", "using linear_poly_sum sum.cong"], ["proof (prove)\nusing this:\n  ?p \\<lbrace> ?v \\<rbrace> =\n  (\\<Sum>x\\<in>vars ?p. Abstract_Linear_Poly.coeff ?p x *R ?v x)\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x)", "by fastforce"], ["proof (state)\nthis:\n  v \\<lbrace> X \\<rbrace> =\n  (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "also"], ["proof (state)\nthis:\n  v \\<lbrace> X \\<rbrace> =\n  (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "have \"... = (\\<Sum>x\\<in> vars v. coeff v x * X x) + (\\<Sum>x\\<in>D. coeff v x * X x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) =\n    (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) +\n    (\\<Sum>x\\<in>D. Abstract_Linear_Poly.coeff v x * X x)", "using zeros"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>D. Abstract_Linear_Poly.coeff v x = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) =\n    (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) +\n    (\\<Sum>x\\<in>D. Abstract_Linear_Poly.coeff v x * X x)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) =\n  (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) +\n  (\\<Sum>x\\<in>D. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) =\n  (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) +\n  (\\<Sum>x\\<in>D. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "have \"... = (\\<Sum>x\\<in> vars v \\<union> D. coeff v x * X x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) +\n    (\\<Sum>x\\<in>D. Abstract_Linear_Poly.coeff v x * X x) =\n    (\\<Sum>x\\<in>vars v \\<union> D. Abstract_Linear_Poly.coeff v x * X x)", "using assms(1) fnt Diff_partition[of \"vars v\" S, OF assms(2)] \n      sum.subset_diff[of \"vars v\" S, OF assms(2) assms(1)]"], ["proof (prove)\nusing this:\n  finite S\n  finite (vars v)\n  vars v \\<union> (S - vars v) = S\n  sum ?g S = sum ?g (S - vars v) + sum ?g (vars v)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) +\n    (\\<Sum>x\\<in>D. Abstract_Linear_Poly.coeff v x * X x) =\n    (\\<Sum>x\\<in>vars v \\<union> D. Abstract_Linear_Poly.coeff v x * X x)", "by (simp add: \\<open>\\<And>g. sum g S = sum g (S - vars v) + sum g (vars v)\\<close> D)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) +\n  (\\<Sum>x\\<in>D. Abstract_Linear_Poly.coeff v x * X x) =\n  (\\<Sum>x\\<in>vars v \\<union> D. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>vars v. Abstract_Linear_Poly.coeff v x * X x) +\n  (\\<Sum>x\\<in>D. Abstract_Linear_Poly.coeff v x * X x) =\n  (\\<Sum>x\\<in>vars v \\<union> D. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "have \"... = (\\<Sum>x\\<in>S. coeff v x * X x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>vars v \\<union> D. Abstract_Linear_Poly.coeff v x * X x) =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "using D Diff_partition assms(2)"], ["proof (prove)\nusing this:\n  D = S - vars v\n  ?A \\<subseteq> ?B \\<Longrightarrow> ?A \\<union> (?B - ?A) = ?B\n  vars v \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>vars v \\<union> D. Abstract_Linear_Poly.coeff v x * X x) =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "by fastforce"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>vars v \\<union> D. Abstract_Linear_Poly.coeff v x * X x) =\n  (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "finally"], ["proof (chain)\npicking this:\n  v \\<lbrace> X \\<rbrace> =\n  (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<lbrace> X \\<rbrace> =\n  (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal (1 subgoal):\n 1. v \\<lbrace> X \\<rbrace> =\n    (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)", "."], ["proof (state)\nthis:\n  v \\<lbrace> X \\<rbrace> =\n  (\\<Sum>x\\<in>S. Abstract_Linear_Poly.coeff v x * X x)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Get rid of these synonyms \\<close>"], ["", "section \\<open> Translations of Jordan Normal Forms Matrix Library to Simplex polynomials \\<close>"], ["", "subsection \\<open> Vectors \\<close>"], ["", "(* Translate rat list to linear polynomial with same coefficients *)"], ["", "definition list_to_lpoly where\n    \"list_to_lpoly cs = sum_list (map2 (\\<lambda> i c. lp_monom c i) [0..<length cs] cs)\""], ["", "lemma empty_list_0poly:\n  shows \"list_to_lpoly [] = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_to_lpoly [] = 0", "unfolding list_to_lpoly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length []] []) = 0", "by simp"], ["", "lemma sum_list_map_upto_coeff_limit:\n  assumes \"i \\<ge> length L\"\n  shows \"coeff (list_to_lpoly L) i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly L) i = 0", "using assms"], ["proof (prove)\nusing this:\n  length L \\<le> i\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly L) i = 0", "by (induction L rule: rev_induct) (auto simp: list_to_lpoly_def)"], ["", "lemma rl_lpoly_coeff_nth_non_empty:\n  assumes \"i < length cs\"\n  assumes \"cs \\<noteq> []\"\n  shows \"coeff (list_to_lpoly cs) i = cs!i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly cs) i = cs ! i", "using assms(2) assms(1)"], ["proof (prove)\nusing this:\n  cs \\<noteq> []\n  i < length cs\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly cs) i = cs ! i", "proof (induction cs rule: rev_nonempty_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       i < length [x] \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (list_to_lpoly [x]) i = [x] ! i\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "fix x ::rat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       i < length [x] \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (list_to_lpoly [x]) i = [x] ! i\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "assume \"i < length [x]\""], ["proof (state)\nthis:\n  i < length [x]\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       i < length [x] \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (list_to_lpoly [x]) i = [x] ! i\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "have \"(list_to_lpoly [x]) = lp_monom x 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_to_lpoly [x] = lp_monom x 0", "by (simp add: list_to_lpoly_def)"], ["proof (state)\nthis:\n  list_to_lpoly [x] = lp_monom x 0\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       i < length [x] \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (list_to_lpoly [x]) i = [x] ! i\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "then"], ["proof (chain)\npicking this:\n  list_to_lpoly [x] = lp_monom x 0", "show \"coeff (list_to_lpoly [x]) i = [x] ! i\""], ["proof (prove)\nusing this:\n  list_to_lpoly [x] = lp_monom x 0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly [x]) i = [x] ! i", "using \\<open>i < length [x]\\<close> list_to_lpoly_def"], ["proof (prove)\nusing this:\n  list_to_lpoly [x] = lp_monom x 0\n  i < length [x]\n  list_to_lpoly ?cs =\n  sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length ?cs] ?cs)\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly [x]) i = [x] ! i", "by auto"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (list_to_lpoly [x]) i = [x] ! i\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "fix x :: rat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "fix xs :: \"rat list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "assume \"xs \\<noteq> []\""], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "assume IH: \"i < length xs \\<Longrightarrow> coeff (list_to_lpoly xs) i = xs ! i\""], ["proof (state)\nthis:\n  i < length xs \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "assume \"i < length (xs @ [x])\""], ["proof (state)\nthis:\n  i < length (xs @ [x])\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "consider (le) \"i < length xs\" | (eq) \"i = length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length xs \\<Longrightarrow> thesis;\n     i = length xs \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using \\<open>i < length (xs @ [x])\\<close> less_Suc_eq"], ["proof (prove)\nusing this:\n  i < length (xs @ [x])\n  (?m < Suc ?n) = (?m < ?n \\<or> ?m = ?n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length xs \\<Longrightarrow> thesis;\n     i = length xs \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>i < length xs \\<Longrightarrow> ?thesis;\n   i = length xs \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [];\n        i < length xs \\<Longrightarrow>\n        Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i;\n        i < length (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.coeff\n                          (list_to_lpoly (xs @ [x])) i =\n                         (xs @ [x]) ! i", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i < length xs \\<Longrightarrow> ?thesis;\n   i = length xs \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i < length xs \\<Longrightarrow> ?thesis;\n   i = length xs \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. i < length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i\n 2. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "case le"], ["proof (state)\nthis:\n  i < length xs\n\ngoal (2 subgoals):\n 1. i < length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i\n 2. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "have \"coeff (lp_monom x (length xs)) i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (lp_monom x (length xs)) i = 0", "using le"], ["proof (prove)\nusing this:\n  i < length xs\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (lp_monom x (length xs)) i = 0", "by auto"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (lp_monom x (length xs)) i = 0\n\ngoal (2 subgoals):\n 1. i < length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i\n 2. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "have \"coeff (sum_list (map2 (\\<lambda>x y. lp_monom y x) \n          [0..<length (xs @ [x])] (xs @ [x]))) i = (xs @ [x]) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff\n     (sum_list\n       (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])]\n         (xs @ [x])))\n     i =\n    (xs @ [x]) ! i", "apply(simp add: IH le nth_append)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (length xs = i \\<longrightarrow>\n     Abstract_Linear_Poly.coeff\n      (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<i] xs)) i +\n     x =\n     xs ! i) \\<and>\n    (length xs \\<noteq> i \\<longrightarrow>\n     Abstract_Linear_Poly.coeff\n      (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs)) i =\n     xs ! i)", "using IH le list_to_lpoly_def"], ["proof (prove)\nusing this:\n  i < length xs \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = xs ! i\n  i < length xs\n  list_to_lpoly ?cs =\n  sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length ?cs] ?cs)\n\ngoal (1 subgoal):\n 1. (length xs = i \\<longrightarrow>\n     Abstract_Linear_Poly.coeff\n      (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<i] xs)) i +\n     x =\n     xs ! i) \\<and>\n    (length xs \\<noteq> i \\<longrightarrow>\n     Abstract_Linear_Poly.coeff\n      (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs)) i =\n     xs ! i)", "by auto"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff\n   (sum_list\n     (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])] (xs @ [x])))\n   i =\n  (xs @ [x]) ! i\n\ngoal (2 subgoals):\n 1. i < length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i\n 2. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "then"], ["proof (chain)\npicking this:\n  Abstract_Linear_Poly.coeff\n   (sum_list\n     (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])] (xs @ [x])))\n   i =\n  (xs @ [x]) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff\n   (sum_list\n     (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])] (xs @ [x])))\n   i =\n  (xs @ [x]) ! i\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "unfolding list_to_lpoly_def"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff\n   (sum_list\n     (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])] (xs @ [x])))\n   i =\n  (xs @ [x]) ! i\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff\n     (sum_list\n       (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])]\n         (xs @ [x])))\n     i =\n    (xs @ [x]) ! i", "by simp"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i\n\ngoal (1 subgoal):\n 1. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "case eq"], ["proof (state)\nthis:\n  i = length xs\n\ngoal (1 subgoal):\n 1. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "then"], ["proof (chain)\npicking this:\n  i = length xs", "have *: \"coeff (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs)) i = 0\""], ["proof (prove)\nusing this:\n  i = length xs\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff\n     (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs)) i =\n    0", "using sum_list_map_upto_coeff_limit[of xs i]"], ["proof (prove)\nusing this:\n  i = length xs\n  length xs \\<le> i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (list_to_lpoly xs) i = 0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff\n     (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs)) i =\n    0", "by (simp add: list_to_lpoly_def)"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff\n   (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs)) i =\n  0\n\ngoal (1 subgoal):\n 1. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "have **: \"(sum_list (map2 (\\<lambda> x y. lp_monom y x) [0..<length (xs @ [x])] (xs @ [x]))) = \n          sum_list (map (\\<lambda>(x,y). lp_monom y x) (zip [0..<length xs] xs)) + lp_monom x (length xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list\n     (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])]\n       (xs @ [x])) =\n    sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs) +\n    lp_monom x (length xs)", "by simp"], ["proof (state)\nthis:\n  sum_list\n   (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])] (xs @ [x])) =\n  sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs) +\n  lp_monom x (length xs)\n\ngoal (1 subgoal):\n 1. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "have \"coeff ((list_to_lpoly xs) + lp_monom x (length xs)) i = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly xs + lp_monom x (length xs))\n     i =\n    x", "unfolding list_to_lpoly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff\n     (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs) +\n      lp_monom x (length xs))\n     i =\n    x", "using * **"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff\n   (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs)) i =\n  0\n  sum_list\n   (map2 (\\<lambda>x y. lp_monom y x) [0..<length (xs @ [x])] (xs @ [x])) =\n  sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs) +\n  lp_monom x (length xs)\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff\n     (sum_list (map2 (\\<lambda>x y. lp_monom y x) [0..<length xs] xs) +\n      lp_monom x (length xs))\n     i =\n    x", "by (simp add: eq)"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (list_to_lpoly xs + lp_monom x (length xs)) i =\n  x\n\ngoal (1 subgoal):\n 1. i = length xs \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "then"], ["proof (chain)\npicking this:\n  Abstract_Linear_Poly.coeff (list_to_lpoly xs + lp_monom x (length xs)) i =\n  x", "show ?thesis"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (list_to_lpoly xs + lp_monom x (length xs)) i =\n  x\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i", "by (simp add: eq list_to_lpoly_def)"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (list_to_lpoly (xs @ [x])) i = (xs @ [x]) ! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma list_to_lpoly_coeff_nth:\n  assumes \"i < length cs \"\n  shows \"coeff (list_to_lpoly cs) i = cs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly cs) i = cs ! i", "using gr_implies_not0 rl_lpoly_coeff_nth_non_empty assms"], ["proof (prove)\nusing this:\n  ?m < ?n \\<Longrightarrow> ?n \\<noteq> 0\n  \\<lbrakk>?i < length ?cs; ?cs \\<noteq> []\\<rbrakk>\n  \\<Longrightarrow> Abstract_Linear_Poly.coeff (list_to_lpoly ?cs) ?i =\n                    ?cs ! ?i\n  i < length cs\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly cs) i = cs ! i", "by fastforce"], ["", "lemma rat_list_outside_zero:\n  assumes \"length cs \\<le> i\"\n  shows \"coeff (list_to_lpoly cs) i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly cs) i = 0", "using sum_list_map_upto_coeff_limit[of cs i, OF assms]"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (list_to_lpoly cs) i = 0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (list_to_lpoly cs) i = 0", "by simp"], ["", "text \\<open> Transform linear polynomials to rational vectors \\<close>"], ["", "fun dim_poly where\n  \"dim_poly p = (if (vars p) = {} then 0 else Max (vars p)+1)\""], ["", "(* 0, 0, 0, 3, 0, 0, \\<dots> has dimension 4 , consistent with  dim vec  *)"], ["", "definition max_dim_poly_list where\n  \"max_dim_poly_list lst = Max {Max (vars p) |p. p \\<in> set lst}\""], ["", "fun lpoly_to_vec where\n    \"lpoly_to_vec p = vec (dim_poly p) (coeff p)\""], ["", "lemma all_greater_dim_poly_zero[simp]: \n  assumes \"x \\<ge> dim_poly p\" \n  shows \"coeff p x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff p x = 0", "using Max_ge[of \"vars p\" x, OF finite_vars[of p]] coeff_zero[of p x]"], ["proof (prove)\nusing this:\n  x \\<in> vars p \\<Longrightarrow> x \\<le> Max (vars p)\n  (Abstract_Linear_Poly.coeff p x \\<noteq> 0) = (x \\<in> vars p)\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff p x = 0", "by (metis add_cancel_left_right assms dim_poly.elims empty_iff leD le_eq_less_or_eq \n      trans_less_add1 zero_neq_one_class.zero_neq_one)"], ["", "lemma lpoly_to_vec_0_iff_zero_poly [iff]:\n  shows \"(lpoly_to_vec p) = 0\\<^sub>v 0 \\<longleftrightarrow> p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lpoly_to_vec p = 0\\<^sub>v 0) = (p = 0)", "proof(standard)"], ["proof (state)\ngoal (2 subgoals):\n 1. lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow> p = 0\n 2. p = 0 \\<Longrightarrow> lpoly_to_vec p = 0\\<^sub>v 0", "show \"lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow> p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow> p = 0", "proof (rule contrapos_pp)"], ["proof (state)\ngoal (2 subgoals):\n 1. lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow> ?Q\n 2. \\<lbrakk>lpoly_to_vec p = 0\\<^sub>v 0; p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "assume \"p \\<noteq> 0\""], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow> ?Q\n 2. \\<lbrakk>lpoly_to_vec p = 0\\<^sub>v 0; p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "then"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have \"vars p \\<noteq> {}\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. vars p \\<noteq> {}", "by (simp add: vars_empty_zero)"], ["proof (state)\nthis:\n  vars p \\<noteq> {}\n\ngoal (2 subgoals):\n 1. lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow> ?Q\n 2. \\<lbrakk>lpoly_to_vec p = 0\\<^sub>v 0; p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "then"], ["proof (chain)\npicking this:\n  vars p \\<noteq> {}", "have \"dim_poly p > 0\""], ["proof (prove)\nusing this:\n  vars p \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < dim_poly p", "by (simp)"], ["proof (state)\nthis:\n  0 < dim_poly p\n\ngoal (2 subgoals):\n 1. lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow> ?Q\n 2. \\<lbrakk>lpoly_to_vec p = 0\\<^sub>v 0; p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "then"], ["proof (chain)\npicking this:\n  0 < dim_poly p", "show \"lpoly_to_vec p \\<noteq> 0\\<^sub>v 0\""], ["proof (prove)\nusing this:\n  0 < dim_poly p\n\ngoal (1 subgoal):\n 1. lpoly_to_vec p \\<noteq> 0\\<^sub>v 0", "using vec_of_dim_0[of \"lpoly_to_vec p\"]"], ["proof (prove)\nusing this:\n  0 < dim_poly p\n  (dim_vec (lpoly_to_vec p) = 0) = (lpoly_to_vec p = 0\\<^sub>v 0)\n\ngoal (1 subgoal):\n 1. lpoly_to_vec p \\<noteq> 0\\<^sub>v 0", "by simp"], ["proof (state)\nthis:\n  lpoly_to_vec p \\<noteq> 0\\<^sub>v 0\n\ngoal (1 subgoal):\n 1. lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow>\n    lpoly_to_vec p = 0\\<^sub>v 0", "qed"], ["proof (state)\nthis:\n  lpoly_to_vec p = 0\\<^sub>v 0 \\<Longrightarrow> p = 0\n\ngoal (1 subgoal):\n 1. p = 0 \\<Longrightarrow> lpoly_to_vec p = 0\\<^sub>v 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p = 0 \\<Longrightarrow> lpoly_to_vec p = 0\\<^sub>v 0", "qed (auto simp: vars_empty_zero)"], ["", "lemma dim_poly_dim_vec_equiv:\n  \"dim_vec (lpoly_to_vec p) = dim_poly p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (lpoly_to_vec p) = dim_poly p", "using lpoly_to_vec.simps"], ["proof (prove)\nusing this:\n  lpoly_to_vec ?p = vec (dim_poly ?p) (Abstract_Linear_Poly.coeff ?p)\n\ngoal (1 subgoal):\n 1. dim_vec (lpoly_to_vec p) = dim_poly p", "by auto"], ["", "lemma dim_poly_greater_ex_coeff: \"dim_poly x > d \\<Longrightarrow> \\<exists>i\\<ge>d. coeff x i \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < dim_poly x \\<Longrightarrow>\n    \\<exists>i\\<ge>d. Abstract_Linear_Poly.coeff x i \\<noteq> 0", "by (simp split: if_splits) (meson Max_in coeff_zero finite_vars less_Suc_eq_le)"], ["", "lemma dimpoly_all_zero_limit: \n  assumes \"\\<And>i. i \\<ge> d \\<Longrightarrow> coeff x i = 0\"\n  shows \"dim_poly x \\<le> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_poly x \\<le> d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dim_poly x \\<le> d", "have \"(\\<forall>i\\<ge> d. coeff x i = 0) \\<Longrightarrow> dim_poly x \\<le> d \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n    dim_poly x \\<le> d", "proof (rule contrapos_pp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n    ?Q\n 2. \\<lbrakk>\\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0;\n     \\<not> dim_poly x \\<le> d\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "assume \"\\<not> dim_poly x \\<le> d\""], ["proof (state)\nthis:\n  \\<not> dim_poly x \\<le> d\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n    ?Q\n 2. \\<lbrakk>\\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0;\n     \\<not> dim_poly x \\<le> d\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "then"], ["proof (chain)\npicking this:\n  \\<not> dim_poly x \\<le> d", "have \"dim_poly x > d\""], ["proof (prove)\nusing this:\n  \\<not> dim_poly x \\<le> d\n\ngoal (1 subgoal):\n 1. d < dim_poly x", "by linarith"], ["proof (state)\nthis:\n  d < dim_poly x\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n    ?Q\n 2. \\<lbrakk>\\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0;\n     \\<not> dim_poly x \\<le> d\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "then"], ["proof (chain)\npicking this:\n  d < dim_poly x", "have \"\\<exists>i \\<ge> d. coeff x i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  d < dim_poly x\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>d. Abstract_Linear_Poly.coeff x i \\<noteq> 0", "using dim_poly_greater_ex_coeff[of d x]"], ["proof (prove)\nusing this:\n  d < dim_poly x\n  d < dim_poly x \\<Longrightarrow>\n  \\<exists>i\\<ge>d. Abstract_Linear_Poly.coeff x i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<ge>d. Abstract_Linear_Poly.coeff x i \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<ge>d. Abstract_Linear_Poly.coeff x i \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n    ?Q\n 2. \\<lbrakk>\\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0;\n     \\<not> dim_poly x \\<le> d\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<ge>d. Abstract_Linear_Poly.coeff x i \\<noteq> 0", "show \"\\<not> (\\<forall>i\\<ge>d. coeff x i = 0)\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<ge>d. Abstract_Linear_Poly.coeff x i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0)", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n    \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n  dim_poly x \\<le> d\n\ngoal (1 subgoal):\n 1. dim_poly x \\<le> d", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n  dim_poly x \\<le> d", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n  dim_poly x \\<le> d\n\ngoal (1 subgoal):\n 1. dim_poly x \\<le> d", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff x i = 0 \\<Longrightarrow>\n  dim_poly x \\<le> d\n  d \\<le> ?i \\<Longrightarrow> Abstract_Linear_Poly.coeff x ?i = 0\n\ngoal (1 subgoal):\n 1. dim_poly x \\<le> d", "by blast"], ["proof (state)\nthis:\n  dim_poly x \\<le> d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma construct_poly_from_lower_dim_poly: \n  assumes \"dim_poly x = d+1\"\n  obtains p c where \"dim_poly p \\<le> d\" \"x = p + lp_monom c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define c' where c': \"c' = coeff x d\""], ["proof (state)\nthis:\n  c' = Abstract_Linear_Poly.coeff x d\n\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f: \"\\<forall>i>d. coeff x i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i>d. Abstract_Linear_Poly.coeff x i = 0", "using assms"], ["proof (prove)\nusing this:\n  dim_poly x = d + 1\n\ngoal (1 subgoal):\n 1. \\<forall>i>d. Abstract_Linear_Poly.coeff x i = 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>i>d. Abstract_Linear_Poly.coeff x i = 0\n\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have *: \"x = x - (lp_monom c' d) + (lp_monom c' d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x - lp_monom c' d + lp_monom c' d", "by simp"], ["proof (state)\nthis:\n  x = x - lp_monom c' d + lp_monom c' d\n\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"coeff (x - (lp_monom c' d)) d = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (x - lp_monom c' d) d = 0", "using c'"], ["proof (prove)\nusing this:\n  c' = Abstract_Linear_Poly.coeff x d\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (x - lp_monom c' d) d = 0", "by simp"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (x - lp_monom c' d) d = 0\n\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Abstract_Linear_Poly.coeff (x - lp_monom c' d) d = 0", "have \"\\<forall>i\\<ge>d. coeff (x - (lp_monom c' d)) i = 0\""], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (x - lp_monom c' d) d = 0\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff (x - lp_monom c' d) i = 0", "using f"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (x - lp_monom c' d) d = 0\n  \\<forall>i>d. Abstract_Linear_Poly.coeff x i = 0\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff (x - lp_monom c' d) i = 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff (x - lp_monom c' d) i = 0\n\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff (x - lp_monom c' d) i = 0", "have **: \"dim_poly (x - (lp_monom c' d)) \\<le> d\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff (x - lp_monom c' d) i = 0\n\ngoal (1 subgoal):\n 1. dim_poly (x - lp_monom c' d) \\<le> d", "using dimpoly_all_zero_limit[of d \"(x - (lp_monom c' d))\"]"], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>d. Abstract_Linear_Poly.coeff (x - lp_monom c' d) i = 0\n  (\\<And>i.\n      d \\<le> i \\<Longrightarrow>\n      Abstract_Linear_Poly.coeff (x - lp_monom c' d) i =\n      0) \\<Longrightarrow>\n  dim_poly (x - lp_monom c' d) \\<le> d\n\ngoal (1 subgoal):\n 1. dim_poly (x - lp_monom c' d) \\<le> d", "by auto"], ["proof (state)\nthis:\n  dim_poly (x - lp_monom c' d) \\<le> d\n\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define p' where p': \"p' = x - (lp_monom c' d)\""], ["proof (state)\nthis:\n  p' = x - lp_monom c' d\n\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>p c. dim_poly p \\<le> d \\<and> x = p + lp_monom c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p c. dim_poly p \\<le> d \\<and> x = p + lp_monom c d", "using \"*\" \"**\""], ["proof (prove)\nusing this:\n  x = x - lp_monom c' d + lp_monom c' d\n  dim_poly (x - lp_monom c' d) \\<le> d\n\ngoal (1 subgoal):\n 1. \\<exists>p c. dim_poly p \\<le> d \\<and> x = p + lp_monom c d", "by blast"], ["proof (state)\nthis:\n  \\<exists>p c. dim_poly p \\<le> d \\<and> x = p + lp_monom c d\n\ngoal (1 subgoal):\n 1. (\\<And>p c.\n        \\<lbrakk>dim_poly p \\<le> d; x = p + lp_monom c d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>p c. dim_poly p \\<le> d \\<and> x = p + lp_monom c d", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>p c. dim_poly p \\<le> d \\<and> x = p + lp_monom c d\n\ngoal (1 subgoal):\n 1. thesis", "using * p' c' that"], ["proof (prove)\nusing this:\n  \\<exists>p c. dim_poly p \\<le> d \\<and> x = p + lp_monom c d\n  x = x - lp_monom c' d + lp_monom c' d\n  p' = x - lp_monom c' d\n  c' = Abstract_Linear_Poly.coeff x d\n  \\<lbrakk>dim_poly ?p \\<le> d; x = ?p + lp_monom ?c d\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vars_subset_0_dim_poly:\n  \"vars z \\<subseteq> {0..<dim_poly z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars z \\<subseteq> {0..<dim_poly z}", "by (simp add: finite_vars less_Suc_eq_le subsetI)"], ["", "lemma in_dim_and_not_var_zero: \"x \\<in> {0..<dim_poly z} - vars z \\<Longrightarrow> coeff z x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {0..<dim_poly z} - vars z \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff z x = 0", "using coeff_zero"], ["proof (prove)\nusing this:\n  (Abstract_Linear_Poly.coeff ?p ?x \\<noteq> 0) = (?x \\<in> vars ?p)\n\ngoal (1 subgoal):\n 1. x \\<in> {0..<dim_poly z} - vars z \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff z x = 0", "by auto"], ["", "lemma valuate_with_dim_poly: \"z \\<lbrace> X \\<rbrace> = (\\<Sum>i\\<in>{0..<dim_poly z}. coeff z i * X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<lbrace> X \\<rbrace> =\n    (\\<Sum>i = 0..<dim_poly z. Abstract_Linear_Poly.coeff z i * X i)", "using eval_poly_with_sum_superset[of \"{0..<dim_poly z}\" z X]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {0..<dim_poly z};\n   vars z \\<subseteq> {0..<dim_poly z}\\<rbrakk>\n  \\<Longrightarrow> z \\<lbrace> X \\<rbrace> =\n                    (\\<Sum>x = 0..<dim_poly z.\n                        Abstract_Linear_Poly.coeff z x * X x)\n\ngoal (1 subgoal):\n 1. z \\<lbrace> X \\<rbrace> =\n    (\\<Sum>i = 0..<dim_poly z. Abstract_Linear_Poly.coeff z i * X i)", "using vars_subset_0_dim_poly"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {0..<dim_poly z};\n   vars z \\<subseteq> {0..<dim_poly z}\\<rbrakk>\n  \\<Longrightarrow> z \\<lbrace> X \\<rbrace> =\n                    (\\<Sum>x = 0..<dim_poly z.\n                        Abstract_Linear_Poly.coeff z x * X x)\n  vars ?z \\<subseteq> {0..<dim_poly ?z}\n\ngoal (1 subgoal):\n 1. z \\<lbrace> X \\<rbrace> =\n    (\\<Sum>i = 0..<dim_poly z. Abstract_Linear_Poly.coeff z i * X i)", "by blast"], ["", "lemma lin_poly_to_vec_coeff_access:\n  assumes \"x < dim_poly y\"\n  shows \"(lpoly_to_vec y) $ x = coeff y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lpoly_to_vec y $ x = Abstract_Linear_Poly.coeff y x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lpoly_to_vec y $ x = Abstract_Linear_Poly.coeff y x", "have \"x < dim_vec (lpoly_to_vec y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < dim_vec (lpoly_to_vec y)", "using dim_poly_dim_vec_equiv[of y] assms"], ["proof (prove)\nusing this:\n  dim_vec (lpoly_to_vec y) = dim_poly y\n  x < dim_poly y\n\ngoal (1 subgoal):\n 1. x < dim_vec (lpoly_to_vec y)", "by auto"], ["proof (state)\nthis:\n  x < dim_vec (lpoly_to_vec y)\n\ngoal (1 subgoal):\n 1. lpoly_to_vec y $ x = Abstract_Linear_Poly.coeff y x", "then"], ["proof (chain)\npicking this:\n  x < dim_vec (lpoly_to_vec y)", "show ?thesis"], ["proof (prove)\nusing this:\n  x < dim_vec (lpoly_to_vec y)\n\ngoal (1 subgoal):\n 1. lpoly_to_vec y $ x = Abstract_Linear_Poly.coeff y x", "by (simp add: coeff_def)"], ["proof (state)\nthis:\n  lpoly_to_vec y $ x = Abstract_Linear_Poly.coeff y x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addition_over_lin_poly_to_vec:\n  fixes x y\n  assumes \"a < dim_poly x\"\n  assumes \"dim_poly x = dim_poly y\"\n  shows  \"(lpoly_to_vec x + lpoly_to_vec y) $ a = coeff (x + y) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lpoly_to_vec x + lpoly_to_vec y) $ a =\n    Abstract_Linear_Poly.coeff (x + y) a", "using assms(1) assms(2) lin_poly_to_vec_coeff_access"], ["proof (prove)\nusing this:\n  a < dim_poly x\n  dim_poly x = dim_poly y\n  ?x < dim_poly ?y \\<Longrightarrow>\n  lpoly_to_vec ?y $ ?x = Abstract_Linear_Poly.coeff ?y ?x\n\ngoal (1 subgoal):\n 1. (lpoly_to_vec x + lpoly_to_vec y) $ a =\n    Abstract_Linear_Poly.coeff (x + y) a", "by (simp add: dim_poly_dim_vec_equiv)"], ["", "lemma list_to_lpoly_dim_less: \"length cs \\<ge> dim_poly (list_to_lpoly cs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_poly (list_to_lpoly cs) \\<le> length cs", "using dimpoly_all_zero_limit sum_list_map_upto_coeff_limit"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      ?d \\<le> i \\<Longrightarrow>\n      Abstract_Linear_Poly.coeff ?x i = 0) \\<Longrightarrow>\n  dim_poly ?x \\<le> ?d\n  length ?L \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (list_to_lpoly ?L) ?i = 0\n\ngoal (1 subgoal):\n 1. dim_poly (list_to_lpoly cs) \\<le> length cs", "by blast"], ["", "text \\<open> Transform rational vectors to linear polynomials \\<close>"], ["", "fun vec_to_lpoly where \n  \"vec_to_lpoly rv = list_to_lpoly (list_of_vec rv)\""], ["", "lemma vec_to_lin_poly_coeff_access:\n  assumes \"x < dim_vec y\"           \n  shows \"y $ x = coeff (vec_to_lpoly y) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y $ x = Abstract_Linear_Poly.coeff (vec_to_lpoly y) x", "by (simp add: assms list_to_lpoly_coeff_nth)"], ["", "lemma addition_over_vec_to_lin_poly:\n  fixes x y\n  assumes \"a < dim_vec x\"\n  assumes \"dim_vec x = dim_vec y\"\n  shows  \"(x + y) $ a = coeff (vec_to_lpoly x + vec_to_lpoly y) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y) $ a =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly x + vec_to_lpoly y) a", "using  assms(1) assms(2) coeff_plus index_add_vec(1)"], ["proof (prove)\nusing this:\n  a < dim_vec x\n  dim_vec x = dim_vec y\n  Abstract_Linear_Poly.coeff (?lp1.0 + ?lp2.0) ?var =\n  Abstract_Linear_Poly.coeff ?lp1.0 ?var +\n  Abstract_Linear_Poly.coeff ?lp2.0 ?var\n  ?i < dim_vec ?v\\<^sub>2 \\<Longrightarrow>\n  (?v\\<^sub>1 + ?v\\<^sub>2) $ ?i = ?v\\<^sub>1 $ ?i + ?v\\<^sub>2 $ ?i\n\ngoal (1 subgoal):\n 1. (x + y) $ a =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly x + vec_to_lpoly y) a", "by (metis vec_to_lin_poly_coeff_access)"], ["", "lemma outside_list_coeff0:\n  assumes \"i \\<ge> dim_vec xs\"\n  shows \"coeff (vec_to_lpoly xs) i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly xs) i = 0", "by (simp add: assms sum_list_map_upto_coeff_limit)"], ["", "lemma vec_to_poly_dim_less:\n  \"dim_poly (vec_to_lpoly x) \\<le> dim_vec x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_poly (vec_to_lpoly x) \\<le> dim_vec x", "using list_to_lpoly_dim_less[of \"list_of_vec x\"]"], ["proof (prove)\nusing this:\n  dim_poly (list_to_lpoly (list_of_vec x)) \\<le> length (list_of_vec x)\n\ngoal (1 subgoal):\n 1. dim_poly (vec_to_lpoly x) \\<le> dim_vec x", "by simp"], ["", "lemma vec_to_lpoly_from_lpoly_coeff_dual1: \n  \"coeff (vec_to_lpoly (lpoly_to_vec p)) i = coeff p i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (lpoly_to_vec p)) i =\n    Abstract_Linear_Poly.coeff p i", "by (metis all_greater_dim_poly_zero dim_poly_dim_vec_equiv lin_poly_to_vec_coeff_access\n      not_less outside_list_coeff0 vec_to_lin_poly_coeff_access)"], ["", "lemma vec_to_lpoly_from_lpoly_coeff_dual2:\n  assumes \"i < dim_vec (lpoly_to_vec (vec_to_lpoly v))\" \n  shows \"(lpoly_to_vec (vec_to_lpoly v)) $ i = v $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lpoly_to_vec (vec_to_lpoly v) $ i = v $ i", "by (metis assms dim_poly_dim_vec_equiv less_le_trans lin_poly_to_vec_coeff_access \n      vec_to_lin_poly_coeff_access vec_to_poly_dim_less)"], ["", "lemma vars_subset_dim_vec_to_lpoly_dim: \"vars (vec_to_lpoly v) \\<subseteq> {0..<dim_vec v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly v) \\<subseteq> {0..<dim_vec v}", "by (meson ivl_subset le_numeral_extra(3) order.trans vec_to_poly_dim_less\n      vars_subset_0_dim_poly)"], ["", "lemma sum_dim_vec_equals_sum_dim_poly:\n  shows \"(\\<Sum>a = 0..<dim_vec A. coeff (vec_to_lpoly  A) a * X a) = \n         (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A). coeff (vec_to_lpoly  A) a * X a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "consider (eq) \"dim_vec A = dim_poly (vec_to_lpoly A)\" |\n           (le) \"dim_vec A > dim_poly (vec_to_lpoly A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow> thesis;\n     dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using vec_to_poly_dim_less[of \"A\"]"], ["proof (prove)\nusing this:\n  dim_poly (vec_to_lpoly A) \\<le> dim_vec A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow> thesis;\n     dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow> ?thesis;\n   dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow> ?thesis;\n   dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow> ?thesis;\n   dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n 2. dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "case le"], ["proof (state)\nthis:\n  dim_poly (vec_to_lpoly A) < dim_vec A\n\ngoal (2 subgoals):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n 2. dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "define dp where dp: \"dp = dim_poly (vec_to_lpoly A)\""], ["proof (state)\nthis:\n  dp = dim_poly (vec_to_lpoly A)\n\ngoal (2 subgoals):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n 2. dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "have \"(\\<Sum>a = 0..<dim_vec A. coeff (vec_to_lpoly A) a * X a) = \n          (\\<Sum>a = 0..<dp. coeff (vec_to_lpoly A) a * X a) +\n          (\\<Sum>a = dp..<dim_vec A. coeff (vec_to_lpoly A) a * X a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dp.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) +\n    (\\<Sum>a = dp..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "by (metis (no_types, lifting) dp vec_to_poly_dim_less sum.atLeastLessThan_concat zero_le)"], ["proof (state)\nthis:\n  (\\<Sum>a = 0..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) +\n  (\\<Sum>a = dp..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n\ngoal (2 subgoals):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n 2. dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a = 0..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) +\n  (\\<Sum>a = dp..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n\ngoal (2 subgoals):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n 2. dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "have \"... = (\\<Sum>a = 0..<dp. coeff (vec_to_lpoly A) a * X a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dp.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) +\n    (\\<Sum>a = dp..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "using all_greater_dim_poly_zero"], ["proof (prove)\nusing this:\n  dim_poly ?p \\<le> ?x \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff ?p ?x = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dp.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) +\n    (\\<Sum>a = dp..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "by (simp add: dp)"], ["proof (state)\nthis:\n  (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) +\n  (\\<Sum>a = dp..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n\ngoal (2 subgoals):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n 2. dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) +\n  (\\<Sum>a = dp..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n\ngoal (2 subgoals):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n 2. dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "have \"... = (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).coeff (vec_to_lpoly A) a * X a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dp.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "using dp"], ["proof (prove)\nusing this:\n  dp = dim_poly (vec_to_lpoly A)\n\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dp.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>a = 0..<dp. Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n\ngoal (2 subgoals):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n 2. dim_poly (vec_to_lpoly A) < dim_vec A \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>a = 0..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>a = 0..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>a = 0..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n\ngoal (1 subgoal):\n 1. dim_vec A = dim_poly (vec_to_lpoly A) \\<Longrightarrow>\n    (\\<Sum>a = 0..<dim_vec A.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n    (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)", "qed (auto)"], ["proof (state)\nthis:\n  (\\<Sum>a = 0..<dim_vec A.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a) =\n  (\\<Sum>a = 0..<dim_poly (vec_to_lpoly A).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly A) a * X a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vec_to_lpoly_vNil [simp]: \"vec_to_lpoly vNil = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_to_lpoly vNil = 0", "by (simp add: empty_list_0poly)"], ["", "lemma zero_vector_is_zero_poly: \"coeff (vec_to_lpoly (0\\<^sub>v n)) i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (0\\<^sub>v n)) i = 0", "by (metis index_zero_vec(1) index_zero_vec(2) not_less \n      outside_list_coeff0 vec_to_lin_poly_coeff_access)"], ["", "lemma coeff_nonzero_dim_vec_non_zero:\n  assumes \"coeff (vec_to_lpoly v) i \\<noteq> 0\"\n  shows \"v $ i \\<noteq> 0\" \"i < dim_vec v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v $ i \\<noteq> 0 &&& i < dim_vec v", "apply (metis assms leI outside_list_coeff0 vec_to_lin_poly_coeff_access)"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < dim_vec v", "using assms leI outside_list_coeff0"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) i \\<noteq> 0\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n  dim_vec ?xs \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly ?xs) ?i = 0\n\ngoal (1 subgoal):\n 1. i < dim_vec v", "by blast"], ["", "lemma lpoly_of_v_equals_v_append0: \n  \"vec_to_lpoly v = vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_to_lpoly v = vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vec_to_lpoly v = vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)", "have \"\\<forall>i. coeff ?lhs i = coeff ?rhs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n       Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n       Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n       Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "consider (le) \"i < dim_vec v\" | (ge) \"i \\<ge> dim_vec v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < dim_vec v \\<Longrightarrow> thesis;\n     dim_vec v \\<le> i \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using leI"], ["proof (prove)\nusing this:\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < dim_vec v \\<Longrightarrow> thesis;\n     dim_vec v \\<le> i \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>i < dim_vec v \\<Longrightarrow> ?thesis;\n   dim_vec v \\<le> i \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n       Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i < dim_vec v \\<Longrightarrow> ?thesis;\n   dim_vec v \\<le> i \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"coeff (vec_to_lpoly v) i = coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i < dim_vec v \\<Longrightarrow> ?thesis;\n   dim_vec v \\<le> i \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. i < dim_vec v \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n 2. dim_vec v \\<le> i \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "case le"], ["proof (state)\nthis:\n  i < dim_vec v\n\ngoal (2 subgoals):\n 1. i < dim_vec v \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n 2. dim_vec v \\<le> i \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "then"], ["proof (chain)\npicking this:\n  i < dim_vec v", "show ?thesis"], ["proof (prove)\nusing this:\n  i < dim_vec v\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "using vec_to_lin_poly_coeff_access[of i v] index_append_vec(1)"], ["proof (prove)\nusing this:\n  i < dim_vec v\n  i < dim_vec v \\<Longrightarrow>\n  v $ i = Abstract_Linear_Poly.coeff (vec_to_lpoly v) i\n  ?i < dim_vec ?v + dim_vec ?w \\<Longrightarrow>\n  (?v @\\<^sub>v ?w) $ ?i =\n  (if ?i < dim_vec ?v then ?v $ ?i else ?w $ (?i - dim_vec ?v))\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "by (metis  index_append_vec(2) vec_to_lin_poly_coeff_access trans_less_add1)"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n\ngoal (1 subgoal):\n 1. dim_vec v \\<le> i \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dim_vec v \\<le> i \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "case ge"], ["proof (state)\nthis:\n  dim_vec v \\<le> i\n\ngoal (1 subgoal):\n 1. dim_vec v \\<le> i \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "then"], ["proof (chain)\npicking this:\n  dim_vec v \\<le> i", "have \"coeff (vec_to_lpoly v) i = 0\""], ["proof (prove)\nusing this:\n  dim_vec v \\<le> i\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly v) i = 0", "using outside_list_coeff0"], ["proof (prove)\nusing this:\n  dim_vec v \\<le> i\n  dim_vec ?xs \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly ?xs) ?i = 0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly v) i = 0", "by blast"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) i = 0\n\ngoal (1 subgoal):\n 1. dim_vec v \\<le> i \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "moreover"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) i = 0\n\ngoal (1 subgoal):\n 1. dim_vec v \\<le> i \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "have \"coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i =\n    0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n     i \\<noteq>\n    0 \\<Longrightarrow>\n    False", "assume na: \"\\<not> coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i = 0\""], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n   i \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n     i \\<noteq>\n    0 \\<Longrightarrow>\n    False", "define va where v: \"va = coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\""], ["proof (state)\nthis:\n  va = Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n     i \\<noteq>\n    0 \\<Longrightarrow>\n    False", "have \"i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)", "using coeff_nonzero_dim_vec_non_zero[of \"(v @\\<^sub>v 0\\<^sub>v a)\" i] na"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n   i \\<noteq>\n  0 \\<Longrightarrow>\n  (v @\\<^sub>v 0\\<^sub>v a) $ i \\<noteq> 0\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n   i \\<noteq>\n  0 \\<Longrightarrow>\n  i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n   i \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)", "by blast"], ["proof (state)\nthis:\n  i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n     i \\<noteq>\n    0 \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n     i \\<noteq>\n    0 \\<Longrightarrow>\n    False", "have \"(0\\<^sub>v a) $ (i - dim_vec v) = va\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>v a $ (i - dim_vec v) = va", "by (metis ge diff_is_0_eq' index_append_vec(1) index_append_vec(2) \n              not_less_zero vec_to_lin_poly_coeff_access v zero_less_diff calculation)"], ["proof (state)\nthis:\n  0\\<^sub>v a $ (i - dim_vec v) = va\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n     i \\<noteq>\n    0 \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  0\\<^sub>v a $ (i - dim_vec v) = va\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n     i \\<noteq>\n    0 \\<Longrightarrow>\n    False", "have \"va \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. va \\<noteq> 0", "using v na"], ["proof (prove)\nusing this:\n  va = Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n   i \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. va \\<noteq> 0", "by linarith"], ["proof (state)\nthis:\n  va \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a))\n     i \\<noteq>\n    0 \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)\n  0\\<^sub>v a $ (i - dim_vec v) = va\n  va \\<noteq> 0", "show False"], ["proof (prove)\nusing this:\n  i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)\n  0\\<^sub>v a $ (i - dim_vec v) = va\n  va \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "using ge"], ["proof (prove)\nusing this:\n  i < dim_vec (v @\\<^sub>v 0\\<^sub>v a)\n  0\\<^sub>v a $ (i - dim_vec v) = va\n  va \\<noteq> 0\n  dim_vec v \\<le> i\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i = 0\n\ngoal (1 subgoal):\n 1. dim_vec v \\<le> i \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "then"], ["proof (chain)\npicking this:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i = 0", "show \"coeff (vec_to_lpoly v) i = coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\""], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i = 0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "using  not_less"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i = 0\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "using calculation"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i = 0\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) i = 0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "by linarith"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i.\n     Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n     Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)", "then"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n     Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n     Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)", "using Abstract_Linear_Poly.poly_eqI"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     Abstract_Linear_Poly.coeff (vec_to_lpoly v) i =\n     Abstract_Linear_Poly.coeff (vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)) i\n  (\\<And>v.\n      Abstract_Linear_Poly.coeff ?p v =\n      Abstract_Linear_Poly.coeff ?q v) \\<Longrightarrow>\n  ?p = ?q\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)", "by blast"], ["proof (state)\nthis:\n  vec_to_lpoly v = vec_to_lpoly (v @\\<^sub>v 0\\<^sub>v a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vec_to_lpoly_eval_dot_prod:\n\"(vec_to_lpoly v) \\<lbrace> x \\<rbrace> = v \\<bullet> (vec (dim_vec v) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "have \"(vec_to_lpoly v) \\<lbrace> x \\<rbrace> = (\\<Sum>i\\<in>{0..<dim_vec v}. coeff (vec_to_lpoly v) i * x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> =\n    (\\<Sum>i = 0..<dim_vec v.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly v) i * x i)", "using eval_poly_with_sum_superset[of \"{0..<dim_vec v}\" \"vec_to_lpoly v\" x]\n      vars_subset_dim_vec_to_lpoly_dim"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {0..<dim_vec v};\n   vars (vec_to_lpoly v) \\<subseteq> {0..<dim_vec v}\\<rbrakk>\n  \\<Longrightarrow> vec_to_lpoly v \\<lbrace> x \\<rbrace> =\n                    (\\<Sum>xa = 0..<dim_vec v.\n                        Abstract_Linear_Poly.coeff (vec_to_lpoly v) xa *\n                        x xa)\n  vars (vec_to_lpoly ?v) \\<subseteq> {0..<dim_vec ?v}\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> =\n    (\\<Sum>i = 0..<dim_vec v.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly v) i * x i)", "by blast"], ["proof (state)\nthis:\n  vec_to_lpoly v \\<lbrace> x \\<rbrace> =\n  (\\<Sum>i = 0..<dim_vec v.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly v) i * x i)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "also"], ["proof (state)\nthis:\n  vec_to_lpoly v \\<lbrace> x \\<rbrace> =\n  (\\<Sum>i = 0..<dim_vec v.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly v) i * x i)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "have \"... = (\\<Sum>i\\<in>{0..<dim_vec v}. v$i * x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec v.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly v) i * x i) =\n    (\\<Sum>i = 0..<dim_vec v. v $ i * x i)", "using list_to_lpoly_coeff_nth"], ["proof (prove)\nusing this:\n  ?i < length ?cs \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (list_to_lpoly ?cs) ?i = ?cs ! ?i\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec v.\n        Abstract_Linear_Poly.coeff (vec_to_lpoly v) i * x i) =\n    (\\<Sum>i = 0..<dim_vec v. v $ i * x i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec v.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly v) i * x i) =\n  (\\<Sum>i = 0..<dim_vec v. v $ i * x i)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec v.\n      Abstract_Linear_Poly.coeff (vec_to_lpoly v) i * x i) =\n  (\\<Sum>i = 0..<dim_vec v. v $ i * x i)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "have \"... =  v \\<bullet> (vec (dim_vec v) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec v. v $ i * x i) = v \\<bullet> vec (dim_vec v) x", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec v. v $ i * x i) =\n    (\\<Sum>i = 0..<dim_vec (vec (dim_vec v) x).\n        v $ i * vec (dim_vec v) x $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec v. v $ i * x i) = v \\<bullet> vec (dim_vec v) x\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "finally"], ["proof (chain)\npicking this:\n  vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "show ?thesis"], ["proof (prove)\nusing this:\n  vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x", "."], ["proof (state)\nthis:\n  vec_to_lpoly v \\<lbrace> x \\<rbrace> = v \\<bullet> vec (dim_vec v) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dim_poly_of_append_vec:\n  \"dim_poly (vec_to_lpoly (a@\\<^sub>vb)) \\<le> dim_vec a + dim_vec b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_poly (vec_to_lpoly (a @\\<^sub>v b)) \\<le> dim_vec a + dim_vec b", "using vec_to_poly_dim_less[of \"a@\\<^sub>vb\"] index_append_vec(2)[of a b]"], ["proof (prove)\nusing this:\n  dim_poly (vec_to_lpoly (a @\\<^sub>v b)) \\<le> dim_vec (a @\\<^sub>v b)\n  dim_vec (a @\\<^sub>v b) = dim_vec a + dim_vec b\n\ngoal (1 subgoal):\n 1. dim_poly (vec_to_lpoly (a @\\<^sub>v b)) \\<le> dim_vec a + dim_vec b", "by auto"], ["", "lemma vec_coeff_append1: \"i \\<in> {0..<dim_vec a} \\<Longrightarrow> coeff (vec_to_lpoly (a@\\<^sub>vb)) i = a$i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> {0..<dim_vec a} \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (a @\\<^sub>v b)) i = a $ i", "by (metis atLeastLessThan_iff index_append_vec(1) index_append_vec(2) vec_to_lin_poly_coeff_access trans_less_add1)"], ["", "lemma vec_coeff_append2: \n  \"i \\<in> {dim_vec a..<dim_vec (a@\\<^sub>vb)} \\<Longrightarrow> coeff (vec_to_lpoly (a@\\<^sub>vb)) i = b$(i-dim_vec a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> {dim_vec a..<dim_vec (a @\\<^sub>v b)} \\<Longrightarrow>\n    Abstract_Linear_Poly.coeff (vec_to_lpoly (a @\\<^sub>v b)) i =\n    b $ (i - dim_vec a)", "by (metis atLeastLessThan_iff index_append_vec(1) index_append_vec(2) leD vec_to_lin_poly_coeff_access)"], ["", "text \\<open> Maybe Code Equation \\<close>"], ["", "lemma vec_to_lpoly_poly_of_vec_eq: \"vec_to_lpoly v = poly_of_vec v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "have \"\\<And>i. i < dim_vec v \\<Longrightarrow> coeff (poly_of_vec v) i = v $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec v \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (poly_of_vec v) i = v $ i", "by (simp add: coeff.rep_eq poly_of_vec.rep_eq)"], ["proof (state)\nthis:\n  ?i < dim_vec v \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (poly_of_vec v) ?i = v $ ?i\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "moreover"], ["proof (state)\nthis:\n  ?i < dim_vec v \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (poly_of_vec v) ?i = v $ ?i\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "have \"\\<And>i. i < dim_vec v \\<Longrightarrow> coeff (vec_to_lpoly v) i = v $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec v \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (vec_to_lpoly v) i = v $ i", "by (simp add: vec_to_lin_poly_coeff_access)"], ["proof (state)\nthis:\n  ?i < dim_vec v \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) ?i = v $ ?i\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "moreover"], ["proof (state)\nthis:\n  ?i < dim_vec v \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) ?i = v $ ?i\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "have \"\\<And>i. i \\<ge> dim_vec v \\<Longrightarrow> coeff (poly_of_vec v) i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       dim_vec v \\<le> i \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (poly_of_vec v) i = 0", "by (simp add: coeff.rep_eq poly_of_vec.rep_eq)"], ["proof (state)\nthis:\n  dim_vec v \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (poly_of_vec v) ?i = 0\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "moreover"], ["proof (state)\nthis:\n  dim_vec v \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (poly_of_vec v) ?i = 0\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "have \"\\<And>i. i \\<ge> dim_vec v \\<Longrightarrow> coeff (vec_to_lpoly v) i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       dim_vec v \\<le> i \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (vec_to_lpoly v) i = 0", "using outside_list_coeff0"], ["proof (prove)\nusing this:\n  dim_vec ?xs \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly ?xs) ?i = 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       dim_vec v \\<le> i \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (vec_to_lpoly v) i = 0", "by blast"], ["proof (state)\nthis:\n  dim_vec v \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) ?i = 0\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "ultimately"], ["proof (chain)\npicking this:\n  ?i < dim_vec v \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (poly_of_vec v) ?i = v $ ?i\n  ?i < dim_vec v \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) ?i = v $ ?i\n  dim_vec v \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (poly_of_vec v) ?i = 0\n  dim_vec v \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) ?i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  ?i < dim_vec v \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (poly_of_vec v) ?i = v $ ?i\n  ?i < dim_vec v \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) ?i = v $ ?i\n  dim_vec v \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (poly_of_vec v) ?i = 0\n  dim_vec v \\<le> ?i \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly v) ?i = 0\n\ngoal (1 subgoal):\n 1. vec_to_lpoly v = poly_of_vec v", "by (metis Abstract_Linear_Poly.poly_eq_iff le_less_linear)"], ["proof (state)\nthis:\n  vec_to_lpoly v = poly_of_vec v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vars_vec_append_subset: \"vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) \\<subseteq> {n..<n+dim_vec v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {n..<n + dim_vec v}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {n..<n + dim_vec v}", "let ?p = \"(vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\""], ["proof (state)\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {n..<n + dim_vec v}", "have \"dim_poly ?p \\<le> n+dim_vec v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_poly (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) \\<le> n + dim_vec v", "using dim_poly_of_append_vec[of \"0\\<^sub>v n\" \"v\"]"], ["proof (prove)\nusing this:\n  dim_poly (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n  \\<le> dim_vec (0\\<^sub>v n) + dim_vec v\n\ngoal (1 subgoal):\n 1. dim_poly (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) \\<le> n + dim_vec v", "by auto"], ["proof (state)\nthis:\n  dim_poly (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) \\<le> n + dim_vec v\n\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {n..<n + dim_vec v}", "have \"vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) \\<subseteq> {0..<n+dim_vec v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {0..<n + dim_vec v}", "using vars_subset_dim_vec_to_lpoly_dim[of \"(0\\<^sub>v n @\\<^sub>v v)\"]"], ["proof (prove)\nusing this:\n  vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n  \\<subseteq> {0..<dim_vec (0\\<^sub>v n @\\<^sub>v v)}\n\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {0..<n + dim_vec v}", "by auto"], ["proof (state)\nthis:\n  vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n  \\<subseteq> {0..<n + dim_vec v}\n\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {n..<n + dim_vec v}", "moreover"], ["proof (state)\nthis:\n  vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n  \\<subseteq> {0..<n + dim_vec v}\n\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {n..<n + dim_vec v}", "have \"\\<forall>i < n. coeff ?p i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<n.\n       Abstract_Linear_Poly.coeff (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n        i =\n       0", "using vec_coeff_append1[of _ \"0\\<^sub>v n\" v]"], ["proof (prove)\nusing this:\n  ?i \\<in> {0..<dim_vec (0\\<^sub>v n)} \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) ?i =\n  0\\<^sub>v n $ ?i\n\ngoal (1 subgoal):\n 1. \\<forall>i<n.\n       Abstract_Linear_Poly.coeff (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n        i =\n       0", "by auto"], ["proof (state)\nthis:\n  \\<forall>i<n.\n     Abstract_Linear_Poly.coeff (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) i =\n     0\n\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {n..<n + dim_vec v}", "ultimately"], ["proof (chain)\npicking this:\n  vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n  \\<subseteq> {0..<n + dim_vec v}\n  \\<forall>i<n.\n     Abstract_Linear_Poly.coeff (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) i =\n     0", "show \"vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) \\<subseteq> {n..<n+dim_vec v}\""], ["proof (prove)\nusing this:\n  vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n  \\<subseteq> {0..<n + dim_vec v}\n  \\<forall>i<n.\n     Abstract_Linear_Poly.coeff (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v)) i =\n     0\n\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n    \\<subseteq> {n..<n + dim_vec v}", "by (meson atLeastLessThan_iff coeff_zero not_le subsetCE subsetI)"], ["proof (state)\nthis:\n  vars (vec_to_lpoly (0\\<^sub>v n @\\<^sub>v v))\n  \\<subseteq> {n..<n + dim_vec v}\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open> Matrices \\<close>"], ["", "(* \\<open> From \\<open> mat \\<close> to \\<open> linear_poly list \\<close>  *)"], ["", "fun matrix_to_lpolies where\n  \"matrix_to_lpolies A = map vec_to_lpoly (rows A)\""], ["", "lemma matrix_to_lpolies_vec_of_row: \n  \"i <dim_row A \\<Longrightarrow> matrix_to_lpolies A ! i = vec_to_lpoly (row A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < dim_row A \\<Longrightarrow>\n    matrix_to_lpolies A ! i = vec_to_lpoly (row A i)", "using matrix_to_lpolies.simps[of A]"], ["proof (prove)\nusing this:\n  matrix_to_lpolies A = map vec_to_lpoly (rows A)\n\ngoal (1 subgoal):\n 1. i < dim_row A \\<Longrightarrow>\n    matrix_to_lpolies A ! i = vec_to_lpoly (row A i)", "by simp"], ["", "lemma outside_of_col_range_is_0:\n  assumes \"i < dim_row A\" and \"j \\<ge> dim_col A\"\n  shows \"coeff ((matrix_to_lpolies A)!i) j = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j = 0", "using outside_list_coeff0[of \"col A i\" j]"], ["proof (prove)\nusing this:\n  dim_vec (col A i) \\<le> j \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly (col A i)) j = 0\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j = 0", "by (metis assms(1) assms(2) index_row(2) length_rows matrix_to_lpolies.simps nth_map nth_rows outside_list_coeff0)"], ["", "lemma polys_greater_col_zero:\n  assumes \"x \\<in> set (matrix_to_lpolies A)\"\n  assumes \"j \\<ge> dim_col A\"\n  shows \"coeff x j = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff x j = 0", "using  assms(1) assms(2) outside_of_col_range_is_0[of _ A j] \n    assms(2) matrix_to_lpolies.simps"], ["proof (prove)\nusing this:\n  x \\<in> set (matrix_to_lpolies A)\n  dim_col A \\<le> j\n  \\<lbrakk>?i < dim_row A; dim_col A \\<le> j\\<rbrakk>\n  \\<Longrightarrow> Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! ?i)\n                     j =\n                    0\n  dim_col A \\<le> j\n  matrix_to_lpolies ?A = map vec_to_lpoly (rows ?A)\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff x j = 0", "by (metis in_set_conv_nth length_map length_rows)"], ["", "lemma matrix_to_lp_vec_to_lpoly_row [simp]:\n  assumes \"i < dim_row A\"\n  shows \"(matrix_to_lpolies A)!i = vec_to_lpoly (row A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matrix_to_lpolies A ! i = vec_to_lpoly (row A i)", "by (simp add: assms)"], ["", "lemma matrix_to_lpolies_coeff_access: \n  assumes \"i < dim_row A\" and \"j < dim_col A\"\n  shows \"coeff (matrix_to_lpolies A ! i) j = A $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j = A $$ (i, j)", "using matrix_to_lp_vec_to_lpoly_row[of i A, OF assms(1)]"], ["proof (prove)\nusing this:\n  matrix_to_lpolies A ! i = vec_to_lpoly (row A i)\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j = A $$ (i, j)", "by (metis assms(1) assms(2) index_row(1) index_row(2) vec_to_lin_poly_coeff_access)"], ["", "text \\<open> From linear polynomial list to matrix \\<close>"], ["", "definition lin_polies_to_mat where\n    \"lin_polies_to_mat lst = mat (length lst) (max_dim_poly_list lst) (\\<lambda>(x,y).coeff (lst!x) y)\""], ["", "lemma lin_polies_to_rat_mat_coeff_index: \n  assumes \"i < length L\" and \"j <  (max_dim_poly_list L)\"\n  shows \"coeff (L ! i) j = (lin_polies_to_mat L) $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (L ! i) j = lin_polies_to_mat L $$ (i, j)", "unfolding lin_polies_to_mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.coeff (L ! i) j =\n    mat (length L) (max_dim_poly_list L)\n     (\\<lambda>(x, y). Abstract_Linear_Poly.coeff (L ! x) y) $$\n    (i, j)", "by (simp add: assms(1) assms(2))"], ["", "lemma vec_to_lpoly_valuate_equiv_dot_prod:\n  assumes \"dim_vec y = dim_vec x\"  (* Can be \\<ge> *)\n  shows \"(vec_to_lpoly y) \\<lbrace> ($)x \\<rbrace> = y \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "let ?p = \"vec_to_lpoly y\""], ["proof (state)\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "have 2: \"?p\\<lbrace> ($)x \\<rbrace> = (\\<Sum>j\\<in>vars?p. coeff ?p j * x$j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n    (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n       Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j)", "using eval_poly_with_sum[of ?p \"($)x\"]"], ["proof (prove)\nusing this:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n  (\\<Sum>xa\\<in>vars (vec_to_lpoly y).\n     Abstract_Linear_Poly.coeff (vec_to_lpoly y) xa * x $ xa)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n    (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n       Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j)", "by blast"], ["proof (state)\nthis:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n  (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n     Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "have \"vars ?p \\<subseteq> {0..<dim_vec y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly y) \\<subseteq> {0..<dim_vec y}", "using vars_subset_dim_vec_to_lpoly_dim"], ["proof (prove)\nusing this:\n  vars (vec_to_lpoly ?v) \\<subseteq> {0..<dim_vec ?v}\n\ngoal (1 subgoal):\n 1. vars (vec_to_lpoly y) \\<subseteq> {0..<dim_vec y}", "by blast"], ["proof (state)\nthis:\n  vars (vec_to_lpoly y) \\<subseteq> {0..<dim_vec y}\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "have 2: \"?p\\<lbrace> ($)x \\<rbrace> = (\\<Sum>j\\<in>vars?p. coeff ?p j * x$j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n    (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n       Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j)", "using eval_poly_with_sum[of ?p \"($)x\"]"], ["proof (prove)\nusing this:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n  (\\<Sum>xa\\<in>vars (vec_to_lpoly y).\n     Abstract_Linear_Poly.coeff (vec_to_lpoly y) xa * x $ xa)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n    (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n       Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j)", "by blast"], ["proof (state)\nthis:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n  (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n     Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "also"], ["proof (state)\nthis:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n  (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n     Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "have *: \"... = (\\<Sum>i\\<in>{0..<dim_poly ?p}. coeff ?p i * x$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n       Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j) =\n    (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i)", "using valuate_with_dim_poly"], ["proof (prove)\nusing this:\n  ?z \\<lbrace> ?X \\<rbrace> =\n  (\\<Sum>i = 0..<dim_poly ?z. Abstract_Linear_Poly.coeff ?z i * ?X i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n       Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j) =\n    (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i)", "by (metis (no_types, lifting) calculation sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n     Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j) =\n  (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>vars (vec_to_lpoly y).\n     Abstract_Linear_Poly.coeff (vec_to_lpoly y) j * x $ j) =\n  (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "have \"... = y \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i) =\n    y \\<bullet> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i) =\n    y \\<bullet> x", "have \"\\<And>j. j < dim_vec x \\<Longrightarrow> coeff (vec_to_lpoly y) j = y $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < dim_vec x \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (vec_to_lpoly y) j = y $ j", "using assms vec_to_lin_poly_coeff_access"], ["proof (prove)\nusing this:\n  dim_vec y = dim_vec x\n  ?x < dim_vec ?y \\<Longrightarrow>\n  ?y $ ?x = Abstract_Linear_Poly.coeff (vec_to_lpoly ?y) ?x\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < dim_vec x \\<Longrightarrow>\n       Abstract_Linear_Poly.coeff (vec_to_lpoly y) j = y $ j", "by auto"], ["proof (state)\nthis:\n  ?j < dim_vec x \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly y) ?j = y $ ?j\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i) =\n    y \\<bullet> x", "then"], ["proof (chain)\npicking this:\n  ?j < dim_vec x \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly y) ?j = y $ ?j", "show ?thesis"], ["proof (prove)\nusing this:\n  ?j < dim_vec x \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly y) ?j = y $ ?j\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i) =\n    y \\<bullet> x", "using vec_to_lpoly_eval_dot_prod[of \"y\" \"($)x\"]"], ["proof (prove)\nusing this:\n  ?j < dim_vec x \\<Longrightarrow>\n  Abstract_Linear_Poly.coeff (vec_to_lpoly y) ?j = y $ ?j\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n  y \\<bullet> vec (dim_vec y) (($) x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n        Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i) =\n    y \\<bullet> x", "by (metis assms calculation dim_vec index_vec vec_eq_iff)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i) =\n  y \\<bullet> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_poly (vec_to_lpoly y).\n      Abstract_Linear_Poly.coeff (vec_to_lpoly y) i * x $ i) =\n  y \\<bullet> x\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "finally"], ["proof (chain)\npicking this:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "show ?thesis"], ["proof (prove)\nusing this:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x", "unfolding scalar_prod_def"], ["proof (prove)\nusing this:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n  (\\<Sum>i = 0..<dim_vec x. y $ i * x $ i)\n\ngoal (1 subgoal):\n 1. vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> =\n    (\\<Sum>i = 0..<dim_vec x. y $ i * x $ i)", "."], ["proof (state)\nthis:\n  vec_to_lpoly y \\<lbrace> ($) x \\<rbrace> = y \\<bullet> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matrix_to_lpolies_valuate_scalarP:\n  assumes \"i < dim_row A\"\nassumes \"dim_col A = dim_vec x\"\nshows \"(matrix_to_lpolies A!i) \\<lbrace> ($)x \\<rbrace> = (row A i) \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace> = row A i \\<bullet> x", "using vec_to_lpoly_valuate_equiv_dot_prod[of \"row A i\" x]"], ["proof (prove)\nusing this:\n  dim_vec (row A i) = dim_vec x \\<Longrightarrow>\n  vec_to_lpoly (row A i) \\<lbrace> ($) x \\<rbrace> = row A i \\<bullet> x\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace> = row A i \\<bullet> x", "by (simp add: assms(1) assms(2))"], ["", "lemma matrix_to_lpolies_lambda_valuate_scalarP:\n  assumes \"i < dim_row A\"\n  assumes \"dim_col A = dim_vec x\"\nshows \"(matrix_to_lpolies A!i) \\<lbrace> (\\<lambda>i. (if i < dim_vec x then x$i else 0)) \\<rbrace> = (row A i) \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "have \"\\<And>j. j < dim_vec x \\<Longrightarrow> x$j = (\\<lambda>i. (if i < dim_vec x then x$i else 0)) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < dim_vec x \\<Longrightarrow>\n       x $ j = (if j < dim_vec x then x $ j else 0)", "by simp"], ["proof (state)\nthis:\n  ?j < dim_vec x \\<Longrightarrow>\n  x $ ?j = (if ?j < dim_vec x then x $ ?j else 0)\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "let ?p = \"(matrix_to_lpolies A!i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "have \"\\<And>j. coeff (matrix_to_lpolies A!i) j \\<noteq> 0 \\<Longrightarrow> j < dim_vec x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j \\<noteq>\n       0 \\<Longrightarrow>\n       j < dim_vec x", "using outside_of_col_range_is_0[of i A] assms(1) assms(2) leI"], ["proof (prove)\nusing this:\n  \\<lbrakk>i < dim_row A; dim_col A \\<le> ?j\\<rbrakk>\n  \\<Longrightarrow> Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i)\n                     ?j =\n                    0\n  i < dim_row A\n  dim_col A = dim_vec x\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j \\<noteq>\n       0 \\<Longrightarrow>\n       j < dim_vec x", "by auto"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) ?j \\<noteq>\n  0 \\<Longrightarrow>\n  ?j < dim_vec x\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "then"], ["proof (chain)\npicking this:\n  Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) ?j \\<noteq>\n  0 \\<Longrightarrow>\n  ?j < dim_vec x", "have subs: \"vars ?p \\<subseteq> {0..<dim_vec x}\""], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) ?j \\<noteq>\n  0 \\<Longrightarrow>\n  ?j < dim_vec x\n\ngoal (1 subgoal):\n 1. vars (matrix_to_lpolies A ! i) \\<subseteq> {0..<dim_vec x}", "using \\<open>\\<And>j. Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j \\<noteq> 0 \\<Longrightarrow> j < dim_vec x\\<close> atLeastLessThan_iff coeff_zero"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) ?j \\<noteq>\n  0 \\<Longrightarrow>\n  ?j < dim_vec x\n  Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) ?j \\<noteq>\n  0 \\<Longrightarrow>\n  ?j < dim_vec x\n  (?i \\<in> {?l..<?u}) = (?l \\<le> ?i \\<and> ?i < ?u)\n  (Abstract_Linear_Poly.coeff ?p ?x \\<noteq> 0) = (?x \\<in> vars ?p)\n\ngoal (1 subgoal):\n 1. vars (matrix_to_lpolies A ! i) \\<subseteq> {0..<dim_vec x}", "by blast"], ["proof (state)\nthis:\n  vars (matrix_to_lpolies A ! i) \\<subseteq> {0..<dim_vec x}\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "then"], ["proof (chain)\npicking this:\n  vars (matrix_to_lpolies A ! i) \\<subseteq> {0..<dim_vec x}", "have *: \"\\<And>j. j \\<in> vars ?p \\<Longrightarrow> x$j = (\\<lambda>i. (if i < dim_vec x then x$i else 0)) j\""], ["proof (prove)\nusing this:\n  vars (matrix_to_lpolies A ! i) \\<subseteq> {0..<dim_vec x}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> vars (matrix_to_lpolies A ! i) \\<Longrightarrow>\n       x $ j = (if j < dim_vec x then x $ j else 0)", "by (simp add: \\<open>\\<And>j. Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j \\<noteq> 0 \\<Longrightarrow> j < dim_vec x\\<close> coeff_zero)"], ["proof (state)\nthis:\n  ?j \\<in> vars (matrix_to_lpolies A ! i) \\<Longrightarrow>\n  x $ ?j = (if ?j < dim_vec x then x $ ?j else 0)\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "have \"row A i \\<bullet> x = (?p \\<lbrace> ($) x \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row A i \\<bullet> x = matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace>", "using assms(1) assms(2) matrix_to_lpolies_valuate_scalarP[of i A x]"], ["proof (prove)\nusing this:\n  i < dim_row A\n  dim_col A = dim_vec x\n  \\<lbrakk>i < dim_row A; dim_col A = dim_vec x\\<rbrakk>\n  \\<Longrightarrow> matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace> =\n                    row A i \\<bullet> x\n\ngoal (1 subgoal):\n 1. row A i \\<bullet> x = matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace>", "by linarith"], ["proof (state)\nthis:\n  row A i \\<bullet> x = matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace>\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "also"], ["proof (state)\nthis:\n  row A i \\<bullet> x = matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace>\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "have \"... = (\\<Sum>j\\<in> vars ?p. coeff ?p j * x$j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace> =\n    (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n       Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j * x $ j)", "using eval_poly_with_sum"], ["proof (prove)\nusing this:\n  ?v \\<lbrace> ?X \\<rbrace> =\n  (\\<Sum>x\\<in>vars ?v. Abstract_Linear_Poly.coeff ?v x * ?X x)\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace> =\n    (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n       Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j * x $ j)", "by blast"], ["proof (state)\nthis:\n  matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace> =\n  (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n     Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j * x $ j)\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "also"], ["proof (state)\nthis:\n  matrix_to_lpolies A ! i \\<lbrace> ($) x \\<rbrace> =\n  (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n     Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j * x $ j)\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "have \"... = (\\<Sum>j\\<in> vars ?p. coeff ?p j * (\\<lambda>i. (if i < dim_vec x then x$i else 0)) j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n       Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j * x $ j) =\n    (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n       Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j *\n       (if j < dim_vec x then x $ j else 0))", "by (metis (full_types, hide_lams) \\<open>\\<And>j. Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j \\<noteq> 0 \\<Longrightarrow> j < dim_vec x\\<close> mult.commute mult_zero_right)"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n     Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j * x $ j) =\n  (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n     Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j *\n     (if j < dim_vec x then x $ j else 0))\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n     Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j * x $ j) =\n  (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n     Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j *\n     (if j < dim_vec x then x $ j else 0))\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "have \"... = (?p \\<lbrace> (\\<lambda>i. (if i < dim_vec x then x$i else 0)) \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n       Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j *\n       (if j < dim_vec x then x $ j else 0)) =\n    matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace>", "using eval_poly_with_sum"], ["proof (prove)\nusing this:\n  ?v \\<lbrace> ?X \\<rbrace> =\n  (\\<Sum>x\\<in>vars ?v. Abstract_Linear_Poly.coeff ?v x * ?X x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n       Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j *\n       (if j < dim_vec x then x $ j else 0)) =\n    matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace>", "by presburger"], ["proof (state)\nthis:\n  (\\<Sum>j\\<in>vars (matrix_to_lpolies A ! i).\n     Abstract_Linear_Poly.coeff (matrix_to_lpolies A ! i) j *\n     (if j < dim_vec x then x $ j else 0)) =\n  matrix_to_lpolies A !\n  i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace>\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "finally"], ["proof (chain)\npicking this:\n  row A i \\<bullet> x =\n  matrix_to_lpolies A !\n  i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace>", "show ?thesis"], ["proof (prove)\nusing this:\n  row A i \\<bullet> x =\n  matrix_to_lpolies A !\n  i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace>\n\ngoal (1 subgoal):\n 1. matrix_to_lpolies A !\n    i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n    row A i \\<bullet> x", "by linarith"], ["proof (state)\nthis:\n  matrix_to_lpolies A !\n  i \\<lbrace> \\<lambda>i. if i < dim_vec x then x $ i else 0 \\<rbrace> =\n  row A i \\<bullet> x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}