{"file_name": "/home/qj213/afp-2021-10-22/thys/Linear_Programming/More_Jordan_Normal_Forms.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Linear_Programming", "problem_names": ["lemma set_comprehension_list_comprehension:\n  \"set [f i . i <- [x..<a]] = {f i |i. i \\<in> {x..<a}}\"", "lemma in_second_append_list: \"i\\<ge> length a \\<Longrightarrow> i < length (a@b) \\<Longrightarrow> (a@b)!i \\<in> set b\"", "lemma split_four_block_dual_fst_lst:\n  assumes \"split_block (four_block_mat A B C D) (dim_row A) (dim_col A) = (U, X, Y, V)\"\n  shows \"U = A\" \"V = D\"", "lemma append_split_vec_distrib_scalar_prod:\n  assumes \"dim_vec (u @\\<^sub>v w) = dim_vec x\" \n  shows \"(u @\\<^sub>v w) \\<bullet> x = u \\<bullet> (vec_first x (dim_vec u)) + w \\<bullet> (vec_last x (dim_vec w))\"", "lemma append_dot_product_split:\n  assumes \"dim_vec (u @\\<^sub>v w) = dim_vec x\" \n  shows \"(u @\\<^sub>v w) \\<bullet> x = (\\<Sum>i\\<in>{0..< dim_vec u}. u$i * x$i) + (\\<Sum>i\\<in>{0..< dim_vec w}. w$i * x$(i + dim_vec u))\"", "lemma assoc_scalar_prod_mult_mat_vec:\n  fixes A :: \"'a::comm_semiring_1 mat\"\n  assumes \"y \\<in> carrier_vec n\"\n  assumes \"x \\<in> carrier_vec m\"\n  assumes \"A \\<in> carrier_mat n m\"\n  shows \"(A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\"", "lemma elem_in_singleton [simp]: \"[a]\\<^sub>v $ 0 = a\"", "lemma elem_in_singleton_append [simp]: \"(x @\\<^sub>v [a]\\<^sub>v) $ dim_vec x = a\"", "lemma vector_cases_append:\n  fixes x :: \"'a vec\"\n  shows \"x = vNil \\<or> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)\"", "lemma vec_rev_induct [case_names vNil append, induct type: vec]:\n  assumes \"P vNil\" and \"\\<And>a v. P v \\<Longrightarrow> P (v @\\<^sub>v [a]\\<^sub>v)\"\n  shows \"P v\"", "lemma singleton_append_dotP:\n  assumes \"dim_vec z = dim_vec y + 1\"\n  shows \"(y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z = (\\<Sum>i\\<in>{0..<dim_vec y}. y $ i * z $ i) + x * z $ dim_vec y\"", "lemma map_vec_append: \"map_vec f (a @\\<^sub>v b) = map_vec f a @\\<^sub>v map_vec f b\"", "lemma map_mat_map_vec:\n  assumes \"i < dim_row P\"\n  shows \"row (map_mat f P) i = map_vec f (row P i)\"", "lemma append_rows_access1 [simp]:\n  assumes \"i < dim_row A\"\n  assumes \"dim_col A = dim_col B\"\n  shows \"row (A @\\<^sub>r B) i = row A i\"", "lemma append_rows_access2 [simp]:\n  assumes \"i \\<ge> dim_row A\"\n  assumes \"i < dim_row A + dim_row B\"\n  assumes \"dim_col A = dim_col B\"\n  shows \"row (A @\\<^sub>r B) i = row B (i - dim_row A)\"", "lemma append_singleton_access [simp]: \"(Matrix.vec n f @\\<^sub>v [r]\\<^sub>v) $ n = r\"", "lemma mat_append_col_dims:\n  shows \"mat_append_col A b \\<in> carrier_mat (dim_row A) (dim_col A + 1)\"", "lemma mat_append_row_dims:\n  shows \"mat_append_row A c \\<in> carrier_mat (dim_row A + 1) (dim_col A)\"", "lemma mat_append_col_col:\n  assumes \"dim_row A = dim_vec b\" \n  shows \"col (mat_append_col A b) (dim_col A) = b\"", "lemma mat_append_col_vec_index:\n  assumes \"i < dim_row A\"\n    and \"dim_row A = dim_vec b\"\n  shows \"(row (mat_append_col A b) i) $ (dim_col A) = b $ i\"", "lemma mat_append_row_row:\n  assumes \"dim_col A = dim_vec c\" \n  shows \"row (mat_append_row A c) (dim_row A) = c\"", "lemma mat_append_row_in_mat:\n  assumes \"i < dim_row A\"\n  shows \"row (mat_append_row A r) i = row A i\"", "lemma mat_append_row_vec_index:\n  assumes \"i < dim_col A\"\n    and \"dim_col A = dim_vec b\"\n  shows \"vec_index (col (mat_append_row A b) i) (dim_row A) = vec_index b i\"", "lemma mat_append_col_access_in_mat:\n  assumes \"dim_row A = dim_vec b\"\n   and \"i < dim_row A\"\n    and \"j < dim_col A\"\n  shows \"(row (mat_append_col A b) i) $ j = (row A i) $ j\"", "lemma constructing_append_col_row: \n  assumes \"i < dim_row A\"\n    and \"dim_row A = dim_vec b\"\n  shows \"row (mat_append_col A b) i = row A i @\\<^sub>v [vec_index b i]\\<^sub>v\"", "lemma one_element_vec_carrier: \"one_element_vec n e \\<in> carrier_vec n\"", "lemma one_element_vec_dim [simp]: \"dim_vec (one_element_vec n (r::rat)) = n\"", "lemma one_element_vec_access [simp]: \"\\<And>i. i < n \\<Longrightarrow> vec_index (one_element_vec n e) i = e\"", "lemma single_nz_val_carrier: \"single_nz_val n i v \\<in> carrier_vec n\"", "lemma single_nz_val_access1 [simp]: \"i < n \\<Longrightarrow> single_nz_val n i v $ i = v\"", "lemma single_nz_val_access2 [simp]: \"i < n \\<Longrightarrow> j < n \\<Longrightarrow> i \\<noteq> j\\<Longrightarrow> single_nz_val n i v $ j = 0\"", "lemma \"i < n \\<Longrightarrow> (v \\<cdot>\\<^sub>v unit_vec n i) $ i = (v::'a::{monoid_mult,times,zero_neq_one})\"", "lemma single_nz_val_unit_vec: \n  fixes v::\"'a::{monoid_mult,times,zero_neq_one,mult_zero}\"\n  shows \"v \\<cdot>\\<^sub>v (unit_vec n i) = single_nz_val n i v\"", "lemma single_nz_valI [intro]:\n  fixes v i val\n  assumes \"\\<And>j. j < dim_vec v \\<Longrightarrow> j \\<noteq> i \\<Longrightarrow> v$j = 0\"\n  assumes \"v$i = val\"\n  shows \"v = single_nz_val (dim_vec v) i val\"", "lemma single_nz_val_dotP:\n  assumes \"i < n\"\n  assumes \"dim_vec x = n\"\n  shows \"single_nz_val n i v \\<bullet> x = v * x $ i\"", "lemma single_nz_zero_singleton: \"single_nz_val 1 0 v = [v]\\<^sub>v\"", "lemma append_one_elem_zero_dotP:\n  assumes \"dim_vec u = m\" \n    and \"dim_vec x = n\"\n  shows \"(one_element_vec n e @\\<^sub>v (0\\<^sub>v m)) \\<bullet> (x @\\<^sub>v u) = (\\<Sum>i\\<in>{0 ..< dim_vec x}. e * x $ i)\"", "lemma one_element_vec_dotP:\n  assumes \"dim_vec x = n\"\n  shows \"(one_element_vec n e) \\<bullet> x = (\\<Sum>i\\<in>{0 ..< dim_vec x}. e * x $ i)\"", "lemma singleton_dotP [simp]: \"dim_vec x = 1 \\<Longrightarrow> [v]\\<^sub>v \\<bullet> x = v * x$0\"", "lemma singletons_dotP [simp]: \"[v]\\<^sub>v \\<bullet> [w]\\<^sub>v = v * w\"", "lemma singleton_appends_dotP [simp]: \"dim_vec x = dim_vec y \\<Longrightarrow> (x @\\<^sub>v [v]\\<^sub>v) \\<bullet> (y @\\<^sub>v [w]\\<^sub>v) = x \\<bullet> y + v * w\""], "translations": [["", "lemma set_comprehension_list_comprehension:\n  \"set [f i . i <- [x..<a]] = {f i |i. i \\<in> {x..<a}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map f [x..<a]) = {f i |i. i \\<in> {x..<a}}", "by (simp) (fastforce)"], ["", "lemma in_second_append_list: \"i\\<ge> length a \\<Longrightarrow> i < length (a@b) \\<Longrightarrow> (a@b)!i \\<in> set b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length a \\<le> i; i < length (a @ b)\\<rbrakk>\n    \\<Longrightarrow> (a @ b) ! i \\<in> set b", "by (metis diff_add_inverse diff_less_mono in_set_conv_nth leD length_append nth_append)"], ["", "section \\<open> General Theorems used later, that could be moved \\<close>"], ["", "lemma split_four_block_dual_fst_lst:\n  assumes \"split_block (four_block_mat A B C D) (dim_row A) (dim_col A) = (U, X, Y, V)\"\n  shows \"U = A\" \"V = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U = A &&& V = D", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "define nr where nr: \"nr = dim_row (four_block_mat A B C D)\""], ["proof (state)\nthis:\n  nr = dim_row (four_block_mat A B C D)\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "define nc where nc: \"nc = dim_col (four_block_mat A B C D)\""], ["proof (state)\nthis:\n  nc = dim_col (four_block_mat A B C D)\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "define nr2 where nr2: \"nr2 = nr - dim_row A\""], ["proof (state)\nthis:\n  nr2 = nr - dim_row A\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "define nc2 where nc2: \"nc2 = nc - dim_col A\""], ["proof (state)\nthis:\n  nc2 = nc - dim_col A\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "define A1 where A1: \"A1 = mat (dim_row A) (dim_col A) (($$) (four_block_mat A B C D))\""], ["proof (state)\nthis:\n  A1 = mat (dim_row A) (dim_col A) (($$) (four_block_mat A B C D))\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "define A2 where A2: \"A2 = mat (dim_row A) nc2 (\\<lambda>(i, j). (four_block_mat A B C D) $$ (i, j + dim_col A))\""], ["proof (state)\nthis:\n  A2 =\n  mat (dim_row A) nc2\n   (\\<lambda>(i, j). four_block_mat A B C D $$ (i, j + dim_col A))\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "define A3 where A3: \"A3 = mat nr2 (dim_col A) (\\<lambda>(i, j). (four_block_mat A B C D) $$ (i + dim_row A, j))\""], ["proof (state)\nthis:\n  A3 =\n  mat nr2 (dim_col A)\n   (\\<lambda>(i, j). four_block_mat A B C D $$ (i + dim_row A, j))\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "define A4 where A4: \"A4 = mat nr2 nc2 (\\<lambda>(i, j). (four_block_mat A B C D) $$ (i + dim_row A, j + dim_col A))\""], ["proof (state)\nthis:\n  A4 =\n  mat nr2 nc2\n   (\\<lambda>(i, j).\n       four_block_mat A B C D $$ (i + dim_row A, j + dim_col A))\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "have g: \"split_block (four_block_mat A B C D) (dim_row A) (dim_col A) = (A1, A2, A3, A4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n    (A1, A2, A3, A4)", "using split_block_def[of \"(four_block_mat A B C D)\" \"(dim_row A)\" \"(dim_col A)\"]"], ["proof (prove)\nusing this:\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (let nr = dim_row (four_block_mat A B C D);\n       nc = dim_col (four_block_mat A B C D); nr2 = nr - dim_row A;\n       nc2 = nc - dim_col A;\n       A1 = mat (dim_row A) (dim_col A) (($$) (four_block_mat A B C D));\n       A2 = mat (dim_row A) nc2\n             (\\<lambda>(i, j).\n                 four_block_mat A B C D $$ (i, j + dim_col A));\n       A3 = mat nr2 (dim_col A)\n             (\\<lambda>(i, j).\n                 four_block_mat A B C D $$ (i + dim_row A, j));\n       A4 = mat nr2 nc2\n             (\\<lambda>(i, j).\n                 four_block_mat A B C D $$ (i + dim_row A, j + dim_col A))\n   in (A1, A2, A3, A4))\n\ngoal (1 subgoal):\n 1. split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n    (A1, A2, A3, A4)", "by (metis A1 A2 A3 A4 nc nc2 nr nr2)"], ["proof (state)\nthis:\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (A1, A2, A3, A4)\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "have D: \"D = A4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D = A4", "using A4"], ["proof (prove)\nusing this:\n  A4 =\n  mat nr2 nc2\n   (\\<lambda>(i, j).\n       four_block_mat A B C D $$ (i + dim_row A, j + dim_col A))\n\ngoal (1 subgoal):\n 1. D = A4", "by (auto) (standard, (simp add:  nr nr2 nc nc2)+)"], ["proof (state)\nthis:\n  D = A4\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "have \"A = A1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = A1", "using A1"], ["proof (prove)\nusing this:\n  A1 = mat (dim_row A) (dim_col A) (($$) (four_block_mat A B C D))\n\ngoal (1 subgoal):\n 1. A = A1", "by auto"], ["proof (state)\nthis:\n  A = A1\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "then"], ["proof (chain)\npicking this:\n  A = A1", "have \"split_block (four_block_mat A B C D) (dim_row A) (dim_col A) = (A, A2, A3, D)\""], ["proof (prove)\nusing this:\n  A = A1\n\ngoal (1 subgoal):\n 1. split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n    (A, A2, A3, D)", "using D g"], ["proof (prove)\nusing this:\n  A = A1\n  D = A4\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (A1, A2, A3, A4)\n\ngoal (1 subgoal):\n 1. split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n    (A, A2, A3, D)", "by blast"], ["proof (state)\nthis:\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (A, A2, A3, D)\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "also"], ["proof (state)\nthis:\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (A, A2, A3, D)\n\ngoal (2 subgoals):\n 1. U = A\n 2. V = D", "show \"U = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U = A", "using assms calculation"], ["proof (prove)\nusing this:\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (U, X, Y, V)\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (A, A2, A3, D)\n\ngoal (1 subgoal):\n 1. U = A", "by auto"], ["proof (state)\nthis:\n  U = A\n\ngoal (1 subgoal):\n 1. V = D", "ultimately"], ["proof (chain)\npicking this:\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (A, A2, A3, D)\n  U = A", "show \"V = D\""], ["proof (prove)\nusing this:\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (A, A2, A3, D)\n  U = A\n\ngoal (1 subgoal):\n 1. V = D", "using assms"], ["proof (prove)\nusing this:\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (A, A2, A3, D)\n  U = A\n  split_block (four_block_mat A B C D) (dim_row A) (dim_col A) =\n  (U, X, Y, V)\n\ngoal (1 subgoal):\n 1. V = D", "by auto"], ["proof (state)\nthis:\n  V = D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_split_vec_distrib_scalar_prod:\n  assumes \"dim_vec (u @\\<^sub>v w) = dim_vec x\" \n  shows \"(u @\\<^sub>v w) \\<bullet> x = u \\<bullet> (vec_first x (dim_vec u)) + w \\<bullet> (vec_last x (dim_vec w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)", "have \"(u @\\<^sub>v w) \\<bullet> (vec_first x (dim_vec u) @\\<^sub>v vec_last x (dim_vec w)) = \n              u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet>\n    (vec_first x (dim_vec u) @\\<^sub>v vec_last x (dim_vec w)) =\n    u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)", "by (meson carrier_vec_dim_vec scalar_prod_append vec_first_carrier vec_last_carrier)"], ["proof (state)\nthis:\n  (u @\\<^sub>v w) \\<bullet>\n  (vec_first x (dim_vec u) @\\<^sub>v vec_last x (dim_vec w)) =\n  u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)", "then"], ["proof (chain)\npicking this:\n  (u @\\<^sub>v w) \\<bullet>\n  (vec_first x (dim_vec u) @\\<^sub>v vec_last x (dim_vec w)) =\n  u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)", "show ?thesis"], ["proof (prove)\nusing this:\n  (u @\\<^sub>v w) \\<bullet>\n  (vec_first x (dim_vec u) @\\<^sub>v vec_last x (dim_vec w)) =\n  u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)", "by (metis assms carrier_vec_dim_vec index_append_vec(2) vec_first_last_append)"], ["proof (state)\nthis:\n  (u @\\<^sub>v w) \\<bullet> x =\n  u \\<bullet> vec_first x (dim_vec u) + w \\<bullet> vec_last x (dim_vec w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_dot_product_split:\n  assumes \"dim_vec (u @\\<^sub>v w) = dim_vec x\" \n  shows \"(u @\\<^sub>v w) \\<bullet> x = (\\<Sum>i\\<in>{0..< dim_vec u}. u$i * x$i) + (\\<Sum>i\\<in>{0..< dim_vec w}. w$i * x$(i + dim_vec u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "define ix where \"ix = vec_first x (dim_vec u)\""], ["proof (state)\nthis:\n  ix = vec_first x (dim_vec u)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "define lx where lx: \"lx = vec_last x (dim_vec w)\""], ["proof (state)\nthis:\n  lx = vec_last x (dim_vec w)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "have *: \"(u @\\<^sub>v w) \\<bullet> x = u \\<bullet> ix + w \\<bullet> lx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x = u \\<bullet> ix + w \\<bullet> lx", "using append_split_vec_distrib_scalar_prod ix_def lx assms"], ["proof (prove)\nusing this:\n  dim_vec (?u @\\<^sub>v ?w) = dim_vec ?x \\<Longrightarrow>\n  (?u @\\<^sub>v ?w) \\<bullet> ?x =\n  ?u \\<bullet> vec_first ?x (dim_vec ?u) +\n  ?w \\<bullet> vec_last ?x (dim_vec ?w)\n  ix = vec_first x (dim_vec u)\n  lx = vec_last x (dim_vec w)\n  dim_vec (u @\\<^sub>v w) = dim_vec x\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x = u \\<bullet> ix + w \\<bullet> lx", "by blast"], ["proof (state)\nthis:\n  (u @\\<^sub>v w) \\<bullet> x = u \\<bullet> ix + w \\<bullet> lx\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "have \"(u @\\<^sub>v w) \\<bullet> x = (\\<Sum> i \\<in> {0 ..< dim_vec x}. (u @\\<^sub>v w) $ i * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i)", "using scalar_prod_def[of \"(u @\\<^sub>v w)\" x]"], ["proof (prove)\nusing this:\n  (u @\\<^sub>v w) \\<bullet> x \\<equiv>\n  \\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i)", "by simp"], ["proof (state)\nthis:\n  (u @\\<^sub>v w) \\<bullet> x =\n  (\\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "also"], ["proof (state)\nthis:\n  (u @\\<^sub>v w) \\<bullet> x =\n  (\\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "have \"... = (\\<Sum> i \\<in> {0 ..< dim_vec u}. (u @\\<^sub>v w) $ i * x $ i) + \n                   (\\<Sum> i \\<in> {dim_vec u ..< dim_vec (u @\\<^sub>v w)}. (u @\\<^sub>v w) $ i * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i) =\n    (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n    (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n        (u @\\<^sub>v w) $ i * x $ i)", "using assms sum.atLeastLessThan_concat[of \"0\" \"dim_vec u\" \"dim_vec (u @\\<^sub>v w)\" \n        \"(\\<lambda>i. (u @\\<^sub>v w) $ i * x $ i)\", OF le0[of \"dim_vec u\"]] \n      le_add1[of  \"dim_vec u\" \"dim_vec w\"] index_append_vec(2)[of u w]"], ["proof (prove)\nusing this:\n  dim_vec (u @\\<^sub>v w) = dim_vec x\n  dim_vec u \\<le> dim_vec (u @\\<^sub>v w) \\<Longrightarrow>\n  (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n  (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n      (u @\\<^sub>v w) $ i * x $ i) =\n  (\\<Sum>i = 0..<dim_vec (u @\\<^sub>v w). (u @\\<^sub>v w) $ i * x $ i)\n  dim_vec u \\<le> dim_vec u + dim_vec w\n  dim_vec (u @\\<^sub>v w) = dim_vec u + dim_vec w\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i) =\n    (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n    (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n        (u @\\<^sub>v w) $ i * x $ i)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i) =\n  (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n  (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n      (u @\\<^sub>v w) $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec x. (u @\\<^sub>v w) $ i * x $ i) =\n  (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n  (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n      (u @\\<^sub>v w) $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "have *: \"... =(\\<Sum>i\\<in>{0..<dim_vec u}. u$i * x$i) + w \\<bullet> lx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n    (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n        (u @\\<^sub>v w) $ i * x $ i) =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) + w \\<bullet> lx", "using * calculation"], ["proof (prove)\nusing this:\n  (u @\\<^sub>v w) \\<bullet> x = u \\<bullet> ix + w \\<bullet> lx\n  (u @\\<^sub>v w) \\<bullet> x =\n  (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n  (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n      (u @\\<^sub>v w) $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n    (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n        (u @\\<^sub>v w) $ i * x $ i) =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) + w \\<bullet> lx", "by (auto simp: ix_def scalar_prod_def vec_first_def)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n  (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n      (u @\\<^sub>v w) $ i * x $ i) =\n  (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) + w \\<bullet> lx\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "have \"w \\<bullet> lx = (\\<Sum>i\\<in>{0..< dim_vec w}. w$i * x$(i + dim_vec u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<bullet> lx = (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "unfolding lx vec_last_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<bullet>\n    vec (dim_vec w) (\\<lambda>i. x $ (dim_vec x - dim_vec w + i)) =\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec\n                    (vec (dim_vec w)\n                      (\\<lambda>i. x $ (dim_vec x - dim_vec w + i))).\n        w $ i *\n        vec (dim_vec w) (\\<lambda>i. x $ (dim_vec x - dim_vec w + i)) $ i) =\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "using add_diff_cancel_right' index_append_vec(2)[of u w]"], ["proof (prove)\nusing this:\n  ?a + ?b - ?b = ?a\n  dim_vec (u @\\<^sub>v w) = dim_vec u + dim_vec w\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec\n                    (vec (dim_vec w)\n                      (\\<lambda>i. x $ (dim_vec x - dim_vec w + i))).\n        w $ i *\n        vec (dim_vec w) (\\<lambda>i. x $ (dim_vec x - dim_vec w + i)) $ i) =\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "by (auto)\n      (metis \\<open>dim_vec (u @\\<^sub>v w) = dim_vec u + dim_vec w\\<close> add.commute add_diff_cancel_right' assms)"], ["proof (state)\nthis:\n  w \\<bullet> lx = (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "then"], ["proof (chain)\npicking this:\n  w \\<bullet> lx = (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "show ?thesis"], ["proof (prove)\nusing this:\n  w \\<bullet> lx = (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "using * calculation"], ["proof (prove)\nusing this:\n  w \\<bullet> lx = (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))\n  (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n  (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n      (u @\\<^sub>v w) $ i * x $ i) =\n  (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) + w \\<bullet> lx\n  (u @\\<^sub>v w) \\<bullet> x =\n  (\\<Sum>i = 0..<dim_vec u. (u @\\<^sub>v w) $ i * x $ i) +\n  (\\<Sum>i = dim_vec u..<dim_vec (u @\\<^sub>v w).\n      (u @\\<^sub>v w) $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (u @\\<^sub>v w) \\<bullet> x =\n    (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))", "by auto"], ["proof (state)\nthis:\n  (u @\\<^sub>v w) \\<bullet> x =\n  (\\<Sum>i = 0..<dim_vec u. u $ i * x $ i) +\n  (\\<Sum>i = 0..<dim_vec w. w $ i * x $ (i + dim_vec u))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma assoc_scalar_prod_mult_mat_vec:\n  fixes A :: \"'a::comm_semiring_1 mat\"\n  assumes \"y \\<in> carrier_vec n\"\n  assumes \"x \\<in> carrier_vec m\"\n  assumes \"A \\<in> carrier_mat n m\"\n  shows \"(A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"(A *\\<^sub>v x) \\<bullet> y = (\\<Sum> i \\<in> {0 ..< n}. (A *\\<^sub>v x) $ i * y $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y =\n    (\\<Sum>i = 0..<n. (A *\\<^sub>v x) $ i * y $ i)", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec y. (A *\\<^sub>v x) $ i * y $ i) =\n    (\\<Sum>i = 0..<n. (A *\\<^sub>v x) $ i * y $ i)", "using assms(1) carrier_vecD"], ["proof (prove)\nusing this:\n  y \\<in> carrier_vec n\n  ?v \\<in> carrier_vec ?n \\<Longrightarrow> dim_vec ?v = ?n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec y. (A *\\<^sub>v x) $ i * y $ i) =\n    (\\<Sum>i = 0..<n. (A *\\<^sub>v x) $ i * y $ i)", "by blast"], ["proof (state)\nthis:\n  (A *\\<^sub>v x) \\<bullet> y =\n  (\\<Sum>i = 0..<n. (A *\\<^sub>v x) $ i * y $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (A *\\<^sub>v x) \\<bullet> y =\n  (\\<Sum>i = 0..<n. (A *\\<^sub>v x) $ i * y $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< n}. (vec (dim_row A) (\\<lambda> i. row A i \\<bullet> x)) $ i * y $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n. (A *\\<^sub>v x) $ i * y $ i) =\n    (\\<Sum>i = 0..<n.\n        vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i)", "unfolding mult_mat_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n.\n        vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i) =\n    (\\<Sum>i = 0..<n.\n        vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n. (A *\\<^sub>v x) $ i * y $ i) =\n  (\\<Sum>i = 0..<n.\n      vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n. (A *\\<^sub>v x) $ i * y $ i) =\n  (\\<Sum>i = 0..<n.\n      vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< n}. (\\<lambda> i. row A i \\<bullet> x)  i * y $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n.\n        vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i) =\n    (\\<Sum>i = 0..<n. row A i \\<bullet> x * y $ i)", "using assms(3)"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n.\n        vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i) =\n    (\\<Sum>i = 0..<n. row A i \\<bullet> x * y $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n.\n      vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i) =\n  (\\<Sum>i = 0..<n. row A i \\<bullet> x * y $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n.\n      vec (dim_row A) (\\<lambda>i. row A i \\<bullet> x) $ i * y $ i) =\n  (\\<Sum>i = 0..<n. row A i \\<bullet> x * y $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< n}. (\\<Sum> j \\<in> {0 ..< m}. (row A i) $ j * x $ j) * y $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n. row A i \\<bullet> x * y $ i) =\n    (\\<Sum>i = 0..<n. (\\<Sum>j = 0..<m. row A i $ j * x $ j) * y $ i)", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n.\n        (\\<Sum>ia = 0..<dim_vec x. row A i $ ia * x $ ia) * y $ i) =\n    (\\<Sum>i = 0..<n. (\\<Sum>j = 0..<m. row A i $ j * x $ j) * y $ i)", "using assms(2) carrier_vecD"], ["proof (prove)\nusing this:\n  x \\<in> carrier_vec m\n  ?v \\<in> carrier_vec ?n \\<Longrightarrow> dim_vec ?v = ?n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n.\n        (\\<Sum>ia = 0..<dim_vec x. row A i $ ia * x $ ia) * y $ i) =\n    (\\<Sum>i = 0..<n. (\\<Sum>j = 0..<m. row A i $ j * x $ j) * y $ i)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n. row A i \\<bullet> x * y $ i) =\n  (\\<Sum>i = 0..<n. (\\<Sum>j = 0..<m. row A i $ j * x $ j) * y $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n. row A i \\<bullet> x * y $ i) =\n  (\\<Sum>i = 0..<n. (\\<Sum>j = 0..<m. row A i $ j * x $ j) * y $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> j \\<in> {0 ..< n}. (\\<Sum> i \\<in> {0 ..< m}. (row A j) $ i * x $ i * y $ j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n. (\\<Sum>j = 0..<m. row A i $ j * x $ j) * y $ i) =\n    (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. row A j $ i * x $ i * y $ j)", "by (simp add: sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n. (\\<Sum>j = 0..<m. row A i $ j * x $ j) * y $ i) =\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. row A j $ i * x $ i * y $ j)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n. (\\<Sum>j = 0..<m. row A i $ j * x $ j) * y $ i) =\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. row A j $ i * x $ i * y $ j)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> j \\<in> {0 ..< n}. (\\<Sum> i \\<in> {0 ..< m}.  A $$ (j,i) * x $ i * y $ j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. row A j $ i * x $ i * y $ j) =\n    (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * x $ i * y $ j)", "unfolding row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n.\n        \\<Sum>i = 0..<m.\n           vec (dim_col A) (\\<lambda>ja. A $$ (j, ja)) $ i * x $ i *\n           y $ j) =\n    (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * x $ i * y $ j)", "using assms(3)"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n.\n        \\<Sum>i = 0..<m.\n           vec (dim_col A) (\\<lambda>ja. A $$ (j, ja)) $ i * x $ i *\n           y $ j) =\n    (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * x $ i * y $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. row A j $ i * x $ i * y $ j) =\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * x $ i * y $ j)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. row A j $ i * x $ i * y $ j) =\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * x $ i * y $ j)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> j \\<in> {0 ..< n}. (\\<Sum> i \\<in> {0 ..< m}.  A $$ (j,i) * y $ j * x $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * x $ i * y $ j) =\n    (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * y $ j * x $ i)", "by (meson semiring_normalization_rules(16) sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * x $ i * y $ j) =\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * y $ j * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * x $ i * y $ j) =\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * y $ j * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> j \\<in> {0 ..< n}. (\\<Sum> i \\<in> {0 ..< m}. (col A i) $ j * y $ j * x $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * y $ j * x $ i) =\n    (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i)", "using assms(3)"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * y $ j * x $ i) =\n    (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * y $ j * x $ i) =\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. A $$ (j, i) * y $ j * x $ i) =\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< m}. (\\<Sum> j \\<in> {0 ..< n}. (col A i) $ j * y $ j * x $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i) =\n    (\\<Sum>i = 0..<m. \\<Sum>j = 0..<n. col A i $ j * y $ j * x $ i)", "using Groups_Big.comm_monoid_add_class.sum.swap[of \n        \"(\\<lambda>i j. (col A i) $ j * y $ j * x $ i)\" \"{0..<n}\" \"{0 ..< m}\", symmetric]"], ["proof (prove)\nusing this:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i) =\n  (\\<Sum>i = 0..<m. \\<Sum>j = 0..<n. col A i $ j * y $ j * x $ i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i) =\n    (\\<Sum>i = 0..<m. \\<Sum>j = 0..<n. col A i $ j * y $ j * x $ i)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i) =\n  (\\<Sum>i = 0..<m. \\<Sum>j = 0..<n. col A i $ j * y $ j * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. \\<Sum>i = 0..<m. col A i $ j * y $ j * x $ i) =\n  (\\<Sum>i = 0..<m. \\<Sum>j = 0..<n. col A i $ j * y $ j * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< m}. (\\<Sum> j \\<in> {0 ..< n}. (col A i) $ j * y $ j) * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. \\<Sum>j = 0..<n. col A i $ j * y $ j * x $ i) =\n    (\\<Sum>i = 0..<m. (\\<Sum>j = 0..<n. col A i $ j * y $ j) * x $ i)", "by (simp add: sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. \\<Sum>j = 0..<n. col A i $ j * y $ j * x $ i) =\n  (\\<Sum>i = 0..<m. (\\<Sum>j = 0..<n. col A i $ j * y $ j) * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. \\<Sum>j = 0..<n. col A i $ j * y $ j * x $ i) =\n  (\\<Sum>i = 0..<m. (\\<Sum>j = 0..<n. col A i $ j * y $ j) * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< m}. (\\<lambda> i. col A i \\<bullet> y) i * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. (\\<Sum>j = 0..<n. col A i $ j * y $ j) * x $ i) =\n    (\\<Sum>i = 0..<m. col A i \\<bullet> y * x $ i)", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. (\\<Sum>j = 0..<n. col A i $ j * y $ j) * x $ i) =\n    (\\<Sum>i = 0..<m.\n        (\\<Sum>ia = 0..<dim_vec y. col A i $ ia * y $ ia) * x $ i)", "using assms(1) carrier_vecD"], ["proof (prove)\nusing this:\n  y \\<in> carrier_vec n\n  ?v \\<in> carrier_vec ?n \\<Longrightarrow> dim_vec ?v = ?n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. (\\<Sum>j = 0..<n. col A i $ j * y $ j) * x $ i) =\n    (\\<Sum>i = 0..<m.\n        (\\<Sum>ia = 0..<dim_vec y. col A i $ ia * y $ ia) * x $ i)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. (\\<Sum>j = 0..<n. col A i $ j * y $ j) * x $ i) =\n  (\\<Sum>i = 0..<m. col A i \\<bullet> y * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. (\\<Sum>j = 0..<n. col A i $ j * y $ j) * x $ i) =\n  (\\<Sum>i = 0..<m. col A i \\<bullet> y * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< m}. (\\<lambda> i. row A\\<^sup>T i \\<bullet> y) i * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. col A i \\<bullet> y * x $ i) =\n    (\\<Sum>i = 0..<m. row A\\<^sup>T i \\<bullet> y * x $ i)", "using assms(3)"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. col A i \\<bullet> y * x $ i) =\n    (\\<Sum>i = 0..<m. row A\\<^sup>T i \\<bullet> y * x $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. col A i \\<bullet> y * x $ i) =\n  (\\<Sum>i = 0..<m. row A\\<^sup>T i \\<bullet> y * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. col A i \\<bullet> y * x $ i) =\n  (\\<Sum>i = 0..<m. row A\\<^sup>T i \\<bullet> y * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< m}. (vec (dim_row A\\<^sup>T) (\\<lambda> i. row A\\<^sup>T i \\<bullet> y)) $ i * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. row A\\<^sup>T i \\<bullet> y * x $ i) =\n    (\\<Sum>i = 0..<m.\n        vec (dim_row A\\<^sup>T) (\\<lambda>i. row A\\<^sup>T i \\<bullet> y) $\n        i *\n        x $ i)", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> carrier_vec n\n  x \\<in> carrier_vec m\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. row A\\<^sup>T i \\<bullet> y * x $ i) =\n    (\\<Sum>i = 0..<m.\n        vec (dim_row A\\<^sup>T) (\\<lambda>i. row A\\<^sup>T i \\<bullet> y) $\n        i *\n        x $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. row A\\<^sup>T i \\<bullet> y * x $ i) =\n  (\\<Sum>i = 0..<m.\n      vec (dim_row A\\<^sup>T) (\\<lambda>i. row A\\<^sup>T i \\<bullet> y) $\n      i *\n      x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. row A\\<^sup>T i \\<bullet> y * x $ i) =\n  (\\<Sum>i = 0..<m.\n      vec (dim_row A\\<^sup>T) (\\<lambda>i. row A\\<^sup>T i \\<bullet> y) $\n      i *\n      x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (\\<Sum> i \\<in> {0 ..< m}. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m.\n        vec (dim_row A\\<^sup>T) (\\<lambda>i. row A\\<^sup>T i \\<bullet> y) $\n        i *\n        x $ i) =\n    (\\<Sum>i = 0..<m. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i)", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> carrier_vec n\n  x \\<in> carrier_vec m\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m.\n        vec (dim_row A\\<^sup>T) (\\<lambda>i. row A\\<^sup>T i \\<bullet> y) $\n        i *\n        x $ i) =\n    (\\<Sum>i = 0..<m. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m.\n      vec (dim_row A\\<^sup>T) (\\<lambda>i. row A\\<^sup>T i \\<bullet> y) $\n      i *\n      x $ i) =\n  (\\<Sum>i = 0..<m. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m.\n      vec (dim_row A\\<^sup>T) (\\<lambda>i. row A\\<^sup>T i \\<bullet> y) $\n      i *\n      x $ i) =\n  (\\<Sum>i = 0..<m. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "have \"... = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i) =\n    (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "using scalar_prod_def[of \"(A\\<^sup>T *\\<^sub>v y)\" x,symmetric]"], ["proof (prove)\nusing this:\n  \\<Sum>i = 0..<dim_vec x. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i \\<equiv>\n  (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i) =\n    (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "using assms(2) carrier_vecD"], ["proof (prove)\nusing this:\n  \\<Sum>i = 0..<dim_vec x. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i \\<equiv>\n  (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\n  x \\<in> carrier_vec m\n  ?v \\<in> carrier_vec ?n \\<Longrightarrow> dim_vec ?v = ?n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<m. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i) =\n    (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<m. (A\\<^sup>T *\\<^sub>v y) $ i * x $ i) =\n  (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "finally"], ["proof (chain)\npicking this:\n  (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "show ?thesis"], ["proof (prove)\nusing this:\n  (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "."], ["proof (state)\nthis:\n  (A *\\<^sub>v x) \\<bullet> y = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open> Vectors \\<close>"], ["", "abbreviation singletonV (\"[_]\\<^sub>v\" ) where \"singletonV e \\<equiv> (vec 1 (\\<lambda>i. e))\""], ["", "lemma elem_in_singleton [simp]: \"[a]\\<^sub>v $ 0 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a]\\<^sub>v $ 0 = a", "by simp"], ["", "lemma elem_in_singleton_append [simp]: \"(x @\\<^sub>v [a]\\<^sub>v) $ dim_vec x = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x @\\<^sub>v [a]\\<^sub>v) $ dim_vec x = a", "by simp"], ["", "lemma vector_cases_append:\n  fixes x :: \"'a vec\"\n  shows \"x = vNil \\<or> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = vNil \\<or> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = vNil \\<or> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)", "have \"x \\<noteq> vNil \\<Longrightarrow> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> vNil \\<Longrightarrow>\n    \\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "assume a1: \"x \\<noteq> vNil\""], ["proof (state)\nthis:\n  x \\<noteq> vNil\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "assume na: \"\\<not> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)\""], ["proof (state)\nthis:\n  \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "have \"dim_vec x \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> dim_vec x", "using a1 eq_vecI"], ["proof (prove)\nusing this:\n  x \\<noteq> vNil\n  \\<lbrakk>\\<And>i. i < dim_vec ?w \\<Longrightarrow> ?v $ i = ?w $ i;\n   dim_vec ?v = dim_vec ?w\\<rbrakk>\n  \\<Longrightarrow> ?v = ?w\n\ngoal (1 subgoal):\n 1. 1 \\<le> dim_vec x", "by auto"], ["proof (state)\nthis:\n  1 \\<le> dim_vec x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "define v where v: \"v = vec (dim_vec x - 1) (\\<lambda>i. x $ i)\""], ["proof (state)\nthis:\n  v = vec (dim_vec x - 1) (($) x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "have v': \"\\<forall>i < dim_vec v. v $ i = x $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<dim_vec v. v $ i = x $ i", "using v"], ["proof (prove)\nusing this:\n  v = vec (dim_vec x - 1) (($) x)\n\ngoal (1 subgoal):\n 1. \\<forall>i<dim_vec v. v $ i = x $ i", "by auto"], ["proof (state)\nthis:\n  \\<forall>i<dim_vec v. v $ i = x $ i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "define a where a: \"a = x $ (dim_vec x - 1)\""], ["proof (state)\nthis:\n  a = x $ (dim_vec x - 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "have a': \"[a]\\<^sub>v $ 0 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a]\\<^sub>v $ 0 = a", "by simp"], ["proof (state)\nthis:\n  [a]\\<^sub>v $ 0 = a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "have ff1: \"1 + dim_vec v = dim_vec x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + dim_vec v = dim_vec x", "by (metis (no_types) \\<open>1 \\<le> dim_vec x\\<close> add_diff_cancel_left' dim_vec le_Suc_ex v)"], ["proof (state)\nthis:\n  1 + dim_vec v = dim_vec x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "have \"\\<forall>i < dim_vec x. x$i = (v @\\<^sub>v [a]\\<^sub>v)$i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<dim_vec x. x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "proof (standard,standard)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec x \\<Longrightarrow> x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "fix i :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec x \\<Longrightarrow> x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "assume as: \"i < dim_vec x\""], ["proof (state)\nthis:\n  i < dim_vec x\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec x \\<Longrightarrow> x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "have \"x $ dim_vec v = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x $ dim_vec v = a", "by (simp add: a v)"], ["proof (state)\nthis:\n  x $ dim_vec v = a\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec x \\<Longrightarrow> x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "then"], ["proof (chain)\npicking this:\n  x $ dim_vec v = a", "have \"x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i\""], ["proof (prove)\nusing this:\n  x $ dim_vec v = a\n\ngoal (1 subgoal):\n 1. x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "using ff1 as"], ["proof (prove)\nusing this:\n  x $ dim_vec v = a\n  1 + dim_vec v = dim_vec x\n  i < dim_vec x\n\ngoal (1 subgoal):\n 1. x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "by (metis (no_types) One_nat_def a' add.left_neutral \n            add_Suc_right add_diff_cancel_left' add_diff_cancel_right' \n            dim_vec index_append_vec(1) less_Suc_eq v')"], ["proof (state)\nthis:\n  x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec x \\<Longrightarrow> x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "then"], ["proof (chain)\npicking this:\n  x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "show \"x$i = (v @\\<^sub>v [a]\\<^sub>v)$i\""], ["proof (prove)\nusing this:\n  x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i\n\ngoal (1 subgoal):\n 1. x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "by blast"], ["proof (state)\nthis:\n  x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i<dim_vec x. x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>i<dim_vec x. x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i", "have \"x = v @\\<^sub>v [a]\\<^sub>v\""], ["proof (prove)\nusing this:\n  \\<forall>i<dim_vec x. x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i\n\ngoal (1 subgoal):\n 1. x = v @\\<^sub>v [a]\\<^sub>v", "using a a' v v'"], ["proof (prove)\nusing this:\n  \\<forall>i<dim_vec x. x $ i = (v @\\<^sub>v [a]\\<^sub>v) $ i\n  a = x $ (dim_vec x - 1)\n  [a]\\<^sub>v $ 0 = a\n  v = vec (dim_vec x - 1) (($) x)\n  \\<forall>i<dim_vec v. v $ i = x $ i\n\ngoal (1 subgoal):\n 1. x = v @\\<^sub>v [a]\\<^sub>v", "by (metis dim_vec eq_vecI ff1 index_append_vec(2) semiring_normalization_rules(24))"], ["proof (state)\nthis:\n  x = v @\\<^sub>v [a]\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> vNil;\n     \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x = v @\\<^sub>v [a]\\<^sub>v", "show False"], ["proof (prove)\nusing this:\n  x = v @\\<^sub>v [a]\\<^sub>v\n\ngoal (1 subgoal):\n 1. False", "using na"], ["proof (prove)\nusing this:\n  x = v @\\<^sub>v [a]\\<^sub>v\n  \\<nexists>v a. x = v @\\<^sub>v [a]\\<^sub>v\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<noteq> vNil \\<Longrightarrow>\n  \\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v\n\ngoal (1 subgoal):\n 1. x = vNil \\<or> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> vNil \\<Longrightarrow>\n  \\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> vNil \\<Longrightarrow>\n  \\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v\n\ngoal (1 subgoal):\n 1. x = vNil \\<or> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)", "by blast"], ["proof (state)\nthis:\n  x = vNil \\<or> (\\<exists>v a. x = v @\\<^sub>v [a]\\<^sub>v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vec_rev_induct [case_names vNil append, induct type: vec]:\n  assumes \"P vNil\" and \"\\<And>a v. P v \\<Longrightarrow> P (v @\\<^sub>v [a]\\<^sub>v)\"\n  shows \"P v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P v", "proof (induction \"dim_vec v\" arbitrary: v)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v. 0 = dim_vec v \\<Longrightarrow> P v\n 2. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "case 0"], ["proof (state)\nthis:\n  0 = dim_vec v\n\ngoal (2 subgoals):\n 1. \\<And>v. 0 = dim_vec v \\<Longrightarrow> P v\n 2. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "then"], ["proof (chain)\npicking this:\n  0 = dim_vec v", "have \"v = vNil\""], ["proof (prove)\nusing this:\n  0 = dim_vec v\n\ngoal (1 subgoal):\n 1. v = vNil", "by auto"], ["proof (state)\nthis:\n  v = vNil\n\ngoal (2 subgoals):\n 1. \\<And>v. 0 = dim_vec v \\<Longrightarrow> P v\n 2. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "then"], ["proof (chain)\npicking this:\n  v = vNil", "show ?case"], ["proof (prove)\nusing this:\n  v = vNil\n\ngoal (1 subgoal):\n 1. P v", "using assms(1)"], ["proof (prove)\nusing this:\n  v = vNil\n  P vNil\n\ngoal (1 subgoal):\n 1. P v", "by auto"], ["proof (state)\nthis:\n  P v\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "case (Suc l)"], ["proof (state)\nthis:\n  l = dim_vec ?v \\<Longrightarrow> P ?v\n  Suc l = dim_vec v\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "obtain xs x where xs_x: \"v = xs @\\<^sub>v [x]\\<^sub>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs x.\n        v = xs @\\<^sub>v [x]\\<^sub>v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using vector_cases_append[of v] Suc.hyps(2) dim_vec"], ["proof (prove)\nusing this:\n  v = vNil \\<or> (\\<exists>v a. v = v @\\<^sub>v [a]\\<^sub>v)\n  Suc l = dim_vec v\n  dim_vec (vec ?n ?f) = ?n\n\ngoal (1 subgoal):\n 1. (\\<And>xs x.\n        v = xs @\\<^sub>v [x]\\<^sub>v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  v = xs @\\<^sub>v [x]\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "have \"l = dim_vec xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l = dim_vec xs", "using Suc.hyps(2) xs_x"], ["proof (prove)\nusing this:\n  Suc l = dim_vec v\n  v = xs @\\<^sub>v [x]\\<^sub>v\n\ngoal (1 subgoal):\n 1. l = dim_vec xs", "by auto"], ["proof (state)\nthis:\n  l = dim_vec xs\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "then"], ["proof (chain)\npicking this:\n  l = dim_vec xs", "have \"P xs\""], ["proof (prove)\nusing this:\n  l = dim_vec xs\n\ngoal (1 subgoal):\n 1. P xs", "using Suc.hyps(1)[of xs]"], ["proof (prove)\nusing this:\n  l = dim_vec xs\n  l = dim_vec xs \\<Longrightarrow> P xs\n\ngoal (1 subgoal):\n 1. P xs", "by auto"], ["proof (state)\nthis:\n  P xs\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "then"], ["proof (chain)\npicking this:\n  P xs", "have \"P (xs @\\<^sub>v [x]\\<^sub>v)\""], ["proof (prove)\nusing this:\n  P xs\n\ngoal (1 subgoal):\n 1. P (xs @\\<^sub>v [x]\\<^sub>v)", "using assms(2)[of xs x]"], ["proof (prove)\nusing this:\n  P xs\n  P xs \\<Longrightarrow> P (xs @\\<^sub>v [x]\\<^sub>v)\n\ngoal (1 subgoal):\n 1. P (xs @\\<^sub>v [x]\\<^sub>v)", "by auto"], ["proof (state)\nthis:\n  P (xs @\\<^sub>v [x]\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>\\<And>v. x = dim_vec v \\<Longrightarrow> P v;\n        Suc x = dim_vec v\\<rbrakk>\n       \\<Longrightarrow> P v", "then"], ["proof (chain)\npicking this:\n  P (xs @\\<^sub>v [x]\\<^sub>v)", "show ?case"], ["proof (prove)\nusing this:\n  P (xs @\\<^sub>v [x]\\<^sub>v)\n\ngoal (1 subgoal):\n 1. P v", "by (simp add: xs_x)"], ["proof (state)\nthis:\n  P v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma singleton_append_dotP:\n  assumes \"dim_vec z = dim_vec y + 1\"\n  shows \"(y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z = (\\<Sum>i\\<in>{0..<dim_vec y}. y $ i * z $ i) + x * z $ dim_vec y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "have \"(y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z = (\\<Sum>i\\<in>{0..<dim_vec z}. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec z. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i)", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec z. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) =\n    (\\<Sum>i = 0..<dim_vec z. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i)", "by blast"], ["proof (state)\nthis:\n  (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n  (\\<Sum>i = 0..<dim_vec z. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i)\n\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "also"], ["proof (state)\nthis:\n  (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n  (\\<Sum>i = 0..<dim_vec z. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i)\n\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "have \"... = (\\<Sum>i\\<in>{0..<dim_vec z-1}. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) + \n                   (y @\\<^sub>v [x]\\<^sub>v)$(dim_vec z-1) * z$(dim_vec z-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec z. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) =\n    (\\<Sum>i = 0..<dim_vec z - 1. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n    (y @\\<^sub>v [x]\\<^sub>v) $ (dim_vec z - 1) * z $ (dim_vec z - 1)", "by (simp add: assms)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec z. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) =\n  (\\<Sum>i = 0..<dim_vec z - 1. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n  (y @\\<^sub>v [x]\\<^sub>v) $ (dim_vec z - 1) * z $ (dim_vec z - 1)\n\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec z. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) =\n  (\\<Sum>i = 0..<dim_vec z - 1. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n  (y @\\<^sub>v [x]\\<^sub>v) $ (dim_vec z - 1) * z $ (dim_vec z - 1)\n\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "have \"... = (\\<Sum>i\\<in>{0..<dim_vec y}. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) + \n                   (y @\\<^sub>v [x]\\<^sub>v)$(dim_vec y)* z$(dim_vec y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec z - 1. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n    (y @\\<^sub>v [x]\\<^sub>v) $ (dim_vec z - 1) * z $ (dim_vec z - 1) =\n    (\\<Sum>i = 0..<dim_vec y. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n    (y @\\<^sub>v [x]\\<^sub>v) $ dim_vec y * z $ dim_vec y", "using assms"], ["proof (prove)\nusing this:\n  dim_vec z = dim_vec y + 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec z - 1. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n    (y @\\<^sub>v [x]\\<^sub>v) $ (dim_vec z - 1) * z $ (dim_vec z - 1) =\n    (\\<Sum>i = 0..<dim_vec y. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n    (y @\\<^sub>v [x]\\<^sub>v) $ dim_vec y * z $ dim_vec y", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec z - 1. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n  (y @\\<^sub>v [x]\\<^sub>v) $ (dim_vec z - 1) * z $ (dim_vec z - 1) =\n  (\\<Sum>i = 0..<dim_vec y. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n  (y @\\<^sub>v [x]\\<^sub>v) $ dim_vec y * z $ dim_vec y\n\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec z - 1. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n  (y @\\<^sub>v [x]\\<^sub>v) $ (dim_vec z - 1) * z $ (dim_vec z - 1) =\n  (\\<Sum>i = 0..<dim_vec y. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n  (y @\\<^sub>v [x]\\<^sub>v) $ dim_vec y * z $ dim_vec y\n\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "have \"... = (\\<Sum>i\\<in>{0..<dim_vec y}. y $ i * z $ i) + \n                   x * z$(dim_vec y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec y. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n    (y @\\<^sub>v [x]\\<^sub>v) $ dim_vec y * z $ dim_vec y =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec y. (y @\\<^sub>v [x]\\<^sub>v) $ i * z $ i) +\n  (y @\\<^sub>v [x]\\<^sub>v) $ dim_vec y * z $ dim_vec y =\n  (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y\n\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "finally"], ["proof (chain)\npicking this:\n  (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n  (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "show ?thesis"], ["proof (prove)\nusing this:\n  (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n  (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y\n\ngoal (1 subgoal):\n 1. (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n    (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y", "."], ["proof (state)\nthis:\n  (y @\\<^sub>v [x]\\<^sub>v) \\<bullet> z =\n  (\\<Sum>i = 0..<dim_vec y. y $ i * z $ i) + x * z $ dim_vec y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma map_vec_append: \"map_vec f (a @\\<^sub>v b) = map_vec f a @\\<^sub>v map_vec f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_vec f (a @\\<^sub>v b) = map_vec f a @\\<^sub>v map_vec f b", "by (induction a arbitrary: b) (auto)"], ["", "lemma map_mat_map_vec:\n  assumes \"i < dim_row P\"\n  shows \"row (map_mat f P) i = map_vec f (row P i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (map_mat f P) i = map_vec f (row P i)", "using assms"], ["proof (prove)\nusing this:\n  i < dim_row P\n\ngoal (1 subgoal):\n 1. row (map_mat f P) i = map_vec f (row P i)", "by auto"], ["", "lemma append_rows_access1 [simp]:\n  assumes \"i < dim_row A\"\n  assumes \"dim_col A = dim_col B\"\n  shows \"row (A @\\<^sub>r B) i = row A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (A @\\<^sub>r B) i = row A i", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia\n 2. dim_vec (row (A @\\<^sub>r B) i) = dim_vec (row A i)", "show \"dim_vec (Matrix.row (A @\\<^sub>r B) i) = dim_vec (Matrix.row A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (row (A @\\<^sub>r B) i) = dim_vec (row A i)", "by (simp add: append_rows_def)"], ["proof (state)\nthis:\n  dim_vec (row (A @\\<^sub>r B) i) = dim_vec (row A i)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia", "fix ia"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia", "assume \"ia < dim_vec (row A i)\""], ["proof (state)\nthis:\n  ia < dim_vec (row A i)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia", "have \"row (A @\\<^sub>r B) i = (row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (A @\\<^sub>r B) i =\n    row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i", "unfolding append_rows_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. row (four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n          (0\\<^sub>m (dim_row B) 0))\n     i =\n    row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i", "using \n      carrier_mat_triv[of A] row_four_block_mat(1)[of A \"dim_row A\" \n        _ \"0\\<^sub>m (dim_row A) 0\" 0 B \"dim_row B\" \"0\\<^sub>m (dim_row B) 0\" i, OF _ _ _ _ assms(1)]"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat (dim_row A) (dim_col A)\n  \\<lbrakk>A \\<in> carrier_mat (dim_row A) ?nc1.0;\n   0\\<^sub>m (dim_row A) 0 \\<in> carrier_mat (dim_row A) 0;\n   B \\<in> carrier_mat (dim_row B) ?nc1.0;\n   0\\<^sub>m (dim_row B) 0 \\<in> carrier_mat (dim_row B) 0\\<rbrakk>\n  \\<Longrightarrow> row (four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n                          (0\\<^sub>m (dim_row B) 0))\n                     i =\n                    row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i\n\ngoal (1 subgoal):\n 1. row (four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n          (0\\<^sub>m (dim_row B) 0))\n     i =\n    row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i", "by (metis assms(2) carrier_mat_triv zero_carrier_mat)"], ["proof (state)\nthis:\n  row (A @\\<^sub>r B) i = row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia", "also"], ["proof (state)\nthis:\n  row (A @\\<^sub>r B) i = row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia", "have \"... = row A i @\\<^sub>v vNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i =\n    row A i @\\<^sub>v vNil", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i = row A i @\\<^sub>v vNil\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia", "also"], ["proof (state)\nthis:\n  row A i @\\<^sub>v row (0\\<^sub>m (dim_row A) 0) i = row A i @\\<^sub>v vNil\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia", "have \"... = row A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row A i @\\<^sub>v vNil = row A i", "by auto"], ["proof (state)\nthis:\n  row A i @\\<^sub>v vNil = row A i\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row A i $ ia", "finally"], ["proof (chain)\npicking this:\n  row (A @\\<^sub>r B) i = row A i", "show \"row (A @\\<^sub>r B) i $ ia = row A i $ ia\""], ["proof (prove)\nusing this:\n  row (A @\\<^sub>r B) i = row A i\n\ngoal (1 subgoal):\n 1. row (A @\\<^sub>r B) i $ ia = row A i $ ia", "by auto"], ["proof (state)\nthis:\n  row (A @\\<^sub>r B) i $ ia = row A i $ ia\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_rows_access2 [simp]:\n  assumes \"i \\<ge> dim_row A\"\n  assumes \"i < dim_row A + dim_row B\"\n  assumes \"dim_col A = dim_col B\"\n  shows \"row (A @\\<^sub>r B) i = row B (i - dim_row A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (A @\\<^sub>r B) i = row B (i - dim_row A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia\n 2. dim_vec (row (A @\\<^sub>r B) i) = dim_vec (row B (i - dim_row A))", "show \"dim_vec (row (A @\\<^sub>r B) i) = dim_vec (row B (i - dim_row A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (row (A @\\<^sub>r B) i) = dim_vec (row B (i - dim_row A))", "by (simp add: append_rows_def assms(3))"], ["proof (state)\nthis:\n  dim_vec (row (A @\\<^sub>r B) i) = dim_vec (row B (i - dim_row A))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "fix ia"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "assume \"ia < dim_vec (row B (i - dim_row A))\""], ["proof (state)\nthis:\n  ia < dim_vec (row B (i - dim_row A))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "have \"row (A @\\<^sub>r B) i = (row B (i - dim_row A) @\\<^sub>v row (0\\<^sub>m (dim_row B) 0) (i - dim_row A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (A @\\<^sub>r B) i =\n    row B (i - dim_row A) @\\<^sub>v\n    row (0\\<^sub>m (dim_row B) 0) (i - dim_row A)", "unfolding append_rows_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. row (four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n          (0\\<^sub>m (dim_row B) 0))\n     i =\n    row B (i - dim_row A) @\\<^sub>v\n    row (0\\<^sub>m (dim_row B) 0) (i - dim_row A)", "using carrier_mat_triv[of A] row_four_block_mat(2)[of A \"dim_row A\" \n        _ \"0\\<^sub>m (dim_row A) 0\" 0 B \"dim_row B\" \"0\\<^sub>m (dim_row B) 0\" i, OF _ _ _ _ _ assms(2)]"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat (dim_row A) (dim_col A)\n  \\<lbrakk>A \\<in> carrier_mat (dim_row A) ?nc1.0;\n   0\\<^sub>m (dim_row A) 0 \\<in> carrier_mat (dim_row A) 0;\n   B \\<in> carrier_mat (dim_row B) ?nc1.0;\n   0\\<^sub>m (dim_row B) 0 \\<in> carrier_mat (dim_row B) 0;\n   \\<not> i < dim_row A\\<rbrakk>\n  \\<Longrightarrow> row (four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n                          (0\\<^sub>m (dim_row B) 0))\n                     i =\n                    row B (i - dim_row A) @\\<^sub>v\n                    row (0\\<^sub>m (dim_row B) 0) (i - dim_row A)\n\ngoal (1 subgoal):\n 1. row (four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n          (0\\<^sub>m (dim_row B) 0))\n     i =\n    row B (i - dim_row A) @\\<^sub>v\n    row (0\\<^sub>m (dim_row B) 0) (i - dim_row A)", "by (metis assms(1) assms(3) carrier_mat_triv le_antisym less_imp_le_nat nat_less_le zero_carrier_mat)"], ["proof (state)\nthis:\n  row (A @\\<^sub>r B) i =\n  row B (i - dim_row A) @\\<^sub>v\n  row (0\\<^sub>m (dim_row B) 0) (i - dim_row A)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "also"], ["proof (state)\nthis:\n  row (A @\\<^sub>r B) i =\n  row B (i - dim_row A) @\\<^sub>v\n  row (0\\<^sub>m (dim_row B) 0) (i - dim_row A)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "have \"... = row B (i - dim_row A) @\\<^sub>v vNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row B (i - dim_row A) @\\<^sub>v\n    row (0\\<^sub>m (dim_row B) 0) (i - dim_row A) =\n    row B (i - dim_row A) @\\<^sub>v vNil", "by fastforce"], ["proof (state)\nthis:\n  row B (i - dim_row A) @\\<^sub>v\n  row (0\\<^sub>m (dim_row B) 0) (i - dim_row A) =\n  row B (i - dim_row A) @\\<^sub>v vNil\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "also"], ["proof (state)\nthis:\n  row B (i - dim_row A) @\\<^sub>v\n  row (0\\<^sub>m (dim_row B) 0) (i - dim_row A) =\n  row B (i - dim_row A) @\\<^sub>v vNil\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "have \"... = row B (i - dim_row A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row B (i - dim_row A) @\\<^sub>v vNil = row B (i - dim_row A)", "by auto"], ["proof (state)\nthis:\n  row B (i - dim_row A) @\\<^sub>v vNil = row B (i - dim_row A)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row B (i - dim_row A)) \\<Longrightarrow>\n       row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "finally"], ["proof (chain)\npicking this:\n  row (A @\\<^sub>r B) i = row B (i - dim_row A)", "show \"row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia\""], ["proof (prove)\nusing this:\n  row (A @\\<^sub>r B) i = row B (i - dim_row A)\n\ngoal (1 subgoal):\n 1. row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia", "by auto"], ["proof (state)\nthis:\n  row (A @\\<^sub>r B) i $ ia = row B (i - dim_row A) $ ia\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_singleton_access [simp]: \"(Matrix.vec n f @\\<^sub>v [r]\\<^sub>v) $ n = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vec n f @\\<^sub>v [r]\\<^sub>v) $ n = r", "by simp"], ["", "text \\<open> Move to right place \\<close>"], ["", "fun mat_append_col where\n  \"mat_append_col A b = mat_of_cols (dim_row A) (cols A @ [b])\""], ["", "fun mat_append_row where\n  \"mat_append_row A c = mat_of_rows (dim_col A) (rows A @ [c])\""], ["", "lemma mat_append_col_dims:\n  shows \"mat_append_col A b \\<in> carrier_mat (dim_row A) (dim_col A + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_append_col A b \\<in> carrier_mat (dim_row A) (dim_col A + 1)", "by auto"], ["", "lemma mat_append_row_dims:\n  shows \"mat_append_row A c \\<in> carrier_mat (dim_row A + 1) (dim_col A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_append_row A c \\<in> carrier_mat (dim_row A + 1) (dim_col A)", "by auto"], ["", "lemma mat_append_col_col:\n  assumes \"dim_row A = dim_vec b\" \n  shows \"col (mat_append_col A b) (dim_col A) = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col (mat_append_col A b) (dim_col A) = b", "proof (standard)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i\n 2. dim_vec (col (mat_append_col A b) (dim_col A)) = dim_vec b", "let ?nA = \"(mat_of_cols (dim_row A) (cols A @ [b]))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i\n 2. dim_vec (col (mat_append_col A b) (dim_col A)) = dim_vec b", "show \"dim_vec (col (mat_append_col A b) (dim_col A)) = dim_vec b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (col (mat_append_col A b) (dim_col A)) = dim_vec b", "by (simp add: assms)"], ["proof (state)\nthis:\n  dim_vec (col (mat_append_col A b) (dim_col A)) = dim_vec b\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "assume \"i < dim_vec b\""], ["proof (state)\nthis:\n  i < dim_vec b\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "have \"col (mat_append_col A b) (dim_col A) $ i = vec_index (vec (dim_row ?nA) (\\<lambda> i. ?nA $$ (i, (dim_col A)))) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col (mat_append_col A b) (dim_col A) $ i =\n    vec (dim_row (mat_of_cols (dim_row A) (cols A @ [b])))\n     (\\<lambda>i.\n         mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n    i", "by (simp add: col_def)"], ["proof (state)\nthis:\n  col (mat_append_col A b) (dim_col A) $ i =\n  vec (dim_row (mat_of_cols (dim_row A) (cols A @ [b])))\n   (\\<lambda>i. mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "also"], ["proof (state)\nthis:\n  col (mat_append_col A b) (dim_col A) $ i =\n  vec (dim_row (mat_of_cols (dim_row A) (cols A @ [b])))\n   (\\<lambda>i. mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "have \"... = vec_index (vec (dim_row A) (\\<lambda> i. ?nA $$ (i, (dim_col A)))) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec (dim_row (mat_of_cols (dim_row A) (cols A @ [b])))\n     (\\<lambda>i.\n         mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n    i =\n    vec (dim_row A)\n     (\\<lambda>i.\n         mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n    i", "by auto"], ["proof (state)\nthis:\n  vec (dim_row (mat_of_cols (dim_row A) (cols A @ [b])))\n   (\\<lambda>i. mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n  i =\n  vec (dim_row A)\n   (\\<lambda>i. mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "also"], ["proof (state)\nthis:\n  vec (dim_row (mat_of_cols (dim_row A) (cols A @ [b])))\n   (\\<lambda>i. mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n  i =\n  vec (dim_row A)\n   (\\<lambda>i. mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "have \"... = vec_index ((cols A @ [b]) ! dim_col A) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec (dim_row A)\n     (\\<lambda>i.\n         mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n    i =\n    (cols A @ [b]) ! dim_col A $ i", "by (simp add: \\<open>i < dim_vec b\\<close> assms mat_of_cols_index)"], ["proof (state)\nthis:\n  vec (dim_row A)\n   (\\<lambda>i. mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n  i =\n  (cols A @ [b]) ! dim_col A $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "also"], ["proof (state)\nthis:\n  vec (dim_row A)\n   (\\<lambda>i. mat_of_cols (dim_row A) (cols A @ [b]) $$ (i, dim_col A)) $\n  i =\n  (cols A @ [b]) ! dim_col A $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "have \"... = vec_index b i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cols A @ [b]) ! dim_col A $ i = b $ i", "by (metis cols_length nth_append_length)"], ["proof (state)\nthis:\n  (cols A @ [b]) ! dim_col A $ i = b $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec b \\<Longrightarrow>\n       col (mat_append_col A b) (dim_col A) $ i = b $ i", "finally"], ["proof (chain)\npicking this:\n  col (mat_append_col A b) (dim_col A) $ i = b $ i", "show \"col (mat_append_col A b) (dim_col A) $ i = b $ i\""], ["proof (prove)\nusing this:\n  col (mat_append_col A b) (dim_col A) $ i = b $ i\n\ngoal (1 subgoal):\n 1. col (mat_append_col A b) (dim_col A) $ i = b $ i", "."], ["proof (state)\nthis:\n  col (mat_append_col A b) (dim_col A) $ i = b $ i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_append_col_vec_index:\n  assumes \"i < dim_row A\"\n    and \"dim_row A = dim_vec b\"\n  shows \"(row (mat_append_col A b) i) $ (dim_col A) = b $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ dim_col A = b $ i", "using mat_append_col_col"], ["proof (prove)\nusing this:\n  dim_row ?A = dim_vec ?b \\<Longrightarrow>\n  col (mat_append_col ?A ?b) (dim_col ?A) = ?b\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ dim_col A = b $ i", "by (metis (no_types, lifting) One_nat_def add_Suc_right assms(1) assms(2) carrier_matD(2) \n      col_def dim_row_mat(1) index_row(1) index_vec lessI mat_append_col.simps \n      mat_append_col_dims mat_of_cols_def semiring_norm(51))"], ["", "lemma mat_append_row_row:\n  assumes \"dim_col A = dim_vec c\" \n  shows \"row (mat_append_row A c) (dim_row A) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (mat_append_row A c) (dim_row A) = c", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i\n 2. dim_vec (row (mat_append_row A c) (dim_row A)) = dim_vec c", "let ?nA = \"(mat_of_rows (dim_col A) (Matrix.rows A @ [c]))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i\n 2. dim_vec (row (mat_append_row A c) (dim_row A)) = dim_vec c", "show \"dim_vec (Matrix.row (mat_append_row A c) (dim_row A)) = dim_vec c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (row (mat_append_row A c) (dim_row A)) = dim_vec c", "using assms"], ["proof (prove)\nusing this:\n  dim_col A = dim_vec c\n\ngoal (1 subgoal):\n 1. dim_vec (row (mat_append_row A c) (dim_row A)) = dim_vec c", "by simp"], ["proof (state)\nthis:\n  dim_vec (row (mat_append_row A c) (dim_row A)) = dim_vec c\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "assume \"i < dim_vec c\""], ["proof (state)\nthis:\n  i < dim_vec c\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "from mat_append_row.simps[of A c]"], ["proof (chain)\npicking this:\n  mat_append_row A c = mat_of_rows (dim_col A) (rows A @ [c])", "have \"row (mat_append_row A c) (dim_row A) $ i = vec_index (row ?nA (dim_row A)) i\""], ["proof (prove)\nusing this:\n  mat_append_row A c = mat_of_rows (dim_col A) (rows A @ [c])\n\ngoal (1 subgoal):\n 1. row (mat_append_row A c) (dim_row A) $ i =\n    row (mat_of_rows (dim_col A) (rows A @ [c])) (dim_row A) $ i", "by auto"], ["proof (state)\nthis:\n  row (mat_append_row A c) (dim_row A) $ i =\n  row (mat_of_rows (dim_col A) (rows A @ [c])) (dim_row A) $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "also"], ["proof (state)\nthis:\n  row (mat_append_row A c) (dim_row A) $ i =\n  row (mat_of_rows (dim_col A) (rows A @ [c])) (dim_row A) $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "have \"... = vec_index (vec (dim_col ?nA) (\\<lambda> j. ?nA $$ (dim_row A,j))) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (mat_of_rows (dim_col A) (rows A @ [c])) (dim_row A) $ i =\n    vec (dim_col (mat_of_rows (dim_col A) (rows A @ [c])))\n     (\\<lambda>j.\n         mat_of_rows (dim_col A) (rows A @ [c]) $$ (dim_row A, j)) $\n    i", "by (simp add: Matrix.row_def)"], ["proof (state)\nthis:\n  row (mat_of_rows (dim_col A) (rows A @ [c])) (dim_row A) $ i =\n  vec (dim_col (mat_of_rows (dim_col A) (rows A @ [c])))\n   (\\<lambda>j. mat_of_rows (dim_col A) (rows A @ [c]) $$ (dim_row A, j)) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "also"], ["proof (state)\nthis:\n  row (mat_of_rows (dim_col A) (rows A @ [c])) (dim_row A) $ i =\n  vec (dim_col (mat_of_rows (dim_col A) (rows A @ [c])))\n   (\\<lambda>j. mat_of_rows (dim_col A) (rows A @ [c]) $$ (dim_row A, j)) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "have \"... =  vec_index ((rows A @ [c]) ! dim_row A) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec (dim_col (mat_of_rows (dim_col A) (rows A @ [c])))\n     (\\<lambda>j.\n         mat_of_rows (dim_col A) (rows A @ [c]) $$ (dim_row A, j)) $\n    i =\n    (rows A @ [c]) ! dim_row A $ i", "by (metis (mono_tags, lifting) \\<open>mat_append_row A c = mat_of_rows (dim_col A) (Matrix.rows A @ [c])\\<close> \n        add_Suc_right append_Nil2 assms calculation carrier_matD(1) col_transpose cols_transpose \n        index_transpose_mat(2) index_transpose_mat(3) length_append length_rows lessI list.size(3) \n        mat_append_col.elims mat_append_col_col mat_append_row_dims nth_append_length \n        transpose_mat_of_rows One_nat_def)"], ["proof (state)\nthis:\n  vec (dim_col (mat_of_rows (dim_col A) (rows A @ [c])))\n   (\\<lambda>j. mat_of_rows (dim_col A) (rows A @ [c]) $$ (dim_row A, j)) $\n  i =\n  (rows A @ [c]) ! dim_row A $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "also"], ["proof (state)\nthis:\n  vec (dim_col (mat_of_rows (dim_col A) (rows A @ [c])))\n   (\\<lambda>j. mat_of_rows (dim_col A) (rows A @ [c]) $$ (dim_row A, j)) $\n  i =\n  (rows A @ [c]) ! dim_row A $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "have \"... = vec_index c i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rows A @ [c]) ! dim_row A $ i = c $ i", "by (metis length_rows nth_append_length)"], ["proof (state)\nthis:\n  (rows A @ [c]) ! dim_row A $ i = c $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec c \\<Longrightarrow>\n       row (mat_append_row A c) (dim_row A) $ i = c $ i", "finally"], ["proof (chain)\npicking this:\n  row (mat_append_row A c) (dim_row A) $ i = c $ i", "show \"Matrix.row (mat_append_row A c) (dim_row A) $ i = c $ i\""], ["proof (prove)\nusing this:\n  row (mat_append_row A c) (dim_row A) $ i = c $ i\n\ngoal (1 subgoal):\n 1. row (mat_append_row A c) (dim_row A) $ i = c $ i", "."], ["proof (state)\nthis:\n  row (mat_append_row A c) (dim_row A) $ i = c $ i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_append_row_in_mat:\n  assumes \"i < dim_row A\"\n  shows \"row (mat_append_row A r) i = row A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (mat_append_row A r) i = row A i", "by (auto) (metis assms le_imp_less_Suc length_append_singleton \n      length_rows mat_of_rows_row nat_less_le nth_append nth_rows row_carrier)"], ["", "lemma mat_append_row_vec_index:\n  assumes \"i < dim_col A\"\n    and \"dim_col A = dim_vec b\"\n  shows \"vec_index (col (mat_append_row A b) i) (dim_row A) = vec_index b i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col (mat_append_row A b) i $ dim_row A = b $ i", "by (metis One_nat_def add.right_neutral add_Suc_right assms(1) assms(2) carrier_matD(1) \n      carrier_matD(2) index_col index_row(1) lessI mat_append_row_dims mat_append_row_row)"], ["", "lemma mat_append_col_access_in_mat:\n  assumes \"dim_row A = dim_vec b\"\n   and \"i < dim_row A\"\n    and \"j < dim_col A\"\n  shows \"(row (mat_append_col A b) i) $ j = (row A i) $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ j = row A i $ j", "using Matrix.row_transpose[of j A, OF assms(3)]\n    Matrix.transpose_transpose[of \"(mat_append_col A b)\"] assms carrier_matD(1) \n    carrier_matD(2) cols_length cols_transpose index_col index_row(1)[of i \"mat_append_col A b\" j] index_transpose_mat(2)\n    mat_append_col.simps mat_append_col_dims\n    mat_of_cols_carrier(3) mat_of_rows_row\n    nth_append nth_rows row_carrier trans_less_add1 transpose_mat_of_cols\n    mat_of_cols_index"], ["proof (prove)\nusing this:\n  row A\\<^sup>T j = col A j\n  (mat_append_col A b)\\<^sup>T\\<^sup>T = mat_append_col A b\n  dim_row A = dim_vec b\n  i < dim_row A\n  j < dim_col A\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_row ?A = ?nr\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_col ?A = ?nc\n  length (cols ?A) = dim_col ?A\n  cols ?A\\<^sup>T = rows ?A\n  \\<lbrakk>?i < dim_row ?A; ?j < dim_col ?A\\<rbrakk>\n  \\<Longrightarrow> col ?A ?j $ ?i = ?A $$ (?i, ?j)\n  \\<lbrakk>i < dim_row (mat_append_col A b);\n   j < dim_col (mat_append_col A b)\\<rbrakk>\n  \\<Longrightarrow> row (mat_append_col A b) i $ j =\n                    mat_append_col A b $$ (i, j)\n  dim_row ?A\\<^sup>T = dim_col ?A\n  mat_append_col ?A ?b = mat_of_cols (dim_row ?A) (cols ?A @ [?b])\n  mat_append_col ?A ?b \\<in> carrier_mat (dim_row ?A) (dim_col ?A + 1)\n  dim_col (mat_of_cols ?n ?vs) = length ?vs\n  \\<lbrakk>?i < length ?vs; ?vs ! ?i \\<in> carrier_vec ?n\\<rbrakk>\n  \\<Longrightarrow> row (mat_of_rows ?n ?vs) ?i = ?vs ! ?i\n  (?xs @ ?ys) ! ?n =\n  (if ?n < length ?xs then ?xs ! ?n else ?ys ! (?n - length ?xs))\n  ?i < dim_row ?A \\<Longrightarrow> rows ?A ! ?i = row ?A ?i\n  row ?A ?i \\<in> carrier_vec (dim_col ?A)\n  ?i < ?j \\<Longrightarrow> ?i < ?j + ?m\n  (mat_of_cols ?n ?vs)\\<^sup>T = mat_of_rows ?n ?vs\n  \\<lbrakk>?i < ?n; ?j < length ?ws\\<rbrakk>\n  \\<Longrightarrow> mat_of_cols ?n ?ws $$ (?i, ?j) = ?ws ! ?j $ ?i\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ j = row A i $ j", "by (smt cols_nth index_row(1))"], ["", "lemma constructing_append_col_row: \n  assumes \"i < dim_row A\"\n    and \"dim_row A = dim_vec b\"\n  shows \"row (mat_append_col A b) i = row A i @\\<^sub>v [vec_index b i]\\<^sub>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i = row A i @\\<^sub>v [b $ i]\\<^sub>v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v) \\<Longrightarrow>\n       row (mat_append_col A b) i $ ia =\n       (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia\n 2. dim_vec (row (mat_append_col A b) i) =\n    dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v)", "show 1: \"dim_vec (Matrix.row (mat_append_col A b) i) = dim_vec (Matrix.row A i @\\<^sub>v [b $ i]\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (row (mat_append_col A b) i) =\n    dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v)", "by simp"], ["proof (state)\nthis:\n  dim_vec (row (mat_append_col A b) i) =\n  dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v) \\<Longrightarrow>\n       row (mat_append_col A b) i $ ia =\n       (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "fix ia"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v) \\<Longrightarrow>\n       row (mat_append_col A b) i $ ia =\n       (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "assume a: \"ia < dim_vec (Matrix.row A i @\\<^sub>v [b $ i]\\<^sub>v)\""], ["proof (state)\nthis:\n  ia < dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v) \\<Longrightarrow>\n       row (mat_append_col A b) i $ ia =\n       (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "consider \"ia = dim_col A\" | \"ia < dim_col A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ia = dim_col A \\<Longrightarrow> thesis;\n     ia < dim_col A \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using a less_SucE"], ["proof (prove)\nusing this:\n  ia < dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v)\n  \\<lbrakk>?m < Suc ?n; ?m < ?n \\<Longrightarrow> ?P;\n   ?m = ?n \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ia = dim_col A \\<Longrightarrow> thesis;\n     ia < dim_col A \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>ia = dim_col A \\<Longrightarrow> ?thesis;\n   ia < dim_col A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v) \\<Longrightarrow>\n       row (mat_append_col A b) i $ ia =\n       (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>ia = dim_col A \\<Longrightarrow> ?thesis;\n   ia < dim_col A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"row (mat_append_col A b) i $ ia = (Matrix.row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia \""], ["proof (prove)\nusing this:\n  \\<lbrakk>ia = dim_col A \\<Longrightarrow> ?thesis;\n   ia < dim_col A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ia = dim_col A \\<Longrightarrow>\n    row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia\n 2. ia < dim_col A \\<Longrightarrow>\n    row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "case 1"], ["proof (state)\nthis:\n  ia = dim_col A\n\ngoal (2 subgoals):\n 1. ia = dim_col A \\<Longrightarrow>\n    row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia\n 2. ia < dim_col A \\<Longrightarrow>\n    row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "then"], ["proof (chain)\npicking this:\n  ia = dim_col A", "show ?thesis"], ["proof (prove)\nusing this:\n  ia = dim_col A\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "using mat_append_col_vec_index[of i A b, OF assms]"], ["proof (prove)\nusing this:\n  ia = dim_col A\n  row (mat_append_col A b) i $ dim_col A = b $ i\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "by auto"], ["proof (state)\nthis:\n  row (mat_append_col A b) i $ ia = (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia\n\ngoal (1 subgoal):\n 1. ia < dim_col A \\<Longrightarrow>\n    row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ia < dim_col A \\<Longrightarrow>\n    row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "case 2"], ["proof (state)\nthis:\n  ia < dim_col A\n\ngoal (1 subgoal):\n 1. ia < dim_col A \\<Longrightarrow>\n    row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "have \"row (mat_append_col A b) i $ ia = (mat_append_col A b) $$ (i, ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ ia = mat_append_col A b $$ (i, ia)", "using a assms(1)"], ["proof (prove)\nusing this:\n  ia < dim_vec (row A i @\\<^sub>v [b $ i]\\<^sub>v)\n  i < dim_row A\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ ia = mat_append_col A b $$ (i, ia)", "by auto"], ["proof (state)\nthis:\n  row (mat_append_col A b) i $ ia = mat_append_col A b $$ (i, ia)\n\ngoal (1 subgoal):\n 1. ia < dim_col A \\<Longrightarrow>\n    row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "then"], ["proof (chain)\npicking this:\n  row (mat_append_col A b) i $ ia = mat_append_col A b $$ (i, ia)", "show ?thesis"], ["proof (prove)\nusing this:\n  row (mat_append_col A b) i $ ia = mat_append_col A b $$ (i, ia)\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "using mat_append_col_access_in_mat[of A b i ia, OF assms(2) assms(1) 2]"], ["proof (prove)\nusing this:\n  row (mat_append_col A b) i $ ia = mat_append_col A b $$ (i, ia)\n  row (mat_append_col A b) i $ ia = row A i $ ia\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "using \"2\""], ["proof (prove)\nusing this:\n  row (mat_append_col A b) i $ ia = mat_append_col A b $$ (i, ia)\n  row (mat_append_col A b) i $ ia = row A i $ ia\n  ia < dim_col A\n\ngoal (1 subgoal):\n 1. row (mat_append_col A b) i $ ia =\n    (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia", "by auto"], ["proof (state)\nthis:\n  row (mat_append_col A b) i $ ia = (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  row (mat_append_col A b) i $ ia = (row A i @\\<^sub>v [b $ i]\\<^sub>v) $ ia\n\ngoal:\nNo subgoals!", "qed"], ["", "definition one_element_vec where \"one_element_vec n e = vec n (\\<lambda>i. e)\""], ["", "lemma one_element_vec_carrier: \"one_element_vec n e \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_element_vec n e \\<in> carrier_vec n", "unfolding one_element_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vec n (\\<lambda>i. e) \\<in> carrier_vec n", "by auto"], ["", "lemma one_element_vec_dim [simp]: \"dim_vec (one_element_vec n (r::rat)) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (one_element_vec n r) = n", "by (simp add: one_element_vec_def)"], ["", "lemma one_element_vec_access [simp]: \"\\<And>i. i < n \\<Longrightarrow> vec_index (one_element_vec n e) i = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < n \\<Longrightarrow> one_element_vec n e $ i = e", "unfolding one_element_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < n \\<Longrightarrow> vec n (\\<lambda>i. e) $ i = e", "by (auto)"], ["", "fun single_nz_val where \"single_nz_val n i v = vec n (\\<lambda>j. (if i = j then v else 0))\""], ["", "lemma single_nz_val_carrier: \"single_nz_val n i v \\<in> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<in> carrier_vec n", "by auto"], ["", "lemma single_nz_val_access1 [simp]: \"i < n \\<Longrightarrow> single_nz_val n i v $ i = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < n \\<Longrightarrow> single_nz_val n i v $ i = v", "by auto"], ["", "lemma single_nz_val_access2 [simp]: \"i < n \\<Longrightarrow> j < n \\<Longrightarrow> i \\<noteq> j\\<Longrightarrow> single_nz_val n i v $ j = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < n; j < n; i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> single_nz_val n i v $ j = (0::'a)", "by (auto)"], ["", "lemma \"i < n \\<Longrightarrow> (v \\<cdot>\\<^sub>v unit_vec n i) $ i = (v::'a::{monoid_mult,times,zero_neq_one})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < n \\<Longrightarrow> (v \\<cdot>\\<^sub>v unit_vec n i) $ i = v", "by(auto)"], ["", "lemma single_nz_val_unit_vec: \n  fixes v::\"'a::{monoid_mult,times,zero_neq_one,mult_zero}\"\n  shows \"v \\<cdot>\\<^sub>v (unit_vec n i) = single_nz_val n i v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<cdot>\\<^sub>v unit_vec n i = single_nz_val n i v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec (single_nz_val n i v) \\<Longrightarrow>\n       (v \\<cdot>\\<^sub>v unit_vec n i) $ ia = single_nz_val n i v $ ia\n 2. dim_vec (v \\<cdot>\\<^sub>v unit_vec n i) = dim_vec (single_nz_val n i v)", "show *: \"dim_vec (v \\<cdot>\\<^sub>v unit_vec n i) = dim_vec (single_nz_val n i v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (v \\<cdot>\\<^sub>v unit_vec n i) = dim_vec (single_nz_val n i v)", "by (simp)"], ["proof (state)\nthis:\n  dim_vec (v \\<cdot>\\<^sub>v unit_vec n i) = dim_vec (single_nz_val n i v)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (single_nz_val n i v) \\<Longrightarrow>\n       (v \\<cdot>\\<^sub>v unit_vec n i) $ ia = single_nz_val n i v $ ia", "fix ia"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (single_nz_val n i v) \\<Longrightarrow>\n       (v \\<cdot>\\<^sub>v unit_vec n i) $ ia = single_nz_val n i v $ ia", "assume \"ia < dim_vec (single_nz_val n i v)\""], ["proof (state)\nthis:\n  ia < dim_vec (single_nz_val n i v)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (single_nz_val n i v) \\<Longrightarrow>\n       (v \\<cdot>\\<^sub>v unit_vec n i) $ ia = single_nz_val n i v $ ia", "then"], ["proof (chain)\npicking this:\n  ia < dim_vec (single_nz_val n i v)", "show \"(v \\<cdot>\\<^sub>v unit_vec n i) $ ia = single_nz_val n i v $ ia\""], ["proof (prove)\nusing this:\n  ia < dim_vec (single_nz_val n i v)\n\ngoal (1 subgoal):\n 1. (v \\<cdot>\\<^sub>v unit_vec n i) $ ia = single_nz_val n i v $ ia", "using *"], ["proof (prove)\nusing this:\n  ia < dim_vec (single_nz_val n i v)\n  dim_vec (v \\<cdot>\\<^sub>v unit_vec n i) = dim_vec (single_nz_val n i v)\n\ngoal (1 subgoal):\n 1. (v \\<cdot>\\<^sub>v unit_vec n i) $ ia = single_nz_val n i v $ ia", "by (simp add: unit_vec_def)"], ["proof (state)\nthis:\n  (v \\<cdot>\\<^sub>v unit_vec n i) $ ia = single_nz_val n i v $ ia\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma single_nz_valI [intro]:\n  fixes v i val\n  assumes \"\\<And>j. j < dim_vec v \\<Longrightarrow> j \\<noteq> i \\<Longrightarrow> v$j = 0\"\n  assumes \"v$i = val\"\n  shows \"v = single_nz_val (dim_vec v) i val\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = single_nz_val (dim_vec v) i val", "using assms(1) assms(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j < dim_vec v; ?j \\<noteq> i\\<rbrakk>\n  \\<Longrightarrow> v $ ?j = (0::'a)\n  v $ i = val\n\ngoal (1 subgoal):\n 1. v = single_nz_val (dim_vec v) i val", "by auto"], ["", "lemma single_nz_val_dotP:\n  assumes \"i < n\"\n  assumes \"dim_vec x = n\"\n  shows \"single_nz_val n i v \\<bullet> x = v * x $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "let ?y = \"single_nz_val n i v\""], ["proof (state)\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "have \"single_nz_val n i v \\<bullet> x = (\\<Sum>i\\<in>{0 ..< dim_vec x}. ?y $ i * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x =\n    (\\<Sum>ia = 0..<dim_vec x. single_nz_val n i v $ ia * x $ ia)", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<dim_vec x. single_nz_val n i v $ ia * x $ ia) =\n    (\\<Sum>ia = 0..<dim_vec x. single_nz_val n i v $ ia * x $ ia)", "by auto"], ["proof (state)\nthis:\n  single_nz_val n i v \\<bullet> x =\n  (\\<Sum>ia = 0..<dim_vec x. single_nz_val n i v $ ia * x $ ia)\n\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "also"], ["proof (state)\nthis:\n  single_nz_val n i v \\<bullet> x =\n  (\\<Sum>ia = 0..<dim_vec x. single_nz_val n i v $ ia * x $ ia)\n\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "have \"... = (\\<Sum>i\\<in>{0 ..< dim_vec x}-{i}. ?y $ i * x $ i) + ?y $ i * x $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<dim_vec x. single_nz_val n i v $ ia * x $ ia) =\n    (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) +\n    single_nz_val n i v $ i * x $ i", "by (metis (no_types, lifting) add.commute assms(1) assms(2) atLeast0LessThan \n        finite_atLeastLessThan lessThan_iff sum.remove)"], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<dim_vec x. single_nz_val n i v $ ia * x $ ia) =\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) +\n  single_nz_val n i v $ i * x $ i\n\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "also"], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<dim_vec x. single_nz_val n i v $ ia * x $ ia) =\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) +\n  single_nz_val n i v $ i * x $ i\n\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "have \"... = (\\<Sum>i\\<in>{0 ..< dim_vec x}-{i}. ?y $ i * x $ i) + v * x $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) +\n    single_nz_val n i v $ i * x $ i =\n    (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) +\n    v * x $ i", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) +\n  single_nz_val n i v $ i * x $ i =\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) +\n  v * x $ i\n\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "also"], ["proof (state)\nthis:\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) +\n  single_nz_val n i v $ i * x $ i =\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) +\n  v * x $ i\n\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "have \"... = v * x $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) +\n    v * x $ i =\n    v * x $ i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) +\n    v * x $ i =\n    v * x $ i", "have \"\\<And>j. j \\<in> {0 ..< dim_vec x}-{i} \\<Longrightarrow> ?y $ j * x $ j = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> {0..<dim_vec x} - {i} \\<Longrightarrow>\n       single_nz_val n i v $ j * x $ j = (0::'a)", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  ?j \\<in> {0..<dim_vec x} - {i} \\<Longrightarrow>\n  single_nz_val n i v $ ?j * x $ ?j = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) +\n    v * x $ i =\n    v * x $ i", "then"], ["proof (chain)\npicking this:\n  ?j \\<in> {0..<dim_vec x} - {i} \\<Longrightarrow>\n  single_nz_val n i v $ ?j * x $ ?j = (0::'a)", "have \"(\\<Sum>i\\<in>{0 ..< dim_vec x}-{i}. ?y $ i * x $ i) = 0\""], ["proof (prove)\nusing this:\n  ?j \\<in> {0..<dim_vec x} - {i} \\<Longrightarrow>\n  single_nz_val n i v $ ?j * x $ ?j = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) =\n    (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) +\n    v * x $ i =\n    v * x $ i", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) =\n  (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}.\n       single_nz_val n i v $ ia * x $ ia) +\n    v * x $ i =\n    v * x $ i", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) +\n  v * x $ i =\n  v * x $ i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>ia\\<in>{0..<dim_vec x} - {i}. single_nz_val n i v $ ia * x $ ia) +\n  v * x $ i =\n  v * x $ i\n\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "finally"], ["proof (chain)\npicking this:\n  single_nz_val n i v \\<bullet> x = v * x $ i", "show ?thesis"], ["proof (prove)\nusing this:\n  single_nz_val n i v \\<bullet> x = v * x $ i\n\ngoal (1 subgoal):\n 1. single_nz_val n i v \\<bullet> x = v * x $ i", "."], ["proof (state)\nthis:\n  single_nz_val n i v \\<bullet> x = v * x $ i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma single_nz_zero_singleton: \"single_nz_val 1 0 v = [v]\\<^sub>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. single_nz_val 1 0 v = [v]\\<^sub>v", "by (auto)"], ["", "lemma append_one_elem_zero_dotP:\n  assumes \"dim_vec u = m\" \n    and \"dim_vec x = n\"\n  shows \"(one_element_vec n e @\\<^sub>v (0\\<^sub>v m)) \\<bullet> (x @\\<^sub>v u) = (\\<Sum>i\\<in>{0 ..< dim_vec x}. e * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "let ?OEV = \"one_element_vec n e\""], ["proof (state)\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "have \"dim_vec (?OEV @\\<^sub>v (0\\<^sub>v m)) = dim_vec (x @\\<^sub>v u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) =\n    dim_vec (x @\\<^sub>v u)", "by (simp add: assms(1) assms(2) one_element_vec_carrier)"], ["proof (state)\nthis:\n  dim_vec (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) =\n  dim_vec (x @\\<^sub>v u)\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "have \"(one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) = one_element_vec n e \\<bullet> x + 0\\<^sub>v m \\<bullet> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    one_element_vec n e \\<bullet> x + 0\\<^sub>v m \\<bullet> u", "using scalar_prod_append[of ?OEV _ \"0\\<^sub>v m\" _ x u] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>one_element_vec n e \\<in> carrier_vec ?n1.0;\n   0\\<^sub>v m \\<in> carrier_vec ?n2.0; x \\<in> carrier_vec ?n1.0;\n   u \\<in> carrier_vec ?n2.0\\<rbrakk>\n  \\<Longrightarrow> (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet>\n                    (x @\\<^sub>v u) =\n                    one_element_vec n e \\<bullet> x +\n                    0\\<^sub>v m \\<bullet> u\n  dim_vec u = m\n  dim_vec x = n\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    one_element_vec n e \\<bullet> x + 0\\<^sub>v m \\<bullet> u", "by (meson carrier_vec_dim_vec one_element_vec_carrier zero_carrier_vec)"], ["proof (state)\nthis:\n  (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n  one_element_vec n e \\<bullet> x + 0\\<^sub>v m \\<bullet> u\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "also"], ["proof (state)\nthis:\n  (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n  one_element_vec n e \\<bullet> x + 0\\<^sub>v m \\<bullet> u\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "have \"... = (\\<Sum>i\\<in>{0..<dim_vec x}. ?OEV $ i * x $ i) + (\\<Sum>i\\<in>{0..<dim_vec u}. (0\\<^sub>v m)$i * u$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_element_vec n e \\<bullet> x + 0\\<^sub>v m \\<bullet> u =\n    (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i)", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i) =\n    (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i)", "by blast"], ["proof (state)\nthis:\n  one_element_vec n e \\<bullet> x + 0\\<^sub>v m \\<bullet> u =\n  (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n  (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i)\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "also"], ["proof (state)\nthis:\n  one_element_vec n e \\<bullet> x + 0\\<^sub>v m \\<bullet> u =\n  (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n  (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i)\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "have \"... = (\\<Sum>i\\<in>{0..<dim_vec x}. ?OEV $ i * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i) =\n    (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i)", "using assms(1)"], ["proof (prove)\nusing this:\n  dim_vec u = m\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n    (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i) =\n    (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n  (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i) =\n  (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) +\n  (\\<Sum>i = 0..<dim_vec u. 0\\<^sub>v m $ i * u $ i) =\n  (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i)\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "have \"... = (\\<Sum>i\\<in>{0..<dim_vec x}. e * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "using assms(2)"], ["proof (prove)\nusing this:\n  dim_vec x = n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec x. one_element_vec n e $ i * x $ i) =\n  (\\<Sum>i = 0..<dim_vec x. e * x $ i)\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "finally"], ["proof (chain)\npicking this:\n  (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n  (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "show ?thesis"], ["proof (prove)\nusing this:\n  (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n  (\\<Sum>i = 0..<dim_vec x. e * x $ i)\n\ngoal (1 subgoal):\n 1. (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n    (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "."], ["proof (state)\nthis:\n  (one_element_vec n e @\\<^sub>v 0\\<^sub>v m) \\<bullet> (x @\\<^sub>v u) =\n  (\\<Sum>i = 0..<dim_vec x. e * x $ i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_element_vec_dotP:\n  assumes \"dim_vec x = n\"\n  shows \"(one_element_vec n e) \\<bullet> x = (\\<Sum>i\\<in>{0 ..< dim_vec x}. e * x $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_element_vec n e \\<bullet> x = (\\<Sum>i = 0..<dim_vec x. e * x $ i)", "by (metis (no_types, lifting) assms one_element_vec_access scalar_prod_def sum.ivl_cong)"], ["", "lemma singleton_dotP [simp]: \"dim_vec x = 1 \\<Longrightarrow> [v]\\<^sub>v \\<bullet> x = v * x$0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec x = 1 \\<Longrightarrow> [v]\\<^sub>v \\<bullet> x = v * x $ 0", "by (metis dim_vec index_vec less_one single_nz_valI single_nz_val_dotP)"], ["", "lemma singletons_dotP [simp]: \"[v]\\<^sub>v \\<bullet> [w]\\<^sub>v = v * w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [v]\\<^sub>v \\<bullet> [w]\\<^sub>v = v * w", "by (metis dim_vec index_vec less_one singleton_dotP)"], ["", "lemma singleton_appends_dotP [simp]: \"dim_vec x = dim_vec y \\<Longrightarrow> (x @\\<^sub>v [v]\\<^sub>v) \\<bullet> (y @\\<^sub>v [w]\\<^sub>v) = x \\<bullet> y + v * w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec x = dim_vec y \\<Longrightarrow>\n    (x @\\<^sub>v [v]\\<^sub>v) \\<bullet> (y @\\<^sub>v [w]\\<^sub>v) =\n    x \\<bullet> y + v * w", "using scalar_prod_append[of x \"dim_vec x\" \"[v]\\<^sub>v\" 1 y \"[w]\\<^sub>v\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> carrier_vec (dim_vec x); [v]\\<^sub>v \\<in> carrier_vec 1;\n   y \\<in> carrier_vec (dim_vec x); [w]\\<^sub>v \\<in> carrier_vec 1\\<rbrakk>\n  \\<Longrightarrow> (x @\\<^sub>v [v]\\<^sub>v) \\<bullet>\n                    (y @\\<^sub>v [w]\\<^sub>v) =\n                    x \\<bullet> y + [v]\\<^sub>v \\<bullet> [w]\\<^sub>v\n\ngoal (1 subgoal):\n 1. dim_vec x = dim_vec y \\<Longrightarrow>\n    (x @\\<^sub>v [v]\\<^sub>v) \\<bullet> (y @\\<^sub>v [w]\\<^sub>v) =\n    x \\<bullet> y + v * w", "by (metis carrier_dim_vec singletons_dotP vec_carrier)"], ["", "end"]]}