{"file_name": "/home/qj213/afp-2021-10-22/thys/Linear_Programming/Linear_Programming.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Linear_Programming", "problem_names": ["lemma optimal_setI[intro]:\n  assumes \"x \\<in> S\"\n  assumes \"\\<And>y. y \\<in> S \\<Longrightarrow> (\\<lambda>x y. (y \\<bullet> c) \\<ge> (x \\<bullet> c)) x y\"\n  shows \"x \\<in> optimal_set (\\<lambda>x y. (y \\<bullet> c) \\<ge> (x \\<bullet> c)) S\"", "lemma max_lpI [intro]:\n  assumes \"[A *\\<^sub>v x]\\<le>b\"\n  assumes \"(\\<And>y. [A *\\<^sub>v y]\\<le>b \\<Longrightarrow> (\\<lambda>x y. (y \\<bullet> c) \\<ge> (x \\<bullet> c)) y x)\"\n  shows \"x \\<in> max_lp A b c\"", "lemma min_lpI [intro]:\n  assumes \"[y \\<^sub>v* A]=c\"\n    and \"(\\<And>i. i<dim_vec y \\<Longrightarrow> y $ i \\<ge> 0)\"\n  assumes \"(\\<And>x. x \\<in> sat_dual A c \\<Longrightarrow> (\\<lambda>x y. (y \\<bullet> c) \\<ge> (x \\<bullet> c)) y x)\"\n  shows \"y \\<in> min_lp A b c\"", "lemma sat_primalD [dest]:\n  assumes \"x \\<in> sat_primal A b\"\n  shows \"[A *\\<^sub>v x]\\<le>b\"", "lemma sat_primalI [intro]:\n  assumes \"[A *\\<^sub>v x]\\<le>b\"\n  shows \"x \\<in> sat_primal A b\"", "lemma sat_dualD [dest]:\n  assumes \"y \\<in> sat_dual A c\"\n  shows \"[y \\<^sub>v* A]=c\" \"(\\<forall>i<dim_vec y. y $ i \\<ge> 0)\"", "lemma sat_dualI [intro]:\n  assumes \"[y \\<^sub>v* A]=c\" \"(\\<forall>i<dim_vec y. y $ i \\<ge> 0)\"\n  shows \"y \\<in> sat_dual A c\"", "lemma sol_dim_in_sat_primal: \"x \\<in> sat_primal A b \\<Longrightarrow> dim_vec x = dim_col A\"", "lemma sol_dim_in_max_lp: \"x \\<in> max_lp A b c \\<Longrightarrow> dim_vec x = dim_col A\"", "lemma sol_dim_in_sat_dual: \"x \\<in> sat_dual A c \\<Longrightarrow> dim_vec x = dim_row A\"", "lemma sol_dim_in_min_lp: \"x \\<in> min_lp A b c \\<Longrightarrow> dim_vec x = dim_row A\"", "lemma min_lp_in_sat_dual: \"x \\<in> min_lp A b c \\<Longrightarrow> x \\<in> sat_dual A c\"", "lemma max_lp_in_sat_primal: \"x \\<in> max_lp A b c \\<Longrightarrow> x \\<in> sat_primal A b\"", "lemma dim_b_row_A: \"dim_vec b = dim_row A\"", "lemma dim_b_col_A: \"dim_vec c = dim_col A\"", "lemma weak_duality_aux:\n  fixes i j\n  assumes \"i \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b}\"\n    and \"j \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\" \n  shows \"i \\<le> j\"", "theorem weak_duality_theorem:\n  assumes \"x \\<in> max_lp A b c\"\n  assumes \"y \\<in> min_lp A b c\"\n  shows \"x \\<bullet> c \\<le> y \\<bullet> b\"", "lemma create_opt_sol_satisfies:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  shows \"\\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set ((x_times_c_geq_y_times_b c b # mat_leqb_eqc A b c @\n                      from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))))\"", "lemma create_opt_sol_sat_leq_mat:\n  assumes \"dim_vec b = dim_row A\"\n  assumes \"create_optimal_solutions A b c = Sat X\"\n    and \"(x, y) = split_i_j_x (dim_col A) (dim_vec b) X\"\n  shows \"[A *\\<^sub>v x]\\<le>b\"", "lemma create_opt_sol_sat_eq_mat:\n  assumes \"dim_vec c = dim_row A\\<^sup>T\" \n    and \"dim_vec b = dim_col A\\<^sup>T\"\n  assumes \"create_optimal_solutions A b c = Sat X\"\n    and \"(x, y) = split_i_j_x (dim_vec c) (dim_vec c + dim_vec b) X\"\n  shows \"[y \\<^sub>v* A]=c\"", "lemma create_opt_sol_satisfies_leq:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"x \\<bullet> c \\<ge> y \\<bullet> b\"", "lemma create_opt_sol_satisfies_geq0:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"\\<And>i. i < dim_vec y \\<Longrightarrow> y$i \\<ge> 0\"", "lemma create_opt_sol_in_LP:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"[A *\\<^sub>v x]\\<le>b\" \"[y \\<^sub>v* A]=c\" \"x \\<bullet> c \\<ge> y \\<bullet> b\" \"\\<And>i. i < dim_vec y \\<Longrightarrow> y$i \\<ge> 0\"", "lemma create_optim_in_sols:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"c \\<bullet> x \\<in> {c \\<bullet> x |x. [A *\\<^sub>v x]\\<le>b}\"\n    \"b \\<bullet> y \\<in> {b \\<bullet> y |y. [y \\<^sub>v* A]=c \\<and> (\\<forall>i < dim_vec y. y$i \\<ge> 0)}\"", "lemma cx_leq_bx_in_creating_opt:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"c \\<bullet> x \\<le> b \\<bullet> y\"", "lemma min_max_for_sol:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"c \\<bullet> x = b \\<bullet> y\"", "lemma create_opt_solutions_correct:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"x \\<in> max_lp A b c\"", "lemma optimize_no_cond_correct:\n  assumes \"optimize_no_cond A b c = Sat x\"\n  shows \"x \\<in> max_lp A b c\"", "lemma optimize_no_cond_sol_sat:\n  assumes \"optimize_no_cond A b c = Sat x\"\n  shows \"x \\<in> sat_primal A b\"", "lemma optimize_sound: \n  assumes \"maximize A b c = Some (Sat x)\"\n  shows \"x \\<in> max_lp A b c\"", "lemma maximize_option_elim:\n  assumes \"maximize A b c = Some x\"\n  shows \"dim_vec b = dim_row A\" \"dim_vec c = dim_col A\"", "lemma optimize_sol_dimension: \n  assumes \"maximize A b c = Some (Sat x)\"\n  shows \"x \\<in> carrier_vec (dim_col A)\"", "lemma optimize_sat:\n  assumes \"maximize A b c = Some (Sat x)\"\n  shows \"[A *\\<^sub>v x]\\<le>b\"", "lemma of_rat_val: \"simplex cs = (Sat v) \\<Longrightarrow> of_rat_val \\<langle>v\\<rangle> \\<Turnstile>\\<^sub>r\\<^sub>c\\<^sub>s set cs\""], "translations": [["", "lemma optimal_setI[intro]:\n  assumes \"x \\<in> S\"\n  assumes \"\\<And>y. y \\<in> S \\<Longrightarrow> (\\<lambda>x y. (y \\<bullet> c) \\<ge> (x \\<bullet> c)) x y\"\n  shows \"x \\<in> optimal_set (\\<lambda>x y. (y \\<bullet> c) \\<ge> (x \\<bullet> c)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> optimal_set (\\<lambda>x y. x \\<bullet> c \\<le> y \\<bullet> c) S", "unfolding optimal_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> S. \\<forall>y\\<in>S. x \\<bullet> c \\<le> y \\<bullet> c}", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> S\n  ?y \\<in> S \\<Longrightarrow> x \\<bullet> c \\<le> ?y \\<bullet> c\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> S. \\<forall>y\\<in>S. x \\<bullet> c \\<le> y \\<bullet> c}", "by blast"], ["", "lemma max_lpI [intro]:\n  assumes \"[A *\\<^sub>v x]\\<le>b\"\n  assumes \"(\\<And>y. [A *\\<^sub>v y]\\<le>b \\<Longrightarrow> (\\<lambda>x y. (y \\<bullet> c) \\<ge> (x \\<bullet> c)) y x)\"\n  shows \"x \\<in> max_lp A b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "using optimal_setI[of x \"{ x. [A *\\<^sub>v x]\\<le>b }\" c]"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> {x. [A*\\<^sub>vx]\\<le>b};\n   \\<And>y.\n      y \\<in> {x. [A*\\<^sub>vx]\\<le>b} \\<Longrightarrow>\n      x \\<bullet> c \\<le> y \\<bullet> c\\<rbrakk>\n  \\<Longrightarrow> x \\<in> optimal_set\n                             (\\<lambda>x y.\n                                 x \\<bullet> c \\<le> y \\<bullet> c)\n                             {x. [A*\\<^sub>vx]\\<le>b}\n\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "unfolding optimal_set_def optimal_setI"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> {x. [A*\\<^sub>vx]\\<le>b};\n   \\<And>y.\n      y \\<in> {x. [A*\\<^sub>vx]\\<le>b} \\<Longrightarrow>\n      x \\<bullet> c \\<le> y \\<bullet> c\\<rbrakk>\n  \\<Longrightarrow> x \\<in> {x \\<in> {x. [A*\\<^sub>vx]\\<le>b}.\n                             \\<forall>y\\<in>{x. [A*\\<^sub>vx]\\<le>b}.\n                                x \\<bullet> c \\<le> y \\<bullet> c}\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_primal A b.\n             \\<forall>y\\<in>sat_primal A b.\n                y \\<bullet> c \\<le> x \\<bullet> c}", "by (simp add: assms(1) assms(2) sat_primal_def)"], ["", "lemma min_lpI [intro]:\n  assumes \"[y \\<^sub>v* A]=c\"\n    and \"(\\<And>i. i<dim_vec y \\<Longrightarrow> y $ i \\<ge> 0)\"\n  assumes \"(\\<And>x. x \\<in> sat_dual A c \\<Longrightarrow> (\\<lambda>x y. (y \\<bullet> c) \\<ge> (x \\<bullet> c)) y x)\"\n  shows \"y \\<in> min_lp A b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> optimal_set (\\<lambda>x y. x \\<bullet> c \\<le> y \\<bullet> c)\n             (sat_dual A c)", "using optimal_setI[of y \"sat_dual A c\" c]"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<in> sat_dual A c;\n   \\<And>ya.\n      ya \\<in> sat_dual A c \\<Longrightarrow>\n      y \\<bullet> c \\<le> ya \\<bullet> c\\<rbrakk>\n  \\<Longrightarrow> y \\<in> optimal_set\n                             (\\<lambda>x y.\n                                 x \\<bullet> c \\<le> y \\<bullet> c)\n                             (sat_dual A c)\n\ngoal (1 subgoal):\n 1. y \\<in> optimal_set (\\<lambda>x y. x \\<bullet> c \\<le> y \\<bullet> c)\n             (sat_dual A c)", "unfolding optimal_set_def optimal_setI sat_dual_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<in> {y. [y\\<^sub>v*A]=c \\<and>\n                       (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)};\n   \\<And>ya.\n      ya \\<in> {y. [y\\<^sub>v*A]=c \\<and>\n                   (\\<forall>i<dim_vec y.\n                       (0::'a) \\<le> y $ i)} \\<Longrightarrow>\n      y \\<bullet> c \\<le> ya \\<bullet> c\\<rbrakk>\n  \\<Longrightarrow> y \\<in> {x \\<in> {y.\n[y\\<^sub>v*A]=c \\<and> (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}.\n                             \\<forall>y\n\\<in>{y. [y\\<^sub>v*A]=c \\<and>\n         (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}.\n                                x \\<bullet> c \\<le> y \\<bullet> c}\n\ngoal (1 subgoal):\n 1. y \\<in> {x \\<in> {y. [y\\<^sub>v*A]=c \\<and>\n                         (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}.\n             \\<forall>y\\<in>{y. [y\\<^sub>v*A]=c \\<and>\n                                (\\<forall>i<dim_vec y.\n                                    (0::'a) \\<le> y $ i)}.\n                x \\<bullet> c \\<le> y \\<bullet> c}", "by (simp add: assms(1) assms(2) assms(3) sat_dual_def)"], ["", "lemma sat_primalD [dest]:\n  assumes \"x \\<in> sat_primal A b\"\n  shows \"[A *\\<^sub>v x]\\<le>b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "using assms sat_primal_def"], ["proof (prove)\nusing this:\n  x \\<in> sat_primal A b\n  sat_primal ?A ?b = {x. [?A*\\<^sub>vx]\\<le>?b}\n\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "by force"], ["", "lemma sat_primalI [intro]:\n  assumes \"[A *\\<^sub>v x]\\<le>b\"\n  shows \"x \\<in> sat_primal A b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> sat_primal A b", "using assms sat_primal_def"], ["proof (prove)\nusing this:\n  [A*\\<^sub>vx]\\<le>b\n  sat_primal ?A ?b = {x. [?A*\\<^sub>vx]\\<le>?b}\n\ngoal (1 subgoal):\n 1. x \\<in> sat_primal A b", "by force"], ["", "lemma sat_dualD [dest]:\n  assumes \"y \\<in> sat_dual A c\"\n  shows \"[y \\<^sub>v* A]=c\" \"(\\<forall>i<dim_vec y. y $ i \\<ge> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c &&& \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i", "using assms sat_dual_def"], ["proof (prove)\nusing this:\n  y \\<in> sat_dual A c\n  sat_dual ?A ?c =\n  {y. [y\\<^sub>v*?A]=?c \\<and> (\\<forall>i<dim_vec y. (0::?'a) \\<le> y $ i)}\n\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c &&& \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i", "using assms sat_dual_def"], ["proof (prove)\nusing this:\n  y \\<in> sat_dual A c\n  sat_dual ?A ?c =\n  {y. [y\\<^sub>v*?A]=?c \\<and> (\\<forall>i<dim_vec y. (0::?'a) \\<le> y $ i)}\n\ngoal (1 subgoal):\n 1. \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i", "by force"], ["", "lemma sat_dualI [intro]:\n  assumes \"[y \\<^sub>v* A]=c\" \"(\\<forall>i<dim_vec y. y $ i \\<ge> 0)\"\n  shows \"y \\<in> sat_dual A c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> sat_dual A c", "using assms sat_dual_def"], ["proof (prove)\nusing this:\n  [y\\<^sub>v*A]=c\n  \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i\n  sat_dual ?A ?c =\n  {y. [y\\<^sub>v*?A]=?c \\<and> (\\<forall>i<dim_vec y. (0::?'a) \\<le> y $ i)}\n\ngoal (1 subgoal):\n 1. y \\<in> sat_dual A c", "by auto"], ["", "lemma sol_dim_in_sat_primal: \"x \\<in> sat_primal A b \\<Longrightarrow> dim_vec x = dim_col A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> sat_primal A b \\<Longrightarrow> dim_vec x = dim_col A", "unfolding mat_times_vec_leq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> sat_primal A b \\<Longrightarrow> dim_vec x = dim_col A", "by (simp add: mat_times_vec_leq_def sat_primal_def)"], ["", "lemma sol_dim_in_max_lp: \"x \\<in> max_lp A b c \\<Longrightarrow> dim_vec x = dim_col A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c \\<Longrightarrow> dim_vec x = dim_col A", "unfolding optimal_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_primal A b.\n             \\<forall>y\\<in>sat_primal A b.\n                y \\<bullet> c \\<le> x \\<bullet> c} \\<Longrightarrow>\n    dim_vec x = dim_col A", "using sol_dim_in_sat_primal[of x A b]"], ["proof (prove)\nusing this:\n  x \\<in> sat_primal A b \\<Longrightarrow> dim_vec x = dim_col A\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_primal A b.\n             \\<forall>y\\<in>sat_primal A b.\n                y \\<bullet> c \\<le> x \\<bullet> c} \\<Longrightarrow>\n    dim_vec x = dim_col A", "by blast"], ["", "lemma sol_dim_in_sat_dual: \"x \\<in> sat_dual A c \\<Longrightarrow> dim_vec x = dim_row A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> sat_dual A c \\<Longrightarrow> dim_vec x = dim_row A", "unfolding mat_times_vec_leq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> sat_dual A c \\<Longrightarrow> dim_vec x = dim_row A", "by (simp add: sat_dual_def vec_times_mat_eq_def)"], ["", "lemma sol_dim_in_min_lp: \"x \\<in> min_lp A b c \\<Longrightarrow> dim_vec x = dim_row A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> optimal_set (\\<lambda>x y. x \\<bullet> c \\<le> y \\<bullet> c)\n             (sat_dual A c) \\<Longrightarrow>\n    dim_vec x = dim_row A", "unfolding optimal_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_dual A c.\n             \\<forall>y\\<in>sat_dual A c.\n                x \\<bullet> c \\<le> y \\<bullet> c} \\<Longrightarrow>\n    dim_vec x = dim_row A", "using sol_dim_in_sat_dual[of x A]"], ["proof (prove)\nusing this:\n  x \\<in> sat_dual A ?c \\<Longrightarrow> dim_vec x = dim_row A\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_dual A c.\n             \\<forall>y\\<in>sat_dual A c.\n                x \\<bullet> c \\<le> y \\<bullet> c} \\<Longrightarrow>\n    dim_vec x = dim_row A", "by blast"], ["", "lemma min_lp_in_sat_dual: \"x \\<in> min_lp A b c \\<Longrightarrow> x \\<in> sat_dual A c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> optimal_set (\\<lambda>x y. x \\<bullet> c \\<le> y \\<bullet> c)\n             (sat_dual A c) \\<Longrightarrow>\n    x \\<in> sat_dual A c", "unfolding optimal_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_dual A c.\n             \\<forall>y\\<in>sat_dual A c.\n                x \\<bullet> c \\<le> y \\<bullet> c} \\<Longrightarrow>\n    x \\<in> sat_dual A c", "using sol_dim_in_sat_dual[of x A]"], ["proof (prove)\nusing this:\n  x \\<in> sat_dual A ?c \\<Longrightarrow> dim_vec x = dim_row A\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_dual A c.\n             \\<forall>y\\<in>sat_dual A c.\n                x \\<bullet> c \\<le> y \\<bullet> c} \\<Longrightarrow>\n    x \\<in> sat_dual A c", "by blast"], ["", "lemma max_lp_in_sat_primal: \"x \\<in> max_lp A b c \\<Longrightarrow> x \\<in> sat_primal A b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c \\<Longrightarrow> x \\<in> sat_primal A b", "unfolding optimal_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_primal A b.\n             \\<forall>y\\<in>sat_primal A b.\n                y \\<bullet> c \\<le> x \\<bullet> c} \\<Longrightarrow>\n    x \\<in> sat_primal A b", "using sol_dim_in_sat_dual[of x A]"], ["proof (prove)\nusing this:\n  x \\<in> sat_dual A ?c \\<Longrightarrow> dim_vec x = dim_row A\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> sat_primal A b.\n             \\<forall>y\\<in>sat_primal A b.\n                y \\<bullet> c \\<le> x \\<bullet> c} \\<Longrightarrow>\n    x \\<in> sat_primal A b", "by blast"], ["", "locale abstract_LP =\n  fixes A :: \"('a::{comm_semiring_1,ordered_semiring,linorder}) mat\"\n  fixes b :: \"'a vec\"\n  fixes c :: \"'a vec\"\n  fixes m\n  fixes n\n  assumes \"b \\<in> carrier_vec m\"\n  assumes \"c \\<in> carrier_vec n\"\n  assumes \"A \\<in> carrier_mat m n\"\nbegin"], ["", "lemma dim_b_row_A: \"dim_vec b = dim_row A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec b = dim_row A", "using abstract_LP_axioms abstract_LP_def carrier_matD(1) carrier_vecD"], ["proof (prove)\nusing this:\n  abstract_LP A b c m n\n  abstract_LP ?A ?b ?c ?m ?n \\<equiv>\n  ?b \\<in> carrier_vec ?m \\<and>\n  ?c \\<in> carrier_vec ?n \\<and> ?A \\<in> carrier_mat ?m ?n\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_row ?A = ?nr\n  ?v \\<in> carrier_vec ?n \\<Longrightarrow> dim_vec ?v = ?n\n\ngoal (1 subgoal):\n 1. dim_vec b = dim_row A", "by metis"], ["", "lemma dim_b_col_A: \"dim_vec c = dim_col A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec c = dim_col A", "using abstract_LP_axioms abstract_LP_def carrier_matD(2) carrier_vecD"], ["proof (prove)\nusing this:\n  abstract_LP A b c m n\n  abstract_LP ?A ?b ?c ?m ?n \\<equiv>\n  ?b \\<in> carrier_vec ?m \\<and>\n  ?c \\<in> carrier_vec ?n \\<and> ?A \\<in> carrier_mat ?m ?n\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_col ?A = ?nc\n  ?v \\<in> carrier_vec ?n \\<Longrightarrow> dim_vec ?v = ?n\n\ngoal (1 subgoal):\n 1. dim_vec c = dim_col A", "by metis"], ["", "lemma weak_duality_aux:\n  fixes i j\n  assumes \"i \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b}\"\n    and \"j \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\" \n  shows \"i \\<le> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<le> j", "obtain x where x: \"i = c \\<bullet> x\" \"[A *\\<^sub>v x]\\<le>b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>i = c \\<bullet> x; [A*\\<^sub>vx]\\<le>b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b}\n  j \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>i = c \\<bullet> x; [A*\\<^sub>vx]\\<le>b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i = c \\<bullet> x\n  [A*\\<^sub>vx]\\<le>b\n\ngoal (1 subgoal):\n 1. i \\<le> j", "obtain y where y: \"j = b \\<bullet> y\" \"[y \\<^sub>v* A]=c\" \"(\\<forall>i<dim_vec y. 0 \\<le> y $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>j = b \\<bullet> y; [y\\<^sub>v*A]=c;\n         \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b}\n  j \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>j = b \\<bullet> y; [y\\<^sub>v*A]=c;\n         \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j = b \\<bullet> y\n  [y\\<^sub>v*A]=c\n  \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i\n\ngoal (1 subgoal):\n 1. i \\<le> j", "have d1: \"dim_vec x = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec x = n", "using mat_times_vec_leq_def[of A x b] x"], ["proof (prove)\nusing this:\n  [A*\\<^sub>vx]\\<le>b =\n  ((\\<forall>i<dim_vec b. (A *\\<^sub>v x) $ i \\<le> b $ i) \\<and>\n   dim_row A = dim_vec b \\<and> dim_col A = dim_vec x)\n  i = c \\<bullet> x\n  [A*\\<^sub>vx]\\<le>b\n\ngoal (1 subgoal):\n 1. dim_vec x = n", "by (metis abstract_LP_axioms abstract_LP_def carrier_matD(2))"], ["proof (state)\nthis:\n  dim_vec x = n\n\ngoal (1 subgoal):\n 1. i \\<le> j", "have d2: \"dim_vec y = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec y = m", "by (metis abstract_LP_axioms abstract_LP_def carrier_matD(1) index_transpose_mat(3) vec_times_mat_eq_def y(2))"], ["proof (state)\nthis:\n  dim_vec y = m\n\ngoal (1 subgoal):\n 1. i \\<le> j", "have \"i = c \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = c \\<bullet> x", "using x"], ["proof (prove)\nusing this:\n  i = c \\<bullet> x\n  [A*\\<^sub>vx]\\<le>b\n\ngoal (1 subgoal):\n 1. i = c \\<bullet> x", "by auto"], ["proof (state)\nthis:\n  i = c \\<bullet> x\n\ngoal (1 subgoal):\n 1. i \\<le> j", "also"], ["proof (state)\nthis:\n  i = c \\<bullet> x\n\ngoal (1 subgoal):\n 1. i \\<le> j", "have \"... = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<bullet> x = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "using mult_right_eq carrier_vecD y abstract_LP_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>dim_vec ?x = dim_vec ?c; [?y\\<^sub>v*?A]=?c\\<rbrakk>\n  \\<Longrightarrow> (?A\\<^sup>T *\\<^sub>v ?y) \\<bullet> ?x = ?c \\<bullet> ?x\n  ?v \\<in> carrier_vec ?n \\<Longrightarrow> dim_vec ?v = ?n\n  j = b \\<bullet> y\n  [y\\<^sub>v*A]=c\n  \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i\n  abstract_LP ?A ?b ?c ?m ?n \\<equiv>\n  ?b \\<in> carrier_vec ?m \\<and>\n  ?c \\<in> carrier_vec ?n \\<and> ?A \\<in> carrier_mat ?m ?n\n\ngoal (1 subgoal):\n 1. c \\<bullet> x = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x", "by (metis abstract_LP_axioms calculation d1)"], ["proof (state)\nthis:\n  c \\<bullet> x = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\n\ngoal (1 subgoal):\n 1. i \\<le> j", "also"], ["proof (state)\nthis:\n  c \\<bullet> x = (A\\<^sup>T *\\<^sub>v y) \\<bullet> x\n\ngoal (1 subgoal):\n 1. i \\<le> j", "have \"... = (A *\\<^sub>v x) \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A\\<^sup>T *\\<^sub>v y) \\<bullet> x = (A *\\<^sub>v x) \\<bullet> y", "using assoc_scalar_prod_mult_mat_vec[symmetric, of y m x n A] abstract_LP_axioms abstract_LP_def d1 d2 \n      carrier_vec_dim_vec"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<in> carrier_vec m; x \\<in> carrier_vec n;\n   A \\<in> carrier_mat m n\\<rbrakk>\n  \\<Longrightarrow> (A\\<^sup>T *\\<^sub>v y) \\<bullet> x =\n                    (A *\\<^sub>v x) \\<bullet> y\n  abstract_LP A b c m n\n  abstract_LP ?A ?b ?c ?m ?n \\<equiv>\n  ?b \\<in> carrier_vec ?m \\<and>\n  ?c \\<in> carrier_vec ?n \\<and> ?A \\<in> carrier_mat ?m ?n\n  dim_vec x = n\n  dim_vec y = m\n  ?v \\<in> carrier_vec (dim_vec ?v)\n\ngoal (1 subgoal):\n 1. (A\\<^sup>T *\\<^sub>v y) \\<bullet> x = (A *\\<^sub>v x) \\<bullet> y", "by blast"], ["proof (state)\nthis:\n  (A\\<^sup>T *\\<^sub>v y) \\<bullet> x = (A *\\<^sub>v x) \\<bullet> y\n\ngoal (1 subgoal):\n 1. i \\<le> j", "also"], ["proof (state)\nthis:\n  (A\\<^sup>T *\\<^sub>v y) \\<bullet> x = (A *\\<^sub>v x) \\<bullet> y\n\ngoal (1 subgoal):\n 1. i \\<le> j", "have \"... \\<le> b \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y \\<le> b \\<bullet> y", "using mult_right_leq"], ["proof (prove)\nusing this:\n  \\<lbrakk>dim_vec ?y = dim_vec ?b;\n   \\<forall>i<dim_vec ?y. (0::?'a) \\<le> ?y $ i;\n   [?A*\\<^sub>v?x]\\<le>?b\\<rbrakk>\n  \\<Longrightarrow> (?A *\\<^sub>v ?x) \\<bullet> ?y \\<le> ?b \\<bullet> ?y\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v x) \\<bullet> y \\<le> b \\<bullet> y", "by (metis index_transpose_mat(3) mat_times_vec_leq_def vec_times_mat_eq_def x(2) y(2) y(3))"], ["proof (state)\nthis:\n  (A *\\<^sub>v x) \\<bullet> y \\<le> b \\<bullet> y\n\ngoal (1 subgoal):\n 1. i \\<le> j", "also"], ["proof (state)\nthis:\n  (A *\\<^sub>v x) \\<bullet> y \\<le> b \\<bullet> y\n\ngoal (1 subgoal):\n 1. i \\<le> j", "have \"... = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> y = j", "using y"], ["proof (prove)\nusing this:\n  j = b \\<bullet> y\n  [y\\<^sub>v*A]=c\n  \\<forall>i<dim_vec y. (0::'a) \\<le> y $ i\n\ngoal (1 subgoal):\n 1. b \\<bullet> y = j", "by simp"], ["proof (state)\nthis:\n  b \\<bullet> y = j\n\ngoal (1 subgoal):\n 1. i \\<le> j", "finally"], ["proof (chain)\npicking this:\n  i \\<le> j", "show \"i \\<le> j\""], ["proof (prove)\nusing this:\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. i \\<le> j", "."], ["proof (state)\nthis:\n  i \\<le> j\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem weak_duality_theorem:\n  assumes \"x \\<in> max_lp A b c\"\n  assumes \"y \\<in> min_lp A b c\"\n  shows \"x \\<bullet> c \\<le> y \\<bullet> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "define i where i: \"i = x \\<bullet> c\""], ["proof (state)\nthis:\n  i = x \\<bullet> c\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "define j where j: \"j = y \\<bullet> b\""], ["proof (state)\nthis:\n  j = y \\<bullet> b\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "have dx: \"dim_vec x = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec x = n", "using sol_dim_in_max_lp[of x c A b, OF assms(1)] abstract_LP_axioms abstract_LP_def \n      carrier_matD(2)"], ["proof (prove)\nusing this:\n  dim_vec x = dim_col A\n  abstract_LP A b c m n\n  abstract_LP ?A ?b ?c ?m ?n \\<equiv>\n  ?b \\<in> carrier_vec ?m \\<and>\n  ?c \\<in> carrier_vec ?n \\<and> ?A \\<in> carrier_mat ?m ?n\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_col ?A = ?nc\n\ngoal (1 subgoal):\n 1. dim_vec x = n", "by blast"], ["proof (state)\nthis:\n  dim_vec x = n\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "have dy: \"dim_vec y = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec y = m", "using sol_dim_in_min_lp[of y c A, OF assms(2)]  abstract_LP_axioms abstract_LP_def \n      carrier_matD(1)"], ["proof (prove)\nusing this:\n  dim_vec y = dim_row A\n  abstract_LP A b c m n\n  abstract_LP ?A ?b ?c ?m ?n \\<equiv>\n  ?b \\<in> carrier_vec ?m \\<and>\n  ?c \\<in> carrier_vec ?n \\<and> ?A \\<in> carrier_mat ?m ?n\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_row ?A = ?nr\n\ngoal (1 subgoal):\n 1. dim_vec y = m", "by blast"], ["proof (state)\nthis:\n  dim_vec y = m\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "have *: \"i \\<in> {c \\<bullet> x |x. [A *\\<^sub>v x]\\<le>b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b}", "using assms(1)"], ["proof (prove)\nusing this:\n  x \\<in> max_lp A b c\n\ngoal (1 subgoal):\n 1. i \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b}", "unfolding optimal_set_def dx sat_primal_def"], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> {x. [A*\\<^sub>vx]\\<le>b}.\n           \\<forall>y\\<in>{x. [A*\\<^sub>vx]\\<le>b}.\n              y \\<bullet> c \\<le> x \\<bullet> c}\n\ngoal (1 subgoal):\n 1. i \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b}", "using abstract_LP_axioms abstract_LP_def carrier_vec_dim_vec comm_scalar_prod dx i"], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> {x. [A*\\<^sub>vx]\\<le>b}.\n           \\<forall>y\\<in>{x. [A*\\<^sub>vx]\\<le>b}.\n              y \\<bullet> c \\<le> x \\<bullet> c}\n  abstract_LP A b c m n\n  abstract_LP ?A ?b ?c ?m ?n \\<equiv>\n  ?b \\<in> carrier_vec ?m \\<and>\n  ?c \\<in> carrier_vec ?n \\<and> ?A \\<in> carrier_mat ?m ?n\n  ?v \\<in> carrier_vec (dim_vec ?v)\n  \\<lbrakk>?v\\<^sub>1 \\<in> carrier_vec ?n;\n   ?v\\<^sub>2 \\<in> carrier_vec ?n\\<rbrakk>\n  \\<Longrightarrow> ?v\\<^sub>1 \\<bullet> ?v\\<^sub>2 =\n                    ?v\\<^sub>2 \\<bullet> ?v\\<^sub>1\n  dim_vec x = n\n  i = x \\<bullet> c\n\ngoal (1 subgoal):\n 1. i \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b}", "by blast"], ["proof (state)\nthis:\n  i \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b}\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "have **: \"j \\<in> {b \\<bullet> y |y. [y \\<^sub>v* A]=c \\<and> (\\<forall>i < dim_vec y. y$i \\<ge> 0)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> {b \\<bullet> y |y.\n             [y\\<^sub>v*A]=c \\<and>\n             (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}", "using assms(2)"], ["proof (prove)\nusing this:\n  y \\<in> optimal_set (\\<lambda>x y. x \\<bullet> c \\<le> y \\<bullet> c)\n           (sat_dual A c)\n\ngoal (1 subgoal):\n 1. j \\<in> {b \\<bullet> y |y.\n             [y\\<^sub>v*A]=c \\<and>\n             (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}", "unfolding optimal_set_def"], ["proof (prove)\nusing this:\n  y \\<in> {x \\<in> sat_dual A c.\n           \\<forall>y\\<in>sat_dual A c. x \\<bullet> c \\<le> y \\<bullet> c}\n\ngoal (1 subgoal):\n 1. j \\<in> {b \\<bullet> y |y.\n             [y\\<^sub>v*A]=c \\<and>\n             (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}", "using abstract_LP_axioms abstract_LP_def \n      carrier_vec_dim_vec comm_scalar_prod dy j"], ["proof (prove)\nusing this:\n  y \\<in> {x \\<in> sat_dual A c.\n           \\<forall>y\\<in>sat_dual A c. x \\<bullet> c \\<le> y \\<bullet> c}\n  abstract_LP A b c m n\n  abstract_LP ?A ?b ?c ?m ?n \\<equiv>\n  ?b \\<in> carrier_vec ?m \\<and>\n  ?c \\<in> carrier_vec ?n \\<and> ?A \\<in> carrier_mat ?m ?n\n  ?v \\<in> carrier_vec (dim_vec ?v)\n  \\<lbrakk>?v\\<^sub>1 \\<in> carrier_vec ?n;\n   ?v\\<^sub>2 \\<in> carrier_vec ?n\\<rbrakk>\n  \\<Longrightarrow> ?v\\<^sub>1 \\<bullet> ?v\\<^sub>2 =\n                    ?v\\<^sub>2 \\<bullet> ?v\\<^sub>1\n  dim_vec y = m\n  j = y \\<bullet> b\n\ngoal (1 subgoal):\n 1. j \\<in> {b \\<bullet> y |y.\n             [y\\<^sub>v*A]=c \\<and>\n             (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}", "by blast"], ["proof (state)\nthis:\n  j \\<in> {b \\<bullet> y |y.\n           [y\\<^sub>v*A]=c \\<and>\n           (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "from weak_duality_aux[of i j]"], ["proof (chain)\npicking this:\n  \\<lbrakk>i \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b};\n   j \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\\<rbrakk>\n  \\<Longrightarrow> i \\<le> j", "have \"i \\<le> j\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b};\n   j \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\\<rbrakk>\n  \\<Longrightarrow> i \\<le> j\n\ngoal (1 subgoal):\n 1. i \\<le> j", "unfolding sat_primal_def sat_dual_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<in> {c \\<bullet> x |x. x \\<in> {x. [A*\\<^sub>vx]\\<le>b}};\n   j \\<in> {b \\<bullet> y |y.\n            y \\<in> {y. [y\\<^sub>v*A]=c \\<and>\n                        (\\<forall>i<dim_vec y.\n                            (0::'a) \\<le> y $ i)}}\\<rbrakk>\n  \\<Longrightarrow> i \\<le> j\n\ngoal (1 subgoal):\n 1. i \\<le> j", "using \"*\" \"**\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<in> {c \\<bullet> x |x. x \\<in> {x. [A*\\<^sub>vx]\\<le>b}};\n   j \\<in> {b \\<bullet> y |y.\n            y \\<in> {y. [y\\<^sub>v*A]=c \\<and>\n                        (\\<forall>i<dim_vec y.\n                            (0::'a) \\<le> y $ i)}}\\<rbrakk>\n  \\<Longrightarrow> i \\<le> j\n  i \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b}\n  j \\<in> {b \\<bullet> y |y.\n           [y\\<^sub>v*A]=c \\<and>\n           (\\<forall>i<dim_vec y. (0::'a) \\<le> y $ i)}\n\ngoal (1 subgoal):\n 1. i \\<le> j", "by blast"], ["proof (state)\nthis:\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "then"], ["proof (chain)\npicking this:\n  i \\<le> j", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "using i j"], ["proof (prove)\nusing this:\n  i \\<le> j\n  i = x \\<bullet> c\n  j = y \\<bullet> b\n\ngoal (1 subgoal):\n 1. x \\<bullet> c \\<le> y \\<bullet> b", "by auto"], ["proof (state)\nthis:\n  x \\<bullet> c \\<le> y \\<bullet> b\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "fun create_optimal_solutions where\n  \"create_optimal_solutions A b c = \n        (case simplex (x_times_c_geq_y_times_b c b #\n                                      mat_leqb_eqc A b c @\n                                      from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))\n                                    of\n                                      Unsat X \\<Rightarrow> Unsat X\n                                      | Sat X \\<Rightarrow> Sat X)\""], ["", "fun optimize_no_cond where \"optimize_no_cond A b c = (case create_optimal_solutions A b c of \n                          Unsat X \\<Rightarrow> Unsat X \n                        | Sat X \\<Rightarrow>  Sat (fst (split_n_m_x (dim_vec c) (dim_vec b) X)))\""], ["", "lemma create_opt_sol_satisfies:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  shows \"\\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set ((x_times_c_geq_y_times_b c b # mat_leqb_eqc A b c @\n                      from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (x_times_c_geq_y_times_b c b #\n         mat_leqb_eqc A b c @\n         from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (x_times_c_geq_y_times_b c b #\n         mat_leqb_eqc A b c @\n         from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))", "have \"simplex (x_times_c_geq_y_times_b c b # mat_leqb_eqc A b c @\n        from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) = Sat X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. simplex\n     (x_times_c_geq_y_times_b c b #\n      mat_leqb_eqc A b c @\n      from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n    Inr X", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. simplex\n     (x_times_c_geq_y_times_b c b #\n      mat_leqb_eqc A b c @\n      from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) \\<noteq>\n    Inr X \\<Longrightarrow>\n    False", "assume \"simplex (x_times_c_geq_y_times_b c b # mat_leqb_eqc A b c @ from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) \\<noteq> Inr X\""], ["proof (state)\nthis:\n  simplex\n   (x_times_c_geq_y_times_b c b #\n    mat_leqb_eqc A b c @\n    from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) \\<noteq>\n  Inr X\n\ngoal (1 subgoal):\n 1. simplex\n     (x_times_c_geq_y_times_b c b #\n      mat_leqb_eqc A b c @\n      from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) \\<noteq>\n    Inr X \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  simplex\n   (x_times_c_geq_y_times_b c b #\n    mat_leqb_eqc A b c @\n    from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) \\<noteq>\n  Inr X", "have \"\\<exists>e. simplex (x_times_c_geq_y_times_b c b # mat_leqb_eqc A b c @ from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) = Unsat e\""], ["proof (prove)\nusing this:\n  simplex\n   (x_times_c_geq_y_times_b c b #\n    mat_leqb_eqc A b c @\n    from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) \\<noteq>\n  Inr X\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       simplex\n        (x_times_c_geq_y_times_b c b #\n         mat_leqb_eqc A b c @\n         from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n       Inl e", "by (metis assms create_optimal_solutions.simps sum.case(2) sumE)"], ["proof (state)\nthis:\n  \\<exists>e.\n     simplex\n      (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n     Inl e\n\ngoal (1 subgoal):\n 1. simplex\n     (x_times_c_geq_y_times_b c b #\n      mat_leqb_eqc A b c @\n      from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) \\<noteq>\n    Inr X \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>e.\n     simplex\n      (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n     Inl e", "have \"\\<exists>e. create_optimal_solutions A b c = Unsat e\""], ["proof (prove)\nusing this:\n  \\<exists>e.\n     simplex\n      (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n     Inl e\n\ngoal (1 subgoal):\n 1. \\<exists>e. create_optimal_solutions A b c = Inl e", "using assms option.split"], ["proof (prove)\nusing this:\n  \\<exists>e.\n     simplex\n      (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n     Inl e\n  create_optimal_solutions A b c = Inr X\n  ?P (case ?option of None \\<Rightarrow> ?f1.0\n      | Some x \\<Rightarrow> ?f2.0 x) =\n  ((?option = None \\<longrightarrow> ?P ?f1.0) \\<and>\n   (\\<forall>x2. ?option = Some x2 \\<longrightarrow> ?P (?f2.0 x2)))\n\ngoal (1 subgoal):\n 1. \\<exists>e. create_optimal_solutions A b c = Inl e", "by force"], ["proof (state)\nthis:\n  \\<exists>e. create_optimal_solutions A b c = Inl e\n\ngoal (1 subgoal):\n 1. simplex\n     (x_times_c_geq_y_times_b c b #\n      mat_leqb_eqc A b c @\n      from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) \\<noteq>\n    Inr X \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>e. create_optimal_solutions A b c = Inl e", "show False"], ["proof (prove)\nusing this:\n  \\<exists>e. create_optimal_solutions A b c = Inl e\n\ngoal (1 subgoal):\n 1. False", "using assms(1) assms"], ["proof (prove)\nusing this:\n  \\<exists>e. create_optimal_solutions A b c = Inl e\n  create_optimal_solutions A b c = Inr X\n  create_optimal_solutions A b c = Inr X\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  simplex\n   (x_times_c_geq_y_times_b c b #\n    mat_leqb_eqc A b c @\n    from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n  Inr X\n\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (x_times_c_geq_y_times_b c b #\n         mat_leqb_eqc A b c @\n         from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))", "then"], ["proof (chain)\npicking this:\n  simplex\n   (x_times_c_geq_y_times_b c b #\n    mat_leqb_eqc A b c @\n    from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n  Inr X", "show ?thesis"], ["proof (prove)\nusing this:\n  simplex\n   (x_times_c_geq_y_times_b c b #\n    mat_leqb_eqc A b c @\n    from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n  Inr X\n\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (x_times_c_geq_y_times_b c b #\n         mat_leqb_eqc A b c @\n         from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))", "using simplex(3)"], ["proof (prove)\nusing this:\n  simplex\n   (x_times_c_geq_y_times_b c b #\n    mat_leqb_eqc A b c @\n    from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b))) =\n  Inr X\n  simplex ?cs = Inr ?v \\<Longrightarrow>\n  \\<langle>?v\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set ?cs\n\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (x_times_c_geq_y_times_b c b #\n         mat_leqb_eqc A b c @\n         from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))", "by blast"], ["proof (state)\nthis:\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n  set (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma create_opt_sol_sat_leq_mat:\n  assumes \"dim_vec b = dim_row A\"\n  assumes \"create_optimal_solutions A b c = Sat X\"\n    and \"(x, y) = split_i_j_x (dim_col A) (dim_vec b) X\"\n  shows \"[A *\\<^sub>v x]\\<le>b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "have *: \"\\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set (mat_leqb_eqc A b c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (mat_leqb_eqc A b c)", "using create_opt_sol_satisfies[of A b c X] sat_mono[of \"(mat_leqb_eqc A b c)\" _ X]"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X \\<Longrightarrow>\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n  set (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))\n  \\<lbrakk>set (mat_leqb_eqc A b c) \\<subseteq> set ?B;\n   \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set ?B\\<rbrakk>\n  \\<Longrightarrow> \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n                    set (mat_leqb_eqc A b c)\n\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (mat_leqb_eqc A b c)", "using assms(2)"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X \\<Longrightarrow>\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n  set (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))\n  \\<lbrakk>set (mat_leqb_eqc A b c) \\<subseteq> set ?B;\n   \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set ?B\\<rbrakk>\n  \\<Longrightarrow> \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n                    set (mat_leqb_eqc A b c)\n  create_optimal_solutions A b c = Inr X\n\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (mat_leqb_eqc A b c)", "by (metis append_Cons append_assoc in_set_conv_decomp)"], ["proof (state)\nthis:\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set (mat_leqb_eqc A b c)\n\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "then"], ["proof (chain)\npicking this:\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set (mat_leqb_eqc A b c)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set (mat_leqb_eqc A b c)\n\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "using mat_leqb_eqc_split_correct1[of b A c X x y, OF assms(1) *] assms"], ["proof (prove)\nusing this:\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set (mat_leqb_eqc A b c)\n  (x, y) = split_i_j_x (dim_col A) ?l X \\<Longrightarrow>\n  [A*\\<^sub>vx]\\<le>b\n  dim_vec b = dim_row A\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_i_j_x (dim_col A) (dim_vec b) X\n\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "by blast"], ["proof (state)\nthis:\n  [A*\\<^sub>vx]\\<le>b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma create_opt_sol_sat_eq_mat:\n  assumes \"dim_vec c = dim_row A\\<^sup>T\" \n    and \"dim_vec b = dim_col A\\<^sup>T\"\n  assumes \"create_optimal_solutions A b c = Sat X\"\n    and \"(x, y) = split_i_j_x (dim_vec c) (dim_vec c + dim_vec b) X\"\n  shows \"[y \\<^sub>v* A]=c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c", "have *: \"\\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set (mat_leqb_eqc A b c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (mat_leqb_eqc A b c)", "using create_opt_sol_satisfies[of A b c X] sat_mono[of \"(mat_leqb_eqc A b c)\" _ X]\n      assms(2) assms"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X \\<Longrightarrow>\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n  set (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))\n  \\<lbrakk>set (mat_leqb_eqc A b c) \\<subseteq> set ?B;\n   \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set ?B\\<rbrakk>\n  \\<Longrightarrow> \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n                    set (mat_leqb_eqc A b c)\n  dim_vec b = dim_col A\\<^sup>T\n  dim_vec c = dim_row A\\<^sup>T\n  dim_vec b = dim_col A\\<^sup>T\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\n\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (mat_leqb_eqc A b c)", "by (metis UnCI list.set_intros(2) set_append)"], ["proof (state)\nthis:\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set (mat_leqb_eqc A b c)\n\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c", "have \"dim_row A\\<^sup>T = dim_vec c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row A\\<^sup>T = dim_vec c", "using assms(1)"], ["proof (prove)\nusing this:\n  dim_vec c = dim_row A\\<^sup>T\n\ngoal (1 subgoal):\n 1. dim_row A\\<^sup>T = dim_vec c", "by linarith"], ["proof (state)\nthis:\n  dim_row A\\<^sup>T = dim_vec c\n\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c", "moreover"], ["proof (state)\nthis:\n  dim_row A\\<^sup>T = dim_vec c\n\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c", "have \"dim_col A\\<^sup>T = dim_vec b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col A\\<^sup>T = dim_vec b", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  dim_col A\\<^sup>T = dim_vec b\n\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c", "ultimately"], ["proof (chain)\npicking this:\n  dim_row A\\<^sup>T = dim_vec c\n  dim_col A\\<^sup>T = dim_vec b", "show ?thesis"], ["proof (prove)\nusing this:\n  dim_row A\\<^sup>T = dim_vec c\n  dim_col A\\<^sup>T = dim_vec b\n\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c", "using assms"], ["proof (prove)\nusing this:\n  dim_row A\\<^sup>T = dim_vec c\n  dim_col A\\<^sup>T = dim_vec b\n  dim_vec c = dim_row A\\<^sup>T\n  dim_vec b = dim_col A\\<^sup>T\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\n\ngoal (1 subgoal):\n 1. [y\\<^sub>v*A]=c", "by (metis mat_leqb_eqc_split_correct2[of c A b X x y, OF assms(1) assms(2) *]\n        \\<open>dim_vec b = dim_col A\\<^sup>T\\<close> \\<open>dim_vec c = dim_row A\\<^sup>T\\<close>)"], ["proof (state)\nthis:\n  [y\\<^sub>v*A]=c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma create_opt_sol_satisfies_leq:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"x \\<bullet> c \\<ge> y \\<bullet> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<bullet> b \\<le> x \\<bullet> c", "using create_opt_sol_satisfies[of A b c X]"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X \\<Longrightarrow>\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n  set (x_times_c_geq_y_times_b c b #\n       mat_leqb_eqc A b c @\n       from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))\n\ngoal (1 subgoal):\n 1. y \\<bullet> b \\<le> x \\<bullet> c", "by (metis assms(1) assms(2) carrier_vec_dim_vec comm_scalar_prod list.set_intros(1) \n      split_n_m_x_abbrev_dims(2) split_vec_dims(1) x_times_c_geq_y_times_b_split_dotP)"], ["", "lemma create_opt_sol_satisfies_geq0:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"\\<And>i. i < dim_vec y \\<Longrightarrow> y$i \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "assume \"i < dim_vec y\""], ["proof (state)\nthis:\n  i < dim_vec y\n\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "have *: \"\\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set (from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))", "using assms(1) create_opt_sol_satisfies"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X\n  create_optimal_solutions ?A ?b ?c = Inr ?X \\<Longrightarrow>\n  \\<langle>?X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n  set (x_times_c_geq_y_times_b ?c ?b #\n       mat_leqb_eqc ?A ?b ?c @\n       from_index_geq0_vector (dim_vec ?c) (0\\<^sub>v (dim_vec ?b)))\n\ngoal (1 subgoal):\n 1. \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n    set (from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))", "by (metis UnCI append_Cons set_append)"], ["proof (state)\nthis:\n  \\<langle>X\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s\n  set (from_index_geq0_vector (dim_vec c) (0\\<^sub>v (dim_vec b)))\n\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "have **: \"i < dim_vec b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < dim_vec b", "by (metis \\<open>i < dim_vec y\\<close> assms(2) split_n_m_x_abbrev_dims(2))"], ["proof (state)\nthis:\n  i < dim_vec b\n\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "then"], ["proof (chain)\npicking this:\n  i < dim_vec b", "show \"0 \\<le> y $ i\""], ["proof (prove)\nusing this:\n  i < dim_vec b\n\ngoal (1 subgoal):\n 1. 0 \\<le> y $ i", "using from_index_geq0_vector_split_snd[of \"dim_vec c\" \"0\\<^sub>v (dim_vec b)\" X x y  \n        \"dim_vec b\" i, OF * assms(2)]"], ["proof (prove)\nusing this:\n  i < dim_vec b\n  \\<lbrakk>i < dim_vec (0\\<^sub>v (dim_vec b)); i < dim_vec b\\<rbrakk>\n  \\<Longrightarrow> 0\\<^sub>v (dim_vec b) $ i \\<le> y $ i\n\ngoal (1 subgoal):\n 1. 0 \\<le> y $ i", "by simp"], ["proof (state)\nthis:\n  0 \\<le> y $ i\n\ngoal:\nNo subgoals!", "qed"], ["", "locale rat_LP = abstract_LP A b c m n \n  for A ::\"rat mat\" \n    and b :: \"rat vec\" \n    and c :: \"rat vec\"\n    and m  :: \"nat\"\n    and n  :: \"nat\"\nbegin"], ["", "lemma create_opt_sol_in_LP:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"[A *\\<^sub>v x]\\<le>b\" \"[y \\<^sub>v* A]=c\" \"x \\<bullet> c \\<ge> y \\<bullet> b\" \"\\<And>i. i < dim_vec y \\<Longrightarrow> y$i \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([A*\\<^sub>vx]\\<le>b &&& [y\\<^sub>v*A]=c) &&&\n    y \\<bullet> b \\<le> x \\<bullet> c &&&\n    (\\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i)", "apply (metis Pair_inject assms(1) assms(2) create_opt_sol_sat_leq_mat dim_b_col_A dim_b_row_A split_i_j_x_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. [y\\<^sub>v*A]=c\n 2. y \\<bullet> b \\<le> x \\<bullet> c\n 3. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "using assms(1) assms(2) create_opt_sol_sat_eq_mat dim_b_col_A dim_b_row_A"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\n  \\<lbrakk>dim_vec ?c = dim_row ?A\\<^sup>T; dim_vec ?b = dim_col ?A\\<^sup>T;\n   create_optimal_solutions ?A ?b ?c = Inr ?X;\n   (?x, ?y) = split_n_m_x (dim_vec ?c) (dim_vec ?b) ?X\\<rbrakk>\n  \\<Longrightarrow> [?y\\<^sub>v*?A]=?c\n  dim_vec c = dim_col A\n  dim_vec b = dim_row A\n\ngoal (3 subgoals):\n 1. [y\\<^sub>v*A]=c\n 2. y \\<bullet> b \\<le> x \\<bullet> c\n 3. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "apply (metis index_transpose_mat(2) index_transpose_mat(3))"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<bullet> b \\<le> x \\<bullet> c\n 2. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "using assms(1) assms(2) create_opt_sol_satisfies_leq"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\n  \\<lbrakk>create_optimal_solutions ?A ?b ?c = Inr ?X;\n   (?x, ?y) = split_n_m_x (dim_vec ?c) (dim_vec ?b) ?X\\<rbrakk>\n  \\<Longrightarrow> ?y \\<bullet> ?b \\<le> ?x \\<bullet> ?c\n\ngoal (2 subgoals):\n 1. y \\<bullet> b \\<le> x \\<bullet> c\n 2. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "using assms(1) assms(2) create_opt_sol_satisfies_geq0"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\n  \\<lbrakk>create_optimal_solutions ?A ?b ?c = Inr ?X;\n   (?x, ?y) = split_n_m_x (dim_vec ?c) (dim_vec ?b) ?X;\n   ?i < dim_vec ?y\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> ?y $ ?i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec y \\<Longrightarrow> 0 \\<le> y $ i", "by blast"], ["", "lemma create_optim_in_sols:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"c \\<bullet> x \\<in> {c \\<bullet> x |x. [A *\\<^sub>v x]\\<le>b}\"\n    \"b \\<bullet> y \\<in> {b \\<bullet> y |y. [y \\<^sub>v* A]=c \\<and> (\\<forall>i < dim_vec y. y$i \\<ge> 0)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<bullet> x \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b} &&&\n    b \\<bullet> y\n    \\<in> {b \\<bullet> y |y.\n           [y\\<^sub>v*A]=c \\<and> (\\<forall>i<dim_vec y. 0 \\<le> y $ i)}", "using assms(1) assms(2) create_opt_sol_in_LP(1)"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\n  \\<lbrakk>create_optimal_solutions A b c = Inr ?X;\n   (?x, ?y) = split_n_m_x (dim_vec c) (dim_vec b) ?X\\<rbrakk>\n  \\<Longrightarrow> [A*\\<^sub>v?x]\\<le>b\n\ngoal (1 subgoal):\n 1. c \\<bullet> x \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b} &&&\n    b \\<bullet> y\n    \\<in> {b \\<bullet> y |y.\n           [y\\<^sub>v*A]=c \\<and> (\\<forall>i<dim_vec y. 0 \\<le> y $ i)}", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> y\n    \\<in> {b \\<bullet> y |y.\n           [y\\<^sub>v*A]=c \\<and> (\\<forall>i<dim_vec y. 0 \\<le> y $ i)}", "using assms(1) assms(2) create_opt_sol_in_LP(2) create_opt_sol_in_LP(4)"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\n  \\<lbrakk>create_optimal_solutions A b c = Inr ?X;\n   (?x, ?y) = split_n_m_x (dim_vec c) (dim_vec b) ?X\\<rbrakk>\n  \\<Longrightarrow> [?y\\<^sub>v*A]=c\n  \\<lbrakk>create_optimal_solutions A b c = Inr ?X;\n   (?x, ?y) = split_n_m_x (dim_vec c) (dim_vec b) ?X;\n   ?i < dim_vec ?y\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> ?y $ ?i\n\ngoal (1 subgoal):\n 1. b \\<bullet> y\n    \\<in> {b \\<bullet> y |y.\n           [y\\<^sub>v*A]=c \\<and> (\\<forall>i<dim_vec y. 0 \\<le> y $ i)}", "by blast"], ["", "lemma cx_leq_bx_in_creating_opt:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"c \\<bullet> x \\<le> b \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<bullet> x \\<le> b \\<bullet> y", "using weak_duality_aux[of \"c \\<bullet> x\" \"b \\<bullet> y\"]  create_optim_in_sols[of X x y, OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<bullet> x \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b};\n   b \\<bullet> y \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\\<rbrakk>\n  \\<Longrightarrow> c \\<bullet> x \\<le> b \\<bullet> y\n  c \\<bullet> x \\<in> {c \\<bullet> x |x. [A*\\<^sub>vx]\\<le>b}\n  b \\<bullet> y\n  \\<in> {b \\<bullet> y |y.\n         [y\\<^sub>v*A]=c \\<and> (\\<forall>i<dim_vec y. 0 \\<le> y $ i)}\n\ngoal (1 subgoal):\n 1. c \\<bullet> x \\<le> b \\<bullet> y", "by auto"], ["", "lemma min_max_for_sol:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"c \\<bullet> x = b \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<bullet> x = b \\<bullet> y", "using create_opt_sol_in_LP(3)[of X x y, OF assms] cx_leq_bx_in_creating_opt[OF assms]\n    comm_scalar_prod[of c \"dim_vec c\" x] comm_scalar_prod[of b \"dim_vec b\" y]"], ["proof (prove)\nusing this:\n  y \\<bullet> b \\<le> x \\<bullet> c\n  c \\<bullet> x \\<le> b \\<bullet> y\n  \\<lbrakk>c \\<in> carrier_vec (dim_vec c);\n   x \\<in> carrier_vec (dim_vec c)\\<rbrakk>\n  \\<Longrightarrow> c \\<bullet> x = x \\<bullet> c\n  \\<lbrakk>b \\<in> carrier_vec (dim_vec b);\n   y \\<in> carrier_vec (dim_vec b)\\<rbrakk>\n  \\<Longrightarrow> b \\<bullet> y = y \\<bullet> b\n\ngoal (1 subgoal):\n 1. c \\<bullet> x = b \\<bullet> y", "by (metis add_diff_cancel_left' antisym assms(2) carrier_vec_dim_vec split_vec_dims(1) split_vec_dims(2))"], ["", "lemma create_opt_solutions_correct:\n  assumes \"create_optimal_solutions A b c = Sat X\"\n  assumes \"(x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\"\n  shows \"x \\<in> max_lp A b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. [A*\\<^sub>vx]\\<le>b\n 2. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "show \"[A *\\<^sub>v x]\\<le>b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "using assms(1) assms(2) create_opt_sol_in_LP(1)"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X\n  (x, y) = split_n_m_x (dim_vec c) (dim_vec b) X\n  \\<lbrakk>create_optimal_solutions A b c = Inr ?X;\n   (?x, ?y) = split_n_m_x (dim_vec c) (dim_vec b) ?X\\<rbrakk>\n  \\<Longrightarrow> [A*\\<^sub>v?x]\\<le>b\n\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "by blast"], ["proof (state)\nthis:\n  [A*\\<^sub>vx]\\<le>b\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "assume a: \"[A *\\<^sub>v z]\\<le>b\""], ["proof (state)\nthis:\n  [A*\\<^sub>vz]\\<le>b\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "have 1: \"c \\<bullet> z \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<bullet> z \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b}", "using sat_primalI[of A z b, OF a]"], ["proof (prove)\nusing this:\n  z \\<in> sat_primal A b\n\ngoal (1 subgoal):\n 1. c \\<bullet> z \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b}", "by blast"], ["proof (state)\nthis:\n  c \\<bullet> z \\<in> {c \\<bullet> x |x. x \\<in> sat_primal A b}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "have 2: \"b \\<bullet> y \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> y \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}", "using sat_dualI"], ["proof (prove)\nusing this:\n  \\<lbrakk>[?y\\<^sub>v*?A]=?c;\n   \\<forall>i<dim_vec ?y. (0::?'a) \\<le> ?y $ i\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> sat_dual ?A ?c\n\ngoal (1 subgoal):\n 1. b \\<bullet> y \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}", "by (metis (mono_tags, lifting) assms(1) assms(2) create_opt_sol_in_LP(2)\n        mem_Collect_eq rat_LP.create_opt_sol_in_LP(4) rat_LP_axioms)"], ["proof (state)\nthis:\n  b \\<bullet> y \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "then"], ["proof (chain)\npicking this:\n  b \\<bullet> y \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}", "have \"c \\<bullet> z \\<le> b \\<bullet> y\""], ["proof (prove)\nusing this:\n  b \\<bullet> y \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\n\ngoal (1 subgoal):\n 1. c \\<bullet> z \\<le> b \\<bullet> y", "using weak_duality_aux[of \"c \\<bullet> z\" \"b \\<bullet> y\", OF 1 2] sat_primalI[of A z b, OF a]"], ["proof (prove)\nusing this:\n  b \\<bullet> y \\<in> {b \\<bullet> y |y. y \\<in> sat_dual A c}\n  c \\<bullet> z \\<le> b \\<bullet> y\n  z \\<in> sat_primal A b\n\ngoal (1 subgoal):\n 1. c \\<bullet> z \\<le> b \\<bullet> y", "by blast"], ["proof (state)\nthis:\n  c \\<bullet> z \\<le> b \\<bullet> y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "also"], ["proof (state)\nthis:\n  c \\<bullet> z \\<le> b \\<bullet> y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "have \"... = x \\<bullet> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> y = x \\<bullet> c", "by (metis assms(1) assms(2) carrier_vec_dim_vec comm_scalar_prod \n        min_max_for_sol split_n_m_x_abbrev_dims(1))"], ["proof (state)\nthis:\n  b \\<bullet> y = x \\<bullet> c\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       [A*\\<^sub>vy]\\<le>b \\<Longrightarrow>\n       y \\<bullet> c \\<le> x \\<bullet> c", "finally"], ["proof (chain)\npicking this:\n  c \\<bullet> z \\<le> x \\<bullet> c", "show \"z \\<bullet> c \\<le> x \\<bullet> c\""], ["proof (prove)\nusing this:\n  c \\<bullet> z \\<le> x \\<bullet> c\n\ngoal (1 subgoal):\n 1. z \\<bullet> c \\<le> x \\<bullet> c", "by (metis a carrier_vec_dim_vec comm_scalar_prod dim_b_col_A mat_times_vec_leqD(2))"], ["proof (state)\nthis:\n  z \\<bullet> c \\<le> x \\<bullet> c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma optimize_no_cond_correct:\n  assumes \"optimize_no_cond A b c = Sat x\"\n  shows \"x \\<in> max_lp A b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "obtain X where X: \"create_optimal_solutions A b c = Sat X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X.\n        create_optimal_solutions A b c = Inr X \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis Inr_Inl_False assms old.sum.exhaust old.sum.simps(5) optimize_no_cond.simps)"], ["proof (state)\nthis:\n  create_optimal_solutions A b c = Inr X\n\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "have \"x = (fst (split_n_m_x (dim_vec c) (dim_vec b) X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = fst (split_n_m_x (dim_vec c) (dim_vec b) X)", "using X assms"], ["proof (prove)\nusing this:\n  create_optimal_solutions A b c = Inr X\n  optimize_no_cond A b c = Inr x\n\ngoal (1 subgoal):\n 1. x = fst (split_n_m_x (dim_vec c) (dim_vec b) X)", "by (metis old.sum.inject(2) old.sum.simps(6) optimize_no_cond.simps)"], ["proof (state)\nthis:\n  x = fst (split_n_m_x (dim_vec c) (dim_vec b) X)\n\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "then"], ["proof (chain)\npicking this:\n  x = fst (split_n_m_x (dim_vec c) (dim_vec b) X)", "show ?thesis"], ["proof (prove)\nusing this:\n  x = fst (split_n_m_x (dim_vec c) (dim_vec b) X)\n\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "using create_opt_solutions_correct[of X x]"], ["proof (prove)\nusing this:\n  x = fst (split_n_m_x (dim_vec c) (dim_vec b) X)\n  \\<lbrakk>create_optimal_solutions A b c = Inr X;\n   (x, ?y) = split_n_m_x (dim_vec c) (dim_vec b) X\\<rbrakk>\n  \\<Longrightarrow> x \\<in> max_lp A b c\n\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "by (metis X fst_conv old.prod.exhaust)"], ["proof (state)\nthis:\n  x \\<in> max_lp A b c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma optimize_no_cond_sol_sat:\n  assumes \"optimize_no_cond A b c = Sat x\"\n  shows \"x \\<in> sat_primal A b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> sat_primal A b", "using max_lp_in_sat_primal[OF optimize_no_cond_correct[OF assms]]"], ["proof (prove)\nusing this:\n  x \\<in> sat_primal A b\n\ngoal (1 subgoal):\n 1. x \\<in> sat_primal A b", "by auto"], ["", "end"], ["", "(* end of \\<open> rat_LP \\<close> *)"], ["", "fun maximize where \n  \"maximize A b c = (if dim_vec b = dim_row A \\<and> dim_vec c = dim_col A then\n                      Some (optimize_no_cond A b c)\n                    else None)\""], ["", "lemma optimize_sound: \n  assumes \"maximize A b c = Some (Sat x)\"\n  shows \"x \\<in> max_lp A b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "have *: \"dim_vec b = dim_row A \\<and> dim_vec c = dim_col A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec b = dim_row A \\<and> dim_vec c = dim_col A", "by (metis assms maximize.simps option.distinct(1))"], ["proof (state)\nthis:\n  dim_vec b = dim_row A \\<and> dim_vec c = dim_col A\n\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "then"], ["proof (chain)\npicking this:\n  dim_vec b = dim_row A \\<and> dim_vec c = dim_col A", "interpret rat: rat_LP A b c \"dim_vec b\" \"dim_vec c\""], ["proof (prove)\nusing this:\n  dim_vec b = dim_row A \\<and> dim_vec c = dim_col A\n\ngoal (1 subgoal):\n 1. rat_LP A b c (dim_vec b) (dim_vec c)", "by (metis abstract_LP_def carrier_mat_triv carrier_vec_dim_vec rat_LP.intro)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "have \"Sat x = optimize_no_cond A b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inr x = optimize_no_cond A b c", "using assms *"], ["proof (prove)\nusing this:\n  maximize A b c = Some (Inr x)\n  dim_vec b = dim_row A \\<and> dim_vec c = dim_col A\n\ngoal (1 subgoal):\n 1. Inr x = optimize_no_cond A b c", "by auto"], ["proof (state)\nthis:\n  Inr x = optimize_no_cond A b c\n\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "then"], ["proof (chain)\npicking this:\n  Inr x = optimize_no_cond A b c", "show ?thesis"], ["proof (prove)\nusing this:\n  Inr x = optimize_no_cond A b c\n\ngoal (1 subgoal):\n 1. x \\<in> max_lp A b c", "by (simp add: rat.optimize_no_cond_correct)"], ["proof (state)\nthis:\n  x \\<in> max_lp A b c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma maximize_option_elim:\n  assumes \"maximize A b c = Some x\"\n  shows \"dim_vec b = dim_row A\" \"dim_vec c = dim_col A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec b = dim_row A &&& dim_vec c = dim_col A", "by (metis assms maximize.simps option.distinct(1))+"], ["", "lemma optimize_sol_dimension: \n  assumes \"maximize A b c = Some (Sat x)\"\n  shows \"x \\<in> carrier_vec (dim_col A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier_vec (dim_col A)", "using assms carrier_dim_vec max_lp_in_sat_primal optimize_sound sol_dim_in_sat_primal"], ["proof (prove)\nusing this:\n  maximize A b c = Some (Inr x)\n  (?v \\<in> carrier_vec ?n) = (dim_vec ?v = ?n)\n  ?x \\<in> max_lp ?A ?b ?c \\<Longrightarrow> ?x \\<in> sat_primal ?A ?b\n  maximize ?A ?b ?c = Some (Inr ?x) \\<Longrightarrow>\n  ?x \\<in> max_lp ?A ?b ?c\n  ?x \\<in> sat_primal ?A ?b \\<Longrightarrow> dim_vec ?x = dim_col ?A\n\ngoal (1 subgoal):\n 1. x \\<in> carrier_vec (dim_col A)", "by blast"], ["", "lemma optimize_sat:\n  assumes \"maximize A b c = Some (Sat x)\"\n  shows \"[A *\\<^sub>v x]\\<le>b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "using assms maximize_option_elim[OF assms]\n    max_lp_in_sat_primal[OF optimize_sound[of A b c x, OF assms]]"], ["proof (prove)\nusing this:\n  maximize A b c = Some (Inr x)\n  dim_vec b = dim_row A\n  dim_vec c = dim_col A\n  x \\<in> sat_primal A b\n\ngoal (1 subgoal):\n 1. [A*\\<^sub>vx]\\<le>b", "by blast"], ["", "derive (eq) ceq rat"], ["", "derive (linorder) compare rat"], ["", "derive (compare) ccompare rat"], ["", "derive (rbt) set_impl rat"], ["", "derive (eq) ceq atom QDelta"], ["", "derive (linorder) compare_order QDelta"], ["", "derive compare_order atom"], ["", "derive ccompare atom QDelta"], ["", "derive (rbt) set_impl atom QDelta"], ["", "(*export_code maximize mat_of_cols_list mat_of_rows_list mat_of_cols vec_of_list quotient_of Inr Inl Some None list_of_vec nat\nRat.Fract int_of_integer in Haskell module_name LP  file \"/home/julian/coding/ForGET/LPBenchmarks/HaskellLP/src\" \n*)\n(*\nexport_code  maximize mat_of_cols_list mat_of_rows_list mat_of_cols vec_of_list quotient_of Inr Inl Some None list_of_vec nat\nRat.Fract int_of_integer in Scala\n*)\n\n\n(*\nsection \\<open> Testing \\<close>\nlemma \"(let A = mat_of_rows 3 (map vec_of_list [[1, 12, 2], [1, 5, 9], [-1,0,0], [0,-1,0],[0,0,-1]]) in\n       (let b = vec_of_list [10000, 8539,0,0,0] in\n       (let c = vec_of_list [100, 600, 400] in\n       maximize A b c))) =  Some (Inr (vec_of_list [52468 / 7, 1461 / 7, 0]))\"\n  by eval\n\nlemma \"(let A = mat_of_cols 4 (map vec_of_list [[2::rat, -1, -1, 1/2], [1, 2, -1, -1/2]]) in\n       (let b = vec_of_list [5, 2, -1, 1/2] in\n       (let c = vec_of_list [7, 1::rat] in\n       maximize A b c))) = Some (Inr (vec_of_list [2::rat, 1]))\"\n  by eval\n*)\n\n(*\nvalue \"(let A = mat_of_cols_list 4 [[-1::rat, -1, -0, 1], [1, -1, -1, -2]] in\n       (let b = vec_of_list [1, -2, -0, 4] in\n       (let c = vec_of_list [-2, 1::rat] in\n       maximize A b c)))\"\n\nvalue \"(let A = mat_of_cols 4 (map vec_of_list [[2::rat, 2, -1, 0], [3, 1, 0, -1]]) in\n       (let b = vec_of_list [1500::rat,1000,0,0] in\n       (let c = vec_of_list [50, 40::rat] in\n       maximize A b c)))\"\n (*  Sol should be 375, 250 *)\n\nvalue \"(let A = mat_of_cols 2 (map vec_of_list [[-1::rat, 1], [-1,-1]]) in\n       (let b = vec_of_list [2::rat, 2] in\n       (let c = vec_of_list [0, 1::rat] in\n       maximize A b c)))\"\n  (* Sol should be 375, 250 *)\n\nvalue \"(let A = mat_of_rows 2 (map vec_of_list [[2::rat,3],[2, 1], [-1,0],[0,-1]]) in\n       (let b = vec_of_list [1500::rat,1000,0,0] in\n       (let c = vec_of_list [50, 40::rat] in\n       maximize A b c)))\"\n  (* Sol should be 375, 250 *)\n*)"], ["", "lemma of_rat_val: \"simplex cs = (Sat v) \\<Longrightarrow> of_rat_val \\<langle>v\\<rangle> \\<Turnstile>\\<^sub>r\\<^sub>c\\<^sub>s set cs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. simplex cs = Inr v \\<Longrightarrow>\n    of_rat_val \\<langle>v\\<rangle> \\<Turnstile>\\<^sub>r\\<^sub>c\\<^sub>s\n    set cs", "using of_rat_val_constraint simplex_real(3)"], ["proof (prove)\nusing this:\n  of_rat_val ?v \\<Turnstile>\\<^sub>c ?c = ?v \\<Turnstile>\\<^sub>c ?c\n  simplex ?cs = Inr ?v \\<Longrightarrow>\n  \\<langle>?v\\<rangle> \\<Turnstile>\\<^sub>c\\<^sub>s set ?cs\n\ngoal (1 subgoal):\n 1. simplex cs = Inr v \\<Longrightarrow>\n    of_rat_val \\<langle>v\\<rangle> \\<Turnstile>\\<^sub>r\\<^sub>c\\<^sub>s\n    set cs", "by blast"], ["", "end"]]}