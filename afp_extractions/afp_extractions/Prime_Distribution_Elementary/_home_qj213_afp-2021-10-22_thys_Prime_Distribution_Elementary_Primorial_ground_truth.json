{"file_name": "/home/qj213/afp-2021-10-22/thys/Prime_Distribution_Elementary/Primorial.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Prime_Distribution_Elementary", "problem_names": ["lemma primorial_mono: \"x \\<le> y \\<Longrightarrow> primorial x \\<le> primorial y\"", "lemma prime_factorization_primorial:\n  \"prime_factorization (primorial x) = mset_set {p. prime p \\<and> real p \\<le> x}\"", "lemma prime_factors_primorial [simp]:\n  \"prime_factors (primorial x) = {p. prime p \\<and> real p \\<le> x}\"", "lemma primorial_pos [simp, intro]: \"primorial x > 0\"", "lemma primorial_neq_zero [simp]: \"primorial x \\<noteq> 0\"", "lemma of_nat_primes_omega_primorial [simp]: \"real (primes_omega (primorial x)) = primes_pi x\"", "lemma primes_omega_primorial: \"primes_omega (primorial x) = nat \\<lfloor>primes_pi x\\<rfloor>\"", "lemma prime_dvd_primorial_iff: \"prime p \\<Longrightarrow> p dvd primorial x \\<longleftrightarrow> p \\<le> x\"", "lemma squarefree_primorial [intro]: \"squarefree (primorial x)\"", "lemma primorial_ge: \"primorial x \\<ge> 2 powr primes_pi x\"", "lemma primorial_at_top: \"filterlim primorial at_top at_top\"", "lemma totient_primorial:\n  \"real (totient (primorial x)) =\n     real (primorial x) * (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / real p)\" for x", "lemma ln_primorial: \"ln (primorial x) = primes_theta x\"", "lemma divisor_count_primorial: \"divisor_count (primorial x) = 2 powr primes_pi x\"", "lemma primorial'_0 [simp]: \"primorial' 0 = 1\"\n  and primorial'_1 [simp]: \"primorial' 1 = 2\"\n  and primorial'_2 [simp]: \"primorial' 2 = 6\"\n  and primorial'_3 [simp]: \"primorial' 3 = 30\"", "lemma primorial'_Suc: \"primorial' (Suc n) = nth_prime n * primorial' n\"", "lemma primorial'_pos [intro]: \"primorial' n > 0\"", "lemma primorial'_neq_0 [simp]: \"primorial' n \\<noteq> 0\"", "lemma strict_mono_primorial': \"strict_mono primorial'\"", "lemma prime_factorization_primorial':\n  \"prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})\"", "lemma prime_factors_primorial': \"prime_factors (primorial' k) = nth_prime ` {..<k}\"", "lemma primes_omega_primorial' [simp]: \"primes_omega (primorial' k) = k\"", "lemma squarefree_primorial' [intro]: \"squarefree (primorial' x)\"", "lemma divisor_count_primorial' [simp]: \"divisor_count (primorial' k) = 2 ^ k\"", "lemma totient_primorial':\n  \"totient (primorial' k) = primorial' k * (\\<Prod>i<k. 1 - 1 / nth_prime i)\"", "lemma primorial_conv_primorial': \"primorial x = primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)\"", "lemma primorial'_conv_primorial:\n  assumes \"n > 0\"\n  shows   \"primorial' n = primorial (nth_prime (n - 1))\"", "lemma nth_prime_le_prime_sequence:\n  fixes p :: \"nat \\<Rightarrow> nat\"\n  assumes \"strict_mono_on p {..<n}\" and \"\\<And>k. k < n \\<Longrightarrow> prime (p k)\" and \"k < n\"\n  shows   \"nth_prime k \\<le> p k\"", "theorem primorial'_primes_omega_le:\n  fixes n :: nat\n  assumes n: \"n > 0\"\n  shows \"primorial' (primes_omega n) \\<le> n\"", "lemma primes_omega_less_primes_omega_primorial:\n  fixes n :: nat\n  assumes n: \"n > 0\" and \"n < primorial x\"\n  shows \"primes_omega n < primes_omega (primorial x)\"", "lemma primes_omega_le_primes_omega_primorial:\n  fixes n :: nat\n  assumes \"n \\<le> primorial x\"\n  shows   \"primes_omega n \\<le> primes_omega (primorial x)\""], "translations": [["", "lemma primorial_mono: \"x \\<le> y \\<Longrightarrow> primorial x \\<le> primorial y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> primorial x \\<le> primorial y", "unfolding primorial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow>\n    \\<Prod>{p. prime p \\<and> real p \\<le> x}\n    \\<le> \\<Prod>{p. prime p \\<and> real p \\<le> y}", "by (intro dvd_imp_le prod_dvd_prod_subset)\n     (auto intro!: prod_pos finite_primes_le dest: prime_gt_0_nat)"], ["", "lemma prime_factorization_primorial:\n  \"prime_factorization (primorial x) = mset_set {p. prime p \\<and> real p \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factorization (primorial x) =\n    mset_set {p. prime p \\<and> real p \\<le> x}", "proof (intro multiset_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       count (prime_factorization (primorial x)) xa =\n       count (mset_set {p. prime p \\<and> real p \\<le> x}) xa", "fix p :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       count (prime_factorization (primorial x)) xa =\n       count (mset_set {p. prime p \\<and> real p \\<le> x}) xa", "note fin = finite_primes_le[of x]"], ["proof (state)\nthis:\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       count (prime_factorization (primorial x)) xa =\n       count (mset_set {p. prime p \\<and> real p \\<le> x}) xa", "show \"count (prime_factorization (primorial x)) p =\n          count (mset_set {p. prime p \\<and> real p \\<le> x}) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "proof (cases \"prime p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n 2. \\<not> prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "case True"], ["proof (state)\nthis:\n  prime p\n\ngoal (2 subgoals):\n 1. prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n 2. \\<not> prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "hence \"count (prime_factorization (primorial x)) p =\n             sum (multiplicity p) {p. prime p \\<and> real p \\<le> x}\""], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. count (prime_factorization (primorial x)) p =\n    sum (multiplicity p) {p. prime p \\<and> real p \\<le> x}", "unfolding primorial_def count_prime_factorization"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. (if prime p\n     then multiplicity p (\\<Prod>{p. prime p \\<and> real p \\<le> x})\n     else 0) =\n    sum (multiplicity p) {p. prime p \\<and> real p \\<le> x}", "using fin"], ["proof (prove)\nusing this:\n  prime p\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. (if prime p\n     then multiplicity p (\\<Prod>{p. prime p \\<and> real p \\<le> x})\n     else 0) =\n    sum (multiplicity p) {p. prime p \\<and> real p \\<le> x}", "by (subst prime_elem_multiplicity_prod_distrib) auto"], ["proof (state)\nthis:\n  count (prime_factorization (primorial x)) p =\n  sum (multiplicity p) {p. prime p \\<and> real p \\<le> x}\n\ngoal (2 subgoals):\n 1. prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n 2. \\<not> prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "also"], ["proof (state)\nthis:\n  count (prime_factorization (primorial x)) p =\n  sum (multiplicity p) {p. prime p \\<and> real p \\<le> x}\n\ngoal (2 subgoals):\n 1. prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n 2. \\<not> prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "from True"], ["proof (chain)\npicking this:\n  prime p", "have \"\\<dots> = sum (\\<lambda>_. 1) (if p \\<le> x then {p} else {})\""], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. sum (multiplicity p) {p. prime p \\<and> real p \\<le> x} =\n    (\\<Sum>_\\<in>(if real p \\<le> x then {p} else {}). 1)", "using fin"], ["proof (prove)\nusing this:\n  prime p\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. sum (multiplicity p) {p. prime p \\<and> real p \\<le> x} =\n    (\\<Sum>_\\<in>(if real p \\<le> x then {p} else {}). 1)", "by (intro sum.mono_neutral_cong_right) (auto simp: prime_multiplicity_other split: if_splits)"], ["proof (state)\nthis:\n  sum (multiplicity p) {p. prime p \\<and> real p \\<le> x} =\n  (\\<Sum>_\\<in>(if real p \\<le> x then {p} else {}). 1)\n\ngoal (2 subgoals):\n 1. prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n 2. \\<not> prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "also"], ["proof (state)\nthis:\n  sum (multiplicity p) {p. prime p \\<and> real p \\<le> x} =\n  (\\<Sum>_\\<in>(if real p \\<le> x then {p} else {}). 1)\n\ngoal (2 subgoals):\n 1. prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n 2. \\<not> prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "have \"\\<dots> = count (mset_set {p. prime p \\<and> real p \\<le> x}) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>_\\<in>(if real p \\<le> x then {p} else {}). 1) =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "using True fin"], ["proof (prove)\nusing this:\n  prime p\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. (\\<Sum>_\\<in>(if real p \\<le> x then {p} else {}). 1) =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>_\\<in>(if real p \\<le> x then {p} else {}). 1) =\n  count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n\ngoal (2 subgoals):\n 1. prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n 2. \\<not> prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "finally"], ["proof (chain)\npicking this:\n  count (prime_factorization (primorial x)) p =\n  count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "show ?thesis"], ["proof (prove)\nusing this:\n  count (prime_factorization (primorial x)) p =\n  count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n\ngoal (1 subgoal):\n 1. count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "."], ["proof (state)\nthis:\n  count (prime_factorization (primorial x)) p =\n  count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n\ngoal (1 subgoal):\n 1. \\<not> prime p \\<Longrightarrow>\n    count (prime_factorization (primorial x)) p =\n    count (mset_set {p. prime p \\<and> real p \\<le> x}) p", "qed auto"], ["proof (state)\nthis:\n  count (prime_factorization (primorial x)) p =\n  count (mset_set {p. prime p \\<and> real p \\<le> x}) p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prime_factors_primorial [simp]:\n  \"prime_factors (primorial x) = {p. prime p \\<and> real p \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factors (primorial x) = {p. prime p \\<and> real p \\<le> x}", "unfolding prime_factorization_primorial"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset (mset_set {p. prime p \\<and> real p \\<le> x}) =\n    {p. prime p \\<and> real p \\<le> x}", "using finite_primes_le[of x]"], ["proof (prove)\nusing this:\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. set_mset (mset_set {p. prime p \\<and> real p \\<le> x}) =\n    {p. prime p \\<and> real p \\<le> x}", "by simp"], ["", "lemma primorial_pos [simp, intro]: \"primorial x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < primorial x", "unfolding primorial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<Prod>{p. prime p \\<and> real p \\<le> x}", "by (intro prod_pos) (auto dest: prime_gt_0_nat)"], ["", "lemma primorial_neq_zero [simp]: \"primorial x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial x \\<noteq> 0", "by auto"], ["", "lemma of_nat_primes_omega_primorial [simp]: \"real (primes_omega (primorial x)) = primes_pi x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (primes_omega (primorial x)) = primes_pi x", "by (simp add: primes_omega_def primes_pi_def prime_sum_upto_def)"], ["", "lemma primes_omega_primorial: \"primes_omega (primorial x) = nat \\<lfloor>primes_pi x\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primes_omega (primorial x) = nat \\<lfloor>primes_pi x\\<rfloor>", "by (simp add: primes_omega_def primes_pi_def prime_sum_upto_def)"], ["", "lemma prime_dvd_primorial_iff: \"prime p \\<Longrightarrow> p dvd primorial x \\<longleftrightarrow> p \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime p \\<Longrightarrow> (p dvd primorial x) = (real p \\<le> x)", "using finite_primes_le[of x]"], ["proof (prove)\nusing this:\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. prime p \\<Longrightarrow> (p dvd primorial x) = (real p \\<le> x)", "by (auto simp: primorial_def prime_dvd_prod_iff dest: primes_dvd_imp_eq)"], ["", "lemma squarefree_primorial [intro]: \"squarefree (primorial x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree (primorial x)", "unfolding primorial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree (\\<Prod>{p. prime p \\<and> real p \\<le> x})", "by (intro squarefree_prod_coprime) (auto simp: squarefree_prime intro: primes_coprime)"], ["", "lemma primorial_ge: \"primorial x \\<ge> 2 powr primes_pi x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr primes_pi x \\<le> real (primorial x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 powr primes_pi x \\<le> real (primorial x)", "have \"2 powr primes_pi x = real (\\<Prod>p | prime p \\<and> real p \\<le> x. 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr primes_pi x =\n    real (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)", "by (simp add: primes_pi_def prime_sum_upto_def powr_realpow)"], ["proof (state)\nthis:\n  2 powr primes_pi x =\n  real (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)\n\ngoal (1 subgoal):\n 1. 2 powr primes_pi x \\<le> real (primorial x)", "also"], ["proof (state)\nthis:\n  2 powr primes_pi x =\n  real (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)\n\ngoal (1 subgoal):\n 1. 2 powr primes_pi x \\<le> real (primorial x)", "have \"(\\<Prod>p | prime p \\<and> real p \\<le> x. 2) \\<le> (\\<Prod>p | prime p \\<and> real p \\<le> x. p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)\n    \\<le> \\<Prod>{p. prime p \\<and> real p \\<le> x}", "by (intro prod_mono) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)\n  \\<le> \\<Prod>{p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. 2 powr primes_pi x \\<le> real (primorial x)", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)\n  \\<le> \\<Prod>{p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. 2 powr primes_pi x \\<le> real (primorial x)", "have \"\\<dots> = primorial x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> real p \\<le> x} = primorial x", "by (simp add: primorial_def)"], ["proof (state)\nthis:\n  \\<Prod>{p. prime p \\<and> real p \\<le> x} = primorial x\n\ngoal (1 subgoal):\n 1. 2 powr primes_pi x \\<le> real (primorial x)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  2 powr primes_pi x \\<le> real (primorial x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  2 powr primes_pi x \\<le> real (primorial x)\n\ngoal (1 subgoal):\n 1. 2 powr primes_pi x \\<le> real (primorial x)", "by simp"], ["proof (state)\nthis:\n  2 powr primes_pi x \\<le> real (primorial x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primorial_at_top: \"filterlim primorial at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim primorial sequentially at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim primorial sequentially at_top", "have \"filterlim (\\<lambda>x. real (primorial x)) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_top. real (primorial x) :> at_top", "proof (rule filterlim_at_top_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. filterlim ?f at_top at_top\n 2. \\<forall>\\<^sub>F x in at_top. ?f x \\<le> real (primorial x)", "show \"eventually (\\<lambda>x. primorial x \\<ge> 2 powr primes_pi x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr primes_pi x \\<le> real (primorial x)", "by (intro always_eventually primorial_ge allI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 2 powr primes_pi x \\<le> real (primorial x)\n\ngoal (1 subgoal):\n 1. LIM x at_top. 2 powr primes_pi x :> at_top", "have \"filterlim (\\<lambda>x. exp (ln 2 * primes_pi x)) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_top. exp (ln 2 * primes_pi x) :> at_top", "by (intro filterlim_compose[OF exp_at_top]\n                filterlim_tendsto_pos_mult_at_top[OF tendsto_const] \\<pi>_at_top) auto"], ["proof (state)\nthis:\n  LIM x at_top. exp (ln 2 * primes_pi x) :> at_top\n\ngoal (1 subgoal):\n 1. LIM x at_top. 2 powr primes_pi x :> at_top", "thus \"filterlim (\\<lambda>x. 2 powr primes_pi x) at_top at_top\""], ["proof (prove)\nusing this:\n  LIM x at_top. exp (ln 2 * primes_pi x) :> at_top\n\ngoal (1 subgoal):\n 1. LIM x at_top. 2 powr primes_pi x :> at_top", "by (simp add: powr_def mult_ac)"], ["proof (state)\nthis:\n  LIM x at_top. 2 powr primes_pi x :> at_top\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LIM x at_top. real (primorial x) :> at_top\n\ngoal (1 subgoal):\n 1. filterlim primorial sequentially at_top", "thus ?thesis"], ["proof (prove)\nusing this:\n  LIM x at_top. real (primorial x) :> at_top\n\ngoal (1 subgoal):\n 1. filterlim primorial sequentially at_top", "unfolding filterlim_sequentially_iff_filterlim_real [symmetric]"], ["proof (prove)\nusing this:\n  filterlim primorial sequentially at_top\n\ngoal (1 subgoal):\n 1. filterlim primorial sequentially at_top", "."], ["proof (state)\nthis:\n  filterlim primorial sequentially at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma totient_primorial:\n  \"real (totient (primorial x)) =\n     real (primorial x) * (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / real p)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (totient (primorial x)) =\n    real (primorial x) *\n    (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (totient (primorial x)) =\n    real (primorial x) *\n    (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p)", "have \"real (totient (primorial x)) =\n          primorial x * (\\<Prod>p\\<in>prime_factors (primorial x). 1 - 1 / p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (totient (primorial x)) =\n    real (primorial x) *\n    (\\<Prod>p\\<in>prime_factors (primorial x). 1 - 1 / real p)", "by (rule totient_formula2)"], ["proof (state)\nthis:\n  real (totient (primorial x)) =\n  real (primorial x) *\n  (\\<Prod>p\\<in>prime_factors (primorial x). 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. real (totient (primorial x)) =\n    real (primorial x) *\n    (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  real (totient (primorial x)) =\n  real (primorial x) *\n  (\\<Prod>p\\<in>prime_factors (primorial x). 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. real (totient (primorial x)) =\n    real (primorial x) *\n    (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p)", "by simp"], ["proof (state)\nthis:\n  real (totient (primorial x)) =\n  real (primorial x) *\n  (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_primorial: \"ln (primorial x) = primes_theta x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (primorial x)) = primes_theta x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ln (real (primorial x)) = primes_theta x", "have \"finite {p. prime p \\<and> real p \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {p. prime p \\<and> real p \\<le> x}", "by (rule finite_subset[of _ \"{..nat \\<lfloor>x\\<rfloor>}\"]) (auto simp: le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. ln (real (primorial x)) = primes_theta x", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. ln (real (primorial x)) = primes_theta x", "unfolding of_nat_prod primorial_def"], ["proof (prove)\nusing this:\n  finite {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. ln (prod real {p. prime p \\<and> real p \\<le> x}) = primes_theta x", "by (subst ln_prod) (auto dest: prime_gt_0_nat simp: \\<theta>_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  ln (real (primorial x)) = primes_theta x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma divisor_count_primorial: \"divisor_count (primorial x) = 2 powr primes_pi x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (divisor_count (primorial x)) = 2 powr primes_pi x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (divisor_count (primorial x)) = 2 powr primes_pi x", "have \"divisor_count (primorial x) = (\\<Prod>p | prime p \\<and> real p \\<le> x. divisor_count p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count (primorial x) =\n    prod divisor_count {p. prime p \\<and> real p \\<le> x}", "unfolding primorial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count (\\<Prod>{p. prime p \\<and> real p \\<le> x}) =\n    prod divisor_count {p. prime p \\<and> real p \\<le> x}", "by (subst divisor_count.prod_coprime) (auto simp: primes_coprime)"], ["proof (state)\nthis:\n  divisor_count (primorial x) =\n  prod divisor_count {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. real (divisor_count (primorial x)) = 2 powr primes_pi x", "also"], ["proof (state)\nthis:\n  divisor_count (primorial x) =\n  prod divisor_count {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. real (divisor_count (primorial x)) = 2 powr primes_pi x", "have \"\\<dots> = (\\<Prod>p | prime p \\<and> real p \\<le> x. 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod divisor_count {p. prime p \\<and> real p \\<le> x} =\n    (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)", "by (intro prod.cong divisor_count.prime) auto"], ["proof (state)\nthis:\n  prod divisor_count {p. prime p \\<and> real p \\<le> x} =\n  (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)\n\ngoal (1 subgoal):\n 1. real (divisor_count (primorial x)) = 2 powr primes_pi x", "also"], ["proof (state)\nthis:\n  prod divisor_count {p. prime p \\<and> real p \\<le> x} =\n  (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2)\n\ngoal (1 subgoal):\n 1. real (divisor_count (primorial x)) = 2 powr primes_pi x", "have \"\\<dots> = 2 powr primes_pi x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2) =\n    2 powr primes_pi x", "by (simp add: primes_pi_def prime_sum_upto_def powr_realpow)"], ["proof (state)\nthis:\n  real (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 2) =\n  2 powr primes_pi x\n\ngoal (1 subgoal):\n 1. real (divisor_count (primorial x)) = 2 powr primes_pi x", "finally"], ["proof (chain)\npicking this:\n  real (divisor_count (primorial x)) = 2 powr primes_pi x", "show ?thesis"], ["proof (prove)\nusing this:\n  real (divisor_count (primorial x)) = 2 powr primes_pi x\n\ngoal (1 subgoal):\n 1. real (divisor_count (primorial x)) = 2 powr primes_pi x", "."], ["proof (state)\nthis:\n  real (divisor_count (primorial x)) = 2 powr primes_pi x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>An alternative view on primorials\\<close>"], ["", "text \\<open>\n  The following function is an alternative representation of primorials; instead of taking\n  the product of all primes up to a given real bound \\<open>x\\<close>, it takes the product of the first\n  \\<open>k\\<close> primes. This is sometimes more convenient.\n\\<close>"], ["", "definition primorial' :: \"nat \\<Rightarrow> nat\" where\n  \"primorial' n = (\\<Prod>k<n. nth_prime k)\""], ["", "lemma primorial'_0 [simp]: \"primorial' 0 = 1\"\n  and primorial'_1 [simp]: \"primorial' 1 = 2\"\n  and primorial'_2 [simp]: \"primorial' 2 = 6\"\n  and primorial'_3 [simp]: \"primorial' 3 = 30\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (primorial' 0 = 1 &&& primorial' 1 = 2) &&&\n    primorial' 2 = 6 &&& primorial' 3 = 30", "by (simp_all add: primorial'_def lessThan_nat_numeral)"], ["", "lemma primorial'_Suc: \"primorial' (Suc n) = nth_prime n * primorial' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' (Suc n) = nth_prime n * primorial' n", "by (simp add: primorial'_def)"], ["", "lemma primorial'_pos [intro]: \"primorial' n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < primorial' n", "unfolding primorial'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < prod nth_prime {..<n}", "by (auto intro: prime_gt_0_nat)"], ["", "lemma primorial'_neq_0 [simp]: \"primorial' n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' n \\<noteq> 0", "by auto"], ["", "lemma strict_mono_primorial': \"strict_mono primorial'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono primorial'", "unfolding strict_mono_Suc_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. primorial' n < primorial' (Suc n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. primorial' n < primorial' (Suc n)", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. primorial' n < primorial' (Suc n)", "have \"primorial' n * 1 < primorial' n * nth_prime n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' n * 1 < primorial' n * nth_prime n", "using prime_gt_1_nat[OF prime_nth_prime[of n]]"], ["proof (prove)\nusing this:\n  1 < nth_prime n\n\ngoal (1 subgoal):\n 1. primorial' n * 1 < primorial' n * nth_prime n", "by (intro mult_strict_left_mono) auto"], ["proof (state)\nthis:\n  primorial' n * 1 < primorial' n * nth_prime n\n\ngoal (1 subgoal):\n 1. \\<And>n. primorial' n < primorial' (Suc n)", "thus \"primorial' n < primorial' (Suc n)\""], ["proof (prove)\nusing this:\n  primorial' n * 1 < primorial' n * nth_prime n\n\ngoal (1 subgoal):\n 1. primorial' n < primorial' (Suc n)", "by (simp add: primorial'_Suc)"], ["proof (state)\nthis:\n  primorial' n < primorial' (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prime_factorization_primorial':\n  \"prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "have \"prime_factorization (primorial' k) = (\\<Sum>i<k. prime_factorization (nth_prime i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) =\n    (\\<Sum>i<k. prime_factorization (nth_prime i))", "unfolding primorial'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factorization (prod nth_prime {..<k}) =\n    (\\<Sum>i<k. prime_factorization (nth_prime i))", "by (subst prime_factorization_prod) (auto intro: prime_gt_0_nat)"], ["proof (state)\nthis:\n  prime_factorization (primorial' k) =\n  (\\<Sum>i<k. prime_factorization (nth_prime i))\n\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "also"], ["proof (state)\nthis:\n  prime_factorization (primorial' k) =\n  (\\<Sum>i<k. prime_factorization (nth_prime i))\n\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "have \"\\<dots> = (\\<Sum>i<k. {#nth_prime i#})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<k. prime_factorization (nth_prime i)) =\n    (\\<Sum>i<k. {#nth_prime i#})", "by (intro sum.cong prime_factorization_prime) auto"], ["proof (state)\nthis:\n  (\\<Sum>i<k. prime_factorization (nth_prime i)) =\n  (\\<Sum>i<k. {#nth_prime i#})\n\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<k. prime_factorization (nth_prime i)) =\n  (\\<Sum>i<k. {#nth_prime i#})\n\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "have \"\\<dots> = (\\<Sum>p\\<in>nth_prime ` {..<k}. {#p#})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<k. {#nth_prime i#}) = (\\<Sum>p\\<in>nth_prime ` {..<k}. {#p#})", "by (subst sum.reindex) (auto intro: inj_onI)"], ["proof (state)\nthis:\n  (\\<Sum>i<k. {#nth_prime i#}) = (\\<Sum>p\\<in>nth_prime ` {..<k}. {#p#})\n\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<k. {#nth_prime i#}) = (\\<Sum>p\\<in>nth_prime ` {..<k}. {#p#})\n\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "have \"\\<dots> = mset_set (nth_prime ` {..<k})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>nth_prime ` {..<k}. {#p#}) = mset_set (nth_prime ` {..<k})", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>nth_prime ` {..<k}. {#p#}) = mset_set (nth_prime ` {..<k})\n\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "finally"], ["proof (chain)\npicking this:\n  prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "show ?thesis"], ["proof (prove)\nusing this:\n  prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})\n\ngoal (1 subgoal):\n 1. prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})", "."], ["proof (state)\nthis:\n  prime_factorization (primorial' k) = mset_set (nth_prime ` {..<k})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prime_factors_primorial': \"prime_factors (primorial' k) = nth_prime ` {..<k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factors (primorial' k) = nth_prime ` {..<k}", "by (simp add: prime_factorization_primorial')"], ["", "lemma primes_omega_primorial' [simp]: \"primes_omega (primorial' k) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primes_omega (primorial' k) = k", "unfolding primes_omega_def prime_factors_primorial'"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (nth_prime ` {..<k}) = k", "by (subst card_image) (auto intro: inj_onI)"], ["", "lemma squarefree_primorial' [intro]: \"squarefree (primorial' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree (primorial' x)", "unfolding primorial'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree (prod nth_prime {..<x})", "by (intro squarefree_prod_coprime) (auto intro: squarefree_prime intro: primes_coprime)"], ["", "lemma divisor_count_primorial' [simp]: \"divisor_count (primorial' k) = 2 ^ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count (primorial' k) = 2 ^ k", "by (subst divisor_count_squarefree) auto"], ["", "lemma totient_primorial':\n  \"totient (primorial' k) = primorial' k * (\\<Prod>i<k. 1 - 1 / nth_prime i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (totient (primorial' k)) =\n    real (primorial' k) * (\\<Prod>i<k. 1 - 1 / real (nth_prime i))", "unfolding totient_formula2 prime_factors_primorial'"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (primorial' k) *\n    (\\<Prod>p\\<in>nth_prime ` {..<k}. 1 - 1 / real p) =\n    real (primorial' k) * (\\<Prod>i<k. 1 - 1 / real (nth_prime i))", "by (subst prod.reindex) (auto intro: inj_onI)"], ["", "lemma primorial_conv_primorial': \"primorial x = primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial x = primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)", "unfolding primorial_def primorial'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> real p \\<le> x} =\n    prod nth_prime {..<nat \\<lfloor>primes_pi x\\<rfloor>}", "proof (rule prod.reindex_bij_witness[of _ nth_prime \"\\<lambda>p. nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1\"])"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a\n 2. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1\n       \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n 3. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 4. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 5. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "fix p"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a\n 2. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1\n       \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n 3. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 4. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 5. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "assume p: \"p \\<in> {p. prime p \\<and> real p \\<le> x}\""], ["proof (state)\nthis:\n  p \\<in> {p. prime p \\<and> real p \\<le> x}\n\ngoal (5 subgoals):\n 1. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a\n 2. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1\n       \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n 3. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 4. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 5. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "have [simp]: \"primes_pi 2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primes_pi 2 = 1", "by (auto simp: eval_\\<pi>)"], ["proof (state)\nthis:\n  primes_pi 2 = 1\n\ngoal (5 subgoals):\n 1. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a\n 2. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1\n       \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n 3. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 4. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 5. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "have \"primes_pi p \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> primes_pi (real p)", "using p \\<pi>_mono[of 2 \"real p\"]"], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> x}\n  2 \\<le> real p \\<Longrightarrow> primes_pi 2 \\<le> primes_pi (real p)\n\ngoal (1 subgoal):\n 1. 1 \\<le> primes_pi (real p)", "by (auto dest!: prime_gt_1_nat)"], ["proof (state)\nthis:\n  1 \\<le> primes_pi (real p)\n\ngoal (5 subgoals):\n 1. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a\n 2. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1\n       \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n 3. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 4. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 5. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "with p"], ["proof (chain)\npicking this:\n  p \\<in> {p. prime p \\<and> real p \\<le> x}\n  1 \\<le> primes_pi (real p)", "show \"nth_prime (nat \\<lfloor>primes_pi p\\<rfloor> - 1) = p\""], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> x}\n  1 \\<le> primes_pi (real p)\n\ngoal (1 subgoal):\n 1. nth_prime (nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1) = p", "using \\<pi>_pos[of \"real p\"]"], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> x}\n  1 \\<le> primes_pi (real p)\n  2 \\<le> real p \\<Longrightarrow> 0 < primes_pi (real p)\n\ngoal (1 subgoal):\n 1. nth_prime (nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1) = p", "by (intro nth_prime_eqI'')\n       (auto simp: le_nat_iff le_floor_iff primes_pi_def prime_sum_upto_def of_nat_diff)"], ["proof (state)\nthis:\n  nth_prime (nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1) = p\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1\n       \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n 2. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 3. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 4. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "from p"], ["proof (chain)\npicking this:\n  p \\<in> {p. prime p \\<and> real p \\<le> x}", "have \"nat \\<lfloor>primes_pi (real p)\\<rfloor> \\<le> nat \\<lfloor>primes_pi x\\<rfloor>\""], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>primes_pi (real p)\\<rfloor>\n    \\<le> nat \\<lfloor>primes_pi x\\<rfloor>", "by (intro nat_mono floor_mono \\<pi>_mono) auto"], ["proof (state)\nthis:\n  nat \\<lfloor>primes_pi (real p)\\<rfloor>\n  \\<le> nat \\<lfloor>primes_pi x\\<rfloor>\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1\n       \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n 2. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 3. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 4. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "hence \"nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1 < nat \\<lfloor>primes_pi x\\<rfloor>\""], ["proof (prove)\nusing this:\n  nat \\<lfloor>primes_pi (real p)\\<rfloor>\n  \\<le> nat \\<lfloor>primes_pi x\\<rfloor>\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1\n    < nat \\<lfloor>primes_pi x\\<rfloor>", "using \\<open>primes_pi p \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  nat \\<lfloor>primes_pi (real p)\\<rfloor>\n  \\<le> nat \\<lfloor>primes_pi x\\<rfloor>\n  1 \\<le> primes_pi (real p)\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1\n    < nat \\<lfloor>primes_pi x\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1\n  < nat \\<lfloor>primes_pi x\\<rfloor>\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1\n       \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n 2. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 3. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 4. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "thus  \"nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1 \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\""], ["proof (prove)\nusing this:\n  nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1\n  < nat \\<lfloor>primes_pi x\\<rfloor>\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1\n    \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}", "by simp"], ["proof (state)\nthis:\n  nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1\n  \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 2. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}\n 3. \\<And>a.\n       a \\<in> {p. prime p \\<and> real p \\<le> x} \\<Longrightarrow>\n       nth_prime (nat \\<lfloor>primes_pi (real a)\\<rfloor> - 1) = a", "show \"nth_prime (nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime (nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1) = p", "using p \\<open>primes_pi p \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> x}\n  1 \\<le> primes_pi (real p)\n\ngoal (1 subgoal):\n 1. nth_prime (nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1) = p", "by (intro nth_prime_eqI'') (auto simp: le_nat_iff primes_pi_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  nth_prime (nat \\<lfloor>primes_pi (real p)\\<rfloor> - 1) = p\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 2. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 2. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "fix k"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 2. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "assume k: \"k \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\""], ["proof (state)\nthis:\n  k \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nat \\<lfloor>primes_pi (real (nth_prime b))\\<rfloor> - 1 = b\n 2. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "thus *: \"nat \\<lfloor>primes_pi (real (nth_prime k))\\<rfloor> - 1 = k\""], ["proof (prove)\nusing this:\n  k \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>primes_pi (real (nth_prime k))\\<rfloor> - 1 = k", "by auto"], ["proof (state)\nthis:\n  nat \\<lfloor>primes_pi (real (nth_prime k))\\<rfloor> - 1 = k\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "from k"], ["proof (chain)\npicking this:\n  k \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}", "have \"\\<not>(x < 2)\""], ["proof (prove)\nusing this:\n  k \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<not> x < 2", "by (intro notI) auto"], ["proof (state)\nthis:\n  \\<not> x < 2\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "hence \"x \\<ge> 2\""], ["proof (prove)\nusing this:\n  \\<not> x < 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> x", "by simp"], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "have \"real (nth_prime k) \\<le> real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor> - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nth_prime k)\n    \\<le> real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor> - 1))", "using k"], ["proof (prove)\nusing this:\n  k \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. real (nth_prime k)\n    \\<le> real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor> - 1))", "by simp"], ["proof (state)\nthis:\n  real (nth_prime k)\n  \\<le> real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor> - 1))\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "also"], ["proof (state)\nthis:\n  real (nth_prime k)\n  \\<le> real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor> - 1))\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "have \"\\<dots> \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor> - 1)) \\<le> x", "using nth_prime_partition''[of x] \\<open>x \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  2 \\<le> x \\<Longrightarrow>\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>primes_pi x\\<rfloor> -\n               1))..<real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor>))}\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor> - 1)) \\<le> x", "by auto"], ["proof (state)\nthis:\n  real (nth_prime (nat \\<lfloor>primes_pi x\\<rfloor> - 1)) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> {..<nat \\<lfloor>primes_pi x\\<rfloor>} \\<Longrightarrow>\n       nth_prime b \\<in> {p. prime p \\<and> real p \\<le> x}", "finally"], ["proof (chain)\npicking this:\n  real (nth_prime k) \\<le> x", "show \"nth_prime k \\<in> {p. prime p \\<and> real p \\<le> x}\""], ["proof (prove)\nusing this:\n  real (nth_prime k) \\<le> x\n\ngoal (1 subgoal):\n 1. nth_prime k \\<in> {p. prime p \\<and> real p \\<le> x}", "by auto"], ["proof (state)\nthis:\n  nth_prime k \\<in> {p. prime p \\<and> real p \\<le> x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primorial'_conv_primorial:\n  assumes \"n > 0\"\n  shows   \"primorial' n = primorial (nth_prime (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' n = primorial (real (nth_prime (n - 1)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. primorial' n = primorial (real (nth_prime (n - 1)))", "have \"primorial (nth_prime (n - 1)) = (\\<Prod>k<nat (int (n - 1) + 1). nth_prime k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial (real (nth_prime (n - 1))) =\n    prod nth_prime {..<nat (int (n - 1) + 1)}", "by (simp add: primorial_conv_primorial' primorial'_def)"], ["proof (state)\nthis:\n  primorial (real (nth_prime (n - 1))) =\n  prod nth_prime {..<nat (int (n - 1) + 1)}\n\ngoal (1 subgoal):\n 1. primorial' n = primorial (real (nth_prime (n - 1)))", "also"], ["proof (state)\nthis:\n  primorial (real (nth_prime (n - 1))) =\n  prod nth_prime {..<nat (int (n - 1) + 1)}\n\ngoal (1 subgoal):\n 1. primorial' n = primorial (real (nth_prime (n - 1)))", "have \"nat (int (n - 1) + 1) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (int (n - 1) + 1) = n", "using assms"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. nat (int (n - 1) + 1) = n", "by auto"], ["proof (state)\nthis:\n  nat (int (n - 1) + 1) = n\n\ngoal (1 subgoal):\n 1. primorial' n = primorial (real (nth_prime (n - 1)))", "finally"], ["proof (chain)\npicking this:\n  primorial (real (nth_prime (n - 1))) = prod nth_prime {..<n}", "show ?thesis"], ["proof (prove)\nusing this:\n  primorial (real (nth_prime (n - 1))) = prod nth_prime {..<n}\n\ngoal (1 subgoal):\n 1. primorial' n = primorial (real (nth_prime (n - 1)))", "by (simp add: primorial'_def)"], ["proof (state)\nthis:\n  primorial' n = primorial (real (nth_prime (n - 1)))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Maximal compositeness of primorials\\<close>"], ["", "text \\<open>\n  Primorials are maximally composite, i.\\,e.\\ any number with \\<open>k\\<close> distinct prime factors\n  is as least as big as the primorial with \\<open>k\\<close> distinct prime factors, and and number less\n  than a primorial has strictly less prime factors.\n\\<close>"], ["", "lemma nth_prime_le_prime_sequence:\n  fixes p :: \"nat \\<Rightarrow> nat\"\n  assumes \"strict_mono_on p {..<n}\" and \"\\<And>k. k < n \\<Longrightarrow> prime (p k)\" and \"k < n\"\n  shows   \"nth_prime k \\<le> p k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime k \\<le> p k", "using assms(3)"], ["proof (prove)\nusing this:\n  k < n\n\ngoal (1 subgoal):\n 1. nth_prime k \\<le> p k", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> nth_prime 0 \\<le> p 0\n 2. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "case 0"], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> nth_prime 0 \\<le> p 0\n 2. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "hence \"prime (p 0)\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. prime (p 0)", "by (intro assms)"], ["proof (state)\nthis:\n  prime (p 0)\n\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> nth_prime 0 \\<le> p 0\n 2. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "hence \"p 0 \\<ge> 2\""], ["proof (prove)\nusing this:\n  prime (p 0)\n\ngoal (1 subgoal):\n 1. 2 \\<le> p 0", "by (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  2 \\<le> p 0\n\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> nth_prime 0 \\<le> p 0\n 2. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "thus ?case"], ["proof (prove)\nusing this:\n  2 \\<le> p 0\n\ngoal (1 subgoal):\n 1. nth_prime 0 \\<le> p 0", "by simp"], ["proof (state)\nthis:\n  nth_prime 0 \\<le> p 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "case (Suc k)"], ["proof (state)\nthis:\n  k < n \\<Longrightarrow> nth_prime k \\<le> p k\n  Suc k < n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "have IH: \"Suc (nth_prime k) \\<le> Suc (p k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (nth_prime k) \\<le> Suc (p k)", "using Suc"], ["proof (prove)\nusing this:\n  k < n \\<Longrightarrow> nth_prime k \\<le> p k\n  Suc k < n\n\ngoal (1 subgoal):\n 1. Suc (nth_prime k) \\<le> Suc (p k)", "by simp"], ["proof (state)\nthis:\n  Suc (nth_prime k) \\<le> Suc (p k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "have \"nth_prime (Suc k) = smallest_prime_beyond (Suc (nth_prime k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime (Suc k) = smallest_prime_beyond (Suc (nth_prime k))", "by (simp add: nth_prime_Suc)"], ["proof (state)\nthis:\n  nth_prime (Suc k) = smallest_prime_beyond (Suc (nth_prime k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "also"], ["proof (state)\nthis:\n  nth_prime (Suc k) = smallest_prime_beyond (Suc (nth_prime k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "{"], ["proof (state)\nthis:\n  nth_prime (Suc k) = smallest_prime_beyond (Suc (nth_prime k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "have \"Suc (nth_prime k) \\<le> Suc (p k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (nth_prime k) \\<le> Suc (p k)", "using Suc"], ["proof (prove)\nusing this:\n  k < n \\<Longrightarrow> nth_prime k \\<le> p k\n  Suc k < n\n\ngoal (1 subgoal):\n 1. Suc (nth_prime k) \\<le> Suc (p k)", "by simp"], ["proof (state)\nthis:\n  Suc (nth_prime k) \\<le> Suc (p k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "also"], ["proof (state)\nthis:\n  Suc (nth_prime k) \\<le> Suc (p k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "have \"\\<dots> \\<le> smallest_prime_beyond (Suc (p k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (p k) \\<le> smallest_prime_beyond (Suc (p k))", "by (rule smallest_prime_beyond_le)"], ["proof (state)\nthis:\n  Suc (p k) \\<le> smallest_prime_beyond (Suc (p k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "finally"], ["proof (chain)\npicking this:\n  Suc (nth_prime k) \\<le> smallest_prime_beyond (Suc (p k))", "have \"smallest_prime_beyond (Suc (nth_prime k)) \\<le> smallest_prime_beyond (Suc (p k))\""], ["proof (prove)\nusing this:\n  Suc (nth_prime k) \\<le> smallest_prime_beyond (Suc (p k))\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc (nth_prime k))\n    \\<le> smallest_prime_beyond (Suc (p k))", "by (rule smallest_prime_beyond_smallest[OF prime_smallest_prime_beyond])"], ["proof (state)\nthis:\n  smallest_prime_beyond (Suc (nth_prime k))\n  \\<le> smallest_prime_beyond (Suc (p k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "}"], ["proof (state)\nthis:\n  smallest_prime_beyond (Suc (nth_prime k))\n  \\<le> smallest_prime_beyond (Suc (p k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "also"], ["proof (state)\nthis:\n  smallest_prime_beyond (Suc (nth_prime k))\n  \\<le> smallest_prime_beyond (Suc (p k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "have \"p k < p (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p k < p (Suc k)", "using Suc"], ["proof (prove)\nusing this:\n  k < n \\<Longrightarrow> nth_prime k \\<le> p k\n  Suc k < n\n\ngoal (1 subgoal):\n 1. p k < p (Suc k)", "by (intro strict_mono_onD[OF assms(1)]) auto"], ["proof (state)\nthis:\n  p k < p (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "hence \"smallest_prime_beyond (Suc (p k)) \\<le> p (Suc k)\""], ["proof (prove)\nusing this:\n  p k < p (Suc k)\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc (p k)) \\<le> p (Suc k)", "using Suc.prems"], ["proof (prove)\nusing this:\n  p k < p (Suc k)\n  Suc k < n\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc (p k)) \\<le> p (Suc k)", "by (intro smallest_prime_beyond_smallest assms) auto"], ["proof (state)\nthis:\n  smallest_prime_beyond (Suc (p k)) \\<le> p (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k < n \\<Longrightarrow> nth_prime k \\<le> p k;\n        Suc k < n\\<rbrakk>\n       \\<Longrightarrow> nth_prime (Suc k) \\<le> p (Suc k)", "finally"], ["proof (chain)\npicking this:\n  nth_prime (Suc k) \\<le> p (Suc k)", "show ?case"], ["proof (prove)\nusing this:\n  nth_prime (Suc k) \\<le> p (Suc k)\n\ngoal (1 subgoal):\n 1. nth_prime (Suc k) \\<le> p (Suc k)", "."], ["proof (state)\nthis:\n  nth_prime (Suc k) \\<le> p (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem primorial'_primes_omega_le:\n  fixes n :: nat\n  assumes n: \"n > 0\"\n  shows \"primorial' (primes_omega n) \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' (primes_omega n) \\<le> n", "proof (cases \"n = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n\n 2. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "case True"], ["proof (state)\nthis:\n  n = 1\n\ngoal (2 subgoals):\n 1. n = 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n\n 2. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = 1\n\ngoal (1 subgoal):\n 1. primorial' (primes_omega n) \\<le> n", "by simp"], ["proof (state)\nthis:\n  primorial' (primes_omega n) \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "with assms"], ["proof (chain)\npicking this:\n  0 < n\n  n \\<noteq> 1", "have \"n > 1\""], ["proof (prove)\nusing this:\n  0 < n\n  n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < n", "by simp"], ["proof (state)\nthis:\n  1 < n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "define m where \"m = primes_omega n\""], ["proof (state)\nthis:\n  m = primes_omega n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "define P where \"P = {p. prime p \\<and> real p \\<le> primes_pi n}\""], ["proof (state)\nthis:\n  P = {p. prime p \\<and> real p \\<le> primes_pi (real n)}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "define ps where \"ps = sorted_list_of_set (prime_factors n)\""], ["proof (state)\nthis:\n  ps = sorted_list_of_set (prime_factors n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have set_ps: \"set ps = prime_factors n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set ps = prime_factors n", "by (simp add: ps_def)"], ["proof (state)\nthis:\n  set ps = prime_factors n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have [simp]: \"length ps = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length ps = m", "by (simp add: ps_def m_def primes_omega_def)"], ["proof (state)\nthis:\n  length ps = m\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have \"sorted ps\" \"distinct ps\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted ps &&& distinct ps", "by (simp_all add: ps_def)"], ["proof (state)\nthis:\n  sorted ps\n  distinct ps\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "hence mono: \"strict_mono_on (\\<lambda>k. ps ! k) {..<m}\""], ["proof (prove)\nusing this:\n  sorted ps\n  distinct ps\n\ngoal (1 subgoal):\n 1. strict_mono_on ((!) ps) {..<m}", "by (intro strict_mono_onI le_neq_trans) (auto simp: sorted_nth_mono distinct_conv_nth)"], ["proof (state)\nthis:\n  strict_mono_on ((!) ps) {..<m}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "from \\<open>n > 1\\<close>"], ["proof (chain)\npicking this:\n  1 < n", "have \"m > 0\""], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. 0 < m", "by (auto simp: m_def prime_factorization_empty_iff intro!: Nat.gr0I)"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have \"primorial' m = (\\<Prod>k<m. nth_prime k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' m = prod nth_prime {..<m}", "using \\<open>m > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. primorial' m = prod nth_prime {..<m}", "by (simp add: of_nat_diff primorial'_def m_def)"], ["proof (state)\nthis:\n  primorial' m = prod nth_prime {..<m}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "also"], ["proof (state)\nthis:\n  primorial' m = prod nth_prime {..<m}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have \"(\\<Prod>k<m. nth_prime k) \\<le> (\\<Prod>k<m. ps ! k ^ multiplicity (ps ! k) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod nth_prime {..<m}\n    \\<le> (\\<Prod>k<m. ps ! k ^ multiplicity (ps ! k) n)", "proof (intro prod_mono conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {..<m} \\<Longrightarrow> 0 \\<le> nth_prime i\n 2. \\<And>i.\n       i \\<in> {..<m} \\<Longrightarrow>\n       nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {..<m} \\<Longrightarrow> 0 \\<le> nth_prime i\n 2. \\<And>i.\n       i \\<in> {..<m} \\<Longrightarrow>\n       nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "assume i: \"i \\<in> {..<m}\""], ["proof (state)\nthis:\n  i \\<in> {..<m}\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {..<m} \\<Longrightarrow> 0 \\<le> nth_prime i\n 2. \\<And>i.\n       i \\<in> {..<m} \\<Longrightarrow>\n       nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "hence p: \"ps ! i \\<in> prime_factors n\""], ["proof (prove)\nusing this:\n  i \\<in> {..<m}\n\ngoal (1 subgoal):\n 1. ps ! i \\<in># prime_factorization n", "using set_ps"], ["proof (prove)\nusing this:\n  i \\<in> {..<m}\n  set ps = prime_factors n\n\ngoal (1 subgoal):\n 1. ps ! i \\<in># prime_factorization n", "by (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  ps ! i \\<in># prime_factorization n\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {..<m} \\<Longrightarrow> 0 \\<le> nth_prime i\n 2. \\<And>i.\n       i \\<in> {..<m} \\<Longrightarrow>\n       nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "with i set_ps"], ["proof (chain)\npicking this:\n  i \\<in> {..<m}\n  set ps = prime_factors n\n  ps ! i \\<in># prime_factorization n", "have \"nth_prime i \\<le> ps ! i\""], ["proof (prove)\nusing this:\n  i \\<in> {..<m}\n  set ps = prime_factors n\n  ps ! i \\<in># prime_factorization n\n\ngoal (1 subgoal):\n 1. nth_prime i \\<le> ps ! i", "by (intro nth_prime_le_prime_sequence[where n = m] mono) (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  nth_prime i \\<le> ps ! i\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {..<m} \\<Longrightarrow> 0 \\<le> nth_prime i\n 2. \\<And>i.\n       i \\<in> {..<m} \\<Longrightarrow>\n       nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "also"], ["proof (state)\nthis:\n  nth_prime i \\<le> ps ! i\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {..<m} \\<Longrightarrow> 0 \\<le> nth_prime i\n 2. \\<And>i.\n       i \\<in> {..<m} \\<Longrightarrow>\n       nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "have \"\\<dots> \\<le> ps ! i ^ multiplicity (ps ! i) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps ! i \\<le> ps ! i ^ multiplicity (ps ! i) n", "using p"], ["proof (prove)\nusing this:\n  ps ! i \\<in># prime_factorization n\n\ngoal (1 subgoal):\n 1. ps ! i \\<le> ps ! i ^ multiplicity (ps ! i) n", "by (intro self_le_power) (auto simp: prime_factors_multiplicity dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  ps ! i \\<le> ps ! i ^ multiplicity (ps ! i) n\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {..<m} \\<Longrightarrow> 0 \\<le> nth_prime i\n 2. \\<And>i.\n       i \\<in> {..<m} \\<Longrightarrow>\n       nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "finally"], ["proof (chain)\npicking this:\n  nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "show \"nth_prime i \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n\n\ngoal (1 subgoal):\n 1. nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n", "."], ["proof (state)\nthis:\n  nth_prime i \\<le> ps ! i ^ multiplicity (ps ! i) n\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {..<m} \\<Longrightarrow> 0 \\<le> nth_prime i", "qed auto"], ["proof (state)\nthis:\n  prod nth_prime {..<m} \\<le> (\\<Prod>k<m. ps ! k ^ multiplicity (ps ! k) n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "also"], ["proof (state)\nthis:\n  prod nth_prime {..<m} \\<le> (\\<Prod>k<m. ps ! k ^ multiplicity (ps ! k) n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have \"\\<dots> = (\\<Prod>p\\<in>(\\<lambda>i. ps ! i) ` {..<m}. p ^ multiplicity p n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>k<m. ps ! k ^ multiplicity (ps ! k) n) =\n    (\\<Prod>p\\<in>(!) ps ` {..<m}. p ^ multiplicity p n)", "using \\<open>distinct ps\\<close>"], ["proof (prove)\nusing this:\n  distinct ps\n\ngoal (1 subgoal):\n 1. (\\<Prod>k<m. ps ! k ^ multiplicity (ps ! k) n) =\n    (\\<Prod>p\\<in>(!) ps ` {..<m}. p ^ multiplicity p n)", "by (subst prod.reindex) (auto intro!: inj_onI simp: distinct_conv_nth)"], ["proof (state)\nthis:\n  (\\<Prod>k<m. ps ! k ^ multiplicity (ps ! k) n) =\n  (\\<Prod>p\\<in>(!) ps ` {..<m}. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "also"], ["proof (state)\nthis:\n  (\\<Prod>k<m. ps ! k ^ multiplicity (ps ! k) n) =\n  (\\<Prod>p\\<in>(!) ps ` {..<m}. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have \"(\\<lambda>i. ps ! i) ` {..<m} = set ps\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (!) ps ` {..<m} = set ps", "by (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  (!) ps ` {..<m} = set ps\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "also"], ["proof (state)\nthis:\n  (!) ps ` {..<m} = set ps\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have \"set ps = prime_factors n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set ps = prime_factors n", "by (simp add: set_ps)"], ["proof (state)\nthis:\n  set ps = prime_factors n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "also"], ["proof (state)\nthis:\n  set ps = prime_factors n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "have \"(\\<Prod>p\\<in>prime_factors n. p ^ multiplicity p n) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors n. p ^ multiplicity p n) = n", "using \\<open>n > 1\\<close>"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors n. p ^ multiplicity p n) = n", "by (intro prime_factorization_nat [symmetric]) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>prime_factors n. p ^ multiplicity p n) = n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> primorial' (primes_omega n) \\<le> n", "finally"], ["proof (chain)\npicking this:\n  primorial' m \\<le> n", "show \"primorial' m \\<le> n\""], ["proof (prove)\nusing this:\n  primorial' m \\<le> n\n\ngoal (1 subgoal):\n 1. primorial' m \\<le> n", "."], ["proof (state)\nthis:\n  primorial' m \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primes_omega_less_primes_omega_primorial:\n  fixes n :: nat\n  assumes n: \"n > 0\" and \"n < primorial x\"\n  shows \"primes_omega n < primes_omega (primorial x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primes_omega n < primes_omega (primorial x)", "proof (cases \"n > 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)\n 2. \\<not> 1 < n \\<Longrightarrow>\n    primes_omega n < primes_omega (primorial x)", "case False"], ["proof (state)\nthis:\n  \\<not> 1 < n\n\ngoal (2 subgoals):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)\n 2. \\<not> 1 < n \\<Longrightarrow>\n    primes_omega n < primes_omega (primorial x)", "have [simp]: \"primes_pi 2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primes_pi 2 = 1", "by (simp add: eval_\\<pi>)"], ["proof (state)\nthis:\n  primes_pi 2 = 1\n\ngoal (2 subgoals):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)\n 2. \\<not> 1 < n \\<Longrightarrow>\n    primes_omega n < primes_omega (primorial x)", "from False assms"], ["proof (chain)\npicking this:\n  \\<not> 1 < n\n  0 < n\n  n < primorial x", "have [simp]: \"n = 1\""], ["proof (prove)\nusing this:\n  \\<not> 1 < n\n  0 < n\n  n < primorial x\n\ngoal (1 subgoal):\n 1. n = 1", "by auto"], ["proof (state)\nthis:\n  n = 1\n\ngoal (2 subgoals):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)\n 2. \\<not> 1 < n \\<Longrightarrow>\n    primes_omega n < primes_omega (primorial x)", "from assms"], ["proof (chain)\npicking this:\n  0 < n\n  n < primorial x", "have \"\\<not>(x < 2)\""], ["proof (prove)\nusing this:\n  0 < n\n  n < primorial x\n\ngoal (1 subgoal):\n 1. \\<not> x < 2", "by (intro notI) (auto simp: primorial_conv_primorial')"], ["proof (state)\nthis:\n  \\<not> x < 2\n\ngoal (2 subgoals):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)\n 2. \\<not> 1 < n \\<Longrightarrow>\n    primes_omega n < primes_omega (primorial x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < 2\n\ngoal (1 subgoal):\n 1. primes_omega n < primes_omega (primorial x)", "using assms \\<pi>_mono[of 2 x]"], ["proof (prove)\nusing this:\n  \\<not> x < 2\n  0 < n\n  n < primorial x\n  2 \\<le> x \\<Longrightarrow> primes_pi 2 \\<le> primes_pi x\n\ngoal (1 subgoal):\n 1. primes_omega n < primes_omega (primorial x)", "by auto"], ["proof (state)\nthis:\n  primes_omega n < primes_omega (primorial x)\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "case True"], ["proof (state)\nthis:\n  1 < n\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "define m where \"m = primes_omega n\""], ["proof (state)\nthis:\n  m = primes_omega n\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "have le: \"primorial' m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' m \\<le> n", "using primorial'_primes_omega_le[of n] \\<open>n > 1\\<close>"], ["proof (prove)\nusing this:\n  0 < n \\<Longrightarrow> primorial' (primes_omega n) \\<le> n\n  1 < n\n\ngoal (1 subgoal):\n 1. primorial' m \\<le> n", "by (simp add: m_def primes_omega_def)"], ["proof (state)\nthis:\n  primorial' m \\<le> n\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "also"], ["proof (state)\nthis:\n  primorial' m \\<le> n\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "have \"\\<dots> < primorial x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < primorial x", "by fact"], ["proof (state)\nthis:\n  n < primorial x\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "also"], ["proof (state)\nthis:\n  n < primorial x\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "have \"\\<dots> = primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial x = primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)", "by (simp add: primorial_conv_primorial')"], ["proof (state)\nthis:\n  primorial x = primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "finally"], ["proof (chain)\npicking this:\n  primorial' m < primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)", "have \"m < nat \\<lfloor>primes_pi x\\<rfloor>\""], ["proof (prove)\nusing this:\n  primorial' m < primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. m < nat \\<lfloor>primes_pi x\\<rfloor>", "using strict_mono_less[OF strict_mono_primorial']"], ["proof (prove)\nusing this:\n  primorial' m < primorial' (nat \\<lfloor>primes_pi x\\<rfloor>)\n  (primorial' ?x < primorial' ?y) = (?x < ?y)\n\ngoal (1 subgoal):\n 1. m < nat \\<lfloor>primes_pi x\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  m < nat \\<lfloor>primes_pi x\\<rfloor>\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "hence \"m < primes_pi x\""], ["proof (prove)\nusing this:\n  m < nat \\<lfloor>primes_pi x\\<rfloor>\n\ngoal (1 subgoal):\n 1. real m < primes_pi x", "by linarith"], ["proof (state)\nthis:\n  real m < primes_pi x\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "also"], ["proof (state)\nthis:\n  real m < primes_pi x\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "have \"\\<dots> = primes_omega (primorial x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primes_pi x = real (primes_omega (primorial x))", "by simp"], ["proof (state)\nthis:\n  primes_pi x = real (primes_omega (primorial x))\n\ngoal (1 subgoal):\n 1. 1 < n \\<Longrightarrow> primes_omega n < primes_omega (primorial x)", "finally"], ["proof (chain)\npicking this:\n  real m < real (primes_omega (primorial x))", "show ?thesis"], ["proof (prove)\nusing this:\n  real m < real (primes_omega (primorial x))\n\ngoal (1 subgoal):\n 1. primes_omega n < primes_omega (primorial x)", "unfolding m_def of_nat_less_iff"], ["proof (prove)\nusing this:\n  primes_omega n < primes_omega (primorial x)\n\ngoal (1 subgoal):\n 1. primes_omega n < primes_omega (primorial x)", "."], ["proof (state)\nthis:\n  primes_omega n < primes_omega (primorial x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primes_omega_le_primes_omega_primorial:\n  fixes n :: nat\n  assumes \"n \\<le> primorial x\"\n  shows   \"primes_omega n \\<le> primes_omega (primorial x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primes_omega n \\<le> primes_omega (primorial x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. primes_omega n \\<le> primes_omega (primorial x)", "consider \"n = 0\" | \"n > 0\" \"n = primorial x\" | \"n > 0\" \"n \\<noteq> primorial x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = 0 \\<Longrightarrow> thesis;\n     \\<lbrakk>0 < n; n = primorial x\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>0 < n; n \\<noteq> primorial x\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 < n; n = primorial x\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 < n; n \\<noteq> primorial x\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. primes_omega n \\<le> primes_omega (primorial x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 < n; n = primorial x\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 < n; n \\<noteq> primorial x\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. primes_omega n \\<le> primes_omega (primorial x)", "by cases (use primes_omega_less_primes_omega_primorial[of n x] assms in auto)"], ["proof (state)\nthis:\n  primes_omega n \\<le> primes_omega (primorial x)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}