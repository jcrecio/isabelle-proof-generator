{"file_name": "/home/qj213/afp-2021-10-22/thys/Prime_Distribution_Elementary/PNT_Consequences.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Prime_Distribution_Elementary", "problem_names": ["lemma PNT1_imp_PNT1':\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\"", "lemma PNT1_imp_PNT2:\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma PNT2_imp_PNT3:\n  assumes \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\"", "lemma PNT3_imp_PNT2:\n  assumes \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\"\n  shows   \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma PNT2_imp_PNT1:\n  assumes \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. ln x)\"\n    and   \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"", "lemma PNT4_imp_PNT5:\n  assumes \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma PNT4_imp_PNT1:\n  assumes \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"", "lemma PNT1_imp_PNT4:\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma PNT5_imp_PNT4:\n  assumes \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma ln_\\<theta>_asymptotics:\n  includes prime_counting_notation\n  shows \"(\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)\"", "lemma ln_\\<theta>_asymp_equiv [asymp_equiv_intros]:\n  includes prime_counting_notation\n  shows \"(\\<lambda>x. ln (\\<theta> x)) \\<sim>[at_top] ln\"", "lemma ln_nth_prime_asymptotics:\n  \"(\\<lambda>n. ln (nth_prime n) - (ln n + ln (ln n))) \\<in> o(\\<lambda>_. 1)\"", "lemma ln_nth_prime_asymp_equiv [asymp_equiv_intros]:\n  \"(\\<lambda>n. ln (nth_prime n)) \\<sim>[at_top] ln\"", "lemma (in prime_number_theorem) prime_in_interval_exists:\n  fixes c :: real\n  assumes \"c > 1\"\n  shows   \"eventually (\\<lambda>x. \\<exists>p. prime p \\<and> real p \\<in> {x<..c*x}) at_top\"", "lemma (in prime_number_theorem) prime_fractions_dense:\n  fixes \\<alpha> \\<epsilon> :: real\n  assumes \"\\<alpha> > 0\" and \"\\<epsilon> > 0\"\n  obtains p q :: nat where \"prime p\" and \"prime q\" and \"dist (real p / real q) \\<alpha> < \\<epsilon>\"", "lemma ln_primorial_asymp_equiv [asymp_equiv_intros]:\n  \"(\\<lambda>x. ln (primorial x)) \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma ln_ln_primorial_asymp_equiv [asymp_equiv_intros]:\n  \"(\\<lambda>x. ln (ln (primorial x))) \\<sim>[at_top] (\\<lambda>x. ln x)\"", "lemma ln_primorial'_asymp_equiv [asymp_equiv_intros]:\n        \"(\\<lambda>k. ln (primorial' k)) \\<sim>[at_top] (\\<lambda>k. k * ln k)\"\n  and ln_ln_primorial'_asymp_equiv [asymp_equiv_intros]:\n        \"(\\<lambda>k. ln (ln (primorial' k))) \\<sim>[at_top] (\\<lambda>k. ln k)\"\n  and ln_over_ln_ln_primorial'_asymp_equiv:\n        \"(\\<lambda>k. ln (primorial' k) / ln (ln (primorial' k))) \\<sim>[at_top] (\\<lambda>k. k)\"", "lemma\n  fixes \\<epsilon> :: real assumes \"\\<epsilon> > 0\"\n  shows smallo:     \"g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\"\n    and smallomega: \"g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\"", "lemma smallo':\n  fixes c :: real assumes \"c > exp 1\"\n  shows \"g \\<in> o(\\<lambda>x. c powr x)\"", "lemma smallomega':\n  fixes c :: real assumes \"c \\<in> {0<..<exp 1}\"\n  shows \"g \\<in> \\<omega>(\\<lambda>x. c powr x)\"", "lemma ln_gt_1:\n  assumes \"x > (3 :: real)\"\n  shows   \"ln x > 1\"", "lemma (in prime_number_theorem) primes_omega_primorial'_asymp_equiv:\n  \"(\\<lambda>k. primes_omega (primorial' k)) \\<sim>[at_top]\n     (\\<lambda>k. ln (primorial' k) / ln (ln (primorial' k)))\"", "theorem (in prime_number_theorem)\n  limsup_primes_omega: \"limsup (\\<lambda>n. primes_omega n / (ln n / ln (ln n))) = 1\"", "lemma divisor_count_bound_gen:\n  fixes f :: \"nat \\<Rightarrow> real\"\n  assumes \"eventually (\\<lambda>n. f n \\<ge> 2) at_top\"\n  defines \"c \\<equiv> (8 / ln 2 :: real)\"\n  defines \"g \\<equiv> (\\<lambda>n. (ln n + c * f n * ln (ln n)) / (ln (f n)))\"\n  shows \"eventually (\\<lambda>n. divisor_count n < 2 powr g n) at_top\"", "theorem (in prime_number_theorem) divisor_count_primorial_gt:\n  assumes \"\\<epsilon> > 0\"\n  defines \"h \\<equiv> primorial\"\n  shows \"eventually (\\<lambda>x. divisor_count (h x) > 2 powr ((1 - \\<epsilon>) * ln (h x) / ln (ln (h x)))) at_top\"", "lemma (in prime_number_theorem) ln_divisor_count_primorial'_asymp_equiv:\n  \"(\\<lambda>k. ln (divisor_count (primorial' k))) \\<sim>[at_top]\n     (\\<lambda>k. ln 2 * ln (primorial' k) / ln (ln (primorial' k)))\"", "theorem (in prime_number_theorem) limsup_divisor_count:\n  \"limsup (\\<lambda>n. ln (divisor_count n) * ln (ln n) / ln n) = ln 2\"", "lemma third_mertens_const_pos: \"third_mertens_const > 0\"", "theorem\n  defines \"C \\<equiv> third_mertens_const\" \n  shows   mertens_third_theorem_strong:\n            \"eventually (\\<lambda>x. \\<bar>(\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / p) - C / ln x\\<bar> \\<le>\n                                10 * C / ln x ^ 2) at_top\"\n  and     mertens_third_theorem:\n            \"(\\<lambda>x. (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / p) - C / ln x) \\<in> O(\\<lambda>x. 1 / ln x ^ 2)\"", "lemma mertens_third_theorem_asymp_equiv:\n  \"(\\<lambda>x. (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / real p)) \\<sim>[at_top]\n     (\\<lambda>x. third_mertens_const / ln x)\"", "lemma mertens_third_convert:\n  assumes \"n > 0\"\n  shows \"(\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n           (\\<Prod>p | prime p \\<and> p \\<le> nth_prime (n - 1). 1 - 1 / p)\"", "lemma (in prime_number_theorem) mertens_third_theorem_asymp_equiv':\n  \"(\\<lambda>n. (\\<Prod>k<n. 1 - 1 / nth_prime k)) \\<sim>[at_top] (\\<lambda>x. third_mertens_const / ln x)\"", "theorem totient_lower_bound:\n  fixes \\<epsilon> :: real\n  assumes \"\\<epsilon> > 0\"\n  defines \"C \\<equiv> third_mertens_const\"\n  shows \"eventually (\\<lambda>n. totient n > (1 - \\<epsilon>) * C * n / ln (ln n)) at_top\"", "theorem (in prime_number_theorem) totient_primorial_less:\n  fixes \\<epsilon> :: real\n  defines \"C \\<equiv> third_mertens_const\" and \"h \\<equiv> primorial\"\n  assumes \"\\<epsilon> > 0\"\n  shows   \"eventually (\\<lambda>x. totient (h x) < (1 + \\<epsilon>) * C * h x / ln (ln (h x))) at_top\"", "lemma (in prime_number_theorem) totient_primorial'_asymp_equiv:\n  \"(\\<lambda>k. totient (primorial' k)) \\<sim>[at_top] (\\<lambda>k. third_mertens_const * primorial' k / ln k)\"", "lemma (in prime_number_theorem) totient_primorial'_asymp_equiv':\n  \"(\\<lambda>k. totient (primorial' k)) \\<sim>[at_top]\n      (\\<lambda>k. third_mertens_const * primorial' k / ln (ln (primorial' k)))\"", "theorem (in prime_number_theorem)\n  liminf_totient: \"liminf (\\<lambda>n. totient n * ln (ln n) / n) = third_mertens_const\"\n    (is \"_ = ereal ?c\")"], "translations": [["", "lemma PNT1_imp_PNT1':\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "(* TODO: Tedious Landau sum reasoning *)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "from assms"], ["proof (chain)\npicking this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top\""], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top", "by (rule asymp_equivD_strong[OF _ eventually_mono[OF eventually_gt_at_top[of 1]]]) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "hence \"((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n     at_top", "by (rule tendsto_ln) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "have \"?this \\<longleftrightarrow> ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n     at_top =\n    ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0)\n     at_top", "by (intro filterlim_cong eventually_mono[OF eventually_gt_at_top[of 2]])\n       (auto simp: ln_div field_simps ln_mult \\<pi>_pos)"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n   at_top =\n  ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0)\n   at_top", "have \"(\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(\\<lambda>_. 1)", "by (intro smalloI_tendsto) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "have \"(\\<lambda>_::real. 1 :: real) \\<in> o(\\<lambda>x. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> o(ln)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(ln)", "have \"(\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x) - ln (ln x)) \\<in> o(\\<lambda>x. ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x) - ln (ln x)) \\<in> o(ln)", "by (rule sum_in_smallo) real_asymp+"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x) - ln (ln x)) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "thus *: \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x) - ln (ln x)) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "by (simp add: asymp_equiv_altdef)"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT1_imp_PNT2:\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)", "by (intro asymp_equiv_intros assms PNT1_imp_PNT1')"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / ln x * ln x) \\<sim>[at_top] (\\<lambda>x. x)", "by (intro asymp_equiv_refl_ev eventually_mono[OF eventually_gt_at_top[of 1]])\n       (auto simp: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. x / ln x * ln x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>a. a)", "show \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>a. a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT2_imp_PNT3:\n  assumes \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "have \"(\\<lambda>n. nth_prime n) \\<sim>[at_top] (\\<lambda>n. \\<pi> (nth_prime n) * ln (\\<pi> (nth_prime n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>n.\n  \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n))))", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>n.\n  \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n))))", "by (rule asymp_equiv_symI [OF asymp_equiv_compose'])\n       (auto intro!: filterlim_compose[OF filterlim_real_sequentially nth_prime_at_top])"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>n.\n\\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>n.\n\\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "have \"\\<dots> = (\\<lambda>n. real (Suc n) * ln (real (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n)))) =\n    (\\<lambda>n. real (Suc n) * ln (real (Suc n)))", "by (simp add: add_ac)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n)))) =\n  (\\<lambda>n. real (Suc n) * ln (real (Suc n)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n)))) =\n  (\\<lambda>n. real (Suc n) * ln (real (Suc n)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. real n * ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real (Suc n) *\n        ln (real\n             (Suc n))) \\<sim>[sequentially] (\\<lambda>n.\n          real n * ln (real n))", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      real (Suc n) *\n      ln (real\n           (Suc n))) \\<sim>[sequentially] (\\<lambda>n. real n * ln (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>a. real a * ln (real a))", "show \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>a. real a * ln (real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT3_imp_PNT2:\n  assumes \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\"\n  shows   \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "proof (rule asymp_equiv_symI, rule asymp_equiv_sandwich_real)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?l2 \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. ?u2 \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 3. \\<forall>\\<^sub>F x in at_top. x \\<in> {?l2 x..?u2 x}", "show \"eventually (\\<lambda>x. x \\<in> {real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))})\n          at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       x \\<in> {real\n                 (nth_prime\n                   (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                    1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "using eventually_ge_at_top[of 2]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       x \\<in> {real\n                 (nth_prime\n                   (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                    1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       x \\<in> {real\n                 (nth_prime\n                   (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                    1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "case (elim x)"], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       x \\<in> {real\n                 (nth_prime\n                   (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                    1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "with nth_prime_partition''[of x]"], ["proof (chain)\npicking this:\n  2 \\<le> x \\<Longrightarrow>\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>\\<pi> x\\<rfloor> -\n               1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n  2 \\<le> x", "show ?case"], ["proof (prove)\nusing this:\n  2 \\<le> x \\<Longrightarrow>\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>\\<pi> x\\<rfloor> -\n               1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>\\<pi> x\\<rfloor> -\n               1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     x \\<in> {real\n               (nth_prime\n                 (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                  1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "have \"(\\<lambda>x. real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))) \\<sim>[at_top]\n           (\\<lambda>x. real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) * ln (real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x.\n                                    real\n                                     (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n                                    ln (real\n   (nat \\<lfloor>\\<pi> x\\<rfloor> - 1)))", "by (rule asymp_equiv_compose'[OF _ \\<pi>_at_top], rule asymp_equiv_compose'[OF assms]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>x.\n                                  real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n                                  ln (real\n (nat \\<lfloor>\\<pi> x\\<rfloor> - 1)))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>x.\n                                  real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n                                  ln (real\n (nat \\<lfloor>\\<pi> x\\<rfloor> - 1)))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n        ln (real\n             (nat \\<lfloor>\\<pi> x\\<rfloor> -\n              1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))", "by (rule asymp_equiv_compose'[OF _ \\<pi>_at_top]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n      ln (real\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>a. \\<pi> a * ln (\\<pi> a))", "show \"(\\<lambda>x. real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>a. \\<pi> a * ln (\\<pi> a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "have \"(\\<lambda>x. real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))) \\<sim>[at_top]\n           (\\<lambda>x. real (nat \\<lfloor>\\<pi> x\\<rfloor>) * ln (real (nat \\<lfloor>\\<pi> x\\<rfloor>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n                     ln (real (nat \\<lfloor>\\<pi> x\\<rfloor>)))", "by (rule asymp_equiv_compose'[OF _ \\<pi>_at_top], rule asymp_equiv_compose'[OF assms]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                   real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n                   ln (real (nat \\<lfloor>\\<pi> x\\<rfloor>)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                   real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n                   ln (real (nat \\<lfloor>\\<pi> x\\<rfloor>)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n        ln (real\n             (nat \\<lfloor>\\<pi>\n                            x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                       \\<pi> x * ln (\\<pi> x))", "by (rule asymp_equiv_compose'[OF _ \\<pi>_at_top]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n      ln (real\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>a.\n                   \\<pi> a * ln (\\<pi> a))", "show \"(\\<lambda>x. real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>a.\n                   \\<pi> a * ln (\\<pi> a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                   \\<pi> x * ln (\\<pi> x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT2_imp_PNT1:\n  assumes \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. ln x)\"\n    and   \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln &&&\n    \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have ev: \"eventually (\\<lambda>x. \\<pi> x > 0) at_top\"\n            \"eventually (\\<lambda>x. ln (\\<pi> x) > 0) at_top\"\n            \"eventually (\\<lambda>x. ln (ln (\\<pi> x)) > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x &&&\n    \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x) &&&\n    \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))", "by (rule eventually_compose_filterlim[OF _ \\<pi>_at_top], real_asymp)+"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x)\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "from assms"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "have \"((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1)\n     at_top", "by (rule asymp_equivD_strong[OF _ eventually_mono[OF eventually_gt_at_top[of 1]]]) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1) at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "hence \"((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow> ln 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow>\n     ln 1)\n     at_top", "by (rule tendsto_ln) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow> ln 1)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow> ln 1)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x) =\n                   ln (\\<pi> x) * (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))) at_top\"\n      (is \"eventually (\\<lambda>x. _ = _ * ?f x) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x * ln (\\<pi> x) / x) =\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))", "using eventually_gt_at_top[of 0] ev"], ["proof (prove)\nusing this:\n  eventually ((<) (0::?'a1)) at_top\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x)\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x * ln (\\<pi> x) / x) =\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))", "by eventually_elim (simp add: field_simps ln_mult ln_div)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x * ln (\\<pi> x) / x) =\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow> ln 1)\n   at_top\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x * ln (\\<pi> x) / x) =\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))", "have \"((\\<lambda>x. ln (\\<pi> x) * ?f x) \\<longlongrightarrow> ln 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow> ln 1)\n   at_top\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x * ln (\\<pi> x) / x) =\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ln (\\<pi> x) *\n         (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n          ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n     ln 1)\n     at_top", "by (rule Lim_transform_eventually)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top", "by (rule filterlim_compose[OF _ \\<pi>_at_top]) real_asymp"], ["proof (state)\nthis:\n  ((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1)\n   at_top\n  ((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top", "have \"((\\<lambda>x. ln (\\<pi> x) * ?f x * (1 / ln (\\<pi> x))) \\<longlongrightarrow> ln 1 * 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1)\n   at_top\n  ((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ln (\\<pi> x) *\n         (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n         (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n     ln 1 * 0)\n     at_top", "by (rule tendsto_mult)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x. ln (\\<pi> x) * ?f x * (1 / ln (\\<pi> x)) = ?f x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x)) =\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x)\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x)) =\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n     (1 / ln (\\<pi> x)) =\n     1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n     (1 / ln (\\<pi> x)) =\n     1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)", "have \"(?f \\<longlongrightarrow> ln 1 * 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n     (1 / ln (\\<pi> x)) =\n     1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n         ln x / ln (\\<pi> x)) \\<longlongrightarrow>\n     ln 1 * 0)\n     at_top", "by (rule Lim_transform_eventually)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n       ln x / ln (\\<pi> x)) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "hence \"((\\<lambda>x. 1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ?f x) \\<longlongrightarrow> 1 + 0 - ln 1 * 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n       ln x / ln (\\<pi> x)) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n         (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n          ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n     1 + 0 - ln 1 * 0)\n     at_top", "by (intro tendsto_intros filterlim_compose[OF _ \\<pi>_at_top]) (real_asymp | simp)+"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   1 + 0 - ln 1 * 0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "hence \"((\\<lambda>x. ln x / ln (\\<pi> x)) \\<longlongrightarrow> 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   1 + 0 - ln 1 * 0)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln x / ln (\\<pi> x)) \\<longlongrightarrow> 1) at_top", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln x / ln (\\<pi> x)) \\<longlongrightarrow> 1) at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "thus *: \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. ln x)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. ln x / ln (\\<pi> x)) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "by (rule asymp_equiv_symI[OF asymp_equivI'])"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x. \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x)\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "hence \"\\<pi> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x))", "by (rule asymp_equiv_refl_ev)"], ["proof (state)\nthis:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "also"], ["proof (state)\nthis:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "from assms and *"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "have \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<pi> x * ln (\\<pi> x) /\n        ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "by (rule asymp_equiv_intros)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      \\<pi> x * ln (\\<pi> x) /\n      ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  \\<pi> \\<sim>[at_top] (\\<lambda>a. a / ln a)", "show \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  \\<pi> \\<sim>[at_top] (\\<lambda>a. a / ln a)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "."], ["proof (state)\nthis:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT4_imp_PNT5:\n  assumes \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "define r where \"r = (\\<lambda>x. \\<psi> x - \\<theta> x)\""], ["proof (state)\nthis:\n  r = (\\<lambda>x. \\<psi> x - \\<theta> x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "have \"r \\<in> O(\\<lambda>x. ln x * sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> O(\\<lambda>x. ln x * sqrt x)", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)", "by (fact \\<psi>_minus_\\<theta>_bigo)"], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x::real. ln x * sqrt x) \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x * sqrt x) \\<in> o(\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x * sqrt x) \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  r \\<in> o(\\<lambda>x. x)", "have r: \"r \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. r \\<in> o(\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)", "using assms r"], ["proof (prove)\nusing this:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)", "by (subst asymp_equiv_add_right) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "by (simp add: r_def)"], ["proof (state)\nthis:\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT4_imp_PNT1:\n  assumes \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. (\\<pi> x - \\<theta> x / ln x) + ((\\<theta> x - x) / ln x)) \\<in> o(\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + (\\<theta> x - x) / ln x)\n    \\<in> o(\\<lambda>x. x / ln x)", "proof (rule sum_in_smallo)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n 2. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "by (rule \\<pi>_\\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n 2. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n 2. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. x / ln x ^ 2) \\<in> o(\\<lambda>x. x / ln x :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / (ln x)\\<^sup>2) \\<in> o(\\<lambda>x. x / ln x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x / (ln x)\\<^sup>2) \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n 2. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)", "show \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x::real. ln x > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < ln x", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < ln x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "hence \"eventually (\\<lambda>x::real. ln x \\<noteq> 0) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 < ln x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "thus \"(\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "by (intro landau_o.small.divide_right asymp_equiv_imp_diff_smallo assms)"], ["proof (state)\nthis:\n  (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + (\\<theta> x - x) / ln x)\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + (\\<theta> x - x) / ln x)\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "by (simp add: diff_divide_distrib asymp_equiv_altdef)"], ["proof (state)\nthis:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT1_imp_PNT4:\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<theta> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln x)", "proof (rule smallo_imp_asymp_equiv)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "have \"(\\<lambda>x. \\<theta> x - \\<pi> x * ln x) \\<in> \\<Theta>(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> \\<Theta>(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of 1]])\n         (auto simp: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> \\<Theta>(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> \\<Theta>(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "have \"(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x)) \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)", "unfolding landau_o.big.uminus_in_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<pi> x - \\<theta> x / ln x) * ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)", "by (intro landau_o.big.mult_right \\<pi>_\\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "have \"(\\<lambda>x::real. x / (ln x)\\<^sup>2 * ln x) \\<in> o(\\<lambda>x. x / ln x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n    \\<in> o(\\<lambda>x. x / ln x * ln x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n  \\<in> o(\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n  \\<in> o(\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "have \"(\\<lambda>x. x / ln x * ln x) \\<in> \\<Theta>(\\<lambda>x. \\<pi> x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / ln x * ln x) \\<in> \\<Theta>(\\<lambda>x. \\<pi> x * ln x)", "by (intro asymp_equiv_imp_bigtheta asymp_equiv_intros asymp_equiv_symI[OF assms])"], ["proof (state)\nthis:\n  (\\<lambda>x. x / ln x * ln x) \\<in> \\<Theta>(\\<lambda>x. \\<pi> x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "show \"(\\<lambda>x. \\<theta> x - \\<pi> x * ln x) \\<in> o(\\<lambda>x. \\<pi> x * ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> o(\\<lambda>x. \\<pi> x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> o(\\<lambda>x. \\<pi> x * ln x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<pi> x * ln x) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)", "by (intro asymp_equiv_intros assms)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x * ln x) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x * ln x) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / ln x * ln x) \\<sim>[at_top] (\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x / ln x * ln x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[at_top] d \\<Longrightarrow> c \\<sim>[at_top] d;\n   \\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow> c \\<sim>[at_top] d\\<rbrakk>\n  \\<Longrightarrow> \\<theta> \\<sim>[at_top] (\\<lambda>a. a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[at_top] d \\<Longrightarrow> c \\<sim>[at_top] d;\n   \\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow> c \\<sim>[at_top] d\\<rbrakk>\n  \\<Longrightarrow> \\<theta> \\<sim>[at_top] (\\<lambda>a. a)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT5_imp_PNT4:\n  assumes \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "define r where \"r = (\\<lambda>x. \\<theta> x - \\<psi> x)\""], ["proof (state)\nthis:\n  r = (\\<lambda>x. \\<theta> x - \\<psi> x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)", "by (fact \\<psi>_minus_\\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<psi> x - \\<theta> x) = (\\<lambda>x. -r x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x) = (\\<lambda>x. - r x)", "by (simp add: r_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) = (\\<lambda>x. - r x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. - r x) \\<in> O(\\<lambda>x. ln x * sqrt x)", "have \"r \\<in> O(\\<lambda>x. ln x * sqrt x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. - r x) \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. r \\<in> O(\\<lambda>x. ln x * sqrt x)", "by simp"], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x::real. ln x * sqrt x) \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x * sqrt x) \\<in> o(\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x * sqrt x) \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  r \\<in> o(\\<lambda>x. x)", "have r: \"r \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. r \\<in> o(\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)", "using assms r"], ["proof (prove)\nusing this:\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x)\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)", "by (subst asymp_equiv_add_right) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "by (simp add: r_def)"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* END TODO *)\n(*>*)"], ["", "locale prime_number_theorem =\n  assumes prime_number_theorem [asymp_equiv_intros]: \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\nbegin"], ["", "corollary \\<theta>_asymptotics [asymp_equiv_intros]: \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "using prime_number_theorem"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "by (rule PNT1_imp_PNT4)"], ["", "corollary \\<psi>_asymptotics [asymp_equiv_intros]: \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "using \\<theta>_asymptotics PNT4_imp_PNT5"], ["proof (prove)\nusing this:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x) \\<Longrightarrow>\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "by simp"], ["", "corollary ln_\\<pi>_asymptotics [asymp_equiv_intros]: \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "using prime_number_theorem PNT1_imp_PNT1'"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x) \\<Longrightarrow>\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "by simp"], ["", "corollary \\<pi>_ln_\\<pi>_asymptotics: \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "using prime_number_theorem PNT1_imp_PNT2"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x) \\<Longrightarrow>\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "by simp"], ["", "corollary nth_prime_asymptotics [asymp_equiv_intros]:\n  \"(\\<lambda>n. real (nth_prime n)) \\<sim>[at_top] (\\<lambda>n. real n * ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real\n         (nth_prime\n           n)) \\<sim>[sequentially] (\\<lambda>n. real n * ln (real n))", "using \\<pi>_ln_\\<pi>_asymptotics PNT2_imp_PNT3"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n  (\\<lambda>x.\n      \\<pi> x *\n      ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real\n         (nth_prime\n           n)) \\<sim>[sequentially] (\\<lambda>n. real n * ln (real n))", "by simp"], ["", "corollary moebius_mu_smallo: \"sum_upto moebius_mu \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto moebius_mu \\<in> o(\\<lambda>x. x)", "using PNT_implies_sum_moebius_mu_sublinear \\<psi>_asymptotics"], ["proof (prove)\nusing this:\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x) \\<Longrightarrow>\n  sum_upto moebius_mu \\<in> o(\\<lambda>x. x)\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. sum_upto moebius_mu \\<in> o(\\<lambda>x. x)", "by simp"], ["", "lemma ln_\\<theta>_asymptotics:\n  includes prime_counting_notation\n  shows \"(\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "have [simp]: \"\\<theta> 2 = ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> 2 = ln 2", "by (simp add: eval_\\<theta>)"], ["proof (state)\nthis:\n  \\<theta> 2 = ln 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "have \\<theta>_pos: \"\\<theta> x > 0\" if \"x \\<ge> 2\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<theta> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < \\<theta> x", "have \"0 < ln (2 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ln 2", "by simp"], ["proof (state)\nthis:\n  0 < ln 2\n\ngoal (1 subgoal):\n 1. 0 < \\<theta> x", "also"], ["proof (state)\nthis:\n  0 < ln 2\n\ngoal (1 subgoal):\n 1. 0 < \\<theta> x", "have \"\\<dots> \\<le> \\<theta> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln 2 \\<le> \\<theta> x", "using \\<theta>_mono[OF that]"], ["proof (prove)\nusing this:\n  \\<theta> 2 \\<le> \\<theta> x\n\ngoal (1 subgoal):\n 1. ln 2 \\<le> \\<theta> x", "by simp"], ["proof (state)\nthis:\n  ln 2 \\<le> \\<theta> x\n\ngoal (1 subgoal):\n 1. 0 < \\<theta> x", "finally"], ["proof (chain)\npicking this:\n  0 < \\<theta> x", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < \\<theta> x\n\ngoal (1 subgoal):\n 1. 0 < \\<theta> x", "."], ["proof (state)\nthis:\n  0 < \\<theta> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 \\<le> ?x \\<Longrightarrow> 0 < \\<theta> ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "have nz: \"eventually (\\<lambda>x. \\<theta> x \\<noteq> 0 \\<or> x \\<noteq> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. \\<theta> x \\<noteq> 0 \\<or> x \\<noteq> 0", "using eventually_gt_at_top[of 0]"], ["proof (prove)\nusing this:\n  eventually ((<) (0::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. \\<theta> x \\<noteq> 0 \\<or> x \\<noteq> 0", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. \\<theta> x \\<noteq> 0 \\<or> x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "have \"filterlim (\\<lambda>x. \\<theta> x / x) (nhds 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<theta> x / x) \\<longlongrightarrow> 1) at_top", "using asymp_equivD_strong[OF \\<theta>_asymptotics nz]"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<theta> x / x) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<theta> x / x) \\<longlongrightarrow> 1) at_top", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<theta> x / x) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "hence \"filterlim (\\<lambda>x. ln (\\<theta> x / x)) (nhds (ln 1)) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<theta> x / x) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln (\\<theta> x / x)) \\<longlongrightarrow> ln 1) at_top", "by (rule tendsto_ln) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<theta> x / x)) \\<longlongrightarrow> ln 1) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<theta> x / x)) \\<longlongrightarrow> ln 1) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "have \"?this \\<longleftrightarrow> filterlim (\\<lambda>x. ln (\\<theta> x) - ln x) (nhds 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln (\\<theta> x / x)) \\<longlongrightarrow> ln 1) at_top =\n    ((\\<lambda>x. ln (\\<theta> x) - ln x) \\<longlongrightarrow> 0) at_top", "by (intro filterlim_cong eventually_mono[OF eventually_ge_at_top[of 2]])\n       (auto simp: ln_div \\<theta>_pos)"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<theta> x / x)) \\<longlongrightarrow> ln 1) at_top =\n  ((\\<lambda>x. ln (\\<theta> x) - ln x) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. ln (\\<theta> x) - ln x) \\<longlongrightarrow> 0) at_top", "show \"(\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>x. 1)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. ln (\\<theta> x) - ln x) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>x. 1)", "by (intro smalloI_tendsto) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>x. 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_\\<theta>_asymp_equiv [asymp_equiv_intros]:\n  includes prime_counting_notation\n  shows \"(\\<lambda>x. ln (\\<theta> x)) \\<sim>[at_top] ln\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x)) \\<sim>[at_top] ln", "proof (rule smallo_imp_asymp_equiv)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)", "have \"(\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)", "by (rule ln_\\<theta>_asymptotics)"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)", "have \"(\\<lambda>_. 1) \\<in> O(\\<lambda>x::real. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> O(ln)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)", "show \"(\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<theta> x) - ln x) \\<in> o(ln)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_nth_prime_asymptotics:\n  \"(\\<lambda>n. ln (nth_prime n) - (ln n + ln (ln n))) \\<in> o(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<in> o(\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<in> o(\\<lambda>_. 1)", "have \"filterlim (\\<lambda>n. ln (nth_prime n / (n * ln n))) (nhds (ln 1)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n) / (real n * ln (real n))))\n    \\<longlonglongrightarrow> ln 1", "by (intro tendsto_ln asymp_equivD_strong[OF nth_prime_asymptotics])\n       (auto intro!: eventually_mono[OF eventually_gt_at_top[of 1]])"], ["proof (state)\nthis:\n  (\\<lambda>n. ln (real (nth_prime n) / (real n * ln (real n))))\n  \\<longlonglongrightarrow> ln 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<in> o(\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. ln (real (nth_prime n) / (real n * ln (real n))))\n  \\<longlonglongrightarrow> ln 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<in> o(\\<lambda>_. 1)", "have \"?this \\<longleftrightarrow> filterlim (\\<lambda>n. ln (nth_prime n) - (ln n + ln (ln n))) (nhds 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n) / (real n * ln (real n))))\n    \\<longlonglongrightarrow> ln 1 =\n    (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<longlonglongrightarrow> 0", "using prime_gt_0_nat[OF prime_nth_prime]"], ["proof (prove)\nusing this:\n  0 < nth_prime ?n1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n) / (real n * ln (real n))))\n    \\<longlonglongrightarrow> ln 1 =\n    (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<longlonglongrightarrow> 0", "by (intro filterlim_cong refl eventually_mono[OF eventually_gt_at_top[of 1]])\n       (auto simp: field_simps ln_mult ln_div)"], ["proof (state)\nthis:\n  (\\<lambda>n. ln (real (nth_prime n) / (real n * ln (real n))))\n  \\<longlonglongrightarrow> ln 1 =\n  (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<in> o(\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n  \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<in> o(\\<lambda>_. 1)", "by (intro smalloI_tendsto) auto"], ["proof (state)\nthis:\n  (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n  \\<in> o(\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_nth_prime_asymp_equiv [asymp_equiv_intros]:\n  \"(\\<lambda>n. ln (nth_prime n)) \\<sim>[at_top] ln\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real\n             (nth_prime n))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real\n             (nth_prime n))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "have \"(\\<lambda>n. ln (nth_prime n) - (ln n + ln (ln n))) \\<in> o(ln)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<in> o(\\<lambda>x. ln (real x))", "using ln_nth_prime_asymptotics"], ["proof (prove)\nusing this:\n  (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n  \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n    \\<in> o(\\<lambda>x. ln (real x))", "by (rule landau_o.small.trans) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n  \\<in> o(\\<lambda>x. ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real\n             (nth_prime n))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "hence \"(\\<lambda>n. ln (nth_prime n) - (ln n + ln (ln n)) + ln (ln n)) \\<in> o(ln)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))))\n  \\<in> o(\\<lambda>x. ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))) +\n        ln (ln (real n)))\n    \\<in> o(\\<lambda>x. ln (real x))", "by (rule sum_in_smallo) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))) +\n      ln (ln (real n)))\n  \\<in> o(\\<lambda>x. ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real\n             (nth_prime n))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      ln (real (nth_prime n)) - (ln (real n) + ln (ln (real n))) +\n      ln (ln (real n)))\n  \\<in> o(\\<lambda>x. ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real\n             (nth_prime n))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "by (intro smallo_imp_asymp_equiv) auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (real\n           (nth_prime n))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following versions use a little less notation.\n\\<close>"], ["", "corollary prime_number_theorem': \"((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top", "using prime_number_theorem"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top", "by (rule asymp_equivD_strong[OF _ eventually_mono[OF eventually_gt_at_top[of 1]]]) auto"], ["", "corollary prime_number_theorem'':\n  \"(\\<lambda>x. card {p. prime p \\<and> real p \\<le> x}) \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"\\<pi> = (\\<lambda>x. card {p. prime p \\<and> real p \\<le> x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> = (\\<lambda>x. real (card {p. prime p \\<and> real p \\<le> x}))", "by (intro ext) (simp add: \\<pi>_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  \\<pi> = (\\<lambda>x. real (card {p. prime p \\<and> real p \\<le> x}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "with prime_number_theorem"], ["proof (chain)\npicking this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n  \\<pi> = (\\<lambda>x. real (card {p. prime p \\<and> real p \\<le> x}))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n  \\<pi> = (\\<lambda>x. real (card {p. prime p \\<and> real p \\<le> x}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary prime_number_theorem''':\n  \"(\\<lambda>n. card {p. prime p \\<and> p \\<le> n}) \\<sim>[at_top] (\\<lambda>n. real n / ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n               real n / ln (real n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n               real n / ln (real n))", "have \"(\\<lambda>n. card {p. prime p \\<and> real p \\<le> real n}) \\<sim>[at_top] (\\<lambda>n. real n / ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p\n               \\<le> real\n                      x})) \\<sim>[sequentially] (\\<lambda>n.\n              real n / ln (real n))", "using prime_number_theorem''"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p\n               \\<le> real\n                      x})) \\<sim>[sequentially] (\\<lambda>n.\n              real n / ln (real n))", "by (rule asymp_equiv_compose') (simp add: filterlim_real_sequentially)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             real p\n             \\<le> real\n                    x})) \\<sim>[sequentially] (\\<lambda>n.\n            real n / ln (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n               real n / ln (real n))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             real p\n             \\<le> real\n                    x})) \\<sim>[sequentially] (\\<lambda>n.\n            real n / ln (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n               real n / ln (real n))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n             real n / ln (real n))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Existence of primes in intervals\\<close>"], ["", "text \\<open>\n  For fixed \\<open>\\<epsilon>\\<close>, The interval $(x; \\varepsilon x]$ contains a prime number for any sufficiently\n  large \\<open>x\\<close>. This proof was taken from A.\\,J. Hildebrand's lecture notes~\\cite{hildebrand_ant}.\n\\<close>"], ["", "lemma (in prime_number_theorem) prime_in_interval_exists:\n  fixes c :: real\n  assumes \"c > 1\"\n  shows   \"eventually (\\<lambda>x. \\<exists>p. prime p \\<and> real p \\<in> {x<..c*x}) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "from \\<open>c > 1\\<close>"], ["proof (chain)\npicking this:\n  1 < c", "have \"(\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<sim>[at_top] (\\<lambda>x. ((c * x) / ln (c * x)) / (x / ln x))\""], ["proof (prove)\nusing this:\n  1 < c\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<pi> (c * x) /\n        \\<pi>\n         x) \\<sim>[at_top] (\\<lambda>x. c * x / ln (c * x) / (x / ln x))", "by (intro asymp_equiv_intros asymp_equiv_compose'[OF prime_number_theorem]) real_asymp+"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      \\<pi> (c * x) /\n      \\<pi> x) \\<sim>[at_top] (\\<lambda>x. c * x / ln (c * x) / (x / ln x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      \\<pi> (c * x) /\n      \\<pi> x) \\<sim>[at_top] (\\<lambda>x. c * x / ln (c * x) / (x / ln x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        c * x / ln (c * x) / (x / ln x)) \\<sim>[at_top] (\\<lambda>x. c)", "using \\<open>c > 1\\<close>"], ["proof (prove)\nusing this:\n  1 < c\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        c * x / ln (c * x) / (x / ln x)) \\<sim>[at_top] (\\<lambda>x. c)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      c * x / ln (c * x) / (x / ln x)) \\<sim>[at_top] (\\<lambda>x. c)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<sim>[at_top] (\\<lambda>a. c)", "have \"(\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<sim>[at_top] (\\<lambda>a. c)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<sim>[at_top] (\\<lambda>a. c)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<sim>[at_top] (\\<lambda>a. c)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<sim>[at_top] (\\<lambda>a. c)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "hence \"((\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<longlongrightarrow> c) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<sim>[at_top] (\\<lambda>a. c)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<longlongrightarrow> c) at_top", "by (rule asymp_equivD_const)"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<longlongrightarrow> c) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "from this and \\<open>c > 1\\<close>"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<longlongrightarrow> c) at_top\n  1 < c", "have \"eventually (\\<lambda>x. \\<pi> (c * x) / \\<pi> x > 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<pi> (c * x) / \\<pi> x) \\<longlongrightarrow> c) at_top\n  1 < c\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 < \\<pi> (c * x) / \\<pi> x", "by (rule order_tendstoD)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 < \\<pi> (c * x) / \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 < \\<pi> (c * x) / \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "have \"eventually (\\<lambda>x. \\<pi> x > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x", "using \\<pi>_at_top"], ["proof (prove)\nusing this:\n  filterlim \\<pi> at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x", "by (auto simp: filterlim_at_top_dense)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. 1 < \\<pi> (c * x) / \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 1 < \\<pi> (c * x) / \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "using eventually_gt_at_top[of 1]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 1 < \\<pi> (c * x) / \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  eventually ((<) (1::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "case (elim x)"], ["proof (state)\nthis:\n  1 < \\<pi> (c * x) / \\<pi> x\n  0 < \\<pi> x\n  1 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "define P where \"P = {p. prime p \\<and> real p \\<in> {x<..c*x}}\""], ["proof (state)\nthis:\n  P = {p. prime p \\<and> real p \\<in> {x<..c * x}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "from elim and \\<open>c > 1\\<close>"], ["proof (chain)\npicking this:\n  1 < \\<pi> (c * x) / \\<pi> x\n  0 < \\<pi> x\n  1 < x\n  1 < c", "have \"1 * x < c * x\""], ["proof (prove)\nusing this:\n  1 < \\<pi> (c * x) / \\<pi> x\n  0 < \\<pi> x\n  1 < x\n  1 < c\n\ngoal (1 subgoal):\n 1. 1 * x < c * x", "by (intro mult_strict_right_mono) auto"], ["proof (state)\nthis:\n  1 * x < c * x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "hence \"x < c * x\""], ["proof (prove)\nusing this:\n  1 * x < c * x\n\ngoal (1 subgoal):\n 1. x < c * x", "by simp"], ["proof (state)\nthis:\n  x < c * x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "have \"P = {p. prime p \\<and> real p \\<le> c * x} - {p. prime p \\<and> real p \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\n    {p. prime p \\<and> real p \\<le> c * x} -\n    {p. prime p \\<and> real p \\<le> x}", "by (auto simp: P_def)"], ["proof (state)\nthis:\n  P =\n  {p. prime p \\<and> real p \\<le> c * x} -\n  {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "also"], ["proof (state)\nthis:\n  P =\n  {p. prime p \\<and> real p \\<le> c * x} -\n  {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "have \"card \\<dots> = card {p. prime p \\<and> real p \\<le> c * x} - card {p. prime p \\<and> real p \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({p. prime p \\<and> real p \\<le> c * x} -\n      {p. prime p \\<and> real p \\<le> x}) =\n    card {p. prime p \\<and> real p \\<le> c * x} -\n    card {p. prime p \\<and> real p \\<le> x}", "using \\<open>x < c * x\\<close>"], ["proof (prove)\nusing this:\n  x < c * x\n\ngoal (1 subgoal):\n 1. card\n     ({p. prime p \\<and> real p \\<le> c * x} -\n      {p. prime p \\<and> real p \\<le> x}) =\n    card {p. prime p \\<and> real p \\<le> c * x} -\n    card {p. prime p \\<and> real p \\<le> x}", "by (subst card_Diff_subset) (auto intro: finite_primes_le)"], ["proof (state)\nthis:\n  card\n   ({p. prime p \\<and> real p \\<le> c * x} -\n    {p. prime p \\<and> real p \\<le> x}) =\n  card {p. prime p \\<and> real p \\<le> c * x} -\n  card {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "also"], ["proof (state)\nthis:\n  card\n   ({p. prime p \\<and> real p \\<le> c * x} -\n    {p. prime p \\<and> real p \\<le> x}) =\n  card {p. prime p \\<and> real p \\<le> c * x} -\n  card {p. prime p \\<and> real p \\<le> x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "have \"real \\<dots> = \\<pi> (c * x) - \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     (card {p. prime p \\<and> real p \\<le> c * x} -\n      card {p. prime p \\<and> real p \\<le> x}) =\n    \\<pi> (c * x) - \\<pi> x", "using \\<pi>_mono[of x \"c * x\"] \\<open>x < c * x\\<close>"], ["proof (prove)\nusing this:\n  x \\<le> c * x \\<Longrightarrow> \\<pi> x \\<le> \\<pi> (c * x)\n  x < c * x\n\ngoal (1 subgoal):\n 1. real\n     (card {p. prime p \\<and> real p \\<le> c * x} -\n      card {p. prime p \\<and> real p \\<le> x}) =\n    \\<pi> (c * x) - \\<pi> x", "by (subst of_nat_diff) (auto simp: primes_pi_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  real\n   (card {p. prime p \\<and> real p \\<le> c * x} -\n    card {p. prime p \\<and> real p \\<le> x}) =\n  \\<pi> (c * x) - \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "finally"], ["proof (chain)\npicking this:\n  real (card P) = \\<pi> (c * x) - \\<pi> x", "have \"real (card P) = \\<pi> (c * x) - \\<pi> x\""], ["proof (prove)\nusing this:\n  real (card P) = \\<pi> (c * x) - \\<pi> x\n\ngoal (1 subgoal):\n 1. real (card P) = \\<pi> (c * x) - \\<pi> x", "by simp"], ["proof (state)\nthis:\n  real (card P) = \\<pi> (c * x) - \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "moreover"], ["proof (state)\nthis:\n  real (card P) = \\<pi> (c * x) - \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "have \"\\<pi> (c * x) - \\<pi> x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<pi> (c * x) - \\<pi> x", "using elim"], ["proof (prove)\nusing this:\n  1 < \\<pi> (c * x) / \\<pi> x\n  0 < \\<pi> x\n  1 < x\n\ngoal (1 subgoal):\n 1. 0 < \\<pi> (c * x) - \\<pi> x", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  0 < \\<pi> (c * x) - \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "ultimately"], ["proof (chain)\npicking this:\n  real (card P) = \\<pi> (c * x) - \\<pi> x\n  0 < \\<pi> (c * x) - \\<pi> x", "have \"real (card P) > 0\""], ["proof (prove)\nusing this:\n  real (card P) = \\<pi> (c * x) - \\<pi> x\n  0 < \\<pi> (c * x) - \\<pi> x\n\ngoal (1 subgoal):\n 1. 0 < real (card P)", "by linarith"], ["proof (state)\nthis:\n  0 < real (card P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "hence \"card P > 0\""], ["proof (prove)\nusing this:\n  0 < real (card P)\n\ngoal (1 subgoal):\n 1. 0 < card P", "by simp"], ["proof (state)\nthis:\n  0 < card P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "hence \"P \\<noteq> {}\""], ["proof (prove)\nusing this:\n  0 < card P\n\ngoal (1 subgoal):\n 1. P \\<noteq> {}", "by (intro notI) simp"], ["proof (state)\nthis:\n  P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 < \\<pi> (c * x) / \\<pi> x; 0 < \\<pi> x; 1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}", "by (auto simp: P_def)"], ["proof (state)\nthis:\n  \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<exists>p. prime p \\<and> real p \\<in> {x<..c * x}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The set of rationals whose numerator and denominator are primes is\n  dense in $\\mathbb{R}_{{}>0}$.\n\\<close>"], ["", "lemma (in prime_number_theorem) prime_fractions_dense:\n  fixes \\<alpha> \\<epsilon> :: real\n  assumes \"\\<alpha> > 0\" and \"\\<epsilon> > 0\"\n  obtains p q :: nat where \"prime p\" and \"prime q\" and \"dist (real p / real q) \\<alpha> < \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<epsilon>' where \"\\<epsilon>' = \\<epsilon> / 2\""], ["proof (state)\nthis:\n  \\<epsilon>' = \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  0 < \\<alpha>\n  0 < \\<epsilon>", "have \"\\<epsilon>' > 0\""], ["proof (prove)\nusing this:\n  0 < \\<alpha>\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. 0 < \\<epsilon>'", "by (simp add: \\<epsilon>'_def)"], ["proof (state)\nthis:\n  0 < \\<epsilon>'\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"eventually (\\<lambda>x. \\<exists>p. prime p \\<and> real p \\<in> {x<..(1 + \\<epsilon>' / \\<alpha>) * x}) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p.\n          prime p \\<and> real p \\<in> {x<..(1 + \\<epsilon>' / \\<alpha>) * x}", "using assms \\<open>\\<epsilon>' > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<alpha>\n  0 < \\<epsilon>\n  0 < \\<epsilon>'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<exists>p.\n          prime p \\<and> real p \\<in> {x<..(1 + \\<epsilon>' / \\<alpha>) * x}", "by (intro prime_in_interval_exists) (auto simp: field_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<exists>p.\n        prime p \\<and> real p \\<in> {x<..(1 + \\<epsilon>' / \\<alpha>) * x}\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<exists>p.\n        prime p \\<and> real p \\<in> {x<..(1 + \\<epsilon>' / \\<alpha>) * x}", "obtain x0 where x0: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> \\<exists>p. prime p \\<and> real p \\<in> {x<..(1 + \\<epsilon>' / \\<alpha>) * x}\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<exists>p.\n        prime p \\<and> real p \\<in> {x<..(1 + \\<epsilon>' / \\<alpha>) * x}\n\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        (\\<And>x.\n            x0 \\<le> x \\<Longrightarrow>\n            \\<exists>p.\n               prime p \\<and>\n               real p\n               \\<in> {x<..(1 + \\<epsilon>' / \\<alpha>) *\n                          x}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  x0 \\<le> ?x \\<Longrightarrow>\n  \\<exists>p.\n     prime p \\<and> real p \\<in> {?x<..(1 + \\<epsilon>' / \\<alpha>) * ?x}\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>q. prime q \\<and> q > nat \\<lfloor>x0 / \\<alpha>\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. prime q \\<and> nat \\<lfloor>x0 / \\<alpha>\\<rfloor> < q", "by (rule bigger_prime)"], ["proof (state)\nthis:\n  \\<exists>q. prime q \\<and> nat \\<lfloor>x0 / \\<alpha>\\<rfloor> < q\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>q. prime q \\<and> nat \\<lfloor>x0 / \\<alpha>\\<rfloor> < q", "obtain q where \"prime q\" \"q > nat \\<lfloor>x0 / \\<alpha>\\<rfloor>\""], ["proof (prove)\nusing this:\n  \\<exists>q. prime q \\<and> nat \\<lfloor>x0 / \\<alpha>\\<rfloor> < q\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>prime q; nat \\<lfloor>x0 / \\<alpha>\\<rfloor> < q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  prime q\n  nat \\<lfloor>x0 / \\<alpha>\\<rfloor> < q\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"real q \\<ge> x0 / \\<alpha>\""], ["proof (prove)\nusing this:\n  prime q\n  nat \\<lfloor>x0 / \\<alpha>\\<rfloor> < q\n\ngoal (1 subgoal):\n 1. x0 / \\<alpha> \\<le> real q", "by linarith"], ["proof (state)\nthis:\n  x0 / \\<alpha> \\<le> real q\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with \\<open>\\<alpha> > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < \\<alpha>\n  x0 / \\<alpha> \\<le> real q", "have \"\\<alpha> * real q \\<ge> x0\""], ["proof (prove)\nusing this:\n  0 < \\<alpha>\n  x0 / \\<alpha> \\<le> real q\n\ngoal (1 subgoal):\n 1. x0 \\<le> \\<alpha> * real q", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  x0 \\<le> \\<alpha> * real q\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<exists>p. prime p \\<and> real p \\<in> {\\<alpha> * real q<..(1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)}\""], ["proof (prove)\nusing this:\n  x0 \\<le> \\<alpha> * real q\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       prime p \\<and>\n       real p\n       \\<in> {\\<alpha> *\n              real q<..(1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)}", "by (intro x0)"], ["proof (state)\nthis:\n  \\<exists>p.\n     prime p \\<and>\n     real p\n     \\<in> {\\<alpha> *\n            real q<..(1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)}\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>p.\n     prime p \\<and>\n     real p\n     \\<in> {\\<alpha> *\n            real q<..(1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)}", "obtain p where p: \"prime p\" \"real p > \\<alpha> * real q\" \"real p \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\""], ["proof (prove)\nusing this:\n  \\<exists>p.\n     prime p \\<and>\n     real p\n     \\<in> {\\<alpha> *\n            real q<..(1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; \\<alpha> * real q < real p;\n         real p\n         \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>p.\n     prime p \\<and>\n     real p\n     \\<in> {\\<alpha> *\n            real q<..(1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)}\n  0 < \\<alpha>\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; \\<alpha> * real q < real p;\n         real p\n         \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prime p\n  \\<alpha> * real q < real p\n  real p \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from p \\<open>prime q\\<close>"], ["proof (chain)\npicking this:\n  prime p\n  \\<alpha> * real q < real p\n  real p \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\n  prime q", "have \"real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>\""], ["proof (prove)\nusing this:\n  prime p\n  \\<alpha> * real q < real p\n  real p \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\n  prime q\n\ngoal (1 subgoal):\n 1. real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>", "using assms"], ["proof (prove)\nusing this:\n  prime p\n  \\<alpha> * real q < real p\n  real p \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\n  prime q\n  0 < \\<alpha>\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>", "by (auto simp: field_simps dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> = \\<alpha> + \\<epsilon>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + \\<epsilon>' / \\<alpha>) * \\<alpha> = \\<alpha> + \\<epsilon>'", "using assms"], ["proof (prove)\nusing this:\n  0 < \\<alpha>\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. (1 + \\<epsilon>' / \\<alpha>) * \\<alpha> = \\<alpha> + \\<epsilon>'", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 + \\<epsilon>' / \\<alpha>) * \\<alpha> = \\<alpha> + \\<epsilon>'\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  real p / real q \\<le> \\<alpha> + \\<epsilon>'", "have \"real p / real q \\<le> \\<alpha> + \\<epsilon>'\""], ["proof (prove)\nusing this:\n  real p / real q \\<le> \\<alpha> + \\<epsilon>'\n\ngoal (1 subgoal):\n 1. real p / real q \\<le> \\<alpha> + \\<epsilon>'", "."], ["proof (state)\nthis:\n  real p / real q \\<le> \\<alpha> + \\<epsilon>'\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  real p / real q \\<le> \\<alpha> + \\<epsilon>'\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from p \\<open>prime q\\<close>"], ["proof (chain)\npicking this:\n  prime p\n  \\<alpha> * real q < real p\n  real p \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\n  prime q", "have \"real p / real q > \\<alpha>\" \"real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>\""], ["proof (prove)\nusing this:\n  prime p\n  \\<alpha> * real q < real p\n  real p \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\n  prime q\n\ngoal (1 subgoal):\n 1. \\<alpha> < real p / real q &&&\n    real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>", "using assms"], ["proof (prove)\nusing this:\n  prime p\n  \\<alpha> * real q < real p\n  real p \\<le> (1 + \\<epsilon>' / \\<alpha>) * (\\<alpha> * real q)\n  prime q\n  0 < \\<alpha>\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<alpha> < real p / real q &&&\n    real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>", "by (auto simp: field_simps dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  \\<alpha> < real p / real q\n  real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  real p / real q \\<le> \\<alpha> + \\<epsilon>'\n  \\<alpha> < real p / real q\n  real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>", "have \"dist (real p / real q) \\<alpha> \\<le> \\<epsilon>'\""], ["proof (prove)\nusing this:\n  real p / real q \\<le> \\<alpha> + \\<epsilon>'\n  \\<alpha> < real p / real q\n  real p / real q \\<le> (1 + \\<epsilon>' / \\<alpha>) * \\<alpha>\n\ngoal (1 subgoal):\n 1. dist (real p / real q) \\<alpha> \\<le> \\<epsilon>'", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  dist (real p / real q) \\<alpha> \\<le> \\<epsilon>'\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  dist (real p / real q) \\<alpha> \\<le> \\<epsilon>'\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> < \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon>' < \\<epsilon>", "using \\<open>\\<epsilon> > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<epsilon>' < \\<epsilon>", "by (simp add: \\<epsilon>'_def)"], ["proof (state)\nthis:\n  \\<epsilon>' < \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime p; prime q;\n         dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  dist (real p / real q) \\<alpha> < \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (real p / real q) \\<alpha> < \\<epsilon>\n\ngoal (1 subgoal):\n 1. thesis", "using \\<open>prime p\\<close> \\<open>prime q\\<close> that[of p q]"], ["proof (prove)\nusing this:\n  dist (real p / real q) \\<alpha> < \\<epsilon>\n  prime p\n  prime q\n  \\<lbrakk>prime p; prime q;\n   dist (real p / real q) \\<alpha> < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The logarithm of the primorial\\<close>"], ["", "text \\<open>\n  The PNT directly implies the asymptotics of the logarithm of the primorial function:\n\\<close>"], ["", "context prime_number_theorem\nbegin"], ["", "lemma ln_primorial_asymp_equiv [asymp_equiv_intros]:\n  \"(\\<lambda>x. ln (primorial x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (real (primorial x))) \\<sim>[at_top] (\\<lambda>x. x)", "by (auto simp: ln_primorial \\<theta>_asymptotics)"], ["", "lemma ln_ln_primorial_asymp_equiv [asymp_equiv_intros]:\n  \"(\\<lambda>x. ln (ln (primorial x))) \\<sim>[at_top] (\\<lambda>x. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (ln (real (primorial x)))) \\<sim>[at_top] ln", "by (auto simp: ln_primorial ln_\\<theta>_asymp_equiv)"], ["", "lemma ln_primorial'_asymp_equiv [asymp_equiv_intros]:\n        \"(\\<lambda>k. ln (primorial' k)) \\<sim>[at_top] (\\<lambda>k. k * ln k)\"\n  and ln_ln_primorial'_asymp_equiv [asymp_equiv_intros]:\n        \"(\\<lambda>k. ln (ln (primorial' k))) \\<sim>[at_top] (\\<lambda>k. ln k)\"\n  and ln_over_ln_ln_primorial'_asymp_equiv:\n        \"(\\<lambda>k. ln (primorial' k) / ln (ln (primorial' k))) \\<sim>[at_top] (\\<lambda>k. k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x.\n       real x * ln (real x)) &&&\n    (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x)) &&&\n    (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have lim1: \"filterlim (\\<lambda>k. real (nth_prime (k - 1))) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM k sequentially. real (nth_prime (k - 1)) :> at_top", "by (rule filterlim_compose[OF filterlim_real_sequentially]\n             filterlim_compose[OF nth_prime_at_top])+ real_asymp"], ["proof (state)\nthis:\n  LIM k sequentially. real (nth_prime (k - 1)) :> at_top\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have lim2: \"filterlim (\\<lambda>k::nat. k - 1) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM k sequentially. k - 1 :> sequentially", "by real_asymp"], ["proof (state)\nthis:\n  LIM k sequentially. k - 1 :> sequentially\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"(\\<lambda>k. ln (primorial' k)) \\<sim>[at_top] (\\<lambda>n. ln (primorial (nth_prime (n - 1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>n.\n       ln (real (primorial (real (nth_prime (n - 1))))))", "by (intro asymp_equiv_refl_ev eventually_mono[OF eventually_gt_at_top[of 0]])\n       (auto simp: primorial'_conv_primorial)"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real\n           (primorial'\n             k))) \\<sim>[sequentially] (\\<lambda>n.\n     ln (real (primorial (real (nth_prime (n - 1))))))\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "also"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real\n           (primorial'\n             k))) \\<sim>[sequentially] (\\<lambda>n.\n     ln (real (primorial (real (nth_prime (n - 1))))))\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. nth_prime (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real\n             (primorial\n               (real\n                 (nth_prime\n                   (n -\n                    1)))))) \\<sim>[sequentially] (\\<lambda>x.\n               real (nth_prime (x - 1)))", "by (intro asymp_equiv_compose'[OF _ lim1] asymp_equiv_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (real\n           (primorial\n             (real\n               (nth_prime\n                 (n -\n                  1)))))) \\<sim>[sequentially] (\\<lambda>x.\n             real (nth_prime (x - 1)))\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (real\n           (primorial\n             (real\n               (nth_prime\n                 (n -\n                  1)))))) \\<sim>[sequentially] (\\<lambda>x.\n             real (nth_prime (x - 1)))\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. real (n - 1) * ln (real (n - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (x -\n            1))) \\<sim>[sequentially] (\\<lambda>n.\n    real (n - 1) * ln (real (n - 1)))", "by (intro asymp_equiv_compose'[OF _ lim2] asymp_equiv_intros)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (x -\n          1))) \\<sim>[sequentially] (\\<lambda>n.\n  real (n - 1) * ln (real (n - 1)))\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (x -\n          1))) \\<sim>[sequentially] (\\<lambda>n.\n  real (n - 1) * ln (real (n - 1)))\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. n * ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real (n - 1) *\n        ln (real\n             (n -\n              1))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      real (n - 1) *\n      ln (real\n           (n - 1))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n\ngoal (3 subgoals):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 3. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[sequentially] d \\<Longrightarrow>\n              c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow> c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>k.\n                        ln (real\n                             (primorial'\n                               k))) \\<sim>[sequentially] (\\<lambda>a.\n                       real a * ln (real a))", "show 1: \"(\\<lambda>k. ln (primorial' k)) \\<sim>[at_top] (\\<lambda>k. k * ln k)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[sequentially] d \\<Longrightarrow>\n              c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow> c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>k.\n                        ln (real\n                             (primorial'\n                               k))) \\<sim>[sequentially] (\\<lambda>a.\n                       real a * ln (real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (primorial'\n               k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "."], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real\n           (primorial'\n             k))) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 2. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"(\\<lambda>k. ln (ln (primorial' k))) \\<sim>[at_top] (\\<lambda>n. ln (ln (primorial (nth_prime (n - 1)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>n.\n            ln (ln (real (primorial (real (nth_prime (n - 1)))))))", "by (intro asymp_equiv_refl_ev eventually_mono[OF eventually_gt_at_top[of 0]])\n       (auto simp: primorial'_conv_primorial)"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (ln (real\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>n.\n          ln (ln (real (primorial (real (nth_prime (n - 1)))))))\n\ngoal (2 subgoals):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 2. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "also"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (ln (real\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>n.\n          ln (ln (real (primorial (real (nth_prime (n - 1)))))))\n\ngoal (2 subgoals):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 2. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. ln (nth_prime (n - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (ln (real\n                 (primorial\n                   (real\n                     (nth_prime\n                       (n -\n                        1))))))) \\<sim>[sequentially] (\\<lambda>n.\n                    ln (real (nth_prime (n - 1))))", "by (intro asymp_equiv_compose'[OF _ lim1] asymp_equiv_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (ln (real\n               (primorial\n                 (real\n                   (nth_prime\n                     (n -\n                      1))))))) \\<sim>[sequentially] (\\<lambda>n.\n                  ln (real (nth_prime (n - 1))))\n\ngoal (2 subgoals):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 2. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (ln (real\n               (primorial\n                 (real\n                   (nth_prime\n                     (n -\n                      1))))))) \\<sim>[sequentially] (\\<lambda>n.\n                  ln (real (nth_prime (n - 1))))\n\ngoal (2 subgoals):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 2. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. ln (real (n - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real\n             (nth_prime\n               (n -\n                1)))) \\<sim>[sequentially] (\\<lambda>n. ln (real (n - 1)))", "by (intro asymp_equiv_compose'[OF _ lim2] asymp_equiv_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (real\n           (nth_prime\n             (n - 1)))) \\<sim>[sequentially] (\\<lambda>n. ln (real (n - 1)))\n\ngoal (2 subgoals):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 2. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (real\n           (nth_prime\n             (n - 1)))) \\<sim>[sequentially] (\\<lambda>n. ln (real (n - 1)))\n\ngoal (2 subgoals):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 2. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (real (n - 1))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (real (n - 1))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n 2. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[sequentially] d \\<Longrightarrow>\n              c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow> c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>k.\n                        ln (ln (real\n                                 (primorial'\n                                   k)))) \\<sim>[sequentially] (\\<lambda>a.\n                            ln (real a))", "show 2: \"(\\<lambda>k. ln (ln (primorial' k))) \\<sim>[at_top] (\\<lambda>k. ln k)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[sequentially] d \\<Longrightarrow>\n              c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow> c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>k.\n                        ln (ln (real\n                                 (primorial'\n                                   k)))) \\<sim>[sequentially] (\\<lambda>a.\n                            ln (real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))", "."], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (ln (real\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>x. ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"(\\<lambda>k. ln (primorial' k) / ln (ln (primorial' k))) \\<sim>[at_top] (\\<lambda>k. (k * ln k) / ln k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real\n                 (primorial'\n                   k)))) \\<sim>[sequentially] (\\<lambda>x.\n            real x * ln (real x) / ln (real x))", "by (intro asymp_equiv_intros 1 2)"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real (primorial' k)) /\n      ln (ln (real\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>x.\n          real x * ln (real x) / ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "also"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real (primorial' k)) /\n      ln (ln (real\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>x.\n          real x * ln (real x) / ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>k. k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real x * ln (real x) / ln (real x)) \\<sim>[sequentially] real", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. real x * ln (real x) / ln (real x)) \\<sim>[sequentially] real\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>k.\n      ln (real (primorial' k)) /\n      ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "show \"(\\<lambda>k. ln (primorial' k) / ln (ln (primorial' k))) \\<sim>[at_top] (\\<lambda>k. k)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>k.\n      ln (real (primorial' k)) /\n      ln (ln (real (primorial' k)))) \\<sim>[sequentially] real\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (primorial' k)) /\n        ln (ln (real (primorial' k)))) \\<sim>[sequentially] real", "."], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real (primorial' k)) /\n      ln (ln (real (primorial' k)))) \\<sim>[sequentially] real\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Consequences of the asymptotics of \\<open>\\<psi>\\<close> and \\<open>\\<theta>\\<close>\\<close>"], ["", "text \\<open>\n  Next, we will show some consequences of $\\psi(x)\\sim x$ and $\\vartheta(x)\\sim x$. To this\n  end, we first show generically that any function $g = e^{x + o(x)}$ is $o(c^n)$ if $c > e$ and\n  $\\omega(c^n)$ if $c < e$.\n\\<close>"], ["", "locale exp_asymp_equiv_linear =\n  fixes f g :: \"real \\<Rightarrow> real\"\n  assumes f_asymp_equiv: \"f \\<sim>[at_top] (\\<lambda>x. x)\"\n  assumes g: \"eventually (\\<lambda>x. g x = exp (f x)) F\"\nbegin"], ["", "lemma\n  fixes \\<epsilon> :: real assumes \"\\<epsilon> > 0\"\n  shows smallo:     \"g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\"\n    and smallomega: \"g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x)) &&&\n    g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n 2. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "have \"(\\<lambda>x. exp (f x) / exp ((1 + \\<epsilon>) * x)) \\<in> \\<Theta>(\\<lambda>x. exp (((f x - x) / x - \\<epsilon>) * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (f x) / exp ((1 + \\<epsilon>) * x))\n    \\<in> \\<Theta>(\\<lambda>x. exp (((f x - x) / x - \\<epsilon>) * x))", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of 1]])\n       (simp_all add: divide_simps ring_distribs flip: exp_add exp_diff)"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (f x) / exp ((1 + \\<epsilon>) * x))\n  \\<in> \\<Theta>(\\<lambda>x. exp (((f x - x) / x - \\<epsilon>) * x))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n 2. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (f x) / exp ((1 + \\<epsilon>) * x))\n  \\<in> \\<Theta>(\\<lambda>x. exp (((f x - x) / x - \\<epsilon>) * x))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n 2. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "have \"((\\<lambda>x. exp (((f x - x) / x - \\<epsilon>) * x)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         exp (((f x - x) / x - \\<epsilon>) * x)) \\<longlongrightarrow>\n     0)\n     at_top", "proof (intro filterlim_compose[OF exp_at_bot] filterlim_tendsto_neg_mult_at_bot)"], ["proof (state)\ngoal (3 subgoals):\n 1. ((\\<lambda>x. (f x - x) / x - \\<epsilon>) \\<longlongrightarrow> ?c1)\n     at_top\n 2. ?c1 < 0\n 3. LIM x at_top. x :> at_top", "have smallo: \"(\\<lambda>x. f x - x) \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - x) \\<in> o(\\<lambda>x. x)", "using f_asymp_equiv"], ["proof (prove)\nusing this:\n  f \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - x) \\<in> o(\\<lambda>x. x)", "by (rule asymp_equiv_imp_diff_smallo)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - x) \\<in> o(\\<lambda>x. x)\n\ngoal (3 subgoals):\n 1. ((\\<lambda>x. (f x - x) / x - \\<epsilon>) \\<longlongrightarrow> ?c1)\n     at_top\n 2. ?c1 < 0\n 3. LIM x at_top. x :> at_top", "show \"((\\<lambda>x. (f x - x) / x - \\<epsilon>) \\<longlongrightarrow> 0 - \\<epsilon>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (f x - x) / x - \\<epsilon>) \\<longlongrightarrow>\n     0 - \\<epsilon>)\n     at_top", "by (intro tendsto_diff smalloD_tendsto[OF smallo] tendsto_const)"], ["proof (state)\nthis:\n  ((\\<lambda>x. (f x - x) / x - \\<epsilon>) \\<longlongrightarrow>\n   0 - \\<epsilon>)\n   at_top\n\ngoal (2 subgoals):\n 1. 0 - \\<epsilon> < 0\n 2. LIM x at_top. x :> at_top", "qed (use \\<open>\\<epsilon> > 0\\<close> in \\<open>auto simp: filterlim_ident\\<close>)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       exp (((f x - x) / x - \\<epsilon>) * x)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n 2. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "hence \"(\\<lambda>x. exp (((f x - x) / x - \\<epsilon>) * x)) \\<in> o(\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       exp (((f x - x) / x - \\<epsilon>) * x)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (((f x - x) / x - \\<epsilon>) * x))\n    \\<in> o(\\<lambda>_. 1)", "by (intro smalloI_tendsto) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (((f x - x) / x - \\<epsilon>) * x))\n  \\<in> o(\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n 2. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. exp (f x) / exp ((1 + \\<epsilon>) * x))\n  \\<in> o(\\<lambda>_. 1)", "have \"(\\<lambda>x. exp (f x)) \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. exp (f x) / exp ((1 + \\<epsilon>) * x))\n  \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (f x)) \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))", "by (simp add: landau_divide_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (f x)) \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n 2. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (f x)) \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n 2. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "have \"?this \\<longleftrightarrow> g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (f x))\n     \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))) =\n    (g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x)))", "using g"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in ?F. g x = exp (f x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (f x))\n     \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))) =\n    (g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x)))", "by (intro landau_o.small.in_cong) (simp add: eq_commute)"], ["proof (state)\nthis:\n  ((\\<lambda>x. exp (f x))\n   \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))) =\n  (g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x)))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n 2. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "finally"], ["proof (chain)\npicking this:\n  g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))", "show \"g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\""], ["proof (prove)\nusing this:\n  g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))", "."], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. exp ((1 + \\<epsilon>) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "have \"(\\<lambda>x. exp (f x) / exp ((1 - \\<epsilon>) * x)) \\<in> \\<Theta>(\\<lambda>x. exp (((f x - x) / x + \\<epsilon>) * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (f x) / exp ((1 - \\<epsilon>) * x))\n    \\<in> \\<Theta>(\\<lambda>x. exp (((f x - x) / x + \\<epsilon>) * x))", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of 1]])\n       (simp add: ring_distribs flip: exp_add exp_diff)"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (f x) / exp ((1 - \\<epsilon>) * x))\n  \\<in> \\<Theta>(\\<lambda>x. exp (((f x - x) / x + \\<epsilon>) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (f x) / exp ((1 - \\<epsilon>) * x))\n  \\<in> \\<Theta>(\\<lambda>x. exp (((f x - x) / x + \\<epsilon>) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "have \"filterlim (\\<lambda>x. exp (((f x - x) / x + \\<epsilon>) * x)) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_top. exp (((f x - x) / x + \\<epsilon>) * x) :> at_top", "proof (intro filterlim_compose[OF exp_at_top] filterlim_tendsto_pos_mult_at_top)"], ["proof (state)\ngoal (3 subgoals):\n 1. ((\\<lambda>x. (f x - x) / x + \\<epsilon>) \\<longlongrightarrow> ?c1)\n     at_top\n 2. 0 < ?c1\n 3. LIM x at_top. x :> at_top", "have smallo: \"(\\<lambda>x. f x - x) \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - x) \\<in> o(\\<lambda>x. x)", "using f_asymp_equiv"], ["proof (prove)\nusing this:\n  f \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - x) \\<in> o(\\<lambda>x. x)", "by (rule asymp_equiv_imp_diff_smallo)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - x) \\<in> o(\\<lambda>x. x)\n\ngoal (3 subgoals):\n 1. ((\\<lambda>x. (f x - x) / x + \\<epsilon>) \\<longlongrightarrow> ?c1)\n     at_top\n 2. 0 < ?c1\n 3. LIM x at_top. x :> at_top", "show \"((\\<lambda>x. (f x - x) / x + \\<epsilon>) \\<longlongrightarrow> 0 + \\<epsilon>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (f x - x) / x + \\<epsilon>) \\<longlongrightarrow>\n     0 + \\<epsilon>)\n     at_top", "by (intro tendsto_add smalloD_tendsto[OF smallo] tendsto_const)"], ["proof (state)\nthis:\n  ((\\<lambda>x. (f x - x) / x + \\<epsilon>) \\<longlongrightarrow>\n   0 + \\<epsilon>)\n   at_top\n\ngoal (2 subgoals):\n 1. 0 < 0 + \\<epsilon>\n 2. LIM x at_top. x :> at_top", "qed (use \\<open>\\<epsilon> > 0\\<close> in \\<open>auto simp: filterlim_ident\\<close>)"], ["proof (state)\nthis:\n  LIM x at_top. exp (((f x - x) / x + \\<epsilon>) * x) :> at_top\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "hence \"(\\<lambda>x. exp (((f x - x) / x + \\<epsilon>) * x)) \\<in> \\<omega>(\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  LIM x at_top. exp (((f x - x) / x + \\<epsilon>) * x) :> at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (((f x - x) / x + \\<epsilon>) * x))\n    \\<in> \\<omega>(\\<lambda>_. 1)", "by (simp add: filterlim_at_top_iff_smallomega)"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (((f x - x) / x + \\<epsilon>) * x))\n  \\<in> \\<omega>(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. exp (f x) / exp ((1 - \\<epsilon>) * x))\n  \\<in> \\<omega>(\\<lambda>_. 1)", "have \"(\\<lambda>x. exp (f x)) \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. exp (f x) / exp ((1 - \\<epsilon>) * x))\n  \\<in> \\<omega>(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (f x))\n    \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "by (simp add: landau_divide_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (f x))\n  \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (f x))\n  \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "have \"?this \\<longleftrightarrow> g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (f x))\n     \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))) =\n    (g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x)))", "using g"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in ?F. g x = exp (f x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (f x))\n     \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))) =\n    (g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x)))", "by (intro landau_omega.small.in_cong) (simp add: eq_commute)"], ["proof (state)\nthis:\n  ((\\<lambda>x. exp (f x))\n   \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))) =\n  (g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x)))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "finally"], ["proof (chain)\npicking this:\n  g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "show \"g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\""], ["proof (prove)\nusing this:\n  g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))", "."], ["proof (state)\nthis:\n  g \\<in> \\<omega>(\\<lambda>x. exp ((1 - \\<epsilon>) * x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallo':\n  fixes c :: real assumes \"c > exp 1\"\n  shows \"g \\<in> o(\\<lambda>x. c powr x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "have \"c > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c", "by (rule le_less_trans[OF _ assms]) auto"], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "from \\<open>c > 0\\<close> assms"], ["proof (chain)\npicking this:\n  0 < c\n  exp 1 < c", "have \"exp 1 < exp (ln c)\""], ["proof (prove)\nusing this:\n  0 < c\n  exp 1 < c\n\ngoal (1 subgoal):\n 1. exp 1 < exp (ln c)", "by (subst exp_ln) auto"], ["proof (state)\nthis:\n  exp 1 < exp (ln c)\n\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "hence \"ln c > 1\""], ["proof (prove)\nusing this:\n  exp 1 < exp (ln c)\n\ngoal (1 subgoal):\n 1. 1 < ln c", "by (subst (asm) exp_less_cancel_iff)"], ["proof (state)\nthis:\n  1 < ln c\n\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "hence \"g \\<in> o(\\<lambda>x. exp ((1 + (ln c - 1)) * x))\""], ["proof (prove)\nusing this:\n  1 < ln c\n\ngoal (1 subgoal):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + (ln c - 1)) * x))", "using assms"], ["proof (prove)\nusing this:\n  1 < ln c\n  exp 1 < c\n\ngoal (1 subgoal):\n 1. g \\<in> o(\\<lambda>x. exp ((1 + (ln c - 1)) * x))", "by (intro smallo) auto"], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. exp ((1 + (ln c - 1)) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "also"], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. exp ((1 + (ln c - 1)) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "have \"(\\<lambda>x. exp ((1 + (ln c - 1)) * x)) = (\\<lambda>x. c powr x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp ((1 + (ln c - 1)) * x)) = (powr) c", "using \\<open>c > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp ((1 + (ln c - 1)) * x)) = (powr) c", "by (simp add: powr_def mult_ac)"], ["proof (state)\nthis:\n  (\\<lambda>x. exp ((1 + (ln c - 1)) * x)) = (powr) c\n\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "finally"], ["proof (chain)\npicking this:\n  g \\<in> o((powr) c)", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> o((powr) c)\n\ngoal (1 subgoal):\n 1. g \\<in> o((powr) c)", "."], ["proof (state)\nthis:\n  g \\<in> o((powr) c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallomega':\n  fixes c :: real assumes \"c \\<in> {0<..<exp 1}\"\n  shows \"g \\<in> \\<omega>(\\<lambda>x. c powr x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>((powr) c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>((powr) c)", "from assms"], ["proof (chain)\npicking this:\n  c \\<in> {0<..<exp 1}", "have \"exp 1 > exp (ln c)\""], ["proof (prove)\nusing this:\n  c \\<in> {0<..<exp 1}\n\ngoal (1 subgoal):\n 1. exp (ln c) < exp 1", "by (subst exp_ln) auto"], ["proof (state)\nthis:\n  exp (ln c) < exp 1\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>((powr) c)", "hence \"ln c < 1\""], ["proof (prove)\nusing this:\n  exp (ln c) < exp 1\n\ngoal (1 subgoal):\n 1. ln c < 1", "by (subst (asm) exp_less_cancel_iff)"], ["proof (state)\nthis:\n  ln c < 1\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>((powr) c)", "hence \"g \\<in> \\<omega>(\\<lambda>x. exp ((1 - (1 - ln c)) * x))\""], ["proof (prove)\nusing this:\n  ln c < 1\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - (1 - ln c)) * x))", "using assms"], ["proof (prove)\nusing this:\n  ln c < 1\n  c \\<in> {0<..<exp 1}\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>(\\<lambda>x. exp ((1 - (1 - ln c)) * x))", "by (intro smallomega) auto"], ["proof (state)\nthis:\n  g \\<in> \\<omega>(\\<lambda>x. exp ((1 - (1 - ln c)) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>((powr) c)", "also"], ["proof (state)\nthis:\n  g \\<in> \\<omega>(\\<lambda>x. exp ((1 - (1 - ln c)) * x))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>((powr) c)", "have \"(\\<lambda>x. exp ((1 - (1 - ln c)) * x)) = (\\<lambda>x. c powr x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp ((1 - (1 - ln c)) * x)) = (powr) c", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> {0<..<exp 1}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp ((1 - (1 - ln c)) * x)) = (powr) c", "by (simp add: powr_def mult_ac)"], ["proof (state)\nthis:\n  (\\<lambda>x. exp ((1 - (1 - ln c)) * x)) = (powr) c\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>((powr) c)", "finally"], ["proof (chain)\npicking this:\n  g \\<in> \\<omega>((powr) c)", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> \\<omega>((powr) c)\n\ngoal (1 subgoal):\n 1. g \\<in> \\<omega>((powr) c)", "."], ["proof (state)\nthis:\n  g \\<in> \\<omega>((powr) c)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\n  The primorial fulfils $x\\# = e^{\\vartheta(x)}$ and is therefore one example of this.\n\\<close>"], ["", "context prime_number_theorem\nbegin"], ["", "sublocale primorial: exp_asymp_equiv_linear \\<theta> \"\\<lambda>x. real (primorial x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp_asymp_equiv_linear \\<theta> (\\<lambda>x. real (primorial x))", "using \\<theta>_asymptotics"], ["proof (prove)\nusing this:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. exp_asymp_equiv_linear \\<theta> (\\<lambda>x. real (primorial x))", "by unfold_locales (simp_all add: ln_primorial [symmetric])"], ["", "end"], ["", "text \\<open>\n  The LCM of the first \\<open>n\\<close> natural numbers is equal to $e^{\\psi(n)}$ and is\n  therefore another example.\n\\<close>"], ["", "context prime_number_theorem\nbegin"], ["", "sublocale Lcm_upto: exp_asymp_equiv_linear \\<psi> \"\\<lambda>x. real (Lcm {1..nat \\<lfloor>x\\<rfloor>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp_asymp_equiv_linear \\<psi>\n     (\\<lambda>x. real (Lcm {1..nat \\<lfloor>x\\<rfloor>}))", "using \\<psi>_asymptotics"], ["proof (prove)\nusing this:\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. exp_asymp_equiv_linear \\<psi>\n     (\\<lambda>x. real (Lcm {1..nat \\<lfloor>x\\<rfloor>}))", "by unfold_locales (simp_all flip: Lcm_upto_real_conv_\\<psi>)"], ["", "end"], ["", "subsection \\<open>Bounds on the prime \\<open>\\<omega>\\<close> function\\<close>"], ["", "text \\<open>\n  Next, we will examine the asymptotic behaviour of the prime \\<open>\\<omega>\\<close> function $\\omega(n)$,\n  i.\\,e.\\ the number of distinct prime factors of \\<open>n\\<close>. These proofs are again taken from\n  A.\\,J. Hildebrand's lecture notes~\\cite{hildebrand_ant}.\n\\<close>"], ["", "lemma ln_gt_1:\n  assumes \"x > (3 :: real)\"\n  shows   \"ln x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < ln x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < ln x", "have \"x > exp 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp 1 < x", "using exp_le assms"], ["proof (prove)\nusing this:\n  exp 1 \\<le> 3\n  3 < x\n\ngoal (1 subgoal):\n 1. exp 1 < x", "by linarith"], ["proof (state)\nthis:\n  exp 1 < x\n\ngoal (1 subgoal):\n 1. 1 < ln x", "hence \"ln x > ln (exp 1)\""], ["proof (prove)\nusing this:\n  exp 1 < x\n\ngoal (1 subgoal):\n 1. ln (exp 1) < ln x", "using assms"], ["proof (prove)\nusing this:\n  exp 1 < x\n  3 < x\n\ngoal (1 subgoal):\n 1. ln (exp 1) < ln x", "by (subst ln_less_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (exp 1) < ln x\n\ngoal (1 subgoal):\n 1. 1 < ln x", "thus ?thesis"], ["proof (prove)\nusing this:\n  ln (exp 1) < ln x\n\ngoal (1 subgoal):\n 1. 1 < ln x", "by simp"], ["proof (state)\nthis:\n  1 < ln x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prime_number_theorem) primes_omega_primorial'_asymp_equiv:\n  \"(\\<lambda>k. primes_omega (primorial' k)) \\<sim>[at_top]\n     (\\<lambda>k. ln (primorial' k) / ln (ln (primorial' k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (primes_omega\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "using ln_over_ln_ln_primorial'_asymp_equiv"], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      ln (real (primorial' k)) /\n      ln (ln (real (primorial' k)))) \\<sim>[sequentially] real\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (primes_omega\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "by (simp add: asymp_equiv_sym)"], ["", "text \\<open>\n  The number of distinct prime factors of \\<open>n\\<close> has maximal order $\\ln n / \\ln\\ln n$:\n\\<close>"], ["", "theorem (in prime_number_theorem)\n  limsup_primes_omega: \"limsup (\\<lambda>n. primes_omega n / (ln n / ln (ln n))) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))) =\n    1", "proof (intro antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1\n 2. 1 \\<le> limsup\n             (\\<lambda>x.\n                 ereal\n                  (real (primes_omega x) /\n                   (ln (real x) / ln (ln (real x)))))", "have \"(\\<lambda>k. primes_omega (primorial' k) / (ln (primorial' k) / ln (ln (primorial' k)))) \\<longlonglongrightarrow> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (primes_omega (primorial' k)) /\n        (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> 1", "using primes_omega_primorial'_asymp_equiv"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real\n       (primes_omega\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (primes_omega (primorial' k)) /\n        (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> 1", "by (intro asymp_equivD_strong eventually_mono[OF eventually_gt_at_top[of 1]]) auto"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      real (primes_omega (primorial' k)) /\n      (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> 1\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1\n 2. 1 \\<le> limsup\n             (\\<lambda>x.\n                 ereal\n                  (real (primes_omega x) /\n                   (ln (real x) / ln (ln (real x)))))", "hence \"limsup ((\\<lambda>n. primes_omega n / (ln n / ln (ln n))) \\<circ> primorial') = ereal 1\""], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      real (primes_omega (primorial' k)) /\n      (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> 1\n\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (((\\<lambda>n.\n                real (primes_omega n) /\n                (ln (real n) / ln (ln (real n)))) \\<circ>\n            primorial')\n            x)) =\n    ereal 1", "by (intro lim_imp_Limsup tendsto_ereal) simp_all"], ["proof (state)\nthis:\n  limsup\n   (\\<lambda>x.\n       ereal\n        (((\\<lambda>n.\n              real (primes_omega n) /\n              (ln (real n) / ln (ln (real n)))) \\<circ>\n          primorial')\n          x)) =\n  ereal 1\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1\n 2. 1 \\<le> limsup\n             (\\<lambda>x.\n                 ereal\n                  (real (primes_omega x) /\n                   (ln (real x) / ln (ln (real x)))))", "hence \"1 = limsup ((\\<lambda>n. ereal (primes_omega n / (ln n / ln (ln n)))) \\<circ> primorial')\""], ["proof (prove)\nusing this:\n  limsup\n   (\\<lambda>x.\n       ereal\n        (((\\<lambda>n.\n              real (primes_omega n) /\n              (ln (real n) / ln (ln (real n)))) \\<circ>\n          primorial')\n          x)) =\n  ereal 1\n\ngoal (1 subgoal):\n 1. 1 =\n    limsup\n     ((\\<lambda>n.\n          ereal\n           (real (primes_omega n) /\n            (ln (real n) / ln (ln (real n))))) \\<circ>\n      primorial')", "by (simp add: o_def)"], ["proof (state)\nthis:\n  1 =\n  limsup\n   ((\\<lambda>n.\n        ereal\n         (real (primes_omega n) / (ln (real n) / ln (ln (real n))))) \\<circ>\n    primorial')\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1\n 2. 1 \\<le> limsup\n             (\\<lambda>x.\n                 ereal\n                  (real (primes_omega x) /\n                   (ln (real x) / ln (ln (real x)))))", "also"], ["proof (state)\nthis:\n  1 =\n  limsup\n   ((\\<lambda>n.\n        ereal\n         (real (primes_omega n) / (ln (real n) / ln (ln (real n))))) \\<circ>\n    primorial')\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1\n 2. 1 \\<le> limsup\n             (\\<lambda>x.\n                 ereal\n                  (real (primes_omega x) /\n                   (ln (real x) / ln (ln (real x)))))", "have \"\\<dots> \\<le> limsup (\\<lambda>n. primes_omega n / (ln n / ln (ln n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limsup\n     ((\\<lambda>n.\n          ereal\n           (real (primes_omega n) /\n            (ln (real n) / ln (ln (real n))))) \\<circ>\n      primorial')\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))", "using strict_mono_primorial'"], ["proof (prove)\nusing this:\n  strict_mono primorial'\n\ngoal (1 subgoal):\n 1. limsup\n     ((\\<lambda>n.\n          ereal\n           (real (primes_omega n) /\n            (ln (real n) / ln (ln (real n))))) \\<circ>\n      primorial')\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))", "by (rule limsup_subseq_mono)"], ["proof (state)\nthis:\n  limsup\n   ((\\<lambda>n.\n        ereal\n         (real (primes_omega n) / (ln (real n) / ln (ln (real n))))) \\<circ>\n    primorial')\n  \\<le> limsup\n         (\\<lambda>x.\n             ereal\n              (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1\n 2. 1 \\<le> limsup\n             (\\<lambda>x.\n                 ereal\n                  (real (primes_omega x) /\n                   (ln (real x) / ln (ln (real x)))))", "finally"], ["proof (chain)\npicking this:\n  1 \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))", "show \"limsup (\\<lambda>n. primes_omega n / (ln n / ln (ln n))) \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n\ngoal (1 subgoal):\n 1. 1 \\<le> limsup\n             (\\<lambda>x.\n                 ereal\n                  (real (primes_omega x) /\n                   (ln (real x) / ln (ln (real x)))))", "."], ["proof (state)\nthis:\n  1 \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1", "show \"limsup (\\<lambda>n. primes_omega n / (ln n / ln (ln n))) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n    \\<le> 1", "unfolding Limsup_le_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y>1.\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "fix C' :: ereal"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "assume C': \"C' > 1\""], ["proof (state)\nthis:\n  1 < C'\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "from ereal_dense2[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>z. 1 < ereal z \\<and> ereal z < C'", "obtain C where C: \"C > 1\" \"ereal C < C'\""], ["proof (prove)\nusing this:\n  \\<exists>z. 1 < ereal z \\<and> ereal z < C'\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>1 < C; ereal C < C'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  1 < C\n  ereal C < C'\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "have \"(\\<lambda>k. primes_omega (primorial' k) / (ln (primorial' k) / ln (ln (primorial' k)))) \\<longlonglongrightarrow> 1\"\n      (is \"filterlim ?f _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (primes_omega (primorial' k)) /\n        (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> 1", "using primes_omega_primorial'_asymp_equiv"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real\n       (primes_omega\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (primes_omega (primorial' k)) /\n        (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> 1", "by (intro asymp_equivD_strong eventually_mono[OF eventually_gt_at_top[of 1]]) auto"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      real (primes_omega (primorial' k)) /\n      (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> 1\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "from order_tendstoD(2)[OF this C(1)]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in sequentially.\n     real (primes_omega (primorial' x)) /\n     (ln (real (primorial' x)) / ln (ln (real (primorial' x))))\n     < C", "have \"eventually (\\<lambda>k. ?f k < C) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     real (primes_omega (primorial' x)) /\n     (ln (real (primorial' x)) / ln (ln (real (primorial' x))))\n     < C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F k in sequentially.\n       real (primes_omega (primorial' k)) /\n       (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n       < C", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F k in sequentially.\n     real (primes_omega (primorial' k)) /\n     (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n     < C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F k in sequentially.\n     real (primes_omega (primorial' k)) /\n     (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n     < C", "obtain k0 where k0: \"\\<And>k. k \\<ge> k0 \\<Longrightarrow> ?f k < C\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F k in sequentially.\n     real (primes_omega (primorial' k)) /\n     (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n     < C\n\ngoal (1 subgoal):\n 1. (\\<And>k0.\n        (\\<And>k.\n            k0 \\<le> k \\<Longrightarrow>\n            real (primes_omega (primorial' k)) /\n            (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n            < C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  k0 \\<le> ?k \\<Longrightarrow>\n  real (primes_omega (primorial' ?k)) /\n  (ln (real (primorial' ?k)) / ln (ln (real (primorial' ?k))))\n  < C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "have \"eventually (\\<lambda>n::nat. max 3 k0 / (ln n / ln (ln n)) < C) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C", "using \\<open>C > 1\\<close>"], ["proof (prove)\nusing this:\n  1 < C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "hence \"eventually (\\<lambda>n. primes_omega n / (ln n / ln (ln n)) \\<le> C) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "using eventually_gt_at_top[of \"primorial' (max k0 3)\"]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n  eventually ((<) (primorial' (max k0 3))) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C;\n        primorial' (max k0 3) < n\\<rbrakk>\n       \\<Longrightarrow> real (primes_omega n) /\n                         (ln (real n) / ln (ln (real n)))\n                         \\<le> C", "case (elim n)"], ["proof (state)\nthis:\n  real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n  primorial' (max k0 3) < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C;\n        primorial' (max k0 3) < n\\<rbrakk>\n       \\<Longrightarrow> real (primes_omega n) /\n                         (ln (real n) / ln (ln (real n)))\n                         \\<le> C", "define k where \"k = primes_omega n\""], ["proof (state)\nthis:\n  k = primes_omega n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C;\n        primorial' (max k0 3) < n\\<rbrakk>\n       \\<Longrightarrow> real (primes_omega n) /\n                         (ln (real n) / ln (ln (real n)))\n                         \\<le> C", "define m where \"m = primorial' k\""], ["proof (state)\nthis:\n  m = primorial' k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C;\n        primorial' (max k0 3) < n\\<rbrakk>\n       \\<Longrightarrow> real (primes_omega n) /\n                         (ln (real n) / ln (ln (real n)))\n                         \\<le> C", "have \"primorial' 3 \\<le> primorial' (max k0 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' 3 \\<le> primorial' (max k0 3)", "by (subst strict_mono_less_eq[OF strict_mono_primorial']) auto"], ["proof (state)\nthis:\n  primorial' 3 \\<le> primorial' (max k0 3)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C;\n        primorial' (max k0 3) < n\\<rbrakk>\n       \\<Longrightarrow> real (primes_omega n) /\n                         (ln (real n) / ln (ln (real n)))\n                         \\<le> C", "also"], ["proof (state)\nthis:\n  primorial' 3 \\<le> primorial' (max k0 3)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C;\n        primorial' (max k0 3) < n\\<rbrakk>\n       \\<Longrightarrow> real (primes_omega n) /\n                         (ln (real n) / ln (ln (real n)))\n                         \\<le> C", "have \"\\<dots> < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' (max k0 3) < n", "by fact"], ["proof (state)\nthis:\n  primorial' (max k0 3) < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C;\n        primorial' (max k0 3) < n\\<rbrakk>\n       \\<Longrightarrow> real (primes_omega n) /\n                         (ln (real n) / ln (ln (real n)))\n                         \\<le> C", "finally"], ["proof (chain)\npicking this:\n  primorial' 3 < n", "have \"n > 30\""], ["proof (prove)\nusing this:\n  primorial' 3 < n\n\ngoal (1 subgoal):\n 1. 30 < n", "by simp"], ["proof (state)\nthis:\n  30 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C;\n        primorial' (max k0 3) < n\\<rbrakk>\n       \\<Longrightarrow> real (primes_omega n) /\n                         (ln (real n) / ln (ln (real n)))\n                         \\<le> C", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "proof (cases \"k \\<ge> max 3 k0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "case True"], ["proof (state)\nthis:\n  max 3 k0 \\<le> k\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "hence \"m \\<ge> 30\""], ["proof (prove)\nusing this:\n  max 3 k0 \\<le> k\n\ngoal (1 subgoal):\n 1. 30 \\<le> m", "using strict_mono_less_eq[OF strict_mono_primorial', of 3 k]"], ["proof (prove)\nusing this:\n  max 3 k0 \\<le> k\n  (primorial' 3 \\<le> primorial' k) = (3 \\<le> k)\n\ngoal (1 subgoal):\n 1. 30 \\<le> m", "by (simp add: m_def k_def)"], ["proof (state)\nthis:\n  30 \\<le> m\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "have \"exp 1 ^ 3 \\<le> (3 ^ 3 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp 1 ^ 3 \\<le> 3 ^ 3", "using exp_le"], ["proof (prove)\nusing this:\n  exp 1 \\<le> 3\n\ngoal (1 subgoal):\n 1. exp 1 ^ 3 \\<le> 3 ^ 3", "by (intro power_mono) auto"], ["proof (state)\nthis:\n  exp 1 ^ 3 \\<le> 3 ^ 3\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "also"], ["proof (state)\nthis:\n  exp 1 ^ 3 \\<le> 3 ^ 3\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "have \"\\<dots> < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 ^ 3 < real m", "using \\<open>m \\<ge> 30\\<close>"], ["proof (prove)\nusing this:\n  30 \\<le> m\n\ngoal (1 subgoal):\n 1. 3 ^ 3 < real m", "by simp"], ["proof (state)\nthis:\n  3 ^ 3 < real m\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "finally"], ["proof (chain)\npicking this:\n  exp 1 ^ 3 < real m", "have \"ln (exp 1 ^ 3) < ln m\""], ["proof (prove)\nusing this:\n  exp 1 ^ 3 < real m\n\ngoal (1 subgoal):\n 1. ln (exp 1 ^ 3) < ln (real m)", "using \\<open>m \\<ge> 30\\<close>"], ["proof (prove)\nusing this:\n  exp 1 ^ 3 < real m\n  30 \\<le> m\n\ngoal (1 subgoal):\n 1. ln (exp 1 ^ 3) < ln (real m)", "by (subst ln_less_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (exp 1 ^ 3) < ln (real m)\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "hence \"ln m > 3\""], ["proof (prove)\nusing this:\n  ln (exp 1 ^ 3) < ln (real m)\n\ngoal (1 subgoal):\n 1. 3 < ln (real m)", "by (subst (asm) ln_realpow) auto"], ["proof (state)\nthis:\n  3 < ln (real m)\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "have \"primorial' (primes_omega n) \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' (primes_omega n) \\<le> n", "using \\<open>n > 30\\<close>"], ["proof (prove)\nusing this:\n  30 < n\n\ngoal (1 subgoal):\n 1. primorial' (primes_omega n) \\<le> n", "by (intro primorial'_primes_omega_le) auto"], ["proof (state)\nthis:\n  primorial' (primes_omega n) \\<le> n\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "hence \"m \\<le> n\""], ["proof (prove)\nusing this:\n  primorial' (primes_omega n) \\<le> n\n\ngoal (1 subgoal):\n 1. m \\<le> n", "unfolding m_def k_def"], ["proof (prove)\nusing this:\n  primorial' (primes_omega n) \\<le> n\n\ngoal (1 subgoal):\n 1. primorial' (primes_omega n) \\<le> n", "using elim"], ["proof (prove)\nusing this:\n  primorial' (primes_omega n) \\<le> n\n  real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n  primorial' (max k0 3) < n\n\ngoal (1 subgoal):\n 1. primorial' (primes_omega n) \\<le> n", "by (auto simp: max_def)"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "hence \"primes_omega n / (ln n / ln (ln n)) \\<le> k / (ln m / ln (ln m))\""], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n    \\<le> real k / (ln (real m) / ln (ln (real m)))", "unfolding k_def"], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n    \\<le> real (primes_omega n) / (ln (real m) / ln (ln (real m)))", "using elim \\<open>m \\<ge> 30\\<close> ln_gt_1[of n] \\<open>ln m > 3\\<close>"], ["proof (prove)\nusing this:\n  m \\<le> n\n  real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n  primorial' (max k0 3) < n\n  30 \\<le> m\n  3 < real n \\<Longrightarrow> 1 < ln (real n)\n  3 < ln (real m)\n\ngoal (1 subgoal):\n 1. real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n    \\<le> real (primes_omega n) / (ln (real m) / ln (ln (real m)))", "by (intro frac_le[of \"primes_omega n\"] divide_ln_mono mult_pos_pos divide_pos_pos) auto"], ["proof (state)\nthis:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n  \\<le> real k / (ln (real m) / ln (ln (real m)))\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "also"], ["proof (state)\nthis:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n  \\<le> real k / (ln (real m) / ln (ln (real m)))\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "have \"\\<dots> = ?f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real k / (ln (real m) / ln (ln (real m))) =\n    real (primes_omega (primorial' k)) /\n    (ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "by (simp add: k_def m_def)"], ["proof (state)\nthis:\n  real k / (ln (real m) / ln (ln (real m))) =\n  real (primes_omega (primorial' k)) /\n  (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "also"], ["proof (state)\nthis:\n  real k / (ln (real m) / ln (ln (real m))) =\n  real (primes_omega (primorial' k)) /\n  (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "have \"\\<dots> < C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (primes_omega (primorial' k)) /\n    (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n    < C", "by (intro k0) (use True in \\<open>auto simp: k_def\\<close>)"], ["proof (state)\nthis:\n  real (primes_omega (primorial' k)) /\n  (ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n  < C\n\ngoal (2 subgoals):\n 1. max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n 2. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "finally"], ["proof (chain)\npicking this:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n))) < C", "show ?thesis"], ["proof (prove)\nusing this:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n))) < C\n\ngoal (1 subgoal):\n 1. real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "by simp"], ["proof (state)\nthis:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n\ngoal (1 subgoal):\n 1. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "case False"], ["proof (state)\nthis:\n  \\<not> max 3 k0 \\<le> k\n\ngoal (1 subgoal):\n 1. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "hence \"primes_omega n / (ln n / ln (ln n)) \\<le> max 3 k0 / (ln n / ln (ln n))\""], ["proof (prove)\nusing this:\n  \\<not> max 3 k0 \\<le> k\n\ngoal (1 subgoal):\n 1. real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n    \\<le> real (max 3 k0) / (ln (real n) / ln (ln (real n)))", "using elim ln_gt_1[of n] \\<open>n > 30\\<close>"], ["proof (prove)\nusing this:\n  \\<not> max 3 k0 \\<le> k\n  real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n  primorial' (max k0 3) < n\n  3 < real n \\<Longrightarrow> 1 < ln (real n)\n  30 < n\n\ngoal (1 subgoal):\n 1. real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n    \\<le> real (max 3 k0) / (ln (real n) / ln (ln (real n)))", "by (intro divide_right_mono divide_nonneg_pos) (auto simp: k_def)"], ["proof (state)\nthis:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n  \\<le> real (max 3 k0) / (ln (real n) / ln (ln (real n)))\n\ngoal (1 subgoal):\n 1. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "also"], ["proof (state)\nthis:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n)))\n  \\<le> real (max 3 k0) / (ln (real n) / ln (ln (real n)))\n\ngoal (1 subgoal):\n 1. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "have \"\\<dots> < C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C", "using elim"], ["proof (prove)\nusing this:\n  real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n  primorial' (max k0 3) < n\n\ngoal (1 subgoal):\n 1. real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C", "by simp"], ["proof (state)\nthis:\n  real (max 3 k0) / (ln (real n) / ln (ln (real n))) < C\n\ngoal (1 subgoal):\n 1. \\<not> max 3 k0 \\<le> k \\<Longrightarrow>\n    real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "finally"], ["proof (chain)\npicking this:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n))) < C", "show ?thesis"], ["proof (prove)\nusing this:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n))) < C\n\ngoal (1 subgoal):\n 1. real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C", "by simp"], ["proof (state)\nthis:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       1 < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x))))\n          < y", "thus \"eventually (\\<lambda>n. ereal (primes_omega n / (ln n / ln (ln n))) < C') at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real (primes_omega n) / (ln (real n) / ln (ln (real n))) \\<le> C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ereal (real (primes_omega n) / (ln (real n) / ln (ln (real n)))) < C'", "by eventually_elim (rule le_less_trans[OF _ C(2)], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     ereal (real (primes_omega n) / (ln (real n) / ln (ln (real n)))) < C'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  limsup\n   (\\<lambda>x.\n       ereal (real (primes_omega x) / (ln (real x) / ln (ln (real x)))))\n  \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bounds on the divisor function\\<close>"], ["", "text \\<open>\n  In this section, we shall examine the growth of the divisor function $\\sigma_0(n)$.\n  In particular, we will show that $\\sigma_0(n) < 2^{c\\ln n / \\ln\\ln n}$ for all sufficiently\n  large \\<open>n\\<close> if $c > 1$ and $\\sigma_0(n) > 2^{c\\ln n / \\ln\\ln n}$ for infinitely many \\<open>n\\<close>\n  if $c < 1$.\n\n  An equivalent statement is that $\\ln(\\sigma_0(n))$ has maximal order\n  $\\ln 2 \\cdot \\ln n / \\ln\\ln n$.\n\n  Following Apostol's somewhat didactic approach, we first show a generic bounding lemma for\n  $\\sigma_0$ that depends on some function \\<open>f\\<close> that we will specify later.\n\\<close>"], ["", "lemma divisor_count_bound_gen:\n  fixes f :: \"nat \\<Rightarrow> real\"\n  assumes \"eventually (\\<lambda>n. f n \\<ge> 2) at_top\"\n  defines \"c \\<equiv> (8 / ln 2 :: real)\"\n  defines \"g \\<equiv> (\\<lambda>n. (ln n + c * f n * ln (ln n)) / (ln (f n)))\"\n  shows \"eventually (\\<lambda>n. divisor_count n < 2 powr g n) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n", "include prime_counting_notation"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n", "have \"eventually (\\<lambda>n::nat. 1 + log 2 n \\<le> ln n ^ 2) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       1 + log 2 (real x) \\<le> (ln (real x))\\<^sup>2", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     1 + log 2 (real x) \\<le> (ln (real x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n", "thus \"eventually (\\<lambda>n. divisor_count n < 2 powr g n) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     1 + log 2 (real x) \\<le> (ln (real x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n", "using eventually_gt_at_top[of 2] assms(1)"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     1 + log 2 (real x) \\<le> (ln (real x))\\<^sup>2\n  eventually ((<) (2::?'a1)) at_top\n  \\<forall>\\<^sub>F n in sequentially. 2 \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "assume n: \"n > 2\" and \"f n \\<ge> 2\" and \"1 + log 2 n \\<le> ln n ^ 2\""], ["proof (state)\nthis:\n  2 < n\n  2 \\<le> f n\n  1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "define Pr where [simp]: \"Pr = prime_factors n\""], ["proof (state)\nthis:\n  Pr = prime_factors n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "define Pr1 where [simp]: \"Pr1 = {p\\<in>Pr. p < f n}\""], ["proof (state)\nthis:\n  Pr1 = {p \\<in> Pr. real p < f n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "define Pr2 where [simp]: \"Pr2 = {p\\<in>Pr. p \\<ge> f n}\""], ["proof (state)\nthis:\n  Pr2 = {p \\<in> Pr. f n \\<le> real p}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"exp 1 < real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp 1 < real n", "using e_less_272 \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  exp 1 < 272 / 100\n  2 < n\n\ngoal (1 subgoal):\n 1. exp 1 < real n", "by linarith"], ["proof (state)\nthis:\n  exp 1 < real n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "hence \"ln (exp 1) < ln (real n)\""], ["proof (prove)\nusing this:\n  exp 1 < real n\n\ngoal (1 subgoal):\n 1. ln (exp 1) < ln (real n)", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  exp 1 < real n\n  2 < n\n\ngoal (1 subgoal):\n 1. ln (exp 1) < ln (real n)", "by (subst ln_less_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (exp 1) < ln (real n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "hence \"ln (ln n) > ln (ln (exp 1))\""], ["proof (prove)\nusing this:\n  ln (exp 1) < ln (real n)\n\ngoal (1 subgoal):\n 1. ln (ln (exp 1)) < ln (ln (real n))", "by (subst ln_less_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (ln (exp 1)) < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "hence \"ln (ln n) > 0\""], ["proof (prove)\nusing this:\n  ln (ln (exp 1)) < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. 0 < ln (ln (real n))", "by simp"], ["proof (state)\nthis:\n  0 < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "define S2 where \"S2 = (\\<Sum>p\\<in>Pr2. multiplicity p n)\""], ["proof (state)\nthis:\n  S2 = (\\<Sum>p\\<in>Pr2. multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"f n ^ S2 = (\\<Prod>p\\<in>Pr2. f n ^ multiplicity p n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n ^ S2 = (\\<Prod>p\\<in>Pr2. f n ^ multiplicity p n)", "by (simp add: S2_def power_sum)"], ["proof (state)\nthis:\n  f n ^ S2 = (\\<Prod>p\\<in>Pr2. f n ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  f n ^ S2 = (\\<Prod>p\\<in>Pr2. f n ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> \\<le> (\\<Prod>p\\<in>Pr2. real p ^ multiplicity p n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. f n ^ multiplicity p n)\n    \\<le> (\\<Prod>p\\<in>Pr2. real p ^ multiplicity p n)", "using \\<open>f n \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  2 \\<le> f n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. f n ^ multiplicity p n)\n    \\<le> (\\<Prod>p\\<in>Pr2. real p ^ multiplicity p n)", "by (intro prod_mono conjI power_mono) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. f n ^ multiplicity p n)\n  \\<le> (\\<Prod>p\\<in>Pr2. real p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. f n ^ multiplicity p n)\n  \\<le> (\\<Prod>p\\<in>Pr2. real p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "from \\<open>n > 2\\<close>"], ["proof (chain)\npicking this:\n  2 < n", "have \"\\<dots> \\<le> (\\<Prod>p\\<in>Pr. real p ^ multiplicity p n)\""], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. real p ^ multiplicity p n)\n    \\<le> (\\<Prod>p\\<in>Pr. real p ^ multiplicity p n)", "by (intro prod_mono2 one_le_power) (auto simp: in_prime_factors_iff dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. real p ^ multiplicity p n)\n  \\<le> (\\<Prod>p\\<in>Pr. real p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. real p ^ multiplicity p n)\n  \\<le> (\\<Prod>p\\<in>Pr. real p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr. real p ^ multiplicity p n) = real n", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr. real p ^ multiplicity p n) = real n", "by (subst prime_factorization_nat[of n])  auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr. real p ^ multiplicity p n) = real n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "finally"], ["proof (chain)\npicking this:\n  f n ^ S2 \\<le> real n", "have \"f n ^ S2 \\<le> n\""], ["proof (prove)\nusing this:\n  f n ^ S2 \\<le> real n\n\ngoal (1 subgoal):\n 1. f n ^ S2 \\<le> real n", "."], ["proof (state)\nthis:\n  f n ^ S2 \\<le> real n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "hence \"ln (f n ^ S2) \\<le> ln n\""], ["proof (prove)\nusing this:\n  f n ^ S2 \\<le> real n\n\ngoal (1 subgoal):\n 1. ln (f n ^ S2) \\<le> ln (real n)", "using n \\<open>f n \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  f n ^ S2 \\<le> real n\n  2 < n\n  2 \\<le> f n\n\ngoal (1 subgoal):\n 1. ln (f n ^ S2) \\<le> ln (real n)", "by (subst ln_le_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (f n ^ S2) \\<le> ln (real n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "hence \"S2 \\<le> ln n / ln (f n)\""], ["proof (prove)\nusing this:\n  ln (f n ^ S2) \\<le> ln (real n)\n\ngoal (1 subgoal):\n 1. real S2 \\<le> ln (real n) / ln (f n)", "using \\<open>f n \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  ln (f n ^ S2) \\<le> ln (real n)\n  2 \\<le> f n\n\ngoal (1 subgoal):\n 1. real S2 \\<le> ln (real n) / ln (f n)", "by (simp add: field_simps ln_realpow)"], ["proof (state)\nthis:\n  real S2 \\<le> ln (real n) / ln (f n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have le_twopow: \"Suc a \\<le> 2 ^ a\" for a :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc a \\<le> 2 ^ a", "by (induction a) auto"], ["proof (state)\nthis:\n  Suc ?a \\<le> 2 ^ ?a\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"(\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)) \\<le> (\\<Prod>p\\<in>Pr2. 2 ^ multiplicity p n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n))\n    \\<le> (\\<Prod>p\\<in>Pr2. 2 ^ multiplicity p n)", "by (intro prod_mono conjI le_twopow) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n))\n  \\<le> (\\<Prod>p\\<in>Pr2. 2 ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n))\n  \\<le> (\\<Prod>p\\<in>Pr2. 2 ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> = 2 ^ S2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. 2 ^ multiplicity p n) = 2 ^ S2", "by (simp add: S2_def power_sum)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. 2 ^ multiplicity p n) = 2 ^ S2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. 2 ^ multiplicity p n) = 2 ^ S2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> = 2 powr real S2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (2 ^ S2) = 2 powr real S2", "by (subst powr_realpow) auto"], ["proof (state)\nthis:\n  real (2 ^ S2) = 2 powr real S2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  real (2 ^ S2) = 2 powr real S2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> \\<le> 2 powr (ln n / ln (f n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr real S2 \\<le> 2 powr (ln (real n) / ln (f n))", "by (intro powr_mono \\<open>S2 \\<le> ln n / ln (f n)\\<close>) auto"], ["proof (state)\nthis:\n  2 powr real S2 \\<le> 2 powr (ln (real n) / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  real (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n))\n  \\<le> 2 powr (ln (real n) / ln (f n))", "have bound2: \"real (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)) \\<le> 2 powr (ln n / ln (f n))\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  real (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n))\n  \\<le> 2 powr (ln (real n) / ln (f n))\n\ngoal (1 subgoal):\n 1. real (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n))\n    \\<le> 2 powr (ln (real n) / ln (f n))", "by simp"], ["proof (state)\nthis:\n  real (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n))\n  \\<le> 2 powr (ln (real n) / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have multiplicity_le: \"multiplicity p n \\<le> log 2 n\" if p: \"p \\<in> Pr\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "from p"], ["proof (chain)\npicking this:\n  p \\<in> Pr", "have \"2 ^ multiplicity p n \\<le> p ^ multiplicity p n\""], ["proof (prove)\nusing this:\n  p \\<in> Pr\n\ngoal (1 subgoal):\n 1. 2 ^ multiplicity p n \\<le> p ^ multiplicity p n", "by (intro power_mono) (auto simp: in_prime_factors_iff dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  2 ^ multiplicity p n \\<le> p ^ multiplicity p n\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "also"], ["proof (state)\nthis:\n  2 ^ multiplicity p n \\<le> p ^ multiplicity p n\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "have \"\\<dots> = (\\<Prod>p\\<in>{p}. p ^ multiplicity p n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ multiplicity p n = (\\<Prod>p\\<in>{p}. p ^ multiplicity p n)", "by simp"], ["proof (state)\nthis:\n  p ^ multiplicity p n = (\\<Prod>p\\<in>{p}. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "also"], ["proof (state)\nthis:\n  p ^ multiplicity p n = (\\<Prod>p\\<in>{p}. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "from p"], ["proof (chain)\npicking this:\n  p \\<in> Pr", "have \"(\\<Prod>p\\<in>{p}. p ^ multiplicity p n) \\<le> (\\<Prod>p\\<in>Pr. p ^ multiplicity p n)\""], ["proof (prove)\nusing this:\n  p \\<in> Pr\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p}. p ^ multiplicity p n)\n    \\<le> (\\<Prod>p\\<in>Pr. p ^ multiplicity p n)", "by (intro dvd_imp_le prod_dvd_prod_subset)\n           (auto simp: in_prime_factors_iff dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p}. p ^ multiplicity p n)\n  \\<le> (\\<Prod>p\\<in>Pr. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p}. p ^ multiplicity p n)\n  \\<le> (\\<Prod>p\\<in>Pr. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "have \"\\<dots> = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr. p ^ multiplicity p n) = n", "using n"], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr. p ^ multiplicity p n) = n", "by (subst prime_factorization_nat[of n]) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr. p ^ multiplicity p n) = n\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "finally"], ["proof (chain)\npicking this:\n  2 ^ multiplicity p n \\<le> n", "have \"2 ^ multiplicity p n \\<le> n\""], ["proof (prove)\nusing this:\n  2 ^ multiplicity p n \\<le> n\n\ngoal (1 subgoal):\n 1. 2 ^ multiplicity p n \\<le> n", "."], ["proof (state)\nthis:\n  2 ^ multiplicity p n \\<le> n\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "hence \"log 2 (2 ^ multiplicity p n) \\<le> log 2 n\""], ["proof (prove)\nusing this:\n  2 ^ multiplicity p n \\<le> n\n\ngoal (1 subgoal):\n 1. log 2 (2 ^ multiplicity p n) \\<le> log 2 (real n)", "using n"], ["proof (prove)\nusing this:\n  2 ^ multiplicity p n \\<le> n\n  2 < n\n\ngoal (1 subgoal):\n 1. log 2 (2 ^ multiplicity p n) \\<le> log 2 (real n)", "by (subst log_le_cancel_iff) auto"], ["proof (state)\nthis:\n  log 2 (2 ^ multiplicity p n) \\<le> log 2 (real n)\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "thus \"multiplicity p n \\<le> log 2 n\""], ["proof (prove)\nusing this:\n  log 2 (2 ^ multiplicity p n) \\<le> log 2 (real n)\n\ngoal (1 subgoal):\n 1. real (multiplicity p n) \\<le> log 2 (real n)", "by (subst (asm) log_nat_power) auto"], ["proof (state)\nthis:\n  real (multiplicity p n) \\<le> log 2 (real n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?p \\<in> Pr \\<Longrightarrow>\n  real (multiplicity ?p n) \\<le> log 2 (real n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"(\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) = exp (\\<Sum>p\\<in>Pr1. ln (multiplicity p n + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) =\n    exp (\\<Sum>p\\<in>Pr1. ln (real (multiplicity p n + 1)))", "by (simp add: exp_sum)"], ["proof (state)\nthis:\n  real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) =\n  exp (\\<Sum>p\\<in>Pr1. ln (real (multiplicity p n + 1)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) =\n  exp (\\<Sum>p\\<in>Pr1. ln (real (multiplicity p n + 1)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"(\\<Sum>p\\<in>Pr1. ln (multiplicity p n + 1)) \\<le> (\\<Sum>p\\<in>Pr1. 2 * ln (ln n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>Pr1. ln (real (multiplicity p n + 1)))\n    \\<le> (\\<Sum>p\\<in>Pr1. 2 * ln (ln (real n)))", "proof (intro sum_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> Pr1 \\<Longrightarrow>\n       ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> Pr1 \\<Longrightarrow>\n       ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "assume p: \"p \\<in> Pr1\""], ["proof (state)\nthis:\n  p \\<in> Pr1\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> Pr1 \\<Longrightarrow>\n       ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "have \"ln (multiplicity p n + 1) \\<le> ln (1 + log 2 n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (multiplicity p n + 1)) \\<le> ln (1 + log 2 (real n))", "using p multiplicity_le[of p]"], ["proof (prove)\nusing this:\n  p \\<in> Pr1\n  p \\<in> Pr \\<Longrightarrow> real (multiplicity p n) \\<le> log 2 (real n)\n\ngoal (1 subgoal):\n 1. ln (real (multiplicity p n + 1)) \\<le> ln (1 + log 2 (real n))", "by (subst ln_le_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (real (multiplicity p n + 1)) \\<le> ln (1 + log 2 (real n))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> Pr1 \\<Longrightarrow>\n       ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "also"], ["proof (state)\nthis:\n  ln (real (multiplicity p n + 1)) \\<le> ln (1 + log 2 (real n))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> Pr1 \\<Longrightarrow>\n       ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "have \"\\<dots> \\<le> ln (ln n ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (1 + log 2 (real n)) \\<le> ln ((ln (real n))\\<^sup>2)", "using \\<open>n > 2\\<close> \\<open>1 + log 2 n \\<le> ln n ^ 2\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n  1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2\n\ngoal (1 subgoal):\n 1. ln (1 + log 2 (real n)) \\<le> ln ((ln (real n))\\<^sup>2)", "by (subst ln_le_cancel_iff) (auto intro: add_pos_nonneg)"], ["proof (state)\nthis:\n  ln (1 + log 2 (real n)) \\<le> ln ((ln (real n))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> Pr1 \\<Longrightarrow>\n       ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "also"], ["proof (state)\nthis:\n  ln (1 + log 2 (real n)) \\<le> ln ((ln (real n))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> Pr1 \\<Longrightarrow>\n       ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "have \"\\<dots> = 2 * ln (ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln ((ln (real n))\\<^sup>2) = 2 * ln (ln (real n))", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. ln ((ln (real n))\\<^sup>2) = 2 * ln (ln (real n))", "by (simp add: ln_realpow)"], ["proof (state)\nthis:\n  ln ((ln (real n))\\<^sup>2) = 2 * ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> Pr1 \\<Longrightarrow>\n       ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "finally"], ["proof (chain)\npicking this:\n  ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "show \"ln (multiplicity p n + 1) \\<le> 2 * ln (ln n)\""], ["proof (prove)\nusing this:\n  ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))\n\ngoal (1 subgoal):\n 1. ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))", "."], ["proof (state)\nthis:\n  ln (real (multiplicity p n + 1)) \\<le> 2 * ln (ln (real n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>Pr1. ln (real (multiplicity p n + 1)))\n  \\<le> (\\<Sum>p\\<in>Pr1. 2 * ln (ln (real n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>Pr1. ln (real (multiplicity p n + 1)))\n  \\<le> (\\<Sum>p\\<in>Pr1. 2 * ln (ln (real n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> = 2 * ln (ln n) * card Pr1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>Pr1. 2 * ln (ln (real n))) =\n    2 * ln (ln (real n)) * real (card Pr1)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>Pr1. 2 * ln (ln (real n))) =\n  2 * ln (ln (real n)) * real (card Pr1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>Pr1. 2 * ln (ln (real n))) =\n  2 * ln (ln (real n)) * real (card Pr1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"finite {p. prime p \\<and> real p \\<le> f n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {p. prime p \\<and> real p \\<le> f n}", "by (rule finite_subset[of _ \"{..nat \\<lfloor>f n\\<rfloor>}\"]) (auto simp: le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  finite {p. prime p \\<and> real p \\<le> f n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "hence \"card Pr1 \\<le> card {p. prime p \\<and> real p \\<le> f n}\""], ["proof (prove)\nusing this:\n  finite {p. prime p \\<and> real p \\<le> f n}\n\ngoal (1 subgoal):\n 1. card Pr1 \\<le> card {p. prime p \\<and> real p \\<le> f n}", "by (intro card_mono) auto"], ["proof (state)\nthis:\n  card Pr1 \\<le> card {p. prime p \\<and> real p \\<le> f n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  card Pr1 \\<le> card {p. prime p \\<and> real p \\<le> f n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"real \\<dots> = \\<pi> (f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card {p. prime p \\<and> real p \\<le> f n}) = \\<pi> (f n)", "by (simp add: primes_pi_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  real (card {p. prime p \\<and> real p \\<le> f n}) = \\<pi> (f n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  real (card {p. prime p \\<and> real p \\<le> f n}) = \\<pi> (f n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> < 4 * (f n / ln (f n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (f n) < 4 * (f n / ln (f n))", "using \\<open>f n \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  2 \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<pi> (f n) < 4 * (f n / ln (f n))", "by (intro \\<pi>_upper_bound'') auto"], ["proof (state)\nthis:\n  \\<pi> (f n) < 4 * (f n / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  \\<pi> (f n) < 4 * (f n / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"exp (2 * ln (ln (real n)) * (4 * (f n / ln (f n)))) =\n                 2 powr (c * f n * ln (ln n) / ln (f n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (2 * ln (ln (real n)) * (4 * (f n / ln (f n)))) =\n    2 powr (c * f n * ln (ln (real n)) / ln (f n))", "by (simp add: powr_def c_def)"], ["proof (state)\nthis:\n  exp (2 * ln (ln (real n)) * (4 * (f n / ln (f n)))) =\n  2 powr (c * f n * ln (ln (real n)) / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> exp x \\<le> exp y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      exp (2 * ln (ln (real n)) * real x)\n      \\<le> exp (2 * ln (ln (real n)) * real y);\n   \\<And>x y.\n      x < y \\<Longrightarrow>\n      exp (2 * ln (ln (real n)) * x)\n      < exp (2 * ln (ln (real n)) * y)\\<rbrakk>\n  \\<Longrightarrow> real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n))\n                    < 2 powr (c * f n * ln (ln (real n)) / ln (f n))", "have bound1: \"(\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) <\n                             2 powr (c * f n * ln (ln (real n)) / ln (f n))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> exp x \\<le> exp y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      exp (2 * ln (ln (real n)) * real x)\n      \\<le> exp (2 * ln (ln (real n)) * real y);\n   \\<And>x y.\n      x < y \\<Longrightarrow>\n      exp (2 * ln (ln (real n)) * x)\n      < exp (2 * ln (ln (real n)) * y)\\<rbrakk>\n  \\<Longrightarrow> real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n))\n                    < 2 powr (c * f n * ln (ln (real n)) / ln (f n))\n\ngoal (1 subgoal):\n 1. real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n))\n    < 2 powr (c * f n * ln (ln (real n)) / ln (f n))", "using \\<open>ln (ln n) > 0\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> exp x \\<le> exp y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      exp (2 * ln (ln (real n)) * real x)\n      \\<le> exp (2 * ln (ln (real n)) * real y);\n   \\<And>x y.\n      x < y \\<Longrightarrow>\n      exp (2 * ln (ln (real n)) * x)\n      < exp (2 * ln (ln (real n)) * y)\\<rbrakk>\n  \\<Longrightarrow> real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n))\n                    < 2 powr (c * f n * ln (ln (real n)) / ln (f n))\n  0 < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n))\n    < 2 powr (c * f n * ln (ln (real n)) / ln (f n))", "by (simp add: mult_strict_left_mono)"], ["proof (state)\nthis:\n  real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n))\n  < 2 powr (c * f n * ln (ln (real n)) / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"divisor_count n = (\\<Prod>p\\<in>Pr. Suc (multiplicity p n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count n = (\\<Prod>p\\<in>Pr. Suc (multiplicity p n))", "using n"], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. divisor_count n = (\\<Prod>p\\<in>Pr. Suc (multiplicity p n))", "by (subst divisor_count.prod_prime_factors') auto"], ["proof (state)\nthis:\n  divisor_count n = (\\<Prod>p\\<in>Pr. Suc (multiplicity p n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  divisor_count n = (\\<Prod>p\\<in>Pr. Suc (multiplicity p n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"Pr = Pr1 \\<union> Pr2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pr = Pr1 \\<union> Pr2", "by auto"], ["proof (state)\nthis:\n  Pr = Pr1 \\<union> Pr2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  Pr = Pr1 \\<union> Pr2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"real (\\<Prod>p\\<in>\\<dots>. Suc (multiplicity p n)) =\n                 real ((\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) * (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (\\<Prod>p\\<in>Pr1 \\<union> Pr2. Suc (multiplicity p n)) =\n    real\n     ((\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) *\n      (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)))", "by (subst prod.union_disjoint) auto"], ["proof (state)\nthis:\n  real (\\<Prod>p\\<in>Pr1 \\<union> Pr2. Suc (multiplicity p n)) =\n  real\n   ((\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) *\n    (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  real (\\<Prod>p\\<in>Pr1 \\<union> Pr2. Suc (multiplicity p n)) =\n  real\n   ((\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) *\n    (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> < 2 powr (c * f n * ln (ln (real n)) / ln (f n)) * 2 powr (ln n / ln (f n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     ((\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) *\n      (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)))\n    < 2 powr (c * f n * ln (ln (real n)) / ln (f n)) *\n      2 powr (ln (real n) / ln (f n))", "unfolding of_nat_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) *\n    real (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n))\n    < 2 powr (c * f n * ln (ln (real n)) / ln (f n)) *\n      2 powr (ln (real n) / ln (f n))", "by (intro mult_less_le_imp_less bound1 bound2) (auto intro!: prod_nonneg prod_pos)"], ["proof (state)\nthis:\n  real\n   ((\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) *\n    (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)))\n  < 2 powr (c * f n * ln (ln (real n)) / ln (f n)) *\n    2 powr (ln (real n) / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "also"], ["proof (state)\nthis:\n  real\n   ((\\<Prod>p\\<in>Pr1. Suc (multiplicity p n)) *\n    (\\<Prod>p\\<in>Pr2. Suc (multiplicity p n)))\n  < 2 powr (c * f n * ln (ln (real n)) / ln (f n)) *\n    2 powr (ln (real n) / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "have \"\\<dots> = 2 powr g n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr (c * f n * ln (ln (real n)) / ln (f n)) *\n    2 powr (ln (real n) / ln (f n)) =\n    2 powr g n", "by (simp add: g_def add_divide_distrib powr_add)"], ["proof (state)\nthis:\n  2 powr (c * f n * ln (ln (real n)) / ln (f n)) *\n  2 powr (ln (real n) / ln (f n)) =\n  2 powr g n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2; 2 < n;\n        2 \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> real (divisor_count n) < 2 powr g n", "finally"], ["proof (chain)\npicking this:\n  real (divisor_count n) < 2 powr g n", "show \"real (divisor_count n) < 2 powr g n\""], ["proof (prove)\nusing this:\n  real (divisor_count n) < 2 powr g n\n\ngoal (1 subgoal):\n 1. real (divisor_count n) < 2 powr g n", "."], ["proof (state)\nthis:\n  real (divisor_count n) < 2 powr g n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Now, Apostol explains that one can choose $f(n) := \\ln n / (\\ln\\ln n) ^ 2$ to obtain\n  the desired bound.\n\\<close>"], ["", "proposition divisor_count_upper_bound:\n  fixes \\<epsilon> :: real\n  assumes \"\\<epsilon> > 0\"\n  shows   \"eventually (\\<lambda>n. divisor_count n < 2 powr ((1 + \\<epsilon>) * ln n / ln (ln n))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "define c :: real where \"c = 8 / ln 2\""], ["proof (state)\nthis:\n  c = 8 / ln 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "define f :: \"nat \\<Rightarrow> real\" where \"f = (\\<lambda>n. ln n / (ln (ln n)) ^ 2)\""], ["proof (state)\nthis:\n  f = (\\<lambda>x. ln (real x) / (ln (ln (real x)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "define g where \"g = (\\<lambda>n. (ln n + c * f n * ln (ln n)) / (ln (f n)))\""], ["proof (state)\nthis:\n  g = (\\<lambda>n. (ln (real n) + c * f n * ln (ln (real n))) / ln (f n))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "have \"eventually (\\<lambda>n. divisor_count n < 2 powr g n) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n", "unfolding g_def c_def f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr\n         ((ln (real n) +\n           8 / ln 2 * (ln (real n) / (ln (ln (real n)))\\<^sup>2) *\n           ln (ln (real n))) /\n          ln (ln (real n) / (ln (ln (real n)))\\<^sup>2))", "by (rule divisor_count_bound_gen) real_asymp+"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "have \"eventually (\\<lambda>n. 2 powr g n < 2 powr ((1 + \\<epsilon>) * ln n / ln (ln n))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       2 powr g n\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "using \\<open>\\<epsilon> > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       2 powr g n\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "unfolding g_def c_def f_def"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       2 powr\n       ((ln (real n) +\n         8 / ln 2 * (ln (real n) / (ln (ln (real n)))\\<^sup>2) *\n         ln (ln (real n))) /\n        ln (ln (real n) / (ln (ln (real n)))\\<^sup>2))\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     2 powr g n < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n\n  \\<forall>\\<^sub>F n in sequentially.\n     2 powr g n < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "show \"eventually (\\<lambda>n. divisor_count n < 2 powr ((1 + \\<epsilon>) * ln n / ln (ln n))) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. real (divisor_count n) < 2 powr g n\n  \\<forall>\\<^sub>F n in sequentially.\n     2 powr g n < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real (divisor_count n)\n       < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))", "by eventually_elim (rule less_trans)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     real (divisor_count n)\n     < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Next, we will examine the `worst case'. Since any prime factor of \\<open>n\\<close> with multiplicity\n  \\<open>k\\<close> contributes a factor of $k + 1$, it is intuitively clear that $\\sigma_0(n)$ is\n  largest w.\\,r.\\,t.\\ \\<open>n\\<close> if it is a product of small distinct primes.\n\n  We show that indeed, if $n := x\\#$ (where $x\\#$ denotes the primorial), we have\n  $\\sigma_0(n) = 2^{\\pi(x)}$, which, by the Prime Number Theorem, indeed\n  exceeds $c \\ln n / \\ln\\ln n$.\n\\<close>"], ["", "theorem (in prime_number_theorem) divisor_count_primorial_gt:\n  assumes \"\\<epsilon> > 0\"\n  defines \"h \\<equiv> primorial\"\n  shows \"eventually (\\<lambda>x. divisor_count (h x) > 2 powr ((1 - \\<epsilon>) * ln (h x) / ln (ln (h x)))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "have \"(\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / ln (ln (h x))) \\<sim>[at_top] (\\<lambda>x. (1 - \\<epsilon>) * \\<theta> x / ln (\\<theta> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) /\n        ln (ln (real\n                 (h x)))) \\<sim>[at_top] (\\<lambda>x.\n       (1 - \\<epsilon>) * \\<theta> x / ln (\\<theta> x))", "by (simp add: h_def ln_primorial)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>x.\n     (1 - \\<epsilon>) * \\<theta> x / ln (\\<theta> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>x.\n     (1 - \\<epsilon>) * \\<theta> x / ln (\\<theta> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. (1 - \\<epsilon>) * x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * \\<theta> x /\n        ln (\\<theta>\n             x)) \\<sim>[at_top] (\\<lambda>x. (1 - \\<epsilon>) * x / ln x)", "by (intro asymp_equiv_intros \\<theta>_asymptotics ln_\\<theta>_asymp_equiv)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * \\<theta> x /\n      ln (\\<theta>\n           x)) \\<sim>[at_top] (\\<lambda>x. (1 - \\<epsilon>) * x / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>a.\n     (1 - \\<epsilon>) * a / ln a)", "have *: \"(\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / ln (ln (h x))) \\<sim>[at_top] (\\<lambda>x. (1 - \\<epsilon>) * x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>a.\n     (1 - \\<epsilon>) * a / ln a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) /\n        ln (ln (real\n                 (h x)))) \\<sim>[at_top] (\\<lambda>x.\n       (1 - \\<epsilon>) * x / ln x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>x.\n     (1 - \\<epsilon>) * x / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "have \"(\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / (ln (ln (h x))) - (1 - \\<epsilon>) * x / ln x) \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n        (1 - \\<epsilon>) * x / ln x)\n    \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)", "using asymp_equiv_imp_diff_smallo[OF *]"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n      (1 - \\<epsilon>) * x / ln x)\n  \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n        (1 - \\<epsilon>) * x / ln x)\n    \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n      (1 - \\<epsilon>) * x / ln x)\n  \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n      (1 - \\<epsilon>) * x / ln x)\n  \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "have \"?this \\<longleftrightarrow> (\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / (ln (ln (h x))) - x / ln x + \\<epsilon> * x / ln x)\n                \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n         (1 - \\<epsilon>) * x / ln x)\n     \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)) =\n    ((\\<lambda>x.\n         (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n         x / ln x +\n         \\<epsilon> * x / ln x)\n     \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x))", "by (intro landau_o.small.in_cong eventually_mono[OF eventually_gt_at_top[of 1]])\n       (auto simp: field_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n       (1 - \\<epsilon>) * x / ln x)\n   \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)) =\n  ((\\<lambda>x.\n       (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n       x / ln x +\n       \\<epsilon> * x / ln x)\n   \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n       (1 - \\<epsilon>) * x / ln x)\n   \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x)) =\n  ((\\<lambda>x.\n       (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n       x / ln x +\n       \\<epsilon> * x / ln x)\n   \\<in> o(\\<lambda>x. (1 - \\<epsilon>) * x / ln x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "have \"(\\<lambda>x. (1 - \\<epsilon>) * x / ln x) \\<in> O(\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 - \\<epsilon>) * x / ln x) \\<in> O(\\<lambda>x. x / ln x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 - \\<epsilon>) * x / ln x) \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - x / ln x +\n      \\<epsilon> * x / ln x)\n  \\<in> o(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / (ln (ln (h x))) - x / ln x + \\<epsilon> * x / ln x)\n                   \\<in> o(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - x / ln x +\n      \\<epsilon> * x / ln x)\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n        x / ln x +\n        \\<epsilon> * x / ln x)\n    \\<in> o(\\<lambda>x. x / ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - x / ln x +\n      \\<epsilon> * x / ln x)\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "hence \"(\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / (ln (ln (h x))) - x / ln x + \\<epsilon> * x / ln x - (\\<pi> x - x / ln x))\n           \\<in> o(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - x / ln x +\n      \\<epsilon> * x / ln x)\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n        x / ln x +\n        \\<epsilon> * x / ln x -\n        (\\<pi> x - x / ln x))\n    \\<in> o(\\<lambda>x. x / ln x)", "by (intro sum_in_smallo[OF _ asymp_equiv_imp_diff_smallo] prime_number_theorem)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - x / ln x +\n      \\<epsilon> * x / ln x -\n      (\\<pi> x - x / ln x))\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "hence \"(\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / (ln (ln (h x))) - \\<pi> x + \\<epsilon> * (x / ln x)) \\<in> o(\\<lambda>x. \\<epsilon> * (x / ln x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - x / ln x +\n      \\<epsilon> * x / ln x -\n      (\\<pi> x - x / ln x))\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n        \\<pi> x +\n        \\<epsilon> * (x / ln x))\n    \\<in> o(\\<lambda>x. \\<epsilon> * (x / ln x))", "using \\<open>\\<epsilon> > 0\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - x / ln x +\n      \\<epsilon> * x / ln x -\n      (\\<pi> x - x / ln x))\n  \\<in> o(\\<lambda>x. x / ln x)\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n        \\<pi> x +\n        \\<epsilon> * (x / ln x))\n    \\<in> o(\\<lambda>x. \\<epsilon> * (x / ln x))", "by (subst landau_o.small.cmult) (simp_all add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - \\<pi> x +\n      \\<epsilon> * (x / ln x))\n  \\<in> o(\\<lambda>x. \\<epsilon> * (x / ln x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "hence \"(\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / (ln (ln (h x))) - \\<pi> x) \\<sim>[at_top] (\\<lambda>x. -\\<epsilon> * (x / ln x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - \\<pi> x +\n      \\<epsilon> * (x / ln x))\n  \\<in> o(\\<lambda>x. \\<epsilon> * (x / ln x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n        \\<pi> x) \\<sim>[at_top] (\\<lambda>x. - \\<epsilon> * (x / ln x))", "by (intro smallo_imp_asymp_equiv) auto"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n      \\<pi> x) \\<sim>[at_top] (\\<lambda>x. - \\<epsilon> * (x / ln x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "hence \"eventually (\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / (ln (ln (h x))) - \\<pi> x < 0 \\<longleftrightarrow>\n                         -\\<epsilon> * (x / ln x) < 0) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) -\n      \\<pi> x) \\<sim>[at_top] (\\<lambda>x. - \\<epsilon> * (x / ln x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - \\<pi> x\n        < 0) =\n       (- \\<epsilon> * (x / ln x) < 0)", "by (rule asymp_equiv_eventually_neg_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - \\<pi> x\n      < 0) =\n     (- \\<epsilon> * (x / ln x) < 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - \\<pi> x\n      < 0) =\n     (- \\<epsilon> * (x / ln x) < 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "have \"eventually (\\<lambda>x. -\\<epsilon> * (x / ln x) < 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. - \\<epsilon> * (x / ln x) < 0", "using \\<open>\\<epsilon> > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. - \\<epsilon> * (x / ln x) < 0", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. - \\<epsilon> * (x / ln x) < 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - \\<pi> x\n      < 0) =\n     (- \\<epsilon> * (x / ln x) < 0)\n  \\<forall>\\<^sub>F x in at_top. - \\<epsilon> * (x / ln x) < 0", "have \"eventually (\\<lambda>x. (1 - \\<epsilon>) * ln (h x) / ln (ln (h x)) < \\<pi> x) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) - \\<pi> x\n      < 0) =\n     (- \\<epsilon> * (x / ln x) < 0)\n  \\<forall>\\<^sub>F x in at_top. - \\<epsilon> * (x / ln x) < 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) < \\<pi> x", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) < \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "thus \"eventually (\\<lambda>x. divisor_count (h x) > 2 powr ((1 - \\<epsilon>) * ln (h x) / ln (ln (h x)))) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) < \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x)))\n       < \\<pi> x \\<Longrightarrow>\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "case (elim x)"], ["proof (state)\nthis:\n  (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) < \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x)))\n       < \\<pi> x \\<Longrightarrow>\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "hence \"2 powr ((1 - \\<epsilon>) * ln (h x) / ln (ln (h x))) < 2 powr \\<pi> x\""], ["proof (prove)\nusing this:\n  (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))) < \\<pi> x\n\ngoal (1 subgoal):\n 1. 2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n    < 2 powr \\<pi> x", "by (intro powr_less_mono) auto"], ["proof (state)\nthis:\n  2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n  < 2 powr \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x)))\n       < \\<pi> x \\<Longrightarrow>\n       2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n       < real (divisor_count (h x))", "thus ?case"], ["proof (prove)\nusing this:\n  2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n  < 2 powr \\<pi> x\n\ngoal (1 subgoal):\n 1. 2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n    < real (divisor_count (h x))", "by (simp add: divisor_count_primorial h_def)"], ["proof (state)\nthis:\n  2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n  < real (divisor_count (h x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real (h x)) / ln (ln (real (h x))))\n     < real (divisor_count (h x))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Since $h(x)\\longrightarrow\\infty$, this gives us our infinitely many values of \\<open>n\\<close>\n  that exceed the bound.\n\\<close>"], ["", "corollary (in prime_number_theorem) divisor_count_lower_bound:\n  assumes \"\\<epsilon> > 0\"\n  shows   \"frequently (\\<lambda>n. divisor_count n > 2 powr ((1 - \\<epsilon>) * ln n / ln (ln n))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "define h where \"h = primorial\""], ["proof (state)\nthis:\n  h = primorial\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "have \"eventually (\\<lambda>n. divisor_count n > 2 powr ((1 - \\<epsilon>) * ln n / ln (ln n)))\n          (filtermap h at_top)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in filtermap h at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "using divisor_count_primorial_gt[OF assms]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     2 powr\n     ((1 - \\<epsilon>) * ln (real (primorial x)) /\n      ln (ln (real (primorial x))))\n     < real (divisor_count (primorial x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in filtermap h at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "by (simp add: eventually_filtermap h_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in filtermap h at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "hence \"frequently (\\<lambda>n. divisor_count n > 2 powr ((1 - \\<epsilon>) * ln n / ln (ln n)))\n           (filtermap h at_top)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in filtermap h at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in filtermap h at_top.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "by (intro eventually_frequently) (auto simp: filtermap_bot_iff)"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "moreover"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "from this and primorial_at_top"], ["proof (chain)\npicking this:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n  filterlim primorial sequentially at_top", "have \"filtermap h at_top \\<le> at_top\""], ["proof (prove)\nusing this:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n  filterlim primorial sequentially at_top\n\ngoal (1 subgoal):\n 1. filtermap h at_top \\<le> sequentially", "by (simp add: filterlim_def h_def)"], ["proof (state)\nthis:\n  filtermap h at_top \\<le> sequentially\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n  filtermap h at_top \\<le> sequentially", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n  filtermap h at_top \\<le> sequentially\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n       < real (divisor_count n)", "by (rule frequently_mono_filter)"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>F n in sequentially.\n     2 powr ((1 - \\<epsilon>) * ln (real n) / ln (ln (real n)))\n     < real (divisor_count n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  A different formulation that is not quite as tedious to prove is this one:\n\\<close>"], ["", "lemma (in prime_number_theorem) ln_divisor_count_primorial'_asymp_equiv:\n  \"(\\<lambda>k. ln (divisor_count (primorial' k))) \\<sim>[at_top]\n     (\\<lambda>k. ln 2 * ln (primorial' k) / ln (ln (primorial' k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (divisor_count\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>k.\n          ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (divisor_count\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>k.\n          ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "have \"(\\<lambda>k. ln 2 * (ln (primorial' k) / ln (ln (primorial' k)))) \\<sim>[at_top] (\\<lambda>k. ln 2 * k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln 2 *\n        (ln (real (primorial' k)) /\n         ln (ln (real\n                  (primorial'\n                    k))))) \\<sim>[sequentially] (\\<lambda>x. ln 2 * real x)", "by (intro asymp_equiv_intros ln_over_ln_ln_primorial'_asymp_equiv)"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln 2 *\n      (ln (real (primorial' k)) /\n       ln (ln (real\n                (primorial'\n                  k))))) \\<sim>[sequentially] (\\<lambda>x. ln 2 * real x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (divisor_count\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>k.\n          ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "also"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln 2 *\n      (ln (real (primorial' k)) /\n       ln (ln (real\n                (primorial'\n                  k))))) \\<sim>[sequentially] (\\<lambda>x. ln 2 * real x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (divisor_count\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>k.\n          ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>k. ln (divisor_count (primorial' k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln 2 *\n        real\n         x) \\<sim>[sequentially] (\\<lambda>k.\n                                     ln\n(real (divisor_count (primorial' k))))", "by (simp add: ln_realpow mult_ac)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      ln 2 *\n      real\n       x) \\<sim>[sequentially] (\\<lambda>k.\n                                   ln (real (divisor_count (primorial' k))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (divisor_count\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>k.\n          ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>k.\n      ln 2 *\n      (ln (real (primorial' k)) /\n       ln (ln (real\n                (primorial'\n                  k))))) \\<sim>[sequentially] (\\<lambda>a.\n            ln (real (divisor_count (primorial' a))))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>k.\n      ln 2 *\n      (ln (real (primorial' k)) /\n       ln (ln (real\n                (primorial'\n                  k))))) \\<sim>[sequentially] (\\<lambda>a.\n            ln (real (divisor_count (primorial' a))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real\n             (divisor_count\n               (primorial'\n                 k)))) \\<sim>[sequentially] (\\<lambda>k.\n          ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k))))", "by (simp add: asymp_equiv_sym mult_ac)"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real\n           (divisor_count\n             (primorial'\n               k)))) \\<sim>[sequentially] (\\<lambda>k.\n        ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  It follows that the maximal order of the divisor function is $\\ln 2 \\cdot \\ln n /\\ln \\ln n$.\n\\<close>"], ["", "theorem (in prime_number_theorem) limsup_divisor_count:\n  \"limsup (\\<lambda>n. ln (divisor_count n) * ln (ln n) / ln n) = ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))) =\n    ereal (ln 2)", "proof (intro antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "let ?h = \"primorial'\""], ["proof (state)\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "have \"2 ^ k = (1 :: real) \\<longleftrightarrow> k = 0\" for k :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ k = 1) = (k = 0)", "using power_eq_1_iff[of \"2::real\" k]"], ["proof (prove)\nusing this:\n  2 ^ k = 1 \\<Longrightarrow> norm 2 = 1 \\<or> k = 0\n\ngoal (1 subgoal):\n 1. (2 ^ k = 1) = (k = 0)", "by auto"], ["proof (state)\nthis:\n  (2 ^ ?k = 1) = (?k = 0)\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "hence \"(\\<lambda>k. ln (divisor_count (?h k)) / (ln 2 * ln (?h k) / ln (ln (?h k)))) \\<longlonglongrightarrow> 1\""], ["proof (prove)\nusing this:\n  (2 ^ ?k = 1) = (?k = 0)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (divisor_count (primorial' k))) /\n        (ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> 1", "using ln_divisor_count_primorial'_asymp_equiv"], ["proof (prove)\nusing this:\n  (2 ^ ?k = 1) = (?k = 0)\n  (\\<lambda>k.\n      ln (real\n           (divisor_count\n             (primorial'\n               k)))) \\<sim>[sequentially] (\\<lambda>k.\n        ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (divisor_count (primorial' k))) /\n        (ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> 1", "by (intro asymp_equivD_strong eventually_mono[OF eventually_gt_at_top[of 1]])\n       (auto simp: power_eq_1_iff)"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real (divisor_count (primorial' k))) /\n      (ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> 1\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "hence \"(\\<lambda>k. ln (divisor_count (?h k)) / (ln 2 * ln (?h k) / ln (ln (?h k))) * ln 2) \\<longlonglongrightarrow> 1 * ln 2\""], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      ln (real (divisor_count (primorial' k))) /\n      (ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (divisor_count (primorial' k))) /\n        (ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k)))) *\n        ln 2)\n    \\<longlonglongrightarrow> 1 * ln 2", "by (rule tendsto_mult) auto"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real (divisor_count (primorial' k))) /\n      (ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k)))) *\n      ln 2)\n  \\<longlonglongrightarrow> 1 * ln 2\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "hence \"(\\<lambda>k. ln (divisor_count (?h k)) / (ln (?h k) / ln (ln (?h k)))) \\<longlonglongrightarrow> ln 2\""], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      ln (real (divisor_count (primorial' k))) /\n      (ln 2 * ln (real (primorial' k)) / ln (ln (real (primorial' k)))) *\n      ln 2)\n  \\<longlonglongrightarrow> 1 * ln 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        ln (real (divisor_count (primorial' k))) /\n        (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> ln 2", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      ln (real (divisor_count (primorial' k))) /\n      (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> ln 2\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "hence \"limsup ((\\<lambda>n. ln (divisor_count n) * ln (ln n) / ln n) \\<circ> primorial') = ereal (ln 2)\""], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      ln (real (divisor_count (primorial' k))) /\n      (ln (real (primorial' k)) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> ln 2\n\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (((\\<lambda>n.\n                ln (real (divisor_count n)) * ln (ln (real n)) /\n                ln (real n)) \\<circ>\n            primorial')\n            x)) =\n    ereal (ln 2)", "by (intro lim_imp_Limsup tendsto_ereal) simp_all"], ["proof (state)\nthis:\n  limsup\n   (\\<lambda>x.\n       ereal\n        (((\\<lambda>n.\n              ln (real (divisor_count n)) * ln (ln (real n)) /\n              ln (real n)) \\<circ>\n          primorial')\n          x)) =\n  ereal (ln 2)\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "hence \"ln 2 = limsup ((\\<lambda>n. ereal (ln (divisor_count n) * ln (ln n) / ln n)) \\<circ> primorial')\""], ["proof (prove)\nusing this:\n  limsup\n   (\\<lambda>x.\n       ereal\n        (((\\<lambda>n.\n              ln (real (divisor_count n)) * ln (ln (real n)) /\n              ln (real n)) \\<circ>\n          primorial')\n          x)) =\n  ereal (ln 2)\n\ngoal (1 subgoal):\n 1. ereal (ln 2) =\n    limsup\n     ((\\<lambda>n.\n          ereal\n           (ln (real (divisor_count n)) * ln (ln (real n)) /\n            ln (real n))) \\<circ>\n      primorial')", "by (simp add: o_def)"], ["proof (state)\nthis:\n  ereal (ln 2) =\n  limsup\n   ((\\<lambda>n.\n        ereal\n         (ln (real (divisor_count n)) * ln (ln (real n)) /\n          ln (real n))) \\<circ>\n    primorial')\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "also"], ["proof (state)\nthis:\n  ereal (ln 2) =\n  limsup\n   ((\\<lambda>n.\n        ereal\n         (ln (real (divisor_count n)) * ln (ln (real n)) /\n          ln (real n))) \\<circ>\n    primorial')\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "have \"\\<dots> \\<le> limsup (\\<lambda>n. ln (divisor_count n) * ln (ln n) / ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limsup\n     ((\\<lambda>n.\n          ereal\n           (ln (real (divisor_count n)) * ln (ln (real n)) /\n            ln (real n))) \\<circ>\n      primorial')\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "using strict_mono_primorial'"], ["proof (prove)\nusing this:\n  strict_mono primorial'\n\ngoal (1 subgoal):\n 1. limsup\n     ((\\<lambda>n.\n          ereal\n           (ln (real (divisor_count n)) * ln (ln (real n)) /\n            ln (real n))) \\<circ>\n      primorial')\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "by (rule limsup_subseq_mono)"], ["proof (state)\nthis:\n  limsup\n   ((\\<lambda>n.\n        ereal\n         (ln (real (divisor_count n)) * ln (ln (real n)) /\n          ln (real n))) \\<circ>\n    primorial')\n  \\<le> limsup\n         (\\<lambda>x.\n             ereal\n              (ln (real (divisor_count x)) * ln (ln (real x)) /\n               ln (real x)))\n\ngoal (2 subgoals):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)\n 2. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "finally"], ["proof (chain)\npicking this:\n  ereal (ln 2)\n  \\<le> limsup\n         (\\<lambda>x.\n             ereal\n              (ln (real (divisor_count x)) * ln (ln (real x)) /\n               ln (real x)))", "show \"limsup (\\<lambda>n. ln (divisor_count n) * ln (ln n) / ln n) \\<ge> ln 2\""], ["proof (prove)\nusing this:\n  ereal (ln 2)\n  \\<le> limsup\n         (\\<lambda>x.\n             ereal\n              (ln (real (divisor_count x)) * ln (ln (real x)) /\n               ln (real x)))\n\ngoal (1 subgoal):\n 1. ereal (ln 2)\n    \\<le> limsup\n           (\\<lambda>x.\n               ereal\n                (ln (real (divisor_count x)) * ln (ln (real x)) /\n                 ln (real x)))", "."], ["proof (state)\nthis:\n  ereal (ln 2)\n  \\<le> limsup\n         (\\<lambda>x.\n             ereal\n              (ln (real (divisor_count x)) * ln (ln (real x)) /\n               ln (real x)))\n\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)", "show \"limsup (\\<lambda>n. ln (divisor_count n) * ln (ln n) / ln n) \\<le> ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limsup\n     (\\<lambda>x.\n         ereal\n          (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n    \\<le> ereal (ln 2)", "unfolding Limsup_le_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y>ereal (ln 2).\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       ereal (ln 2) < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "fix C'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       ereal (ln 2) < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "assume \"C' > ereal (ln 2)\""], ["proof (state)\nthis:\n  ereal (ln 2) < C'\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       ereal (ln 2) < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "from ereal_dense2[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>z. ereal (ln 2) < ereal z \\<and> ereal z < C'", "obtain C where C: \"C > ln 2\" \"ereal C < C'\""], ["proof (prove)\nusing this:\n  \\<exists>z. ereal (ln 2) < ereal z \\<and> ereal z < C'\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>ln 2 < C; ereal C < C'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ln 2 < C\n  ereal C < C'\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       ereal (ln 2) < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "define \\<epsilon> where \"\\<epsilon> = (C / ln 2) - 1\""], ["proof (state)\nthis:\n  \\<epsilon> = C / ln 2 - 1\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       ereal (ln 2) < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "from C"], ["proof (chain)\npicking this:\n  ln 2 < C\n  ereal C < C'", "have \"\\<epsilon> > 0\""], ["proof (prove)\nusing this:\n  ln 2 < C\n  ereal C < C'\n\ngoal (1 subgoal):\n 1. 0 < \\<epsilon>", "by (simp add: \\<epsilon>_def)"], ["proof (state)\nthis:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       ereal (ln 2) < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "have \"eventually (\\<lambda>n::nat. ln (ln n) > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. 0 < ln (ln (real n))", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. 0 < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       ereal (ln 2) < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "hence \"eventually (\\<lambda>n. ln (divisor_count n) * ln (ln n) / ln n < C) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. 0 < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n) < C", "using divisor_count_upper_bound[OF \\<open>\\<epsilon> > 0\\<close>] eventually_gt_at_top[of 1]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. 0 < ln (ln (real n))\n  \\<forall>\\<^sub>F n in sequentially.\n     real (divisor_count n)\n     < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))\n  eventually ((<) (1::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n) < C", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        real (divisor_count n)\n        < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> ln (real (divisor_count n)) * ln (ln (real n)) /\n                         ln (real n)\n                         < C", "case (elim n)"], ["proof (state)\nthis:\n  0 < ln (ln (real n))\n  real (divisor_count n)\n  < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))\n  1 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        real (divisor_count n)\n        < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> ln (real (divisor_count n)) * ln (ln (real n)) /\n                         ln (real n)\n                         < C", "hence \"ln (divisor_count n) < ln (2 powr ((1 + \\<epsilon>) * ln n / ln (ln n)))\""], ["proof (prove)\nusing this:\n  0 < ln (ln (real n))\n  real (divisor_count n)\n  < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))\n  1 < n\n\ngoal (1 subgoal):\n 1. ln (real (divisor_count n))\n    < ln (2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n))))", "by (subst ln_less_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (real (divisor_count n))\n  < ln (2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        real (divisor_count n)\n        < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> ln (real (divisor_count n)) * ln (ln (real n)) /\n                         ln (real n)\n                         < C", "also"], ["proof (state)\nthis:\n  ln (real (divisor_count n))\n  < ln (2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        real (divisor_count n)\n        < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> ln (real (divisor_count n)) * ln (ln (real n)) /\n                         ln (real n)\n                         < C", "have \"\\<dots> = (1 + \\<epsilon>) * ln 2 * ln n / ln (ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))) =\n    (1 + \\<epsilon>) * ln 2 * ln (real n) / ln (ln (real n))", "by (simp add: ln_powr)"], ["proof (state)\nthis:\n  ln (2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))) =\n  (1 + \\<epsilon>) * ln 2 * ln (real n) / ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        real (divisor_count n)\n        < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> ln (real (divisor_count n)) * ln (ln (real n)) /\n                         ln (real n)\n                         < C", "finally"], ["proof (chain)\npicking this:\n  ln (real (divisor_count n))\n  < (1 + \\<epsilon>) * ln 2 * ln (real n) / ln (ln (real n))", "have \"ln (divisor_count n) * ln (ln n) / ln n < (1 + \\<epsilon>) * ln 2\""], ["proof (prove)\nusing this:\n  ln (real (divisor_count n))\n  < (1 + \\<epsilon>) * ln 2 * ln (real n) / ln (ln (real n))\n\ngoal (1 subgoal):\n 1. ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n)\n    < (1 + \\<epsilon>) * ln 2", "using elim"], ["proof (prove)\nusing this:\n  ln (real (divisor_count n))\n  < (1 + \\<epsilon>) * ln 2 * ln (real n) / ln (ln (real n))\n  0 < ln (ln (real n))\n  real (divisor_count n)\n  < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)))\n  1 < n\n\ngoal (1 subgoal):\n 1. ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n)\n    < (1 + \\<epsilon>) * ln 2", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n)\n  < (1 + \\<epsilon>) * ln 2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        real (divisor_count n)\n        < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> ln (real (divisor_count n)) * ln (ln (real n)) /\n                         ln (real n)\n                         < C", "also"], ["proof (state)\nthis:\n  ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n)\n  < (1 + \\<epsilon>) * ln 2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        real (divisor_count n)\n        < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> ln (real (divisor_count n)) * ln (ln (real n)) /\n                         ln (real n)\n                         < C", "have \"\\<dots> = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + \\<epsilon>) * ln 2 = C", "by (simp add: \\<epsilon>_def)"], ["proof (state)\nthis:\n  (1 + \\<epsilon>) * ln 2 = C\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        real (divisor_count n)\n        < 2 powr ((1 + \\<epsilon>) * ln (real n) / ln (ln (real n)));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> ln (real (divisor_count n)) * ln (ln (real n)) /\n                         ln (real n)\n                         < C", "finally"], ["proof (chain)\npicking this:\n  ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n) < C", "show ?case"], ["proof (prove)\nusing this:\n  ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n) < C\n\ngoal (1 subgoal):\n 1. ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n) < C", "."], ["proof (state)\nthis:\n  ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n) < C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n) < C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       ereal (ln 2) < y \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          ereal\n           (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x))\n          < y", "thus \"eventually (\\<lambda>n. ereal (ln (divisor_count n) * ln (ln n) / ln n) < C') at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n) < C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ereal (ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n))\n       < C'", "by eventually_elim (rule less_trans[OF _ C(2)], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     ereal (ln (real (divisor_count n)) * ln (ln (real n)) / ln (real n))\n     < C'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  limsup\n   (\\<lambda>x.\n       ereal (ln (real (divisor_count x)) * ln (ln (real x)) / ln (real x)))\n  \\<le> ereal (ln 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Mertens' Third Theorem\\<close>"], ["", "text \\<open>\n  In this section, we will show that\n  \\[\\prod_{p\\leq x} \\left(1 - \\frac{1}{p}\\right) =\n      \\frac{C}{\\ln x} + O\\left(\\frac{1}{\\ln^2 x}\\right)\\]\n  with explicit bounds for the factor in the `Big-O'. Here, \\<open>C\\<close> is the following constant:\n\\<close>"], ["", "definition third_mertens_const :: real where\n  \"third_mertens_const =\n     exp (-(\\<Sum>p::nat. if prime p then -ln (1 - 1 / real p) - 1 / real p else 0) - meissel_mertens)\""], ["", "text \\<open>\n  This constant is actually equal to $e^{-\\gamma}$ where $\\gamma$ is the Euler--Mascheroni\n   constant, but showing this is quite a bit of work, which we shall not do here.\n\\<close>"], ["", "lemma third_mertens_const_pos: \"third_mertens_const > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < third_mertens_const", "by (simp add: third_mertens_const_def)"], ["", "theorem\n  defines \"C \\<equiv> third_mertens_const\" \n  shows   mertens_third_theorem_strong:\n            \"eventually (\\<lambda>x. \\<bar>(\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / p) - C / ln x\\<bar> \\<le>\n                                10 * C / ln x ^ 2) at_top\"\n  and     mertens_third_theorem:\n            \"(\\<lambda>x. (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / p) - C / ln x) \\<in> O(\\<lambda>x. 1 / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2 &&&\n    (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "define Pr where \"Pr = (\\<lambda>x. {p. prime p \\<and> real p \\<le> x})\""], ["proof (state)\nthis:\n  Pr = (\\<lambda>x. {p. prime p \\<and> real p \\<le> x})\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "define a :: \"nat \\<Rightarrow> real\"\n    where \"a = (\\<lambda>p. if prime p then -ln (1 - 1 / real p) - 1 / real p else 0)\""], ["proof (state)\nthis:\n  a =\n  (\\<lambda>p. if prime p then - ln (1 - 1 / real p) - 1 / real p else 0)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "define B where \"B = suminf a\""], ["proof (state)\nthis:\n  B = suminf a\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "have C_eq: \"C = exp (-B - meissel_mertens)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C = exp (- B - meissel_mertens)", "by (simp add: B_def a_def third_mertens_const_def C_def)"], ["proof (state)\nthis:\n  C = exp (- B - meissel_mertens)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "have fin: \"finite (Pr x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Pr x)", "by (rule finite_subset[of _ \"{..nat \\<lfloor>x\\<rfloor>}\"]) (auto simp: Pr_def le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  finite (Pr ?x)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "define S where \"S = (\\<lambda>x. (\\<Sum>p\\<in>Pr x. ln (1 - 1 / p)))\""], ["proof (state)\nthis:\n  S = (\\<lambda>x. \\<Sum>p\\<in>Pr x. ln (1 - 1 / real p))\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "define R where \"R = (\\<lambda>x. S x + ln (ln x) + (B + meissel_mertens))\""], ["proof (state)\nthis:\n  R = (\\<lambda>x. S x + ln (ln x) + (B + meissel_mertens))\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "have exp_S: \"exp (S x) = (\\<Prod>p\\<in>Pr x. (1 - 1 / p))\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)", "have \"exp (S x) = (\\<Prod>p\\<in>Pr x. exp (ln (1 - 1 / p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (S x) = (\\<Prod>p\\<in>Pr x. exp (ln (1 - 1 / real p)))", "by (simp add: S_def exp_sum fin)"], ["proof (state)\nthis:\n  exp (S x) = (\\<Prod>p\\<in>Pr x. exp (ln (1 - 1 / real p)))\n\ngoal (1 subgoal):\n 1. exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)", "also"], ["proof (state)\nthis:\n  exp (S x) = (\\<Prod>p\\<in>Pr x. exp (ln (1 - 1 / real p)))\n\ngoal (1 subgoal):\n 1. exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)", "have \"\\<dots> = (\\<Prod>p\\<in>Pr x. (1 - 1 / p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr x. exp (ln (1 - 1 / real p))) =\n    (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)", "by (intro prod.cong) (auto simp: Pr_def dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr x. exp (ln (1 - 1 / real p))) =\n  (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)", "finally"], ["proof (chain)\npicking this:\n  exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)", "show ?thesis"], ["proof (prove)\nusing this:\n  exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)", "."], ["proof (state)\nthis:\n  exp (S x) = (\\<Prod>p\\<in>Pr x. 1 - 1 / real p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  exp (S ?x) = (\\<Prod>p\\<in>Pr ?x. 1 - 1 / real p)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "have a_nonneg: \"a n \\<ge> 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a n", "proof (cases \"prime n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. prime n \\<Longrightarrow> 0 \\<le> a n\n 2. \\<not> prime n \\<Longrightarrow> 0 \\<le> a n", "case True"], ["proof (state)\nthis:\n  prime n\n\ngoal (2 subgoals):\n 1. prime n \\<Longrightarrow> 0 \\<le> a n\n 2. \\<not> prime n \\<Longrightarrow> 0 \\<le> a n", "hence \"ln (1 - 1 / n) \\<le> -(1 / n)\""], ["proof (prove)\nusing this:\n  prime n\n\ngoal (1 subgoal):\n 1. ln (1 - 1 / real n) \\<le> - (1 / real n)", "by (intro ln_one_minus_pos_upper_bound) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  ln (1 - 1 / real n) \\<le> - (1 / real n)\n\ngoal (2 subgoals):\n 1. prime n \\<Longrightarrow> 0 \\<le> a n\n 2. \\<not> prime n \\<Longrightarrow> 0 \\<le> a n", "thus ?thesis"], ["proof (prove)\nusing this:\n  ln (1 - 1 / real n) \\<le> - (1 / real n)\n\ngoal (1 subgoal):\n 1. 0 \\<le> a n", "by (auto simp: a_def)"], ["proof (state)\nthis:\n  0 \\<le> a n\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> 0 \\<le> a n", "qed (auto simp: a_def)"], ["proof (state)\nthis:\n  0 \\<le> a ?n\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "have \"summable a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable a", "proof (rule summable_comparison_test_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g n))\n 2. a \\<in> O(?g)", "have \"a \\<in> O(\\<lambda>n. -ln (1 - 1 / n) - 1 / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> O(\\<lambda>x. - ln (1 - 1 / real x) - 1 / real x)", "by (intro bigoI[of _ 1]) (auto simp: a_def)"], ["proof (state)\nthis:\n  a \\<in> O(\\<lambda>x. - ln (1 - 1 / real x) - 1 / real x)\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g n))\n 2. a \\<in> O(?g)", "also"], ["proof (state)\nthis:\n  a \\<in> O(\\<lambda>x. - ln (1 - 1 / real x) - 1 / real x)\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g n))\n 2. a \\<in> O(?g)", "have \"(\\<lambda>n::nat. -ln (1 - 1 / n) - 1 / n) \\<in> O(\\<lambda>n. 1 / n ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. - ln (1 - 1 / real n) - 1 / real n)\n    \\<in> O(\\<lambda>x. 1 / (real x)\\<^sup>2)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n. - ln (1 - 1 / real n) - 1 / real n)\n  \\<in> O(\\<lambda>x. 1 / (real x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g n))\n 2. a \\<in> O(?g)", "finally"], ["proof (chain)\npicking this:\n  a \\<in> O(\\<lambda>x. 1 / (real x)\\<^sup>2)", "show \"a \\<in> O(\\<lambda>n. 1 / real n ^ 2)\""], ["proof (prove)\nusing this:\n  a \\<in> O(\\<lambda>x. 1 / (real x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a \\<in> O(\\<lambda>n. 1 / (real n)\\<^sup>2)", "."], ["proof (state)\nthis:\n  a \\<in> O(\\<lambda>n. 1 / (real n)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (1 / (real n)\\<^sup>2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (1 / (real n)\\<^sup>2))", "show \"summable (\\<lambda>n. norm (1 / real n ^ 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (1 / (real n)\\<^sup>2))", "using inverse_power_summable[of 2]"], ["proof (prove)\nusing this:\n  2 \\<le> 2 \\<Longrightarrow>\n  summable (\\<lambda>n. inverse ((of_nat n)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (1 / (real n)\\<^sup>2))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. norm (1 / (real n)\\<^sup>2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summable a\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "have \"eventually (\\<lambda>n. a n \\<le> 1 / n - 1 / Suc n) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a n \\<le> 1 / real n - 1 / real (Suc n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a n \\<le> 1 / real n - 1 / real (Suc n)", "have \"eventually (\\<lambda>n::nat. -ln (1 - 1 / n) - 1 / n \\<le> 1 / n - 1 / Suc n) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       - ln (1 - 1 / real n) - 1 / real n\n       \\<le> 1 / real n - 1 / real (Suc n)", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     - ln (1 - 1 / real n) - 1 / real n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a n \\<le> 1 / real n - 1 / real (Suc n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     - ln (1 - 1 / real n) - 1 / real n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a n \\<le> 1 / real n - 1 / real (Suc n)", "using eventually_gt_at_top[of 1]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     - ln (1 - 1 / real n) - 1 / real n \\<le> 1 / real n - 1 / real (Suc n)\n  eventually ((<) (1::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a n \\<le> 1 / real n - 1 / real (Suc n)", "by eventually_elim (auto simp: a_def of_nat_diff field_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     a n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     a n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "hence \"eventually (\\<lambda>m. \\<forall>n\\<ge>m. a n \\<le> 1 / n - 1 / Suc n) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     a n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F m in sequentially.\n       \\<forall>n\\<ge>m. a n \\<le> 1 / real n - 1 / real (Suc n)", "by (rule eventually_all_ge_at_top)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F m in sequentially.\n     \\<forall>n\\<ge>m. a n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "hence \"eventually (\\<lambda>x. \\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>. a n \\<le> 1 / n - 1 / Suc n) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F m in sequentially.\n     \\<forall>n\\<ge>m. a n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n          a n \\<le> 1 / real n - 1 / real (Suc n)", "by (rule eventually_compose_filterlim)\n       (intro filterlim_compose[OF filterlim_nat_sequentially] filterlim_floor_sequentially)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n        a n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "hence \"eventually (\\<lambda>x. B - sum_upto a x \\<le> 1 / x) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n        a n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / x", "using eventually_ge_at_top[of \"1::real\"]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n        a n \\<le> 1 / real n - 1 / real (Suc n)\n  eventually ((\\<le>) 1) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "case (elim x)"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n     a n \\<le> 1 / real n - 1 / real (Suc n)\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "have a_le: \"a n \\<le> 1 / real n - 1 / real (Suc n)\" if \"real n \\<ge> x\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. a n \\<le> 1 / real n - 1 / real (Suc n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a n \\<le> 1 / real n - 1 / real (Suc n)", "from that and \\<open>x \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  x \\<le> real n\n  1 \\<le> x", "have \"n \\<ge> nat \\<lfloor>x\\<rfloor>\""], ["proof (prove)\nusing this:\n  x \\<le> real n\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>x\\<rfloor> \\<le> n", "by linarith"], ["proof (state)\nthis:\n  nat \\<lfloor>x\\<rfloor> \\<le> n\n\ngoal (1 subgoal):\n 1. a n \\<le> 1 / real n - 1 / real (Suc n)", "with elim and that"], ["proof (chain)\npicking this:\n  \\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n     a n \\<le> 1 / real n - 1 / real (Suc n)\n  1 \\<le> x\n  x \\<le> real n\n  nat \\<lfloor>x\\<rfloor> \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n     a n \\<le> 1 / real n - 1 / real (Suc n)\n  1 \\<le> x\n  x \\<le> real n\n  nat \\<lfloor>x\\<rfloor> \\<le> n\n\ngoal (1 subgoal):\n 1. a n \\<le> 1 / real n - 1 / real (Suc n)", "by auto"], ["proof (state)\nthis:\n  a n \\<le> 1 / real n - 1 / real (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<le> real ?n1 \\<Longrightarrow>\n  a ?n1 \\<le> 1 / real ?n1 - 1 / real (Suc ?n1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "define m where \"m = Suc (nat \\<lfloor>x\\<rfloor>)\""], ["proof (state)\nthis:\n  m = Suc (nat \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "have telescope: \"(\\<lambda>n. 1 / (n + m) - 1 / (Suc n + m)) sums (1 / real (0 + m) - 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m)) sums\n    (1 / real (0 + m) - 0)", "by (intro telescope_sums') real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m)) sums\n  (1 / real (0 + m) - 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "have \"B - (\\<Sum>n<m. a n) = (\\<Sum>n. a (n + m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B - sum a {..<m} = (\\<Sum>n. a (n + m))", "unfolding B_def sum_upto_altdef m_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. suminf a - sum a {..<Suc (nat \\<lfloor>x\\<rfloor>)} =\n    (\\<Sum>n. a (n + Suc (nat \\<lfloor>x\\<rfloor>)))", "using \\<open>summable a\\<close>"], ["proof (prove)\nusing this:\n  summable a\n\ngoal (1 subgoal):\n 1. suminf a - sum a {..<Suc (nat \\<lfloor>x\\<rfloor>)} =\n    (\\<Sum>n. a (n + Suc (nat \\<lfloor>x\\<rfloor>)))", "by (subst suminf_split_initial_segment[of _ \"Suc (nat \\<lfloor>x\\<rfloor>)\"]) auto"], ["proof (state)\nthis:\n  B - sum a {..<m} = (\\<Sum>n. a (n + m))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "also"], ["proof (state)\nthis:\n  B - sum a {..<m} = (\\<Sum>n. a (n + m))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "have \"(\\<Sum>n<m. a n) = sum_upto a x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum a {..<m} = sum_upto a x", "unfolding m_def sum_upto_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum a {..<Suc (nat \\<lfloor>x\\<rfloor>)} =\n    sum a {0<..nat \\<lfloor>x\\<rfloor>}", "by (intro sum.mono_neutral_right) (auto simp: a_def)"], ["proof (state)\nthis:\n  sum a {..<m} = sum_upto a x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "also"], ["proof (state)\nthis:\n  sum a {..<m} = sum_upto a x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "have \"(\\<Sum>n. a (n + m)) \\<le> (\\<Sum>n. 1 / (n + m) - 1 / (Suc n + m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. a (n + m))\n    \\<le> (\\<Sum>n. 1 / real (n + m) - 1 / real (Suc n + m))", "proof (intro suminf_le allI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)\n 2. summable (\\<lambda>n. a (n + m))\n 3. summable (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m))", "show \"summable (\\<lambda>n. a (n + m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. a (n + m))", "by (rule summable_ignore_initial_segment) fact+"], ["proof (state)\nthis:\n  summable (\\<lambda>n. a (n + m))\n\ngoal (2 subgoals):\n 1. \\<And>n. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)\n 2. summable (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)\n 2. summable (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m))", "show \"summable (\\<lambda>n. 1 / (n + m) - 1 / (Suc n + m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m))", "using telescope"], ["proof (prove)\nusing this:\n  (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m)) sums\n  (1 / real (0 + m) - 0)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m))", "by (rule sums_summable)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m))\n\ngoal (1 subgoal):\n 1. \\<And>n. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)", "have \"x \\<le> n + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> real (n + m)", "unfolding m_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> real (n + Suc (nat \\<lfloor>x\\<rfloor>))", "using \\<open>x \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> real (n + Suc (nat \\<lfloor>x\\<rfloor>))", "by linarith"], ["proof (state)\nthis:\n  x \\<le> real (n + m)\n\ngoal (1 subgoal):\n 1. \\<And>n. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)", "thus \"a (n + m) \\<le> 1 / (n + m) - 1 / (Suc n + m)\""], ["proof (prove)\nusing this:\n  x \\<le> real (n + m)\n\ngoal (1 subgoal):\n 1. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)", "using a_le[of \"n + m\"] \\<open>x \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  x \\<le> real (n + m)\n  x \\<le> real (n + m) \\<Longrightarrow>\n  a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc (n + m))\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)", "by simp"], ["proof (state)\nthis:\n  a (n + m) \\<le> 1 / real (n + m) - 1 / real (Suc n + m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>n. a (n + m))\n  \\<le> (\\<Sum>n. 1 / real (n + m) - 1 / real (Suc n + m))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. a (n + m))\n  \\<le> (\\<Sum>n. 1 / real (n + m) - 1 / real (Suc n + m))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "have \"\\<dots> = 1 / m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. 1 / real (n + m) - 1 / real (Suc n + m)) = 1 / real m", "using telescope"], ["proof (prove)\nusing this:\n  (\\<lambda>n. 1 / real (n + m) - 1 / real (Suc n + m)) sums\n  (1 / real (0 + m) - 0)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. 1 / real (n + m) - 1 / real (Suc n + m)) = 1 / real m", "by (simp add: sums_iff)"], ["proof (state)\nthis:\n  (\\<Sum>n. 1 / real (n + m) - 1 / real (Suc n + m)) = 1 / real m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. 1 / real (n + m) - 1 / real (Suc n + m)) = 1 / real m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "have \"x \\<le> m\" \"m > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> real m &&& 0 < m", "unfolding m_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> real (Suc (nat \\<lfloor>x\\<rfloor>)) &&&\n    0 < Suc (nat \\<lfloor>x\\<rfloor>)", "using \\<open>x \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> real (Suc (nat \\<lfloor>x\\<rfloor>)) &&&\n    0 < Suc (nat \\<lfloor>x\\<rfloor>)", "by linarith+"], ["proof (state)\nthis:\n  x \\<le> real m\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "hence \"1 / m \\<le> 1 / x\""], ["proof (prove)\nusing this:\n  x \\<le> real m\n  0 < m\n\ngoal (1 subgoal):\n 1. 1 / real m \\<le> 1 / x", "using \\<open>x \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  x \\<le> real m\n  0 < m\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 / real m \\<le> 1 / x", "by (intro divide_left_mono) (auto simp: m_def)"], ["proof (state)\nthis:\n  1 / real m \\<le> 1 / x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>n\\<ge>nat \\<lfloor>x\\<rfloor>.\n                   a n \\<le> 1 / real n - 1 / real (Suc n);\n        1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> B - sum_upto a x \\<le> 1 / x", "finally"], ["proof (chain)\npicking this:\n  B - sum_upto a x \\<le> 1 / x", "show ?case"], ["proof (prove)\nusing this:\n  B - sum_upto a x \\<le> 1 / x\n\ngoal (1 subgoal):\n 1. B - sum_upto a x \\<le> 1 / x", "."], ["proof (state)\nthis:\n  B - sum_upto a x \\<le> 1 / x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / x\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / x\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "have \"eventually (\\<lambda>x::real. 1 / x \\<le> 1 / ln x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 / x \\<le> 1 / ln x", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 / x \\<le> 1 / ln x\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / x\n  \\<forall>\\<^sub>F x in at_top. 1 / x \\<le> 1 / ln x", "have \"eventually (\\<lambda>x. B - sum_upto a x \\<le> 1 / ln x) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / x\n  \\<forall>\\<^sub>F x in at_top. 1 / x \\<le> 1 / ln x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / ln x", "by eventually_elim (rule order.trans)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / ln x\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "hence \"eventually (\\<lambda>x. \\<bar>R x\\<bar> \\<le> 5 / ln x) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / ln x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. \\<bar>R x\\<bar> \\<le> 5 / ln x", "using eventually_ge_at_top[of 2]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. B - sum_upto a x \\<le> 1 / ln x\n  eventually ((\\<le>) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. \\<bar>R x\\<bar> \\<le> 5 / ln x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>B - sum_upto a x \\<le> 1 / ln x; 2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>R x\\<bar> \\<le> 5 / ln x", "case (elim x)"], ["proof (state)\nthis:\n  B - sum_upto a x \\<le> 1 / ln x\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>B - sum_upto a x \\<le> 1 / ln x; 2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>R x\\<bar> \\<le> 5 / ln x", "have \"\\<bar>(B - sum_upto a x) - (prime_sum_upto (\\<lambda>p. 1 / p) x - ln (ln x) - meissel_mertens)\\<bar> \\<le>\n             1 / ln x + 4 / ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>B - sum_upto a x -\n          (prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) -\n           meissel_mertens)\\<bar>\n    \\<le> 1 / ln x + 4 / ln x", "proof (intro order.trans[OF abs_triangle_ineq4 add_mono])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>B - sum_upto a x\\<bar> \\<le> 1 / ln x\n 2. \\<bar>prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) -\n          meissel_mertens\\<bar>\n    \\<le> 4 / ln x", "show \"\\<bar>prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) - meissel_mertens\\<bar> \\<le> 4 / ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) -\n          meissel_mertens\\<bar>\n    \\<le> 4 / ln x", "by (intro mertens_second_theorem \\<open>x \\<ge> 2\\<close>)"], ["proof (state)\nthis:\n  \\<bar>prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) -\n        meissel_mertens\\<bar>\n  \\<le> 4 / ln x\n\ngoal (1 subgoal):\n 1. \\<bar>B - sum_upto a x\\<bar> \\<le> 1 / ln x", "have \"sum_upto a x \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto a x \\<le> B", "unfolding B_def sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum a {i. 0 < i \\<and> real i \\<le> x} \\<le> suminf a", "by (intro sum_le_suminf \\<open>summable a\\<close> a_nonneg ballI) auto"], ["proof (state)\nthis:\n  sum_upto a x \\<le> B\n\ngoal (1 subgoal):\n 1. \\<bar>B - sum_upto a x\\<bar> \\<le> 1 / ln x", "thus \"\\<bar>B - sum_upto a x\\<bar> \\<le> 1 / ln x\""], ["proof (prove)\nusing this:\n  sum_upto a x \\<le> B\n\ngoal (1 subgoal):\n 1. \\<bar>B - sum_upto a x\\<bar> \\<le> 1 / ln x", "using elim"], ["proof (prove)\nusing this:\n  sum_upto a x \\<le> B\n  B - sum_upto a x \\<le> 1 / ln x\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<bar>B - sum_upto a x\\<bar> \\<le> 1 / ln x", "by linarith"], ["proof (state)\nthis:\n  \\<bar>B - sum_upto a x\\<bar> \\<le> 1 / ln x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>B - sum_upto a x -\n        (prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) -\n         meissel_mertens)\\<bar>\n  \\<le> 1 / ln x + 4 / ln x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>B - sum_upto a x \\<le> 1 / ln x; 2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>R x\\<bar> \\<le> 5 / ln x", "also"], ["proof (state)\nthis:\n  \\<bar>B - sum_upto a x -\n        (prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) -\n         meissel_mertens)\\<bar>\n  \\<le> 1 / ln x + 4 / ln x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>B - sum_upto a x \\<le> 1 / ln x; 2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>R x\\<bar> \\<le> 5 / ln x", "have \"sum_upto a x = prime_sum_upto (\\<lambda>p. -ln (1 - 1 / p) - 1 / p) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto a x =\n    prime_sum_upto (\\<lambda>p. - ln (1 - 1 / real p) - 1 / real p) x", "unfolding sum_upto_def prime_sum_upto_altdef1 a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       if prime p then - ln (1 - 1 / real p) - 1 / real p else 0) =\n    (\\<Sum>p\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       ind prime p * (- ln (1 - 1 / real p) - 1 / real p))", "by (intro sum.cong allI) auto"], ["proof (state)\nthis:\n  sum_upto a x =\n  prime_sum_upto (\\<lambda>p. - ln (1 - 1 / real p) - 1 / real p) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>B - sum_upto a x \\<le> 1 / ln x; 2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>R x\\<bar> \\<le> 5 / ln x", "also"], ["proof (state)\nthis:\n  sum_upto a x =\n  prime_sum_upto (\\<lambda>p. - ln (1 - 1 / real p) - 1 / real p) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>B - sum_upto a x \\<le> 1 / ln x; 2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>R x\\<bar> \\<le> 5 / ln x", "have \"\\<dots> = -S x - prime_sum_upto (\\<lambda>p. 1 / p) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. - ln (1 - 1 / real p) - 1 / real p) x =\n    - S x - prime_sum_upto (\\<lambda>p. 1 / real p) x", "by (simp add: a_def S_def Pr_def prime_sum_upto_def sum_subtractf sum_negf)"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. - ln (1 - 1 / real p) - 1 / real p) x =\n  - S x - prime_sum_upto (\\<lambda>p. 1 / real p) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>B - sum_upto a x \\<le> 1 / ln x; 2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>R x\\<bar> \\<le> 5 / ln x", "finally"], ["proof (chain)\npicking this:\n  \\<bar>B - (- S x - prime_sum_upto (\\<lambda>p. 1 / real p) x) -\n        (prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) -\n         meissel_mertens)\\<bar>\n  \\<le> 1 / ln x + 4 / ln x", "show \"\\<bar>R x\\<bar> \\<le> 5 / ln x\""], ["proof (prove)\nusing this:\n  \\<bar>B - (- S x - prime_sum_upto (\\<lambda>p. 1 / real p) x) -\n        (prime_sum_upto (\\<lambda>p. 1 / real p) x - ln (ln x) -\n         meissel_mertens)\\<bar>\n  \\<le> 1 / ln x + 4 / ln x\n\ngoal (1 subgoal):\n 1. \\<bar>R x\\<bar> \\<le> 5 / ln x", "by (simp add: R_def)"], ["proof (state)\nthis:\n  \\<bar>R x\\<bar> \\<le> 5 / ln x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. \\<bar>R x\\<bar> \\<le> 5 / ln x\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. \\<bar>R x\\<bar> \\<le> 5 / ln x\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "have \"eventually (\\<lambda>x::real. \\<bar>5 / ln x\\<bar> < 1 / 2) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. \\<bar>5 / ln x\\<bar> < 1 / 2", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. \\<bar>5 / ln x\\<bar> < 1 / 2\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. \\<bar>R x\\<bar> \\<le> 5 / ln x\n  \\<forall>\\<^sub>F x in at_top. \\<bar>5 / ln x\\<bar> < 1 / 2", "have \"eventually (\\<lambda>x. exp (R x) - 1 \\<in> {-5 / ln x..10 / ln x}) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. \\<bar>R x\\<bar> \\<le> 5 / ln x\n  \\<forall>\\<^sub>F x in at_top. \\<bar>5 / ln x\\<bar> < 1 / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "using eventually_gt_at_top[of 1]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. \\<bar>R x\\<bar> \\<le> 5 / ln x\n  \\<forall>\\<^sub>F x in at_top. \\<bar>5 / ln x\\<bar> < 1 / 2\n  eventually ((<) (1::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "case (elim x)"], ["proof (state)\nthis:\n  \\<bar>R x\\<bar> \\<le> 5 / ln x\n  \\<bar>5 / ln x\\<bar> < 1 / 2\n  1 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "have \"exp (R x) \\<le> exp (5 / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (R x) \\<le> exp (5 / ln x)", "using elim"], ["proof (prove)\nusing this:\n  \\<bar>R x\\<bar> \\<le> 5 / ln x\n  \\<bar>5 / ln x\\<bar> < 1 / 2\n  1 < x\n\ngoal (1 subgoal):\n 1. exp (R x) \\<le> exp (5 / ln x)", "by simp"], ["proof (state)\nthis:\n  exp (R x) \\<le> exp (5 / ln x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "also"], ["proof (state)\nthis:\n  exp (R x) \\<le> exp (5 / ln x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "have \"\\<dots> \\<le> 1 + 10 / ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (5 / ln x) \\<le> 1 + 10 / ln x", "using real_exp_bound_lemma[of \"5 / ln x\"] elim"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> 5 / ln x; 5 / ln x \\<le> 1 / 2\\<rbrakk>\n  \\<Longrightarrow> exp (5 / ln x) \\<le> 1 + 2 * (5 / ln x)\n  \\<bar>R x\\<bar> \\<le> 5 / ln x\n  \\<bar>5 / ln x\\<bar> < 1 / 2\n  1 < x\n\ngoal (1 subgoal):\n 1. exp (5 / ln x) \\<le> 1 + 10 / ln x", "by (simp add: abs_if split: if_splits)"], ["proof (state)\nthis:\n  exp (5 / ln x) \\<le> 1 + 10 / ln x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "finally"], ["proof (chain)\npicking this:\n  exp (R x) \\<le> 1 + 10 / ln x", "have le: \"exp (R x) \\<le> 1 + 10 / ln x\""], ["proof (prove)\nusing this:\n  exp (R x) \\<le> 1 + 10 / ln x\n\ngoal (1 subgoal):\n 1. exp (R x) \\<le> 1 + 10 / ln x", "."], ["proof (state)\nthis:\n  exp (R x) \\<le> 1 + 10 / ln x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "have \"1 + (-5 / ln x) \\<le> exp (-5 / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + - 5 / ln x \\<le> exp (- 5 / ln x)", "by (rule exp_ge_add_one_self)"], ["proof (state)\nthis:\n  1 + - 5 / ln x \\<le> exp (- 5 / ln x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "also"], ["proof (state)\nthis:\n  1 + - 5 / ln x \\<le> exp (- 5 / ln x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "have \"exp (-5 / ln x) \\<le> exp (R x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- 5 / ln x) \\<le> exp (R x)", "using elim"], ["proof (prove)\nusing this:\n  \\<bar>R x\\<bar> \\<le> 5 / ln x\n  \\<bar>5 / ln x\\<bar> < 1 / 2\n  1 < x\n\ngoal (1 subgoal):\n 1. exp (- 5 / ln x) \\<le> exp (R x)", "by simp"], ["proof (state)\nthis:\n  exp (- 5 / ln x) \\<le> exp (R x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "finally"], ["proof (chain)\npicking this:\n  1 + - 5 / ln x \\<le> exp (R x)", "have \"exp (R x) \\<ge> 1 - 5 / ln x\""], ["proof (prove)\nusing this:\n  1 + - 5 / ln x \\<le> exp (R x)\n\ngoal (1 subgoal):\n 1. 1 - 5 / ln x \\<le> exp (R x)", "by simp"], ["proof (state)\nthis:\n  1 - 5 / ln x \\<le> exp (R x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<bar>R x\\<bar> \\<le> 5 / ln x;\n        \\<bar>5 / ln x\\<bar> < 1 / 2; 1 < x\\<rbrakk>\n       \\<Longrightarrow> exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "with le"], ["proof (chain)\npicking this:\n  exp (R x) \\<le> 1 + 10 / ln x\n  1 - 5 / ln x \\<le> exp (R x)", "show ?case"], ["proof (prove)\nusing this:\n  exp (R x) \\<le> 1 + 10 / ln x\n  1 - 5 / ln x \\<le> exp (R x)\n\ngoal (1 subgoal):\n 1. exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}", "by simp"], ["proof (state)\nthis:\n  exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n                1 - 1 / real p) -\n             C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2\n 2. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "thus \"eventually (\\<lambda>x. \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x\\<bar> \\<le> 10 * C / ln x ^ 2) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2", "using eventually_gt_at_top[of \"exp 1\"] eventually_gt_at_top[of 1]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n  eventually ((<) (exp (1::?'a1))) at_top\n  eventually ((<) (1::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x\\<bar>\n       \\<le> 10 * C / (ln x)\\<^sup>2", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}; exp 1 < x;\n        1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) -\n                               C / ln x\\<bar>\n                         \\<le> 10 * C / (ln x)\\<^sup>2", "case (elim x)"], ["proof (state)\nthis:\n  exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n  exp 1 < x\n  1 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}; exp 1 < x;\n        1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) -\n                               C / ln x\\<bar>\n                         \\<le> 10 * C / (ln x)\\<^sup>2", "have \"\\<bar>exp (R x) - 1\\<bar> \\<le> 10 / ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>exp (R x) - 1\\<bar> \\<le> 10 / ln x", "using elim"], ["proof (prove)\nusing this:\n  exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n  exp 1 < x\n  1 < x\n\ngoal (1 subgoal):\n 1. \\<bar>exp (R x) - 1\\<bar> \\<le> 10 / ln x", "by (simp add: abs_if)"], ["proof (state)\nthis:\n  \\<bar>exp (R x) - 1\\<bar> \\<le> 10 / ln x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}; exp 1 < x;\n        1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) -\n                               C / ln x\\<bar>\n                         \\<le> 10 * C / (ln x)\\<^sup>2", "from elim"], ["proof (chain)\npicking this:\n  exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n  exp 1 < x\n  1 < x", "have \"\\<bar>exp (S x) - C / ln x\\<bar> = C / ln x * \\<bar>exp (R x) - 1\\<bar>\""], ["proof (prove)\nusing this:\n  exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n  exp 1 < x\n  1 < x\n\ngoal (1 subgoal):\n 1. \\<bar>exp (S x) - C / ln x\\<bar> = C / ln x * \\<bar>exp (R x) - 1\\<bar>", "by (simp add: R_def exp_add C_eq exp_diff exp_minus field_simps)"], ["proof (state)\nthis:\n  \\<bar>exp (S x) - C / ln x\\<bar> = C / ln x * \\<bar>exp (R x) - 1\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}; exp 1 < x;\n        1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) -\n                               C / ln x\\<bar>\n                         \\<le> 10 * C / (ln x)\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<bar>exp (S x) - C / ln x\\<bar> = C / ln x * \\<bar>exp (R x) - 1\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}; exp 1 < x;\n        1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) -\n                               C / ln x\\<bar>\n                         \\<le> 10 * C / (ln x)\\<^sup>2", "have \"\\<dots> \\<le> C / ln x * (10 / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C / ln x * \\<bar>exp (R x) - 1\\<bar> \\<le> C / ln x * (10 / ln x)", "using elim"], ["proof (prove)\nusing this:\n  exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}\n  exp 1 < x\n  1 < x\n\ngoal (1 subgoal):\n 1. C / ln x * \\<bar>exp (R x) - 1\\<bar> \\<le> C / ln x * (10 / ln x)", "by (intro mult_left_mono) (auto simp: C_eq)"], ["proof (state)\nthis:\n  C / ln x * \\<bar>exp (R x) - 1\\<bar> \\<le> C / ln x * (10 / ln x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>exp (R x) - 1 \\<in> {- 5 / ln x..10 / ln x}; exp 1 < x;\n        1 < x\\<rbrakk>\n       \\<Longrightarrow> \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) -\n                               C / ln x\\<bar>\n                         \\<le> 10 * C / (ln x)\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  \\<bar>exp (S x) - C / ln x\\<bar> \\<le> C / ln x * (10 / ln x)", "show ?case"], ["proof (prove)\nusing this:\n  \\<bar>exp (S x) - C / ln x\\<bar> \\<le> C / ln x * (10 / ln x)\n\ngoal (1 subgoal):\n 1. \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x\\<bar>\n    \\<le> 10 * C / (ln x)\\<^sup>2", "by (simp add: exp_S power2_eq_square mult_ac)"], ["proof (state)\nthis:\n  \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x\\<bar>\n  \\<le> 10 * C / (ln x)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x\\<bar>\n     \\<le> 10 * C / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "thus \"(\\<lambda>x. (\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x) \\<in> O(\\<lambda>x. 1 / ln x ^ 2)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x\\<bar>\n     \\<le> 10 * C / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x)\n    \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)", "by (intro bigoI[of _ \"10  * C\"]) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. (\\<Prod>p\\<in>Pr x. 1 - 1 / real p) - C / ln x)\n  \\<in> O(\\<lambda>x. 1 / (ln x)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mertens_third_theorem_asymp_equiv:\n  \"(\\<lambda>x. (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / real p)) \\<sim>[at_top]\n     (\\<lambda>x. third_mertens_const / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n          1 -\n          1 /\n          real p) \\<sim>[at_top] (\\<lambda>x. third_mertens_const / ln x)", "by (rule smallo_imp_asymp_equiv[OF landau_o.big_small_trans[OF mertens_third_theorem]])\n     (use third_mertens_const_pos in real_asymp)"], ["", "text \\<open>\n  We now show an equivalent version where $\\prod_{p\\leq x} (1 - 1 / p)$ is replaced\n  by $\\prod_{i=1}^k (1 - 1 / p_i)$:\n\\<close>"], ["", "lemma mertens_third_convert:\n  assumes \"n > 0\"\n  shows \"(\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n           (\\<Prod>p | prime p \\<and> p \\<le> nth_prime (n - 1). 1 - 1 / p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n       1 - 1 / real x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n       1 - 1 / real x)", "have \"primorial' n = primorial (nth_prime (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primorial' n = primorial (real (nth_prime (n - 1)))", "using assms"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. primorial' n = primorial (real (nth_prime (n - 1)))", "by (simp add: primorial'_conv_primorial)"], ["proof (state)\nthis:\n  primorial' n = primorial (real (nth_prime (n - 1)))\n\ngoal (1 subgoal):\n 1. (\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n       1 - 1 / real x)", "also"], ["proof (state)\nthis:\n  primorial' n = primorial (real (nth_prime (n - 1)))\n\ngoal (1 subgoal):\n 1. (\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n       1 - 1 / real x)", "have \"real (totient \\<dots>) =\n               primorial' n * (\\<Prod>p | prime p \\<and> p \\<le> nth_prime (n - 1). 1 - 1 / p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (totient (primorial (real (nth_prime (n - 1))))) =\n    real (primorial' n) *\n    (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n       1 - 1 / real x)", "using assms"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. real (totient (primorial (real (nth_prime (n - 1))))) =\n    real (primorial' n) *\n    (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n       1 - 1 / real x)", "by (subst totient_primorial) (auto simp: primorial'_conv_primorial)"], ["proof (state)\nthis:\n  real (totient (primorial (real (nth_prime (n - 1))))) =\n  real (primorial' n) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n     1 - 1 / real x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n       1 - 1 / real x)", "finally"], ["proof (chain)\npicking this:\n  real (totient (primorial' n)) =\n  real (primorial' n) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n     1 - 1 / real x)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (totient (primorial' n)) =\n  real (primorial' n) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n     1 - 1 / real x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n       1 - 1 / real x)", "by (simp add: totient_primorial')"], ["proof (state)\nthis:\n  (\\<Prod>k<n. 1 - 1 / real (nth_prime k)) =\n  (\\<Prod>x\\<in>{p. prime p \\<and> p \\<le> nth_prime (n - 1)}.\n     1 - 1 / real x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prime_number_theorem) mertens_third_theorem_asymp_equiv':\n  \"(\\<lambda>n. (\\<Prod>k<n. 1 - 1 / nth_prime k)) \\<sim>[at_top] (\\<lambda>x. third_mertens_const / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "have lim: \"filterlim (\\<lambda>n. real (nth_prime (n - 1))) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. real (nth_prime (n - 1)) :> at_top", "by (intro filterlim_compose[OF filterlim_real_sequentially]\n              filterlim_compose[OF nth_prime_at_top]) real_asymp"], ["proof (state)\nthis:\n  LIM n sequentially. real (nth_prime (n - 1)) :> at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "have \"(\\<lambda>n. (\\<Prod>k<n. 1 - 1 / nth_prime k)) \\<sim>[at_top]\n          (\\<lambda>n. (\\<Prod>p | prime p \\<and> real p \\<le> real (nth_prime (n - 1)). 1 - 1 / p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>n.\n     \\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> real (nth_prime (n - 1))}.\n       1 - 1 / real x)", "by (intro asymp_equiv_refl_ev eventually_mono[OF eventually_gt_at_top[of 0]])\n       (subst mertens_third_convert, auto)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>k<n.\n         1 -\n         1 /\n         real\n          (nth_prime\n            k)) \\<sim>[sequentially] (\\<lambda>n.\n   \\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> real (nth_prime (n - 1))}.\n     1 - 1 / real x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>k<n.\n         1 -\n         1 /\n         real\n          (nth_prime\n            k)) \\<sim>[sequentially] (\\<lambda>n.\n   \\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> real (nth_prime (n - 1))}.\n     1 - 1 / real x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. third_mertens_const / ln (real (nth_prime (n - 1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>x\\<in>{p. prime p \\<and>\n                         real p \\<le> real (nth_prime (n - 1))}.\n          1 -\n          1 /\n          real\n           x) \\<sim>[sequentially] (\\<lambda>n.\n third_mertens_const / ln (real (nth_prime (n - 1))))", "by (intro asymp_equiv_compose'[OF mertens_third_theorem_asymp_equiv lim])"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>x\\<in>{p. prime p \\<and>\n                       real p \\<le> real (nth_prime (n - 1))}.\n        1 -\n        1 /\n        real\n         x) \\<sim>[sequentially] (\\<lambda>n.\n                                     third_mertens_const /\n                                     ln (real (nth_prime (n - 1))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>x\\<in>{p. prime p \\<and>\n                       real p \\<le> real (nth_prime (n - 1))}.\n        1 -\n        1 /\n        real\n         x) \\<sim>[sequentially] (\\<lambda>n.\n                                     third_mertens_const /\n                                     ln (real (nth_prime (n - 1))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. third_mertens_const / ln (real (n - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        third_mertens_const /\n        ln (real\n             (nth_prime\n               (n -\n                1)))) \\<sim>[sequentially] (\\<lambda>n.\n         third_mertens_const / ln (real (n - 1)))", "by (intro asymp_equiv_intros asymp_equiv_compose'[OF ln_nth_prime_asymp_equiv]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      third_mertens_const /\n      ln (real\n           (nth_prime\n             (n -\n              1)))) \\<sim>[sequentially] (\\<lambda>n.\n       third_mertens_const / ln (real (n - 1)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      third_mertens_const /\n      ln (real\n           (nth_prime\n             (n -\n              1)))) \\<sim>[sequentially] (\\<lambda>n.\n       third_mertens_const / ln (real (n - 1)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. third_mertens_const / ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        third_mertens_const /\n        ln (real\n             (n -\n              1))) \\<sim>[sequentially] (\\<lambda>n.\n      third_mertens_const / ln (real n))", "using third_mertens_const_pos"], ["proof (prove)\nusing this:\n  0 < third_mertens_const\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        third_mertens_const /\n        ln (real\n             (n -\n              1))) \\<sim>[sequentially] (\\<lambda>n.\n      third_mertens_const / ln (real n))", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      third_mertens_const /\n      ln (real\n           (n -\n            1))) \\<sim>[sequentially] (\\<lambda>n.\n    third_mertens_const / ln (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[sequentially] d \\<Longrightarrow>\n              c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow> c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n.\n                        \\<Prod>k<n.\n                           1 -\n                           1 /\n                           real\n                            (nth_prime\n                              k)) \\<sim>[sequentially] (\\<lambda>a.\n                     third_mertens_const / ln (real a))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[sequentially] d \\<Longrightarrow>\n              c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow> c \\<sim>[sequentially] d;\n   \\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n.\n                        \\<Prod>k<n.\n                           1 -\n                           1 /\n                           real\n                            (nth_prime\n                              k)) \\<sim>[sequentially] (\\<lambda>a.\n                     third_mertens_const / ln (real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>k<n.\n           1 -\n           1 /\n           real\n            (nth_prime\n              k)) \\<sim>[sequentially] (\\<lambda>x.\n     third_mertens_const / ln (real x))", "."], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>k<n.\n         1 -\n         1 /\n         real\n          (nth_prime\n            k)) \\<sim>[sequentially] (\\<lambda>x.\n   third_mertens_const / ln (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bounds on Euler's totient function\\<close>"], ["", "text \\<open>\n  Similarly to the divisor function, we will show that $\\varphi(n)$ has minimal order\n  $C n / \\ln\\ln n$.\n\n  The first part is to show the lower bound:\n\\<close>"], ["", "theorem totient_lower_bound:\n  fixes \\<epsilon> :: real\n  assumes \"\\<epsilon> > 0\"\n  defines \"C \\<equiv> third_mertens_const\"\n  shows \"eventually (\\<lambda>n. totient n > (1 - \\<epsilon>) * C * n / ln (ln n)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "include prime_counting_notation"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "define f :: \"nat \\<Rightarrow> nat\" where \"f = (\\<lambda>n. card {p\\<in>prime_factors n. p > ln n})\""], ["proof (state)\nthis:\n  f =\n  (\\<lambda>n.\n      card {p. p \\<in># prime_factorization n \\<and> ln (real n) < real p})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "define lb1 where \"lb1 = (\\<lambda>n::nat. (\\<Prod>p | prime p \\<and> real p \\<le> ln n. 1 - 1 / p))\""], ["proof (state)\nthis:\n  lb1 =\n  (\\<lambda>n.\n      \\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n        1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "define lb2 where \"lb2 = (\\<lambda>n::nat. (1 - 1 / ln n) powr (ln n / ln (ln n)))\""], ["proof (state)\nthis:\n  lb2 =\n  (\\<lambda>n. (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n))))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "define lb1' where \"lb1' = (\\<lambda>n::nat. C / ln (ln n) - 10 * C / ln (ln n) ^ 2)\""], ["proof (state)\nthis:\n  lb1' =\n  (\\<lambda>x. C / ln (ln (real x)) - 10 * C / (ln (ln (real x)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "have \"eventually (\\<lambda>n::nat. 1 + log 2 n \\<le> ln n ^ 2) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       1 + log 2 (real x) \\<le> (ln (real x))\\<^sup>2", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     1 + log 2 (real x) \\<le> (ln (real x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "hence \"eventually (\\<lambda>n. totient n / n \\<ge> lb1 n * lb2 n) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     1 + log 2 (real x) \\<le> (ln (real x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       lb1 n * lb2 n \\<le> real (totient n) / real n", "using eventually_gt_at_top[of 2]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     1 + log 2 (real x) \\<le> (ln (real x))\\<^sup>2\n  eventually ((<) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       lb1 n * lb2 n \\<le> real (totient n) / real n", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "assume n: \"n > 2\" and \"1 + log 2 n \\<le> ln n ^ 2\""], ["proof (state)\nthis:\n  2 < n\n  1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "define Pr where [simp]: \"Pr = prime_factors n\""], ["proof (state)\nthis:\n  Pr = prime_factors n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "define Pr1 where [simp]: \"Pr1 = {p\\<in>Pr. p \\<le> ln n}\""], ["proof (state)\nthis:\n  Pr1 = {p \\<in> Pr. real p \\<le> ln (real n)}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "define Pr2 where [simp]: \"Pr2 = {p\\<in>Pr. p > ln n}\""], ["proof (state)\nthis:\n  Pr2 = {p \\<in> Pr. ln (real n) < real p}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"exp 1 < real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp 1 < real n", "using e_less_272 \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  exp 1 < 272 / 100\n  2 < n\n\ngoal (1 subgoal):\n 1. exp 1 < real n", "by linarith"], ["proof (state)\nthis:\n  exp 1 < real n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "hence \"ln (exp 1) < ln (real n)\""], ["proof (prove)\nusing this:\n  exp 1 < real n\n\ngoal (1 subgoal):\n 1. ln (exp 1) < ln (real n)", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  exp 1 < real n\n  2 < n\n\ngoal (1 subgoal):\n 1. ln (exp 1) < ln (real n)", "by (subst ln_less_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (exp 1) < ln (real n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "hence \"1 < ln n\""], ["proof (prove)\nusing this:\n  ln (exp 1) < ln (real n)\n\ngoal (1 subgoal):\n 1. 1 < ln (real n)", "by simp"], ["proof (state)\nthis:\n  1 < ln (real n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "hence \"ln (ln n) > ln (ln (exp 1))\""], ["proof (prove)\nusing this:\n  1 < ln (real n)\n\ngoal (1 subgoal):\n 1. ln (ln (exp 1)) < ln (ln (real n))", "by (subst ln_less_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (ln (exp 1)) < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "hence \"ln (ln n) > 0\""], ["proof (prove)\nusing this:\n  ln (ln (exp 1)) < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. 0 < ln (ln (real n))", "by simp"], ["proof (state)\nthis:\n  0 < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"ln n ^ f n \\<le> (\\<Prod>p\\<in>Pr2. ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real n) ^ f n \\<le> (\\<Prod>p\\<in>Pr2. ln (real n))", "by (simp add: f_def)"], ["proof (state)\nthis:\n  ln (real n) ^ f n \\<le> (\\<Prod>p\\<in>Pr2. ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  ln (real n) ^ f n \\<le> (\\<Prod>p\\<in>Pr2. ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"\\<dots> \\<le> real (\\<Prod>p\\<in>Pr2. p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. ln (real n)) \\<le> real (\\<Prod>Pr2)", "unfolding of_nat_prod"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. ln (real n)) \\<le> prod real Pr2", "by (intro prod_mono) (auto dest: prime_gt_1_nat simp: in_prime_factors_iff)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. ln (real n)) \\<le> real (\\<Prod>Pr2)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. ln (real n)) \\<le> real (\\<Prod>Pr2)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "{"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. ln (real n)) \\<le> real (\\<Prod>Pr2)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"(\\<Prod>p\\<in>Pr2. p) dvd (\\<Prod>p\\<in>Pr2. p ^ multiplicity p n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Prod>Pr2 dvd (\\<Prod>p\\<in>Pr2. p ^ multiplicity p n)", "by (intro prod_dvd_prod dvd_power) (auto simp: prime_factors_multiplicity)"], ["proof (state)\nthis:\n  \\<Prod>Pr2 dvd (\\<Prod>p\\<in>Pr2. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  \\<Prod>Pr2 dvd (\\<Prod>p\\<in>Pr2. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"\\<dots> dvd (\\<Prod>p\\<in>Pr. p ^ multiplicity p n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. p ^ multiplicity p n) dvd\n    (\\<Prod>p\\<in>Pr. p ^ multiplicity p n)", "by (intro prod_dvd_prod_subset2) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. p ^ multiplicity p n) dvd\n  (\\<Prod>p\\<in>Pr. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. p ^ multiplicity p n) dvd\n  (\\<Prod>p\\<in>Pr. p ^ multiplicity p n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"\\<dots> = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr. p ^ multiplicity p n) = n", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr. p ^ multiplicity p n) = n", "by (subst (2) prime_factorization_nat[of n]) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr. p ^ multiplicity p n) = n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "finally"], ["proof (chain)\npicking this:\n  \\<Prod>Pr2 dvd n", "have \"(\\<Prod>p\\<in>Pr2. p) \\<le> n\""], ["proof (prove)\nusing this:\n  \\<Prod>Pr2 dvd n\n\ngoal (1 subgoal):\n 1. \\<Prod>Pr2 \\<le> n", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  \\<Prod>Pr2 dvd n\n  2 < n\n\ngoal (1 subgoal):\n 1. \\<Prod>Pr2 \\<le> n", "by (intro dvd_imp_le) auto"], ["proof (state)\nthis:\n  \\<Prod>Pr2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "}"], ["proof (state)\nthis:\n  \\<Prod>Pr2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  ln (real n) ^ f n \\<le> real n", "have \"ln (ln n ^ f n) \\<le> ln n\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  ln (real n) ^ f n \\<le> real n\n\ngoal (1 subgoal):\n 1. ln (ln (real n) ^ f n) \\<le> ln (real n)", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  ln (real n) ^ f n \\<le> real n\n  2 < n\n\ngoal (1 subgoal):\n 1. ln (ln (real n) ^ f n) \\<le> ln (real n)", "by (subst ln_le_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (ln (real n) ^ f n) \\<le> ln (real n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  ln (ln (real n) ^ f n) \\<le> ln (real n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"ln (ln n ^ f n) = f n * ln (ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (ln (real n) ^ f n) = real (f n) * ln (ln (real n))", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. ln (ln (real n) ^ f n) = real (f n) * ln (ln (real n))", "by (subst ln_realpow) auto"], ["proof (state)\nthis:\n  ln (ln (real n) ^ f n) = real (f n) * ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "finally"], ["proof (chain)\npicking this:\n  real (f n) * ln (ln (real n)) \\<le> ln (real n)", "have f_le: \"f n \\<le> ln n / ln (ln n)\""], ["proof (prove)\nusing this:\n  real (f n) * ln (ln (real n)) \\<le> ln (real n)\n\ngoal (1 subgoal):\n 1. real (f n) \\<le> ln (real n) / ln (ln (real n))", "using \\<open>ln (ln n) > 0\\<close>"], ["proof (prove)\nusing this:\n  real (f n) * ln (ln (real n)) \\<le> ln (real n)\n  0 < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. real (f n) \\<le> ln (real n) / ln (ln (real n))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  real (f n) \\<le> ln (real n) / ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"(1 - 1 / ln n) powr (ln n / ln (ln n)) \\<le> (1 - 1 / ln n) powr (real (f n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))\n    \\<le> (1 - 1 / ln (real n)) powr real (f n)", "using \\<open>n > 2\\<close> and \\<open>ln n > 1\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n  1 < ln (real n)\n\ngoal (1 subgoal):\n 1. (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))\n    \\<le> (1 - 1 / ln (real n)) powr real (f n)", "by (intro powr_mono' f_le) auto"], ["proof (state)\nthis:\n  (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))\n  \\<le> (1 - 1 / ln (real n)) powr real (f n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))\n  \\<le> (1 - 1 / ln (real n)) powr real (f n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"\\<dots> = (\\<Prod>p\\<in>Pr2. 1 - 1 / ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - 1 / ln (real n)) powr real (f n) =\n    (\\<Prod>p\\<in>Pr2. 1 - 1 / ln (real n))", "using \\<open>n > 2\\<close> and \\<open>ln n > 1\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n  1 < ln (real n)\n\ngoal (1 subgoal):\n 1. (1 - 1 / ln (real n)) powr real (f n) =\n    (\\<Prod>p\\<in>Pr2. 1 - 1 / ln (real n))", "by (subst powr_realpow) (auto simp: f_def)"], ["proof (state)\nthis:\n  (1 - 1 / ln (real n)) powr real (f n) =\n  (\\<Prod>p\\<in>Pr2. 1 - 1 / ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  (1 - 1 / ln (real n)) powr real (f n) =\n  (\\<Prod>p\\<in>Pr2. 1 - 1 / ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"\\<dots> \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. 1 - 1 / ln (real n))\n    \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)", "using \\<open>n > 2\\<close> and \\<open>ln n > 1\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n  1 < ln (real n)\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr2. 1 - 1 / ln (real n))\n    \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)", "by (intro prod_mono conjI diff_mono divide_left_mono) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr2. 1 - 1 / ln (real n))\n  \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "finally"], ["proof (chain)\npicking this:\n  (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))\n  \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)", "have bound2: \"(\\<Prod>p\\<in>Pr2. 1 - 1 / p) \\<ge> lb2 n\""], ["proof (prove)\nusing this:\n  (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))\n  \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. lb2 n \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)", "unfolding lb2_def"], ["proof (prove)\nusing this:\n  (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))\n  \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))\n    \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)", "."], ["proof (state)\nthis:\n  lb2 n \\<le> (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"(\\<Prod>p | prime p \\<and> real p \\<le> ln n. inverse (1 - 1 / p)) \\<ge> (\\<Prod>p\\<in>Pr1. inverse (1 - 1 / p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr1. inverse (1 - 1 / real p))\n    \\<le> (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n             inverse (1 - 1 / real x))", "using \\<open>n > 2\\<close>"], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr1. inverse (1 - 1 / real p))\n    \\<le> (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n             inverse (1 - 1 / real x))", "by (intro prod_mono2) (auto intro: finite_primes_le  dest: prime_gt_1_nat                                                simp: in_prime_factors_iff field_simps)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr1. inverse (1 - 1 / real p))\n  \\<le> (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n           inverse (1 - 1 / real x))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "hence \"inverse (\\<Prod>p | prime p \\<and> real p \\<le> ln n. 1 - 1 / p) \\<ge> inverse (\\<Prod>p\\<in>Pr1. 1 - 1 / p)\""], ["proof (prove)\nusing this:\n  (\\<Prod>p\\<in>Pr1. inverse (1 - 1 / real p))\n  \\<le> (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n           inverse (1 - 1 / real x))\n\ngoal (1 subgoal):\n 1. inverse (\\<Prod>p\\<in>Pr1. 1 - 1 / real p)\n    \\<le> inverse\n           (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n              1 - 1 / real x)", "by (subst (1 2) prod_inversef [symmetric]) auto"], ["proof (state)\nthis:\n  inverse (\\<Prod>p\\<in>Pr1. 1 - 1 / real p)\n  \\<le> inverse\n         (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n            1 - 1 / real x)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "hence bound1: \"(\\<Prod>p\\<in>Pr1. 1 - 1 / p) \\<ge> lb1 n\""], ["proof (prove)\nusing this:\n  inverse (\\<Prod>p\\<in>Pr1. 1 - 1 / real p)\n  \\<le> inverse\n         (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n            1 - 1 / real x)\n\ngoal (1 subgoal):\n 1. lb1 n \\<le> (\\<Prod>p\\<in>Pr1. 1 - 1 / real p)", "unfolding lb1_def"], ["proof (prove)\nusing this:\n  inverse (\\<Prod>p\\<in>Pr1. 1 - 1 / real p)\n  \\<le> inverse\n         (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n            1 - 1 / real x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n       1 - 1 / real p)\n    \\<le> (\\<Prod>p\\<in>Pr1. 1 - 1 / real p)", "by (rule inverse_le_imp_le)\n         (auto intro!: prod_pos simp: in_prime_factors_iff dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  lb1 n \\<le> (\\<Prod>p\\<in>Pr1. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"lb1 n * lb2 n \\<le> (\\<Prod>p\\<in>Pr1. 1 - 1 / p) * (\\<Prod>p\\<in>Pr2. 1 - 1 / p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb1 n * lb2 n\n    \\<le> (\\<Prod>p\\<in>Pr1. 1 - 1 / real p) *\n          (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)", "by (intro mult_mono bound1 bound2 prod_nonneg ballI)\n         (auto simp: in_prime_factors_iff lb1_def lb2_def dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  lb1 n * lb2 n\n  \\<le> (\\<Prod>p\\<in>Pr1. 1 - 1 / real p) *\n        (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  lb1 n * lb2 n\n  \\<le> (\\<Prod>p\\<in>Pr1. 1 - 1 / real p) *\n        (\\<Prod>p\\<in>Pr2. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"\\<dots> = (\\<Prod>p\\<in>Pr1 \\<union> Pr2. 1 - 1 / p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr1. 1 - 1 / real p) *\n    (\\<Prod>p\\<in>Pr2. 1 - 1 / real p) =\n    (\\<Prod>p\\<in>Pr1 \\<union> Pr2. 1 - 1 / real p)", "by (subst prod.union_disjoint) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr1. 1 - 1 / real p) * (\\<Prod>p\\<in>Pr2. 1 - 1 / real p) =\n  (\\<Prod>p\\<in>Pr1 \\<union> Pr2. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr1. 1 - 1 / real p) * (\\<Prod>p\\<in>Pr2. 1 - 1 / real p) =\n  (\\<Prod>p\\<in>Pr1 \\<union> Pr2. 1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"Pr1 \\<union> Pr2 = Pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pr1 \\<union> Pr2 = Pr", "by auto"], ["proof (state)\nthis:\n  Pr1 \\<union> Pr2 = Pr\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "also"], ["proof (state)\nthis:\n  Pr1 \\<union> Pr2 = Pr\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "have \"(\\<Prod>p\\<in>Pr. 1 - 1 / p) = totient n / n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr. 1 - 1 / real p) = real (totient n) / real n", "using n"], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>Pr. 1 - 1 / real p) = real (totient n) / real n", "by (subst totient_formula2) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>Pr. 1 - 1 / real p) = real (totient n) / real n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 + log 2 (real n) \\<le> (ln (real n))\\<^sup>2;\n        2 < n\\<rbrakk>\n       \\<Longrightarrow> lb1 n * lb2 n \\<le> real (totient n) / real n", "finally"], ["proof (chain)\npicking this:\n  lb1 n * lb2 n \\<le> real (totient n) / real n", "show \"real (totient n) / real n \\<ge> lb1 n * lb2 n\""], ["proof (prove)\nusing this:\n  lb1 n * lb2 n \\<le> real (totient n) / real n\n\ngoal (1 subgoal):\n 1. lb1 n * lb2 n \\<le> real (totient n) / real n", "by (simp add: lb1_def lb2_def)"], ["proof (state)\nthis:\n  lb1 n * lb2 n \\<le> real (totient n) / real n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     lb1 n * lb2 n \\<le> real (totient n) / real n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     lb1 n * lb2 n \\<le> real (totient n) / real n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "have \"eventually (\\<lambda>n. \\<bar>lb1 n - C / ln (ln n)\\<bar> \\<le> 10 * C / ln (ln n) ^ 2) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n       \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2", "unfolding lb1_def C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n                1 - 1 / real p) -\n             third_mertens_const / ln (ln (real n))\\<bar>\n       \\<le> 10 * third_mertens_const / (ln (ln (real n)))\\<^sup>2", "using mertens_third_theorem_strong"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}.\n              1 - 1 / real p) -\n           third_mertens_const / ln x\\<bar>\n     \\<le> 10 * third_mertens_const / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       \\<bar>(\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> ln (real n)}.\n                1 - 1 / real p) -\n             third_mertens_const / ln (ln (real n))\\<bar>\n       \\<le> 10 * third_mertens_const / (ln (ln (real n)))\\<^sup>2", "by (rule eventually_compose_filterlim) real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n     \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n     \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "have \"eventually (\\<lambda>n. (1 - \\<epsilon>) * C / ln (ln n) < lb1' n * lb2 n) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n", "unfolding lb1'_def lb2_def C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * third_mertens_const / ln (ln (real n))\n       < (third_mertens_const / ln (ln (real n)) -\n          10 * third_mertens_const / (ln (ln (real n)))\\<^sup>2) *\n         (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))", "using third_mertens_const_pos \\<open>\\<epsilon> > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < third_mertens_const\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * third_mertens_const / ln (ln (real n))\n       < (third_mertens_const / ln (ln (real n)) -\n          10 * third_mertens_const / (ln (ln (real n)))\\<^sup>2) *\n         (1 - 1 / ln (real n)) powr (ln (real n) / ln (ln (real n)))", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     lb1 n * lb2 n \\<le> real (totient n) / real n\n  \\<forall>\\<^sub>F n in sequentially.\n     \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n     \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2\n  \\<forall>\\<^sub>F n in sequentially.\n     (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n", "show \"eventually (\\<lambda>n. totient n > (1 - \\<epsilon>) * C * n / ln (ln n)) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     lb1 n * lb2 n \\<le> real (totient n) / real n\n  \\<forall>\\<^sub>F n in sequentially.\n     \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n     \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2\n  \\<forall>\\<^sub>F n in sequentially.\n     (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "using eventually_gt_at_top[of 0]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     lb1 n * lb2 n \\<le> real (totient n) / real n\n  \\<forall>\\<^sub>F n in sequentially.\n     \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n     \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2\n  \\<forall>\\<^sub>F n in sequentially.\n     (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n\n  eventually ((<) (0::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>lb1 n * lb2 n \\<le> real (totient n) / real n;\n        \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n        \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2;\n        (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n;\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> (1 - \\<epsilon>) * C * real n / ln (ln (real n))\n                         < real (totient n)", "case (elim n)"], ["proof (state)\nthis:\n  lb1 n * lb2 n \\<le> real (totient n) / real n\n  \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n  \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2\n  (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>lb1 n * lb2 n \\<le> real (totient n) / real n;\n        \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n        \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2;\n        (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n;\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> (1 - \\<epsilon>) * C * real n / ln (ln (real n))\n                         < real (totient n)", "have \"(1 - \\<epsilon>) * C / ln (ln n) < lb1' n * lb2 n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n", "by fact"], ["proof (state)\nthis:\n  (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>lb1 n * lb2 n \\<le> real (totient n) / real n;\n        \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n        \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2;\n        (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n;\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> (1 - \\<epsilon>) * C * real n / ln (ln (real n))\n                         < real (totient n)", "also"], ["proof (state)\nthis:\n  (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>lb1 n * lb2 n \\<le> real (totient n) / real n;\n        \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n        \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2;\n        (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n;\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> (1 - \\<epsilon>) * C * real n / ln (ln (real n))\n                         < real (totient n)", "have \"lb1' n \\<le> lb1 n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb1' n \\<le> lb1 n", "unfolding lb1'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C / ln (ln (real n)) - 10 * C / (ln (ln (real n)))\\<^sup>2 \\<le> lb1 n", "using elim"], ["proof (prove)\nusing this:\n  lb1 n * lb2 n \\<le> real (totient n) / real n\n  \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n  \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2\n  (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n\n  0 < n\n\ngoal (1 subgoal):\n 1. C / ln (ln (real n)) - 10 * C / (ln (ln (real n)))\\<^sup>2 \\<le> lb1 n", "by linarith"], ["proof (state)\nthis:\n  lb1' n \\<le> lb1 n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>lb1 n * lb2 n \\<le> real (totient n) / real n;\n        \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n        \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2;\n        (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n;\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> (1 - \\<epsilon>) * C * real n / ln (ln (real n))\n                         < real (totient n)", "hence \"lb1' n * lb2 n \\<le> lb1 n * lb2 n\""], ["proof (prove)\nusing this:\n  lb1' n \\<le> lb1 n\n\ngoal (1 subgoal):\n 1. lb1' n * lb2 n \\<le> lb1 n * lb2 n", "by (intro mult_right_mono) (auto simp: lb2_def)"], ["proof (state)\nthis:\n  lb1' n * lb2 n \\<le> lb1 n * lb2 n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>lb1 n * lb2 n \\<le> real (totient n) / real n;\n        \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n        \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2;\n        (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n;\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> (1 - \\<epsilon>) * C * real n / ln (ln (real n))\n                         < real (totient n)", "also"], ["proof (state)\nthis:\n  lb1' n * lb2 n \\<le> lb1 n * lb2 n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>lb1 n * lb2 n \\<le> real (totient n) / real n;\n        \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n        \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2;\n        (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n;\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> (1 - \\<epsilon>) * C * real n / ln (ln (real n))\n                         < real (totient n)", "have \"\\<dots> \\<le> totient n / n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lb1 n * lb2 n \\<le> real (totient n) / real n", "by fact"], ["proof (state)\nthis:\n  lb1 n * lb2 n \\<le> real (totient n) / real n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>lb1 n * lb2 n \\<le> real (totient n) / real n;\n        \\<bar>lb1 n - C / ln (ln (real n))\\<bar>\n        \\<le> 10 * C / (ln (ln (real n)))\\<^sup>2;\n        (1 - \\<epsilon>) * C / ln (ln (real n)) < lb1' n * lb2 n;\n        0 < n\\<rbrakk>\n       \\<Longrightarrow> (1 - \\<epsilon>) * C * real n / ln (ln (real n))\n                         < real (totient n)", "finally"], ["proof (chain)\npicking this:\n  (1 - \\<epsilon>) * C / ln (ln (real n)) < real (totient n) / real n", "show \"totient n > (1 - \\<epsilon>) * C * n / (ln (ln n))\""], ["proof (prove)\nusing this:\n  (1 - \\<epsilon>) * C / ln (ln (real n)) < real (totient n) / real n\n\ngoal (1 subgoal):\n 1. (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  (1 - \\<epsilon>) * C / ln (ln (real n)) < real (totient n) / real n\n  0 < n\n\ngoal (1 subgoal):\n 1. (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (1 - \\<epsilon>) * C * real n / ln (ln (real n)) < real (totient n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Next, we examine the `worst case' of $\\varphi(n)$ where \\<open>n\\<close> is the primorial of $x$.\n  In this case, we have $\\varphi(n) < c n / \\ln\\ln n$ for any $c > C$ for all sufficiently\n  large $n$.\n\\<close>"], ["", "theorem (in prime_number_theorem) totient_primorial_less:\n  fixes \\<epsilon> :: real\n  defines \"C \\<equiv> third_mertens_const\" and \"h \\<equiv> primorial\"\n  assumes \"\\<epsilon> > 0\"\n  shows   \"eventually (\\<lambda>x. totient (h x) < (1 + \\<epsilon>) * C * h x / ln (ln (h x))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"C > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < C", "by (simp add: C_def third_mertens_const_pos)"], ["proof (state)\nthis:\n  0 < C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"(\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x))) \\<sim>[at_top] (\\<lambda>x. (1 + \\<epsilon>) * C / ln (\\<theta> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * C /\n        ln (ln (real\n                 (h x)))) \\<sim>[at_top] (\\<lambda>x.\n       (1 + \\<epsilon>) * C / ln (\\<theta> x))", "by (simp add: ln_primorial h_def)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>x.\n     (1 + \\<epsilon>) * C / ln (\\<theta> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>x.\n     (1 + \\<epsilon>) * C / ln (\\<theta> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. (1 + \\<epsilon>) * C / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * C /\n        ln (\\<theta>\n             x)) \\<sim>[at_top] (\\<lambda>x. (1 + \\<epsilon>) * C / ln x)", "by (intro asymp_equiv_intros ln_\\<theta>_asymp_equiv)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C /\n      ln (\\<theta>\n           x)) \\<sim>[at_top] (\\<lambda>x. (1 + \\<epsilon>) * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>a.\n     (1 + \\<epsilon>) * C / ln a)", "have \"(\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x)) - (1 + \\<epsilon>) * C / ln x) \\<in> o(\\<lambda>x. (1 + \\<epsilon>) * C / ln x)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C /\n      ln (ln (real\n               (h x)))) \\<sim>[at_top] (\\<lambda>a.\n     (1 + \\<epsilon>) * C / ln a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n        (1 + \\<epsilon>) * C / ln x)\n    \\<in> o(\\<lambda>x. (1 + \\<epsilon>) * C / ln x)", "by (rule asymp_equiv_imp_diff_smallo)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (1 + \\<epsilon>) * C / ln x)\n  \\<in> o(\\<lambda>x. (1 + \\<epsilon>) * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (1 + \\<epsilon>) * C / ln x)\n  \\<in> o(\\<lambda>x. (1 + \\<epsilon>) * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"(\\<lambda>x. (1 + \\<epsilon>) * C / ln x) \\<in> O(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + \\<epsilon>) * C / ln x) \\<in> O(\\<lambda>x. 1 / ln x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + \\<epsilon>) * C / ln x) \\<in> O(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + \\<epsilon>) * C / ln x) \\<in> O(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"(\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x)) - (1 + \\<epsilon>) * C / ln x) =\n               (\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x)) - C / ln x - \\<epsilon> * C / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n        (1 + \\<epsilon>) * C / ln x) =\n    (\\<lambda>x.\n        (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n        \\<epsilon> * C / ln x)", "by (simp add: algebra_simps fun_eq_iff add_divide_distrib)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (1 + \\<epsilon>) * C / ln x) =\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n      \\<epsilon> * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n      \\<epsilon> * C / ln x)\n  \\<in> o(\\<lambda>x. 1 / ln x)", "have \"(\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x)) - C / ln x - \\<epsilon> * C / ln x) \\<in> o(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n      \\<epsilon> * C / ln x)\n  \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n        \\<epsilon> * C / ln x)\n    \\<in> o(\\<lambda>x. 1 / ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n      \\<epsilon> * C / ln x)\n  \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "hence \"(\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x)) - C / ln x - \\<epsilon> * C / ln x - \n           ((\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) - C / ln x)) \\<in> o(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n      \\<epsilon> * C / ln x)\n  \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n        \\<epsilon> * C / ln x -\n        ((\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n         C / ln x))\n    \\<in> o(\\<lambda>x. 1 / ln x)", "unfolding C_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * third_mertens_const / ln (ln (real (h x))) -\n      third_mertens_const / ln x -\n      \\<epsilon> * third_mertens_const / ln x)\n  \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * third_mertens_const / ln (ln (real (h x))) -\n        third_mertens_const / ln x -\n        \\<epsilon> * third_mertens_const / ln x -\n        ((\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n         third_mertens_const / ln x))\n    \\<in> o(\\<lambda>x. 1 / ln x)", "by (rule sum_in_smallo[OF _ landau_o.big_small_trans[OF mertens_third_theorem]]) real_asymp+"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n      \\<epsilon> * C / ln x -\n      ((\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n       C / ln x))\n  \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "hence \"(\\<lambda>x. ((1 + \\<epsilon>) * C / ln (ln (h x)) - (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p)) -\n                 (\\<epsilon> * C / ln x)) \\<in> o(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) - C / ln x -\n      \\<epsilon> * C / ln x -\n      ((\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n       C / ln x))\n  \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n        (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n        \\<epsilon> * C / ln x)\n    \\<in> o(\\<lambda>x. 1 / ln x)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n      \\<epsilon> * C / ln x)\n  \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n      \\<epsilon> * C / ln x)\n  \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"(\\<lambda>x. 1 / ln x) \\<in> O(\\<lambda>x. \\<epsilon> * C / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / ln x) \\<in> O(\\<lambda>x. \\<epsilon> * C / ln x)", "using \\<open>\\<epsilon> > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / ln x) \\<in> O(\\<lambda>x. \\<epsilon> * C / ln x)", "by (simp add: landau_divide_simps C_def third_mertens_const_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / ln x) \\<in> O(\\<lambda>x. \\<epsilon> * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n      \\<epsilon> * C / ln x)\n  \\<in> o(\\<lambda>x. \\<epsilon> * C / ln x)", "have \"(\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x)) - (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / p))\n                  \\<sim>[at_top] (\\<lambda>x. \\<epsilon> * C / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p) -\n      \\<epsilon> * C / ln x)\n  \\<in> o(\\<lambda>x. \\<epsilon> * C / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n        (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}.\n           1 -\n           1 / real x)) \\<sim>[at_top] (\\<lambda>x. \\<epsilon> * C / ln x)", "by (rule smallo_imp_asymp_equiv)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}.\n         1 - 1 / real x)) \\<sim>[at_top] (\\<lambda>x. \\<epsilon> * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "hence \"eventually (\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x)) - (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / p) > 0\n                          \\<longleftrightarrow> \\<epsilon> * C / ln x > 0) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n      (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}.\n         1 - 1 / real x)) \\<sim>[at_top] (\\<lambda>x. \\<epsilon> * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (0 < (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n            (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}.\n               1 - 1 / real x)) =\n       (0 < \\<epsilon> * C / ln x)", "by (rule asymp_equiv_eventually_pos_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     (0 < (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n          (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}.\n             1 - 1 / real x)) =\n     (0 < \\<epsilon> * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     (0 < (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n          (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}.\n             1 - 1 / real x)) =\n     (0 < \\<epsilon> * C / ln x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"eventually (\\<lambda>x. \\<epsilon> * C / ln x > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < \\<epsilon> * C / ln x", "using \\<open>\\<epsilon> > 0\\<close> \\<open>C > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  0 < C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < \\<epsilon> * C / ln x", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<epsilon> * C / ln x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     (0 < (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n          (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}.\n             1 - 1 / real x)) =\n     (0 < \\<epsilon> * C / ln x)\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<epsilon> * C / ln x", "have \"eventually (\\<lambda>x. (1 + \\<epsilon>) * C / ln (ln (h x)) >\n                      (\\<Prod>p | prime p \\<and> real p \\<le> x. 1 - 1 / p)) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     (0 < (1 + \\<epsilon>) * C / ln (ln (real (h x))) -\n          (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}.\n             1 - 1 / real x)) =\n     (0 < \\<epsilon> * C / ln x)\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<epsilon> * C / ln x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n       < (1 + \\<epsilon>) * C / ln (ln (real (h x)))", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n     < (1 + \\<epsilon>) * C / ln (ln (real (h x)))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n     < (1 + \\<epsilon>) * C / ln (ln (real (h x)))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n       < (1 + \\<epsilon>) * C / ln (ln (real (h x))) \\<Longrightarrow>\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "case (elim x)"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n  < (1 + \\<epsilon>) * C / ln (ln (real (h x)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n       < (1 + \\<epsilon>) * C / ln (ln (real (h x))) \\<Longrightarrow>\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"h x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < h x", "by (auto simp: h_def primorial_def intro!: prod_pos dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  0 < h x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n       < (1 + \\<epsilon>) * C / ln (ln (real (h x))) \\<Longrightarrow>\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "have \"h x * ((1 + \\<epsilon>) * C / ln (ln (h x))) > totient (h x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (totient (h x))\n    < real (h x) * ((1 + \\<epsilon>) * C / ln (ln (real (h x))))", "using elim primorial_pos[of x]"], ["proof (prove)\nusing this:\n  (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n  < (1 + \\<epsilon>) * C / ln (ln (real (h x)))\n  0 < primorial x\n\ngoal (1 subgoal):\n 1. real (totient (h x))\n    < real (h x) * ((1 + \\<epsilon>) * C / ln (ln (real (h x))))", "unfolding h_def totient_primorial"], ["proof (prove)\nusing this:\n  (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n  < (1 + \\<epsilon>) * C / ln (ln (real (primorial x)))\n  0 < primorial x\n\ngoal (1 subgoal):\n 1. real (primorial x) *\n    (\\<Prod>p\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real p)\n    < real (primorial x) *\n      ((1 + \\<epsilon>) * C / ln (ln (real (primorial x))))", "by (intro mult_strict_left_mono) auto"], ["proof (state)\nthis:\n  real (totient (h x))\n  < real (h x) * ((1 + \\<epsilon>) * C / ln (ln (real (h x))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<Prod>x\\<in>{p. prime p \\<and> real p \\<le> x}. 1 - 1 / real x)\n       < (1 + \\<epsilon>) * C / ln (ln (real (h x))) \\<Longrightarrow>\n       real (totient (h x))\n       < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "thus ?case"], ["proof (prove)\nusing this:\n  real (totient (h x))\n  < real (h x) * ((1 + \\<epsilon>) * C / ln (ln (real (h x))))\n\ngoal (1 subgoal):\n 1. real (totient (h x))\n    < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  real (totient (h x))\n  < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     real (totient (h x))\n     < (1 + \\<epsilon>) * C * real (h x) / ln (ln (real (h x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  It follows that infinitely many values of \\<open>n\\<close> exceed $c n / \\ln (\\ln n)$ when \\<open>c\\<close> is chosen\n  larger than \\<open>C\\<close>.\n\\<close>"], ["", "corollary (in prime_number_theorem) totient_upper_bound:\n  assumes \"\\<epsilon> > 0\"\n  defines \"C \\<equiv> third_mertens_const\"\n  shows   \"frequently (\\<lambda>n. totient n < (1 + \\<epsilon>) * C * n / ln (ln n)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "define h where \"h = primorial\""], ["proof (state)\nthis:\n  h = primorial\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "have \"eventually (\\<lambda>n. totient n < (1 + \\<epsilon>) * C * n / ln (ln n)) (filtermap h at_top)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in filtermap h at_top.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "using totient_primorial_less[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     real (totient (primorial x))\n     < (1 + \\<epsilon>) * third_mertens_const * real (primorial x) /\n       ln (ln (real (primorial x)))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in filtermap h at_top.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "by (simp add: eventually_filtermap C_def h_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in filtermap h at_top.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "hence \"frequently (\\<lambda>n. totient n < (1 + \\<epsilon>) * C * n / ln (ln n)) (filtermap h at_top)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in filtermap h at_top.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in filtermap h at_top.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "by (intro eventually_frequently) (auto simp: filtermap_bot_iff)"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "moreover"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "from this and primorial_at_top"], ["proof (chain)\npicking this:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n  filterlim primorial sequentially at_top", "have \"filtermap h at_top \\<le> at_top\""], ["proof (prove)\nusing this:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n  filterlim primorial sequentially at_top\n\ngoal (1 subgoal):\n 1. filtermap h at_top \\<le> sequentially", "by (simp add: filterlim_def h_def)"], ["proof (state)\nthis:\n  filtermap h at_top \\<le> sequentially\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n  filtermap h at_top \\<le> sequentially", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>\\<^sub>F n in filtermap h at_top.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n  filtermap h at_top \\<le> sequentially\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F n in sequentially.\n       real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))", "by (rule frequently_mono_filter)"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>F n in sequentially.\n     real (totient n) < (1 + \\<epsilon>) * C * real n / ln (ln (real n))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Again, the following alternative formulation is somewhat nicer to prove:\n\\<close>"], ["", "lemma (in prime_number_theorem) totient_primorial'_asymp_equiv:\n  \"(\\<lambda>k. totient (primorial' k)) \\<sim>[at_top] (\\<lambda>k. third_mertens_const * primorial' k / ln k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) / ln (real k))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) / ln (real k))", "let ?C = third_mertens_const"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) / ln (real k))", "have \"(\\<lambda>k. totient (primorial' k)) \\<sim>[at_top] (\\<lambda>k. primorial' k * (\\<Prod>i<k. 1 - 1 / nth_prime i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     real (primorial' k) * (\\<Prod>i<k. 1 - 1 / real (nth_prime i)))", "by (subst totient_primorial') auto"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   real (primorial' k) * (\\<Prod>i<k. 1 - 1 / real (nth_prime i)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) / ln (real k))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   real (primorial' k) * (\\<Prod>i<k. 1 - 1 / real (nth_prime i)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) / ln (real k))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>k. primorial' k * (?C / ln k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (primorial' k) *\n        (\\<Prod>i<k.\n            1 -\n            1 /\n            real\n             (nth_prime\n               i))) \\<sim>[sequentially] (\\<lambda>k.\n       real (primorial' k) * (third_mertens_const / ln (real k)))", "by (intro asymp_equiv_intros mertens_third_theorem_asymp_equiv')"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      real (primorial' k) *\n      (\\<Prod>i<k.\n          1 -\n          1 /\n          real\n           (nth_prime\n             i))) \\<sim>[sequentially] (\\<lambda>k.\n     real (primorial' k) * (third_mertens_const / ln (real k)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) / ln (real k))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>a.\n   real (primorial' a) * (third_mertens_const / ln (real a)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>a.\n   real (primorial' a) * (third_mertens_const / ln (real a)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) / ln (real k))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   third_mertens_const * real (primorial' k) / ln (real k))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prime_number_theorem) totient_primorial'_asymp_equiv':\n  \"(\\<lambda>k. totient (primorial' k)) \\<sim>[at_top]\n      (\\<lambda>k. third_mertens_const * primorial' k / ln (ln (primorial' k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) /\n     ln (ln (real (primorial' k))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) /\n     ln (ln (real (primorial' k))))", "let ?C = third_mertens_const"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) /\n     ln (ln (real (primorial' k))))", "have \"(\\<lambda>k. totient (primorial' k)) \\<sim>[at_top] (\\<lambda>k. third_mertens_const * primorial' k / ln k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) / ln (real k))", "by (rule totient_primorial'_asymp_equiv)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   third_mertens_const * real (primorial' k) / ln (real k))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) /\n     ln (ln (real (primorial' k))))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   third_mertens_const * real (primorial' k) / ln (real k))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) /\n     ln (ln (real (primorial' k))))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>k. third_mertens_const * primorial' k / ln (ln (primorial' k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        third_mertens_const * real (primorial' k) /\n        ln (real\n             k)) \\<sim>[sequentially] (\\<lambda>k.\n    third_mertens_const * real (primorial' k) /\n    ln (ln (real (primorial' k))))", "by (intro asymp_equiv_intros asymp_equiv_symI[OF ln_ln_primorial'_asymp_equiv])"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      third_mertens_const * real (primorial' k) /\n      ln (real\n           k)) \\<sim>[sequentially] (\\<lambda>k.\n  third_mertens_const * real (primorial' k) / ln (ln (real (primorial' k))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) /\n     ln (ln (real (primorial' k))))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>a.\n   third_mertens_const * real (primorial' a) /\n   ln (ln (real (primorial' a))))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>a.\n   third_mertens_const * real (primorial' a) /\n   ln (ln (real (primorial' a))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (totient\n           (primorial'\n             x))) \\<sim>[sequentially] (\\<lambda>k.\n     third_mertens_const * real (primorial' k) /\n     ln (ln (real (primorial' k))))", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   third_mertens_const * real (primorial' k) /\n   ln (ln (real (primorial' k))))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  All in all, $\\varphi(n)$ has minimal order $cn / \\ln\\ln n$:\n\\<close>"], ["", "theorem (in prime_number_theorem)\n  liminf_totient: \"liminf (\\<lambda>n. totient n * ln (ln n) / n) = third_mertens_const\"\n    (is \"_ = ereal ?c\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x)) =\n    ereal third_mertens_const", "proof (intro antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const\n 2. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "have \"(\\<lambda>k. totient (primorial' k) / (?c * primorial' k / ln (ln (primorial' k)))) \\<longlonglongrightarrow> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (totient (primorial' k)) /\n        (third_mertens_const * real (primorial' k) /\n         ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> 1", "using totient_primorial'_asymp_equiv'"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real\n       (totient\n         (primorial'\n           x))) \\<sim>[sequentially] (\\<lambda>k.\n   third_mertens_const * real (primorial' k) /\n   ln (ln (real (primorial' k))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (totient (primorial' k)) /\n        (third_mertens_const * real (primorial' k) /\n         ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> 1", "by (intro asymp_equivD_strong eventually_mono[OF eventually_gt_at_top[of 1]]) auto"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      real (totient (primorial' k)) /\n      (third_mertens_const * real (primorial' k) /\n       ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> 1\n\ngoal (2 subgoals):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const\n 2. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "hence \"(\\<lambda>k. totient (primorial' k) / (?c * primorial' k / ln (ln (primorial' k))) * ?c)\n             \\<longlonglongrightarrow> 1 * ?c\""], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      real (totient (primorial' k)) /\n      (third_mertens_const * real (primorial' k) /\n       ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (totient (primorial' k)) /\n        (third_mertens_const * real (primorial' k) /\n         ln (ln (real (primorial' k)))) *\n        third_mertens_const)\n    \\<longlonglongrightarrow> 1 * third_mertens_const", "by (intro tendsto_mult) auto"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      real (totient (primorial' k)) /\n      (third_mertens_const * real (primorial' k) /\n       ln (ln (real (primorial' k)))) *\n      third_mertens_const)\n  \\<longlonglongrightarrow> 1 * third_mertens_const\n\ngoal (2 subgoals):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const\n 2. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "hence \"(\\<lambda>k. totient (primorial' k) / (primorial' k / ln (ln (primorial' k)))) \\<longlonglongrightarrow> ?c\""], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      real (totient (primorial' k)) /\n      (third_mertens_const * real (primorial' k) /\n       ln (ln (real (primorial' k)))) *\n      third_mertens_const)\n  \\<longlonglongrightarrow> 1 * third_mertens_const\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (totient (primorial' k)) /\n        (real (primorial' k) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> third_mertens_const", "using third_mertens_const_pos"], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      real (totient (primorial' k)) /\n      (third_mertens_const * real (primorial' k) /\n       ln (ln (real (primorial' k)))) *\n      third_mertens_const)\n  \\<longlonglongrightarrow> 1 * third_mertens_const\n  0 < third_mertens_const\n\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        real (totient (primorial' k)) /\n        (real (primorial' k) / ln (ln (real (primorial' k)))))\n    \\<longlonglongrightarrow> third_mertens_const", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>k.\n      real (totient (primorial' k)) /\n      (real (primorial' k) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> third_mertens_const\n\ngoal (2 subgoals):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const\n 2. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "hence \"liminf ((\\<lambda>n. totient n * ln (ln n) / n) \\<circ> primorial') = ereal ?c\""], ["proof (prove)\nusing this:\n  (\\<lambda>k.\n      real (totient (primorial' k)) /\n      (real (primorial' k) / ln (ln (real (primorial' k)))))\n  \\<longlonglongrightarrow> third_mertens_const\n\ngoal (1 subgoal):\n 1. liminf\n     (\\<lambda>x.\n         ereal\n          (((\\<lambda>n.\n                real (totient n) * ln (ln (real n)) / real n) \\<circ>\n            primorial')\n            x)) =\n    ereal third_mertens_const", "by (intro lim_imp_Liminf tendsto_ereal) simp_all"], ["proof (state)\nthis:\n  liminf\n   (\\<lambda>x.\n       ereal\n        (((\\<lambda>n. real (totient n) * ln (ln (real n)) / real n) \\<circ>\n          primorial')\n          x)) =\n  ereal third_mertens_const\n\ngoal (2 subgoals):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const\n 2. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "hence \"?c = liminf ((\\<lambda>n. ereal (totient n * ln (ln n) / n)) \\<circ> primorial')\""], ["proof (prove)\nusing this:\n  liminf\n   (\\<lambda>x.\n       ereal\n        (((\\<lambda>n. real (totient n) * ln (ln (real n)) / real n) \\<circ>\n          primorial')\n          x)) =\n  ereal third_mertens_const\n\ngoal (1 subgoal):\n 1. ereal third_mertens_const =\n    liminf\n     ((\\<lambda>n.\n          ereal (real (totient n) * ln (ln (real n)) / real n)) \\<circ>\n      primorial')", "by (simp add: o_def)"], ["proof (state)\nthis:\n  ereal third_mertens_const =\n  liminf\n   ((\\<lambda>n.\n        ereal (real (totient n) * ln (ln (real n)) / real n)) \\<circ>\n    primorial')\n\ngoal (2 subgoals):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const\n 2. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "also"], ["proof (state)\nthis:\n  ereal third_mertens_const =\n  liminf\n   ((\\<lambda>n.\n        ereal (real (totient n) * ln (ln (real n)) / real n)) \\<circ>\n    primorial')\n\ngoal (2 subgoals):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const\n 2. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "have \"\\<dots> \\<ge> liminf (\\<lambda>n. totient n * ln (ln n) / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> liminf\n           ((\\<lambda>n.\n                ereal\n                 (real (totient n) * ln (ln (real n)) / real n)) \\<circ>\n            primorial')", "using strict_mono_primorial'"], ["proof (prove)\nusing this:\n  strict_mono primorial'\n\ngoal (1 subgoal):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> liminf\n           ((\\<lambda>n.\n                ereal\n                 (real (totient n) * ln (ln (real n)) / real n)) \\<circ>\n            primorial')", "by (rule liminf_subseq_mono)"], ["proof (state)\nthis:\n  liminf (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n  \\<le> liminf\n         ((\\<lambda>n.\n              ereal (real (totient n) * ln (ln (real n)) / real n)) \\<circ>\n          primorial')\n\ngoal (2 subgoals):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const\n 2. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "finally"], ["proof (chain)\npicking this:\n  liminf (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n  \\<le> ereal third_mertens_const", "show \"liminf (\\<lambda>n. totient n * ln (ln n) / n) \\<le> ?c\""], ["proof (prove)\nusing this:\n  liminf (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n  \\<le> ereal third_mertens_const\n\ngoal (1 subgoal):\n 1. liminf\n     (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n    \\<le> ereal third_mertens_const", "."], ["proof (state)\nthis:\n  liminf (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n  \\<le> ereal third_mertens_const\n\ngoal (1 subgoal):\n 1. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "show \"liminf (\\<lambda>n. totient n * ln (ln n) / n) \\<ge> ?c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal third_mertens_const\n    \\<le> liminf\n           (\\<lambda>x.\n               ereal (real (totient x) * ln (ln (real x)) / real x))", "unfolding le_Liminf_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y<ereal third_mertens_const.\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal third_mertens_const \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "fix C'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal third_mertens_const \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "assume \"C' < ereal ?c\""], ["proof (state)\nthis:\n  C' < ereal third_mertens_const\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal third_mertens_const \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "from ereal_dense2[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>z. C' < ereal z \\<and> ereal z < ereal third_mertens_const", "obtain C where C: \"C < ?c\" \"ereal C > C'\""], ["proof (prove)\nusing this:\n  \\<exists>z. C' < ereal z \\<and> ereal z < ereal third_mertens_const\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C < third_mertens_const; C' < ereal C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C < third_mertens_const\n  C' < ereal C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal third_mertens_const \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "define \\<epsilon> where \"\\<epsilon> = 1 - C / ?c\""], ["proof (state)\nthis:\n  \\<epsilon> = 1 - C / third_mertens_const\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal third_mertens_const \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "from C"], ["proof (chain)\npicking this:\n  C < third_mertens_const\n  C' < ereal C", "have \"\\<epsilon> > 0\""], ["proof (prove)\nusing this:\n  C < third_mertens_const\n  C' < ereal C\n\ngoal (1 subgoal):\n 1. 0 < \\<epsilon>", "using third_mertens_const_pos"], ["proof (prove)\nusing this:\n  C < third_mertens_const\n  C' < ereal C\n  0 < third_mertens_const\n\ngoal (1 subgoal):\n 1. 0 < \\<epsilon>", "by (simp add: \\<epsilon>_def)"], ["proof (state)\nthis:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal third_mertens_const \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "have \"eventually (\\<lambda>n::nat. ln (ln n) > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. 0 < ln (ln (real n))", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. 0 < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal third_mertens_const \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "hence \"eventually (\\<lambda>n. totient n * ln (ln n) / n > C) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. 0 < ln (ln (real n))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       C < real (totient n) * ln (ln (real n)) / real n", "using totient_lower_bound[OF \\<open>\\<epsilon> > 0\\<close>] eventually_gt_at_top[of 1]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. 0 < ln (ln (real n))\n  \\<forall>\\<^sub>F n in sequentially.\n     (1 - \\<epsilon>) * third_mertens_const * real n / ln (ln (real n))\n     < real (totient n)\n  eventually ((<) (1::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       C < real (totient n) * ln (ln (real n)) / real n", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        (1 - \\<epsilon>) * third_mertens_const * real n / ln (ln (real n))\n        < real (totient n);\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> C < real (totient n) * ln (ln (real n)) / real n", "case (elim n)"], ["proof (state)\nthis:\n  0 < ln (ln (real n))\n  (1 - \\<epsilon>) * third_mertens_const * real n / ln (ln (real n))\n  < real (totient n)\n  1 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        (1 - \\<epsilon>) * third_mertens_const * real n / ln (ln (real n))\n        < real (totient n);\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> C < real (totient n) * ln (ln (real n)) / real n", "hence \"totient n * ln (ln n) / n > (1 - \\<epsilon>) * ?c\""], ["proof (prove)\nusing this:\n  0 < ln (ln (real n))\n  (1 - \\<epsilon>) * third_mertens_const * real n / ln (ln (real n))\n  < real (totient n)\n  1 < n\n\ngoal (1 subgoal):\n 1. (1 - \\<epsilon>) * third_mertens_const\n    < real (totient n) * ln (ln (real n)) / real n", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 - \\<epsilon>) * third_mertens_const\n  < real (totient n) * ln (ln (real n)) / real n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        (1 - \\<epsilon>) * third_mertens_const * real n / ln (ln (real n))\n        < real (totient n);\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> C < real (totient n) * ln (ln (real n)) / real n", "also"], ["proof (state)\nthis:\n  (1 - \\<epsilon>) * third_mertens_const\n  < real (totient n) * ln (ln (real n)) / real n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        (1 - \\<epsilon>) * third_mertens_const * real n / ln (ln (real n))\n        < real (totient n);\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> C < real (totient n) * ln (ln (real n)) / real n", "have \"(1 - \\<epsilon>) * ?c = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - \\<epsilon>) * third_mertens_const = C", "using third_mertens_const_pos"], ["proof (prove)\nusing this:\n  0 < third_mertens_const\n\ngoal (1 subgoal):\n 1. (1 - \\<epsilon>) * third_mertens_const = C", "by (simp add: field_simps \\<epsilon>_def)"], ["proof (state)\nthis:\n  (1 - \\<epsilon>) * third_mertens_const = C\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>0 < ln (ln (real n));\n        (1 - \\<epsilon>) * third_mertens_const * real n / ln (ln (real n))\n        < real (totient n);\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> C < real (totient n) * ln (ln (real n)) / real n", "finally"], ["proof (chain)\npicking this:\n  C < real (totient n) * ln (ln (real n)) / real n", "show ?case"], ["proof (prove)\nusing this:\n  C < real (totient n) * ln (ln (real n)) / real n\n\ngoal (1 subgoal):\n 1. C < real (totient n) * ln (ln (real n)) / real n", "."], ["proof (state)\nthis:\n  C < real (totient n) * ln (ln (real n)) / real n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     C < real (totient n) * ln (ln (real n)) / real n\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < ereal third_mertens_const \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially.\n          y < ereal (real (totient x) * ln (ln (real x)) / real x)", "thus \"eventually (\\<lambda>n. ereal (totient n * ln (ln n) / n) > C') at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     C < real (totient n) * ln (ln (real n)) / real n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       C' < ereal (real (totient n) * ln (ln (real n)) / real n)", "by eventually_elim (rule less_trans[OF C(2)], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     C' < ereal (real (totient n) * ln (ln (real n)) / real n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ereal third_mertens_const\n  \\<le> liminf\n         (\\<lambda>x. ereal (real (totient x) * ln (ln (real x)) / real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "unbundle no_prime_counting_notation"], ["", "(*>*)"], ["", "end"]]}