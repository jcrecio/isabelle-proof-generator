{"file_name": "/home/qj213/afp-2021-10-22/thys/Prime_Distribution_Elementary/Elementary_Prime_Bounds.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Prime_Distribution_Elementary", "problem_names": ["lemma twopow_le_central_binomial: \"2 ^ n \\<le> ((2 * n) choose n)\"", "lemma fourpow_gt_central_binomial:\n  assumes \"n > 0\"\n  shows   \"4 ^ n > ((2 * n) choose n)\"", "lemma \n  fixes n :: nat\n  assumes n: \"n \\<ge> 1\"\n  shows   \\<pi>_bounds_aux: \"ln (fact (2 * n)) - 2 * ln (fact n) =\n                           prime_sum_upto (\\<lambda>p. S n p * ln p) (2 * n)\"\n  and     \\<pi>_lower_bound_ge_strong: \"\\<pi> (2 * n) \\<ge> ln 2 / 2 * (2 * n) / ln (2 * n)\"", "lemma ln_2_ge_56_81: \"ln 2 \\<ge> (56 / 81 :: real)\"", "theorem \\<pi>_lower_bound:\n  fixes x :: real\n  assumes x: \"x \\<ge> 2\"\n  shows   \"\\<pi> x > (1 / 6) * (x / ln x)\"", "lemma \\<pi>_at_top: \"filterlim primes_pi at_top at_top\"", "lemma \\<theta>_double_less:\n  fixes n :: nat\n  assumes n: \"n > 0\"\n  shows \"\\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\"", "lemma \\<theta>_twopow_less: \"\\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\"", "theorem \\<theta>_upper_bound_weak:\n  fixes n :: nat\n  assumes n: \"n > 0\"\n  shows   \"\\<theta> n < 4 * ln 2 * n\"", "lemma \\<pi>_upper_bound_aux:\n  fixes c :: real\n  assumes \"c > 0\"\n  defines \"f \\<equiv> (\\<lambda>x. x powr (-c) * ln x)\"\n  assumes x: \"x > 0\"\n  shows \"f x \\<le> 1 / (c * exp 1)\"", "lemma \\<pi>_upper_bound_strong:\n  fixes \\<alpha> :: real and n :: nat\n  assumes n: \"n \\<ge> 2\" and \\<alpha>: \"\\<alpha> \\<in> {0<..<1}\"\n  shows \"\\<pi> n < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * n / ln n\"", "theorem \\<pi>_upper_bound:\n  fixes x :: real\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<pi> x < 3 * (exp (-1) + ln 2) * x / ln x\"", "lemma \\<pi>_bigtheta: \"\\<pi> \\<in> \\<Theta>(\\<lambda>x. x / ln x)\"", "lemma nth_prime_lower_bound_gen:\n  assumes c: \"c > 0\" and n: \"n > 0\"\n  assumes \"\\<And>n. n \\<ge> 2 \\<Longrightarrow> \\<pi> (real n) < (1 / c) * (real n / ln (real n))\"\n  shows \"nth_prime (n - 1) \\<ge> c * (real n * ln (real n))\""], "translations": [["", "lemma twopow_le_central_binomial: \"2 ^ n \\<le> ((2 * n) choose n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ n \\<le> 2 * n choose n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ n \\<le> 2 * n choose n", "have \"2 ^ n * fact n ^ 2 \\<le> (fact (2 * n) :: nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n)", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n)\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "have \"(fact (2 * Suc n) :: nat) = (2 * n + 1) * (2 * n + 2) * fact (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fact (2 * Suc n) = (2 * n + 1) * (2 * n + 2) * fact (2 * n)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  fact (2 * Suc n) = (2 * n + 1) * (2 * n + 2) * fact (2 * n)\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "have \"2 ^ Suc n * fact (Suc n) ^ 2 = 2 ^ n * fact n ^ 2 * 2 * (n + 1) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ Suc n * (fact (Suc n))\\<^sup>2 =\n    2 ^ n * (fact n)\\<^sup>2 * 2 * (n + 1)\\<^sup>2", "by (simp add: algebra_simps power2_eq_square)"], ["proof (state)\nthis:\n  2 ^ Suc n * (fact (Suc n))\\<^sup>2 =\n  2 ^ n * (fact n)\\<^sup>2 * 2 * (n + 1)\\<^sup>2\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "also"], ["proof (state)\nthis:\n  2 ^ Suc n * (fact (Suc n))\\<^sup>2 =\n  2 ^ n * (fact n)\\<^sup>2 * 2 * (n + 1)\\<^sup>2\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "have \"\\<dots> \\<le> fact (2 * n) * 2 * (n + 1) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ n * (fact n)\\<^sup>2 * 2 * (n + 1)\\<^sup>2\n    \\<le> fact (2 * n) * 2 * (n + 1)\\<^sup>2", "by (intro mult_right_mono Suc.IH) auto"], ["proof (state)\nthis:\n  2 ^ n * (fact n)\\<^sup>2 * 2 * (n + 1)\\<^sup>2\n  \\<le> fact (2 * n) * 2 * (n + 1)\\<^sup>2\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "also"], ["proof (state)\nthis:\n  2 ^ n * (fact n)\\<^sup>2 * 2 * (n + 1)\\<^sup>2\n  \\<le> fact (2 * n) * 2 * (n + 1)\\<^sup>2\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "have \"\\<dots> = fact (2 * n) * (2 * (n + 1) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fact (2 * n) * 2 * (n + 1)\\<^sup>2 =\n    fact (2 * n) * (2 * (n + 1)\\<^sup>2)", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  fact (2 * n) * 2 * (n + 1)\\<^sup>2 = fact (2 * n) * (2 * (n + 1)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "also"], ["proof (state)\nthis:\n  fact (2 * n) * 2 * (n + 1)\\<^sup>2 = fact (2 * n) * (2 * (n + 1)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "have \"\\<dots> \\<le> fact (2 * n) * ((2 * n + 1) * (2 * n + 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fact (2 * n) * (2 * (n + 1)\\<^sup>2)\n    \\<le> fact (2 * n) * ((2 * n + 1) * (2 * n + 2))", "by (intro mult_left_mono) (auto simp: power2_eq_square)"], ["proof (state)\nthis:\n  fact (2 * n) * (2 * (n + 1)\\<^sup>2)\n  \\<le> fact (2 * n) * ((2 * n + 1) * (2 * n + 2))\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "also"], ["proof (state)\nthis:\n  fact (2 * n) * (2 * (n + 1)\\<^sup>2)\n  \\<le> fact (2 * n) * ((2 * n + 1) * (2 * n + 2))\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "have \"\\<dots> = fact (2 * Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fact (2 * n) * ((2 * n + 1) * (2 * n + 2)) = fact (2 * Suc n)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  fact (2 * n) * ((2 * n + 1) * (2 * n + 2)) = fact (2 * Suc n)\n\ngoal (2 subgoals):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)\n 2. \\<And>n.\n       2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n) \\<Longrightarrow>\n       2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "finally"], ["proof (chain)\npicking this:\n  2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)\n\ngoal (1 subgoal):\n 1. 2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)", "."], ["proof (state)\nthis:\n  2 ^ Suc n * (fact (Suc n))\\<^sup>2 \\<le> fact (2 * Suc n)\n\ngoal (1 subgoal):\n 1. 2 ^ 0 * (fact 0)\\<^sup>2 \\<le> fact (2 * 0)", "qed simp_all"], ["proof (state)\nthis:\n  2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n)\n\ngoal (1 subgoal):\n 1. 2 ^ n \\<le> 2 * n choose n", "also"], ["proof (state)\nthis:\n  2 ^ n * (fact n)\\<^sup>2 \\<le> fact (2 * n)\n\ngoal (1 subgoal):\n 1. 2 ^ n \\<le> 2 * n choose n", "have \"\\<dots> = (2 * n choose n) * fact n ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fact (2 * n) = (2 * n choose n) * (fact n)\\<^sup>2", "using binomial_fact_lemma[of n \"2 * n\"]"], ["proof (prove)\nusing this:\n  n \\<le> 2 * n \\<Longrightarrow>\n  fact n * fact (2 * n - n) * (2 * n choose n) = fact (2 * n)\n\ngoal (1 subgoal):\n 1. fact (2 * n) = (2 * n choose n) * (fact n)\\<^sup>2", "by (simp add: power2_eq_square mult_ac)"], ["proof (state)\nthis:\n  fact (2 * n) = (2 * n choose n) * (fact n)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ n \\<le> 2 * n choose n", "finally"], ["proof (chain)\npicking this:\n  2 ^ n * (fact n)\\<^sup>2 \\<le> (2 * n choose n) * (fact n)\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  2 ^ n * (fact n)\\<^sup>2 \\<le> (2 * n choose n) * (fact n)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ n \\<le> 2 * n choose n", "by simp"], ["proof (state)\nthis:\n  2 ^ n \\<le> 2 * n choose n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fourpow_gt_central_binomial:\n  assumes \"n > 0\"\n  shows   \"4 ^ n > ((2 * n) choose n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "have \"(\\<Sum>i\\<in>{..2*n}-{n}. ((2 * n) choose i)) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sum ((choose) (2 * n)) ({..2 * n} - {n})", "using assms"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < sum ((choose) (2 * n)) ({..2 * n} - {n})", "by (intro sum_pos) (auto simp: subset_iff)"], ["proof (state)\nthis:\n  0 < sum ((choose) (2 * n)) ({..2 * n} - {n})\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "hence \"((2 * n) choose n) < (\\<Sum>i\\<in>{..2*n}-{n}. ((2 * n) choose i)) + ((2 * n) choose n)\""], ["proof (prove)\nusing this:\n  0 < sum ((choose) (2 * n)) ({..2 * n} - {n})\n\ngoal (1 subgoal):\n 1. 2 * n choose n\n    < sum ((choose) (2 * n)) ({..2 * n} - {n}) + (2 * n choose n)", "by simp"], ["proof (state)\nthis:\n  2 * n choose n\n  < sum ((choose) (2 * n)) ({..2 * n} - {n}) + (2 * n choose n)\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "also"], ["proof (state)\nthis:\n  2 * n choose n\n  < sum ((choose) (2 * n)) ({..2 * n} - {n}) + (2 * n choose n)\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "have \"\\<dots> = (\\<Sum>i \\<in> insert n ({..2*n} - {n}). ((2 * n) choose i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((choose) (2 * n)) ({..2 * n} - {n}) + (2 * n choose n) =\n    sum ((choose) (2 * n)) (insert n ({..2 * n} - {n}))", "by (subst sum.insert) auto"], ["proof (state)\nthis:\n  sum ((choose) (2 * n)) ({..2 * n} - {n}) + (2 * n choose n) =\n  sum ((choose) (2 * n)) (insert n ({..2 * n} - {n}))\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "also"], ["proof (state)\nthis:\n  sum ((choose) (2 * n)) ({..2 * n} - {n}) + (2 * n choose n) =\n  sum ((choose) (2 * n)) (insert n ({..2 * n} - {n}))\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "have \"insert n ({..2*n} - {n}) = {..2*n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert n ({..2 * n} - {n}) = {..2 * n}", "by auto"], ["proof (state)\nthis:\n  insert n ({..2 * n} - {n}) = {..2 * n}\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "also"], ["proof (state)\nthis:\n  insert n ({..2 * n} - {n}) = {..2 * n}\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "have \"(\\<Sum>i\\<le>2*n. ((2 * n) choose i)) = (1 + 1) ^ (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((choose) (2 * n)) {..2 * n} = (1 + 1) ^ (2 * n)", "by (subst binomial) simp_all"], ["proof (state)\nthis:\n  sum ((choose) (2 * n)) {..2 * n} = (1 + 1) ^ (2 * n)\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "also"], ["proof (state)\nthis:\n  sum ((choose) (2 * n)) {..2 * n} = (1 + 1) ^ (2 * n)\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "have \"\\<dots> = 4 ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + 1) ^ (2 * n) = 4 ^ n", "by (subst power_mult) (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  (1 + 1) ^ (2 * n) = 4 ^ n\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "finally"], ["proof (chain)\npicking this:\n  2 * n choose n < 4 ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * n choose n < 4 ^ n\n\ngoal (1 subgoal):\n 1. 2 * n choose n < 4 ^ n", "."], ["proof (state)\nthis:\n  2 * n choose n < 4 ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Lower bound for $\\pi(x)$\\<close>"], ["", "context\n  includes prime_counting_notation\n  fixes S :: \"nat \\<Rightarrow> nat \\<Rightarrow> int\"\n  defines \"S \\<equiv> (\\<lambda>n p. (\\<Sum>m\\<in>{0<..nat \\<lfloor>log p (2*n)\\<rfloor>}. \\<lfloor>2*n/p^m\\<rfloor> - 2 * \\<lfloor>n/p^m\\<rfloor>))\"\nbegin"], ["", "text \\<open>\n  We now first prove the bound $\\pi(x) \\geq \\frac{1}{6} x/\\ln x$ for $x\\geq 2$.\n  The constant could probably be improved for starting points greater than 2; this\n  is true for most of the constants in this section.\n\n  The first step is to show a slightly stronger bound for even numbers, where the\n  constant is $\\frac{1}{2}\\ln 2 \\approx 0.347$:\n\\<close>"], ["", "lemma \n  fixes n :: nat\n  assumes n: \"n \\<ge> 1\"\n  shows   \\<pi>_bounds_aux: \"ln (fact (2 * n)) - 2 * ln (fact n) =\n                           prime_sum_upto (\\<lambda>p. S n p * ln p) (2 * n)\"\n  and     \\<pi>_lower_bound_ge_strong: \"\\<pi> (2 * n) \\<ge> ln 2 / 2 * (2 * n) / ln (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n)) &&&\n    ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "define L :: \"real \\<Rightarrow> nat \\<Rightarrow> nat\" where \"L = (\\<lambda>x p. legendre_aux x p)\""], ["proof (state)\nthis:\n  L = legendre_aux\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"ln (fact (2 * n)) - 2 * ln (fact n) = sum_upto ln (2 * n) - 2 * sum_upto ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    sum_upto (\\<lambda>x. ln (real x)) (real (2 * n)) -\n    2 * sum_upto (\\<lambda>x. ln (real x)) (real n)", "by (simp add: ln_fact_conv_sum_upto)"], ["proof (state)\nthis:\n  ln (fact (2 * n)) - 2 * ln (fact n) =\n  sum_upto (\\<lambda>x. ln (real x)) (real (2 * n)) -\n  2 * sum_upto (\\<lambda>x. ln (real x)) (real n)\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  ln (fact (2 * n)) - 2 * ln (fact n) =\n  sum_upto (\\<lambda>x. ln (real x)) (real (2 * n)) -\n  2 * sum_upto (\\<lambda>x. ln (real x)) (real n)\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"\\<dots> = prime_sum_upto (\\<lambda>p. L (2 * n) p * ln p) (2 * n) -\n                    2 * prime_sum_upto (\\<lambda>p. L n p * ln p) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>x. ln (real x)) (real (2 * n)) -\n    2 * sum_upto (\\<lambda>x. ln (real x)) (real n) =\n    prime_sum_upto (\\<lambda>p. real (L (real (2 * n)) p) * ln (real p))\n     (real (2 * n)) -\n    2 *\n    prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p)) (real n)", "by (subst (1 2) legendre_identity) (auto simp: L_def)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>x. ln (real x)) (real (2 * n)) -\n  2 * sum_upto (\\<lambda>x. ln (real x)) (real n) =\n  prime_sum_upto (\\<lambda>p. real (L (real (2 * n)) p) * ln (real p))\n   (real (2 * n)) -\n  2 *\n  prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p)) (real n)\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>x. ln (real x)) (real (2 * n)) -\n  2 * sum_upto (\\<lambda>x. ln (real x)) (real n) =\n  prime_sum_upto (\\<lambda>p. real (L (real (2 * n)) p) * ln (real p))\n   (real (2 * n)) -\n  2 *\n  prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p)) (real n)\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"prime_sum_upto (\\<lambda>p. L n p * ln p) n = prime_sum_upto (\\<lambda>p. L n p * ln p) (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p))\n     (real n) =\n    prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p))\n     (real (2 * n))", "unfolding prime_sum_upto_altdef2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>real n\\<rfloor>.\n       real (L (real n) p) * ln (real p)) =\n    (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>real (2 * n)\\<rfloor>.\n       real (L (real n) p) * ln (real p))", "by (intro sum.mono_neutral_left[OF finite_subset[of _ \"{..2*n}\"]])\n       (auto dest: prime_gt_0_nat legendre_aux_posD\n             simp: legendre_aux_eq_0 L_def le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p)) (real n) =\n  prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p))\n   (real (2 * n))\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p)) (real n) =\n  prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p))\n   (real (2 * n))\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"prime_sum_upto (\\<lambda>p. L (2*n) p * ln p) (2*n) -\n                 2 * prime_sum_upto (\\<lambda>p. L n p * ln p) (2 * n) =\n               prime_sum_upto (\\<lambda>p. (real (L (2*n) p) - 2 * real (L n p)) * ln p) (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. real (L (real (2 * n)) p) * ln (real p))\n     (real (2 * n)) -\n    2 *\n    prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p))\n     (real (2 * n)) =\n    prime_sum_upto\n     (\\<lambda>p.\n         (real (L (real (2 * n)) p) - 2 * real (L (real n) p)) *\n         ln (real p))\n     (real (2 * n))", "by (simp add: ring_distribs sum_subtractf sum_distrib_left mult.assoc prime_sum_upto_def)"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. real (L (real (2 * n)) p) * ln (real p))\n   (real (2 * n)) -\n  2 *\n  prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p))\n   (real (2 * n)) =\n  prime_sum_upto\n   (\\<lambda>p.\n       (real (L (real (2 * n)) p) - 2 * real (L (real n) p)) * ln (real p))\n   (real (2 * n))\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. real (L (real (2 * n)) p) * ln (real p))\n   (real (2 * n)) -\n  2 *\n  prime_sum_upto (\\<lambda>p. real (L (real n) p) * ln (real p))\n   (real (2 * n)) =\n  prime_sum_upto\n   (\\<lambda>p.\n       (real (L (real (2 * n)) p) - 2 * real (L (real n) p)) * ln (real p))\n   (real (2 * n))\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"\\<dots> = prime_sum_upto (\\<lambda>p. of_int (S n p) * ln p) (2*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto\n     (\\<lambda>p.\n         (real (L (real (2 * n)) p) - 2 * real (L (real n) p)) *\n         ln (real p))\n     (real (2 * n)) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))", "unfolding prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n       (real (L (real (2 * n)) p) - 2 * real (L (real n) p)) *\n       ln (real p)) =\n    (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n       real_of_int (S n p) * ln (real p))", "proof (intro sum.cong refl, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "case (1 p)"], ["proof (state)\nthis:\n  p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "define ub where \"ub = nat \\<lfloor>log p (2*n)\\<rfloor>\""], ["proof (state)\nthis:\n  ub = nat \\<lfloor>log (real p) (real (2 * n))\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "from 1"], ["proof (chain)\npicking this:\n  p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}", "have p: \"prime p\" \"p > 1\" \"p \\<le> 2 * n\""], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}\n\ngoal (1 subgoal):\n 1. prime p &&& 1 < p &&& p \\<le> 2 * n", "using prime_gt_1_nat[of p]"], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}\n  prime p \\<Longrightarrow> 1 < p\n\ngoal (1 subgoal):\n 1. prime p &&& 1 < p &&& p \\<le> 2 * n", "by auto"], ["proof (state)\nthis:\n  prime p\n  1 < p\n  p \\<le> 2 * n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "have \"L (2 * n) p = (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>2*n/p^m\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L (real (2 * n)) p =\n    (\\<Sum>m\\<in>{0<..ub}.\n       nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>)", "unfolding L_def legendre_aux_altdef1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if prime p \\<and> 1 \\<le> real (2 * n)\n     then \\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n   (real (2 * n))\\<rfloor>}.\n            nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>\n     else 0) =\n    (\\<Sum>m\\<in>{0<..ub}.\n       nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>)", "using p 1"], ["proof (prove)\nusing this:\n  prime p\n  1 < p\n  p \\<le> 2 * n\n  p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}\n\ngoal (1 subgoal):\n 1. (if prime p \\<and> 1 \\<le> real (2 * n)\n     then \\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n   (real (2 * n))\\<rfloor>}.\n            nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>\n     else 0) =\n    (\\<Sum>m\\<in>{0<..ub}.\n       nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>)", "by (auto simp: ub_def)"], ["proof (state)\nthis:\n  L (real (2 * n)) p =\n  (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "moreover"], ["proof (state)\nthis:\n  L (real (2 * n)) p =\n  (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "have \"L n p = (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>n/p^m\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L (real n) p =\n    (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real n / real (p ^ m)\\<rfloor>)", "unfolding L_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. legendre_aux (real n) p =\n    (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real n / real (p ^ m)\\<rfloor>)", "proof (intro legendre_aux_altdef2)"], ["proof (state)\ngoal (3 subgoals):\n 1. 1 \\<le> real n\n 2. prime p\n 3. real n < real p ^ Suc ub", "have \"real n = real p powr log p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n = real p powr log (real p) (real n)", "using n p"], ["proof (prove)\nusing this:\n  1 \\<le> n\n  prime p\n  1 < p\n  p \\<le> 2 * n\n\ngoal (1 subgoal):\n 1. real n = real p powr log (real p) (real n)", "by simp"], ["proof (state)\nthis:\n  real n = real p powr log (real p) (real n)\n\ngoal (3 subgoals):\n 1. 1 \\<le> real n\n 2. prime p\n 3. real n < real p ^ Suc ub", "also"], ["proof (state)\nthis:\n  real n = real p powr log (real p) (real n)\n\ngoal (3 subgoals):\n 1. 1 \\<le> real n\n 2. prime p\n 3. real n < real p ^ Suc ub", "have \"log (real p) 2 > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < log (real p) 2", "using p"], ["proof (prove)\nusing this:\n  prime p\n  1 < p\n  p \\<le> 2 * n\n\ngoal (1 subgoal):\n 1. 0 < log (real p) 2", "by auto"], ["proof (state)\nthis:\n  0 < log (real p) 2\n\ngoal (3 subgoals):\n 1. 1 \\<le> real n\n 2. prime p\n 3. real n < real p ^ Suc ub", "hence \"log p n < 1 + of_int \\<lfloor>log p 2 + log p n\\<rfloor>\""], ["proof (prove)\nusing this:\n  0 < log (real p) 2\n\ngoal (1 subgoal):\n 1. log (real p) (real n)\n    < 1 +\n      real_of_int \\<lfloor>log (real p) 2 + log (real p) (real n)\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  log (real p) (real n)\n  < 1 + real_of_int \\<lfloor>log (real p) 2 + log (real p) (real n)\\<rfloor>\n\ngoal (3 subgoals):\n 1. 1 \\<le> real n\n 2. prime p\n 3. real n < real p ^ Suc ub", "hence \"real p powr log p n < real p powr Suc ub\""], ["proof (prove)\nusing this:\n  log (real p) (real n)\n  < 1 + real_of_int \\<lfloor>log (real p) 2 + log (real p) (real n)\\<rfloor>\n\ngoal (1 subgoal):\n 1. real p powr log (real p) (real n) < real p powr real (Suc ub)", "unfolding ub_def"], ["proof (prove)\nusing this:\n  log (real p) (real n)\n  < 1 + real_of_int \\<lfloor>log (real p) 2 + log (real p) (real n)\\<rfloor>\n\ngoal (1 subgoal):\n 1. real p powr log (real p) (real n)\n    < real p powr\n      real (Suc (nat \\<lfloor>log (real p) (real (2 * n))\\<rfloor>))", "using n p"], ["proof (prove)\nusing this:\n  log (real p) (real n)\n  < 1 + real_of_int \\<lfloor>log (real p) 2 + log (real p) (real n)\\<rfloor>\n  1 \\<le> n\n  prime p\n  1 < p\n  p \\<le> 2 * n\n\ngoal (1 subgoal):\n 1. real p powr log (real p) (real n)\n    < real p powr\n      real (Suc (nat \\<lfloor>log (real p) (real (2 * n))\\<rfloor>))", "by (intro powr_less_mono) (auto simp: log_mult)"], ["proof (state)\nthis:\n  real p powr log (real p) (real n) < real p powr real (Suc ub)\n\ngoal (3 subgoals):\n 1. 1 \\<le> real n\n 2. prime p\n 3. real n < real p ^ Suc ub", "also"], ["proof (state)\nthis:\n  real p powr log (real p) (real n) < real p powr real (Suc ub)\n\ngoal (3 subgoals):\n 1. 1 \\<le> real n\n 2. prime p\n 3. real n < real p ^ Suc ub", "have \"\\<dots> = p ^ Suc ub\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real p powr real (Suc ub) = real (p ^ Suc ub)", "using p"], ["proof (prove)\nusing this:\n  prime p\n  1 < p\n  p \\<le> 2 * n\n\ngoal (1 subgoal):\n 1. real p powr real (Suc ub) = real (p ^ Suc ub)", "by (subst powr_realpow) auto"], ["proof (state)\nthis:\n  real p powr real (Suc ub) = real (p ^ Suc ub)\n\ngoal (3 subgoals):\n 1. 1 \\<le> real n\n 2. prime p\n 3. real n < real p ^ Suc ub", "finally"], ["proof (chain)\npicking this:\n  real n < real (p ^ Suc ub)", "show \"real n < real p ^ Suc ub\""], ["proof (prove)\nusing this:\n  real n < real (p ^ Suc ub)\n\ngoal (1 subgoal):\n 1. real n < real p ^ Suc ub", "by simp"], ["proof (state)\nthis:\n  real n < real p ^ Suc ub\n\ngoal (2 subgoals):\n 1. 1 \\<le> real n\n 2. prime p", "qed (use n p in auto)"], ["proof (state)\nthis:\n  L (real n) p =\n  (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real n / real (p ^ m)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "ultimately"], ["proof (chain)\npicking this:\n  L (real (2 * n)) p =\n  (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>)\n  L (real n) p =\n  (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real n / real (p ^ m)\\<rfloor>)", "have \"real (L (2 * n) p) - 2 * real (L n p) =\n                       (\\<Sum>m\\<in>{0<..ub}. real (nat \\<lfloor>2*n/p^m\\<rfloor>) - 2 * real (nat \\<lfloor>n/p^m\\<rfloor>))\""], ["proof (prove)\nusing this:\n  L (real (2 * n)) p =\n  (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>)\n  L (real n) p =\n  (\\<Sum>m\\<in>{0<..ub}. nat \\<lfloor>real n / real (p ^ m)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. real (L (real (2 * n)) p) - 2 * real (L (real n) p) =\n    (\\<Sum>m\\<in>{0<..ub}.\n       real (nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>) -\n       2 * real (nat \\<lfloor>real n / real (p ^ m)\\<rfloor>))", "by (simp add: sum_subtractf sum_distrib_left)"], ["proof (state)\nthis:\n  real (L (real (2 * n)) p) - 2 * real (L (real n) p) =\n  (\\<Sum>m\\<in>{0<..ub}.\n     real (nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>) -\n     2 * real (nat \\<lfloor>real n / real (p ^ m)\\<rfloor>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "also"], ["proof (state)\nthis:\n  real (L (real (2 * n)) p) - 2 * real (L (real n) p) =\n  (\\<Sum>m\\<in>{0<..ub}.\n     real (nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>) -\n     2 * real (nat \\<lfloor>real n / real (p ^ m)\\<rfloor>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "have \"\\<dots> = of_int (\\<Sum>m\\<in>{0<..ub}. \\<lfloor>2*n/p^m\\<rfloor> - 2 * \\<lfloor>n/p^m\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{0<..ub}.\n       real (nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>) -\n       2 * real (nat \\<lfloor>real n / real (p ^ m)\\<rfloor>)) =\n    real_of_int\n     (\\<Sum>m\\<in>{0<..ub}.\n        \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor> -\n        2 * \\<lfloor>real n / real (p ^ m)\\<rfloor>)", "unfolding of_int_sum"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{0<..ub}.\n       real (nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>) -\n       2 * real (nat \\<lfloor>real n / real (p ^ m)\\<rfloor>)) =\n    (\\<Sum>x\\<in>{0<..ub}.\n       real_of_int\n        (\\<lfloor>real (2 * n) / real (p ^ x)\\<rfloor> -\n         2 * \\<lfloor>real n / real (p ^ x)\\<rfloor>))", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>m\\<in>{0<..ub}.\n     real (nat \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor>) -\n     2 * real (nat \\<lfloor>real n / real (p ^ m)\\<rfloor>)) =\n  real_of_int\n   (\\<Sum>m\\<in>{0<..ub}.\n      \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor> -\n      2 * \\<lfloor>real n / real (p ^ m)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       (real (L (real (2 * n)) x) - 2 * real (L (real n) x)) * ln (real x) =\n       real_of_int (S n x) * ln (real x)", "finally"], ["proof (chain)\npicking this:\n  real (L (real (2 * n)) p) - 2 * real (L (real n) p) =\n  real_of_int\n   (\\<Sum>m\\<in>{0<..ub}.\n      \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor> -\n      2 * \\<lfloor>real n / real (p ^ m)\\<rfloor>)", "show ?case"], ["proof (prove)\nusing this:\n  real (L (real (2 * n)) p) - 2 * real (L (real n) p) =\n  real_of_int\n   (\\<Sum>m\\<in>{0<..ub}.\n      \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor> -\n      2 * \\<lfloor>real n / real (p ^ m)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. (real (L (real (2 * n)) p) - 2 * real (L (real n) p)) * ln (real p) =\n    real_of_int (S n p) * ln (real p)", "by (simp add: ub_def S_def)"], ["proof (state)\nthis:\n  (real (L (real (2 * n)) p) - 2 * real (L (real n) p)) * ln (real p) =\n  real_of_int (S n p) * ln (real p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prime_sum_upto\n   (\\<lambda>p.\n       (real (L (real (2 * n)) p) - 2 * real (L (real n) p)) * ln (real p))\n   (real (2 * n)) =\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n\ngoal (2 subgoals):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n 2. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "finally"], ["proof (chain)\npicking this:\n  ln (fact (2 * n)) - 2 * ln (fact n) =\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))", "show eq: \"ln (fact (2 * n)) - 2 * ln (fact n) =\n                      prime_sum_upto (\\<lambda>p. S n p * ln p) (2 * n)\""], ["proof (prove)\nusing this:\n  ln (fact (2 * n)) - 2 * ln (fact n) =\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))", "."], ["proof (state)\nthis:\n  ln (fact (2 * n)) - 2 * ln (fact n) =\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have S_nonneg: \"S n p \\<ge> 0\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> S n p", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n      (2 * real n)\\<rfloor>}.\n               \\<lfloor>2 * real n / real p ^ m\\<rfloor> -\n               2 * \\<lfloor>real n / real p ^ m\\<rfloor>)", "by (intro sum_nonneg) linarith"], ["proof (state)\nthis:\n  0 \\<le> S n ?p\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have S_le: \"S n p \\<le> \\<lfloor>log p (2*n)\\<rfloor>\" if \"prime p\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. S n p \\<le> \\<lfloor>log (real p) (real (2 * n))\\<rfloor>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S n p \\<le> \\<lfloor>log (real p) (real (2 * n))\\<rfloor>", "have \"S n p \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log p (2*n)\\<rfloor>}. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S n p\n    \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n    (real (2 * n))\\<rfloor>}.\n             1)", "unfolding S_def of_nat_mult of_nat_numeral"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p) (2 * real n)\\<rfloor>}.\n       \\<lfloor>2 * real n / real p ^ m\\<rfloor> -\n       2 * \\<lfloor>real n / real p ^ m\\<rfloor>)\n    \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n    (2 * real n)\\<rfloor>}.\n             1)", "by (intro sum_mono) linarith"], ["proof (state)\nthis:\n  S n p\n  \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n  (real (2 * n))\\<rfloor>}.\n           1)\n\ngoal (1 subgoal):\n 1. S n p \\<le> \\<lfloor>log (real p) (real (2 * n))\\<rfloor>", "thus ?thesis"], ["proof (prove)\nusing this:\n  S n p\n  \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n  (real (2 * n))\\<rfloor>}.\n           1)\n\ngoal (1 subgoal):\n 1. S n p \\<le> \\<lfloor>log (real p) (real (2 * n))\\<rfloor>", "using prime_gt_1_nat[of p] that n"], ["proof (prove)\nusing this:\n  S n p\n  \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n  (real (2 * n))\\<rfloor>}.\n           1)\n  prime p \\<Longrightarrow> 1 < p\n  prime p\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. S n p \\<le> \\<lfloor>log (real p) (real (2 * n))\\<rfloor>", "by auto"], ["proof (state)\nthis:\n  S n p \\<le> \\<lfloor>log (real p) (real (2 * n))\\<rfloor>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prime ?p \\<Longrightarrow>\n  S n ?p \\<le> \\<lfloor>log (real ?p) (real (2 * n))\\<rfloor>\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"n * ln 2 = ln (real (2 ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * ln 2 = ln (real (2 ^ n))", "by (simp add: ln_realpow)"], ["proof (state)\nthis:\n  real n * ln 2 = ln (real (2 ^ n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  real n * ln 2 = ln (real (2 ^ n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"\\<dots> \\<le> ln (real ((2*n) choose n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 ^ n)) \\<le> ln (real (2 * n choose n))", "using twopow_le_central_binomial[of n]"], ["proof (prove)\nusing this:\n  2 ^ n \\<le> 2 * n choose n\n\ngoal (1 subgoal):\n 1. ln (real (2 ^ n)) \\<le> ln (real (2 * n choose n))", "by (subst ln_le_cancel_iff; (unfold of_nat_le_iff)?) auto"], ["proof (state)\nthis:\n  ln (real (2 ^ n)) \\<le> ln (real (2 * n choose n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  ln (real (2 ^ n)) \\<le> ln (real (2 * n choose n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"\\<dots> = ln (fact (2 * n)) - 2 * ln (fact n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 * n choose n)) = ln (fact (2 * n)) - 2 * ln (fact n)", "by (simp add: binomial_fact ln_div ln_mult)"], ["proof (state)\nthis:\n  ln (real (2 * n choose n)) = ln (fact (2 * n)) - 2 * ln (fact n)\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  ln (real (2 * n choose n)) = ln (fact (2 * n)) - 2 * ln (fact n)\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"\\<dots> = prime_sum_upto (\\<lambda>p. S n p * ln p) (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))", "by (fact eq)"], ["proof (state)\nthis:\n  ln (fact (2 * n)) - 2 * ln (fact n) =\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  ln (fact (2 * n)) - 2 * ln (fact n) =\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"\\<dots> \\<le> prime_sum_upto (\\<lambda>p. \\<lfloor>log p (2*n)\\<rfloor> * ln p) (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))\n    \\<le> prime_sum_upto\n           (\\<lambda>p.\n               real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n               ln (real p))\n           (real (2 * n))", "unfolding prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n       real_of_int (S n p) * ln (real p))\n    \\<le> (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n             real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n             ln (real p))", "using S_le"], ["proof (prove)\nusing this:\n  prime ?p \\<Longrightarrow>\n  S n ?p \\<le> \\<lfloor>log (real ?p) (real (2 * n))\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n       real_of_int (S n p) * ln (real p))\n    \\<le> (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n             real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n             ln (real p))", "by (intro sum_mono mult_right_mono) (auto dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n  \\<le> prime_sum_upto\n         (\\<lambda>p.\n             real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n             ln (real p))\n         (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n  \\<le> prime_sum_upto\n         (\\<lambda>p.\n             real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n             ln (real p))\n         (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"\\<dots> \\<le> prime_sum_upto (\\<lambda>p. ln (2 * n)) (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto\n     (\\<lambda>p.\n         real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n         ln (real p))\n     (real (2 * n))\n    \\<le> prime_sum_upto (\\<lambda>p. ln (real (2 * n))) (real (2 * n))", "unfolding prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p))\n    \\<le> (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n             ln (real (2 * n)))", "proof (intro sum_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "assume \"p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}\""], ["proof (state)\nthis:\n  p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "hence p: \"p > 1\""], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}\n\ngoal (1 subgoal):\n 1. 1 < p", "using prime_gt_1_nat[of p]"], ["proof (prove)\nusing this:\n  p \\<in> {p. prime p \\<and> real p \\<le> real (2 * n)}\n  prime p \\<Longrightarrow> 1 < p\n\ngoal (1 subgoal):\n 1. 1 < p", "by auto"], ["proof (state)\nthis:\n  1 < p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "have \"real_of_int \\<lfloor>log p (2 * n)\\<rfloor> = real_of_int \\<lfloor>ln (2 * n) / ln p\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> =\n    real_of_int \\<lfloor>ln (real (2 * n)) / ln (real p)\\<rfloor>", "using p n"], ["proof (prove)\nusing this:\n  1 < p\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> =\n    real_of_int \\<lfloor>ln (real (2 * n)) / ln (real p)\\<rfloor>", "by (simp add: log_def ln_mult)"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> =\n  real_of_int \\<lfloor>ln (real (2 * n)) / ln (real p)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "also"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> =\n  real_of_int \\<lfloor>ln (real (2 * n)) / ln (real p)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "have \"\\<dots> \\<le> ln (2 * n) / ln p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>ln (real (2 * n)) / ln (real p)\\<rfloor>\n    \\<le> ln (real (2 * n)) / ln (real p)", "by linarith"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>ln (real (2 * n)) / ln (real p)\\<rfloor>\n  \\<le> ln (real (2 * n)) / ln (real p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "also"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>ln (real (2 * n)) / ln (real p)\\<rfloor>\n  \\<le> ln (real (2 * n)) / ln (real p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "have \"\\<dots> * ln p = ln (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 * n)) / ln (real p) * ln (real p) = ln (real (2 * n))", "using p"], ["proof (prove)\nusing this:\n  1 < p\n\ngoal (1 subgoal):\n 1. ln (real (2 * n)) / ln (real p) * ln (real p) = ln (real (2 * n))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  ln (real (2 * n)) / ln (real p) * ln (real p) = ln (real (2 * n))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {p. prime p \\<and>\n                   real p \\<le> real (2 * n)} \\<Longrightarrow>\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p)\n       \\<le> ln (real (2 * n))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * ln (real p) \\<le> y * ln (real p)) \\<Longrightarrow>\n  real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> * ln (real p)\n  \\<le> ln (real (2 * n))", "show \"real_of_int \\<lfloor>log p (2 * n)\\<rfloor> * ln p \\<le> ln (2 * n)\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * ln (real p) \\<le> y * ln (real p)) \\<Longrightarrow>\n  real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> * ln (real p)\n  \\<le> ln (real (2 * n))\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> * ln (real p)\n    \\<le> ln (real (2 * n))", "using p"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * ln (real p) \\<le> y * ln (real p)) \\<Longrightarrow>\n  real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> * ln (real p)\n  \\<le> ln (real (2 * n))\n  1 < p\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> * ln (real p)\n    \\<le> ln (real (2 * n))", "by simp"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> * ln (real p)\n  \\<le> ln (real (2 * n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prime_sum_upto\n   (\\<lambda>p.\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p))\n   (real (2 * n))\n  \\<le> prime_sum_upto (\\<lambda>p. ln (real (2 * n))) (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "also"], ["proof (state)\nthis:\n  prime_sum_upto\n   (\\<lambda>p.\n       real_of_int \\<lfloor>log (real p) (real (2 * n))\\<rfloor> *\n       ln (real p))\n   (real (2 * n))\n  \\<le> prime_sum_upto (\\<lambda>p. ln (real (2 * n))) (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "have \"\\<dots> = ln (2 * n) * \\<pi> (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. ln (real (2 * n))) (real (2 * n)) =\n    ln (real (2 * n)) * \\<pi> (real (2 * n))", "by (simp add: \\<pi>_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. ln (real (2 * n))) (real (2 * n)) =\n  ln (real (2 * n)) * \\<pi> (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "finally"], ["proof (chain)\npicking this:\n  real n * ln 2 \\<le> ln (real (2 * n)) * \\<pi> (real (2 * n))", "show \"\\<pi> (2 * n) \\<ge> (ln 2 / 2) * (2 * n) / ln (2 * n)\""], ["proof (prove)\nusing this:\n  real n * ln 2 \\<le> ln (real (2 * n)) * \\<pi> (real (2 * n))\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "using n"], ["proof (prove)\nusing this:\n  real n * ln 2 \\<le> ln (real (2 * n)) * \\<pi> (real (2 * n))\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  ln 2 / 2 * real (2 * n) / ln (real (2 * n)) \\<le> \\<pi> (real (2 * n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_2_ge_56_81: \"ln 2 \\<ge> (56 / 81 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 56 / 81 \\<le> ln 2", "using ln_approx_bounds[of 2 2, simplified, simplified eval_nat_numeral, simplified]"], ["proof (prove)\nusing this:\n  56 \\<le> ln 2 * 81 \\<and> ln 2 \\<le> 56 / 81 + 9 * (1 / 3) ^ 5 / 20\n\ngoal (1 subgoal):\n 1. 56 / 81 \\<le> ln 2", "by simp"], ["", "text \\<open>\n  The bound for any real number $x\\geq 2$ follows fairly easily, although some ugly\n  accounting for error terms has to be done.\n\\<close>"], ["", "theorem \\<pi>_lower_bound:\n  fixes x :: real\n  assumes x: \"x \\<ge> 2\"\n  shows   \"\\<pi> x > (1 / 6) * (x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 6 * (x / ln x) < \\<pi> x", "proof (cases \"even (nat \\<lfloor>x\\<rfloor>)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "case True"], ["proof (state)\nthis:\n  even (nat \\<lfloor>x\\<rfloor>)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "define n where \"n = nat \\<lfloor>x\\<rfloor>\""], ["proof (state)\nthis:\n  n = nat \\<lfloor>x\\<rfloor>\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "from True assms"], ["proof (chain)\npicking this:\n  even (nat \\<lfloor>x\\<rfloor>)\n  2 \\<le> x", "have n: \"n \\<ge> 2\" \"even n\""], ["proof (prove)\nusing this:\n  even (nat \\<lfloor>x\\<rfloor>)\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 2 \\<le> n &&& even n", "by (auto simp: n_def le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  2 \\<le> n\n  even n\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"(1 / 6) * (x / ln x) < (ln 2 / 4) * (x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 6 * (x / ln x) < ln 2 / 4 * (x / ln x)", "using ln_2_ge_56_81 x"], ["proof (prove)\nusing this:\n  56 / 81 \\<le> ln 2\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 / 6 * (x / ln x) < ln 2 / 4 * (x / ln x)", "by (intro mult_strict_right_mono) auto"], ["proof (state)\nthis:\n  1 / 6 * (x / ln x) < ln 2 / 4 * (x / ln x)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  1 / 6 * (x / ln x) < ln 2 / 4 * (x / ln x)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"ln 2 / 4 * (x / ln x) = (1 / 2) * (ln 2 / 2 * x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln 2 / 4 * (x / ln x) = 1 / 2 * (ln 2 / 2 * x / ln x)", "by simp"], ["proof (state)\nthis:\n  ln 2 / 4 * (x / ln x) = 1 / 2 * (ln 2 / 2 * x / ln x)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  ln 2 / 4 * (x / ln x) = 1 / 2 * (ln 2 / 2 * x / ln x)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"\\<dots> \\<le> (1 - 1 / x) * (ln 2 / 2 * x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 2 * (ln 2 / 2 * x / ln x) \\<le> (1 - 1 / x) * (ln 2 / 2 * x / ln x)", "by (intro mult_right_mono) (use assms in \\<open>auto simp: field_simps\\<close>)"], ["proof (state)\nthis:\n  1 / 2 * (ln 2 / 2 * x / ln x) \\<le> (1 - 1 / x) * (ln 2 / 2 * x / ln x)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  1 / 2 * (ln 2 / 2 * x / ln x) \\<le> (1 - 1 / x) * (ln 2 / 2 * x / ln x)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"(1 - 1 / x) * (ln 2 / 2 * x / ln x) = ln 2 / 2 * (x - 1) / ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - 1 / x) * (ln 2 / 2 * x / ln x) = ln 2 / 2 * (x - 1) / ln x", "using assms"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. (1 - 1 / x) * (ln 2 / 2 * x / ln x) = ln 2 / 2 * (x - 1) / ln x", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (1 - 1 / x) * (ln 2 / 2 * x / ln x) = ln 2 / 2 * (x - 1) / ln x\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  (1 - 1 / x) * (ln 2 / 2 * x / ln x) = ln 2 / 2 * (x - 1) / ln x\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"ln 2 / 2 * (x - 1) / ln x \\<le> ln 2 / 2 * n / ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln 2 / 2 * (x - 1) / ln x \\<le> ln 2 / 2 * real n / ln (real n)", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * (x - 1) / ln x \\<le> ln 2 / 2 * real n / ln (real n)", "by (intro frac_le mult_mono mult_nonneg_nonneg) (auto simp: n_def)"], ["proof (state)\nthis:\n  ln 2 / 2 * (x - 1) / ln x \\<le> ln 2 / 2 * real n / ln (real n)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  ln 2 / 2 * (x - 1) / ln x \\<le> ln 2 / 2 * real n / ln (real n)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"ln 2 / 2 * n / ln n \\<le> \\<pi> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln 2 / 2 * real n / ln (real n) \\<le> \\<pi> (real n)", "using \\<pi>_lower_bound_ge_strong[of \"n div 2\"] \\<open>even n\\<close> n"], ["proof (prove)\nusing this:\n  1 \\<le> n div 2 \\<Longrightarrow>\n  ln 2 / 2 * real (2 * (n div 2)) / ln (real (2 * (n div 2)))\n  \\<le> \\<pi> (real (2 * (n div 2)))\n  even n\n  2 \\<le> n\n  even n\n\ngoal (1 subgoal):\n 1. ln 2 / 2 * real n / ln (real n) \\<le> \\<pi> (real n)", "by simp"], ["proof (state)\nthis:\n  ln 2 / 2 * real n / ln (real n) \\<le> \\<pi> (real n)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  ln 2 / 2 * real n / ln (real n) \\<le> \\<pi> (real n)\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"\\<pi> n = \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real n) = \\<pi> x", "by (simp add: n_def)"], ["proof (state)\nthis:\n  \\<pi> (real n) = \\<pi> x\n\ngoal (2 subgoals):\n 1. even (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x\n 2. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "finally"], ["proof (chain)\npicking this:\n  1 / 6 * (x / ln x) < \\<pi> x", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / 6 * (x / ln x) < \\<pi> x\n\ngoal (1 subgoal):\n 1. 1 / 6 * (x / ln x) < \\<pi> x", "."], ["proof (state)\nthis:\n  1 / 6 * (x / ln x) < \\<pi> x\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "case False"], ["proof (state)\nthis:\n  odd (nat \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "define n where \"n = nat \\<lfloor>x\\<rfloor>\""], ["proof (state)\nthis:\n  n = nat \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "from False assms"], ["proof (chain)\npicking this:\n  odd (nat \\<lfloor>x\\<rfloor>)\n  2 \\<le> x", "have n: \"n \\<ge> 2\" \"odd n\""], ["proof (prove)\nusing this:\n  odd (nat \\<lfloor>x\\<rfloor>)\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 2 \\<le> n &&& odd n", "by (auto simp: n_def le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  2 \\<le> n\n  odd n\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "then"], ["proof (chain)\npicking this:\n  2 \\<le> n\n  odd n", "obtain k where [simp]: \"n = 2 * k + 1\""], ["proof (prove)\nusing this:\n  2 \\<le> n\n  odd n\n\ngoal (1 subgoal):\n 1. (\\<And>k. n = 2 * k + 1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: oddE)"], ["proof (state)\nthis:\n  n = 2 * k + 1\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "from n"], ["proof (chain)\npicking this:\n  2 \\<le> n\n  odd n", "have k: \"k > 0\""], ["proof (prove)\nusing this:\n  2 \\<le> n\n  odd n\n\ngoal (1 subgoal):\n 1. 0 < k", "by simp"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "from k"], ["proof (chain)\npicking this:\n  0 < k", "have \"3 \\<le> real n\""], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. 3 \\<le> real n", "by simp"], ["proof (state)\nthis:\n  3 \\<le> real n\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  3 \\<le> real n\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"real n \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n \\<le> x", "unfolding n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>x\\<rfloor>) \\<le> x", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>x\\<rfloor>) \\<le> x", "by linarith"], ["proof (state)\nthis:\n  real n \\<le> x\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "finally"], ["proof (chain)\npicking this:\n  3 \\<le> x", "have \"x \\<ge> 3\""], ["proof (prove)\nusing this:\n  3 \\<le> x\n\ngoal (1 subgoal):\n 1. 3 \\<le> x", "."], ["proof (state)\nthis:\n  3 \\<le> x\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"(1 / 6) * (x / ln x) = 1 / 6 * x / ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 6 * (x / ln x) = 1 / 6 * x / ln x", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 / 6 * (x / ln x) = 1 / 6 * x / ln x", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 / 6 * (x / ln x) = 1 / 6 * x / ln x\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  1 / 6 * (x / ln x) = 1 / 6 * x / ln x\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"1 / 6 * x / ln x < ln 2 / 2 * (2 * k) / ln (2 * k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 6 * x / ln x < ln 2 / 2 * real (2 * k) / ln (real (2 * k))", "proof (intro frac_less)"], ["proof (state)\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "have \"x < real n + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < real n + 1", "unfolding n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x < real (nat \\<lfloor>x\\<rfloor>) + 1", "by linarith"], ["proof (state)\nthis:\n  x < real n + 1\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "hence \"1 / 6 * x < 1 / 6 * (n + 1)\""], ["proof (prove)\nusing this:\n  x < real n + 1\n\ngoal (1 subgoal):\n 1. 1 / 6 * x < 1 / 6 * real (n + 1)", "by simp"], ["proof (state)\nthis:\n  1 / 6 * x < 1 / 6 * real (n + 1)\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "also"], ["proof (state)\nthis:\n  1 / 6 * x < 1 / 6 * real (n + 1)\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "{"], ["proof (state)\nthis:\n  1 / 6 * x < 1 / 6 * real (n + 1)\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "have *: \"(3 * ln 2 - 1 :: real) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 3 * ln 2 - 1", "using ln_2_ge_56_81"], ["proof (prove)\nusing this:\n  56 / 81 \\<le> ln 2\n\ngoal (1 subgoal):\n 1. 1 \\<le> 3 * ln 2 - 1", "by simp"], ["proof (state)\nthis:\n  1 \\<le> 3 * ln 2 - 1\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "hence \"1 / (3 * ln 2 - 1 :: real) \\<le> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> 3 * ln 2 - 1\n\ngoal (1 subgoal):\n 1. 1 / (3 * ln 2 - 1) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  1 / (3 * ln 2 - 1) \\<le> 1\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "also"], ["proof (state)\nthis:\n  1 / (3 * ln 2 - 1) \\<le> 1\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "have \"1 \\<le> real k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> real k", "using k"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. 1 \\<le> real k", "by simp"], ["proof (state)\nthis:\n  1 \\<le> real k\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "finally"], ["proof (chain)\npicking this:\n  1 / (3 * ln 2 - 1) \\<le> real k", "have \"1 / 6 * (n + 1) \\<le> ln 2 / 2 * real (2 * k)\""], ["proof (prove)\nusing this:\n  1 / (3 * ln 2 - 1) \\<le> real k\n\ngoal (1 subgoal):\n 1. 1 / 6 * real (n + 1) \\<le> ln 2 / 2 * real (2 * k)", "using *"], ["proof (prove)\nusing this:\n  1 / (3 * ln 2 - 1) \\<le> real k\n  1 \\<le> 3 * ln 2 - 1\n\ngoal (1 subgoal):\n 1. 1 / 6 * real (n + 1) \\<le> ln 2 / 2 * real (2 * k)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 / 6 * real (n + 1) \\<le> ln 2 / 2 * real (2 * k)\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "}"], ["proof (state)\nthis:\n  1 / 6 * real (n + 1) \\<le> ln 2 / 2 * real (2 * k)\n\ngoal (4 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 1 / 6 * x < ln 2 / 2 * real (2 * k)\n 3. 0 < ln (real (2 * k))\n 4. ln (real (2 * k)) \\<le> ln x", "finally"], ["proof (chain)\npicking this:\n  1 / 6 * x < ln 2 / 2 * real (2 * k)", "show \"1 / 6 * x < ln 2 / 2 * real (2 * k)\""], ["proof (prove)\nusing this:\n  1 / 6 * x < ln 2 / 2 * real (2 * k)\n\ngoal (1 subgoal):\n 1. 1 / 6 * x < ln 2 / 2 * real (2 * k)", "."], ["proof (state)\nthis:\n  1 / 6 * x < ln 2 / 2 * real (2 * k)\n\ngoal (3 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 0 < ln (real (2 * k))\n 3. ln (real (2 * k)) \\<le> ln x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 0 < ln (real (2 * k))\n 3. ln (real (2 * k)) \\<le> ln x", "have \"real (2 * k) \\<le> real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (2 * k) \\<le> real n", "by simp"], ["proof (state)\nthis:\n  real (2 * k) \\<le> real n\n\ngoal (3 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 0 < ln (real (2 * k))\n 3. ln (real (2 * k)) \\<le> ln x", "also"], ["proof (state)\nthis:\n  real (2 * k) \\<le> real n\n\ngoal (3 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 0 < ln (real (2 * k))\n 3. ln (real (2 * k)) \\<le> ln x", "have \"\\<dots> \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n \\<le> x", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. real n \\<le> x", "unfolding n_def"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>x\\<rfloor>) \\<le> x", "by linarith"], ["proof (state)\nthis:\n  real n \\<le> x\n\ngoal (3 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 0 < ln (real (2 * k))\n 3. ln (real (2 * k)) \\<le> ln x", "finally"], ["proof (chain)\npicking this:\n  real (2 * k) \\<le> x", "show \"ln (real (2 * k)) \\<le> ln x\""], ["proof (prove)\nusing this:\n  real (2 * k) \\<le> x\n\ngoal (1 subgoal):\n 1. ln (real (2 * k)) \\<le> ln x", "using k"], ["proof (prove)\nusing this:\n  real (2 * k) \\<le> x\n  0 < k\n\ngoal (1 subgoal):\n 1. ln (real (2 * k)) \\<le> ln x", "by simp"], ["proof (state)\nthis:\n  ln (real (2 * k)) \\<le> ln x\n\ngoal (2 subgoals):\n 1. 0 \\<le> 1 / 6 * x\n 2. 0 < ln (real (2 * k))", "qed (use k x in auto)"], ["proof (state)\nthis:\n  1 / 6 * x / ln x < ln 2 / 2 * real (2 * k) / ln (real (2 * k))\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  1 / 6 * x / ln x < ln 2 / 2 * real (2 * k) / ln (real (2 * k))\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"ln 2 / 2 * (2 * k) / ln (2 * k) \\<le> \\<pi> (2 * k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln 2 / 2 * real (2 * k) / ln (real (2 * k)) \\<le> \\<pi> (real (2 * k))", "by (rule \\<pi>_lower_bound_ge_strong) (use \\<open>k > 0\\<close> in auto)"], ["proof (state)\nthis:\n  ln 2 / 2 * real (2 * k) / ln (real (2 * k)) \\<le> \\<pi> (real (2 * k))\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  ln 2 / 2 * real (2 * k) / ln (real (2 * k)) \\<le> \\<pi> (real (2 * k))\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"\\<pi> (2 * k) \\<le> \\<pi> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real (2 * k)) \\<le> \\<pi> (real n)", "by (rule \\<pi>_mono) auto"], ["proof (state)\nthis:\n  \\<pi> (real (2 * k)) \\<le> \\<pi> (real n)\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "also"], ["proof (state)\nthis:\n  \\<pi> (real (2 * k)) \\<le> \\<pi> (real n)\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "have \"\\<dots> = \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real n) = \\<pi> x", "unfolding n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real (nat \\<lfloor>x\\<rfloor>)) = \\<pi> x", "by simp"], ["proof (state)\nthis:\n  \\<pi> (real n) = \\<pi> x\n\ngoal (1 subgoal):\n 1. odd (nat \\<lfloor>x\\<rfloor>) \\<Longrightarrow>\n    1 / 6 * (x / ln x) < \\<pi> x", "finally"], ["proof (chain)\npicking this:\n  1 / 6 * (x / ln x) < \\<pi> x", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / 6 * (x / ln x) < \\<pi> x\n\ngoal (1 subgoal):\n 1. 1 / 6 * (x / ln x) < \\<pi> x", "."], ["proof (state)\nthis:\n  1 / 6 * (x / ln x) < \\<pi> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_at_top: \"filterlim primes_pi at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim \\<pi> at_top at_top", "proof (rule filterlim_at_top_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. filterlim ?f at_top at_top\n 2. \\<forall>\\<^sub>F x in at_top. ?f x \\<le> \\<pi> x", "show \"eventually (\\<lambda>x. primes_pi x \\<ge> 1 / 6 * (x / ln x)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 / 6 * (x / ln x) \\<le> \\<pi> x", "using eventually_gt_at_top[of 2]"], ["proof (prove)\nusing this:\n  eventually ((<) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 / 6 * (x / ln x) \\<le> \\<pi> x", "by eventually_elim (intro less_imp_le \\<pi>_lower_bound)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 / 6 * (x / ln x) \\<le> \\<pi> x\n\ngoal (1 subgoal):\n 1. LIM x at_top. 1 / 6 * (x / ln x) :> at_top", "qed real_asymp"], ["", "subsection \\<open>Upper bound for $\\vartheta(x)$\\<close>"], ["", "text \\<open>\n  In this section, we prove a linear upper bound for $\\vartheta$. This is somewhat unnecessary\n  because we already have a considerably better bound on $\\vartheta(x)$ using a proof that has\n  roughly the same complexity as this one and also only uses elementary means. Nevertheless,\n  here is the proof from Apostol's book; it is quite nice and it would be a shame not to\n  formalise it.\n\n  The idea is to first show a bound for $\\vartheta(2n)-\\vartheta(n)$ and then deduce one for\n  $\\vartheta(2^n)$ from this by telescoping, which then yields one for general $x$ by\n  monotonicity.\n\\<close>"], ["", "lemma \\<theta>_double_less:\n  fixes n :: nat\n  assumes n: \"n > 0\"\n  shows \"\\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "proof (cases \"n \\<ge> 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\n 2. \\<not> 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "case False"], ["proof (state)\nthis:\n  \\<not> 2 \\<le> n\n\ngoal (2 subgoals):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\n 2. \\<not> 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "with assms"], ["proof (chain)\npicking this:\n  0 < n\n  \\<not> 2 \\<le> n", "have \"n = 1\""], ["proof (prove)\nusing this:\n  0 < n\n  \\<not> 2 \\<le> n\n\ngoal (1 subgoal):\n 1. n = 1", "by force"], ["proof (state)\nthis:\n  n = 1\n\ngoal (2 subgoals):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\n 2. \\<not> 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "moreover"], ["proof (state)\nthis:\n  n = 1\n\ngoal (2 subgoals):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\n 2. \\<not> 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"\\<theta> 2 = ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> 2 = ln 2", "by (simp add: eval_\\<theta>)"], ["proof (state)\nthis:\n  \\<theta> 2 = ln 2\n\ngoal (2 subgoals):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\n 2. \\<not> 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "ultimately"], ["proof (chain)\npicking this:\n  n = 1\n  \\<theta> 2 = ln 2", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 1\n  \\<theta> 2 = ln 2\n\ngoal (1 subgoal):\n 1. \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "by auto"], ["proof (state)\nthis:\n  \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "define P where \"P = (\\<lambda>n::nat. {p\\<in>{0<..n}. prime p})\""], ["proof (state)\nthis:\n  P = (\\<lambda>n. {p \\<in> {0<..n}. prime p})\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \\<theta>_eq: \"\\<theta> n = (\\<Sum>p\\<in>P n. ln p)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (real n) = (\\<Sum>p\\<in>P n. ln (real p))", "unfolding \\<theta>_def prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> real p \\<le> real n. ln (real p)) =\n    (\\<Sum>p\\<in>P n. ln (real p))", "by (intro sum.cong) (auto simp: P_def dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  \\<theta> (real ?n) = (\\<Sum>p\\<in>P ?n. ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"\\<theta> (2 * n) - \\<theta> n = (\\<Sum>p \\<in> P (2*n) - P n. ln p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (real (2 * n)) - \\<theta> (real n) =\n    (\\<Sum>p\\<in>P (2 * n) - P n. ln (real p))", "unfolding \\<theta>_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>P (2 * n). ln (real p)) - (\\<Sum>p\\<in>P n. ln (real p)) =\n    (\\<Sum>p\\<in>P (2 * n) - P n. ln (real p))", "by (rule Groups_Big.sum_diff [symmetric]) (auto simp: P_def)"], ["proof (state)\nthis:\n  \\<theta> (real (2 * n)) - \\<theta> (real n) =\n  (\\<Sum>p\\<in>P (2 * n) - P n. ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "also"], ["proof (state)\nthis:\n  \\<theta> (real (2 * n)) - \\<theta> (real n) =\n  (\\<Sum>p\\<in>P (2 * n) - P n. ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"(\\<Sum>p\\<in>P (2*n) - P n. ln p) =\n          (\\<Sum>p\\<in>P (2*n) - P n. (\\<lfloor>2*n/p\\<rfloor> - 2 * \\<lfloor>n/p\\<rfloor>) * ln p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>P (2 * n) - P n. ln (real p)) =\n    (\\<Sum>p\\<in>P (2 * n) - P n.\n       real_of_int\n        (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n         2 * \\<lfloor>real n / real p\\<rfloor>) *\n       ln (real p))", "proof (intro sum.cong refl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P (2 * n) - P n \\<Longrightarrow>\n       ln (real x) =\n       real_of_int\n        (\\<lfloor>real (2 * n) / real x\\<rfloor> -\n         2 * \\<lfloor>real n / real x\\<rfloor>) *\n       ln (real x)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P (2 * n) - P n \\<Longrightarrow>\n       ln (real x) =\n       real_of_int\n        (\\<lfloor>real (2 * n) / real x\\<rfloor> -\n         2 * \\<lfloor>real n / real x\\<rfloor>) *\n       ln (real x)", "assume p: \"p \\<in> P (2*n) - P n\""], ["proof (state)\nthis:\n  p \\<in> P (2 * n) - P n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P (2 * n) - P n \\<Longrightarrow>\n       ln (real x) =\n       real_of_int\n        (\\<lfloor>real (2 * n) / real x\\<rfloor> -\n         2 * \\<lfloor>real n / real x\\<rfloor>) *\n       ln (real x)", "hence *: \"real n / real p < 1\" \"real n / real p \\<ge> 1 / 2\""], ["proof (prove)\nusing this:\n  p \\<in> P (2 * n) - P n\n\ngoal (1 subgoal):\n 1. real n / real p < 1 &&& 1 / 2 \\<le> real n / real p", "by (auto simp: P_def)"], ["proof (state)\nthis:\n  real n / real p < 1\n  1 / 2 \\<le> real n / real p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P (2 * n) - P n \\<Longrightarrow>\n       ln (real x) =\n       real_of_int\n        (\\<lfloor>real (2 * n) / real x\\<rfloor> -\n         2 * \\<lfloor>real n / real x\\<rfloor>) *\n       ln (real x)", "from *"], ["proof (chain)\npicking this:\n  real n / real p < 1\n  1 / 2 \\<le> real n / real p", "have \"\\<lfloor>real n / real p\\<rfloor> = 0\""], ["proof (prove)\nusing this:\n  real n / real p < 1\n  1 / 2 \\<le> real n / real p\n\ngoal (1 subgoal):\n 1. \\<lfloor>real n / real p\\<rfloor> = 0", "by linarith"], ["proof (state)\nthis:\n  \\<lfloor>real n / real p\\<rfloor> = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P (2 * n) - P n \\<Longrightarrow>\n       ln (real x) =\n       real_of_int\n        (\\<lfloor>real (2 * n) / real x\\<rfloor> -\n         2 * \\<lfloor>real n / real x\\<rfloor>) *\n       ln (real x)", "moreover"], ["proof (state)\nthis:\n  \\<lfloor>real n / real p\\<rfloor> = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P (2 * n) - P n \\<Longrightarrow>\n       ln (real x) =\n       real_of_int\n        (\\<lfloor>real (2 * n) / real x\\<rfloor> -\n         2 * \\<lfloor>real n / real x\\<rfloor>) *\n       ln (real x)", "from *"], ["proof (chain)\npicking this:\n  real n / real p < 1\n  1 / 2 \\<le> real n / real p", "have \"\\<lfloor>2 * real n / real p\\<rfloor> = 1\""], ["proof (prove)\nusing this:\n  real n / real p < 1\n  1 / 2 \\<le> real n / real p\n\ngoal (1 subgoal):\n 1. \\<lfloor>2 * real n / real p\\<rfloor> = 1", "by linarith"], ["proof (state)\nthis:\n  \\<lfloor>2 * real n / real p\\<rfloor> = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P (2 * n) - P n \\<Longrightarrow>\n       ln (real x) =\n       real_of_int\n        (\\<lfloor>real (2 * n) / real x\\<rfloor> -\n         2 * \\<lfloor>real n / real x\\<rfloor>) *\n       ln (real x)", "ultimately"], ["proof (chain)\npicking this:\n  \\<lfloor>real n / real p\\<rfloor> = 0\n  \\<lfloor>2 * real n / real p\\<rfloor> = 1", "show \"ln p = (\\<lfloor>2*n/p\\<rfloor> - 2 * \\<lfloor>n/p\\<rfloor>) * ln p\""], ["proof (prove)\nusing this:\n  \\<lfloor>real n / real p\\<rfloor> = 0\n  \\<lfloor>2 * real n / real p\\<rfloor> = 1\n\ngoal (1 subgoal):\n 1. ln (real p) =\n    real_of_int\n     (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n      2 * \\<lfloor>real n / real p\\<rfloor>) *\n    ln (real p)", "by simp"], ["proof (state)\nthis:\n  ln (real p) =\n  real_of_int\n   (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n    2 * \\<lfloor>real n / real p\\<rfloor>) *\n  ln (real p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n) - P n. ln (real p)) =\n  (\\<Sum>p\\<in>P (2 * n) - P n.\n     real_of_int\n      (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n       2 * \\<lfloor>real n / real p\\<rfloor>) *\n     ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "also"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n) - P n. ln (real p)) =\n  (\\<Sum>p\\<in>P (2 * n) - P n.\n     real_of_int\n      (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n       2 * \\<lfloor>real n / real p\\<rfloor>) *\n     ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"(\\<Sum>p\\<in>P (2*n) - P n. (\\<lfloor>2*n/p\\<rfloor> - 2 * \\<lfloor>n/p\\<rfloor>) * ln p) \\<le>\n          (\\<Sum>p\\<in>P (2*n). (\\<lfloor>2*n/p\\<rfloor> - 2 * \\<lfloor>n/p\\<rfloor>) * ln p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>P (2 * n) - P n.\n       real_of_int\n        (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n         2 * \\<lfloor>real n / real p\\<rfloor>) *\n       ln (real p))\n    \\<le> (\\<Sum>p\\<in>P (2 * n).\n             real_of_int\n              (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n               2 * \\<lfloor>real n / real p\\<rfloor>) *\n             ln (real p))", "proof (intro sum_mono2)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (P (2 * n))\n 2. P (2 * n) - P n \\<subseteq> P (2 * n)\n 3. \\<And>b.\n       b \\<in> P (2 * n) - (P (2 * n) - P n) \\<Longrightarrow>\n       0 \\<le> real_of_int\n                (\\<lfloor>real (2 * n) / real b\\<rfloor> -\n                 2 * \\<lfloor>real n / real b\\<rfloor>) *\n               ln (real b)", "fix p"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (P (2 * n))\n 2. P (2 * n) - P n \\<subseteq> P (2 * n)\n 3. \\<And>b.\n       b \\<in> P (2 * n) - (P (2 * n) - P n) \\<Longrightarrow>\n       0 \\<le> real_of_int\n                (\\<lfloor>real (2 * n) / real b\\<rfloor> -\n                 2 * \\<lfloor>real n / real b\\<rfloor>) *\n               ln (real b)", "assume p: \"p \\<in> P (2 * n) - (P (2 * n) - P n)\""], ["proof (state)\nthis:\n  p \\<in> P (2 * n) - (P (2 * n) - P n)\n\ngoal (3 subgoals):\n 1. finite (P (2 * n))\n 2. P (2 * n) - P n \\<subseteq> P (2 * n)\n 3. \\<And>b.\n       b \\<in> P (2 * n) - (P (2 * n) - P n) \\<Longrightarrow>\n       0 \\<le> real_of_int\n                (\\<lfloor>real (2 * n) / real b\\<rfloor> -\n                 2 * \\<lfloor>real n / real b\\<rfloor>) *\n               ln (real b)", "have \"2 * \\<lfloor>real n / real p\\<rfloor> \\<le> \\<lfloor>2 * (real n / real p)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * \\<lfloor>real n / real p\\<rfloor>\n    \\<le> \\<lfloor>2 * (real n / real p)\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  2 * \\<lfloor>real n / real p\\<rfloor>\n  \\<le> \\<lfloor>2 * (real n / real p)\\<rfloor>\n\ngoal (3 subgoals):\n 1. finite (P (2 * n))\n 2. P (2 * n) - P n \\<subseteq> P (2 * n)\n 3. \\<And>b.\n       b \\<in> P (2 * n) - (P (2 * n) - P n) \\<Longrightarrow>\n       0 \\<le> real_of_int\n                (\\<lfloor>real (2 * n) / real b\\<rfloor> -\n                 2 * \\<lfloor>real n / real b\\<rfloor>) *\n               ln (real b)", "thus \"0 \\<le> real_of_int (\\<lfloor>real (2 * n) / real p\\<rfloor> - 2 * \\<lfloor>real n / real p\\<rfloor>) * ln (real p)\""], ["proof (prove)\nusing this:\n  2 * \\<lfloor>real n / real p\\<rfloor>\n  \\<le> \\<lfloor>2 * (real n / real p)\\<rfloor>\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_int\n             (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n              2 * \\<lfloor>real n / real p\\<rfloor>) *\n            ln (real p)", "using p"], ["proof (prove)\nusing this:\n  2 * \\<lfloor>real n / real p\\<rfloor>\n  \\<le> \\<lfloor>2 * (real n / real p)\\<rfloor>\n  p \\<in> P (2 * n) - (P (2 * n) - P n)\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_int\n             (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n              2 * \\<lfloor>real n / real p\\<rfloor>) *\n            ln (real p)", "by (intro mult_nonneg_nonneg) (auto simp: P_def)"], ["proof (state)\nthis:\n  0 \\<le> real_of_int\n           (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n            2 * \\<lfloor>real n / real p\\<rfloor>) *\n          ln (real p)\n\ngoal (2 subgoals):\n 1. finite (P (2 * n))\n 2. P (2 * n) - P n \\<subseteq> P (2 * n)", "qed (auto simp: P_def)"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n) - P n.\n     real_of_int\n      (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n       2 * \\<lfloor>real n / real p\\<rfloor>) *\n     ln (real p))\n  \\<le> (\\<Sum>p\\<in>P (2 * n).\n           real_of_int\n            (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n             2 * \\<lfloor>real n / real p\\<rfloor>) *\n           ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "also"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n) - P n.\n     real_of_int\n      (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n       2 * \\<lfloor>real n / real p\\<rfloor>) *\n     ln (real p))\n  \\<le> (\\<Sum>p\\<in>P (2 * n).\n           real_of_int\n            (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n             2 * \\<lfloor>real n / real p\\<rfloor>) *\n           ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have *: \"2 * real_of_int \\<lfloor>real n / real p ^ m\\<rfloor> \\<le> 2 * real n / real p ^ m\" for p m"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * real_of_int \\<lfloor>real n / real p ^ m\\<rfloor>\n    \\<le> 2 * real n / real p ^ m", "by linarith"], ["proof (state)\nthis:\n  2 * real_of_int \\<lfloor>real n / real ?p ^ ?m\\<rfloor>\n  \\<le> 2 * real n / real ?p ^ ?m\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"(\\<Sum>m\\<in>{1}. \\<lfloor>2 * real n / real p ^ m\\<rfloor> - 2 * \\<lfloor>n / real p^m\\<rfloor>) \\<le> S n p\"\n    if \"prime p\" \"p \\<le> 2 * n\" for p :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{1}.\n       \\<lfloor>2 * real n / real p ^ m\\<rfloor> -\n       2 * \\<lfloor>real n / real p ^ m\\<rfloor>)\n    \\<le> S n p", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{1}.\n       \\<lfloor>2 * real n / real p ^ m\\<rfloor> -\n       2 * \\<lfloor>real n / real p ^ m\\<rfloor>)\n    \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n    (2 * real n)\\<rfloor>}.\n             \\<lfloor>2 * real n / real p ^ m\\<rfloor> -\n             2 * \\<lfloor>real n / real p ^ m\\<rfloor>)", "using prime_gt_1_nat[OF that(1)] that(2) n *[of p]"], ["proof (prove)\nusing this:\n  1 < p\n  p \\<le> 2 * n\n  0 < n\n  2 * real_of_int \\<lfloor>real n / real p ^ ?m\\<rfloor>\n  \\<le> 2 * real n / real p ^ ?m\n\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<in>{1}.\n       \\<lfloor>2 * real n / real p ^ m\\<rfloor> -\n       2 * \\<lfloor>real n / real p ^ m\\<rfloor>)\n    \\<le> (\\<Sum>m\\<in>{0<..nat \\<lfloor>log (real p)\n    (2 * real n)\\<rfloor>}.\n             \\<lfloor>2 * real n / real p ^ m\\<rfloor> -\n             2 * \\<lfloor>real n / real p ^ m\\<rfloor>)", "by (intro sum_mono2) (auto dest: prime_gt_1_nat simp: le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>prime ?p; ?p \\<le> 2 * n\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>m\\<in>{1}.\n                       \\<lfloor>2 * real n / real ?p ^ m\\<rfloor> -\n                       2 * \\<lfloor>real n / real ?p ^ m\\<rfloor>)\n                    \\<le> S n ?p\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "hence \"(\\<Sum>p\\<in>P (2*n). (\\<Sum>m\\<in>{1}. \\<lfloor>2*n/p^m\\<rfloor> - 2 * \\<lfloor>n/p^m\\<rfloor>) * ln p) \\<le> (\\<Sum>p\\<in>P (2*n). S n p * ln p)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>prime ?p; ?p \\<le> 2 * n\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>m\\<in>{1}.\n                       \\<lfloor>2 * real n / real ?p ^ m\\<rfloor> -\n                       2 * \\<lfloor>real n / real ?p ^ m\\<rfloor>)\n                    \\<le> S n ?p\n\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>P (2 * n).\n       real_of_int\n        (\\<Sum>m\\<in>{1}.\n           \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor> -\n           2 * \\<lfloor>real n / real (p ^ m)\\<rfloor>) *\n       ln (real p))\n    \\<le> (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p))", "by (intro sum_mono mult_right_mono; (unfold of_int_le_iff)?)\n       (auto dest: prime_gt_1_nat simp: P_def)"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n).\n     real_of_int\n      (\\<Sum>m\\<in>{1}.\n         \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor> -\n         2 * \\<lfloor>real n / real (p ^ m)\\<rfloor>) *\n     ln (real p))\n  \\<le> (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "hence \"(\\<Sum>p\\<in>P (2*n). (\\<lfloor>2*n/p\\<rfloor> - 2 * \\<lfloor>n/p\\<rfloor>) * ln p) \\<le> (\\<Sum>p\\<in>P (2*n). S n p * ln p)\""], ["proof (prove)\nusing this:\n  (\\<Sum>p\\<in>P (2 * n).\n     real_of_int\n      (\\<Sum>m\\<in>{1}.\n         \\<lfloor>real (2 * n) / real (p ^ m)\\<rfloor> -\n         2 * \\<lfloor>real n / real (p ^ m)\\<rfloor>) *\n     ln (real p))\n  \\<le> (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p))\n\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>P (2 * n).\n       real_of_int\n        (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n         2 * \\<lfloor>real n / real p\\<rfloor>) *\n       ln (real p))\n    \\<le> (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n).\n     real_of_int\n      (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n       2 * \\<lfloor>real n / real p\\<rfloor>) *\n     ln (real p))\n  \\<le> (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "also"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n).\n     real_of_int\n      (\\<lfloor>real (2 * n) / real p\\<rfloor> -\n       2 * \\<lfloor>real n / real p\\<rfloor>) *\n     ln (real p))\n  \\<le> (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"(\\<Sum>p \\<in> P (2*n). S n p * ln p) = prime_sum_upto (\\<lambda>p. S n p * ln p) (2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p)) =\n    prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n))", "unfolding P_def prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | p \\<in> {0<..2 * n} \\<and> prime p.\n       real_of_int (S n p) * ln (real p)) =\n    (\\<Sum>p | prime p \\<and> real p \\<le> real (2 * n).\n       real_of_int (S n p) * ln (real p))", "by (intro sum.cong) (auto simp: P_def dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p)) =\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "also"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>P (2 * n). real_of_int (S n p) * ln (real p)) =\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"\\<dots> = ln (fact (2 * n)) - 2 * ln (fact n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n     (real (2 * n)) =\n    ln (fact (2 * n)) - 2 * ln (fact n)", "by (rule \\<pi>_bounds_aux [symmetric]) (use n in auto)"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n)) =\n  ln (fact (2 * n)) - 2 * ln (fact n)\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "also"], ["proof (state)\nthis:\n  prime_sum_upto (\\<lambda>p. real_of_int (S n p) * ln (real p))\n   (real (2 * n)) =\n  ln (fact (2 * n)) - 2 * ln (fact n)\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"\\<dots> = ln (real ((2*n) choose n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (fact (2 * n)) - 2 * ln (fact n) = ln (real (2 * n choose n))", "by (simp add: binomial_fact ln_div ln_mult)"], ["proof (state)\nthis:\n  ln (fact (2 * n)) - 2 * ln (fact n) = ln (real (2 * n choose n))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "also"], ["proof (state)\nthis:\n  ln (fact (2 * n)) - 2 * ln (fact n) = ln (real (2 * n choose n))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"\\<dots> < ln (real (4 ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 * n choose n)) < ln (real (4 ^ n))", "by (subst ln_less_cancel_iff; (unfold of_nat_le_iff)?)\n       (use fourpow_gt_central_binomial[of n] n in auto)"], ["proof (state)\nthis:\n  ln (real (2 * n choose n)) < ln (real (4 ^ n))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "also"], ["proof (state)\nthis:\n  ln (real (2 * n choose n)) < ln (real (4 ^ n))\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "have \"\\<dots> = n * ln 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (4 ^ n)) = real n * ln 4", "by (simp add: ln_realpow)"], ["proof (state)\nthis:\n  ln (real (4 ^ n)) = real n * ln 4\n\ngoal (1 subgoal):\n 1. 2 \\<le> n \\<Longrightarrow>\n    \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "finally"], ["proof (chain)\npicking this:\n  \\<theta> (real (2 * n)) - \\<theta> (real n) < real n * ln 4", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<theta> (real (2 * n)) - \\<theta> (real n) < real n * ln 4\n\ngoal (1 subgoal):\n 1. \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4", "by simp"], ["proof (state)\nthis:\n  \\<theta> (2 * real n) - \\<theta> (real n) < real n * ln 4\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<theta>_twopow_less: \"\\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "have \\<theta>_twopow_diff: \"\\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k) < 2 ^ Suc k * ln 2\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k) < 2 ^ Suc k * ln 2", "using \\<theta>_double_less[of \"2 ^ k\"] ln_realpow[of 2 2]"], ["proof (prove)\nusing this:\n  0 < 2 ^ k \\<Longrightarrow>\n  \\<theta> (2 * real (2 ^ k)) - \\<theta> (real (2 ^ k))\n  < real (2 ^ k) * ln 4\n  0 < 2 \\<Longrightarrow> ln (2\\<^sup>2) = real 2 * ln 2\n\ngoal (1 subgoal):\n 1. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k) < 2 ^ Suc k * ln 2", "by simp"], ["proof (state)\nthis:\n  \\<theta> (2 ^ Suc ?k) - \\<theta> (2 ^ ?k) < 2 ^ Suc ?k * ln 2\n\ngoal (1 subgoal):\n 1. \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "show \"\\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "proof (cases \"r > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "case True"], ["proof (state)\nthis:\n  0 < r\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "have \"(\\<Sum>k<r. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k)) < (\\<Sum>k<r. 2 ^ Suc k * ln 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<r. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k))\n    < (\\<Sum>k<r. 2 ^ Suc k * ln 2)", "by (intro sum_strict_mono \\<theta>_twopow_diff) (use \\<open>r > 0\\<close> in auto)"], ["proof (state)\nthis:\n  (\\<Sum>k<r. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k))\n  < (\\<Sum>k<r. 2 ^ Suc k * ln 2)\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<r. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k))\n  < (\\<Sum>k<r. 2 ^ Suc k * ln 2)\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "have \"(\\<Sum>k<r. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k)) = \\<theta> (2 ^ r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<r. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k)) = \\<theta> (2 ^ r)", "by (subst sum_lessThan_telescope) auto"], ["proof (state)\nthis:\n  (\\<Sum>k<r. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k)) = \\<theta> (2 ^ r)\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<r. \\<theta> (2 ^ Suc k) - \\<theta> (2 ^ k)) = \\<theta> (2 ^ r)\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "have \"(\\<Sum>k<r. 2 ^ Suc k * ln 2 :: real) = (\\<Sum>k<r. 2 ^ k) * 2 * ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<r. 2 ^ Suc k * ln 2) = sum ((^) 2) {..<r} * 2 * ln 2", "by (simp add: sum_distrib_right sum_distrib_left mult_ac)"], ["proof (state)\nthis:\n  (\\<Sum>k<r. 2 ^ Suc k * ln 2) = sum ((^) 2) {..<r} * 2 * ln 2\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<r. 2 ^ Suc k * ln 2) = sum ((^) 2) {..<r} * 2 * ln 2\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "have \"(\\<Sum>k<r. 2 ^ k :: real) = 2 ^ r - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {..<r} = 2 ^ r - 1", "using geometric_sum[of \"2 :: real\"]"], ["proof (prove)\nusing this:\n  2 \\<noteq> 1 \\<Longrightarrow>\n  sum ((^) 2) {..<?n} = (2 ^ ?n - 1) / (2 - 1)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {..<r} = 2 ^ r - 1", "by simp"], ["proof (state)\nthis:\n  sum ((^) 2) {..<r} = 2 ^ r - 1\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "also"], ["proof (state)\nthis:\n  sum ((^) 2) {..<r} = 2 ^ r - 1\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "have \"\\<dots> \\<le> 2 ^ r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ r - 1 \\<le> 2 ^ r", "by simp"], ["proof (state)\nthis:\n  2 ^ r - 1 \\<le> 2 ^ r\n\ngoal (2 subgoals):\n 1. 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n 2. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * 2 * ln 2 \\<le> y * 2 * ln 2) \\<Longrightarrow>\n  \\<theta> (2 ^ r) < 2 ^ r * 2 * ln 2", "show \"\\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * 2 * ln 2 \\<le> y * 2 * ln 2) \\<Longrightarrow>\n  \\<theta> (2 ^ r) < 2 ^ r * 2 * ln 2\n\ngoal (1 subgoal):\n 1. \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "by simp"], ["proof (state)\nthis:\n  \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n\ngoal (1 subgoal):\n 1. \\<not> 0 < r \\<Longrightarrow> \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2", "qed auto"], ["proof (state)\nthis:\n  \\<theta> (2 ^ r) < 2 ^ (r + 1) * ln 2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem \\<theta>_upper_bound_weak:\n  fixes n :: nat\n  assumes n: \"n > 0\"\n  shows   \"\\<theta> n < 4 * ln 2 * n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "define r where \"r = Discrete.log n\""], ["proof (state)\nthis:\n  r = Discrete.log n\n\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "have \"\\<theta> n \\<le> \\<theta> (real (2 ^ Suc r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (real n) \\<le> \\<theta> (real (2 ^ Suc r))", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (real n) \\<le> \\<theta> (real (2 ^ Suc (Discrete.log n)))", "using log_exp2_ge[of n]"], ["proof (prove)\nusing this:\n  n \\<le> 2 * 2 ^ Discrete.log n\n\ngoal (1 subgoal):\n 1. \\<theta> (real n) \\<le> \\<theta> (real (2 ^ Suc (Discrete.log n)))", "by (intro \\<theta>_mono, unfold of_nat_le_iff) auto"], ["proof (state)\nthis:\n  \\<theta> (real n) \\<le> \\<theta> (real (2 ^ Suc r))\n\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "also"], ["proof (state)\nthis:\n  \\<theta> (real n) \\<le> \\<theta> (real (2 ^ Suc r))\n\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "have \"\\<dots> < 4 * ln 2 * real (2 ^ r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (real (2 ^ Suc r)) < 4 * ln 2 * real (2 ^ r)", "using \\<theta>_twopow_less[of \"r + 1\"]"], ["proof (prove)\nusing this:\n  \\<theta> (2 ^ (r + 1)) < 2 ^ (r + 1 + 1) * ln 2\n\ngoal (1 subgoal):\n 1. \\<theta> (real (2 ^ Suc r)) < 4 * ln 2 * real (2 ^ r)", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  \\<theta> (real (2 ^ Suc r)) < 4 * ln 2 * real (2 ^ r)\n\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "also"], ["proof (state)\nthis:\n  \\<theta> (real (2 ^ Suc r)) < 4 * ln 2 * real (2 ^ r)\n\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "have \"\\<dots> \\<le> 4 * ln 2 * real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * ln 2 * real (2 ^ r) \\<le> 4 * ln 2 * real n", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * ln 2 * real (2 ^ Discrete.log n) \\<le> 4 * ln 2 * real n", "by (intro mult_left_mono, unfold of_nat_le_iff, intro log_exp2_le) (use n in auto)"], ["proof (state)\nthis:\n  4 * ln 2 * real (2 ^ r) \\<le> 4 * ln 2 * real n\n\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "finally"], ["proof (chain)\npicking this:\n  \\<theta> (real n) < 4 * ln 2 * real n", "show \"\\<theta> n < 4 * ln 2 * n\""], ["proof (prove)\nusing this:\n  \\<theta> (real n) < 4 * ln 2 * real n\n\ngoal (1 subgoal):\n 1. \\<theta> (real n) < 4 * ln 2 * real n", "by simp"], ["proof (state)\nthis:\n  \\<theta> (real n) < 4 * ln 2 * real n\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Upper bound for $\\pi(x)$\\<close>"], ["", "text \\<open>\n  We use our upper bound for $\\vartheta(x)$ (the strong one, not the one from the previous\n  section) to derive an upper bound for $\\pi(x)$.\n\n  As a first step, we show the following lemma about the global maximum of the function\n  $\\ln x / x^c$ for $c > 0$:\n\\<close>"], ["", "lemma \\<pi>_upper_bound_aux:\n  fixes c :: real\n  assumes \"c > 0\"\n  defines \"f \\<equiv> (\\<lambda>x. x powr (-c) * ln x)\"\n  assumes x: \"x > 0\"\n  shows \"f x \\<le> 1 / (c * exp 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "define f' where \"f' = (\\<lambda>x. x powr (-c - 1) * (1 - c * ln x))\""], ["proof (state)\nthis:\n  f' = (\\<lambda>x. x powr (- c - 1) * (1 - c * ln x))\n\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "define z where \"z = exp (1 / c)\""], ["proof (state)\nthis:\n  z = exp (1 / c)\n\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "have \"z > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < z", "by (simp add: z_def)"], ["proof (state)\nthis:\n  0 < z\n\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "have deriv: \"(f has_real_derivative f' t) (at t)\" if \"t > 0\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_real_derivative f' t) (at t)", "unfolding f_def f'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr - c * ln x) has_real_derivative\n     t powr (- c - 1) * (1 - c * ln t))\n     (at t)", "using that"], ["proof (prove)\nusing this:\n  0 < t\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr - c * ln x) has_real_derivative\n     t powr (- c - 1) * (1 - c * ln t))\n     (at t)", "by (auto intro!: derivative_eq_intros simp: field_simps powr_diff powr_minus)"], ["proof (state)\nthis:\n  0 < ?t \\<Longrightarrow> (f has_real_derivative f' ?t) (at ?t)\n\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "have [simp]: \"f z = 1 / (c * exp 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f z = 1 / (c * exp 1)", "by (simp add: z_def f_def powr_def exp_minus field_simps)"], ["proof (state)\nthis:\n  f z = 1 / (c * exp 1)\n\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "proof (cases x z rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "assume x: \"x < z\""], ["proof (state)\nthis:\n  x < z\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "from x assms"], ["proof (chain)\npicking this:\n  x < z\n  0 < c\n  f \\<equiv> \\<lambda>x. x powr - c * ln x\n  0 < x", "have t: \"\\<exists>t. t > x \\<and> t < z \\<and> f z - f x = (z - x) * f' t\""], ["proof (prove)\nusing this:\n  x < z\n  0 < c\n  f \\<equiv> \\<lambda>x. x powr - c * ln x\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<exists>t>x. t < z \\<and> f z - f x = (z - x) * f' t", "by (intro MVT2 deriv) auto"], ["proof (state)\nthis:\n  \\<exists>t>x. t < z \\<and> f z - f x = (z - x) * f' t\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "then"], ["proof (chain)\npicking this:\n  \\<exists>t>x. t < z \\<and> f z - f x = (z - x) * f' t", "obtain t where t: \"t > x\" \"t < z\" \"f z - f x = (z - x) * f' t\""], ["proof (prove)\nusing this:\n  \\<exists>t>x. t < z \\<and> f z - f x = (z - x) * f' t\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x < t; t < z; f z - f x = (z - x) * f' t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x < t\n  t < z\n  f z - f x = (z - x) * f' t\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "hence \"ln t < ln z\""], ["proof (prove)\nusing this:\n  x < t\n  t < z\n  f z - f x = (z - x) * f' t\n\ngoal (1 subgoal):\n 1. ln t < ln z", "using assms"], ["proof (prove)\nusing this:\n  x < t\n  t < z\n  f z - f x = (z - x) * f' t\n  0 < c\n  f \\<equiv> \\<lambda>x. x powr - c * ln x\n  0 < x\n\ngoal (1 subgoal):\n 1. ln t < ln z", "by simp"], ["proof (state)\nthis:\n  ln t < ln z\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "also"], ["proof (state)\nthis:\n  ln t < ln z\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "have \"ln z = 1 / c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln z = 1 / c", "by (simp add: z_def)"], ["proof (state)\nthis:\n  ln z = 1 / c\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "finally"], ["proof (chain)\npicking this:\n  ln t < 1 / c", "have \"0 \\<le> (z - x) * f' t\""], ["proof (prove)\nusing this:\n  ln t < 1 / c\n\ngoal (1 subgoal):\n 1. 0 \\<le> (z - x) * f' t", "unfolding f'_def"], ["proof (prove)\nusing this:\n  ln t < 1 / c\n\ngoal (1 subgoal):\n 1. 0 \\<le> (z - x) * (t powr (- c - 1) * (1 - c * ln t))", "using \\<open>c > 0\\<close> x"], ["proof (prove)\nusing this:\n  ln t < 1 / c\n  0 < c\n  x < z\n\ngoal (1 subgoal):\n 1. 0 \\<le> (z - x) * (t powr (- c - 1) * (1 - c * ln t))", "by (intro mult_nonneg_nonneg) (auto simp: z_def field_simps)"], ["proof (state)\nthis:\n  0 \\<le> (z - x) * f' t\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "also"], ["proof (state)\nthis:\n  0 \\<le> (z - x) * f' t\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "from t"], ["proof (chain)\npicking this:\n  x < t\n  t < z\n  f z - f x = (z - x) * f' t", "have \"\\<dots> = f z - f x\""], ["proof (prove)\nusing this:\n  x < t\n  t < z\n  f z - f x = (z - x) * f' t\n\ngoal (1 subgoal):\n 1. (z - x) * f' t = f z - f x", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (z - x) * f' t = f z - f x\n\ngoal (3 subgoals):\n 1. x < z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 3. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> f z - f x", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> f z - f x\n\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "by simp"], ["proof (state)\nthis:\n  f x \\<le> 1 / (c * exp 1)\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "assume x: \"x > z\""], ["proof (state)\nthis:\n  z < x\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "from x assms \\<open>z > 0\\<close>"], ["proof (chain)\npicking this:\n  z < x\n  0 < c\n  f \\<equiv> \\<lambda>x. x powr - c * ln x\n  0 < x\n  0 < z", "have t: \"\\<exists>t. t > z \\<and> t < x \\<and> f x - f z = (x - z) * f' t\""], ["proof (prove)\nusing this:\n  z < x\n  0 < c\n  f \\<equiv> \\<lambda>x. x powr - c * ln x\n  0 < x\n  0 < z\n\ngoal (1 subgoal):\n 1. \\<exists>t>z. t < x \\<and> f x - f z = (x - z) * f' t", "by (intro MVT2 deriv) auto"], ["proof (state)\nthis:\n  \\<exists>t>z. t < x \\<and> f x - f z = (x - z) * f' t\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "then"], ["proof (chain)\npicking this:\n  \\<exists>t>z. t < x \\<and> f x - f z = (x - z) * f' t", "obtain t where t: \"t > z\" \"t < x\" \"f x - f z = (x - z) * f' t\""], ["proof (prove)\nusing this:\n  \\<exists>t>z. t < x \\<and> f x - f z = (x - z) * f' t\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>z < t; t < x; f x - f z = (x - z) * f' t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  z < t\n  t < x\n  f x - f z = (x - z) * f' t\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "hence \"ln z < ln t\""], ["proof (prove)\nusing this:\n  z < t\n  t < x\n  f x - f z = (x - z) * f' t\n\ngoal (1 subgoal):\n 1. ln z < ln t", "using \\<open>z > 0\\<close> assms"], ["proof (prove)\nusing this:\n  z < t\n  t < x\n  f x - f z = (x - z) * f' t\n  0 < z\n  0 < c\n  f \\<equiv> \\<lambda>x. x powr - c * ln x\n  0 < x\n\ngoal (1 subgoal):\n 1. ln z < ln t", "by simp"], ["proof (state)\nthis:\n  ln z < ln t\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "also"], ["proof (state)\nthis:\n  ln z < ln t\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "have \"ln z = 1 / c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln z = 1 / c", "by (simp add: z_def)"], ["proof (state)\nthis:\n  ln z = 1 / c\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "finally"], ["proof (chain)\npicking this:\n  1 / c < ln t", "have \"0 \\<le> (z - x) * f' t\""], ["proof (prove)\nusing this:\n  1 / c < ln t\n\ngoal (1 subgoal):\n 1. 0 \\<le> (z - x) * f' t", "unfolding f'_def"], ["proof (prove)\nusing this:\n  1 / c < ln t\n\ngoal (1 subgoal):\n 1. 0 \\<le> (z - x) * (t powr (- c - 1) * (1 - c * ln t))", "using \\<open>c > 0\\<close> x"], ["proof (prove)\nusing this:\n  1 / c < ln t\n  0 < c\n  z < x\n\ngoal (1 subgoal):\n 1. 0 \\<le> (z - x) * (t powr (- c - 1) * (1 - c * ln t))", "by (intro mult_nonpos_nonpos mult_nonneg_nonpos) (auto simp: z_def field_simps)"], ["proof (state)\nthis:\n  0 \\<le> (z - x) * f' t\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "also"], ["proof (state)\nthis:\n  0 \\<le> (z - x) * f' t\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "from t"], ["proof (chain)\npicking this:\n  z < t\n  t < x\n  f x - f z = (x - z) * f' t", "have \"\\<dots> = f z - f x\""], ["proof (prove)\nusing this:\n  z < t\n  t < x\n  f x - f z = (x - z) * f' t\n\ngoal (1 subgoal):\n 1. (z - x) * f' t = f z - f x", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (z - x) * f' t = f z - f x\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)\n 2. z < x \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> f z - f x", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> f z - f x\n\ngoal (1 subgoal):\n 1. f x \\<le> 1 / (c * exp 1)", "by simp"], ["proof (state)\nthis:\n  f x \\<le> 1 / (c * exp 1)\n\ngoal (1 subgoal):\n 1. x = z \\<Longrightarrow> f x \\<le> 1 / (c * exp 1)", "qed auto"], ["proof (state)\nthis:\n  f x \\<le> 1 / (c * exp 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Following Apostol, we first show a generic bound depending on some real-valued\n  parameter \\<open>\\<alpha>\\<close>:\n\\<close>"], ["", "lemma \\<pi>_upper_bound_strong:\n  fixes \\<alpha> :: real and n :: nat\n  assumes n: \"n \\<ge> 2\" and \\<alpha>: \"\\<alpha> \\<in> {0<..<1}\"\n  shows \"\\<pi> n < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * n / ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"real n powr \\<alpha> \\<le> real n powr 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n powr \\<alpha> \\<le> real n powr 1", "using assms n"], ["proof (prove)\nusing this:\n  2 \\<le> n\n  \\<alpha> \\<in> {0<..<1}\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. real n powr \\<alpha> \\<le> real n powr 1", "by (intro powr_mono) auto"], ["proof (state)\nthis:\n  real n powr \\<alpha> \\<le> real n powr 1\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "hence n': \"real n powr \\<alpha> \\<le> real n\""], ["proof (prove)\nusing this:\n  real n powr \\<alpha> \\<le> real n powr 1\n\ngoal (1 subgoal):\n 1. real n powr \\<alpha> \\<le> real n", "using n"], ["proof (prove)\nusing this:\n  real n powr \\<alpha> \\<le> real n powr 1\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. real n powr \\<alpha> \\<le> real n", "by simp"], ["proof (state)\nthis:\n  real n powr \\<alpha> \\<le> real n\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "define P where \"P = (\\<lambda>x. {p. prime p \\<and> real p \\<le> x})\""], ["proof (state)\nthis:\n  P = (\\<lambda>x. {p. prime p \\<and> real p \\<le> x})\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "define Q where \"Q = {p. prime p \\<and> real p \\<in> {n powr \\<alpha><..n}}\""], ["proof (state)\nthis:\n  Q = {p. prime p \\<and> real p \\<in> {real n powr \\<alpha><..real n}}\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have finite_P [intro]: \"finite (P x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (P x)", "proof (cases \"x \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> finite (P x)\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> finite (P x)", "case True"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> finite (P x)\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> finite (P x)", "hence \"P x \\<subseteq> {..nat \\<lfloor>x\\<rfloor>}\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. P x \\<subseteq> {..nat \\<lfloor>x\\<rfloor>}", "by (auto simp: le_nat_iff le_floor_iff P_def)"], ["proof (state)\nthis:\n  P x \\<subseteq> {..nat \\<lfloor>x\\<rfloor>}\n\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> finite (P x)\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> finite (P x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  P x \\<subseteq> {..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. finite (P x)", "by (rule finite_subset) auto"], ["proof (state)\nthis:\n  finite (P x)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> x \\<Longrightarrow> finite (P x)", "qed (auto simp: P_def)"], ["proof (state)\nthis:\n  finite (P ?x)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have P_subset: \"P x \\<subseteq> P y\" if \"x \\<le> y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. P x \\<subseteq> P y", "using that"], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. P x \\<subseteq> P y", "by (auto simp: P_def)"], ["proof (state)\nthis:\n  ?x \\<le> ?y \\<Longrightarrow> P ?x \\<subseteq> P ?y\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"Q = P n - P (n powr \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = P (real n) - P (real n powr \\<alpha>)", "by (auto simp: Q_def P_def)"], ["proof (state)\nthis:\n  Q = P (real n) - P (real n powr \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "also"], ["proof (state)\nthis:\n  Q = P (real n) - P (real n powr \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"card \\<dots> = card (P n) - card (P (n powr \\<alpha>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (P (real n) - P (real n powr \\<alpha>)) =\n    card (P (real n)) - card (P (real n powr \\<alpha>))", "by (intro card_Diff_subset finite_P P_subset n')"], ["proof (state)\nthis:\n  card (P (real n) - P (real n powr \\<alpha>)) =\n  card (P (real n)) - card (P (real n powr \\<alpha>))\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "also"], ["proof (state)\nthis:\n  card (P (real n) - P (real n powr \\<alpha>)) =\n  card (P (real n)) - card (P (real n powr \\<alpha>))\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"real \\<dots> = \\<pi> n - \\<pi> (n powr \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card (P (real n)) - card (P (real n powr \\<alpha>))) =\n    \\<pi> (real n) - \\<pi> (real n powr \\<alpha>)", "by (subst of_nat_diff[OF card_mono[OF _ P_subset]])\n       (use n' in \\<open>auto simp: \\<pi>_def prime_sum_upto_def P_def\\<close>)"], ["proof (state)\nthis:\n  real (card (P (real n)) - card (P (real n powr \\<alpha>))) =\n  \\<pi> (real n) - \\<pi> (real n powr \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "finally"], ["proof (chain)\npicking this:\n  real (card Q) = \\<pi> (real n) - \\<pi> (real n powr \\<alpha>)", "have card_Q: \"real (card Q) = \\<pi> n - \\<pi> (n powr \\<alpha>)\""], ["proof (prove)\nusing this:\n  real (card Q) = \\<pi> (real n) - \\<pi> (real n powr \\<alpha>)\n\ngoal (1 subgoal):\n 1. real (card Q) = \\<pi> (real n) - \\<pi> (real n powr \\<alpha>)", "."], ["proof (state)\nthis:\n  real (card Q) = \\<pi> (real n) - \\<pi> (real n powr \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"(\\<pi> n - \\<pi> (n powr \\<alpha>)) * ln (n powr \\<alpha>) = (\\<Sum>p\\<in>Q. ln (n powr \\<alpha>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n    ln (real n powr \\<alpha>) =\n    (\\<Sum>p\\<in>Q. ln (real n powr \\<alpha>))", "using card_Q"], ["proof (prove)\nusing this:\n  real (card Q) = \\<pi> (real n) - \\<pi> (real n powr \\<alpha>)\n\ngoal (1 subgoal):\n 1. (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n    ln (real n powr \\<alpha>) =\n    (\\<Sum>p\\<in>Q. ln (real n powr \\<alpha>))", "by simp"], ["proof (state)\nthis:\n  (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n  ln (real n powr \\<alpha>) =\n  (\\<Sum>p\\<in>Q. ln (real n powr \\<alpha>))\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n  ln (real n powr \\<alpha>) =\n  (\\<Sum>p\\<in>Q. ln (real n powr \\<alpha>))\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"\\<dots> \\<le> (\\<Sum>p\\<in>Q. ln p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>Q. ln (real n powr \\<alpha>))\n    \\<le> (\\<Sum>p\\<in>Q. ln (real p))", "using n \\<alpha>"], ["proof (prove)\nusing this:\n  2 \\<le> n\n  \\<alpha> \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>Q. ln (real n powr \\<alpha>))\n    \\<le> (\\<Sum>p\\<in>Q. ln (real p))", "by (intro sum_mono, subst ln_le_cancel_iff) (auto simp: Q_def dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>Q. ln (real n powr \\<alpha>))\n  \\<le> (\\<Sum>p\\<in>Q. ln (real p))\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>Q. ln (real n powr \\<alpha>))\n  \\<le> (\\<Sum>p\\<in>Q. ln (real p))\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"\\<dots> \\<le> \\<theta> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>Q. ln (real p)) \\<le> \\<theta> (real n)", "unfolding \\<theta>_def prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>Q. ln (real p))\n    \\<le> (\\<Sum>p | prime p \\<and> real p \\<le> real n. ln (real p))", "by (intro sum_mono2) (auto simp: Q_def dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>Q. ln (real p)) \\<le> \\<theta> (real n)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>Q. ln (real p)) \\<le> \\<theta> (real n)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"\\<dots> < ln 4 * real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> (real n) < ln 4 * real n", "by (rule \\<theta>_upper_bound) (use n in auto)"], ["proof (state)\nthis:\n  \\<theta> (real n) < ln 4 * real n\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "finally"], ["proof (chain)\npicking this:\n  (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n  ln (real n powr \\<alpha>)\n  < ln 4 * real n", "have ineq: \"(\\<pi> n - \\<pi> (n powr \\<alpha>)) * ln (n powr \\<alpha>) < ln 4 * n\""], ["proof (prove)\nusing this:\n  (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n  ln (real n powr \\<alpha>)\n  < ln 4 * real n\n\ngoal (1 subgoal):\n 1. (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n    ln (real n powr \\<alpha>)\n    < ln 4 * real n", "."], ["proof (state)\nthis:\n  (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n  ln (real n powr \\<alpha>)\n  < ln 4 * real n\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "with n assms"], ["proof (chain)\npicking this:\n  2 \\<le> n\n  2 \\<le> n\n  \\<alpha> \\<in> {0<..<1}\n  (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n  ln (real n powr \\<alpha>)\n  < ln 4 * real n", "have \"\\<pi> n < \\<pi> (n powr \\<alpha>) + (ln 4 / \\<alpha>) * n / ln n\""], ["proof (prove)\nusing this:\n  2 \\<le> n\n  2 \\<le> n\n  \\<alpha> \\<in> {0<..<1}\n  (\\<pi> (real n) - \\<pi> (real n powr \\<alpha>)) *\n  ln (real n powr \\<alpha>)\n  < ln 4 * real n\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < \\<pi> (real n powr \\<alpha>) + ln 4 / \\<alpha> * real n / ln (real n)", "by (simp add: field_simps ln_powr\n             del: div_mult_self3 div_mult_self4 div_mult_self2 div_mult_self1)"], ["proof (state)\nthis:\n  \\<pi> (real n)\n  < \\<pi> (real n powr \\<alpha>) + ln 4 / \\<alpha> * real n / ln (real n)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "also"], ["proof (state)\nthis:\n  \\<pi> (real n)\n  < \\<pi> (real n powr \\<alpha>) + ln 4 / \\<alpha> * real n / ln (real n)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"\\<pi> (n powr \\<alpha>) \\<le> n powr \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real n powr \\<alpha>) \\<le> real n powr \\<alpha>", "by (rule \\<pi>_le_self) auto"], ["proof (state)\nthis:\n  \\<pi> (real n powr \\<alpha>) \\<le> real n powr \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "also"], ["proof (state)\nthis:\n  \\<pi> (real n powr \\<alpha>) \\<le> real n powr \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"n powr \\<alpha> + ln 4 / \\<alpha> * n / ln n =\n               (n powr (-(1 - \\<alpha>)) * ln n + ln 4 / \\<alpha>) * n / ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n powr \\<alpha> + ln 4 / \\<alpha> * real n / ln (real n) =\n    (real n powr - (1 - \\<alpha>) * ln (real n) + ln 4 / \\<alpha>) *\n    real n /\n    ln (real n)", "using n \\<alpha>"], ["proof (prove)\nusing this:\n  2 \\<le> n\n  \\<alpha> \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. real n powr \\<alpha> + ln 4 / \\<alpha> * real n / ln (real n) =\n    (real n powr - (1 - \\<alpha>) * ln (real n) + ln 4 / \\<alpha>) *\n    real n /\n    ln (real n)", "by (simp add: field_simps powr_diff\n                       del: div_mult_self3 div_mult_self4 div_mult_self2 div_mult_self1)"], ["proof (state)\nthis:\n  real n powr \\<alpha> + ln 4 / \\<alpha> * real n / ln (real n) =\n  (real n powr - (1 - \\<alpha>) * ln (real n) + ln 4 / \\<alpha>) * real n /\n  ln (real n)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "also"], ["proof (state)\nthis:\n  real n powr \\<alpha> + ln 4 / \\<alpha> * real n / ln (real n) =\n  (real n powr - (1 - \\<alpha>) * ln (real n) + ln 4 / \\<alpha>) * real n /\n  ln (real n)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "have \"n powr (-(1 - \\<alpha>)) * ln n \\<le> 1 / ((1 - \\<alpha>) * exp 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n powr - (1 - \\<alpha>) * ln (real n)\n    \\<le> 1 / ((1 - \\<alpha>) * exp 1)", "by (intro \\<pi>_upper_bound_aux) (use \\<alpha> n in auto)"], ["proof (state)\nthis:\n  real n powr - (1 - \\<alpha>) * ln (real n)\n  \\<le> 1 / ((1 - \\<alpha>) * exp 1)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "hence \"(n powr (-(1 - \\<alpha>)) * ln n + ln 4 / \\<alpha>) * n / ln n \\<le>\n           (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * n / ln n\""], ["proof (prove)\nusing this:\n  real n powr - (1 - \\<alpha>) * ln (real n)\n  \\<le> 1 / ((1 - \\<alpha>) * exp 1)\n\ngoal (1 subgoal):\n 1. (real n powr - (1 - \\<alpha>) * ln (real n) + ln 4 / \\<alpha>) *\n    real n /\n    ln (real n)\n    \\<le> (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n          ln (real n)", "using n \\<alpha>"], ["proof (prove)\nusing this:\n  real n powr - (1 - \\<alpha>) * ln (real n)\n  \\<le> 1 / ((1 - \\<alpha>) * exp 1)\n  2 \\<le> n\n  \\<alpha> \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. (real n powr - (1 - \\<alpha>) * ln (real n) + ln 4 / \\<alpha>) *\n    real n /\n    ln (real n)\n    \\<le> (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n          ln (real n)", "by (intro divide_right_mono mult_right_mono add_mono) auto"], ["proof (state)\nthis:\n  (real n powr - (1 - \\<alpha>) * ln (real n) + ln 4 / \\<alpha>) * real n /\n  ln (real n)\n  \\<le> (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n        ln (real n)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + ln 4 / \\<alpha> * real n / ln (real n)\n      \\<le> y + ln 4 / \\<alpha> * real n / ln (real n)) \\<Longrightarrow>\n  \\<pi> (real n)\n  < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n / ln (real n)", "show \"\\<pi> n < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * n / ln n\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + ln 4 / \\<alpha> * real n / ln (real n)\n      \\<le> y + ln 4 / \\<alpha> * real n / ln (real n)) \\<Longrightarrow>\n  \\<pi> (real n)\n  < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n / ln (real n)\n\ngoal (1 subgoal):\n 1. \\<pi> (real n)\n    < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n /\n      ln (real n)", "by simp"], ["proof (state)\nthis:\n  \\<pi> (real n)\n  < (1 / ((1 - \\<alpha>) * exp 1) + ln 4 / \\<alpha>) * real n / ln (real n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The choice $\\alpha := \\frac{2}{3}$ then leads to the upper bound $\\pi(x) < cx/\\ln x$\n  with $c = 3(e^{-1} + \\ln 2) \\approx 3.183$. This is considerably stronger than\n  Apostol's bound.\n\\<close>"], ["", "theorem \\<pi>_upper_bound:\n  fixes x :: real\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<pi> x < 3 * (exp (-1) + ln 2) * x / ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "proof (cases \"x \\<ge> 3\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "case False"], ["proof (state)\nthis:\n  \\<not> 3 \\<le> x\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "have \"\\<pi> x = \\<pi> (nat \\<lfloor>x\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x = \\<pi> (real (nat \\<lfloor>x\\<rfloor>))", "by simp"], ["proof (state)\nthis:\n  \\<pi> x = \\<pi> (real (nat \\<lfloor>x\\<rfloor>))\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "also"], ["proof (state)\nthis:\n  \\<pi> x = \\<pi> (real (nat \\<lfloor>x\\<rfloor>))\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "from False and assms"], ["proof (chain)\npicking this:\n  \\<not> 3 \\<le> x\n  2 \\<le> x", "have \"nat \\<lfloor>x\\<rfloor> = 2\""], ["proof (prove)\nusing this:\n  \\<not> 3 \\<le> x\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>x\\<rfloor> = 2", "by linarith"], ["proof (state)\nthis:\n  nat \\<lfloor>x\\<rfloor> = 2\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "finally"], ["proof (chain)\npicking this:\n  \\<pi> x = \\<pi> (real 2)", "have \"\\<pi> x = 1\""], ["proof (prove)\nusing this:\n  \\<pi> x = \\<pi> (real 2)\n\ngoal (1 subgoal):\n 1. \\<pi> x = 1", "by (simp add: eval_\\<pi>)"], ["proof (state)\nthis:\n  \\<pi> x = 1\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "also"], ["proof (state)\nthis:\n  \\<pi> x = 1\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "have \"\\<dots> < 3 * (exp (-1) + ln 2) * exp 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < 3 * (exp (- 1) + ln 2) * exp 1", "by (simp add: exp_minus field_simps add_pos_pos\n             del: div_mult_self3 div_mult_self4 div_mult_self2 div_mult_self1)"], ["proof (state)\nthis:\n  1 < 3 * (exp (- 1) + ln 2) * exp 1\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "also"], ["proof (state)\nthis:\n  1 < 3 * (exp (- 1) + ln 2) * exp 1\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "have \"\\<dots> \\<le> 3 * (exp (-1) + ln 2) * (x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * (exp (- 1) + ln 2) * exp 1 \\<le> 3 * (exp (- 1) + ln 2) * (x / ln x)", "using \\<pi>_upper_bound_aux[of 1 x]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1; 0 < x\\<rbrakk>\n  \\<Longrightarrow> x powr - 1 * ln x \\<le> 1 / (1 * exp 1)\n\ngoal (1 subgoal):\n 1. 3 * (exp (- 1) + ln 2) * exp 1 \\<le> 3 * (exp (- 1) + ln 2) * (x / ln x)", "by (intro mult_left_mono) (use assms in \\<open>auto simp: field_simps powr_minus\\<close>)"], ["proof (state)\nthis:\n  3 * (exp (- 1) + ln 2) * exp 1 \\<le> 3 * (exp (- 1) + ln 2) * (x / ln x)\n\ngoal (2 subgoals):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n 2. \\<not> 3 \\<le> x \\<Longrightarrow>\n    \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "finally"], ["proof (chain)\npicking this:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "using assms"], ["proof (prove)\nusing this:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "case True"], ["proof (state)\nthis:\n  3 \\<le> x\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "define n where \"n = nat \\<lfloor>x\\<rfloor>\""], ["proof (state)\nthis:\n  n = nat \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "from True"], ["proof (chain)\npicking this:\n  3 \\<le> x", "have n: \"n \\<ge> 3\""], ["proof (prove)\nusing this:\n  3 \\<le> x\n\ngoal (1 subgoal):\n 1. 3 \\<le> n", "by (simp add: n_def le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  3 \\<le> n\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "have \"\\<pi> x = \\<pi> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x = \\<pi> (real n)", "by (simp add: n_def)"], ["proof (state)\nthis:\n  \\<pi> x = \\<pi> (real n)\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "also"], ["proof (state)\nthis:\n  \\<pi> x = \\<pi> (real n)\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "have \"\\<pi> n < 3 * (exp (-1) + ln 2) * (n / ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real n) < 3 * (exp (- 1) + ln 2) * (real n / ln (real n))", "using \\<pi>_upper_bound_strong[of n \"2 / 3\"] ln_realpow[of 2 2] n"], ["proof (prove)\nusing this:\n  \\<lbrakk>2 \\<le> n; 2 / 3 \\<in> {0<..<1}\\<rbrakk>\n  \\<Longrightarrow> \\<pi> (real n)\n                    < (1 / ((1 - 2 / 3) * exp 1) + ln 4 / (2 / 3)) *\n                      real n /\n                      ln (real n)\n  0 < 2 \\<Longrightarrow> ln (2\\<^sup>2) = real 2 * ln 2\n  3 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<pi> (real n) < 3 * (exp (- 1) + ln 2) * (real n / ln (real n))", "by (simp add: field_simps exp_minus\n             del: div_mult_self3 div_mult_self4 div_mult_self2 div_mult_self1)"], ["proof (state)\nthis:\n  \\<pi> (real n) < 3 * (exp (- 1) + ln 2) * (real n / ln (real n))\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "also"], ["proof (state)\nthis:\n  \\<pi> (real n) < 3 * (exp (- 1) + ln 2) * (real n / ln (real n))\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "have \"\\<dots> \\<le> 3 * (exp (-1) + ln 2) * (x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * (exp (- 1) + ln 2) * (real n / ln (real n))\n    \\<le> 3 * (exp (- 1) + ln 2) * (x / ln x)", "using n True"], ["proof (prove)\nusing this:\n  3 \\<le> n\n  3 \\<le> x\n\ngoal (1 subgoal):\n 1. 3 * (exp (- 1) + ln 2) * (real n / ln (real n))\n    \\<le> 3 * (exp (- 1) + ln 2) * (x / ln x)", "by (intro mult_left_mono divide_ln_mono) (auto simp: n_def)"], ["proof (state)\nthis:\n  3 * (exp (- 1) + ln 2) * (real n / ln (real n))\n  \\<le> 3 * (exp (- 1) + ln 2) * (x / ln x)\n\ngoal (1 subgoal):\n 1. 3 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "finally"], ["proof (chain)\npicking this:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary \\<pi>_upper_bound':\n  fixes x :: real\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<pi> x < 443 / 139 * (x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "have \"2.71828 \\<le> 5837465777 / 2147483648 - inverse (2 ^ 32 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 271828 / 10 ^ 5 \\<le> 5837465777 / 2147483648 - inverse (2 ^ 32)", "by simp"], ["proof (state)\nthis:\n  271828 / 10 ^ 5 \\<le> 5837465777 / 2147483648 - inverse (2 ^ 32)\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "also"], ["proof (state)\nthis:\n  271828 / 10 ^ 5 \\<le> 5837465777 / 2147483648 - inverse (2 ^ 32)\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "have \"\\<dots> \\<le> exp (1 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 5837465777 / 2147483648 - inverse (2 ^ 32) \\<le> exp 1", "using e_approx_32"], ["proof (prove)\nusing this:\n  \\<bar>exp 1 - 5837465777 / 2147483648\\<bar> \\<le> inverse (2 ^ 32)\n\ngoal (1 subgoal):\n 1. 5837465777 / 2147483648 - inverse (2 ^ 32) \\<le> exp 1", "by linarith"], ["proof (state)\nthis:\n  5837465777 / 2147483648 - inverse (2 ^ 32) \\<le> exp 1\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "finally"], ["proof (chain)\npicking this:\n  271828 / 10 ^ 5 \\<le> exp 1", "have \"exp 1 \\<ge> (2.71828 :: real)\""], ["proof (prove)\nusing this:\n  271828 / 10 ^ 5 \\<le> exp 1\n\ngoal (1 subgoal):\n 1. 271828 / 10 ^ 5 \\<le> exp 1", "."], ["proof (state)\nthis:\n  271828 / 10 ^ 5 \\<le> exp 1\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "hence e_m1: \"exp (-1) \\<le> (10^5 / 271828 :: real)\""], ["proof (prove)\nusing this:\n  271828 / 10 ^ 5 \\<le> exp 1\n\ngoal (1 subgoal):\n 1. exp (- 1) \\<le> 10 ^ 5 / 271828", "by (simp add: field_simps exp_minus)"], ["proof (state)\nthis:\n  exp (- 1) \\<le> 10 ^ 5 / 271828\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "from assms"], ["proof (chain)\npicking this:\n  2 \\<le> x", "have \"\\<pi> x < 3 * (exp (-1) + ln 2) * (x / ln x)\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)", "using \\<pi>_upper_bound[of x]"], ["proof (prove)\nusing this:\n  2 \\<le> x\n  2 \\<le> x \\<Longrightarrow> \\<pi> x < 3 * (exp (- 1) + ln 2) * x / ln x\n\ngoal (1 subgoal):\n 1. \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "also"], ["proof (state)\nthis:\n  \\<pi> x < 3 * (exp (- 1) + ln 2) * (x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "have \"\\<dots> \\<le> 443 / 139 * (x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * (exp (- 1) + ln 2) * (x / ln x) \\<le> 443 / 139 * (x / ln x)", "proof (intro mult_right_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. 3 * (exp (- 1) + ln 2) \\<le> 443 / 139\n 2. 0 \\<le> x / ln x", "have \"3 * (exp (-1) + ln 2 :: real) \\<le> 3 * (10^5 / 271828 + 25 / 36)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * (exp (- 1) + ln 2) \\<le> 3 * (10 ^ 5 / 271828 + 25 / 36)", "using e_m1"], ["proof (prove)\nusing this:\n  exp (- 1) \\<le> 10 ^ 5 / 271828\n\ngoal (1 subgoal):\n 1. 3 * (exp (- 1) + ln 2) \\<le> 3 * (10 ^ 5 / 271828 + 25 / 36)", "by (intro mult_left_mono add_mono ln2_le_25_over_36)\n                    (auto simp: exp_minus field_simps abs_if split: if_splits)"], ["proof (state)\nthis:\n  3 * (exp (- 1) + ln 2) \\<le> 3 * (10 ^ 5 / 271828 + 25 / 36)\n\ngoal (2 subgoals):\n 1. 3 * (exp (- 1) + ln 2) \\<le> 443 / 139\n 2. 0 \\<le> x / ln x", "also"], ["proof (state)\nthis:\n  3 * (exp (- 1) + ln 2) \\<le> 3 * (10 ^ 5 / 271828 + 25 / 36)\n\ngoal (2 subgoals):\n 1. 3 * (exp (- 1) + ln 2) \\<le> 443 / 139\n 2. 0 \\<le> x / ln x", "have \"\\<dots> \\<le> 443 / 139\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * (10 ^ 5 / 271828 + 25 / 36) \\<le> 443 / 139", "by simp"], ["proof (state)\nthis:\n  3 * (10 ^ 5 / 271828 + 25 / 36) \\<le> 443 / 139\n\ngoal (2 subgoals):\n 1. 3 * (exp (- 1) + ln 2) \\<le> 443 / 139\n 2. 0 \\<le> x / ln x", "finally"], ["proof (chain)\npicking this:\n  3 * (exp (- 1) + ln 2) \\<le> 443 / 139", "show \"3 * (exp (- 1) + ln 2 :: real) \\<le> 443 / 139\""], ["proof (prove)\nusing this:\n  3 * (exp (- 1) + ln 2) \\<le> 443 / 139\n\ngoal (1 subgoal):\n 1. 3 * (exp (- 1) + ln 2) \\<le> 443 / 139", "by simp"], ["proof (state)\nthis:\n  3 * (exp (- 1) + ln 2) \\<le> 443 / 139\n\ngoal (1 subgoal):\n 1. 0 \\<le> x / ln x", "qed (use assms in auto)"], ["proof (state)\nthis:\n  3 * (exp (- 1) + ln 2) * (x / ln x) \\<le> 443 / 139 * (x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "finally"], ["proof (chain)\npicking this:\n  \\<pi> x < 443 / 139 * (x / ln x)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> x < 443 / 139 * (x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> x < 443 / 139 * (x / ln x)", "."], ["proof (state)\nthis:\n  \\<pi> x < 443 / 139 * (x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary \\<pi>_upper_bound'':\n  fixes x :: real\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<pi> x < 4 * (x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x < 4 * (x / ln x)", "by (rule less_le_trans[OF \\<pi>_upper_bound'[OF assms] mult_right_mono]) (use assms in auto)"], ["", "text \\<open>\n  In particular, we have now shown a weak version of the Prime Number Theorem, namely\n  that $\\pi(x) \\in \\Theta(x/\\ln x)$:\n\\<close>"], ["", "lemma \\<pi>_bigtheta: \"\\<pi> \\<in> \\<Theta>(\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<in> \\<Theta>(\\<lambda>x. x / ln x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)\n 2. \\<pi> \\<in> \\<Omega>(\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x. \\<bar>\\<pi> x\\<bar> \\<le> 3 * (exp (- 1) + ln 2) * \\<bar>x / ln x\\<bar>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>\\<pi> x\\<bar>\n       \\<le> 3 * (exp (- 1) + ln 2) * \\<bar>x / ln x\\<bar>", "using eventually_ge_at_top[of 2]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>\\<pi> x\\<bar>\n       \\<le> 3 * (exp (- 1) + ln 2) * \\<bar>x / ln x\\<bar>", "by eventually_elim (use \\<pi>_upper_bound in \\<open>auto intro!: less_imp_le\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>\\<pi> x\\<bar> \\<le> 3 * (exp (- 1) + ln 2) * \\<bar>x / ln x\\<bar>\n\ngoal (2 subgoals):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)\n 2. \\<pi> \\<in> \\<Omega>(\\<lambda>x. x / ln x)", "thus \"\\<pi> \\<in> O(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>\\<pi> x\\<bar> \\<le> 3 * (exp (- 1) + ln 2) * \\<bar>x / ln x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "by (intro bigoI[where c = \"3 * (exp (- 1) + ln 2)\"]) auto"], ["proof (state)\nthis:\n  \\<pi> \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> \\<Omega>(\\<lambda>x. x / ln x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> \\<in> \\<Omega>(\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x. \\<bar>\\<pi> x\\<bar> \\<ge> 1 / 6 * \\<bar>x / ln x\\<bar>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 / 6 * \\<bar>x / ln x\\<bar> \\<le> \\<bar>\\<pi> x\\<bar>", "using eventually_ge_at_top[of 2]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 / 6 * \\<bar>x / ln x\\<bar> \\<le> \\<bar>\\<pi> x\\<bar>", "by eventually_elim (use \\<pi>_lower_bound in \\<open>auto intro!: less_imp_le\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     1 / 6 * \\<bar>x / ln x\\<bar> \\<le> \\<bar>\\<pi> x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> \\<Omega>(\\<lambda>x. x / ln x)", "thus \"\\<pi> \\<in> \\<Omega>(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     1 / 6 * \\<bar>x / ln x\\<bar> \\<le> \\<bar>\\<pi> x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> \\<Omega>(\\<lambda>x. x / ln x)", "by (intro landau_omega.bigI[where c = \"1 / 6\"]) auto"], ["proof (state)\nthis:\n  \\<pi> \\<in> \\<Omega>(\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bounds for $p_n$\\<close>"], ["", "text \\<open>\n  By some rearrangements, the lower and upper bounds for $\\pi(x)$ give rise to\n  analogous bounds for $p_n$:\n\\<close>"], ["", "lemma nth_prime_lower_bound_gen:\n  assumes c: \"c > 0\" and n: \"n > 0\"\n  assumes \"\\<And>n. n \\<ge> 2 \\<Longrightarrow> \\<pi> (real n) < (1 / c) * (real n / ln (real n))\"\n  shows \"nth_prime (n - 1) \\<ge> c * (real n * ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "define p where \"p = nth_prime (n - 1)\""], ["proof (state)\nthis:\n  p = nth_prime (n - 1)\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "have \"p \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> p", "by (simp add: p_def nth_prime_ge_2)"], ["proof (state)\nthis:\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "have \"p \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> p", "using nth_prime_lower_bound[of \"n - 1\"]"], ["proof (prove)\nusing this:\n  Suc (Suc (n - 1)) \\<le> nth_prime (n - 1)\n\ngoal (1 subgoal):\n 1. n \\<le> p", "by (simp add: p_def)"], ["proof (state)\nthis:\n  n \\<le> p\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "have \"c * (n * ln n) \\<le> c * (n * ln p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> c * (real n * ln (real p))", "using n c \\<open>p \\<ge> n\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n  0 < c\n  n \\<le> p\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> c * (real n * ln (real p))", "by (intro mult_left_mono) auto"], ["proof (state)\nthis:\n  c * (real n * ln (real n)) \\<le> c * (real n * ln (real p))\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "also"], ["proof (state)\nthis:\n  c * (real n * ln (real n)) \\<le> c * (real n * ln (real p))\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "{"], ["proof (state)\nthis:\n  c * (real n * ln (real n)) \\<le> c * (real n * ln (real p))\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "from \\<open>p \\<ge> 2\\<close>"], ["proof (chain)\npicking this:\n  2 \\<le> p", "have \"\\<pi> (real p) < (1 / c) * (real p / ln (real p))\""], ["proof (prove)\nusing this:\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. \\<pi> (real p) < 1 / c * (real p / ln (real p))", "by (rule assms)"], ["proof (state)\nthis:\n  \\<pi> (real p) < 1 / c * (real p / ln (real p))\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "also"], ["proof (state)\nthis:\n  \\<pi> (real p) < 1 / c * (real p / ln (real p))\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "from n"], ["proof (chain)\npicking this:\n  0 < n", "have \"\\<pi> (real p) = n\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<pi> (real p) = real n", "by (simp add: p_def)"], ["proof (state)\nthis:\n  \\<pi> (real p) = real n\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "finally"], ["proof (chain)\npicking this:\n  real n < 1 / c * (real p / ln (real p))", "have \"c * (n * ln p) < p\""], ["proof (prove)\nusing this:\n  real n < 1 / c * (real p / ln (real p))\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real p)) < real p", "using c \\<open>p \\<ge> 2\\<close> n"], ["proof (prove)\nusing this:\n  real n < 1 / c * (real p / ln (real p))\n  0 < c\n  2 \\<le> p\n  0 < n\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real p)) < real p", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  c * (real n * ln (real p)) < real p\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "}"], ["proof (state)\nthis:\n  c * (real n * ln (real p)) < real p\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "finally"], ["proof (chain)\npicking this:\n  c * (real n * ln (real n)) < real p", "show \"nth_prime (n - 1) \\<ge> c * (real n * ln (real n))\""], ["proof (prove)\nusing this:\n  c * (real n * ln (real n)) < real p\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "using c n"], ["proof (prove)\nusing this:\n  c * (real n * ln (real n)) < real p\n  0 < c\n  0 < n\n\ngoal (1 subgoal):\n 1. c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "by (simp add: p_def)"], ["proof (state)\nthis:\n  c * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary nth_prime_lower_bound:\n  \"n > 0 \\<Longrightarrow> nth_prime (n - 1) \\<ge> (139 / 443) * (n * ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    139 / 443 * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "using \\<pi>_upper_bound'"], ["proof (prove)\nusing this:\n  2 \\<le> ?x \\<Longrightarrow> \\<pi> ?x < 443 / 139 * (?x / ln ?x)\n\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    139 / 443 * (real n * ln (real n)) \\<le> real (nth_prime (n - 1))", "by (intro nth_prime_lower_bound_gen) auto"], ["", "corollary nth_prime_upper_bound:\n  assumes n: \"n > 0\"\n  shows   \"nth_prime (n - 1) < 12 * (n * ln n + n * ln (12 / exp 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "define p where \"p = nth_prime (n - 1)\""], ["proof (state)\nthis:\n  p = nth_prime (n - 1)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"p \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> p", "by (simp add: p_def nth_prime_ge_2)"], ["proof (state)\nthis:\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"(1 / 6) * (p / ln p) < \\<pi> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 6 * (real p / ln (real p)) < \\<pi> (real p)", "by (intro \\<pi>_lower_bound) (use \\<open>p \\<ge> 2\\<close> in auto)"], ["proof (state)\nthis:\n  1 / 6 * (real p / ln (real p)) < \\<pi> (real p)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "also"], ["proof (state)\nthis:\n  1 / 6 * (real p / ln (real p)) < \\<pi> (real p)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"\\<dots> = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real p) = real n", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<pi> (real p) = real n", "by (simp add: p_def)"], ["proof (state)\nthis:\n  \\<pi> (real p) = real n\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "finally"], ["proof (chain)\npicking this:\n  1 / 6 * (real p / ln (real p)) < real n", "have less: \"p < 6 * n * ln p\""], ["proof (prove)\nusing this:\n  1 / 6 * (real p / ln (real p)) < real n\n\ngoal (1 subgoal):\n 1. real p < real (6 * n) * ln (real p)", "using \\<open>p \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  1 / 6 * (real p / ln (real p)) < real n\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. real p < real (6 * n) * ln (real p)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  real p < real (6 * n) * ln (real p)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "also"], ["proof (state)\nthis:\n  real p < real (6 * n) * ln (real p)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"ln p \\<le> (2 / exp 1) * sqrt p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real p) \\<le> 2 / exp 1 * sqrt (real p)", "using \\<pi>_upper_bound_aux[of \"1 / 2\" p] \\<open>p \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1 / 2; 0 < real p\\<rbrakk>\n  \\<Longrightarrow> real p powr - (1 / 2) * ln (real p)\n                    \\<le> 1 / (1 / 2 * exp 1)\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. ln (real p) \\<le> 2 / exp 1 * sqrt (real p)", "by (simp add: field_simps powr_minus powr_half_sqrt)"], ["proof (state)\nthis:\n  ln (real p) \\<le> 2 / exp 1 * sqrt (real p)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real (6 * n) * x \\<le> real (6 * n) * y) \\<Longrightarrow>\n  real p < real (6 * n) * (2 / exp 1 * sqrt (real p))", "have \"sqrt p * sqrt p < 12 / exp 1 * n * sqrt p\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real (6 * n) * x \\<le> real (6 * n) * y) \\<Longrightarrow>\n  real p < real (6 * n) * (2 / exp 1 * sqrt (real p))\n\ngoal (1 subgoal):\n 1. sqrt (real p) * sqrt (real p) < 12 / exp 1 * real n * sqrt (real p)", "using n"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real (6 * n) * x \\<le> real (6 * n) * y) \\<Longrightarrow>\n  real p < real (6 * n) * (2 / exp 1 * sqrt (real p))\n  0 < n\n\ngoal (1 subgoal):\n 1. sqrt (real p) * sqrt (real p) < 12 / exp 1 * real n * sqrt (real p)", "by simp"], ["proof (state)\nthis:\n  sqrt (real p) * sqrt (real p) < 12 / exp 1 * real n * sqrt (real p)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "hence \"sqrt p < 12 / exp 1 * n\""], ["proof (prove)\nusing this:\n  sqrt (real p) * sqrt (real p) < 12 / exp 1 * real n * sqrt (real p)\n\ngoal (1 subgoal):\n 1. sqrt (real p) < 12 / exp 1 * real n", "by (subst (asm) mult_less_cancel_right) (use \\<open>p \\<ge> 2\\<close> in auto)"], ["proof (state)\nthis:\n  sqrt (real p) < 12 / exp 1 * real n\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "hence \"ln (sqrt p) < ln (12 / exp 1 * n)\""], ["proof (prove)\nusing this:\n  sqrt (real p) < 12 / exp 1 * real n\n\ngoal (1 subgoal):\n 1. ln (sqrt (real p)) < ln (12 / exp 1 * real n)", "using n \\<open>p \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  sqrt (real p) < 12 / exp 1 * real n\n  0 < n\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. ln (sqrt (real p)) < ln (12 / exp 1 * real n)", "by (subst ln_less_cancel_iff) auto"], ["proof (state)\nthis:\n  ln (sqrt (real p)) < ln (12 / exp 1 * real n)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "also"], ["proof (state)\nthis:\n  ln (sqrt (real p)) < ln (12 / exp 1 * real n)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"ln (sqrt p) = ln p / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (sqrt (real p)) = ln (real p) / 2", "using \\<open>p \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. ln (sqrt (real p)) = ln (real p) / 2", "by (simp add: ln_sqrt)"], ["proof (state)\nthis:\n  ln (sqrt (real p)) = ln (real p) / 2\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "also"], ["proof (state)\nthis:\n  ln (sqrt (real p)) = ln (real p) / 2\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"ln (12 / exp 1 * n) = ln n + ln (12 / exp 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (12 / exp 1 * real n) = ln (real n) + ln (12 / exp 1)", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. ln (12 / exp 1 * real n) = ln (real n) + ln (12 / exp 1)", "by (simp add: ln_div ln_mult)"], ["proof (state)\nthis:\n  ln (12 / exp 1 * real n) = ln (real n) + ln (12 / exp 1)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "finally"], ["proof (chain)\npicking this:\n  ln (real p) / 2 < ln (real n) + ln (12 / exp 1)", "have ln_less: \"ln p \\<le> 2 * ln n + 2 * ln (12 / exp 1)\""], ["proof (prove)\nusing this:\n  ln (real p) / 2 < ln (real n) + ln (12 / exp 1)\n\ngoal (1 subgoal):\n 1. ln (real p) \\<le> 2 * ln (real n) + 2 * ln (12 / exp 1)", "by simp"], ["proof (state)\nthis:\n  ln (real p) \\<le> 2 * ln (real n) + 2 * ln (12 / exp 1)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"p < 6 * n * ln p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real p < real (6 * n) * ln (real p)", "by (fact less)"], ["proof (state)\nthis:\n  real p < real (6 * n) * ln (real p)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "also"], ["proof (state)\nthis:\n  real p < real (6 * n) * ln (real p)\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"\\<dots> \\<le> 6 * n * (2 * ln n + 2 * ln (12 / exp 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (6 * n) * ln (real p)\n    \\<le> real (6 * n) * (2 * ln (real n) + 2 * ln (12 / exp 1))", "by (intro mult_left_mono ln_less) auto"], ["proof (state)\nthis:\n  real (6 * n) * ln (real p)\n  \\<le> real (6 * n) * (2 * ln (real n) + 2 * ln (12 / exp 1))\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "also"], ["proof (state)\nthis:\n  real (6 * n) * ln (real p)\n  \\<le> real (6 * n) * (2 * ln (real n) + 2 * ln (12 / exp 1))\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "have \"\\<dots> = 12 * (n * ln n + n * ln (12 / exp 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (6 * n) * (2 * ln (real n) + 2 * ln (12 / exp 1)) =\n    12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  real (6 * n) * (2 * ln (real n) + 2 * ln (12 / exp 1)) =\n  12 * (real n * ln (real n) + real n * ln (12 / exp 1))\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "finally"], ["proof (chain)\npicking this:\n  real p < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  real p < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "unfolding p_def"], ["proof (prove)\nusing this:\n  real (nth_prime (n - 1))\n  < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))\n\ngoal (1 subgoal):\n 1. real (nth_prime (n - 1))\n    < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))", "."], ["proof (state)\nthis:\n  real (nth_prime (n - 1))\n  < 12 * (real n * ln (real n) + real n * ln (12 / exp 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We can thus also conclude that $p_n \\sim n \\ln n$:\n\\<close>"], ["", "corollary nth_prime_bigtheta: \"nth_prime \\<in> \\<Theta>(\\<lambda>n. n * ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Theta>(\\<lambda>x. real x * ln (real x))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> O(\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "have \"eventually (\\<lambda>n. \\<bar>nth_prime n\\<bar> \\<le>\n           12 * \\<bar>(n + 1) * ln (n + 1) + (n + 1) * ln (12 / exp 1)\\<bar>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real_of_int \\<bar>int (nth_prime n)\\<bar>\n       \\<le> 12 *\n             \\<bar>(real n + 1) * ln (real n + 1) +\n                   (real n + 1) * ln (12 / exp 1)\\<bar>", "using eventually_ge_at_top[of 2]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real_of_int \\<bar>int (nth_prime n)\\<bar>\n       \\<le> 12 *\n             \\<bar>(real n + 1) * ln (real n + 1) +\n                   (real n + 1) * ln (12 / exp 1)\\<bar>", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       real_of_int \\<bar>int (nth_prime n)\\<bar>\n       \\<le> 12 *\n             \\<bar>(real n + 1) * ln (real n + 1) +\n                   (real n + 1) * ln (12 / exp 1)\\<bar>", "case (elim n)"], ["proof (state)\nthis:\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       real_of_int \\<bar>int (nth_prime n)\\<bar>\n       \\<le> 12 *\n             \\<bar>(real n + 1) * ln (real n + 1) +\n                   (real n + 1) * ln (12 / exp 1)\\<bar>", "with nth_prime_upper_bound[of \"n + 1\"]"], ["proof (chain)\npicking this:\n  0 < n + 1 \\<Longrightarrow>\n  real (nth_prime (n + 1 - 1))\n  < 12 * (real (n + 1) * ln (real (n + 1)) + real (n + 1) * ln (12 / exp 1))\n  2 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  0 < n + 1 \\<Longrightarrow>\n  real (nth_prime (n + 1 - 1))\n  < 12 * (real (n + 1) * ln (real (n + 1)) + real (n + 1) * ln (12 / exp 1))\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. real_of_int \\<bar>int (nth_prime n)\\<bar>\n    \\<le> 12 *\n          \\<bar>(real n + 1) * ln (real n + 1) +\n                (real n + 1) * ln (12 / exp 1)\\<bar>", "by (auto simp: add_ac)"], ["proof (state)\nthis:\n  real_of_int \\<bar>int (nth_prime n)\\<bar>\n  \\<le> 12 *\n        \\<bar>(real n + 1) * ln (real n + 1) +\n              (real n + 1) * ln (12 / exp 1)\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int \\<bar>int (nth_prime n)\\<bar>\n     \\<le> 12 *\n           \\<bar>(real n + 1) * ln (real n + 1) +\n                 (real n + 1) * ln (12 / exp 1)\\<bar>\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> O(\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "hence \"nth_prime \\<in> O(\\<lambda>n. (n + 1) * ln (n + 1) + (n + 1) * ln (12 / exp 1))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int \\<bar>int (nth_prime n)\\<bar>\n     \\<le> 12 *\n           \\<bar>(real n + 1) * ln (real n + 1) +\n                 (real n + 1) * ln (12 / exp 1)\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> O(\\<lambda>x.\n               (real x + 1) * ln (real x + 1) +\n               (real x + 1) * ln (12 / exp 1))", "by (intro bigoI[where c = 12]) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. real (nth_prime x))\n  \\<in> O(\\<lambda>x.\n             (real x + 1) * ln (real x + 1) +\n             (real x + 1) * ln (12 / exp 1))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> O(\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. real (nth_prime x))\n  \\<in> O(\\<lambda>x.\n             (real x + 1) * ln (real x + 1) +\n             (real x + 1) * ln (12 / exp 1))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> O(\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "have \"(\\<lambda>n. (n + 1) * ln (n + 1) + (n + 1) * ln (12 / exp 1)) \\<in> O(\\<lambda>n::nat. n * ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (real x + 1) * ln (real x + 1) + (real x + 1) * ln (12 / exp 1))\n    \\<in> O(\\<lambda>n. real n * ln (real n))", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (real x + 1) * ln (real x + 1) + (real x + 1) * ln (12 / exp 1))\n  \\<in> O(\\<lambda>n. real n * ln (real n))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> O(\\<lambda>x. real x * ln (real x))\n 2. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. real (nth_prime x)) \\<in> O(\\<lambda>n. real n * ln (real n))", "show \"nth_prime \\<in> O(\\<lambda>n. n * ln n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. real (nth_prime x)) \\<in> O(\\<lambda>n. real n * ln (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> O(\\<lambda>x. real x * ln (real x))", "."], ["proof (state)\nthis:\n  (\\<lambda>x. real (nth_prime x)) \\<in> O(\\<lambda>x. real x * ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "have \"eventually (\\<lambda>n. \\<bar>nth_prime n\\<bar> \\<ge> 139 / 443 * \\<bar>(n + 1) * ln (n + 1)\\<bar>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       139 / 443 * \\<bar>(real n + 1) * ln (real n + 1)\\<bar>\n       \\<le> real_of_int \\<bar>int (nth_prime n)\\<bar>", "using eventually_ge_at_top[of 2]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       139 / 443 * \\<bar>(real n + 1) * ln (real n + 1)\\<bar>\n       \\<le> real_of_int \\<bar>int (nth_prime n)\\<bar>", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       139 / 443 * \\<bar>(real n + 1) * ln (real n + 1)\\<bar>\n       \\<le> real_of_int \\<bar>int (nth_prime n)\\<bar>", "case (elim n)"], ["proof (state)\nthis:\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       2 \\<le> n \\<Longrightarrow>\n       139 / 443 * \\<bar>(real n + 1) * ln (real n + 1)\\<bar>\n       \\<le> real_of_int \\<bar>int (nth_prime n)\\<bar>", "with nth_prime_lower_bound[of \"n + 1\"]"], ["proof (chain)\npicking this:\n  0 < n + 1 \\<Longrightarrow>\n  139 / 443 * (real (n + 1) * ln (real (n + 1)))\n  \\<le> real (nth_prime (n + 1 - 1))\n  2 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  0 < n + 1 \\<Longrightarrow>\n  139 / 443 * (real (n + 1) * ln (real (n + 1)))\n  \\<le> real (nth_prime (n + 1 - 1))\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. 139 / 443 * \\<bar>(real n + 1) * ln (real n + 1)\\<bar>\n    \\<le> real_of_int \\<bar>int (nth_prime n)\\<bar>", "by (auto simp: add_ac)"], ["proof (state)\nthis:\n  139 / 443 * \\<bar>(real n + 1) * ln (real n + 1)\\<bar>\n  \\<le> real_of_int \\<bar>int (nth_prime n)\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     139 / 443 * \\<bar>(real n + 1) * ln (real n + 1)\\<bar>\n     \\<le> real_of_int \\<bar>int (nth_prime n)\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "hence \"nth_prime \\<in> \\<Omega>(\\<lambda>n::nat. real (n + 1) * ln (real n + 1))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     139 / 443 * \\<bar>(real n + 1) * ln (real n + 1)\\<bar>\n     \\<le> real_of_int \\<bar>int (nth_prime n)\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>n. real (n + 1) * ln (real n + 1))", "by (intro landau_omega.bigI[where c = \"139 / 443\"]) (auto simp: add_ac)"], ["proof (state)\nthis:\n  (\\<lambda>x. real (nth_prime x))\n  \\<in> \\<Omega>(\\<lambda>n. real (n + 1) * ln (real n + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. real (nth_prime x))\n  \\<in> \\<Omega>(\\<lambda>n. real (n + 1) * ln (real n + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "have \"(\\<lambda>n::nat. real (n + 1) * ln (real n + 1)) \\<in> \\<Omega>(\\<lambda>n. n * ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. real (n + 1) * ln (real n + 1))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n. real (n + 1) * ln (real n + 1))\n  \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. real (nth_prime x))\n  \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "show \"nth_prime \\<in> \\<Omega>(\\<lambda>n. n * ln n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. real (nth_prime x))\n  \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. real (nth_prime x))\n    \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))", "."], ["proof (state)\nthis:\n  (\\<lambda>x. real (nth_prime x))\n  \\<in> \\<Omega>(\\<lambda>x. real x * ln (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}