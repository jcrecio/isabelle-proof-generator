{"file_name": "/home/qj213/afp-2021-10-22/thys/Prime_Distribution_Elementary/Prime_Distribution_Elementary_Library.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Prime_Distribution_Elementary", "problem_names": ["lemma divisor_count_pos [intro]: \"n > 0 \\<Longrightarrow> divisor_count n > 0\"", "lemma divisor_count_eq_0_iff [simp]: \"divisor_count n = 0 \\<longleftrightarrow> n = 0\"", "lemma divisor_count_pos_iff [simp]: \"divisor_count n > 0 \\<longleftrightarrow> n > 0\"", "lemma smallest_prime_beyond_eval:\n  \"prime n \\<Longrightarrow> smallest_prime_beyond n = n\"\n  \"\\<not>prime n \\<Longrightarrow> smallest_prime_beyond n = smallest_prime_beyond (Suc n)\"", "lemma nth_prime_numeral:\n  \"nth_prime (numeral n) = smallest_prime_beyond (Suc (nth_prime (pred_numeral n)))\"", "lemmas nth_prime_eval = smallest_prime_beyond_eval nth_prime_Suc nth_prime_numeral", "lemma nth_prime_1 [simp]: \"nth_prime (Suc 0) = 3\"", "lemma nth_prime_2 [simp]: \"nth_prime 2 = 5\"", "lemma nth_prime_3 [simp]: \"nth_prime 3 = 7\"", "lemma strict_mono_sequence_partition:\n  assumes \"strict_mono (f :: nat \\<Rightarrow> 'a :: {linorder, no_top})\"\n  assumes \"x \\<ge> f 0\"\n  assumes \"filterlim f at_top at_top\"\n  shows   \"\\<exists>k. x \\<in> {f k..<f (Suc k)}\"", "lemma nth_prime_partition:\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}\"", "lemma nth_prime_partition':\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<exists>k. x \\<in> {real (nth_prime k)..<real (nth_prime (Suc k))}\"", "lemma between_nth_primes_imp_nonprime:\n  assumes \"n > nth_prime k\" \"n < nth_prime (Suc k)\"\n  shows   \"\\<not>prime n\"", "lemma nth_prime_partition'':\n  includes prime_counting_notation\n  assumes \"x \\<ge> (2 :: real)\"\n  shows \"x \\<in> {real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\"", "lemma asymp_equivD_strong:\n  assumes \"f \\<sim>[F] g\" \"eventually (\\<lambda>x. f x \\<noteq> 0 \\<or> g x \\<noteq> 0) F\"\n  shows   \"((\\<lambda>x. f x / g x) \\<longlongrightarrow> 1) F\"", "lemma hurwitz_zeta_shift:\n  fixes s :: complex\n  assumes \"a > 0\" and \"s \\<noteq> 1\"\n  shows   \"hurwitz_zeta (a + real n) s = hurwitz_zeta a s - (\\<Sum>k<n. (a + real k) powr -s)\"", "lemma pbernpoly_bigo: \"pbernpoly n \\<in> O(\\<lambda>_. 1)\"", "lemma harm_le: \"n \\<ge> 1 \\<Longrightarrow> harm n \\<le> ln n + 1\"", "lemma sum_upto_1 [simp]: \"sum_upto f 1 = f 1\"", "lemma sum_upto_cong' [cong]:\n  \"(\\<And>n. n > 0 \\<Longrightarrow> real n \\<le> x \\<Longrightarrow> f n = f' n) \\<Longrightarrow> x = x' \\<Longrightarrow> sum_upto f x = sum_upto f' x'\"", "lemma finite_primes_le: \"finite {p. prime p \\<and> real p \\<le> x}\"", "lemma frequently_filtermap: \"frequently P (filtermap f F) = frequently (\\<lambda>n. P (f n)) F\"", "lemma frequently_mono_filter: \"frequently P F \\<Longrightarrow> F \\<le> F' \\<Longrightarrow> frequently P F'\"", "lemma \\<pi>_at_top: \"filterlim primes_pi at_top at_top\"", "lemma sum_upto_ln_stirling_weak_bigo: \"(\\<lambda>x. sum_upto ln x - x * ln x + x) \\<in> O(ln)\"", "lemma fds_mangoldt':\n  \"fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)\"", "lemma sum_upto_divisor_sum1:\n  \"sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d :: real) x = sum_upto (\\<lambda>n. f n * floor (x / n)) x\"", "lemma sum_upto_divisor_sum2:\n  \"sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d :: real) x = sum_upto (\\<lambda>n. sum_upto f (x / n)) x\"", "lemma sum_upto_moebius_times_floor_linear:\n  \"sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x = (if x \\<ge> 1 then 1 else 0)\"", "lemma ln_fact_conv_sum_mangoldt:\n  \"sum_upto (\\<lambda>n. mangoldt n * \\<lfloor>x / real n\\<rfloor>) x = ln (fact (nat \\<lfloor>x\\<rfloor>))\"", "lemma abs_\\<pi> [simp]: \"\\<bar>primes_pi x\\<bar> = primes_pi x\"", "lemma \\<pi>_less_self:\n  includes prime_counting_notation\n  assumes \"x > 0\"\n  shows   \"\\<pi> x < x\"", "lemma \\<pi>_le_self':\n  includes prime_counting_notation\n  assumes \"x \\<ge> 1\"\n  shows   \"\\<pi> x \\<le> x - 1\"", "lemma \\<pi>_le_self:\n  includes prime_counting_notation\n  assumes \"x \\<ge> 0\"\n  shows   \"\\<pi> x \\<le> x\"", "lemma natfun_bigoE:\n  fixes f :: \"nat \\<Rightarrow> _\"\n  assumes bigo: \"f \\<in> O(g)\" and nz: \"\\<And>n. n \\<ge> n0 \\<Longrightarrow> g n \\<noteq> 0\"\n  obtains c where \"c > 0\" \"\\<And>n. n \\<ge> n0 \\<Longrightarrow> norm (f n) \\<le> c * norm (g n)\"", "lemma bigoE_bounded_real_fun:\n  fixes f g :: \"real \\<Rightarrow> real\"\n  assumes \"f \\<in> O(g)\"\n  assumes \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> \\<bar>g x\\<bar> \\<ge> cg\" \"cg > 0\"\n  assumes \"\\<And>b. b \\<ge> x0 \\<Longrightarrow> bounded (f ` {x0..b})\"\n  shows   \"\\<exists>c>0. \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\"", "lemma sum_upto_asymptotics_lift_nat_real_aux:\n  fixes f :: \"nat \\<Rightarrow> real\" and g :: \"real \\<Rightarrow> real\"\n  assumes bigo: \"(\\<lambda>n. (\\<Sum>k=1..n. f k) - g (real n)) \\<in> O(\\<lambda>n. h (real n))\"\n  assumes g_bigo_self: \"(\\<lambda>n. g (real n) - g (real (Suc n))) \\<in> O(\\<lambda>n. h (real n))\"\n  assumes h_bigo_self: \"(\\<lambda>n. h (real n)) \\<in> O(\\<lambda>n. h (real (Suc n)))\"\n  assumes h_pos: \"\\<And>x. x \\<ge> 1 \\<Longrightarrow> h x > 0\"\n  assumes mono_g: \"mono_on g {1..} \\<or> mono_on (\\<lambda>x. - g x) {1..}\"\n  assumes mono_h: \"mono_on h {1..} \\<or> mono_on (\\<lambda>x. - h x) {1..}\"\n  shows   \"\\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x\"", "lemma sum_upto_asymptotics_lift_nat_real:\n  fixes f :: \"nat \\<Rightarrow> real\" and g :: \"real \\<Rightarrow> real\"\n  assumes bigo: \"(\\<lambda>n. (\\<Sum>k=1..n. f k) - g (real n)) \\<in> O(\\<lambda>n. h (real n))\"\n  assumes g_bigo_self: \"(\\<lambda>n. g (real n) - g (real (Suc n))) \\<in> O(\\<lambda>n. h (real n))\"\n  assumes h_bigo_self: \"(\\<lambda>n. h (real n)) \\<in> O(\\<lambda>n. h (real (Suc n)))\"\n  assumes h_pos: \"\\<And>x. x \\<ge> 1 \\<Longrightarrow> h x > 0\"\n  assumes mono_g: \"mono_on g {1..} \\<or> mono_on (\\<lambda>x. - g x) {1..}\"\n  assumes mono_h: \"mono_on h {1..} \\<or> mono_on (\\<lambda>x. - h x) {1..}\"\n  shows   \"\\<exists>c>0. \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x\"", "lemma (in factorial_semiring) primepow_divisors_induct [case_names zero unit factor]:\n  assumes \"P 0\" \"\\<And>x. is_unit x \\<Longrightarrow> P x\"\n          \"\\<And>p k x. prime p \\<Longrightarrow> k > 0 \\<Longrightarrow> \\<not>p dvd x \\<Longrightarrow> P x \\<Longrightarrow> P (p ^ k * x)\"\n  shows   \"P x\""], "translations": [["", "lemma divisor_count_pos [intro]: \"n > 0 \\<Longrightarrow> divisor_count n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> 0 < divisor_count n", "by (auto simp: divisor_count_def intro!: Nat.gr0I)"], ["", "lemma divisor_count_eq_0_iff [simp]: \"divisor_count n = 0 \\<longleftrightarrow> n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (divisor_count n = 0) = (n = 0)", "by (cases \"n = 0\") auto"], ["", "lemma divisor_count_pos_iff [simp]: \"divisor_count n > 0 \\<longleftrightarrow> n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < divisor_count n) = (0 < n)", "by (cases \"n = 0\") auto"], ["", "lemma smallest_prime_beyond_eval:\n  \"prime n \\<Longrightarrow> smallest_prime_beyond n = n\"\n  \"\\<not>prime n \\<Longrightarrow> smallest_prime_beyond n = smallest_prime_beyond (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (prime n \\<Longrightarrow> smallest_prime_beyond n = n) &&&\n    (\\<not> prime n \\<Longrightarrow>\n     smallest_prime_beyond n = smallest_prime_beyond (Suc n))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. prime n \\<Longrightarrow> smallest_prime_beyond n = n\n 2. \\<not> prime n \\<Longrightarrow>\n    smallest_prime_beyond n = smallest_prime_beyond (Suc n)", "assume \"prime n\""], ["proof (state)\nthis:\n  prime n\n\ngoal (2 subgoals):\n 1. prime n \\<Longrightarrow> smallest_prime_beyond n = n\n 2. \\<not> prime n \\<Longrightarrow>\n    smallest_prime_beyond n = smallest_prime_beyond (Suc n)", "thus \"smallest_prime_beyond n = n\""], ["proof (prove)\nusing this:\n  prime n\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond n = n", "by (rule smallest_prime_beyond_eq) auto"], ["proof (state)\nthis:\n  smallest_prime_beyond n = n\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow>\n    smallest_prime_beyond n = smallest_prime_beyond (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow>\n    smallest_prime_beyond n = smallest_prime_beyond (Suc n)", "assume \"\\<not>prime n\""], ["proof (state)\nthis:\n  \\<not> prime n\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow>\n    smallest_prime_beyond n = smallest_prime_beyond (Suc n)", "show \"smallest_prime_beyond n = smallest_prime_beyond (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smallest_prime_beyond n = smallest_prime_beyond (Suc n)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. smallest_prime_beyond n \\<le> smallest_prime_beyond (Suc n)\n 2. smallest_prime_beyond (Suc n) \\<le> smallest_prime_beyond n", "show \"smallest_prime_beyond n \\<le> smallest_prime_beyond (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smallest_prime_beyond n \\<le> smallest_prime_beyond (Suc n)", "by (rule smallest_prime_beyond_smallest)\n         (auto intro: order.trans[OF _ smallest_prime_beyond_le])"], ["proof (state)\nthis:\n  smallest_prime_beyond n \\<le> smallest_prime_beyond (Suc n)\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc n) \\<le> smallest_prime_beyond n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc n) \\<le> smallest_prime_beyond n", "have \"smallest_prime_beyond n \\<noteq> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smallest_prime_beyond n \\<noteq> n", "using prime_smallest_prime_beyond[of n] \\<open>\\<not>prime n\\<close>"], ["proof (prove)\nusing this:\n  prime (smallest_prime_beyond n)\n  \\<not> prime n\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond n \\<noteq> n", "by metis"], ["proof (state)\nthis:\n  smallest_prime_beyond n \\<noteq> n\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc n) \\<le> smallest_prime_beyond n", "hence \"smallest_prime_beyond n > n\""], ["proof (prove)\nusing this:\n  smallest_prime_beyond n \\<noteq> n\n\ngoal (1 subgoal):\n 1. n < smallest_prime_beyond n", "using smallest_prime_beyond_le[of n]"], ["proof (prove)\nusing this:\n  smallest_prime_beyond n \\<noteq> n\n  n \\<le> smallest_prime_beyond n\n\ngoal (1 subgoal):\n 1. n < smallest_prime_beyond n", "by linarith"], ["proof (state)\nthis:\n  n < smallest_prime_beyond n\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc n) \\<le> smallest_prime_beyond n", "thus \"smallest_prime_beyond n \\<ge> smallest_prime_beyond (Suc n)\""], ["proof (prove)\nusing this:\n  n < smallest_prime_beyond n\n\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc n) \\<le> smallest_prime_beyond n", "by (intro smallest_prime_beyond_smallest) auto"], ["proof (state)\nthis:\n  smallest_prime_beyond (Suc n) \\<le> smallest_prime_beyond n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  smallest_prime_beyond n = smallest_prime_beyond (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_prime_numeral:\n  \"nth_prime (numeral n) = smallest_prime_beyond (Suc (nth_prime (pred_numeral n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime (numeral n) =\n    smallest_prime_beyond (Suc (nth_prime (pred_numeral n)))", "by (subst nth_prime_Suc[symmetric]) auto"], ["", "lemmas nth_prime_eval = smallest_prime_beyond_eval nth_prime_Suc nth_prime_numeral"], ["", "lemma nth_prime_1 [simp]: \"nth_prime (Suc 0) = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime (Suc 0) = 3", "by (simp add: nth_prime_eval)"], ["", "lemma nth_prime_2 [simp]: \"nth_prime 2 = 5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime 2 = 5", "by (simp add: nth_prime_eval)"], ["", "lemma nth_prime_3 [simp]: \"nth_prime 3 = 7\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime 3 = 7", "by (simp add: nth_prime_eval)"], ["", "(* TODO: copied from afp-devel; delete in AFP 2019 *)"], ["", "lemma strict_mono_sequence_partition:\n  assumes \"strict_mono (f :: nat \\<Rightarrow> 'a :: {linorder, no_top})\"\n  assumes \"x \\<ge> f 0\"\n  assumes \"filterlim f at_top at_top\"\n  shows   \"\\<exists>k. x \\<in> {f k..<f (Suc k)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "define k where \"k = (LEAST k. f (Suc k) > x)\""], ["proof (state)\nthis:\n  k = (LEAST k. x < f (Suc k))\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "{"], ["proof (state)\nthis:\n  k = (LEAST k. x < f (Suc k))\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "obtain n where \"x \\<le> f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. x \\<le> f n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  strict_mono f\n  f 0 \\<le> x\n  filterlim f at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>n. x \\<le> f n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: filterlim_at_top eventually_at_top_linorder)"], ["proof (state)\nthis:\n  x \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "also"], ["proof (state)\nthis:\n  x \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "have \"f n < f (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n < f (Suc n)", "using assms"], ["proof (prove)\nusing this:\n  strict_mono f\n  f 0 \\<le> x\n  filterlim f at_top sequentially\n\ngoal (1 subgoal):\n 1. f n < f (Suc n)", "by (auto simp: strict_mono_Suc_iff)"], ["proof (state)\nthis:\n  f n < f (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "finally"], ["proof (chain)\npicking this:\n  x < f (Suc n)", "have \"\\<exists>n. f (Suc n) > x\""], ["proof (prove)\nusing this:\n  x < f (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>n. x < f (Suc n)", "by auto"], ["proof (state)\nthis:\n  \\<exists>n. x < f (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "}"], ["proof (state)\nthis:\n  \\<exists>n. x < f (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "from LeastI_ex[OF this]"], ["proof (chain)\npicking this:\n  x < f (Suc (LEAST n. x < f (Suc n)))", "have \"x < f (Suc k)\""], ["proof (prove)\nusing this:\n  x < f (Suc (LEAST n. x < f (Suc n)))\n\ngoal (1 subgoal):\n 1. x < f (Suc k)", "by (simp add: k_def)"], ["proof (state)\nthis:\n  x < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "moreover"], ["proof (state)\nthis:\n  x < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "have \"f k \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k \\<le> x", "proof (cases k)"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> f k \\<le> x\n 2. \\<And>nat. k = Suc nat \\<Longrightarrow> f k \\<le> x", "case (Suc k')"], ["proof (state)\nthis:\n  k = Suc k'\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> f k \\<le> x\n 2. \\<And>nat. k = Suc nat \\<Longrightarrow> f k \\<le> x", "have \"k \\<le> k'\" if \"f (Suc k') > x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> k'", "using that"], ["proof (prove)\nusing this:\n  x < f (Suc k')\n\ngoal (1 subgoal):\n 1. k \\<le> k'", "unfolding k_def"], ["proof (prove)\nusing this:\n  x < f (Suc k')\n\ngoal (1 subgoal):\n 1. (LEAST k. x < f (Suc k)) \\<le> k'", "by (rule Least_le)"], ["proof (state)\nthis:\n  x < f (Suc k') \\<Longrightarrow> k \\<le> k'\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> f k \\<le> x\n 2. \\<And>nat. k = Suc nat \\<Longrightarrow> f k \\<le> x", "with Suc"], ["proof (chain)\npicking this:\n  k = Suc k'\n  x < f (Suc k') \\<Longrightarrow> k \\<le> k'", "show \"f k \\<le> x\""], ["proof (prove)\nusing this:\n  k = Suc k'\n  x < f (Suc k') \\<Longrightarrow> k \\<le> k'\n\ngoal (1 subgoal):\n 1. f k \\<le> x", "by (cases \"f k \\<le> x\") (auto simp: not_le)"], ["proof (state)\nthis:\n  f k \\<le> x\n\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> f k \\<le> x", "qed (use assms in auto)"], ["proof (state)\nthis:\n  f k \\<le> x\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "ultimately"], ["proof (chain)\npicking this:\n  x < f (Suc k)\n  f k \\<le> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x < f (Suc k)\n  f k \\<le> x\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. x \\<in> {f k..<f (Suc k)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_prime_partition:\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}", "using strict_mono_sequence_partition[OF strict_mono_nth_prime, of x] assms nth_prime_at_top"], ["proof (prove)\nusing this:\n  \\<lbrakk>nth_prime 0 \\<le> x;\n   filterlim nth_prime sequentially sequentially\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}\n  2 \\<le> x\n  filterlim nth_prime sequentially sequentially\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}", "by simp"], ["", "lemma nth_prime_partition':\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<exists>k. x \\<in> {real (nth_prime k)..<real (nth_prime (Suc k))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {real (nth_prime k)..<real (nth_prime (Suc k))}", "by (rule strict_mono_sequence_partition)\n     (auto simp: strict_mono_Suc_iff assms\n           intro!: filterlim_real_sequentially filterlim_compose[OF _ nth_prime_at_top])"], ["", "lemma between_nth_primes_imp_nonprime:\n  assumes \"n > nth_prime k\" \"n < nth_prime (Suc k)\"\n  shows   \"\\<not>prime n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prime n", "using assms"], ["proof (prove)\nusing this:\n  nth_prime k < n\n  n < nth_prime (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> prime n", "by (metis Suc_leI not_le nth_prime_Suc smallest_prime_beyond_smallest)"], ["", "lemma nth_prime_partition'':\n  includes prime_counting_notation\n  assumes \"x \\<ge> (2 :: real)\"\n  shows \"x \\<in> {real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "obtain n where n: \"x \\<in> {nth_prime n..<nth_prime (Suc n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        x \\<in> {real\n                  (nth_prime\n                    n)..<real (nth_prime (Suc n))} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using nth_prime_partition' assms"], ["proof (prove)\nusing this:\n  2 \\<le> ?x \\<Longrightarrow>\n  \\<exists>k. ?x \\<in> {real (nth_prime k)..<real (nth_prime (Suc k))}\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        x \\<in> {real\n                  (nth_prime\n                    n)..<real (nth_prime (Suc n))} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> {real (nth_prime n)..<real (nth_prime (Suc n))}\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "have \"\\<pi> (nth_prime n) = \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real (nth_prime n)) = \\<pi> x", "unfolding \\<pi>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. 1) (real (nth_prime n)) =\n    prime_sum_upto (\\<lambda>p. 1) x", "using between_nth_primes_imp_nonprime n"], ["proof (prove)\nusing this:\n  \\<lbrakk>nth_prime ?k < ?n; ?n < nth_prime (Suc ?k)\\<rbrakk>\n  \\<Longrightarrow> \\<not> prime ?n\n  x \\<in> {real (nth_prime n)..<real (nth_prime (Suc n))}\n\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. 1) (real (nth_prime n)) =\n    prime_sum_upto (\\<lambda>p. 1) x", "by (intro prime_sum_upto_eqI) (auto simp: le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  \\<pi> (real (nth_prime n)) = \\<pi> x\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "hence \"real n = \\<pi> x - 1\""], ["proof (prove)\nusing this:\n  \\<pi> (real (nth_prime n)) = \\<pi> x\n\ngoal (1 subgoal):\n 1. real n = \\<pi> x - 1", "by simp"], ["proof (state)\nthis:\n  real n = \\<pi> x - 1\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "hence n_eq: \"n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1\" \"Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>\""], ["proof (prove)\nusing this:\n  real n = \\<pi> x - 1\n\ngoal (1 subgoal):\n 1. n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1 &&&\n    Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>", "by linarith+"], ["proof (state)\nthis:\n  n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1\n  Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "with n"], ["proof (chain)\npicking this:\n  x \\<in> {real (nth_prime n)..<real (nth_prime (Suc n))}\n  n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1\n  Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {real (nth_prime n)..<real (nth_prime (Suc n))}\n  n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1\n  Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>\\<pi> x\\<rfloor> -\n               1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n\ngoal:\nNo subgoals!", "qed"], ["", "(* END TODO *)\n\n(* TODO: Move *)"], ["", "lemma asymp_equivD_strong:\n  assumes \"f \\<sim>[F] g\" \"eventually (\\<lambda>x. f x \\<noteq> 0 \\<or> g x \\<noteq> 0) F\"\n  shows   \"((\\<lambda>x. f x / g x) \\<longlongrightarrow> 1) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F", "from assms(1)"], ["proof (chain)\npicking this:\n  f \\<sim>[F] g", "have \"((\\<lambda>x. if f x = 0 \\<and> g x = 0 then 1 else f x / g x) \\<longlongrightarrow> 1) F\""], ["proof (prove)\nusing this:\n  f \\<sim>[F] g\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         if f x = (0::'b) \\<and> g x = (0::'b) then 1::'b\n         else f x / g x) \\<longlongrightarrow>\n     (1::'b))\n     F", "by (rule asymp_equivD)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       if f x = (0::'b) \\<and> g x = (0::'b) then 1::'b\n       else f x / g x) \\<longlongrightarrow>\n   (1::'b))\n   F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       if f x = (0::'b) \\<and> g x = (0::'b) then 1::'b\n       else f x / g x) \\<longlongrightarrow>\n   (1::'b))\n   F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F", "have \"?this \\<longleftrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         if f x = (0::'b) \\<and> g x = (0::'b) then 1::'b\n         else f x / g x) \\<longlongrightarrow>\n     (1::'b))\n     F =\n    ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F", "by (intro filterlim_cong eventually_mono[OF assms(2)]) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       if f x = (0::'b) \\<and> g x = (0::'b) then 1::'b\n       else f x / g x) \\<longlongrightarrow>\n   (1::'b))\n   F =\n  ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. f x / g x) \\<longlongrightarrow> (1::'b)) F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hurwitz_zeta_shift:\n  fixes s :: complex\n  assumes \"a > 0\" and \"s \\<noteq> 1\"\n  shows   \"hurwitz_zeta (a + real n) s = hurwitz_zeta a s - (\\<Sum>k<n. (a + real k) powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta (a + real n) s =\n    hurwitz_zeta a s - (\\<Sum>k<n. complex_of_real (a + real k) powr - s)", "proof (rule analytic_continuation_open[where f = \"\\<lambda>s. hurwitz_zeta (a + real n) s\"])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       hurwitz_zeta (a + real n) z =\n       hurwitz_zeta a z - (\\<Sum>k<n. complex_of_real (a + real k) powr - z)\n 9. s \\<in> ?s'", "fix s"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       hurwitz_zeta (a + real n) z =\n       hurwitz_zeta a z - (\\<Sum>k<n. complex_of_real (a + real k) powr - z)\n 9. s \\<in> ?s'", "assume s: \"s \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  s \\<in> {s. 1 < Re s}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       hurwitz_zeta (a + real n) z =\n       hurwitz_zeta a z - (\\<Sum>k<n. complex_of_real (a + real k) powr - z)\n 9. s \\<in> ?s'", "have \"(\\<lambda>k. (a + of_nat (k + n)) powr -s) sums hurwitz_zeta (a + real n) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n    hurwitz_zeta (a + real n) s", "using sums_hurwitz_zeta[of \"a + real n\" s] s assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < a + real n; 1 < Re s\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>na.\n                        (of_nat na + complex_of_real (a + real n)) powr\n                        - s) sums\n                    hurwitz_zeta (a + real n) s\n  s \\<in> {s. 1 < Re s}\n  0 < a\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n    hurwitz_zeta (a + real n) s", "by (simp add: add_ac)"], ["proof (state)\nthis:\n  (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n  hurwitz_zeta (a + real n) s\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       hurwitz_zeta (a + real n) z =\n       hurwitz_zeta a z - (\\<Sum>k<n. complex_of_real (a + real k) powr - z)\n 9. s \\<in> ?s'", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n  hurwitz_zeta (a + real n) s\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       hurwitz_zeta (a + real n) z =\n       hurwitz_zeta a z - (\\<Sum>k<n. complex_of_real (a + real k) powr - z)\n 9. s \\<in> ?s'", "have \"(\\<lambda>k. (a + of_nat k) powr -s) sums hurwitz_zeta a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k. complex_of_real (a + real k) powr - s) sums\n    hurwitz_zeta a s", "using sums_hurwitz_zeta[of a s] s assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < a; 1 < Re s\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n.\n                        (of_nat n + complex_of_real a) powr - s) sums\n                    hurwitz_zeta a s\n  s \\<in> {s. 1 < Re s}\n  0 < a\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. complex_of_real (a + real k) powr - s) sums\n    hurwitz_zeta a s", "by (simp add: add_ac)"], ["proof (state)\nthis:\n  (\\<lambda>k. complex_of_real (a + real k) powr - s) sums hurwitz_zeta a s\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       hurwitz_zeta (a + real n) z =\n       hurwitz_zeta a z - (\\<Sum>k<n. complex_of_real (a + real k) powr - z)\n 9. s \\<in> ?s'", "hence \"(\\<lambda>k. (a + of_nat (k + n)) powr -s) sums\n            (hurwitz_zeta a s - (\\<Sum>k<n. (a + of_nat k) powr -s))\""], ["proof (prove)\nusing this:\n  (\\<lambda>k. complex_of_real (a + real k) powr - s) sums hurwitz_zeta a s\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n    (hurwitz_zeta a s - (\\<Sum>k<n. complex_of_real (a + real k) powr - s))", "by (rule sums_split_initial_segment)"], ["proof (state)\nthis:\n  (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n  (hurwitz_zeta a s - (\\<Sum>k<n. complex_of_real (a + real k) powr - s))\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       hurwitz_zeta (a + real n) z =\n       hurwitz_zeta a z - (\\<Sum>k<n. complex_of_real (a + real k) powr - z)\n 9. s \\<in> ?s'", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n  hurwitz_zeta (a + real n) s\n  (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n  (hurwitz_zeta a s - (\\<Sum>k<n. complex_of_real (a + real k) powr - s))", "show \"hurwitz_zeta (a + real n) s = hurwitz_zeta a s - (\\<Sum>k<n. (a + real k) powr -s)\""], ["proof (prove)\nusing this:\n  (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n  hurwitz_zeta (a + real n) s\n  (\\<lambda>k. complex_of_real (a + real (k + n)) powr - s) sums\n  (hurwitz_zeta a s - (\\<Sum>k<n. complex_of_real (a + real k) powr - s))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta (a + real n) s =\n    hurwitz_zeta a s - (\\<Sum>k<n. complex_of_real (a + real k) powr - s)", "by (simp add: sums_iff)"], ["proof (state)\nthis:\n  hurwitz_zeta (a + real n) s =\n  hurwitz_zeta a s - (\\<Sum>k<n. complex_of_real (a + real k) powr - s)\n\ngoal (8 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ?s'\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ?s'\n 5. {s. 1 < Re s} \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. s \\<in> ?s'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ?s'\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ?s'\n 5. {s. 1 < Re s} \\<subseteq> ?s'\n 6. hurwitz_zeta (a + real n) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    ?s'\n 8. s \\<in> ?s'", "show \"connected (-{1::complex})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (- {1})", "by (rule connected_punctured_universe) auto"], ["proof (state)\nthis:\n  connected (- {1})\n\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. {s. 1 < Re s} \\<subseteq> - {1}\n 5. hurwitz_zeta (a + real n) holomorphic_on - {1}\n 6. (\\<lambda>b.\n        hurwitz_zeta a b -\n        (\\<Sum>k<n. complex_of_real (a + real k) powr - b)) holomorphic_on\n    - {1}\n 7. s \\<in> - {1}", "qed (use assms in \\<open>auto intro!: holomorphic_intros open_halfspace_Re_gt exI[of _ 2]\\<close>)"], ["", "lemma pbernpoly_bigo: \"pbernpoly n \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pbernpoly n \\<in> O(\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pbernpoly n \\<in> O(\\<lambda>_. 1)", "from bounded_pbernpoly[of n]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where \"\\<And>x. norm (pbernpoly n x) \\<le> c\""], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  norm (pbernpoly n ?x) \\<le> c\n\ngoal (1 subgoal):\n 1. pbernpoly n \\<in> O(\\<lambda>_. 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  norm (pbernpoly n ?x) \\<le> c\n\ngoal (1 subgoal):\n 1. pbernpoly n \\<in> O(\\<lambda>_. 1)", "by (intro bigoI[of _ c]) auto"], ["proof (state)\nthis:\n  pbernpoly n \\<in> O(\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harm_le: \"n \\<ge> 1 \\<Longrightarrow> harm n \\<le> ln n + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> n \\<Longrightarrow> harm n \\<le> ln (real n) + 1", "using euler_mascheroni_sequence_decreasing[of 1 n]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1; 1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> harm n - ln (real n) \\<le> harm 1 - ln (real 1)\n\ngoal (1 subgoal):\n 1. 1 \\<le> n \\<Longrightarrow> harm n \\<le> ln (real n) + 1", "by (simp add: harm_expand)"], ["", "lemma sum_upto_1 [simp]: \"sum_upto f 1 = f 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto f 1 = f 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto f 1 = f 1", "have \"{0<..Suc 0} = {1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0<..Suc 0} = {1}", "by auto"], ["proof (state)\nthis:\n  {0<..Suc 0} = {1}\n\ngoal (1 subgoal):\n 1. sum_upto f 1 = f 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  {0<..Suc 0} = {1}\n\ngoal (1 subgoal):\n 1. sum_upto f 1 = f 1", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  sum_upto f 1 = f 1\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: replace original *)"], ["", "lemma sum_upto_cong' [cong]:\n  \"(\\<And>n. n > 0 \\<Longrightarrow> real n \\<le> x \\<Longrightarrow> f n = f' n) \\<Longrightarrow> x = x' \\<Longrightarrow> sum_upto f x = sum_upto f' x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n.\n                \\<lbrakk>0 < n; real n \\<le> x\\<rbrakk>\n                \\<Longrightarrow> f n = f' n;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> sum_upto f x = sum_upto f' x'", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n.\n                \\<lbrakk>0 < n; real n \\<le> x\\<rbrakk>\n                \\<Longrightarrow> f n = f' n;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> sum f {i. 0 < i \\<and> real i \\<le> x} =\n                      sum f' {i. 0 < i \\<and> real i \\<le> x'}", "by (intro sum.cong) auto"], ["", "lemma finite_primes_le: \"finite {p. prime p \\<and> real p \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {p. prime p \\<and> real p \\<le> x}", "by (rule finite_subset[of _ \"{..nat \\<lfloor>x\\<rfloor>}\"]) (auto simp: le_nat_iff le_floor_iff)"], ["", "lemma frequently_filtermap: \"frequently P (filtermap f F) = frequently (\\<lambda>n. P (f n)) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. frequently P (filtermap f F) = (\\<exists>\\<^sub>F n in F. P (f n))", "by (auto simp: frequently_def eventually_filtermap)"], ["", "lemma frequently_mono_filter: \"frequently P F \\<Longrightarrow> F \\<le> F' \\<Longrightarrow> frequently P F'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>frequently P F; F \\<le> F'\\<rbrakk>\n    \\<Longrightarrow> frequently P F'", "using filter_leD[of F F' \"\\<lambda>x. \\<not>P x\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>F \\<le> F'; \\<forall>\\<^sub>F x in F'. \\<not> P x\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F x in F. \\<not> P x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>frequently P F; F \\<le> F'\\<rbrakk>\n    \\<Longrightarrow> frequently P F'", "by (auto simp: frequently_def)"], ["", "lemma \\<pi>_at_top: \"filterlim primes_pi at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim primes_pi at_top at_top", "unfolding filterlim_at_top"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z. \\<forall>\\<^sub>F x in at_top. Z \\<le> primes_pi x", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Z. \\<forall>\\<^sub>F x in at_top. Z \\<le> primes_pi x", "fix C :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Z. \\<forall>\\<^sub>F x in at_top. Z \\<le> primes_pi x", "define x0 where \"x0 = real (nth_prime (nat \\<lceil>max 0 C\\<rceil>))\""], ["proof (state)\nthis:\n  x0 = real (nth_prime (nat \\<lceil>max 0 C\\<rceil>))\n\ngoal (1 subgoal):\n 1. \\<And>Z. \\<forall>\\<^sub>F x in at_top. Z \\<le> primes_pi x", "show \"eventually (\\<lambda>x. primes_pi x \\<ge> C) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. C \\<le> primes_pi x", "using eventually_ge_at_top"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) ?c) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. C \\<le> primes_pi x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> primes_pi x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> primes_pi x", "assume \"x \\<ge> x0\""], ["proof (state)\nthis:\n  x0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> primes_pi x", "have \"C \\<le> real (nat \\<lceil>max 0 C\\<rceil> + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> real (nat \\<lceil>max 0 C\\<rceil> + 1)", "by linarith"], ["proof (state)\nthis:\n  C \\<le> real (nat \\<lceil>max 0 C\\<rceil> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> primes_pi x", "also"], ["proof (state)\nthis:\n  C \\<le> real (nat \\<lceil>max 0 C\\<rceil> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> primes_pi x", "have \"real (nat \\<lceil>max 0 C\\<rceil> + 1) = primes_pi x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lceil>max 0 C\\<rceil> + 1) = primes_pi x0", "unfolding x0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lceil>max 0 C\\<rceil> + 1) =\n    primes_pi (real (nth_prime (nat \\<lceil>max 0 C\\<rceil>)))", "by simp"], ["proof (state)\nthis:\n  real (nat \\<lceil>max 0 C\\<rceil> + 1) = primes_pi x0\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> primes_pi x", "also"], ["proof (state)\nthis:\n  real (nat \\<lceil>max 0 C\\<rceil> + 1) = primes_pi x0\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> primes_pi x", "have \"\\<dots> \\<le> primes_pi x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. primes_pi x0 \\<le> primes_pi x", "by (rule \\<pi>_mono) fact"], ["proof (state)\nthis:\n  primes_pi x0 \\<le> primes_pi x\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> primes_pi x", "finally"], ["proof (chain)\npicking this:\n  C \\<le> primes_pi x", "show \"primes_pi x \\<ge> C\""], ["proof (prove)\nusing this:\n  C \\<le> primes_pi x\n\ngoal (1 subgoal):\n 1. C \\<le> primes_pi x", "."], ["proof (state)\nthis:\n  C \\<le> primes_pi x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. C \\<le> primes_pi x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upto_ln_stirling_weak_bigo: \"(\\<lambda>x. sum_upto ln x - x * ln x + x) \\<in> O(ln)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "let ?f = \"\\<lambda>x. x * ln x - x + ln (2 * pi * x) / 2\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "have \"ln (fact n) - (n * ln n - n + ln (2 * pi * n) / 2) \\<in> {0..1/(12*n)}\" if \"n > 0\" for n :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (fact n) - (real n * ln (real n) - real n + ln (2 * pi * real n) / 2)\n    \\<in> {0..1 / real (12 * n)}", "using ln_fact_bounds[OF that]"], ["proof (prove)\nusing this:\n  ln (2 * pi * real n) / 2 + real n * ln (real n) - real n \\<le> ln (fact n)\n  ln (fact n)\n  \\<le> ln (2 * pi * real n) / 2 + real n * ln (real n) - real n +\n        1 / (12 * real n)\n\ngoal (1 subgoal):\n 1. ln (fact n) - (real n * ln (real n) - real n + ln (2 * pi * real n) / 2)\n    \\<in> {0..1 / real (12 * n)}", "by (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow>\n  ln (fact ?n) -\n  (real ?n * ln (real ?n) - real ?n + ln (2 * pi * real ?n) / 2)\n  \\<in> {0..1 / real (12 * ?n)}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "hence \"(\\<lambda>n. ln (fact n) - ?f n) \\<in> O(\\<lambda>n. 1 / real n)\""], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow>\n  ln (fact ?n) -\n  (real ?n * ln (real ?n) - real ?n + ln (2 * pi * real ?n) / 2)\n  \\<in> {0..1 / real (12 * ?n)}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ln (fact n) -\n        (real n * ln (real n) - real n + ln (2 * pi * real n) / 2))\n    \\<in> O(\\<lambda>n. 1 / real n)", "by (intro bigoI[of _ \"1/12\"] eventually_mono[OF eventually_gt_at_top[of 0]]) auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ln (fact n) -\n      (real n * ln (real n) - real n + ln (2 * pi * real n) / 2))\n  \\<in> O(\\<lambda>n. 1 / real n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "hence \"(\\<lambda>x. ln (fact (nat \\<lfloor>x\\<rfloor>)) - ?f (nat \\<lfloor>x\\<rfloor>)) \\<in> O(\\<lambda>x. 1 / real (nat \\<lfloor>x\\<rfloor>))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      ln (fact n) -\n      (real n * ln (real n) - real n + ln (2 * pi * real n) / 2))\n  \\<in> O(\\<lambda>n. 1 / real n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n        (real (nat \\<lfloor>x\\<rfloor>) *\n         ln (real (nat \\<lfloor>x\\<rfloor>)) -\n         real (nat \\<lfloor>x\\<rfloor>) +\n         ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2))\n    \\<in> O(\\<lambda>x. 1 / real (nat \\<lfloor>x\\<rfloor>))", "by (rule landau_o.big.compose)\n       (intro filterlim_compose[OF filterlim_nat_sequentially] filterlim_floor_sequentially)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (real (nat \\<lfloor>x\\<rfloor>) *\n       ln (real (nat \\<lfloor>x\\<rfloor>)) -\n       real (nat \\<lfloor>x\\<rfloor>) +\n       ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2))\n  \\<in> O(\\<lambda>x. 1 / real (nat \\<lfloor>x\\<rfloor>))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (real (nat \\<lfloor>x\\<rfloor>) *\n       ln (real (nat \\<lfloor>x\\<rfloor>)) -\n       real (nat \\<lfloor>x\\<rfloor>) +\n       ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2))\n  \\<in> O(\\<lambda>x. 1 / real (nat \\<lfloor>x\\<rfloor>))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "have \"(\\<lambda>x. 1 / real (nat \\<lfloor>x\\<rfloor>)) \\<in> O(\\<lambda>x::real. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / real (nat \\<lfloor>x\\<rfloor>)) \\<in> O(ln)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / real (nat \\<lfloor>x\\<rfloor>)) \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (real (nat \\<lfloor>x\\<rfloor>) *\n       ln (real (nat \\<lfloor>x\\<rfloor>)) -\n       real (nat \\<lfloor>x\\<rfloor>) +\n       ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2))\n  \\<in> O(ln)", "have \"(\\<lambda>x. ln (fact (nat \\<lfloor>x\\<rfloor>)) - ?f (nat \\<lfloor>x\\<rfloor>) + (?f (nat \\<lfloor>x\\<rfloor>) - ?f x)) \\<in> O(\\<lambda>x. ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (real (nat \\<lfloor>x\\<rfloor>) *\n       ln (real (nat \\<lfloor>x\\<rfloor>)) -\n       real (nat \\<lfloor>x\\<rfloor>) +\n       ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2))\n  \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n        (real (nat \\<lfloor>x\\<rfloor>) *\n         ln (real (nat \\<lfloor>x\\<rfloor>)) -\n         real (nat \\<lfloor>x\\<rfloor>) +\n         ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2) +\n        (real (nat \\<lfloor>x\\<rfloor>) *\n         ln (real (nat \\<lfloor>x\\<rfloor>)) -\n         real (nat \\<lfloor>x\\<rfloor>) +\n         ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2 -\n         (x * ln x - x + ln (2 * pi * x) / 2)))\n    \\<in> O(ln)", "by (rule sum_in_bigo) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (real (nat \\<lfloor>x\\<rfloor>) *\n       ln (real (nat \\<lfloor>x\\<rfloor>)) -\n       real (nat \\<lfloor>x\\<rfloor>) +\n       ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2) +\n      (real (nat \\<lfloor>x\\<rfloor>) *\n       ln (real (nat \\<lfloor>x\\<rfloor>)) -\n       real (nat \\<lfloor>x\\<rfloor>) +\n       ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2 -\n       (x * ln x - x + ln (2 * pi * x) / 2)))\n  \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "hence \"(\\<lambda>x. ln (fact (nat \\<lfloor>x\\<rfloor>)) - ?f x) \\<in> O(\\<lambda>x. ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (real (nat \\<lfloor>x\\<rfloor>) *\n       ln (real (nat \\<lfloor>x\\<rfloor>)) -\n       real (nat \\<lfloor>x\\<rfloor>) +\n       ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2) +\n      (real (nat \\<lfloor>x\\<rfloor>) *\n       ln (real (nat \\<lfloor>x\\<rfloor>)) -\n       real (nat \\<lfloor>x\\<rfloor>) +\n       ln (2 * pi * real (nat \\<lfloor>x\\<rfloor>)) / 2 -\n       (x * ln x - x + ln (2 * pi * x) / 2)))\n  \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n        (x * ln x - x + ln (2 * pi * x) / 2))\n    \\<in> O(ln)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (x * ln x - x + ln (2 * pi * x) / 2))\n  \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "hence \"(\\<lambda>x. ln (fact (nat \\<lfloor>x\\<rfloor>)) - ?f x + ln (2 * pi * x) / 2) \\<in> O(\\<lambda>x. ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (x * ln x - x + ln (2 * pi * x) / 2))\n  \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n        (x * ln x - x + ln (2 * pi * x) / 2) +\n        ln (2 * pi * x) / 2)\n    \\<in> O(ln)", "by (rule sum_in_bigo) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (x * ln x - x + ln (2 * pi * x) / 2) +\n      ln (2 * pi * x) / 2)\n  \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      ln (fact (nat \\<lfloor>x\\<rfloor>)) -\n      (x * ln x - x + ln (2 * pi * x) / 2) +\n      ln (2 * pi * x) / 2)\n  \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n    \\<in> O(ln)", "by (simp add: sum_upto_ln_conv_ln_fact algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x + x)\n  \\<in> O(ln)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Various facts about Dirichlet series\\<close>"], ["", "lemma fds_mangoldt':\n  \"fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)", "have \"fds mangoldt = (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)) :: 'a))\"\n    (is \"_ = ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. fds mangoldt = fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))", "by (subst fds_mangoldt) auto"], ["proof (state)\nthis:\n  fds mangoldt = fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))\n\ngoal (1 subgoal):\n 1. fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)", "also"], ["proof (state)\nthis:\n  fds mangoldt = fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))\n\ngoal (1 subgoal):\n 1. fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)", "have \"\\<dots> = fds_zeta * fds_deriv (fds moebius_mu)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))) =\n    fds_zeta * fds_deriv (fds moebius_mu)", "proof (intro fds_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "assume n: \"n > 0\""], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "have \"fds_nth ?f n = (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real (n div d))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))) n =\n    (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real (n div d))))", "by (auto simp: fds_eq_iff fds_nth_mult dirichlet_prod_def)"], ["proof (state)\nthis:\n  fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))) n =\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real (n div d))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "also"], ["proof (state)\nthis:\n  fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))) n =\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real (n div d))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "have \"\\<dots> = (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n / real d)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real (n div d)))) =\n    (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n / real d)))", "by (intro sum.cong) (auto elim!: dvdE simp: ln_mult split: if_splits)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real (n div d)))) =\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n / real d)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real (n div d)))) =\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n / real d)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "have \"\\<dots> = (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln n - ln d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n / real d))) =\n    (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n) - ln (real d)))", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n / real d))) =\n    (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n) - ln (real d)))", "by (intro sum.cong refl) (subst ln_div, auto elim!: dvdE)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n / real d))) =\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n) - ln (real d)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n / real d))) =\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n) - ln (real d)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "have \"\\<dots> = of_real (ln n) * (\\<Sum>d | d dvd n. moebius_mu d) -\n                      (\\<Sum>d | d dvd n. of_real (ln d) * moebius_mu d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * of_real (ln (real n) - ln (real d))) =\n    of_real (ln (real n)) * (\\<Sum>d | d dvd n. moebius_mu d) -\n    (\\<Sum>d | d dvd n. of_real (ln (real d)) * moebius_mu d)", "by (simp add: sum_subtractf sum_distrib_left sum_distrib_right algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n) - ln (real d))) =\n  of_real (ln (real n)) * (\\<Sum>d | d dvd n. moebius_mu d) -\n  (\\<Sum>d | d dvd n. of_real (ln (real d)) * moebius_mu d)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. moebius_mu d * of_real (ln (real n) - ln (real d))) =\n  of_real (ln (real n)) * (\\<Sum>d | d dvd n. moebius_mu d) -\n  (\\<Sum>d | d dvd n. of_real (ln (real d)) * moebius_mu d)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "have \"of_real (ln n) * (\\<Sum>d | d dvd n. moebius_mu d) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_real (ln (real n)) * (\\<Sum>d | d dvd n. moebius_mu d) = (0::'b)", "by (subst sum_moebius_mu_divisors') auto"], ["proof (state)\nthis:\n  of_real (ln (real n)) * (\\<Sum>d | d dvd n. moebius_mu d) = (0::?'b1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))))\n        n =\n       fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "finally"], ["proof (chain)\npicking this:\n  fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))) n =\n  (0::'a) - (\\<Sum>d | d dvd n. of_real (ln (real d)) * moebius_mu d)", "show \"fds_nth ?f n = fds_nth (fds_zeta * fds_deriv (fds moebius_mu) :: 'a fds) n\""], ["proof (prove)\nusing this:\n  fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))) n =\n  (0::'a) - (\\<Sum>d | d dvd n. of_real (ln (real d)) * moebius_mu d)\n\ngoal (1 subgoal):\n 1. fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))) n =\n    fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n", "by (simp add: fds_nth_mult dirichlet_prod_altdef1 fds_nth_deriv sum_negf scaleR_conv_of_real)"], ["proof (state)\nthis:\n  fds_nth (fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n)))) n =\n  fds_nth (fds_zeta * fds_deriv (fds moebius_mu)) n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fds moebius_mu * fds (\\<lambda>n. of_real (ln (real n))) =\n  fds_zeta * fds_deriv (fds moebius_mu)\n\ngoal (1 subgoal):\n 1. fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)", "finally"], ["proof (chain)\npicking this:\n  fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)", "show ?thesis"], ["proof (prove)\nusing this:\n  fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)\n\ngoal (1 subgoal):\n 1. fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)", "."], ["proof (state)\nthis:\n  fds mangoldt = fds_zeta * fds_deriv (fds moebius_mu)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upto_divisor_sum1:\n  \"sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d :: real) x = sum_upto (\\<lambda>n. f n * floor (x / n)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "have \"sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d :: real) x =\n          sum_upto (\\<lambda>n. f n * real (nat (floor (x / n)))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>n. f n * real (nat \\<lfloor>x / real n\\<rfloor>)) x", "using sum_upto_dirichlet_prod[of f \"\\<lambda>_. 1\" x]"], ["proof (prove)\nusing this:\n  sum_upto (dirichlet_prod f (\\<lambda>_. 1)) x =\n  sum_upto (\\<lambda>d. f d * sum_upto (\\<lambda>_. 1) (x / real d)) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>n. f n * real (nat \\<lfloor>x / real n\\<rfloor>)) x", "by (simp add: dirichlet_prod_def sum_upto_altdef)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n  sum_upto (\\<lambda>n. f n * real (nat \\<lfloor>x / real n\\<rfloor>)) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n  sum_upto (\\<lambda>n. f n * real (nat \\<lfloor>x / real n\\<rfloor>)) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "have \"\\<dots> = sum_upto (\\<lambda>n. f n * floor (x / n)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. f n * real (nat \\<lfloor>x / real n\\<rfloor>)) x =\n    sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       f n * real (nat \\<lfloor>x / real n\\<rfloor>)) =\n    (\\<Sum>n\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       f n * real_of_int \\<lfloor>x / real n\\<rfloor>)", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. f n * real (nat \\<lfloor>x / real n\\<rfloor>)) x =\n  sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "finally"], ["proof (chain)\npicking this:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n  sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n  sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "."], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n  sum_upto (\\<lambda>n. f n * real_of_int \\<lfloor>x / real n\\<rfloor>) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upto_divisor_sum2:\n  \"sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d :: real) x = sum_upto (\\<lambda>n. sum_upto f (x / n)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>xa. sum_upto f (x / real xa)) x", "using sum_upto_dirichlet_prod[of \"\\<lambda>_. 1\" f x]"], ["proof (prove)\nusing this:\n  sum_upto (dirichlet_prod (\\<lambda>_. 1) f) x =\n  sum_upto (\\<lambda>d. 1 * sum_upto f (x / real d)) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. f d) x =\n    sum_upto (\\<lambda>xa. sum_upto f (x / real xa)) x", "by (simp add: dirichlet_prod_altdef1)"], ["", "lemma sum_upto_moebius_times_floor_linear:\n  \"sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x = (if x \\<ge> 1 then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "have \"real_of_int (sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x) =\n          sum_upto (\\<lambda>n. moebius_mu n * of_int \\<lfloor>x / real n\\<rfloor>) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int\n     (sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>)\n       x) =\n    sum_upto\n     (\\<lambda>n. moebius_mu n * real_of_int \\<lfloor>x / real n\\<rfloor>) x", "by (simp add: sum_upto_def)"], ["proof (state)\nthis:\n  real_of_int\n   (sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x) =\n  sum_upto\n   (\\<lambda>n. moebius_mu n * real_of_int \\<lfloor>x / real n\\<rfloor>) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "also"], ["proof (state)\nthis:\n  real_of_int\n   (sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x) =\n  sum_upto\n   (\\<lambda>n. moebius_mu n * real_of_int \\<lfloor>x / real n\\<rfloor>) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "have \"\\<dots> = sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d :: real) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. moebius_mu n * real_of_int \\<lfloor>x / real n\\<rfloor>)\n     x =\n    sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d) x", "using sum_upto_divisor_sum1[of moebius_mu x]"], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d) x =\n  sum_upto\n   (\\<lambda>n. moebius_mu n * real_of_int \\<lfloor>x / real n\\<rfloor>) x\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. moebius_mu n * real_of_int \\<lfloor>x / real n\\<rfloor>)\n     x =\n    sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d) x", "by auto"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. moebius_mu n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "also"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. moebius_mu n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "have \"\\<dots> = sum_upto (\\<lambda>n. if n = 1 then 1 else 0) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d) x =\n    sum_upto (\\<lambda>n. if n = 1 then 1 else 0) x", "by (intro sum_upto_cong sum_moebius_mu_divisors' refl)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d) x =\n  sum_upto (\\<lambda>n. if n = 1 then 1 else 0) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. moebius_mu d) x =\n  sum_upto (\\<lambda>n. if n = 1 then 1 else 0) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "have \"\\<dots> = real_of_int (if x \\<ge> 1 then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. if n = 1 then 1 else 0) x =\n    real_of_int (if 1 \\<le> x then 1 else 0)", "by (auto simp: sum_upto_def)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. if n = 1 then 1 else 0) x =\n  real_of_int (if 1 \\<le> x then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "finally"], ["proof (chain)\npicking this:\n  real_of_int\n   (sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x) =\n  real_of_int (if 1 \\<le> x then 1 else 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_int\n   (sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x) =\n  real_of_int (if 1 \\<le> x then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "unfolding of_int_eq_iff"], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n  (if 1 \\<le> x then 1 else 0)\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n    (if 1 \\<le> x then 1 else 0)", "."], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. moebius_mu n * \\<lfloor>x / real n\\<rfloor>) x =\n  (if 1 \\<le> x then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_fact_conv_sum_mangoldt:\n  \"sum_upto (\\<lambda>n. mangoldt n * \\<lfloor>x / real n\\<rfloor>) x = ln (fact (nat \\<lfloor>x\\<rfloor>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "have \"sum_upto (\\<lambda>n. mangoldt n * of_int \\<lfloor>x / real n\\<rfloor>) x =\n          sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d :: real) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d) x", "using sum_upto_divisor_sum1[of mangoldt x]"], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d) x =\n  sum_upto\n   (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d) x", "by auto"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d) x\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "also"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d) x\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "have \"\\<dots> = sum_upto (\\<lambda>n. of_real (ln (real n))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d) x =\n    sum_upto (\\<lambda>n. of_real (ln (real n))) x", "by (intro sum_upto_cong mangoldt_sum refl) auto"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d) x =\n  sum_upto (\\<lambda>n. of_real (ln (real n))) x\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. \\<Sum>d | d dvd n. mangoldt d) x =\n  sum_upto (\\<lambda>n. of_real (ln (real n))) x\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "have \"\\<dots> = (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. of_real (ln (real n))) x =\n    (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ln (real n))", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. of_real (ln (real n))) x =\n  (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ln (real n))\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. of_real (ln (real n))) x =\n  (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ln (real n))\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "have \"\\<dots> = ln (\\<Prod>{0<..nat \\<lfloor>x\\<rfloor>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ln (real n)) =\n    ln (real (\\<Prod>{0<..nat \\<lfloor>x\\<rfloor>}))", "unfolding of_nat_prod"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ln (real n)) =\n    ln (prod real {0<..nat \\<lfloor>x\\<rfloor>})", "by (subst ln_prod) auto"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ln (real n)) =\n  ln (real (\\<Prod>{0<..nat \\<lfloor>x\\<rfloor>}))\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ln (real n)) =\n  ln (real (\\<Prod>{0<..nat \\<lfloor>x\\<rfloor>}))\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "have \"{0<..nat \\<lfloor>x\\<rfloor>} = {1..nat \\<lfloor>x\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0<..nat \\<lfloor>x\\<rfloor>} = {1..nat \\<lfloor>x\\<rfloor>}", "by auto"], ["proof (state)\nthis:\n  {0<..nat \\<lfloor>x\\<rfloor>} = {1..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "also"], ["proof (state)\nthis:\n  {0<..nat \\<lfloor>x\\<rfloor>} = {1..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "have \"\\<Prod>\\<dots> = fact (nat \\<lfloor>x\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Prod>{1..nat \\<lfloor>x\\<rfloor>} = fact (nat \\<lfloor>x\\<rfloor>)", "by (simp add: fact_prod)"], ["proof (state)\nthis:\n  \\<Prod>{1..nat \\<lfloor>x\\<rfloor>} = fact (nat \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "finally"], ["proof (chain)\npicking this:\n  sum_upto\n   (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n  ln (real (fact (nat \\<lfloor>x\\<rfloor>)))", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_upto\n   (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n  ln (real (fact (nat \\<lfloor>x\\<rfloor>)))\n\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n    ln (fact (nat \\<lfloor>x\\<rfloor>))", "by simp"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. mangoldt n * real_of_int \\<lfloor>x / real n\\<rfloor>) x =\n  ln (fact (nat \\<lfloor>x\\<rfloor>))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Facts about prime-counting functions\\<close>"], ["", "lemma abs_\\<pi> [simp]: \"\\<bar>primes_pi x\\<bar> = primes_pi x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>primes_pi x\\<bar> = primes_pi x", "by (subst abs_of_nonneg) auto"], ["", "lemma \\<pi>_less_self:\n  includes prime_counting_notation\n  assumes \"x > 0\"\n  shows   \"\\<pi> x < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x < x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> x < x", "have \"\\<pi> x \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)", "unfolding \\<pi>_def prime_sum_upto_altdef2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. 1)\n    \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)", "by (intro sum_mono2) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  \\<pi> x \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)\n\ngoal (1 subgoal):\n 1. \\<pi> x < x", "also"], ["proof (state)\nthis:\n  \\<pi> x \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)\n\ngoal (1 subgoal):\n 1. \\<pi> x < x", "have \"\\<dots> = real (nat \\<lfloor>x\\<rfloor> - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1) =\n    real (nat \\<lfloor>x\\<rfloor> - 1)", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1) =\n    real (nat \\<lfloor>x\\<rfloor> - 1)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1) =\n  real (nat \\<lfloor>x\\<rfloor> - 1)\n\ngoal (1 subgoal):\n 1. \\<pi> x < x", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1) =\n  real (nat \\<lfloor>x\\<rfloor> - 1)\n\ngoal (1 subgoal):\n 1. \\<pi> x < x", "have \"\\<dots> < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>x\\<rfloor> - 1) < x", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>x\\<rfloor> - 1) < x", "by linarith"], ["proof (state)\nthis:\n  real (nat \\<lfloor>x\\<rfloor> - 1) < x\n\ngoal (1 subgoal):\n 1. \\<pi> x < x", "finally"], ["proof (chain)\npicking this:\n  \\<pi> x < x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> x < x\n\ngoal (1 subgoal):\n 1. \\<pi> x < x", "."], ["proof (state)\nthis:\n  \\<pi> x < x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_le_self':\n  includes prime_counting_notation\n  assumes \"x \\<ge> 1\"\n  shows   \"\\<pi> x \\<le> x - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x - 1", "have \"\\<pi> x \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)", "unfolding \\<pi>_def prime_sum_upto_altdef2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. 1)\n    \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)", "by (intro sum_mono2) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  \\<pi> x \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x - 1", "also"], ["proof (state)\nthis:\n  \\<pi> x \\<le> (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1)\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x - 1", "have \"\\<dots> = real (nat \\<lfloor>x\\<rfloor> - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1) =\n    real (nat \\<lfloor>x\\<rfloor> - 1)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1) =\n    real (nat \\<lfloor>x\\<rfloor> - 1)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1) =\n  real (nat \\<lfloor>x\\<rfloor> - 1)\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x - 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>{1<..nat \\<lfloor>x\\<rfloor>}. 1) =\n  real (nat \\<lfloor>x\\<rfloor> - 1)\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x - 1", "have \"\\<dots> \\<le> x - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>x\\<rfloor> - 1) \\<le> x - 1", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>x\\<rfloor> - 1) \\<le> x - 1", "by linarith"], ["proof (state)\nthis:\n  real (nat \\<lfloor>x\\<rfloor> - 1) \\<le> x - 1\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x - 1", "finally"], ["proof (chain)\npicking this:\n  \\<pi> x \\<le> x - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> x \\<le> x - 1\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x - 1", "."], ["proof (state)\nthis:\n  \\<pi> x \\<le> x - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_le_self:\n  includes prime_counting_notation\n  assumes \"x \\<ge> 0\"\n  shows   \"\\<pi> x \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x", "using \\<pi>_less_self[of x] assms"], ["proof (prove)\nusing this:\n  0 < x \\<Longrightarrow> \\<pi> x < x\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x", "by (cases \"x = 0\") auto"], ["", "subsection \\<open>Strengthening `Big-O' bounds\\<close>"], ["", "text \\<open>\n  The following two statements are crucial: They allow us to strengthen a `Big-O' statement\n  for $n\\to\\infty$ or $x\\to\\infty$ to a bound for \\<^emph>\\<open>all\\<close> $n\\geq n_0$ or all $x\\geq x_0$ under\n  some mild conditions.\n\n  This allows us to use all the machinery of asymptotics in Isabelle and still get a bound\n  that is applicable over the full domain of the function in the end. This is important because\n  Newman often shows that $f(x) \\in O(g(x))$ and then writes\n  \\[\\sum_{n\\leq x} f(\\frac{x}{n}) = \\sum_{n\\leq x} O(g(\\frac{x}{n}))\\]\n  which is not easy to justify otherwise.\n\\<close>"], ["", "lemma natfun_bigoE:\n  fixes f :: \"nat \\<Rightarrow> _\"\n  assumes bigo: \"f \\<in> O(g)\" and nz: \"\\<And>n. n \\<ge> n0 \\<Longrightarrow> g n \\<noteq> 0\"\n  obtains c where \"c > 0\" \"\\<And>n. n \\<ge> n0 \\<Longrightarrow> norm (f n) \\<le> c * norm (g n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<And>n.\n            n0 \\<le> n \\<Longrightarrow>\n            norm (f n) \\<le> c * norm (g n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<And>n.\n            n0 \\<le> n \\<Longrightarrow>\n            norm (f n) \\<le> c * norm (g n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from bigo"], ["proof (chain)\npicking this:\n  f \\<in> O(g)", "obtain c where c: \"c > 0\" \"eventually (\\<lambda>n. norm (f n) \\<le> c * norm (g n)) at_top\""], ["proof (prove)\nusing this:\n  f \\<in> O(g)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<forall>\\<^sub>F n in sequentially.\n            norm (f n) \\<le> c * norm (g n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: landau_o.bigE)"], ["proof (state)\nthis:\n  0 < c\n  \\<forall>\\<^sub>F n in sequentially. norm (f n) \\<le> c * norm (g n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<And>n.\n            n0 \\<le> n \\<Longrightarrow>\n            norm (f n) \\<le> c * norm (g n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < c\n  \\<forall>\\<^sub>F n in sequentially. norm (f n) \\<le> c * norm (g n)", "obtain n0' where n0': \"\\<And>n. n \\<ge> n0' \\<Longrightarrow> norm (f n) \\<le> c * norm (g n)\""], ["proof (prove)\nusing this:\n  0 < c\n  \\<forall>\\<^sub>F n in sequentially. norm (f n) \\<le> c * norm (g n)\n\ngoal (1 subgoal):\n 1. (\\<And>n0'.\n        (\\<And>n.\n            n0' \\<le> n \\<Longrightarrow>\n            norm (f n) \\<le> c * norm (g n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  n0' \\<le> ?n \\<Longrightarrow> norm (f ?n) \\<le> c * norm (g ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<And>n.\n            n0 \\<le> n \\<Longrightarrow>\n            norm (f n) \\<le> c * norm (g n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define c' where \"c' = Max ((\\<lambda>n. norm (f n) / norm (g n)) ` (insert n0 {n0..<n0'}))\""], ["proof (state)\nthis:\n  c' = (MAX n\\<in>insert n0 {n0..<n0'}. norm (f n) / norm (g n))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<And>n.\n            n0 \\<le> n \\<Longrightarrow>\n            norm (f n) \\<le> c * norm (g n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"norm (f n) \\<le> max 1 (max c c') * norm (g n)\" if \"n \\<ge> n0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f n) \\<le> max 1 (max c c') * norm (g n)", "proof (cases \"n \\<ge> n0'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)\n 2. \\<not> n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "case False"], ["proof (state)\nthis:\n  \\<not> n0' \\<le> n\n\ngoal (2 subgoals):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)\n 2. \\<not> n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "with that"], ["proof (chain)\npicking this:\n  n0 \\<le> n\n  \\<not> n0' \\<le> n", "have \"norm (f n) / norm (g n) \\<le> c'\""], ["proof (prove)\nusing this:\n  n0 \\<le> n\n  \\<not> n0' \\<le> n\n\ngoal (1 subgoal):\n 1. norm (f n) / norm (g n) \\<le> c'", "unfolding c'_def"], ["proof (prove)\nusing this:\n  n0 \\<le> n\n  \\<not> n0' \\<le> n\n\ngoal (1 subgoal):\n 1. norm (f n) / norm (g n)\n    \\<le> (MAX n\\<in>insert n0 {n0..<n0'}. norm (f n) / norm (g n))", "by (intro Max.coboundedI) auto"], ["proof (state)\nthis:\n  norm (f n) / norm (g n) \\<le> c'\n\ngoal (2 subgoals):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)\n 2. \\<not> n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "also"], ["proof (state)\nthis:\n  norm (f n) / norm (g n) \\<le> c'\n\ngoal (2 subgoals):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)\n 2. \\<not> n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "have \"\\<dots> \\<le> max 1 (max c c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c' \\<le> max 1 (max c c')", "by simp"], ["proof (state)\nthis:\n  c' \\<le> max 1 (max c c')\n\ngoal (2 subgoals):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)\n 2. \\<not> n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "finally"], ["proof (chain)\npicking this:\n  norm (f n) / norm (g n) \\<le> max 1 (max c c')", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (f n) / norm (g n) \\<le> max 1 (max c c')\n\ngoal (1 subgoal):\n 1. norm (f n) \\<le> max 1 (max c c') * norm (g n)", "using nz[of n] that"], ["proof (prove)\nusing this:\n  norm (f n) / norm (g n) \\<le> max 1 (max c c')\n  n0 \\<le> n \\<Longrightarrow> g n \\<noteq> (0::'b)\n  n0 \\<le> n\n\ngoal (1 subgoal):\n 1. norm (f n) \\<le> max 1 (max c c') * norm (g n)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  norm (f n) \\<le> max 1 (max c c') * norm (g n)\n\ngoal (1 subgoal):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "case True"], ["proof (state)\nthis:\n  n0' \\<le> n\n\ngoal (1 subgoal):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "hence \"norm (f n) \\<le> c * norm (g n)\""], ["proof (prove)\nusing this:\n  n0' \\<le> n\n\ngoal (1 subgoal):\n 1. norm (f n) \\<le> c * norm (g n)", "by (rule n0')"], ["proof (state)\nthis:\n  norm (f n) \\<le> c * norm (g n)\n\ngoal (1 subgoal):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "also"], ["proof (state)\nthis:\n  norm (f n) \\<le> c * norm (g n)\n\ngoal (1 subgoal):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "have \"\\<dots> \\<le> max 1 (max c c') * norm (g n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * norm (g n) \\<le> max 1 (max c c') * norm (g n)", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  c * norm (g n) \\<le> max 1 (max c c') * norm (g n)\n\ngoal (1 subgoal):\n 1. n0' \\<le> n \\<Longrightarrow>\n    norm (f n) \\<le> max 1 (max c c') * norm (g n)", "finally"], ["proof (chain)\npicking this:\n  norm (f n) \\<le> max 1 (max c c') * norm (g n)", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (f n) \\<le> max 1 (max c c') * norm (g n)\n\ngoal (1 subgoal):\n 1. norm (f n) \\<le> max 1 (max c c') * norm (g n)", "."], ["proof (state)\nthis:\n  norm (f n) \\<le> max 1 (max c c') * norm (g n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n0 \\<le> ?n \\<Longrightarrow>\n  norm (f ?n) \\<le> max 1 (max c c') * norm (g ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<And>n.\n            n0 \\<le> n \\<Longrightarrow>\n            norm (f n) \\<le> c * norm (g n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that[of \"max 1 (max c c')\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < max 1 (max c c');\n   \\<And>n.\n      n0 \\<le> n \\<Longrightarrow>\n      norm (f n) \\<le> max 1 (max c c') * norm (g n)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  n0 \\<le> ?n \\<Longrightarrow>\n  norm (f ?n) \\<le> max 1 (max c c') * norm (g ?n)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < max 1 (max c c');\n   \\<And>n.\n      n0 \\<le> n \\<Longrightarrow>\n      norm (f n) \\<le> max 1 (max c c') * norm (g n)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  n0 \\<le> ?n \\<Longrightarrow>\n  norm (f ?n) \\<le> max 1 (max c c') * norm (g ?n)\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bigoE_bounded_real_fun:\n  fixes f g :: \"real \\<Rightarrow> real\"\n  assumes \"f \\<in> O(g)\"\n  assumes \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> \\<bar>g x\\<bar> \\<ge> cg\" \"cg > 0\"\n  assumes \"\\<And>b. b \\<ge> x0 \\<Longrightarrow> bounded (f ` {x0..b})\"\n  shows   \"\\<exists>c>0. \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "from assms(1)"], ["proof (chain)\npicking this:\n  f \\<in> O(g)", "obtain c where c: \"c > 0\" \"eventually (\\<lambda>x. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>) at_top\""], ["proof (prove)\nusing this:\n  f \\<in> O(g)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<forall>\\<^sub>F x in at_top.\n            \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim landau_o.bigE) auto"], ["proof (state)\nthis:\n  0 < c\n  \\<forall>\\<^sub>F x in at_top. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "then"], ["proof (chain)\npicking this:\n  0 < c\n  \\<forall>\\<^sub>F x in at_top. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "obtain b where b: \"\\<And>x. x \\<ge> b \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\""], ["proof (prove)\nusing this:\n  0 < c\n  \\<forall>\\<^sub>F x in at_top. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        (\\<And>x.\n            b \\<le> x \\<Longrightarrow>\n            \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  b \\<le> ?x \\<Longrightarrow> \\<bar>f ?x\\<bar> \\<le> c * \\<bar>g ?x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "have \"bounded (f ` {x0..max x0 b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded (f ` {x0..max x0 b})", "by (intro assms) auto"], ["proof (state)\nthis:\n  bounded (f ` {x0..max x0 b})\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "then"], ["proof (chain)\npicking this:\n  bounded (f ` {x0..max x0 b})", "obtain C where C: \"\\<And>x. x \\<in> {x0..max x0 b} \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> C\""], ["proof (prove)\nusing this:\n  bounded (f ` {x0..max x0 b})\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (\\<And>x.\n            x \\<in> {x0..max x0 b} \\<Longrightarrow>\n            \\<bar>f x\\<bar> \\<le> C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding bounded_iff"], ["proof (prove)\nusing this:\n  \\<exists>a. \\<forall>x\\<in>f ` {x0..max x0 b}. norm x \\<le> a\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (\\<And>x.\n            x \\<in> {x0..max x0 b} \\<Longrightarrow>\n            \\<bar>f x\\<bar> \\<le> C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  ?x \\<in> {x0..max x0 b} \\<Longrightarrow> \\<bar>f ?x\\<bar> \\<le> C\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "define c' where \"c' = max c (C / cg)\""], ["proof (state)\nthis:\n  c' = max c (C / cg)\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "have \"\\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\" if \"x \\<ge> x0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "proof (cases \"x \\<ge> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n 2. \\<not> b \\<le> x \\<Longrightarrow>\n    \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "case False"], ["proof (state)\nthis:\n  \\<not> b \\<le> x\n\ngoal (2 subgoals):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n 2. \\<not> b \\<le> x \\<Longrightarrow>\n    \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "then"], ["proof (chain)\npicking this:\n  \\<not> b \\<le> x", "have \"\\<bar>f x\\<bar> \\<le> C\""], ["proof (prove)\nusing this:\n  \\<not> b \\<le> x\n\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> \\<le> C", "using C that"], ["proof (prove)\nusing this:\n  \\<not> b \\<le> x\n  ?x \\<in> {x0..max x0 b} \\<Longrightarrow> \\<bar>f ?x\\<bar> \\<le> C\n  x0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> \\<le> C", "by auto"], ["proof (state)\nthis:\n  \\<bar>f x\\<bar> \\<le> C\n\ngoal (2 subgoals):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n 2. \\<not> b \\<le> x \\<Longrightarrow>\n    \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "with False"], ["proof (chain)\npicking this:\n  \\<not> b \\<le> x\n  \\<bar>f x\\<bar> \\<le> C", "have \"\\<bar>f x\\<bar> / \\<bar>g x\\<bar> \\<le> C / cg\""], ["proof (prove)\nusing this:\n  \\<not> b \\<le> x\n  \\<bar>f x\\<bar> \\<le> C\n\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> / \\<bar>g x\\<bar> \\<le> C / cg", "by (meson abs_ge_zero assms frac_le landau_omega.R_trans that)"], ["proof (state)\nthis:\n  \\<bar>f x\\<bar> / \\<bar>g x\\<bar> \\<le> C / cg\n\ngoal (2 subgoals):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n 2. \\<not> b \\<le> x \\<Longrightarrow>\n    \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "also"], ["proof (state)\nthis:\n  \\<bar>f x\\<bar> / \\<bar>g x\\<bar> \\<le> C / cg\n\ngoal (2 subgoals):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n 2. \\<not> b \\<le> x \\<Longrightarrow>\n    \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "have \"\\<dots> \\<le> c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C / cg \\<le> c'", "by (simp add: c'_def)"], ["proof (state)\nthis:\n  C / cg \\<le> c'\n\ngoal (2 subgoals):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n 2. \\<not> b \\<le> x \\<Longrightarrow>\n    \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "finally"], ["proof (chain)\npicking this:\n  \\<bar>f x\\<bar> / \\<bar>g x\\<bar> \\<le> c'", "show \"\\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\""], ["proof (prove)\nusing this:\n  \\<bar>f x\\<bar> / \\<bar>g x\\<bar> \\<le> c'\n\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "using that False assms(2)[of x] assms(3)"], ["proof (prove)\nusing this:\n  \\<bar>f x\\<bar> / \\<bar>g x\\<bar> \\<le> c'\n  x0 \\<le> x\n  \\<not> b \\<le> x\n  x0 \\<le> x \\<Longrightarrow> cg \\<le> \\<bar>g x\\<bar>\n  0 < cg\n\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "by (auto simp add: divide_simps split: if_splits)"], ["proof (state)\nthis:\n  \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n\ngoal (1 subgoal):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "case True"], ["proof (state)\nthis:\n  b \\<le> x\n\ngoal (1 subgoal):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "hence \"\\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\""], ["proof (prove)\nusing this:\n  b \\<le> x\n\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "by (intro b) auto"], ["proof (state)\nthis:\n  \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\n\ngoal (1 subgoal):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "also"], ["proof (state)\nthis:\n  \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\n\ngoal (1 subgoal):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "have \"\\<dots> \\<le> c' * \\<bar>g x\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * \\<bar>g x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "by (intro mult_right_mono) (auto simp: c'_def)"], ["proof (state)\nthis:\n  c * \\<bar>g x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n\ngoal (1 subgoal):\n 1. b \\<le> x \\<Longrightarrow> \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "finally"], ["proof (chain)\npicking this:\n  \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>", "."], ["proof (state)\nthis:\n  \\<bar>f x\\<bar> \\<le> c' * \\<bar>g x\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x0 \\<le> ?x \\<Longrightarrow> \\<bar>f ?x\\<bar> \\<le> c' * \\<bar>g ?x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "moreover"], ["proof (state)\nthis:\n  x0 \\<le> ?x \\<Longrightarrow> \\<bar>f ?x\\<bar> \\<le> c' * \\<bar>g ?x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "from c(1)"], ["proof (chain)\npicking this:\n  0 < c", "have \"c' > 0\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. 0 < c'", "by (auto simp: c'_def)"], ["proof (state)\nthis:\n  0 < c'\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  x0 \\<le> ?x \\<Longrightarrow> \\<bar>f ?x\\<bar> \\<le> c' * \\<bar>g ?x\\<bar>\n  0 < c'", "show ?thesis"], ["proof (prove)\nusing this:\n  x0 \\<le> ?x \\<Longrightarrow> \\<bar>f ?x\\<bar> \\<le> c' * \\<bar>g ?x\\<bar>\n  0 < c'\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>", "by blast"], ["proof (state)\nthis:\n  \\<exists>c>0. \\<forall>x\\<ge>x0. \\<bar>f x\\<bar> \\<le> c * \\<bar>g x\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upto_asymptotics_lift_nat_real_aux:\n  fixes f :: \"nat \\<Rightarrow> real\" and g :: \"real \\<Rightarrow> real\"\n  assumes bigo: \"(\\<lambda>n. (\\<Sum>k=1..n. f k) - g (real n)) \\<in> O(\\<lambda>n. h (real n))\"\n  assumes g_bigo_self: \"(\\<lambda>n. g (real n) - g (real (Suc n))) \\<in> O(\\<lambda>n. h (real n))\"\n  assumes h_bigo_self: \"(\\<lambda>n. h (real n)) \\<in> O(\\<lambda>n. h (real (Suc n)))\"\n  assumes h_pos: \"\\<And>x. x \\<ge> 1 \\<Longrightarrow> h x > 0\"\n  assumes mono_g: \"mono_on g {1..} \\<or> mono_on (\\<lambda>x. - g x) {1..}\"\n  assumes mono_h: \"mono_on h {1..} \\<or> mono_on (\\<lambda>x. - h x) {1..}\"\n  shows   \"\\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "have h_nz: \"h (real n) \\<noteq> 0\" if \"n \\<ge> 1\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. h (real n) \\<noteq> 0", "using h_pos[of n] that"], ["proof (prove)\nusing this:\n  1 \\<le> real n \\<Longrightarrow> 0 < h (real n)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. h (real n) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  1 \\<le> ?n \\<Longrightarrow> h (real ?n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "from natfun_bigoE[OF bigo h_nz]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>n. ?n0.0 \\<le> n \\<Longrightarrow> 1 \\<le> n;\n   \\<And>c.\n      \\<lbrakk>0 < c;\n       \\<And>n.\n          ?n0.0 \\<le> n \\<Longrightarrow>\n          norm (sum f {1..n} - g (real n))\n          \\<le> c * norm (h (real n))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain c1 where\n    c1: \"c1 > 0\" \"\\<And>n. n \\<ge> 1 \\<Longrightarrow> norm ((\\<Sum>k=1..n. f k) - g (real n)) \\<le> c1 * norm (h (real n))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>n. ?n0.0 \\<le> n \\<Longrightarrow> 1 \\<le> n;\n   \\<And>c.\n      \\<lbrakk>0 < c;\n       \\<And>n.\n          ?n0.0 \\<le> n \\<Longrightarrow>\n          norm (sum f {1..n} - g (real n))\n          \\<le> c * norm (h (real n))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>0 < c1;\n         \\<And>n.\n            1 \\<le> n \\<Longrightarrow>\n            norm (sum f {1..n} - g (real n))\n            \\<le> c1 * norm (h (real n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < c1\n  1 \\<le> ?n \\<Longrightarrow>\n  norm (sum f {1..?n} - g (real ?n)) \\<le> c1 * norm (h (real ?n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "from natfun_bigoE[OF g_bigo_self h_nz]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>n. ?n0.0 \\<le> n \\<Longrightarrow> 1 \\<le> n;\n   \\<And>c.\n      \\<lbrakk>0 < c;\n       \\<And>n.\n          ?n0.0 \\<le> n \\<Longrightarrow>\n          norm (g (real n) - g (real (Suc n)))\n          \\<le> c * norm (h (real n))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain c2 where\n    c2: \"c2 > 0\" \"\\<And>n. n \\<ge> 1 \\<Longrightarrow> norm (g (real n) - g (real (Suc n))) \\<le> c2 * norm (h (real n))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>n. ?n0.0 \\<le> n \\<Longrightarrow> 1 \\<le> n;\n   \\<And>c.\n      \\<lbrakk>0 < c;\n       \\<And>n.\n          ?n0.0 \\<le> n \\<Longrightarrow>\n          norm (g (real n) - g (real (Suc n)))\n          \\<le> c * norm (h (real n))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>0 < c2;\n         \\<And>n.\n            1 \\<le> n \\<Longrightarrow>\n            norm (g (real n) - g (real (Suc n)))\n            \\<le> c2 * norm (h (real n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < c2\n  1 \\<le> ?n \\<Longrightarrow>\n  norm (g (real ?n) - g (real (Suc ?n))) \\<le> c2 * norm (h (real ?n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "from natfun_bigoE[OF h_bigo_self h_nz]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>n. ?n0.0 \\<le> n \\<Longrightarrow> 1 \\<le> Suc n;\n   \\<And>c.\n      \\<lbrakk>0 < c;\n       \\<And>n.\n          ?n0.0 \\<le> n \\<Longrightarrow>\n          norm (h (real n)) \\<le> c * norm (h (real (Suc n)))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain c3 where\n    c3: \"c3 > 0\" \"\\<And>n. n \\<ge> 1 \\<Longrightarrow> norm (h (real n)) \\<le> c3 * norm (h (real (Suc n)))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>n. ?n0.0 \\<le> n \\<Longrightarrow> 1 \\<le> Suc n;\n   \\<And>c.\n      \\<lbrakk>0 < c;\n       \\<And>n.\n          ?n0.0 \\<le> n \\<Longrightarrow>\n          norm (h (real n)) \\<le> c * norm (h (real (Suc n)))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c3.\n        \\<lbrakk>0 < c3;\n         \\<And>n.\n            1 \\<le> n \\<Longrightarrow>\n            norm (h (real n)) \\<le> c3 * norm (h (real (Suc n)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < c3\n  1 \\<le> ?n \\<Longrightarrow>\n  norm (h (real ?n)) \\<le> c3 * norm (h (real (Suc ?n)))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "{"], ["proof (state)\nthis:\n  0 < c3\n  1 \\<le> ?n \\<Longrightarrow>\n  norm (h (real ?n)) \\<le> c3 * norm (h (real (Suc ?n)))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "assume x: \"x \\<ge> 1\""], ["proof (state)\nthis:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "define n where \"n = nat \\<lfloor>x\\<rfloor>\""], ["proof (state)\nthis:\n  n = nat \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "from x"], ["proof (chain)\npicking this:\n  1 \\<le> x", "have n: \"n \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 \\<le> n", "unfolding n_def"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 \\<le> nat \\<lfloor>x\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "have \"(\\<Sum>k = 1..n. f k) - g x \\<le> (c1 + c2) * h (real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "using mono_g"], ["proof (prove)\nusing this:\n  mono_on g {1..} \\<or> mono_on (\\<lambda>x. - g x) {1..}\n\ngoal (1 subgoal):\n 1. sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "assume mono: \"mono_on (\\<lambda>x. -g x) {1..}\""], ["proof (state)\nthis:\n  mono_on (\\<lambda>x. - g x) {1..}\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "from x"], ["proof (chain)\npicking this:\n  1 \\<le> x", "have \"x \\<le> real (Suc n)\""], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> real (Suc n)", "unfolding n_def"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> real (Suc (nat \\<lfloor>x\\<rfloor>))", "by linarith"], ["proof (state)\nthis:\n  x \\<le> real (Suc n)\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "hence \"(\\<Sum>k=1..n. f k) - g x \\<le> (\\<Sum>k=1..n. f k) - g n + (g n - g (Suc n))\""], ["proof (prove)\nusing this:\n  x \\<le> real (Suc n)\n\ngoal (1 subgoal):\n 1. sum f {1..n} - g x\n    \\<le> sum f {1..n} - g (real n) + (g (real n) - g (real (Suc n)))", "using mono_onD[OF mono, of x \"real (Suc n)\"] x"], ["proof (prove)\nusing this:\n  x \\<le> real (Suc n)\n  \\<lbrakk>x \\<in> {1..}; real (Suc n) \\<in> {1..};\n   x \\<le> real (Suc n)\\<rbrakk>\n  \\<Longrightarrow> - g x \\<le> - g (real (Suc n))\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. sum f {1..n} - g x\n    \\<le> sum f {1..n} - g (real n) + (g (real n) - g (real (Suc n)))", "by auto"], ["proof (state)\nthis:\n  sum f {1..n} - g x\n  \\<le> sum f {1..n} - g (real n) + (g (real n) - g (real (Suc n)))\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "also"], ["proof (state)\nthis:\n  sum f {1..n} - g x\n  \\<le> sum f {1..n} - g (real n) + (g (real n) - g (real (Suc n)))\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "have \"\\<dots> \\<le> norm ((\\<Sum>k=1..n. f k) - g n) + norm (g n - g (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {1..n} - g (real n) + (g (real n) - g (real (Suc n)))\n    \\<le> norm (sum f {1..n} - g (real n)) +\n          norm (g (real n) - g (real (Suc n)))", "by simp"], ["proof (state)\nthis:\n  sum f {1..n} - g (real n) + (g (real n) - g (real (Suc n)))\n  \\<le> norm (sum f {1..n} - g (real n)) +\n        norm (g (real n) - g (real (Suc n)))\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "also"], ["proof (state)\nthis:\n  sum f {1..n} - g (real n) + (g (real n) - g (real (Suc n)))\n  \\<le> norm (sum f {1..n} - g (real n)) +\n        norm (g (real n) - g (real (Suc n)))\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "have \"\\<dots> \\<le> c1 * norm (h n) + c2 * norm (h n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (sum f {1..n} - g (real n)) + norm (g (real n) - g (real (Suc n)))\n    \\<le> c1 * norm (h (real n)) + c2 * norm (h (real n))", "using n"], ["proof (prove)\nusing this:\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. norm (sum f {1..n} - g (real n)) + norm (g (real n) - g (real (Suc n)))\n    \\<le> c1 * norm (h (real n)) + c2 * norm (h (real n))", "by (intro add_mono c1 c2) auto"], ["proof (state)\nthis:\n  norm (sum f {1..n} - g (real n)) + norm (g (real n) - g (real (Suc n)))\n  \\<le> c1 * norm (h (real n)) + c2 * norm (h (real n))\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "also"], ["proof (state)\nthis:\n  norm (sum f {1..n} - g (real n)) + norm (g (real n) - g (real (Suc n)))\n  \\<le> c1 * norm (h (real n)) + c2 * norm (h (real n))\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "have \"\\<dots> = (c1 + c2) * h n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c1 * norm (h (real n)) + c2 * norm (h (real n)) = (c1 + c2) * h (real n)", "using h_pos[of \"real n\"] n"], ["proof (prove)\nusing this:\n  1 \\<le> real n \\<Longrightarrow> 0 < h (real n)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. c1 * norm (h (real n)) + c2 * norm (h (real n)) = (c1 + c2) * h (real n)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  c1 * norm (h (real n)) + c2 * norm (h (real n)) = (c1 + c2) * h (real n)\n\ngoal (2 subgoals):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n 2. mono_on (\\<lambda>x. - g x) {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "finally"], ["proof (chain)\npicking this:\n  sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n\ngoal (1 subgoal):\n 1. sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "."], ["proof (state)\nthis:\n  sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n\ngoal (1 subgoal):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "assume mono: \"mono_on g {1..}\""], ["proof (state)\nthis:\n  mono_on g {1..}\n\ngoal (1 subgoal):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "have \"(\\<Sum>k=1..n. f k) - g x \\<le> (\\<Sum>k=1..n. f k) - g n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {1..n} - g x \\<le> sum f {1..n} - g (real n)", "using x"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. sum f {1..n} - g x \\<le> sum f {1..n} - g (real n)", "by (intro diff_mono mono_onD[OF mono]) (auto simp: n_def)"], ["proof (state)\nthis:\n  sum f {1..n} - g x \\<le> sum f {1..n} - g (real n)\n\ngoal (1 subgoal):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "also"], ["proof (state)\nthis:\n  sum f {1..n} - g x \\<le> sum f {1..n} - g (real n)\n\ngoal (1 subgoal):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "have \"\\<dots> \\<le> c1 * h (real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {1..n} - g (real n) \\<le> c1 * h (real n)", "using c1(2)[of n] n h_pos[of n]"], ["proof (prove)\nusing this:\n  1 \\<le> n \\<Longrightarrow>\n  norm (sum f {1..n} - g (real n)) \\<le> c1 * norm (h (real n))\n  1 \\<le> n\n  1 \\<le> real n \\<Longrightarrow> 0 < h (real n)\n\ngoal (1 subgoal):\n 1. sum f {1..n} - g (real n) \\<le> c1 * h (real n)", "by simp"], ["proof (state)\nthis:\n  sum f {1..n} - g (real n) \\<le> c1 * h (real n)\n\ngoal (1 subgoal):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "also"], ["proof (state)\nthis:\n  sum f {1..n} - g (real n) \\<le> c1 * h (real n)\n\ngoal (1 subgoal):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "have \"\\<dots> \\<le> (c1 + c2) * h (real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c1 * h (real n) \\<le> (c1 + c2) * h (real n)", "using c2 h_pos[of n] n"], ["proof (prove)\nusing this:\n  0 < c2\n  1 \\<le> ?n \\<Longrightarrow>\n  norm (g (real ?n) - g (real (Suc ?n))) \\<le> c2 * norm (h (real ?n))\n  1 \\<le> real n \\<Longrightarrow> 0 < h (real n)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. c1 * h (real n) \\<le> (c1 + c2) * h (real n)", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  c1 * h (real n) \\<le> (c1 + c2) * h (real n)\n\ngoal (1 subgoal):\n 1. mono_on g {1..} \\<Longrightarrow>\n    sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "finally"], ["proof (chain)\npicking this:\n  sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n\ngoal (1 subgoal):\n 1. sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)", "."], ["proof (state)\nthis:\n  sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "also"], ["proof (state)\nthis:\n  sum f {1..n} - g x \\<le> (c1 + c2) * h (real n)\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "have \"(c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "using mono_h"], ["proof (prove)\nusing this:\n  mono_on h {1..} \\<or> mono_on (\\<lambda>x. - h x) {1..}\n\ngoal (1 subgoal):\n 1. (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "assume mono: \"mono_on (\\<lambda>x. -h x) {1..}\""], ["proof (state)\nthis:\n  mono_on (\\<lambda>x. - h x) {1..}\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "have \"(c1 + c2) * h (real n) \\<le> (c1 + c2) * (c3 * h (real (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c1 + c2) * h (real n) \\<le> (c1 + c2) * (c3 * h (real (Suc n)))", "using c3(2)[of n] n h_pos[of n] h_pos[of \"Suc n\"] c1(1) c2(1)"], ["proof (prove)\nusing this:\n  1 \\<le> n \\<Longrightarrow>\n  norm (h (real n)) \\<le> c3 * norm (h (real (Suc n)))\n  1 \\<le> n\n  1 \\<le> real n \\<Longrightarrow> 0 < h (real n)\n  1 \\<le> real (Suc n) \\<Longrightarrow> 0 < h (real (Suc n))\n  0 < c1\n  0 < c2\n\ngoal (1 subgoal):\n 1. (c1 + c2) * h (real n) \\<le> (c1 + c2) * (c3 * h (real (Suc n)))", "by (intro mult_left_mono) (auto)"], ["proof (state)\nthis:\n  (c1 + c2) * h (real n) \\<le> (c1 + c2) * (c3 * h (real (Suc n)))\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "also"], ["proof (state)\nthis:\n  (c1 + c2) * h (real n) \\<le> (c1 + c2) * (c3 * h (real (Suc n)))\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "have \"\\<dots> = (c1 + c2) * c3 * h (real (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c1 + c2) * (c3 * h (real (Suc n))) = (c1 + c2) * c3 * h (real (Suc n))", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  (c1 + c2) * (c3 * h (real (Suc n))) = (c1 + c2) * c3 * h (real (Suc n))\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "also"], ["proof (state)\nthis:\n  (c1 + c2) * (c3 * h (real (Suc n))) = (c1 + c2) * c3 * h (real (Suc n))\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "have \"\\<dots> \\<le> (c1 + c2) * (1 + c3) * h (real (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c1 + c2) * c3 * h (real (Suc n))\n    \\<le> (c1 + c2) * (1 + c3) * h (real (Suc n))", "using c1(1) c2(1) c3(1) h_pos[of \"Suc n\"]"], ["proof (prove)\nusing this:\n  0 < c1\n  0 < c2\n  0 < c3\n  1 \\<le> real (Suc n) \\<Longrightarrow> 0 < h (real (Suc n))\n\ngoal (1 subgoal):\n 1. (c1 + c2) * c3 * h (real (Suc n))\n    \\<le> (c1 + c2) * (1 + c3) * h (real (Suc n))", "by (intro mult_left_mono mult_right_mono) auto"], ["proof (state)\nthis:\n  (c1 + c2) * c3 * h (real (Suc n))\n  \\<le> (c1 + c2) * (1 + c3) * h (real (Suc n))\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "also"], ["proof (state)\nthis:\n  (c1 + c2) * c3 * h (real (Suc n))\n  \\<le> (c1 + c2) * (1 + c3) * h (real (Suc n))\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "from x"], ["proof (chain)\npicking this:\n  1 \\<le> x", "have \"x \\<le> real (Suc n)\""], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> real (Suc n)", "unfolding n_def"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> real (Suc (nat \\<lfloor>x\\<rfloor>))", "by linarith"], ["proof (state)\nthis:\n  x \\<le> real (Suc n)\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "hence \"(c1 + c2) * (1 + c3) * h (real (Suc n)) \\<le> (c1 + c2) * (1 + c3) * h x\""], ["proof (prove)\nusing this:\n  x \\<le> real (Suc n)\n\ngoal (1 subgoal):\n 1. (c1 + c2) * (1 + c3) * h (real (Suc n)) \\<le> (c1 + c2) * (1 + c3) * h x", "using c1(1) c2(1) c3(1) mono_onD[OF mono, of x \"real (Suc n)\"] x"], ["proof (prove)\nusing this:\n  x \\<le> real (Suc n)\n  0 < c1\n  0 < c2\n  0 < c3\n  \\<lbrakk>x \\<in> {1..}; real (Suc n) \\<in> {1..};\n   x \\<le> real (Suc n)\\<rbrakk>\n  \\<Longrightarrow> - h x \\<le> - h (real (Suc n))\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. (c1 + c2) * (1 + c3) * h (real (Suc n)) \\<le> (c1 + c2) * (1 + c3) * h x", "by (intro mult_left_mono) (auto simp: n_def)"], ["proof (state)\nthis:\n  (c1 + c2) * (1 + c3) * h (real (Suc n)) \\<le> (c1 + c2) * (1 + c3) * h x\n\ngoal (2 subgoals):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n 2. mono_on (\\<lambda>x. - h x) {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "finally"], ["proof (chain)\npicking this:\n  (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "show \"(c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\""], ["proof (prove)\nusing this:\n  (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n\ngoal (1 subgoal):\n 1. (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "."], ["proof (state)\nthis:\n  (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "assume mono: \"mono_on h {1..}\""], ["proof (state)\nthis:\n  mono_on h {1..}\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "have \"(c1 + c2) * h (real n) = 1 * ((c1 + c2) * h (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c1 + c2) * h (real n) = 1 * ((c1 + c2) * h (real n))", "by simp"], ["proof (state)\nthis:\n  (c1 + c2) * h (real n) = 1 * ((c1 + c2) * h (real n))\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "also"], ["proof (state)\nthis:\n  (c1 + c2) * h (real n) = 1 * ((c1 + c2) * h (real n))\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "have \"\\<dots> \\<le> (1 + c3) * ((c1 + c2) * h (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * ((c1 + c2) * h (real n)) \\<le> (1 + c3) * ((c1 + c2) * h (real n))", "using c1(1) c2(1) c3(1) h_pos[of n] x n"], ["proof (prove)\nusing this:\n  0 < c1\n  0 < c2\n  0 < c3\n  1 \\<le> real n \\<Longrightarrow> 0 < h (real n)\n  1 \\<le> x\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. 1 * ((c1 + c2) * h (real n)) \\<le> (1 + c3) * ((c1 + c2) * h (real n))", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  1 * ((c1 + c2) * h (real n)) \\<le> (1 + c3) * ((c1 + c2) * h (real n))\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "also"], ["proof (state)\nthis:\n  1 * ((c1 + c2) * h (real n)) \\<le> (1 + c3) * ((c1 + c2) * h (real n))\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "have \"\\<dots> = (1 + c3) * (c1 + c2) * h (real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + c3) * ((c1 + c2) * h (real n)) = (1 + c3) * (c1 + c2) * h (real n)", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  (1 + c3) * ((c1 + c2) * h (real n)) = (1 + c3) * (c1 + c2) * h (real n)\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "also"], ["proof (state)\nthis:\n  (1 + c3) * ((c1 + c2) * h (real n)) = (1 + c3) * (c1 + c2) * h (real n)\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "have \"\\<dots> \\<le> (1 + c3) * (c1 + c2) * h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + c3) * (c1 + c2) * h (real n) \\<le> (1 + c3) * (c1 + c2) * h x", "using x c1(1) c2(1) c3(1) h_pos[of n] n"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  0 < c1\n  0 < c2\n  0 < c3\n  1 \\<le> real n \\<Longrightarrow> 0 < h (real n)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. (1 + c3) * (c1 + c2) * h (real n) \\<le> (1 + c3) * (c1 + c2) * h x", "by (intro mult_left_mono mono_onD[OF mono]) (auto simp: n_def)"], ["proof (state)\nthis:\n  (1 + c3) * (c1 + c2) * h (real n) \\<le> (1 + c3) * (c1 + c2) * h x\n\ngoal (1 subgoal):\n 1. mono_on h {1..} \\<Longrightarrow>\n    (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "finally"], ["proof (chain)\npicking this:\n  (c1 + c2) * h (real n) \\<le> (1 + c3) * (c1 + c2) * h x", "show \"(c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\""], ["proof (prove)\nusing this:\n  (c1 + c2) * h (real n) \\<le> (1 + c3) * (c1 + c2) * h x\n\ngoal (1 subgoal):\n 1. (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "also"], ["proof (state)\nthis:\n  (c1 + c2) * h (real n) \\<le> (c1 + c2) * (1 + c3) * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "have \"(\\<Sum>k = 1..n. f k) = sum_upto f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {1..n} = sum_upto f x", "unfolding sum_upto_altdef n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {1..nat \\<lfloor>x\\<rfloor>} = sum f {0<..nat \\<lfloor>x\\<rfloor>}", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  sum f {1..n} = sum_upto f x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "finally"], ["proof (chain)\npicking this:\n  sum_upto f x - g x \\<le> (c1 + c2) * (1 + c3) * h x", "have \"sum_upto f x - g x \\<le> (c1 + c2) * (1 + c3) * h x\""], ["proof (prove)\nusing this:\n  sum_upto f x - g x \\<le> (c1 + c2) * (1 + c3) * h x\n\ngoal (1 subgoal):\n 1. sum_upto f x - g x \\<le> (c1 + c2) * (1 + c3) * h x", "."], ["proof (state)\nthis:\n  sum_upto f x - g x \\<le> (c1 + c2) * (1 + c3) * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "}"], ["proof (state)\nthis:\n  1 \\<le> ?x2 \\<Longrightarrow>\n  sum_upto f ?x2 - g ?x2 \\<le> (c1 + c2) * (1 + c3) * h ?x2\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "moreover"], ["proof (state)\nthis:\n  1 \\<le> ?x2 \\<Longrightarrow>\n  sum_upto f ?x2 - g ?x2 \\<le> (c1 + c2) * (1 + c3) * h ?x2\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "have \"(c1 + c2) * (1 + c3) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (c1 + c2) * (1 + c3)", "using c1(1) c2(1) c3(1)"], ["proof (prove)\nusing this:\n  0 < c1\n  0 < c2\n  0 < c3\n\ngoal (1 subgoal):\n 1. 0 < (c1 + c2) * (1 + c3)", "by (intro mult_pos_pos add_pos_pos) auto"], ["proof (state)\nthis:\n  0 < (c1 + c2) * (1 + c3)\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> ?x2 \\<Longrightarrow>\n  sum_upto f ?x2 - g ?x2 \\<le> (c1 + c2) * (1 + c3) * h ?x2\n  0 < (c1 + c2) * (1 + c3)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> ?x2 \\<Longrightarrow>\n  sum_upto f ?x2 - g ?x2 \\<le> (c1 + c2) * (1 + c3) * h ?x2\n  0 < (c1 + c2) * (1 + c3)\n\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "by blast"], ["proof (state)\nthis:\n  \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upto_asymptotics_lift_nat_real:\n  fixes f :: \"nat \\<Rightarrow> real\" and g :: \"real \\<Rightarrow> real\"\n  assumes bigo: \"(\\<lambda>n. (\\<Sum>k=1..n. f k) - g (real n)) \\<in> O(\\<lambda>n. h (real n))\"\n  assumes g_bigo_self: \"(\\<lambda>n. g (real n) - g (real (Suc n))) \\<in> O(\\<lambda>n. h (real n))\"\n  assumes h_bigo_self: \"(\\<lambda>n. h (real n)) \\<in> O(\\<lambda>n. h (real (Suc n)))\"\n  assumes h_pos: \"\\<And>x. x \\<ge> 1 \\<Longrightarrow> h x > 0\"\n  assumes mono_g: \"mono_on g {1..} \\<or> mono_on (\\<lambda>x. - g x) {1..}\"\n  assumes mono_h: \"mono_on h {1..} \\<or> mono_on (\\<lambda>x. - h x) {1..}\"\n  shows   \"\\<exists>c>0. \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "have \"\\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "by (intro sum_upto_asymptotics_lift_nat_real_aux assms)"], ["proof (state)\nthis:\n  \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "then"], ["proof (chain)\npicking this:\n  \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x", "obtain c1 where c1: \"c1 > 0\" \"\\<And>x. x \\<ge> 1 \\<Longrightarrow> sum_upto f x - g x \\<le> c1 * h x\""], ["proof (prove)\nusing this:\n  \\<exists>c>0. \\<forall>x\\<ge>1. sum_upto f x - g x \\<le> c * h x\n\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>0 < c1;\n         \\<And>x.\n            1 \\<le> x \\<Longrightarrow>\n            sum_upto f x - g x \\<le> c1 * h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < c1\n  1 \\<le> ?x \\<Longrightarrow> sum_upto f ?x - g ?x \\<le> c1 * h ?x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "have \"(\\<lambda>n. -(g (real n) - g (real (Suc n)))) \\<in> O(\\<lambda>n. h (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. - (g (real n) - g (real (Suc n))))\n    \\<in> O(\\<lambda>n. h (real n))", "by (subst landau_o.big.uminus_in_iff) fact"], ["proof (state)\nthis:\n  (\\<lambda>n. - (g (real n) - g (real (Suc n))))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. - (g (real n) - g (real (Suc n))))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "have \"(\\<lambda>n. -(g (real n) - g (real (Suc n)))) = (\\<lambda>n. g (real (Suc n)) - g (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. - (g (real n) - g (real (Suc n)))) =\n    (\\<lambda>n. g (real (Suc n)) - g (real n))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. - (g (real n) - g (real (Suc n)))) =\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n  \\<in> O(\\<lambda>n. h (real n))", "have \"(\\<lambda>n. g (real (Suc n)) - g (real n)) \\<in> O(\\<lambda>n. h (real n))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. g (real (Suc n)) - g (real n))\n    \\<in> O(\\<lambda>n. h (real n))", "."], ["proof (state)\nthis:\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "{"], ["proof (state)\nthis:\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "have \"(\\<lambda>n. -((\\<Sum>k=1..n. f k) - g (real n))) \\<in> O(\\<lambda>n. h (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. - (sum f {1..n} - g (real n)))\n    \\<in> O(\\<lambda>n. h (real n))", "by (subst landau_o.big.uminus_in_iff) fact"], ["proof (state)\nthis:\n  (\\<lambda>n. - (sum f {1..n} - g (real n)))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. - (sum f {1..n} - g (real n)))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "have \"(\\<lambda>n. -((\\<Sum>k=1..n. f k) - g (real n))) =\n                 (\\<lambda>n. (\\<Sum>k=1..n. -f k) + g (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. - (sum f {1..n} - g (real n))) =\n    (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))", "by (simp add: sum_negf)"], ["proof (state)\nthis:\n  (\\<lambda>n. - (sum f {1..n} - g (real n))) =\n  (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n  \\<in> O(\\<lambda>n. h (real n))", "have \"(\\<lambda>n. (\\<Sum>k=1..n. - f k) + g (real n)) \\<in> O(\\<lambda>n. h (real n))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n    \\<in> O(\\<lambda>n. h (real n))", "."], ["proof (state)\nthis:\n  (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "}"], ["proof (state)\nthis:\n  (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n  (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n  \\<in> O(\\<lambda>n. h (real n))", "have \"\\<exists>c>0. \\<forall>x\\<ge>1. sum_upto (\\<lambda>n. -f n) x - (-g x) \\<le> c * h x\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n  (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1.\n          sum_upto (\\<lambda>n. - f n) x - - g x \\<le> c * h x", "using mono_g"], ["proof (prove)\nusing this:\n  (\\<lambda>n. g (real (Suc n)) - g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n  (\\<lambda>n. (\\<Sum>k = 1..n. - f k) + g (real n))\n  \\<in> O(\\<lambda>n. h (real n))\n  mono_on g {1..} \\<or> mono_on (\\<lambda>x. - g x) {1..}\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1.\n          sum_upto (\\<lambda>n. - f n) x - - g x \\<le> c * h x", "by (intro sum_upto_asymptotics_lift_nat_real_aux assms) (simp_all add: disj_commute)"], ["proof (state)\nthis:\n  \\<exists>c>0.\n     \\<forall>x\\<ge>1. sum_upto (\\<lambda>n. - f n) x - - g x \\<le> c * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "then"], ["proof (chain)\npicking this:\n  \\<exists>c>0.\n     \\<forall>x\\<ge>1. sum_upto (\\<lambda>n. - f n) x - - g x \\<le> c * h x", "obtain c2 where c2: \"c2 > 0\" \"\\<And>x. x \\<ge> 1 \\<Longrightarrow> sum_upto (\\<lambda>n. - f n) x + g x \\<le> c2 * h x\""], ["proof (prove)\nusing this:\n  \\<exists>c>0.\n     \\<forall>x\\<ge>1. sum_upto (\\<lambda>n. - f n) x - - g x \\<le> c * h x\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>0 < c2;\n         \\<And>x.\n            1 \\<le> x \\<Longrightarrow>\n            sum_upto (\\<lambda>n. - f n) x + g x \\<le> c2 * h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < c2\n  1 \\<le> ?x \\<Longrightarrow>\n  sum_upto (\\<lambda>n. - f n) ?x + g ?x \\<le> c2 * h ?x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "{"], ["proof (state)\nthis:\n  0 < c2\n  1 \\<le> ?x \\<Longrightarrow>\n  sum_upto (\\<lambda>n. - f n) ?x + g ?x \\<le> c2 * h ?x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "assume x: \"x \\<ge> 1\""], ["proof (state)\nthis:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "have \"sum_upto f x - g x \\<le> max c1 c2 * h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto f x - g x \\<le> max c1 c2 * h x", "using h_pos[of x] x"], ["proof (prove)\nusing this:\n  1 \\<le> x \\<Longrightarrow> 0 < h x\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. sum_upto f x - g x \\<le> max c1 c2 * h x", "by (intro order.trans[OF c1(2)] mult_right_mono) auto"], ["proof (state)\nthis:\n  sum_upto f x - g x \\<le> max c1 c2 * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "moreover"], ["proof (state)\nthis:\n  sum_upto f x - g x \\<le> max c1 c2 * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "have \"sum_upto (\\<lambda>n. -f n) x + g x \\<le> max c1 c2 * h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. - f n) x + g x \\<le> max c1 c2 * h x", "using h_pos[of x] x"], ["proof (prove)\nusing this:\n  1 \\<le> x \\<Longrightarrow> 0 < h x\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>n. - f n) x + g x \\<le> max c1 c2 * h x", "by (intro order.trans[OF c2(2)] mult_right_mono) auto"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>n. - f n) x + g x \\<le> max c1 c2 * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "hence \"-(sum_upto f x - g x) \\<le> max c1 c2 * h x\""], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>n. - f n) x + g x \\<le> max c1 c2 * h x\n\ngoal (1 subgoal):\n 1. - (sum_upto f x - g x) \\<le> max c1 c2 * h x", "by (simp add: sum_upto_def sum_negf)"], ["proof (state)\nthis:\n  - (sum_upto f x - g x) \\<le> max c1 c2 * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "ultimately"], ["proof (chain)\npicking this:\n  sum_upto f x - g x \\<le> max c1 c2 * h x\n  - (sum_upto f x - g x) \\<le> max c1 c2 * h x", "have \"\\<bar>sum_upto f x - g x\\<bar> \\<le> max c1 c2 * h x\""], ["proof (prove)\nusing this:\n  sum_upto f x - g x \\<le> max c1 c2 * h x\n  - (sum_upto f x - g x) \\<le> max c1 c2 * h x\n\ngoal (1 subgoal):\n 1. \\<bar>sum_upto f x - g x\\<bar> \\<le> max c1 c2 * h x", "by linarith"], ["proof (state)\nthis:\n  \\<bar>sum_upto f x - g x\\<bar> \\<le> max c1 c2 * h x\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "}"], ["proof (state)\nthis:\n  1 \\<le> ?x2 \\<Longrightarrow>\n  \\<bar>sum_upto f ?x2 - g ?x2\\<bar> \\<le> max c1 c2 * h ?x2\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "moreover"], ["proof (state)\nthis:\n  1 \\<le> ?x2 \\<Longrightarrow>\n  \\<bar>sum_upto f ?x2 - g ?x2\\<bar> \\<le> max c1 c2 * h ?x2\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "from c1(1) c2(1)"], ["proof (chain)\npicking this:\n  0 < c1\n  0 < c2", "have \"max c1 c2 > 0\""], ["proof (prove)\nusing this:\n  0 < c1\n  0 < c2\n\ngoal (1 subgoal):\n 1. 0 < max c1 c2", "by simp"], ["proof (state)\nthis:\n  0 < max c1 c2\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> ?x2 \\<Longrightarrow>\n  \\<bar>sum_upto f ?x2 - g ?x2\\<bar> \\<le> max c1 c2 * h ?x2\n  0 < max c1 c2", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> ?x2 \\<Longrightarrow>\n  \\<bar>sum_upto f ?x2 - g ?x2\\<bar> \\<le> max c1 c2 * h ?x2\n  0 < max c1 c2\n\ngoal (1 subgoal):\n 1. \\<exists>c>0.\n       \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x", "by blast"], ["proof (state)\nthis:\n  \\<exists>c>0.\n     \\<forall>x\\<ge>1. \\<bar>sum_upto f x - g x\\<bar> \\<le> c * h x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in factorial_semiring) primepow_divisors_induct [case_names zero unit factor]:\n  assumes \"P 0\" \"\\<And>x. is_unit x \\<Longrightarrow> P x\"\n          \"\\<And>p k x. prime p \\<Longrightarrow> k > 0 \\<Longrightarrow> \\<not>p dvd x \\<Longrightarrow> P x \\<Longrightarrow> P (p ^ k * x)\"\n  shows   \"P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P x", "have \"finite (prime_factors x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (prime_factors x)", "by simp"], ["proof (state)\nthis:\n  finite (prime_factors x)\n\ngoal (1 subgoal):\n 1. P x", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite (prime_factors x)\n\ngoal (1 subgoal):\n 1. P x", "proof (induction \"prime_factors x\" arbitrary: x rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. {} = prime_factors x \\<Longrightarrow> P x\n 2. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "case empty"], ["proof (state)\nthis:\n  {} = prime_factors x\n\ngoal (2 subgoals):\n 1. \\<And>x. {} = prime_factors x \\<Longrightarrow> P x\n 2. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "hence \"prime_factors x = {}\""], ["proof (prove)\nusing this:\n  {} = prime_factors x\n\ngoal (1 subgoal):\n 1. prime_factors x = {}", "by metis"], ["proof (state)\nthis:\n  prime_factors x = {}\n\ngoal (2 subgoals):\n 1. \\<And>x. {} = prime_factors x \\<Longrightarrow> P x\n 2. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "hence \"prime_factorization x = {#}\""], ["proof (prove)\nusing this:\n  prime_factors x = {}\n\ngoal (1 subgoal):\n 1. prime_factorization x = {#}", "by simp"], ["proof (state)\nthis:\n  prime_factorization x = {#}\n\ngoal (2 subgoals):\n 1. \\<And>x. {} = prime_factors x \\<Longrightarrow> P x\n 2. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "thus ?case"], ["proof (prove)\nusing this:\n  prime_factorization x = {#}\n\ngoal (1 subgoal):\n 1. P x", "using assms(1,2)"], ["proof (prove)\nusing this:\n  prime_factorization x = {#}\n  P (0::'a)\n  is_unit ?x1 \\<Longrightarrow> P ?x1\n\ngoal (1 subgoal):\n 1. P x", "by (auto simp: prime_factorization_empty_iff)"], ["proof (state)\nthis:\n  P x\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "case (insert p A x)"], ["proof (state)\nthis:\n  finite A\n  p \\<notin> A\n  A = prime_factors ?x1 \\<Longrightarrow> P ?x1\n  insert p A = prime_factors x\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "define k where \"k = multiplicity p x\""], ["proof (state)\nthis:\n  k = multiplicity p x\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "have \"k > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k", "using insert.hyps"], ["proof (prove)\nusing this:\n  finite A\n  p \\<notin> A\n  A = prime_factors ?x1 \\<Longrightarrow> P ?x1\n  insert p A = prime_factors x\n\ngoal (1 subgoal):\n 1. 0 < k", "by (auto simp: prime_factors_multiplicity k_def)"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "have p: \"p \\<in> prime_factors x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> prime_factors x", "using insert.hyps"], ["proof (prove)\nusing this:\n  finite A\n  p \\<notin> A\n  A = prime_factors ?x1 \\<Longrightarrow> P ?x1\n  insert p A = prime_factors x\n\ngoal (1 subgoal):\n 1. p \\<in> prime_factors x", "by auto"], ["proof (state)\nthis:\n  p \\<in> prime_factors x\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "from p"], ["proof (chain)\npicking this:\n  p \\<in> prime_factors x", "have \"x \\<noteq> 0\" \"\\<not>is_unit p\""], ["proof (prove)\nusing this:\n  p \\<in> prime_factors x\n\ngoal (1 subgoal):\n 1. x \\<noteq> (0::'a) &&& \\<not> is_unit p", "by (auto simp: in_prime_factors_iff)"], ["proof (state)\nthis:\n  x \\<noteq> (0::'a)\n  \\<not> is_unit p\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "from multiplicity_decompose'[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>y.\n      \\<lbrakk>x = p ^ multiplicity p x * y; \\<not> p dvd y\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain y where y: \"x = p ^ k * y\" \"\\<not>p dvd y\""], ["proof (prove)\nusing this:\n  (\\<And>y.\n      \\<lbrakk>x = p ^ multiplicity p x * y; \\<not> p dvd y\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>x = p ^ k * y; \\<not> p dvd y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: k_def)"], ["proof (state)\nthis:\n  x = p ^ k * y\n  \\<not> p dvd y\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "have \"prime_factorization x = replicate_mset k p + prime_factorization y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factorization x = replicate_mset k p + prime_factorization y", "using p \\<open>k > 0\\<close> y"], ["proof (prove)\nusing this:\n  p \\<in> prime_factors x\n  0 < k\n  x = p ^ k * y\n  \\<not> p dvd y\n\ngoal (1 subgoal):\n 1. prime_factorization x = replicate_mset k p + prime_factorization y", "unfolding y"], ["proof (prove)\nusing this:\n  p \\<in> prime_factors (p ^ k * y)\n  0 < k\n  p ^ k * y = p ^ k * y\n  \\<not> p dvd y\n\ngoal (1 subgoal):\n 1. prime_factorization (p ^ k * y) =\n    replicate_mset k p + prime_factorization y", "by (subst prime_factorization_mult)\n         (auto simp: prime_factorization_prime_power in_prime_factors_iff)"], ["proof (state)\nthis:\n  prime_factorization x = replicate_mset k p + prime_factorization y\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "moreover"], ["proof (state)\nthis:\n  prime_factorization x = replicate_mset k p + prime_factorization y\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "from y p"], ["proof (chain)\npicking this:\n  x = p ^ k * y\n  \\<not> p dvd y\n  p \\<in> prime_factors x", "have \"p \\<notin> prime_factors y\""], ["proof (prove)\nusing this:\n  x = p ^ k * y\n  \\<not> p dvd y\n  p \\<in> prime_factors x\n\ngoal (1 subgoal):\n 1. p \\<notin> prime_factors y", "by (auto simp: in_prime_factors_iff)"], ["proof (state)\nthis:\n  p \\<notin> prime_factors y\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "ultimately"], ["proof (chain)\npicking this:\n  prime_factorization x = replicate_mset k p + prime_factorization y\n  p \\<notin> prime_factors y", "have \"prime_factors y = prime_factors x - {p}\""], ["proof (prove)\nusing this:\n  prime_factorization x = replicate_mset k p + prime_factorization y\n  p \\<notin> prime_factors y\n\ngoal (1 subgoal):\n 1. prime_factors y = prime_factors x - {p}", "by auto"], ["proof (state)\nthis:\n  prime_factors y = prime_factors x - {p}\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "also"], ["proof (state)\nthis:\n  prime_factors y = prime_factors x - {p}\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "have \"\\<dots> = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factors x - {p} = A", "using insert.hyps"], ["proof (prove)\nusing this:\n  finite A\n  p \\<notin> A\n  A = prime_factors ?x1 \\<Longrightarrow> P ?x1\n  insert p A = prime_factors x\n\ngoal (1 subgoal):\n 1. prime_factors x - {p} = A", "by auto"], ["proof (state)\nthis:\n  prime_factors x - {p} = A\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "finally"], ["proof (chain)\npicking this:\n  prime_factors y = A", "have \"P y\""], ["proof (prove)\nusing this:\n  prime_factors y = A\n\ngoal (1 subgoal):\n 1. P y", "using insert"], ["proof (prove)\nusing this:\n  prime_factors y = A\n  finite A\n  p \\<notin> A\n  A = prime_factors ?x1 \\<Longrightarrow> P ?x1\n  insert p A = prime_factors x\n\ngoal (1 subgoal):\n 1. P y", "by auto"], ["proof (state)\nthis:\n  P y\n\ngoal (1 subgoal):\n 1. \\<And>x F xa.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>x. F = prime_factors x \\<Longrightarrow> P x;\n        insert x F = prime_factors xa\\<rbrakk>\n       \\<Longrightarrow> P xa", "thus \"P x\""], ["proof (prove)\nusing this:\n  P y\n\ngoal (1 subgoal):\n 1. P x", "unfolding y"], ["proof (prove)\nusing this:\n  P y\n\ngoal (1 subgoal):\n 1. P (p ^ k * y)", "using y \\<open>k > 0\\<close> p"], ["proof (prove)\nusing this:\n  P y\n  x = p ^ k * y\n  \\<not> p dvd y\n  0 < k\n  p \\<in> prime_factors x\n\ngoal (1 subgoal):\n 1. P (p ^ k * y)", "by (intro assms(3)) (auto simp: in_prime_factors_iff)"], ["proof (state)\nthis:\n  P x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}