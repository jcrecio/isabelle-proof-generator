{"file_name": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi/Weak_Stat_Imp_Pres.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi", "problem_names": ["lemma weakStatImpInputPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n\n  assumes PRelQ: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', M\\<lparr>\\<lambda>*xvec N\\<rparr>.P, M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<lessapprox><Rel> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\"", "lemma weakStatImpOutputPres:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   M   :: 'a\n  and   N   :: 'a\n\n  assumes PRelQ: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', M\\<langle>N\\<rangle>.P, M\\<langle>N\\<rangle>.Q) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<lessapprox><Rel> M\\<langle>N\\<rangle>.Q\"", "lemma weakStatImpResPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   x    :: name\n  and   Rel' :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n\n  assumes PSimQ: \"\\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\"\n  and     \"eqvt Rel\"\n  and     \"x \\<sharp> \\<Psi>\"\n  and     C1: \"\\<And>\\<Psi>' R S y. \\<lbrakk>(\\<Psi>', R, S) \\<in> Rel; y \\<sharp> \\<Psi>'\\<rbrakk> \\<Longrightarrow> (\\<Psi>', \\<lparr>\\<nu>y\\<rparr>R, \\<lparr>\\<nu>y\\<rparr>S) \\<in> Rel'\"\n\n  shows   \"\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<lessapprox><Rel'> \\<lparr>\\<nu>x\\<rparr>Q\"", "lemma weakStatImpParPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   R    :: \"('a, 'b, 'c) psi\"\n  and   Rel' :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  \n  assumes PStatImpQ: \"\\<And>A\\<^sub>R \\<Psi>\\<^sub>R. \\<lbrakk>extractFrame R = \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>; A\\<^sub>R \\<sharp>* \\<Psi>; A\\<^sub>R \\<sharp>* P; A\\<^sub>R \\<sharp>* Q\\<rbrakk> \\<Longrightarrow> \\<Psi> \\<otimes> \\<Psi>\\<^sub>R \\<rhd> P \\<lessapprox><Rel> Q\"\n  and     \"xvec \\<sharp>* \\<Psi>\"\n  and     Eqvt:  \"eqvt Rel\"\n\n  and     C1: \"\\<And>\\<Psi>' S T A\\<^sub>U \\<Psi>\\<^sub>U U. \\<lbrakk>(\\<Psi>' \\<otimes> \\<Psi>\\<^sub>U, S, T) \\<in> Rel; extractFrame U = \\<langle>A\\<^sub>U, \\<Psi>\\<^sub>U\\<rangle>; A\\<^sub>U \\<sharp>* \\<Psi>'; A\\<^sub>U \\<sharp>* S; A\\<^sub>U \\<sharp>* T\\<rbrakk> \\<Longrightarrow> (\\<Psi>', S \\<parallel> U, T \\<parallel> U) \\<in> Rel'\"\n  and     C2: \"\\<And>\\<Psi>' S T yvec. \\<lbrakk>(\\<Psi>', S, T) \\<in> Rel'; yvec \\<sharp>* \\<Psi>'\\<rbrakk> \\<Longrightarrow> (\\<Psi>', \\<lparr>\\<nu>*yvec\\<rparr>S, \\<lparr>\\<nu>*yvec\\<rparr>T) \\<in> Rel'\"\n  and     C3: \"\\<And>\\<Psi>' S T \\<Psi>''. \\<lbrakk>(\\<Psi>', S, T) \\<in> Rel; \\<Psi>' \\<simeq> \\<Psi>''\\<rbrakk> \\<Longrightarrow> (\\<Psi>'', S, T) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(P \\<parallel> R) \\<lessapprox><Rel'> \\<lparr>\\<nu>*xvec\\<rparr>(Q \\<parallel> R)\""], "translations": [["", "lemma weakStatImpInputPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n\n  assumes PRelQ: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', M\\<lparr>\\<lambda>*xvec N\\<rparr>.P, M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<lessapprox><Rel> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<lessapprox><Rel> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "using assms"], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> ?\\<Psi>', M\\<lparr>\\<lambda>*xvec N\\<rparr>.P,\n   M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<lessapprox><Rel> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "by(fastforce simp add: weakStatImp_def)"], ["", "lemma weakStatImpOutputPres:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   M   :: 'a\n  and   N   :: 'a\n\n  assumes PRelQ: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', M\\<langle>N\\<rangle>.P, M\\<langle>N\\<rangle>.Q) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<lessapprox><Rel> M\\<langle>N\\<rangle>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<lessapprox><Rel> M\\<langle>N\\<rangle>.Q", "using assms"], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> ?\\<Psi>', M\\<langle>N\\<rangle>.P,\n   M\\<langle>N\\<rangle>.Q)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<lessapprox><Rel> M\\<langle>N\\<rangle>.Q", "by(fastforce simp add: weakStatImp_def)"], ["", "(*\nlemma weakStatImpCasePres:\n  fixes \\<Psi>    :: 'b\n  and   CsP  :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   CsQ  :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n  and   M    :: 'a\n  and   N    :: 'a\n\n  assumes PRelQ: \"\\<And>\\<phi> Q. (\\<phi>, Q) mem CsQ \\<Longrightarrow> \\<exists>P. (\\<phi>, P) mem CsP \\<and> guarded P \\<and> Eq P Q\"\n  and     Sim:   \"\\<And>\\<Psi> P Q. (\\<Psi>, P, Q) \\<in> Rel \\<Longrightarrow> \\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\"\n  and     EqRel: \"\\<And>\\<Psi> P Q. Eq P Q \\<Longrightarrow> (\\<Psi>, P, Q) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> Cases CsP \\<lessapprox><Rel> Cases CsQ\"\nusing assms\napply(auto simp add: weakStatImp_def)\napply(rule_tac x=\"Cases CsQ\" in exI)\napply auto\napply(rule_tac x=\"Cases CsQ\" in exI)\napply auto\napply blast\nproof(induct rule: weakSimI2)\n  case(cAct \\<Psi>' \\<alpha> Q')\n  from `bn \\<alpha> \\<sharp>* (Cases CsP)` have \"bn \\<alpha> \\<sharp>* CsP\" by auto\n  from `\\<Psi> \\<rhd> Cases CsQ \\<longmapsto>\\<alpha> \\<prec> Q'`\n  show ?case\n  proof(induct rule: caseCases)\n    case(cCase \\<phi> Q)\n    from `(\\<phi>, Q) mem CsQ` obtain P where \"(\\<phi>, P) mem CsP\" and \"guarded P\" and \"Eq P Q\"\n      by(metis PRelQ)\n    from `Eq P Q` have \"\\<Psi> \\<rhd> P \\<leadsto><Rel> Q\" by(metis EqRel Sim)\n    moreover note `\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'` `bn \\<alpha> \\<sharp>* \\<Psi>`\n    moreover from `bn \\<alpha> \\<sharp>* CsP` `(\\<phi>, P) mem CsP` have \"bn \\<alpha> \\<sharp>* P\" by(auto dest: memFreshChain)\n    ultimately obtain P'' P' where PTrans: \"\\<Psi> : Q \\<rhd> P \\<Longrightarrow>\\<alpha> \\<prec> P''\"\n                               and P''Chain: \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\" and P'RelQ': \"(\\<Psi> \\<otimes> \\<Psi>', P', Q') \\<in> Rel\"\n      using `\\<alpha> \\<noteq> \\<tau>`\n      by(blast dest: weakSimE)\n    note PTrans `(\\<phi>, P) mem CsP` `\\<Psi> \\<turnstile> \\<phi>` `guarded P`\n    moreover from `guarded Q` have \"insertAssertion (extractFrame Q) \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi> \\<otimes> \\<one>\\<rangle>\"\n      by(rule insertGuardedAssertion)\n    hence \"insertAssertion (extractFrame(Cases CsQ)) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q) \\<Psi>\"\n      by(auto simp add: FrameStatEq_def)\n    moreover from Identity have \"insertAssertion (extractFrame(Cases CsQ)) \\<Psi> \\<hookrightarrow>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\"\n      by(auto simp add: AssertionStatEq_def)\n    ultimately have \"\\<Psi> : (Cases CsQ) \\<rhd> Cases CsP \\<Longrightarrow>\\<alpha> \\<prec> P''\"\n      by(rule weakCase)\n    with P''Chain P'RelQ' show ?case by blast\n  qed\nnext\n  case(cTau Q')\n  from `\\<Psi> \\<rhd> Cases CsQ \\<longmapsto>\\<tau> \\<prec> Q'` show ?case\n  proof(induct rule: caseCases)\n    case(cCase \\<phi> Q)\n    from `(\\<phi>, Q) mem CsQ` obtain P where \"(\\<phi>, P) mem CsP\" and \"guarded P\" and \"Eq P Q\"\n      by(metis PRelQ)\n    from `Eq P Q` `\\<Psi> \\<rhd> Q \\<longmapsto>\\<tau> \\<prec> Q'`\n    obtain P' where PChain: \"\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sub>\\<tau> P'\" and P'RelQ': \"(\\<Psi>, P', Q') \\<in> Rel\"\n      by(blast dest: EqSim weakCongSimE)\n    from PChain `(\\<phi>, P) mem CsP` `\\<Psi> \\<turnstile> \\<phi>` `guarded P` have \"\\<Psi> \\<rhd> Cases CsP \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n      by(rule tauStepChainCase)\n    hence \"\\<Psi> \\<rhd> Cases CsP \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\" by(simp add: trancl_into_rtrancl)\n    with P'RelQ' show ?case by blast\n  qed\nqed\n*)"], ["", "lemma weakStatImpResPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   x    :: name\n  and   Rel' :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n\n  assumes PSimQ: \"\\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\"\n  and     \"eqvt Rel\"\n  and     \"x \\<sharp> \\<Psi>\"\n  and     C1: \"\\<And>\\<Psi>' R S y. \\<lbrakk>(\\<Psi>', R, S) \\<in> Rel; y \\<sharp> \\<Psi>'\\<rbrakk> \\<Longrightarrow> (\\<Psi>', \\<lparr>\\<nu>y\\<rparr>R, \\<lparr>\\<nu>y\\<rparr>S) \\<in> Rel'\"\n\n  shows   \"\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<lessapprox><Rel'> \\<lparr>\\<nu>x\\<rparr>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<lessapprox><Rel'> \\<lparr>\\<nu>x\\<rparr>Q", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "obtain y::name where \"y \\<sharp> \\<Psi>\" and \"y \\<sharp> \\<Psi>'\" and \"y \\<sharp> P\" and \"y \\<sharp> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> \\<Psi>; y \\<sharp> \\<Psi>'; y \\<sharp> P;\n         y \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(generate_fresh \"name\") auto"], ["proof (state)\nthis:\n  y \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>'\n  y \\<sharp> P\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "from \\<open>eqvt Rel\\<close> \\<open>\\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\\<close>"], ["proof (chain)\npicking this:\n  eqvt Rel\n  \\<Psi> \\<rhd> P \\<lessapprox><Rel> Q", "have \"([(x, y)] \\<bullet> \\<Psi>) \\<rhd> ([(x, y)] \\<bullet> P) \\<lessapprox><Rel> ([(x, y)] \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  \\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\n\ngoal (1 subgoal):\n 1. [(x, y)] \\<bullet>\n    \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                  P \\<lessapprox><Rel> [(x, y)] \\<bullet> Q", "by(rule weakStatImpClosed)"], ["proof (state)\nthis:\n  [(x, y)] \\<bullet>\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<lessapprox><Rel> [(x, y)] \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "with \\<open>x \\<sharp> \\<Psi>\\<close> \\<open>y \\<sharp> \\<Psi>\\<close>"], ["proof (chain)\npicking this:\n  x \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>\n  [(x, y)] \\<bullet>\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<lessapprox><Rel> [(x, y)] \\<bullet> Q", "have \"\\<Psi> \\<rhd> ([(x, y)] \\<bullet> P) \\<lessapprox><Rel> ([(x, y)] \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  x \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>\n  [(x, y)] \\<bullet>\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<lessapprox><Rel> [(x, y)] \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                  P \\<lessapprox><Rel> [(x, y)] \\<bullet> Q", "by simp"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<lessapprox><Rel> [(x, y)] \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<lessapprox><Rel> [(x, y)] \\<bullet> Q", "obtain Q' Q'' where QChain: \"\\<Psi> \\<rhd> ([(x, y)] \\<bullet> Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\"\n                       and PimpQ': \"insertAssertion (extractFrame ([(x, y)] \\<bullet> P)) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') \\<Psi>\"\n                       and Q'Chain: \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\" and \"(\\<Psi> \\<otimes> \\<Psi>', ([(x, y)] \\<bullet> P), Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<lessapprox><Rel> [(x, y)] \\<bullet> Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q' Q''.\n        \\<lbrakk>\\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                               Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q';\n         insertAssertion (extractFrame ([(x, y)] \\<bullet> P))\n          \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n      \\<Psi>;\n         \\<Psi> \\<otimes>\n         \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'';\n         (\\<Psi> \\<otimes> \\<Psi>', [(x, y)] \\<bullet> P, Q'')\n         \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule weakStatImpE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  insertAssertion (extractFrame ([(x, y)] \\<bullet> P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n  (\\<Psi> \\<otimes> \\<Psi>', [(x, y)] \\<bullet> P, Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "from QChain \\<open>y \\<sharp> \\<Psi>\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  y \\<sharp> \\<Psi>", "have \"\\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  y \\<sharp> \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet>\n   Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'", "by(rule tauChainResPres)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet>\n Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "with \\<open>y \\<sharp> Q\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> Q\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet>\n Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'", "have \"\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'\""], ["proof (prove)\nusing this:\n  y \\<sharp> Q\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet>\n Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'", "by(simp add: alphaRes)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "from PimpQ' \\<open>y \\<sharp> \\<Psi>\\<close>"], ["proof (chain)\npicking this:\n  insertAssertion (extractFrame ([(x, y)] \\<bullet> P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') \\<Psi>\n  y \\<sharp> \\<Psi>", "have \"insertAssertion (extractFrame(\\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame(\\<lparr>\\<nu>y\\<rparr>Q')) \\<Psi>\""], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame ([(x, y)] \\<bullet> P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') \\<Psi>\n  y \\<sharp> \\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion\n     (extractFrame (\\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P)))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<lparr>\\<nu>y\\<rparr>Q')) \\<Psi>", "by(force intro: frameImpResPres)"], ["proof (state)\nthis:\n  insertAssertion\n   (extractFrame (\\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>y\\<rparr>Q'))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "with \\<open>y \\<sharp> P\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> P\n  insertAssertion\n   (extractFrame (\\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>y\\<rparr>Q'))\n                                     \\<Psi>", "have \"insertAssertion (extractFrame(\\<lparr>\\<nu>x\\<rparr>P)) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame(\\<lparr>\\<nu>y\\<rparr>Q')) \\<Psi>\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n  insertAssertion\n   (extractFrame (\\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>y\\<rparr>Q'))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<lparr>\\<nu>y\\<rparr>Q')) \\<Psi>", "by(simp add: alphaRes)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>y\\<rparr>Q'))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>y\\<rparr>Q'))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "from Q'Chain \\<open>y \\<sharp> \\<Psi>\\<close> \\<open>y \\<sharp> \\<Psi>'\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n  y \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>'", "have \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> \\<lparr>\\<nu>y\\<rparr>Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n  y \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<lparr>\\<nu>y\\<rparr>Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q''", "by(rule_tac tauChainResPres) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>y\\<rparr>Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>y\\<rparr>Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "from \\<open>(\\<Psi> \\<otimes> \\<Psi>', ([(x, y)] \\<bullet> P), Q'') \\<in> Rel\\<close> \\<open>y \\<sharp> \\<Psi>\\<close> \\<open>y \\<sharp> \\<Psi>'\\<close>"], ["proof (chain)\npicking this:\n  (\\<Psi> \\<otimes> \\<Psi>', [(x, y)] \\<bullet> P, Q'') \\<in> Rel\n  y \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>'", "have \"(\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P), \\<lparr>\\<nu>y\\<rparr>Q'') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> \\<Psi>', [(x, y)] \\<bullet> P, Q'') \\<in> Rel\n  y \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>'\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P),\n     \\<lparr>\\<nu>y\\<rparr>Q'')\n    \\<in> Rel'", "by(blast intro: C1)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P),\n   \\<lparr>\\<nu>y\\<rparr>Q'')\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "with \\<open>y \\<sharp> P\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> P\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P),\n   \\<lparr>\\<nu>y\\<rparr>Q'')\n  \\<in> Rel'", "have \"(\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, \\<lparr>\\<nu>y\\<rparr>Q'') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P),\n   \\<lparr>\\<nu>y\\<rparr>Q'')\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P,\n     \\<lparr>\\<nu>y\\<rparr>Q'')\n    \\<in> Rel'", "by(simp add: alphaRes)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P,\n   \\<lparr>\\<nu>y\\<rparr>Q'')\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'')\n          \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'\n  insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>y\\<rparr>Q'))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>y\\<rparr>Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q''\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P,\n   \\<lparr>\\<nu>y\\<rparr>Q'')\n  \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q'\n  insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>y\\<rparr>Q'))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>y\\<rparr>Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>y\\<rparr>Q''\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P,\n   \\<lparr>\\<nu>y\\<rparr>Q'')\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion (extractFrame (\\<lparr>\\<nu>x\\<rparr>P))\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>x\\<rparr>P, Q'') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakStatImpParPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   R    :: \"('a, 'b, 'c) psi\"\n  and   Rel' :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  \n  assumes PStatImpQ: \"\\<And>A\\<^sub>R \\<Psi>\\<^sub>R. \\<lbrakk>extractFrame R = \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>; A\\<^sub>R \\<sharp>* \\<Psi>; A\\<^sub>R \\<sharp>* P; A\\<^sub>R \\<sharp>* Q\\<rbrakk> \\<Longrightarrow> \\<Psi> \\<otimes> \\<Psi>\\<^sub>R \\<rhd> P \\<lessapprox><Rel> Q\"\n  and     \"xvec \\<sharp>* \\<Psi>\"\n  and     Eqvt:  \"eqvt Rel\"\n\n  and     C1: \"\\<And>\\<Psi>' S T A\\<^sub>U \\<Psi>\\<^sub>U U. \\<lbrakk>(\\<Psi>' \\<otimes> \\<Psi>\\<^sub>U, S, T) \\<in> Rel; extractFrame U = \\<langle>A\\<^sub>U, \\<Psi>\\<^sub>U\\<rangle>; A\\<^sub>U \\<sharp>* \\<Psi>'; A\\<^sub>U \\<sharp>* S; A\\<^sub>U \\<sharp>* T\\<rbrakk> \\<Longrightarrow> (\\<Psi>', S \\<parallel> U, T \\<parallel> U) \\<in> Rel'\"\n  and     C2: \"\\<And>\\<Psi>' S T yvec. \\<lbrakk>(\\<Psi>', S, T) \\<in> Rel'; yvec \\<sharp>* \\<Psi>'\\<rbrakk> \\<Longrightarrow> (\\<Psi>', \\<lparr>\\<nu>*yvec\\<rparr>S, \\<lparr>\\<nu>*yvec\\<rparr>T) \\<in> Rel'\"\n  and     C3: \"\\<And>\\<Psi>' S T \\<Psi>''. \\<lbrakk>(\\<Psi>', S, T) \\<in> Rel; \\<Psi>' \\<simeq> \\<Psi>''\\<rbrakk> \\<Longrightarrow> (\\<Psi>'', S, T) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(P \\<parallel> R) \\<lessapprox><Rel'> \\<lparr>\\<nu>*xvec\\<rparr>(Q \\<parallel> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel>\n      R \\<lessapprox><Rel'> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel> R", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "obtain A\\<^sub>R \\<Psi>\\<^sub>R where FrR: \"extractFrame R = \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>\" and \"A\\<^sub>R \\<sharp>* \\<Psi>\" and \"A\\<^sub>R \\<sharp>* \\<Psi>'\" and \"A\\<^sub>R \\<sharp>* P\" and \"A\\<^sub>R \\<sharp>* Q\" and \"A\\<^sub>R \\<sharp>* R\" and \"A\\<^sub>R \\<sharp>* xvec\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A\\<^sub>R \\<Psi>\\<^sub>R.\n        \\<lbrakk>extractFrame R =\n                 \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>;\n         A\\<^sub>R \\<sharp>* \\<Psi>; A\\<^sub>R \\<sharp>* \\<Psi>';\n         A\\<^sub>R \\<sharp>* P; A\\<^sub>R \\<sharp>* Q;\n         A\\<^sub>R \\<sharp>* R; A\\<^sub>R \\<sharp>* xvec\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac F=\"extractFrame R\" and C=\"(xvec, \\<Psi>, \\<Psi>', P, Q, R, xvec)\" in freshFrame) auto"], ["proof (state)\nthis:\n  extractFrame R = \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>\n  A\\<^sub>R \\<sharp>* \\<Psi>\n  A\\<^sub>R \\<sharp>* \\<Psi>'\n  A\\<^sub>R \\<sharp>* P\n  A\\<^sub>R \\<sharp>* Q\n  A\\<^sub>R \\<sharp>* R\n  A\\<^sub>R \\<sharp>* xvec\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"\\<Psi> \\<otimes> \\<Psi>\\<^sub>R \\<rhd> P \\<lessapprox><Rel> Q\""], ["proof (prove)\nusing this:\n  extractFrame R = \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>\n  A\\<^sub>R \\<sharp>* \\<Psi>\n  A\\<^sub>R \\<sharp>* \\<Psi>'\n  A\\<^sub>R \\<sharp>* P\n  A\\<^sub>R \\<sharp>* Q\n  A\\<^sub>R \\<sharp>* R\n  A\\<^sub>R \\<sharp>* xvec\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes> \\<Psi>\\<^sub>R \\<rhd> P \\<lessapprox><Rel> Q", "by(rule_tac PStatImpQ)"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes> \\<Psi>\\<^sub>R \\<rhd> P \\<lessapprox><Rel> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "obtain p::\"name prm\" where \"(p \\<bullet> xvec) \\<sharp>* P\" and \"(p \\<bullet> xvec) \\<sharp>* Q\" and \"(p \\<bullet> xvec) \\<sharp>* \\<Psi>\" and \"(p \\<bullet> xvec) \\<sharp>* \\<Psi>'\" and  \"(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<^sub>R\" \n                         and  \"(p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\" and \"(p \\<bullet> xvec) \\<sharp>* R\" and \"(p \\<bullet> xvec) \\<sharp>* P\"\n                         and \"distinctPerm p\" and S: \"set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> xvec) \\<sharp>* P;\n         (p \\<bullet> xvec) \\<sharp>* Q;\n         (p \\<bullet> xvec) \\<sharp>* \\<Psi>;\n         (p \\<bullet> xvec) \\<sharp>* \\<Psi>';\n         (p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<^sub>R;\n         (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R;\n         (p \\<bullet> xvec) \\<sharp>* R; (p \\<bullet> xvec) \\<sharp>* P;\n         distinctPerm p;\n         set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac c=\"(P, Q, R, \\<Psi>, \\<Psi>', A\\<^sub>R, \\<Psi>\\<^sub>R, P)\" in name_list_avoiding) auto"], ["proof (state)\nthis:\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>'\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<^sub>R\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  (p \\<bullet> xvec) \\<sharp>* R\n  (p \\<bullet> xvec) \\<sharp>* P\n  distinctPerm p\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "from FrR"], ["proof (chain)\npicking this:\n  extractFrame R = \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>", "have \"(p \\<bullet> extractFrame R) = (p \\<bullet> \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>)\""], ["proof (prove)\nusing this:\n  extractFrame R = \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>\n\ngoal (1 subgoal):\n 1. p \\<bullet> extractFrame R =\n    p \\<bullet> \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>", "by(rule pt_bij3)"], ["proof (state)\nthis:\n  p \\<bullet> extractFrame R =\n  p \\<bullet> \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "with \\<open>A\\<^sub>R \\<sharp>* xvec\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\\<close> S"], ["proof (chain)\npicking this:\n  A\\<^sub>R \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  p \\<bullet> extractFrame R =\n  p \\<bullet> \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>", "have FrpR: \"extractFrame(p \\<bullet> R) = \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>\""], ["proof (prove)\nusing this:\n  A\\<^sub>R \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  p \\<bullet> extractFrame R =\n  p \\<bullet> \\<langle>A\\<^sub>R, \\<Psi>\\<^sub>R\\<rangle>\n\ngoal (1 subgoal):\n 1. extractFrame (p \\<bullet> R) =\n    \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  extractFrame (p \\<bullet> R) =\n  \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "from \\<open>eqvt Rel\\<close> \\<open>\\<Psi> \\<otimes> \\<Psi>\\<^sub>R \\<rhd> P \\<lessapprox><Rel> Q\\<close>"], ["proof (chain)\npicking this:\n  eqvt Rel\n  \\<Psi> \\<otimes> \\<Psi>\\<^sub>R \\<rhd> P \\<lessapprox><Rel> Q", "have \"(p \\<bullet> (\\<Psi> \\<otimes> \\<Psi>\\<^sub>R)) \\<rhd> (p \\<bullet> P) \\<lessapprox><Rel> (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  \\<Psi> \\<otimes> \\<Psi>\\<^sub>R \\<rhd> P \\<lessapprox><Rel> Q\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<otimes>\n    \\<Psi>\\<^sub>R \\<rhd> p \\<bullet> P \\<lessapprox><Rel> p \\<bullet> Q", "by(rule weakStatImpClosed)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<otimes>\n  \\<Psi>\\<^sub>R \\<rhd> p \\<bullet> P \\<lessapprox><Rel> p \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> S"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  p \\<bullet>\n  \\<Psi> \\<otimes>\n  \\<Psi>\\<^sub>R \\<rhd> p \\<bullet> P \\<lessapprox><Rel> p \\<bullet> Q", "have \"\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R) \\<rhd> (p \\<bullet> P) \\<lessapprox><Rel> (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  p \\<bullet>\n  \\<Psi> \\<otimes>\n  \\<Psi>\\<^sub>R \\<rhd> p \\<bullet> P \\<lessapprox><Rel> p \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    (p \\<bullet>\n     \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet> P \\<lessapprox><Rel> p \\<bullet> Q", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet> P \\<lessapprox><Rel> p \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<Psi> \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet> P \\<lessapprox><Rel> p \\<bullet> Q", "obtain Q' Q'' where QChain: \"\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R) \\<rhd> (p \\<bullet> Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\"\n                       and PimpQ': \"insertAssertion (extractFrame (p \\<bullet> P)) (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R))\"\n                       and Q'Chain: \"(\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\" and \"((\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>', (p \\<bullet> P), Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet> P \\<lessapprox><Rel> p \\<bullet> Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q' Q''.\n        \\<lbrakk>\\<Psi> \\<otimes>\n                 (p \\<bullet>\n                  \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet>\n   Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q';\n         insertAssertion (extractFrame (p \\<bullet> P))\n          (\\<Psi> \\<otimes>\n           (p \\<bullet>\n            \\<Psi>\\<^sub>R)) \\<hookrightarrow>\\<^sub>F insertAssertion\n                  (extractFrame Q')\n                  (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R));\n         (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n         \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'';\n         ((\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>',\n          p \\<bullet> P, Q'')\n         \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule weakStatImpE)"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet>\n                          Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  insertAssertion (extractFrame (p \\<bullet> P))\n   (\\<Psi> \\<otimes>\n    (p \\<bullet>\n     \\<Psi>\\<^sub>R)) \\<hookrightarrow>\\<^sub>F insertAssertion\n           (extractFrame Q') (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R))\n  (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n  ((\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>',\n   p \\<bullet> P, Q'')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "from \\<open>A\\<^sub>R \\<sharp>* xvec\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\\<close> \\<open>A\\<^sub>R \\<sharp>* Q\\<close> S"], ["proof (chain)\npicking this:\n  A\\<^sub>R \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  A\\<^sub>R \\<sharp>* Q\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)", "have \"A\\<^sub>R \\<sharp>* (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  A\\<^sub>R \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  A\\<^sub>R \\<sharp>* Q\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n\ngoal (1 subgoal):\n 1. A\\<^sub>R \\<sharp>* (p \\<bullet> Q)", "by(simp add: freshChainSimps)"], ["proof (state)\nthis:\n  A\\<^sub>R \\<sharp>* (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  A\\<^sub>R \\<sharp>* (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "from \\<open>(p \\<bullet> xvec) \\<sharp>* Q\\<close>"], ["proof (chain)\npicking this:\n  (p \\<bullet> xvec) \\<sharp>* Q", "have \"(p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> xvec) \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> Q)", "by(simp only: pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"xvec \\<sharp>* (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. xvec \\<sharp>* (p \\<bullet> Q)", "using \\<open>distinctPerm p\\<close>"], ["proof (prove)\nusing this:\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> Q)\n  distinctPerm p\n\ngoal (1 subgoal):\n 1. xvec \\<sharp>* (p \\<bullet> Q)", "by simp"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  A\\<^sub>R \\<sharp>* (p \\<bullet> Q)\n  xvec \\<sharp>* (p \\<bullet> Q)", "have \"A\\<^sub>R \\<sharp>* Q'\" and \"A\\<^sub>R \\<sharp>* Q''\" and \"xvec \\<sharp>* Q'\" and \"xvec \\<sharp>* Q''\""], ["proof (prove)\nusing this:\n  A\\<^sub>R \\<sharp>* (p \\<bullet> Q)\n  xvec \\<sharp>* (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. (A\\<^sub>R \\<sharp>* Q' &&& A\\<^sub>R \\<sharp>* Q'') &&&\n    xvec \\<sharp>* Q' &&& xvec \\<sharp>* Q''", "using QChain Q'Chain"], ["proof (prove)\nusing this:\n  A\\<^sub>R \\<sharp>* (p \\<bullet> Q)\n  xvec \\<sharp>* (p \\<bullet> Q)\n  \\<Psi> \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet>\n                          Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n\ngoal (1 subgoal):\n 1. (A\\<^sub>R \\<sharp>* Q' &&& A\\<^sub>R \\<sharp>* Q'') &&&\n    xvec \\<sharp>* Q' &&& xvec \\<sharp>* Q''", "by(metis tauChainFreshChain)+"], ["proof (state)\nthis:\n  A\\<^sub>R \\<sharp>* Q'\n  A\\<^sub>R \\<sharp>* Q''\n  xvec \\<sharp>* Q'\n  xvec \\<sharp>* Q''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "obtain A\\<^sub>P \\<Psi>\\<^sub>P where FrP: \"extractFrame(p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\" and \"A\\<^sub>P \\<sharp>* \\<Psi>\" \"A\\<^sub>P \\<sharp>* \\<Psi>'\" and \"A\\<^sub>P \\<sharp>* A\\<^sub>R\" and \"A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A\\<^sub>P \\<Psi>\\<^sub>P.\n        \\<lbrakk>extractFrame (p \\<bullet> P) =\n                 \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n         A\\<^sub>P \\<sharp>* \\<Psi>; A\\<^sub>P \\<sharp>* \\<Psi>';\n         A\\<^sub>P \\<sharp>* A\\<^sub>R;\n         A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"(\\<Psi>, \\<Psi>', A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R)\" in freshFrame) auto"], ["proof (state)\nthis:\n  extractFrame (p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\n  A\\<^sub>P \\<sharp>* \\<Psi>\n  A\\<^sub>P \\<sharp>* \\<Psi>'\n  A\\<^sub>P \\<sharp>* A\\<^sub>R\n  A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "obtain A\\<^sub>Q' \\<Psi>\\<^sub>Q' where FrQ': \"extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\" and \"A\\<^sub>Q' \\<sharp>* \\<Psi>\"and \"A\\<^sub>Q' \\<sharp>* \\<Psi>'\" and \"A\\<^sub>Q' \\<sharp>* A\\<^sub>R\" and \"A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A\\<^sub>Q' \\<Psi>\\<^sub>Q'.\n        \\<lbrakk>extractFrame Q' =\n                 \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>;\n         A\\<^sub>Q' \\<sharp>* \\<Psi>; A\\<^sub>Q' \\<sharp>* \\<Psi>';\n         A\\<^sub>Q' \\<sharp>* A\\<^sub>R;\n         A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"(\\<Psi>, \\<Psi>', A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R)\" in freshFrame) auto"], ["proof (state)\nthis:\n  extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\n  A\\<^sub>Q' \\<sharp>* \\<Psi>\n  A\\<^sub>Q' \\<sharp>* \\<Psi>'\n  A\\<^sub>Q' \\<sharp>* A\\<^sub>R\n  A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "from \\<open>A\\<^sub>R \\<sharp>* xvec\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\\<close> \\<open>A\\<^sub>R \\<sharp>* P\\<close> S"], ["proof (chain)\npicking this:\n  A\\<^sub>R \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  A\\<^sub>R \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)", "have \"A\\<^sub>R \\<sharp>* (p \\<bullet> P)\""], ["proof (prove)\nusing this:\n  A\\<^sub>R \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  A\\<^sub>R \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n\ngoal (1 subgoal):\n 1. A\\<^sub>R \\<sharp>* (p \\<bullet> P)", "by(simp add: freshChainSimps)"], ["proof (state)\nthis:\n  A\\<^sub>R \\<sharp>* (p \\<bullet> P)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "with \\<open>A\\<^sub>R \\<sharp>* Q'\\<close> \\<open>A\\<^sub>P \\<sharp>* A\\<^sub>R\\<close> \\<open>A\\<^sub>Q' \\<sharp>* A\\<^sub>R\\<close> FrP FrQ'"], ["proof (chain)\npicking this:\n  A\\<^sub>R \\<sharp>* Q'\n  A\\<^sub>P \\<sharp>* A\\<^sub>R\n  A\\<^sub>Q' \\<sharp>* A\\<^sub>R\n  extractFrame (p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\n  extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\n  A\\<^sub>R \\<sharp>* (p \\<bullet> P)", "have \"A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>P\" and  \"A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>Q'\""], ["proof (prove)\nusing this:\n  A\\<^sub>R \\<sharp>* Q'\n  A\\<^sub>P \\<sharp>* A\\<^sub>R\n  A\\<^sub>Q' \\<sharp>* A\\<^sub>R\n  extractFrame (p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\n  extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\n  A\\<^sub>R \\<sharp>* (p \\<bullet> P)\n\ngoal (1 subgoal):\n 1. A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>P &&&\n    A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>Q'", "by(force dest: extractFrameFreshChain)+"], ["proof (state)\nthis:\n  A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>P\n  A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "from QChain FrpR \\<open>A\\<^sub>R \\<sharp>* \\<Psi>\\<close> \\<open>A\\<^sub>R \\<sharp>* (p \\<bullet> Q)\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet>\n                          Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  extractFrame (p \\<bullet> R) =\n  \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>\n  A\\<^sub>R \\<sharp>* \\<Psi>\n  A\\<^sub>R \\<sharp>* (p \\<bullet> Q)", "have \"\\<Psi> \\<rhd> (p \\<bullet> Q) \\<parallel> (p \\<bullet> R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<parallel> (p \\<bullet> R)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> p \\<bullet>\n                          Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  extractFrame (p \\<bullet> R) =\n  \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>\n  A\\<^sub>R \\<sharp>* \\<Psi>\n  A\\<^sub>R \\<sharp>* (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> (p \\<bullet> Q) \\<parallel>\n                  (p \\<bullet>\n                   R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<parallel>\n                       (p \\<bullet> R)", "by(rule tauChainPar1)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> (p \\<bullet> Q) \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<parallel>\n                     (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> ((p \\<bullet> Q) \\<parallel> (p \\<bullet> R))) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> p \\<bullet> (Q' \\<parallel> (p \\<bullet> R))\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> (p \\<bullet> Q) \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<parallel>\n                     (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<rhd> p \\<bullet>\n                  (p \\<bullet> Q) \\<parallel>\n                  (p \\<bullet>\n                   R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> p \\<bullet>\n                       Q' \\<parallel> (p \\<bullet> R)", "by(rule eqvts)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                (p \\<bullet> Q) \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> p \\<bullet>\n                     Q' \\<parallel> (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> S \\<open>distinctPerm p\\<close>"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                (p \\<bullet> Q) \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> p \\<bullet>\n                     Q' \\<parallel> (p \\<bullet> R)", "have \"\\<Psi> \\<rhd> Q \\<parallel> R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (p \\<bullet> Q') \\<parallel> R\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                (p \\<bullet> Q) \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> p \\<bullet>\n                     Q' \\<parallel> (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<parallel>\n                  R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (p \\<bullet>\n                      Q') \\<parallel>\n                     R", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<parallel>\n                R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (p \\<bullet>\n                    Q') \\<parallel>\n                   R\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"\\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(Q \\<parallel> R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>((p \\<bullet> Q') \\<parallel> R)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<parallel>\n                R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (p \\<bullet>\n                    Q') \\<parallel>\n                   R\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n      R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                    Q') \\<parallel>\n                                   R", "using \\<open>xvec \\<sharp>* \\<Psi>\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<parallel>\n                R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (p \\<bullet>\n                    Q') \\<parallel>\n                   R\n  xvec \\<sharp>* \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n      R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                    Q') \\<parallel>\n                                   R", "by(rule tauChainResChainPres)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n    R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                  Q') \\<parallel>\n                                 R\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n    R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                  Q') \\<parallel>\n                                 R\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "have \"\\<langle>(A\\<^sub>P@A\\<^sub>R), \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q'@A\\<^sub>R), \\<Psi> \\<otimes> \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "have \"\\<langle>A\\<^sub>P, \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>\\<^sub>P\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>P \\<otimes>\n                        (p \\<bullet>\n                         \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n            (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n           \\<Psi>\\<^sub>P\\<rangle>", "by(metis frameResChainPres frameNilStatEq Associativity Commutativity AssertionStatEqTrans Composition)"], ["proof (state)\nthis:\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n          (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n         \\<Psi>\\<^sub>P\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n          (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n         \\<Psi>\\<^sub>P\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "with FrP FrQ' PimpQ' \\<open>A\\<^sub>P \\<sharp>* \\<Psi>\\<close> \\<open>A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\\<close> \\<open>A\\<^sub>Q' \\<sharp>* \\<Psi>\\<close> \\<open>A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\\<close>"], ["proof (chain)\npicking this:\n  extractFrame (p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\n  extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\n  insertAssertion (extractFrame (p \\<bullet> P))\n   (\\<Psi> \\<otimes>\n    (p \\<bullet>\n     \\<Psi>\\<^sub>R)) \\<hookrightarrow>\\<^sub>F insertAssertion\n           (extractFrame Q') (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R))\n  A\\<^sub>P \\<sharp>* \\<Psi>\n  A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  A\\<^sub>Q' \\<sharp>* \\<Psi>\n  A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n          (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n         \\<Psi>\\<^sub>P\\<rangle>", "have \"\\<langle>A\\<^sub>P, (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>\\<^sub>P\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>\\<^sub>Q'\\<rangle>\""], ["proof (prove)\nusing this:\n  extractFrame (p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\n  extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\n  insertAssertion (extractFrame (p \\<bullet> P))\n   (\\<Psi> \\<otimes>\n    (p \\<bullet>\n     \\<Psi>\\<^sub>R)) \\<hookrightarrow>\\<^sub>F insertAssertion\n           (extractFrame Q') (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R))\n  A\\<^sub>P \\<sharp>* \\<Psi>\n  A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  A\\<^sub>Q' \\<sharp>* \\<Psi>\n  A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n          (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n         \\<Psi>\\<^sub>P\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n                         (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                        \\<Psi>\\<^sub>P\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                    (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                   \\<Psi>\\<^sub>Q'\\<rangle>", "using freshCompChain"], ["proof (prove)\nusing this:\n  extractFrame (p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\n  extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\n  insertAssertion (extractFrame (p \\<bullet> P))\n   (\\<Psi> \\<otimes>\n    (p \\<bullet>\n     \\<Psi>\\<^sub>R)) \\<hookrightarrow>\\<^sub>F insertAssertion\n           (extractFrame Q') (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R))\n  A\\<^sub>P \\<sharp>* \\<Psi>\n  A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  A\\<^sub>Q' \\<sharp>* \\<Psi>\n  A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n          (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n         \\<Psi>\\<^sub>P\\<rangle>\n  \\<lbrakk>?xvec \\<sharp>* ?\\<Psi>; ?xvec \\<sharp>* ?\\<Psi>'\\<rbrakk>\n  \\<Longrightarrow> ?xvec \\<sharp>* (?\\<Psi> \\<otimes> ?\\<Psi>')\n  \\<lbrakk>?Xs \\<sharp>* ?\\<Psi>; ?Xs \\<sharp>* ?\\<Psi>'\\<rbrakk>\n  \\<Longrightarrow> ?Xs \\<sharp>* (?\\<Psi> \\<otimes> ?\\<Psi>')\n\ngoal (1 subgoal):\n 1. \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n                         (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                        \\<Psi>\\<^sub>P\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                    (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                   \\<Psi>\\<^sub>Q'\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n                       (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                      \\<Psi>\\<^sub>P\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                  (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                 \\<Psi>\\<^sub>Q'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n                       (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                      \\<Psi>\\<^sub>P\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                  (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                 \\<Psi>\\<^sub>Q'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "have \"\\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>\\<^sub>Q'\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes> \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                          (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                         \\<Psi>\\<^sub>Q'\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes>\n            \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "by(metis frameResChainPres frameNilStatEq Associativity Commutativity AssertionStatEqTrans Composition)"], ["proof (state)\nthis:\n  \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                       \\<Psi>\\<^sub>Q'\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes>\n          \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n          (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n         \\<Psi>\\<^sub>P\\<rangle>\n  \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n                       (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                      \\<Psi>\\<^sub>P\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                  (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                 \\<Psi>\\<^sub>Q'\\<rangle>\n  \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                       \\<Psi>\\<^sub>Q'\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes>\n          \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "have \"\\<langle>A\\<^sub>P, \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes> \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n          (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n         \\<Psi>\\<^sub>P\\<rangle>\n  \\<langle>A\\<^sub>P, (\\<Psi> \\<otimes>\n                       (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                      \\<Psi>\\<^sub>P\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                  (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                 \\<Psi>\\<^sub>Q'\\<rangle>\n  \\<langle>A\\<^sub>Q', (\\<Psi> \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n                       \\<Psi>\\<^sub>Q'\\<rangle> \\<simeq>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes>\n          \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>P \\<otimes>\n                        (p \\<bullet>\n                         \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes>\n                     \\<Psi>\\<^sub>Q' \\<otimes>\n                     (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "by(rule FrameStatEqImpCompose)"], ["proof (state)\nthis:\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes>\n                   \\<Psi>\\<^sub>Q' \\<otimes>\n                   (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "hence \"\\<langle>(A\\<^sub>R@A\\<^sub>P), \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>R@A\\<^sub>Q'), \\<Psi> \\<otimes> \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>P \\<otimes>\n                      (p \\<bullet>\n                       \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>A\\<^sub>Q', \\<Psi> \\<otimes>\n                   \\<Psi>\\<^sub>Q' \\<otimes>\n                   (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>R @\n              A\\<^sub>P), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>R @\n            A\\<^sub>Q'), \\<Psi> \\<otimes>\n                         \\<Psi>\\<^sub>Q' \\<otimes>\n                         (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "by(drule_tac frameImpResChainPres) (simp add: frameChainAppend)"], ["proof (state)\nthis:\n  \\<langle>(A\\<^sub>R @\n            A\\<^sub>P), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>P \\<otimes>\n                        (p \\<bullet>\n                         \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>R @\n          A\\<^sub>Q'), \\<Psi> \\<otimes>\n                       \\<Psi>\\<^sub>Q' \\<otimes>\n                       (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>(A\\<^sub>R @\n            A\\<^sub>P), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>P \\<otimes>\n                        (p \\<bullet>\n                         \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>R @\n          A\\<^sub>Q'), \\<Psi> \\<otimes>\n                       \\<Psi>\\<^sub>Q' \\<otimes>\n                       (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>(A\\<^sub>P @\n              A\\<^sub>R), \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<otimes>\n                          (p \\<bullet>\n                           \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>Q' \\<otimes>\n                        (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "apply(simp add: frameChainAppend)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>\\<nu>*A\\<^sub>R\\<rparr>\\<langle>A\\<^sub>P, \\<Psi> \\<otimes>\n                 \\<Psi>\\<^sub>P \\<otimes>\n                 (p \\<bullet>\n                  \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<lparr>\\<nu>*A\\<^sub>R\\<rparr>\\<langle>A\\<^sub>Q', \\<Psi> \\<otimes>\n       \\<Psi>\\<^sub>Q' \\<otimes>\n       (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle> \\<Longrightarrow>\n    \\<lparr>\\<nu>*A\\<^sub>P\\<rparr>\\<langle>A\\<^sub>R, \\<Psi> \\<otimes>\n                 \\<Psi>\\<^sub>P \\<otimes>\n                 (p \\<bullet>\n                  \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<lparr>\\<nu>*A\\<^sub>Q'\\<rparr>\\<langle>A\\<^sub>R, \\<Psi> \\<otimes>\n       \\<Psi>\\<^sub>Q' \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "by(metis frameImpChainComm FrameStatImpTrans)"], ["proof (state)\nthis:\n  \\<langle>(A\\<^sub>P @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>P \\<otimes>\n                        (p \\<bullet>\n                         \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n          A\\<^sub>R), \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>Q' \\<otimes>\n                      (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>(A\\<^sub>P @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>P \\<otimes>\n                        (p \\<bullet>\n                         \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n          A\\<^sub>R), \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>Q' \\<otimes>\n                      (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "with FrP FrpR FrQ' \\<open>A\\<^sub>P \\<sharp>* A\\<^sub>R\\<close> \\<open>A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\\<close> \\<open>A\\<^sub>Q' \\<sharp>* A\\<^sub>R\\<close> \\<open>A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\\<close> \\<open>A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>P\\<close> \\<open>A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>Q'\\<close>\n      \\<open>A\\<^sub>P \\<sharp>* \\<Psi>\\<close> \\<open>A\\<^sub>Q' \\<sharp>* \\<Psi>\\<close> \\<open>A\\<^sub>R \\<sharp>* \\<Psi>\\<close>"], ["proof (chain)\npicking this:\n  extractFrame (p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\n  extractFrame (p \\<bullet> R) =\n  \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>\n  extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\n  A\\<^sub>P \\<sharp>* A\\<^sub>R\n  A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  A\\<^sub>Q' \\<sharp>* A\\<^sub>R\n  A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>P\n  A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>Q'\n  A\\<^sub>P \\<sharp>* \\<Psi>\n  A\\<^sub>Q' \\<sharp>* \\<Psi>\n  A\\<^sub>R \\<sharp>* \\<Psi>\n  \\<langle>(A\\<^sub>P @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>P \\<otimes>\n                        (p \\<bullet>\n                         \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n          A\\<^sub>R), \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>Q' \\<otimes>\n                      (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>", "have \"insertAssertion(extractFrame((p \\<bullet> P) \\<parallel> (p \\<bullet> R))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion(extractFrame(Q' \\<parallel> (p \\<bullet> R))) \\<Psi>\""], ["proof (prove)\nusing this:\n  extractFrame (p \\<bullet> P) = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>\n  extractFrame (p \\<bullet> R) =\n  \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>\n  extractFrame Q' = \\<langle>A\\<^sub>Q', \\<Psi>\\<^sub>Q'\\<rangle>\n  A\\<^sub>P \\<sharp>* A\\<^sub>R\n  A\\<^sub>P \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  A\\<^sub>Q' \\<sharp>* A\\<^sub>R\n  A\\<^sub>Q' \\<sharp>* (p \\<bullet> \\<Psi>\\<^sub>R)\n  A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>P\n  A\\<^sub>R \\<sharp>* \\<Psi>\\<^sub>Q'\n  A\\<^sub>P \\<sharp>* \\<Psi>\n  A\\<^sub>Q' \\<sharp>* \\<Psi>\n  A\\<^sub>R \\<sharp>* \\<Psi>\n  \\<langle>(A\\<^sub>P @\n            A\\<^sub>R), \\<Psi> \\<otimes>\n                        \\<Psi>\\<^sub>P \\<otimes>\n                        (p \\<bullet>\n                         \\<Psi>\\<^sub>R)\\<rangle> \\<hookrightarrow>\\<^sub>F \\<langle>(A\\<^sub>Q' @\n          A\\<^sub>R), \\<Psi> \\<otimes>\n                      \\<Psi>\\<^sub>Q' \\<otimes>\n                      (p \\<bullet> \\<Psi>\\<^sub>R)\\<rangle>\n\ngoal (1 subgoal):\n 1. insertAssertion\n     (extractFrame ((p \\<bullet> P) \\<parallel> (p \\<bullet> R)))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (Q' \\<parallel> (p \\<bullet> R))) \\<Psi>", "by simp"], ["proof (state)\nthis:\n  insertAssertion\n   (extractFrame ((p \\<bullet> P) \\<parallel> (p \\<bullet> R)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (Q' \\<parallel> (p \\<bullet> R)))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"(p \\<bullet> insertAssertion(extractFrame((p \\<bullet> P) \\<parallel> (p \\<bullet> R))) \\<Psi>) \\<hookrightarrow>\\<^sub>F (p \\<bullet> insertAssertion(extractFrame(Q' \\<parallel> (p \\<bullet> R))) \\<Psi>)\""], ["proof (prove)\nusing this:\n  insertAssertion\n   (extractFrame ((p \\<bullet> P) \\<parallel> (p \\<bullet> R)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (Q' \\<parallel> (p \\<bullet> R)))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    insertAssertion\n     (extractFrame ((p \\<bullet> P) \\<parallel> (p \\<bullet> R)))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F p \\<bullet>\ninsertAssertion (extractFrame (Q' \\<parallel> (p \\<bullet> R))) \\<Psi>", "by(rule FrameStatImpClosed)"], ["proof (state)\nthis:\n  p \\<bullet>\n  insertAssertion\n   (extractFrame ((p \\<bullet> P) \\<parallel> (p \\<bullet> R)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F p \\<bullet>\n                                    insertAssertion\n                                     (extractFrame\n (Q' \\<parallel> (p \\<bullet> R)))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> S \\<open>distinctPerm p\\<close>"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  p \\<bullet>\n  insertAssertion\n   (extractFrame ((p \\<bullet> P) \\<parallel> (p \\<bullet> R)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F p \\<bullet>\n                                    insertAssertion\n                                     (extractFrame\n (Q' \\<parallel> (p \\<bullet> R)))\n                                     \\<Psi>", "have \"insertAssertion(extractFrame(P \\<parallel> R)) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion(extractFrame((p \\<bullet> Q') \\<parallel> R)) \\<Psi>\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  p \\<bullet>\n  insertAssertion\n   (extractFrame ((p \\<bullet> P) \\<parallel> (p \\<bullet> R)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F p \\<bullet>\n                                    insertAssertion\n                                     (extractFrame\n (Q' \\<parallel> (p \\<bullet> R)))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (P \\<parallel> R))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame ((p \\<bullet> Q') \\<parallel> R)) \\<Psi>", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (P \\<parallel> R))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n ((p \\<bullet> Q') \\<parallel> R))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close>"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  insertAssertion (extractFrame (P \\<parallel> R))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n ((p \\<bullet> Q') \\<parallel> R))\n                                     \\<Psi>", "have \"insertAssertion(extractFrame(\\<lparr>\\<nu>*xvec\\<rparr>(P \\<parallel> R))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion(extractFrame(\\<lparr>\\<nu>*xvec\\<rparr>((p \\<bullet> Q') \\<parallel> R))) \\<Psi>\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  insertAssertion (extractFrame (P \\<parallel> R))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n ((p \\<bullet> Q') \\<parallel> R))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion\n     (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel> R))\n \\<Psi>", "by(force intro: frameImpResChainPres)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel> R))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel> R))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "from Q'Chain"], ["proof (chain)\npicking this:\n  (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''", "have \"(\\<Psi> \\<otimes> \\<Psi>') \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R) \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\""], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>') \\<otimes>\n    (p \\<bullet>\n     \\<Psi>\\<^sub>R) \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''", "by(rule tauChainStatEq) (metis Associativity AssertionStatEqTrans Commutativity Composition)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>') \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<parallel> (p \\<bullet> R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<parallel> (p \\<bullet> R)\""], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> \\<Psi>') \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> Q' \\<parallel>\n                   (p \\<bullet>\n                    R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<parallel>\n                        (p \\<bullet> R)", "using FrpR \\<open>A\\<^sub>R \\<sharp>* \\<Psi>\\<close> \\<open>A\\<^sub>R \\<sharp>* \\<Psi>'\\<close> \\<open>A\\<^sub>R \\<sharp>* Q'\\<close> \\<open>A\\<^sub>R \\<sharp>* xvec\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\\<close> S"], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> \\<Psi>') \\<otimes>\n  (p \\<bullet>\n   \\<Psi>\\<^sub>R) \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n  extractFrame (p \\<bullet> R) =\n  \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>\n  A\\<^sub>R \\<sharp>* \\<Psi>\n  A\\<^sub>R \\<sharp>* \\<Psi>'\n  A\\<^sub>R \\<sharp>* Q'\n  A\\<^sub>R \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> Q' \\<parallel>\n                   (p \\<bullet>\n                    R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<parallel>\n                        (p \\<bullet> R)", "by(force intro: tauChainPar1 simp add: freshChainSimps)"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<parallel>\n                 (p \\<bullet>\n                  R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<parallel>\n                      (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> \\<lparr>\\<nu>*(p \\<bullet> xvec)\\<rparr>(Q' \\<parallel> (p \\<bullet> R)) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*(p \\<bullet> xvec)\\<rparr>(Q'' \\<parallel> (p \\<bullet> R))\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<parallel>\n                 (p \\<bullet>\n                  R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<parallel>\n                      (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n                                 xvec\\<rparr>Q' \\<parallel>\n       (p \\<bullet>\n        R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                          xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R)", "using \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>'\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<parallel>\n                 (p \\<bullet>\n                  R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<parallel>\n                      (p \\<bullet> R)\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n                                 xvec\\<rparr>Q' \\<parallel>\n       (p \\<bullet>\n        R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                          xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R)", "by(rule_tac tauChainResChainPres) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n                               xvec\\<rparr>Q' \\<parallel>\n     (p \\<bullet>\n      R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                        xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>((p \\<bullet> Q') \\<parallel> R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>((p \\<bullet> Q'') \\<parallel> R)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n                               xvec\\<rparr>Q' \\<parallel>\n     (p \\<bullet>\n      R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                        xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel>\n       R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                     Q'') \\<parallel>\n                                    R", "using \\<open>xvec \\<sharp>* Q'\\<close> \\<open>xvec \\<sharp>* Q''\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* R\\<close> S \\<open>distinctPerm p\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n                               xvec\\<rparr>Q' \\<parallel>\n     (p \\<bullet>\n      R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                        xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R)\n  xvec \\<sharp>* Q'\n  xvec \\<sharp>* Q''\n  (p \\<bullet> xvec) \\<sharp>* R\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel>\n       R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                     Q'') \\<parallel>\n                                    R", "apply(subst resChainAlpha)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<Psi> \\<otimes>\n             \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n    xvec\\<rparr>Q' \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                                   xvec\\<rparr>Q'' \\<parallel>\n         (p \\<bullet> R);\n     xvec \\<sharp>* Q'; xvec \\<sharp>* Q''; (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> (?p6 \\<bullet>\n                       xvec) \\<sharp>* ((p \\<bullet> Q') \\<parallel> R)\n 2. \\<lbrakk>\\<Psi> \\<otimes>\n             \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n    xvec\\<rparr>Q' \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                                   xvec\\<rparr>Q'' \\<parallel>\n         (p \\<bullet> R);\n     xvec \\<sharp>* Q'; xvec \\<sharp>* Q''; (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> set ?p6\n                      \\<subseteq> set xvec \\<times> set (?p6 \\<bullet> xvec)\n 3. \\<lbrakk>\\<Psi> \\<otimes>\n             \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n    xvec\\<rparr>Q' \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                                   xvec\\<rparr>Q'' \\<parallel>\n         (p \\<bullet> R);\n     xvec \\<sharp>* Q'; xvec \\<sharp>* Q''; (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<Psi>' \\<rhd> \\<lparr>\\<nu>*?p6 \\<bullet>\n             xvec\\<rparr>?p6 \\<bullet>\n                         (p \\<bullet> Q') \\<parallel>\n                         R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                 Q'') \\<parallel>\n                R", "apply(auto simp add: pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<otimes>\n             \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n    xvec\\<rparr>Q' \\<parallel>\n                (p \\<bullet>\n                 R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*p \\<bullet>\n                                   xvec\\<rparr>Q'' \\<parallel>\n         (p \\<bullet> R);\n     xvec \\<sharp>* Q'; xvec \\<sharp>* Q''; (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<Psi>' \\<rhd> \\<lparr>\\<nu>*p \\<bullet>\n             xvec\\<rparr>Q' \\<parallel>\n                         (p \\<bullet>\n                          R) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                   Q'') \\<parallel>\n                  R", "by(subst resChainAlpha[of _ xvec]) (auto simp add: pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel>\n     R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                   Q'') \\<parallel>\n                                  R\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel>\n     R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                   Q'') \\<parallel>\n                                  R\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "from \\<open>((\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>', (p \\<bullet> P), Q'') \\<in> Rel\\<close>"], ["proof (chain)\npicking this:\n  ((\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>',\n   p \\<bullet> P, Q'')\n  \\<in> Rel", "have \"((\\<Psi> \\<otimes> \\<Psi>') \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R), (p \\<bullet> P),  Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  ((\\<Psi> \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R)) \\<otimes> \\<Psi>',\n   p \\<bullet> P, Q'')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ((\\<Psi> \\<otimes> \\<Psi>') \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R),\n     p \\<bullet> P, Q'')\n    \\<in> Rel", "by(rule C3) (metis Associativity AssertionStatEqTrans Commutativity Composition)"], ["proof (state)\nthis:\n  ((\\<Psi> \\<otimes> \\<Psi>') \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R),\n   p \\<bullet> P, Q'')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"(\\<Psi> \\<otimes> \\<Psi>', (p \\<bullet> P) \\<parallel> (p \\<bullet> R), Q'' \\<parallel> (p \\<bullet> R)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  ((\\<Psi> \\<otimes> \\<Psi>') \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R),\n   p \\<bullet> P, Q'')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', (p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n     Q'' \\<parallel> (p \\<bullet> R))\n    \\<in> Rel'", "using FrpR \\<open>A\\<^sub>R \\<sharp>* \\<Psi>\\<close> \\<open>A\\<^sub>R \\<sharp>* \\<Psi>'\\<close> \\<open>A\\<^sub>R \\<sharp>* Q''\\<close> \\<open>A\\<^sub>R \\<sharp>* P\\<close> \\<open>A\\<^sub>R \\<sharp>* xvec\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\\<close> S"], ["proof (prove)\nusing this:\n  ((\\<Psi> \\<otimes> \\<Psi>') \\<otimes> (p \\<bullet> \\<Psi>\\<^sub>R),\n   p \\<bullet> P, Q'')\n  \\<in> Rel\n  extractFrame (p \\<bullet> R) =\n  \\<langle>A\\<^sub>R, p \\<bullet> \\<Psi>\\<^sub>R\\<rangle>\n  A\\<^sub>R \\<sharp>* \\<Psi>\n  A\\<^sub>R \\<sharp>* \\<Psi>'\n  A\\<^sub>R \\<sharp>* Q''\n  A\\<^sub>R \\<sharp>* P\n  A\\<^sub>R \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* A\\<^sub>R\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', (p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n     Q'' \\<parallel> (p \\<bullet> R))\n    \\<in> Rel'", "by(rule_tac C1) (auto simp add: freshChainSimps)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', (p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n   Q'' \\<parallel> (p \\<bullet> R))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"(\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*(p \\<bullet> xvec)\\<rparr>((p \\<bullet> P) \\<parallel> (p \\<bullet> R)), \\<lparr>\\<nu>*(p \\<bullet> xvec)\\<rparr>(Q'' \\<parallel> (p \\<bullet> R))) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> \\<Psi>', (p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n   Q'' \\<parallel> (p \\<bullet> R))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>',\n     \\<lparr>\\<nu>*p \\<bullet>\n                   xvec\\<rparr>(p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n     \\<lparr>\\<nu>*p \\<bullet> xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n    \\<in> Rel'", "using \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>'\\<close>"], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> \\<Psi>', (p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n   Q'' \\<parallel> (p \\<bullet> R))\n  \\<in> Rel'\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>'\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>',\n     \\<lparr>\\<nu>*p \\<bullet>\n                   xvec\\<rparr>(p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n     \\<lparr>\\<nu>*p \\<bullet> xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n    \\<in> Rel'", "by(rule_tac C2) auto"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>',\n   \\<lparr>\\<nu>*p \\<bullet>\n                 xvec\\<rparr>(p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n   \\<lparr>\\<nu>*p \\<bullet> xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "hence \"(\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*xvec\\<rparr>(P \\<parallel> R), \\<lparr>\\<nu>*xvec\\<rparr>((p \\<bullet> Q'') \\<parallel> R)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> \\<Psi>',\n   \\<lparr>\\<nu>*p \\<bullet>\n                 xvec\\<rparr>(p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n   \\<lparr>\\<nu>*p \\<bullet> xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R,\n     \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q'') \\<parallel> R)\n    \\<in> Rel'", "using \\<open>(p \\<bullet> xvec) \\<sharp>* P\\<close> \\<open>xvec \\<sharp>* Q''\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* R\\<close> S \\<open>distinctPerm p\\<close>"], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> \\<Psi>',\n   \\<lparr>\\<nu>*p \\<bullet>\n                 xvec\\<rparr>(p \\<bullet> P) \\<parallel> (p \\<bullet> R),\n   \\<lparr>\\<nu>*p \\<bullet> xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n  \\<in> Rel'\n  (p \\<bullet> xvec) \\<sharp>* P\n  xvec \\<sharp>* Q''\n  (p \\<bullet> xvec) \\<sharp>* R\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R,\n     \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q'') \\<parallel> R)\n    \\<in> Rel'", "apply(subst resChainAlpha[where p=p])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> (p \\<bullet> xvec) \\<sharp>* (P \\<parallel> R)\n 2. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> set p\n                      \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n 3. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> (\\<Psi> \\<otimes> \\<Psi>',\n                       \\<lparr>\\<nu>*p \\<bullet>\n                                     xvec\\<rparr>p \\<bullet>\n           P \\<parallel> R,\n                       \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n            Q'') \\<parallel>\n           R)\n                      \\<in> Rel'", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> set p\n                      \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n 2. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> (\\<Psi> \\<otimes> \\<Psi>',\n                       \\<lparr>\\<nu>*p \\<bullet>\n                                     xvec\\<rparr>p \\<bullet>\n           P \\<parallel> R,\n                       \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n            Q'') \\<parallel>\n           R)\n                      \\<in> Rel'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> (\\<Psi> \\<otimes> \\<Psi>',\n                       \\<lparr>\\<nu>*p \\<bullet>\n                                     xvec\\<rparr>p \\<bullet>\n           P \\<parallel> R,\n                       \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n            Q'') \\<parallel>\n           R)\n                      \\<in> Rel'", "apply(subst resChainAlpha[where xvec=xvec and p=p])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> (p \\<bullet>\n                       xvec) \\<sharp>* ((p \\<bullet> Q'') \\<parallel> R)\n 2. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> set p\n                      \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n 3. \\<lbrakk>(\\<Psi> \\<otimes> \\<Psi>',\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>(p \\<bullet> P) \\<parallel>\n  (p \\<bullet> R),\n              \\<lparr>\\<nu>*p \\<bullet>\n                            xvec\\<rparr>Q'' \\<parallel> (p \\<bullet> R))\n             \\<in> Rel';\n     (p \\<bullet> xvec) \\<sharp>* P; xvec \\<sharp>* Q'';\n     (p \\<bullet> xvec) \\<sharp>* R;\n     set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n     distinctPerm p\\<rbrakk>\n    \\<Longrightarrow> (\\<Psi> \\<otimes> \\<Psi>',\n                       \\<lparr>\\<nu>*p \\<bullet>\n                                     xvec\\<rparr>p \\<bullet>\n           P \\<parallel> R,\n                       \\<lparr>\\<nu>*p \\<bullet>\n                                     xvec\\<rparr>p \\<bullet>\n           (p \\<bullet> Q'') \\<parallel> R)\n                      \\<in> Rel'", "by(auto simp add: pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R,\n   \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q'') \\<parallel> R)\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n            R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R, Q'')\n          \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n    R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                  Q') \\<parallel>\n                                 R\n  insertAssertion (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel> R))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel>\n     R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                   Q'') \\<parallel>\n                                  R\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R,\n   \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q'') \\<parallel> R)\n  \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n    R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                  Q') \\<parallel>\n                                 R\n  insertAssertion (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel> R))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q') \\<parallel>\n     R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet>\n                                   Q'') \\<parallel>\n                                  R\n  (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R,\n   \\<lparr>\\<nu>*xvec\\<rparr>(p \\<bullet> Q'') \\<parallel> R)\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n         R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion\n        (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R,\n        Q'')\n       \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>Q \\<parallel>\n       R \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion\n      (extractFrame (\\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R))\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>', \\<lparr>\\<nu>*xvec\\<rparr>P \\<parallel> R,\n      Q'')\n     \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}