{"file_name": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi/Tau.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi", "problem_names": ["lemma ntChanEq[simp]:\n  fixes \\<Psi> :: 'b\n  and   x :: name\n\n  shows \"\\<Psi> \\<turnstile> (nameTerm x) \\<leftrightarrow> (nameTerm x)\"", "lemma nameTermFresh[simp]:\n  fixes x :: name\n  and   y :: name\n  \n  shows \"x \\<sharp> (nameTerm y) = (x \\<noteq> y)\"", "lemma nameTermFreshChain[simp]:\n  fixes xvec :: \"name list\"\n  and   x    :: name\n\n  shows \"xvec \\<sharp>* (nameTerm x) = x \\<sharp> xvec\"", "lemma tauActionUnfold:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   C :: \"'d::fs_name\"\n\n  obtains x::name where \"x \\<sharp> P\" and \"x \\<sharp> C\" and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\"", "lemma tauActionI:\n  fixes P :: \"('a, 'b, 'c) psi\"\n\n  shows \"\\<exists>P'. \\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>\\<tau> \\<prec> P' \\<and> \\<Psi> \\<rhd> P \\<sim> P'\"", "lemma outputEmpy[dest]:\n  assumes \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<longmapsto>K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N'\\<rangle> \\<prec> P'\"\n\n  shows \"xvec = []\"", "lemma tauActionE:\n  fixes P :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>\\<tau> \\<prec> P'\"\n\n  shows \"\\<Psi> \\<rhd> P \\<sim> P'\" and \"supp P' = ((supp P)::name set)\"", "lemma tauActionEqvt[eqvt]:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   p :: \"name prm\"\n\n  shows \"(p \\<bullet> \\<tau>.(P)) = \\<tau>.(p \\<bullet> P)\"", "lemma resCases'[consumes 7, case_names cOpen cRes]:\n  fixes \\<Psi>    :: 'b\n  and   x    :: name\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha>    :: \"'a action\"\n  and   P'   :: \"('a, 'b, 'c) psi\"\n  and   C    :: \"'d::fs_name\"\n\n  assumes Trans: \"\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>x\\<alpha> \\<prec> xP'\"\n  and     \"x \\<sharp> \\<Psi>\"\n  and     \"x \\<sharp> x\\<alpha>\"\n  and     \"x \\<sharp> xP'\"\n  and     \"bn x\\<alpha> \\<sharp>* \\<Psi>\"\n  and     \"bn x\\<alpha> \\<sharp>* P\"\n  and     \"bn x\\<alpha> \\<sharp>* subject x\\<alpha>\"\n  and     rOpen: \"\\<And>M xvec yvec y N P'. \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto>M\\<lparr>\\<nu>*(xvec@yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> ([(x, y)] \\<bullet> P'); y \\<in> supp N;\n                                         x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y; y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec; distinct yvec;\n                                         xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P; yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n                                         yvec \\<sharp>* M; xvec \\<sharp>* yvec; x\\<alpha> = M\\<lparr>\\<nu>*(xvec@y#yvec)\\<rparr>\\<langle>N\\<rangle>; xP' = P'\\<rbrakk> \\<Longrightarrow>\n                                         Prop\"\n  and     rScope:  \"\\<And>P'. \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto>x\\<alpha> \\<prec> P'; xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk> \\<Longrightarrow> Prop\"\n\n  shows \"Prop\"", "lemma parCases'[consumes 5, case_names cPar1 cPar2 cComm1 cComm2]:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha>    :: \"'a action\"\n  and   T    :: \"('a, 'b, 'c) psi\"\n  and   C    :: \"'d::fs_name\"\n\n  assumes Trans: \"\\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto>x\\<alpha> \\<prec> xT\"\n  and     \"bn x\\<alpha> \\<sharp>* \\<Psi>\"\n  and     \"bn x\\<alpha> \\<sharp>* P\"\n  and     \"bn x\\<alpha> \\<sharp>* Q\"\n  and     \"bn x\\<alpha> \\<sharp>* subject x\\<alpha>\"\n  and     rPar1: \"\\<And>P' A\\<^sub>Q \\<Psi>\\<^sub>Q. \\<lbrakk>\\<Psi> \\<otimes> \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto>x\\<alpha> \\<prec> P';  extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>; distinct A\\<^sub>Q;\n                                  A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* P; A\\<^sub>Q \\<sharp>* Q; A\\<^sub>Q \\<sharp>* x\\<alpha>; A\\<^sub>Q \\<sharp>* P'; A\\<^sub>Q \\<sharp>* C; xT = P' \\<parallel> Q\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rPar2: \"\\<And>Q' A\\<^sub>P \\<Psi>\\<^sub>P. \\<lbrakk>\\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto>x\\<alpha> \\<prec> Q';  extractFrame P = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>; distinct A\\<^sub>P;\n                                 A\\<^sub>P \\<sharp>* \\<Psi>; A\\<^sub>P \\<sharp>* P; A\\<^sub>P \\<sharp>* Q; A\\<^sub>P \\<sharp>* x\\<alpha>; A\\<^sub>P \\<sharp>* Q'; A\\<^sub>P \\<sharp>* C; xT = P \\<parallel> Q'\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rComm1: \"\\<And>\\<Psi>\\<^sub>Q M N P' A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q' A\\<^sub>Q.\n           \\<lbrakk>\\<Psi> \\<otimes> \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto>M\\<lparr>N\\<rparr> \\<prec> P'; extractFrame P = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>; distinct A\\<^sub>P;\n            \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto>K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'; extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>; distinct A\\<^sub>Q;\n            \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<otimes> \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K; distinct xvec;\n            A\\<^sub>P \\<sharp>* \\<Psi>;  A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;  A\\<^sub>P \\<sharp>* P;  A\\<^sub>P \\<sharp>* M;  A\\<^sub>P \\<sharp>* N;  A\\<^sub>P \\<sharp>* P';  A\\<^sub>P \\<sharp>* Q;  A\\<^sub>P \\<sharp>* xvec;  A\\<^sub>P \\<sharp>* Q'; A\\<^sub>P \\<sharp>* A\\<^sub>Q;  A\\<^sub>P \\<sharp>* C; \n            A\\<^sub>Q \\<sharp>* \\<Psi>;  A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P; A\\<^sub>Q \\<sharp>* P;  A\\<^sub>Q \\<sharp>* K;  A\\<^sub>Q \\<sharp>* N;  A\\<^sub>Q \\<sharp>* P';  A\\<^sub>Q \\<sharp>* Q;  A\\<^sub>Q \\<sharp>* xvec;  A\\<^sub>Q \\<sharp>* Q'; A\\<^sub>Q \\<sharp>* C; \n            xvec \\<sharp>* \\<Psi>;  xvec \\<sharp>* \\<Psi>\\<^sub>P; xvec \\<sharp>* P;  xvec \\<sharp>* M;  xvec \\<sharp>* K; xvec \\<sharp>* Q;  xvec \\<sharp>* \\<Psi>\\<^sub>Q;  xvec \\<sharp>* C; x\\<alpha>=\\<tau>; xT = \\<lparr>\\<nu>*xvec\\<rparr>(P' \\<parallel> Q')\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rComm2: \"\\<And>\\<Psi>\\<^sub>Q M xvec N P' A\\<^sub>P \\<Psi>\\<^sub>P K Q' A\\<^sub>Q.\n           \\<lbrakk>\\<Psi> \\<otimes> \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto>M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'; extractFrame P = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>; distinct A\\<^sub>P;\n            \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto>K\\<lparr>N\\<rparr> \\<prec> Q'; extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>; distinct A\\<^sub>Q;\n            \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<otimes> \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K; distinct xvec;\n            A\\<^sub>P \\<sharp>* \\<Psi>;  A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;  A\\<^sub>P \\<sharp>* P;  A\\<^sub>P \\<sharp>* M;  A\\<^sub>P \\<sharp>* N;  A\\<^sub>P \\<sharp>* P';  A\\<^sub>P \\<sharp>* Q;  A\\<^sub>P \\<sharp>* xvec;  A\\<^sub>P \\<sharp>* Q'; A\\<^sub>P \\<sharp>* A\\<^sub>Q;  A\\<^sub>P \\<sharp>* C; \n            A\\<^sub>Q \\<sharp>* \\<Psi>;  A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P; A\\<^sub>Q \\<sharp>* P;  A\\<^sub>Q \\<sharp>* K;  A\\<^sub>Q \\<sharp>* N;  A\\<^sub>Q \\<sharp>* P';  A\\<^sub>Q \\<sharp>* Q;  A\\<^sub>Q \\<sharp>* xvec;  A\\<^sub>Q \\<sharp>* Q'; A\\<^sub>Q \\<sharp>* C; \n            xvec \\<sharp>* \\<Psi>;  xvec \\<sharp>* \\<Psi>\\<^sub>P; xvec \\<sharp>* P;  xvec \\<sharp>* M;  xvec \\<sharp>* K;  xvec \\<sharp>* Q;  xvec \\<sharp>* \\<Psi>\\<^sub>Q;  xvec \\<sharp>* C; x\\<alpha>=\\<tau>; xT = \\<lparr>\\<nu>*xvec\\<rparr>(P' \\<parallel> Q')\\<rbrakk> \\<Longrightarrow> Prop\"\n\n  shows \"Prop\"", "lemma inputCases'[consumes 1, case_names cInput]:\n  fixes \\<Psi>   :: 'b\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n  and   P    :: \"('a, 'b, 'c) psi\"  \n  and   \\<alpha>    :: \"'a action\"\n  and   P'   :: \"('a, 'b, 'c) psi\"\n  \n  assumes Trans: \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto>\\<alpha> \\<prec> P'\"  \n  and     rInput: \"\\<And>K Tvec. \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K; set xvec \\<subseteq> supp N; length xvec = length Tvec; distinct xvec; \\<alpha>=K\\<lparr>N[xvec::=Tvec]\\<rparr>; P' = P[xvec::=Tvec]\\<rbrakk> \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>) (P[xvec::=Tvec])\"\n\n  shows \"Prop \\<alpha> P'\"", "lemma outputCases'[consumes 1, case_names cOutput]:\n  fixes \\<Psi> :: 'b\n  and   M  :: 'a\n  and   N  :: 'a\n  and   P  :: \"('a, 'b, 'c) psi\"  \n  and   \\<alpha>  :: \"'a action\"\n  and   P' :: \"('a, 'b, 'c) psi\"\n  \n  assumes \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<longmapsto>\\<alpha> \\<prec> P'\"\n  and     \"\\<And>K. \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K; subject \\<alpha>=Some K\\<rbrakk> \\<Longrightarrow> Prop (K\\<langle>N\\<rangle>) P\"\n\n  shows \"Prop \\<alpha> P'\"", "lemma tauOutput[dest]:\n  fixes \\<Psi>   :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n  and   P'   :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'\"\n  \n  shows False", "lemma tauInput[dest]:\n  fixes \\<Psi> :: 'b\n  and   P  :: \"('a, 'b, 'c) psi\"\n  and   M  :: 'a\n  and   N  :: 'a\n  and   P' :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>M\\<lparr>N\\<rparr> \\<prec> P'\"\n\n  shows False", "lemma tauPrefixFrame:\n  fixes P :: \"('a, 'b, 'c) psi\"\n\n  shows \"extractFrame(\\<tau>.(P)) \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<one>\\<rangle>\"", "lemma insertTauAssertion:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   \\<Psi> :: 'b\n\n  shows \"insertAssertion (extractFrame(\\<tau>.(P))) \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\"", "lemma seqSubst4:\n  assumes \"y \\<sharp> \\<sigma>\"\n  and     \"wellFormedSubst \\<sigma>\"\n\n  shows \"substTerm.seqSubst (nameTerm y) \\<sigma> = nameTerm y\"", "lemma tauSeqSubst[simp]:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   \\<sigma> :: \"(name list \\<times> 'a list) list\"\n  \n  assumes \"wellFormedSubst \\<sigma>\"\n\n  shows \"(\\<tau>.(P))[<\\<sigma>>] = \\<tau>.(P[<\\<sigma>>])\"", "lemma tauSubst[simp]:\n  fixes P    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n  and   Tvec :: \"'a list\"\n  \n  assumes \"distinct xvec\"\n  and     \"length xvec = length Tvec\"\n\n  shows \"(\\<tau>.(P))[xvec::=Tvec] = \\<tau>.(P[xvec::=Tvec])\"", "lemma tauFresh[simp]:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   x :: name\n\n  shows \"x \\<sharp> \\<tau>.(P) = x \\<sharp> P\"", "lemma tauFreshChain[simp]:\n  fixes P    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n\n  shows \"xvec \\<sharp>* (\\<tau>.(P)) = (xvec \\<sharp>* P)\"", "lemma guardedTau:\n  fixes P :: \"('a, 'b, 'c) psi\"\n\n  shows \"guarded(\\<tau>.(P))\"", "lemma tauChainBisim:\n  fixes \\<Psi>  :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   P'  :: \"('a, 'b, 'c) psi\"\n  and   P'' :: \"('a, 'b, 'c) psi\"\n  \n  assumes \"\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\"\n  and     \"\\<Psi> \\<rhd> P \\<sim> P''\"\n\n  obtains P''' where \"\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\" and \"\\<Psi> \\<rhd> P' \\<sim> P'''\"", "lemma tauChainStepCons:\n  fixes \\<Psi> :: 'b\n  and   P  :: \"('a, 'b, 'c) psi\"\n  and   P' :: \"('a, 'b, 'c) psi\"\n  \n  assumes PChain: \"\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\"\n\n  obtains P'' where \"\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sub>\\<tau> P''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''\"", "lemma tauChainCons:\n  fixes \\<Psi> :: 'b\n  and   P  :: \"('a, 'b, 'c) psi\"\n  and   P' :: \"('a, 'b, 'c) psi\"\n  \n  assumes \"\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\"\n\n  obtains P'' where \"\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''\"", "lemma weakTransitionTau:\n  fixes \\<Psi>   :: 'b\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha>    :: \"'a action\"\n  and   P'   :: \"('a, 'b, 'c) psi\"\n\n  assumes PTrans: \"\\<Psi> : Q \\<rhd> P \\<Longrightarrow>\\<alpha> \\<prec> P'\"\n  and     \"bn \\<alpha> \\<sharp>* \\<Psi>\"\n  and     \"bn \\<alpha> \\<sharp>* P\"\n\n  obtains P'' where \"\\<Psi> : Q \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<alpha> \\<prec> P''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''\""], "translations": [["", "lemma ntChanEq[simp]:\n  fixes \\<Psi> :: 'b\n  and   x :: name\n\n  shows \"\\<Psi> \\<turnstile> (nameTerm x) \\<leftrightarrow> (nameTerm x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<turnstile> nameTerm x \\<leftrightarrow> nameTerm x", "using ntEq"], ["proof (prove)\nusing this:\n  ?\\<Psi> \\<turnstile> nameTerm ?x \\<leftrightarrow> ?M = (?M = nameTerm ?x)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<turnstile> nameTerm x \\<leftrightarrow> nameTerm x", "by auto"], ["", "lemma nameTermFresh[simp]:\n  fixes x :: name\n  and   y :: name\n  \n  shows \"x \\<sharp> (nameTerm y) = (x \\<noteq> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> nameTerm y = (x \\<noteq> y)", "using ntSupp"], ["proof (prove)\nusing this:\n  supp (nameTerm ?x) = {?x}\n\ngoal (1 subgoal):\n 1. x \\<sharp> nameTerm y = (x \\<noteq> y)", "by(auto simp add: fresh_def)"], ["", "lemma nameTermFreshChain[simp]:\n  fixes xvec :: \"name list\"\n  and   x    :: name\n\n  shows \"xvec \\<sharp>* (nameTerm x) = x \\<sharp> xvec\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xvec \\<sharp>* nameTerm x = x \\<sharp> xvec", "by(induct xvec) auto"], ["", "definition tauPrefix :: \"('a, 'b, 'c) psi \\<Rightarrow> ('a, 'b, 'c) psi\" (\"\\<tau>._\" [85] 85)\n  where \"tauPrefix P \\<equiv> THE P'. \\<exists>x::name. x \\<sharp> P \\<and> P' = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["", "lemma tauActionUnfold:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   C :: \"'d::fs_name\"\n\n  obtains x::name where \"x \\<sharp> P\" and \"x \\<sharp> C\" and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain x::name where \"x \\<sharp> P\" and \"x \\<sharp> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(generate_fresh \"name\") auto"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> C\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<exists>x::name. x \\<sharp> P \\<and> x \\<sharp> C \\<and> \\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  x \\<sharp> C\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<sharp> P \\<and>\n       x \\<sharp> C \\<and>\n       \\<tau>.P =\n       \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                x\\<lparr>\\<lambda>*[] nameTerm\n                 x\\<rparr>.\\<zero>) \\<parallel>\n                              nameTerm x\\<langle>nameTerm x\\<rangle>.P)", "apply(simp add: tauPrefix_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         x \\<sharp> P \\<and>\n                         x \\<sharp> C \\<and>\n                         (THE P'.\n                             \\<exists>x.\n                                x \\<sharp> P \\<and>\n                                P' =\n                                \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                  x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                 nameTerm x\\<langle>nameTerm x\\<rangle>.P)) =\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P)", "apply(subst the_equality)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            x \\<sharp> P \\<and>\n                            ?y2 =\n                            \\<lparr>\\<nu>x\\<rparr>(nameTerm\n              x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n             nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n 2. \\<And>xa xb.\n       \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n        \\<exists>x.\n           x \\<sharp> P \\<and>\n           xb =\n           \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                   x\\<lparr>\\<rparr>nameTerm\n               x.\\<zero> \\<parallel>\n                                  nameTerm\n                                   x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n       \\<Longrightarrow> xb = ?y2\n 3. \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         x \\<sharp> P \\<and>\n                         x \\<sharp> C \\<and>\n                         ?y2 =\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P)", "apply(rule_tac x=x in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> x \\<sharp> P \\<and>\n                         ?y2 =\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n 2. \\<And>xa xb.\n       \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n        \\<exists>x.\n           x \\<sharp> P \\<and>\n           xb =\n           \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                   x\\<lparr>\\<rparr>nameTerm\n               x.\\<zero> \\<parallel>\n                                  nameTerm\n                                   x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n       \\<Longrightarrow> xb = ?y2\n 3. \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         x \\<sharp> P \\<and>\n                         x \\<sharp> C \\<and>\n                         ?y2 =\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa xb.\n       \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n        \\<exists>x.\n           x \\<sharp> P \\<and>\n           xb =\n           \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                   x\\<lparr>\\<rparr>nameTerm\n               x.\\<zero> \\<parallel>\n                                  nameTerm\n                                   x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n       \\<Longrightarrow> xb =\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n 2. \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xa.\n                         xa \\<sharp> P \\<and>\n                         xa \\<sharp> C \\<and>\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n                         \\<lparr>\\<nu>xa\\<rparr>(nameTerm\n            xa\\<lparr>\\<rparr>nameTerm xa.\\<zero> \\<parallel>\n           nameTerm xa\\<langle>nameTerm xa\\<rangle>.P)", "apply(clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa xb xba.\n       \\<lbrakk>x \\<sharp> P; x \\<sharp> C; xba \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<lparr>\\<nu>xba\\<rparr>(nameTerm\n             xba\\<lparr>\\<rparr>nameTerm xba.\\<zero> \\<parallel>\n            nameTerm xba\\<langle>nameTerm xba\\<rangle>.P) =\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n 2. \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xa.\n                         xa \\<sharp> P \\<and>\n                         xa \\<sharp> C \\<and>\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n                         \\<lparr>\\<nu>xa\\<rparr>(nameTerm\n            xa\\<lparr>\\<rparr>nameTerm xa.\\<zero> \\<parallel>\n           nameTerm xa\\<langle>nameTerm xa\\<rangle>.P)", "apply(simp add: psi.inject alpha)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xb.\n       \\<lbrakk>x \\<sharp> P; x \\<sharp> C; xb \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> xb = x \\<and>\n                         nameTerm xb = nameTerm x \\<and>\n                         \\<rparr>nameTerm xb.\\<zero> =\n                         \\<rparr>nameTerm x.\\<zero> \\<and>\n                         nameTerm xb = nameTerm x \\<or>\n                         xb \\<noteq> x \\<and>\n                         nameTerm xb = [(xb, x)] \\<bullet> nameTerm x \\<and>\n                         \\<rparr>nameTerm xb.\\<zero> =\n                         \\<rparr>([(xb, x)] \\<bullet>\n                                  nameTerm x).\\<zero> \\<and>\n                         nameTerm xb = [(xb, x)] \\<bullet> nameTerm x \\<and>\n                         xb \\<noteq> x\n 2. \\<lbrakk>x \\<sharp> P; x \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xa.\n                         xa \\<sharp> P \\<and>\n                         xa \\<sharp> C \\<and>\n                         \\<lparr>\\<nu>x\\<rparr>(nameTerm\n           x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n          nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n                         \\<lparr>\\<nu>xa\\<rparr>(nameTerm\n            xa\\<lparr>\\<rparr>nameTerm xa.\\<zero> \\<parallel>\n           nameTerm xa\\<langle>nameTerm xa\\<rangle>.P)", "by(auto simp add: calc_atm eqvts abs_fresh)"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<sharp> P \\<and>\n     x \\<sharp> C \\<and>\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                              x\\<lparr>\\<lambda>*[] nameTerm\n               x\\<rparr>.\\<zero>) \\<parallel>\n                            nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<sharp> P \\<and>\n     x \\<sharp> C \\<and>\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                              x\\<lparr>\\<lambda>*[] nameTerm\n               x\\<rparr>.\\<zero>) \\<parallel>\n                            nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume \"\\<And>x. \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n          \\<tau>.(P) =\n          \\<lparr>\\<nu>x\\<rparr>((nameTerm x\\<lparr>\\<lambda>*[] nameTerm x\\<rparr>.\\<zero>) \\<parallel> nameTerm x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n         \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<sharp> P; ?x \\<sharp> C;\n   \\<tau>.P =\n   \\<lparr>\\<nu>?x\\<rparr>((nameTerm\n                             ?x\\<lparr>\\<lambda>*[] nameTerm\n               ?x\\<rparr>.\\<zero>) \\<parallel>\n                           nameTerm\n                            ?x\\<langle>nameTerm ?x\\<rangle>.P)\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> C;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<sharp> P \\<and>\n     x \\<sharp> C \\<and>\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                              x\\<lparr>\\<lambda>*[] nameTerm\n               x\\<rparr>.\\<zero>) \\<parallel>\n                            nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n  \\<lbrakk>?x \\<sharp> P; ?x \\<sharp> C;\n   \\<tau>.P =\n   \\<lparr>\\<nu>?x\\<rparr>((nameTerm\n                             ?x\\<lparr>\\<lambda>*[] nameTerm\n               ?x\\<rparr>.\\<zero>) \\<parallel>\n                           nameTerm\n                            ?x\\<langle>nameTerm ?x\\<rangle>.P)\\<rbrakk>\n  \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<sharp> P \\<and>\n     x \\<sharp> C \\<and>\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                              x\\<lparr>\\<lambda>*[] nameTerm\n               x\\<rparr>.\\<zero>) \\<parallel>\n                            nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n  \\<lbrakk>?x \\<sharp> P; ?x \\<sharp> C;\n   \\<tau>.P =\n   \\<lparr>\\<nu>?x\\<rparr>((nameTerm\n                             ?x\\<lparr>\\<lambda>*[] nameTerm\n               ?x\\<rparr>.\\<zero>) \\<parallel>\n                           nameTerm\n                            ?x\\<langle>nameTerm ?x\\<rangle>.P)\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauActionI:\n  fixes P :: \"('a, 'b, 'c) psi\"\n\n  shows \"\\<exists>P'. \\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>\\<tau> \\<prec> P' \\<and> \\<Psi> \\<rhd> P \\<sim> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n       \\<Psi> \\<rhd> P \\<sim> P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n       \\<Psi> \\<rhd> P \\<sim> P'", "obtain x:: name where \"x \\<sharp> \\<Psi>\" and \"x \\<sharp> P\" and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule tauActionUnfold)"], ["proof (state)\nthis:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n       \\<Psi> \\<rhd> P \\<sim> P'", "then"], ["proof (chain)\npicking this:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)", "have \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>\\<tau> \\<prec> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)\""], ["proof (prove)\nusing this:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n   P)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                      x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                     nameTerm\n                      x\\<langle>nameTerm\n                                 x\\<rangle>.P) \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n                       P)", "apply(rule Scope)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> nameTerm\n                                     x\\<lparr>\\<rparr>nameTerm\n                 x.\\<zero> \\<parallel>\n                                    nameTerm\n                                     x\\<langle>nameTerm\n          x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> \\<zero> \\<parallel> P\n 2. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<Psi>\n 3. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<tau>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> nameTerm\n                                     x\\<lparr>\\<rparr>nameTerm\n                 x.\\<zero> \\<parallel>\n                                    nameTerm\n                                     x\\<langle>nameTerm\n          x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> \\<zero> \\<parallel> P", "apply(subgoal_tac \"\\<Psi> \\<rhd> ((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P) \\<longmapsto>\\<tau> \\<prec> \\<lparr>\\<nu>*[]\\<rparr>(\\<zero> \\<parallel> P)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n     \\<Psi> \\<rhd> (nameTerm\n                     x\\<lparr>\\<lambda>*[] nameTerm\n      x\\<rparr>.\\<zero>) \\<parallel>\n                   nameTerm\n                    x\\<langle>nameTerm\n                               x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>*[]\\<rparr>\\<zero> \\<parallel>\n                     P\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> nameTerm\n                                     x\\<lparr>\\<rparr>nameTerm\n                 x.\\<zero> \\<parallel>\n                                    nameTerm\n                                     x\\<langle>nameTerm\n          x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> \\<zero> \\<parallel> P\n 2. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> (nameTerm\nx\\<lparr>\\<lambda>*[] nameTerm x\\<rparr>.\\<zero>) \\<parallel>\n                                    nameTerm\n                                     x\\<langle>nameTerm\n          x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>*[]\\<rparr>\\<zero> \\<parallel>\nP", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> (nameTerm\nx\\<lparr>\\<lambda>*[] nameTerm x\\<rparr>.\\<zero>) \\<parallel>\n                                    nameTerm\n                                     x\\<langle>nameTerm\n          x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>*[]\\<rparr>\\<zero> \\<parallel>\nP", "apply(rule_tac M=\"(nameTerm x)\" and N=\"(nameTerm x)\" and K=\"(nameTerm x)\" in Comm1)"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      ?\\<Psi>\\<^sub>Q8 \\<rhd> nameTerm\n         x\\<lparr>\\<lambda>*[] nameTerm\n                                x\\<rparr>.\\<zero> \\<longmapsto> nameTerm\n                           x\\<lparr>nameTerm x\\<rparr> \\<prec> \\<zero>\n 2. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> extractFrame\n                       (nameTerm\n                         x\\<lparr>\\<lambda>*[] nameTerm x\\<rparr>.\\<zero>) =\n                      \\<langle>?A\\<^sub>P8, ?\\<Psi>\\<^sub>P8\\<rangle>\n 3. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      ?\\<Psi>\\<^sub>P8 \\<rhd> nameTerm\n         x\\<langle>nameTerm\n                    x\\<rangle>.P \\<longmapsto> nameTerm\n          x\\<langle>nameTerm x\\<rangle> \\<prec> P\n 4. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> extractFrame\n                       (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n                      \\<langle>?A\\<^sub>Q8, ?\\<Psi>\\<^sub>Q8\\<rangle>\n 5. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      ?\\<Psi>\\<^sub>P8 \\<otimes>\n                      ?\\<Psi>\\<^sub>Q8 \\<turnstile> nameTerm\n               x \\<leftrightarrow> nameTerm x\n 6. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> ?A\\<^sub>P8 \\<sharp>* \\<Psi>\n 7. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> ?A\\<^sub>P8 \\<sharp>* (nameTerm\n        x\\<lparr>\\<lambda>*[] nameTerm x\\<rparr>.\\<zero>)\n 8. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> ?A\\<^sub>P8 \\<sharp>* nameTerm\n       x\\<langle>nameTerm x\\<rangle>.P\n 9. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> ?A\\<^sub>P8 \\<sharp>* nameTerm x\n 10. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n      \\<tau>.P =\n      \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                              x\\<lparr>\\<rparr>nameTerm\n          x.\\<zero> \\<parallel>\n                             nameTerm\n                              x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n     \\<Longrightarrow> ?A\\<^sub>P8 \\<sharp>* ?A\\<^sub>Q8\nA total of 15 subgoals...", "apply(auto intro: ntChanEq Output Input)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<one> \\<rhd> nameTerm\n                                     x\\<lparr>\\<rparr>nameTerm\n                 x.\\<zero> \\<longmapsto> nameTerm\n    x\\<lparr>nameTerm x\\<rparr> \\<prec> \\<zero>", "apply(subgoal_tac \"\\<Psi> \\<otimes> \\<one> \\<rhd> (nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero> \\<longmapsto>(nameTerm x)\\<lparr>((nameTerm x)[([])::=[]])\\<rparr> \\<prec> (\\<zero>[[]::=[]])\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n     \\<Psi> \\<otimes>\n     \\<one> \\<rhd> nameTerm\n                    x\\<lparr>\\<lambda>*[] nameTerm\n     x\\<rparr>.\\<zero> \\<longmapsto> nameTerm\nx\\<lparr>nameTerm x[[]::=[]]\\<rparr> \\<prec> \\<zero>[[]::=[]]\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<one> \\<rhd> nameTerm\n                                     x\\<lparr>\\<rparr>nameTerm\n                 x.\\<zero> \\<longmapsto> nameTerm\n    x\\<lparr>nameTerm x\\<rparr> \\<prec> \\<zero>\n 2. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<one> \\<rhd> nameTerm\n                                     x\\<lparr>\\<lambda>*[] nameTerm\n                      x\\<rparr>.\\<zero> \\<longmapsto> nameTerm\n                 x\\<lparr>nameTerm\n                           x[[]::=[]]\\<rparr> \\<prec> \\<zero>[[]::=[]]", "apply(simp add: subst4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<one> \\<rhd> nameTerm\n                                     x\\<lparr>\\<lambda>*[] nameTerm\n                      x\\<rparr>.\\<zero> \\<longmapsto> nameTerm\n                 x\\<lparr>nameTerm\n                           x[[]::=[]]\\<rparr> \\<prec> \\<zero>[[]::=[]]", "by(rule_tac Input) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n       \\<Psi> \\<rhd> P \\<sim> P'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n       \\<Psi> \\<rhd> P \\<sim> P'", "from \\<open>x \\<sharp> \\<Psi>\\<close> \\<open>x \\<sharp> P\\<close>"], ["proof (chain)\npicking this:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P", "have \"\\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)\""], ["proof (prove)\nusing this:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)", "by(metis bisimTransitive bisimParNil bisimScopeExtSym bisimResNil bisimParPresSym bisimParComm bisimE(4))"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n       \\<Psi> \\<rhd> P \\<sim> P'", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n P)\n  \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n P)\n  \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n       \\<Psi> \\<rhd> P \\<sim> P'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n     \\<Psi> \\<rhd> P \\<sim> P'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma outputEmpy[dest]:\n  assumes \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<longmapsto>K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N'\\<rangle> \\<prec> P'\"\n\n  shows \"xvec = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xvec = []", "using assms"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N'\\<rangle> \\<prec> P'\n\ngoal (1 subgoal):\n 1. xvec = []", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N'\\<rangle> \\<prec> P' \\<Longrightarrow>\n    xvec = []", "by(ind_cases \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<longmapsto>K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N'\\<rangle> \\<prec> P'\") (auto simp add: psi.inject residualInject)"], ["", "lemma tauActionE:\n  fixes P :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>\\<tau> \\<prec> P'\"\n\n  shows \"\\<Psi> \\<rhd> P \\<sim> P'\" and \"supp P' = ((supp P)::name set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<sim> P' &&& supp P' = supp P", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Psi> \\<rhd> P \\<sim> P'\n 2. supp P' = supp P", "obtain x:: name where \"x \\<sharp> (\\<Psi>, P')\" and \"x \\<sharp> P\" and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> (\\<Psi>, P'); x \\<sharp> P;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule tauActionUnfold)"], ["proof (state)\nthis:\n  x \\<sharp> (\\<Psi>, P')\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (2 subgoals):\n 1. \\<Psi> \\<rhd> P \\<sim> P'\n 2. supp P' = supp P", "with assms"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P'\n  x \\<sharp> (\\<Psi>, P')\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)", "have \"\\<Psi> \\<rhd> P \\<sim> P' \\<and> supp P' = ((supp P)::name set)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P'\n  x \\<sharp> (\\<Psi>, P')\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<sim> P' \\<and> supp P' = supp P", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>(nameTerm\n             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n            nameTerm\n             x\\<langle>nameTerm\n                        x\\<rangle>.P) \\<longmapsto> \\<tau> \\<prec> P';\n     x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> P' \\<and> supp P' = supp P", "apply(erule_tac resTauCases)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<Psi>\n 2. \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> P'\n 3. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> P'a\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>P'a \\<and>\n                         supp (\\<lparr>\\<nu>x\\<rparr>P'a) = supp P", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> P'a\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>P'a \\<and>\n                         supp (\\<lparr>\\<nu>x\\<rparr>P'a) = supp P", "apply(erule_tac C=\"x\" in parCases)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm\n                                x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n       \\<Longrightarrow> bn (\\<tau>) \\<sharp>* \\<Psi>\n 2. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm\n                                x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n       \\<Longrightarrow> bn (\\<tau>) \\<sharp>* nameTerm\n          x\\<lparr>\\<rparr>nameTerm x.\\<zero>\n 3. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm\n                                x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n       \\<Longrightarrow> bn (\\<tau>) \\<sharp>* nameTerm\n          x\\<langle>nameTerm x\\<rangle>.P\n 4. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm\n                                x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n       \\<Longrightarrow> bn (\\<tau>) \\<sharp>* subject (\\<tau>)\n 5. \\<And>P'a P'aa A\\<^sub>Q \\<Psi>\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> \\<tau> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q; A\\<^sub>Q \\<sharp>* \\<Psi>;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* (\\<tau>); A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(P'aa \\<parallel>\n                                 nameTerm\n                                  x\\<langle>nameTerm x\\<rangle>.P) \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(P'aa \\<parallel>\n            nameTerm x\\<langle>nameTerm x\\<rangle>.P)) =\n                         supp P\n 6. \\<And>P'a Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* (\\<tau>); A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                  x\\<lparr>\\<rparr>nameTerm\n              x.\\<zero> \\<parallel>\n                                 Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(nameTerm\n             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n            Q')) =\n                         supp P\n 7. \\<And>P'a \\<Psi>\\<^sub>Q M N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P\n 8. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply simp+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>P'a A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> \\<tau> \\<prec> P'a;\n        A\\<^sub>Q = []\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n                                 nameTerm\n                                  x\\<langle>nameTerm x\\<rangle>.P) \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n            nameTerm x\\<langle>nameTerm x\\<rangle>.P)) =\n                         supp P\n 2. \\<And>P'a Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* (\\<tau>); A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                  x\\<lparr>\\<rparr>nameTerm\n              x.\\<zero> \\<parallel>\n                                 Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(nameTerm\n             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n            Q')) =\n                         supp P\n 3. \\<And>P'a \\<Psi>\\<^sub>Q M N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P\n 4. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(drule_tac nilTrans(3)[where xvec=\"[]\", simplified])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>P'a A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        A\\<^sub>Q = []; False\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n                                 nameTerm\n                                  x\\<langle>nameTerm x\\<rangle>.P) \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n            nameTerm x\\<langle>nameTerm x\\<rangle>.P)) =\n                         supp P\n 2. \\<And>P'a Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* (\\<tau>); A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                  x\\<lparr>\\<rparr>nameTerm\n              x.\\<zero> \\<parallel>\n                                 Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(nameTerm\n             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n            Q')) =\n                         supp P\n 3. \\<And>P'a \\<Psi>\\<^sub>Q M N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P\n 4. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>P'a Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> \\<tau> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* (\\<tau>); A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                  x\\<lparr>\\<rparr>nameTerm\n              x.\\<zero> \\<parallel>\n                                 Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(nameTerm\n             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n            Q')) =\n                         supp P\n 2. \\<And>P'a \\<Psi>\\<^sub>Q M N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P\n 3. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P'a \\<Psi>\\<^sub>Q M N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P\n 2. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'a \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'a \\<parallel>\nQ')) =\n                         supp P\n 2. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(subgoal_tac \"\\<Psi> \\<otimes> \\<one> \\<rhd> (nameTerm x)\\<lparr>\\<lambda>*[] (nameTerm x)\\<rparr>.\\<zero> \\<longmapsto>M\\<lparr>N\\<rparr> \\<prec> P'a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<lambda>*[] nameTerm\n        x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'a \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'a \\<parallel>\nQ')) =\n                         supp P\n 2. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 3. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(erule_tac inputCases)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        set [] \\<subseteq> supp (nameTerm x); length [] = length Tvec;\n        distinct []\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>\\<zero>[[]::=Tvec] \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>\\<zero>[[]::=Tvec] \\<parallel>\nQ')) =\n                         supp P\n 2. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 3. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>\\<zero> \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>\\<zero> \\<parallel>\nQ')) =\n                         supp P\n 2. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 3. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(subgoal_tac \"xvec = []\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []; xvec = []\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>\\<zero> \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>\\<zero> \\<parallel>\nQ')) =\n                         supp P\n 2. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []\\<rbrakk>\n       \\<Longrightarrow> xvec = []\n 3. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 4. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(erule_tac outputCases)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec Kb.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = []; \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []; xvec = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Kb\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>\\<zero> \\<parallel>\n                     P) \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>\\<zero> \\<parallel>\nP)) =\n                         supp P\n 2. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []\\<rbrakk>\n       \\<Longrightarrow> xvec = []\n 3. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 4. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Ka Tvec Kb.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = []; \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []; xvec = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Kb\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n                                 P) \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)) =\n                         supp P\n 2. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []\\<rbrakk>\n       \\<Longrightarrow> xvec = []\n 3. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 4. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(clarsimp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>M N P'a K Ka Kb.\n       \\<lbrakk>x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Kb;\n        x \\<sharp> \\<Psi>; x \\<sharp> P'\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n                                 P) \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)) =\n                         supp P\n 2. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []\\<rbrakk>\n       \\<Longrightarrow> xvec = []\n 3. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 4. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(rule conjI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>M N P'a K Ka Kb.\n       \\<lbrakk>x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Kb;\n        x \\<sharp> \\<Psi>; x \\<sharp> P'\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel>\n                                 P)\n 2. \\<And>M N P'a K Ka Kb.\n       \\<lbrakk>x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Kb;\n        x \\<sharp> \\<Psi>; x \\<sharp> P'\\<rbrakk>\n       \\<Longrightarrow> supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)) =\n                         supp P\n 3. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []\\<rbrakk>\n       \\<Longrightarrow> xvec = []\n 4. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 5. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(metis bisimTransitive bisimParNil bisimScopeExtSym bisimResNil bisimParPresSym bisimParComm bisimE(4))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>M N P'a K Ka Kb.\n       \\<lbrakk>x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Kb;\n        x \\<sharp> \\<Psi>; x \\<sharp> P'\\<rbrakk>\n       \\<Longrightarrow> supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<zero> \\<parallel> P)) =\n                         supp P\n 2. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q' Ka Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        Tvec = []\\<rbrakk>\n       \\<Longrightarrow> xvec = []\n 3. \\<And>\\<Psi>\\<^sub>Q M N P'a A\\<^sub>P K xvec Q'.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        A\\<^sub>P = [];\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        \\<Psi>\\<^sub>Q = \\<one>;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; xvec \\<sharp>* \\<Psi>; x \\<sharp> xvec;\n        xvec \\<sharp>* M; xvec \\<sharp>* K; xvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\n 4. \\<And>P'a \\<Psi>\\<^sub>Q M xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi> \\<and> x \\<sharp> P'; x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* M; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* x;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* x; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* M; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<rhd> P \\<sim> \\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\n                     Q') \\<and>\n                         supp\n                          (\\<lparr>\\<nu>x\\<rparr>(\\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel>\nQ')) =\n                         supp P", "apply(auto simp add: psi.supp abs_supp suppBottom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M N P'a K Ka Kb.\n       \\<lbrakk>x \\<sharp> P;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        \\<Psi> \\<otimes>\n        \\<one> \\<otimes> \\<one> \\<turnstile> M \\<leftrightarrow> K;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Ka;\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> Kb;\n        x \\<sharp> \\<Psi>; x \\<sharp> P'; x \\<in> supp P\\<rbrakk>\n       \\<Longrightarrow> False", "by(simp add: fresh_def)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<sim> P' \\<and> supp P' = supp P\n\ngoal (2 subgoals):\n 1. \\<Psi> \\<rhd> P \\<sim> P'\n 2. supp P' = supp P", "thus \"\\<Psi> \\<rhd> P \\<sim> P'\" and \"supp P' = ((supp P)::name set)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<sim> P' \\<and> supp P' = supp P\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<sim> P' &&& supp P' = supp P", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<sim> P'\n  supp P' = supp P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauActionEqvt[eqvt]:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   p :: \"name prm\"\n\n  shows \"(p \\<bullet> \\<tau>.(P)) = \\<tau>.(p \\<bullet> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> \\<tau>.P = \\<tau>.(p \\<bullet> P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<bullet> \\<tau>.P = \\<tau>.(p \\<bullet> P)", "obtain x::name where \"x \\<sharp> P\" and \"x \\<sharp> p\" and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> p;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule tauActionUnfold)"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> p\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. p \\<bullet> \\<tau>.P = \\<tau>.(p \\<bullet> P)", "moreover"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> p\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. p \\<bullet> \\<tau>.P = \\<tau>.(p \\<bullet> P)", "obtain y::name where \"y \\<sharp> p \\<bullet> P\" and \"y \\<sharp> (p, x)\" and \"\\<tau>.(p \\<bullet> P) = \\<lparr>\\<nu>y\\<rparr>(((nameTerm y)\\<lparr>\\<lambda>*([]) (nameTerm y)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm y)\\<langle>(nameTerm y)\\<rangle>.(p \\<bullet> P)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> p \\<bullet> P; y \\<sharp> (p, x);\n         \\<tau>.(p \\<bullet> P) =\n         \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                                  y\\<lparr>\\<lambda>*[] nameTerm\n                   y\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 y\\<langle>nameTerm\n      y\\<rangle>.(p \\<bullet> P))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule tauActionUnfold)"], ["proof (state)\nthis:\n  y \\<sharp> p \\<bullet> P\n  y \\<sharp> (p, x)\n  \\<tau>.(p \\<bullet> P) =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          y\\<langle>nameTerm y\\<rangle>.(p \\<bullet> P))\n\ngoal (1 subgoal):\n 1. p \\<bullet> \\<tau>.P = \\<tau>.(p \\<bullet> P)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<sharp> P\n  x \\<sharp> p\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n  y \\<sharp> p \\<bullet> P\n  y \\<sharp> (p, x)\n  \\<tau>.(p \\<bullet> P) =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          y\\<langle>nameTerm y\\<rangle>.(p \\<bullet> P))", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  x \\<sharp> p\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n  y \\<sharp> p \\<bullet> P\n  y \\<sharp> (p, x)\n  \\<tau>.(p \\<bullet> P) =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          y\\<langle>nameTerm y\\<rangle>.(p \\<bullet> P))\n\ngoal (1 subgoal):\n 1. p \\<bullet> \\<tau>.P = \\<tau>.(p \\<bullet> P)", "by(simp add: eqvts calc_atm at_prm_fresh[OF at_name_inst] psi.inject alpha pt_fresh_perm_app[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  p \\<bullet> \\<tau>.P = \\<tau>.(p \\<bullet> P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma resCases'[consumes 7, case_names cOpen cRes]:\n  fixes \\<Psi>    :: 'b\n  and   x    :: name\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha>    :: \"'a action\"\n  and   P'   :: \"('a, 'b, 'c) psi\"\n  and   C    :: \"'d::fs_name\"\n\n  assumes Trans: \"\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>x\\<alpha> \\<prec> xP'\"\n  and     \"x \\<sharp> \\<Psi>\"\n  and     \"x \\<sharp> x\\<alpha>\"\n  and     \"x \\<sharp> xP'\"\n  and     \"bn x\\<alpha> \\<sharp>* \\<Psi>\"\n  and     \"bn x\\<alpha> \\<sharp>* P\"\n  and     \"bn x\\<alpha> \\<sharp>* subject x\\<alpha>\"\n  and     rOpen: \"\\<And>M xvec yvec y N P'. \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto>M\\<lparr>\\<nu>*(xvec@yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> ([(x, y)] \\<bullet> P'); y \\<in> supp N;\n                                         x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y; y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec; distinct yvec;\n                                         xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P; yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n                                         yvec \\<sharp>* M; xvec \\<sharp>* yvec; x\\<alpha> = M\\<lparr>\\<nu>*(xvec@y#yvec)\\<rparr>\\<langle>N\\<rangle>; xP' = P'\\<rbrakk> \\<Longrightarrow>\n                                         Prop\"\n  and     rScope:  \"\\<And>P'. \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto>x\\<alpha> \\<prec> P'; xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk> \\<Longrightarrow> Prop\"\n\n  shows \"Prop\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop", "from Trans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto> x\\<alpha> \\<prec> xP'", "have \"distinct(bn x\\<alpha>)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto> x\\<alpha> \\<prec> xP'\n\ngoal (1 subgoal):\n 1. distinct (bn x\\<alpha>)", "by(auto dest: boundOutputDistinct)"], ["proof (state)\nthis:\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "have \"length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xP')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')", "by simp"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n\ngoal (1 subgoal):\n 1. Prop", "note Trans"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto> x\\<alpha> \\<prec> xP'\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto> x\\<alpha> \\<prec> xP'\n\ngoal (1 subgoal):\n 1. Prop", "have \"length [] = inputLength(\\<lparr>\\<nu>x\\<rparr>P)\" and \"distinct []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length [] = inputLength (\\<lparr>\\<nu>x\\<rparr>P) &&& distinct []", "by(auto simp add: inputLength_inputLength'_inputLength''.simps)"], ["proof (state)\nthis:\n  length [] = inputLength (\\<lparr>\\<nu>x\\<rparr>P)\n  distinct []\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length [] = inputLength (\\<lparr>\\<nu>x\\<rparr>P)\n  distinct []\n\ngoal (1 subgoal):\n 1. Prop", "note \\<open>length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xP')\\<close> \\<open>distinct(bn x\\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "note \\<open>length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xP')\\<close> \\<open>distinct(bn x\\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "note \\<open>length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xP')\\<close> \\<open>distinct(bn x\\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "note \\<open>length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xP')\\<close> \\<open>distinct(bn x\\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto> x\\<alpha> \\<prec> xP'\n  length [] = inputLength (\\<lparr>\\<nu>x\\<rparr>P)\n  distinct []\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto> x\\<alpha> \\<prec> xP'\n  length [] = inputLength (\\<lparr>\\<nu>x\\<rparr>P)\n  distinct []\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "using \\<open>bn x\\<alpha> \\<sharp>* \\<Psi>\\<close> \\<open>bn x\\<alpha> \\<sharp>* P\\<close> \\<open>bn x\\<alpha> \\<sharp>* subject x\\<alpha>\\<close> \\<open>x \\<sharp> \\<Psi>\\<close> \\<open>x \\<sharp> x\\<alpha>\\<close> \\<open>x \\<sharp> xP'\\<close> \\<open>distinct(bn x\\<alpha>)\\<close> rScope rOpen"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto> x\\<alpha> \\<prec> xP'\n  length [] = inputLength (\\<lparr>\\<nu>x\\<rparr>P)\n  distinct []\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xP')\n  distinct (bn x\\<alpha>)\n  bn x\\<alpha> \\<sharp>* \\<Psi>\n  bn x\\<alpha> \\<sharp>* P\n  bn x\\<alpha> \\<sharp>* subject x\\<alpha>\n  x \\<sharp> \\<Psi>\n  x \\<sharp> x\\<alpha>\n  x \\<sharp> xP'\n  distinct (bn x\\<alpha>)\n  \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> ?P';\n   xP' = \\<lparr>\\<nu>x\\<rparr>?P'\\<rbrakk>\n  \\<Longrightarrow> Prop\n  \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ?M\\<lparr>\\<nu>*(?xvec @\n                    ?yvec)\\<rparr>\\<langle>([(x, ?y)] \\<bullet>\n      ?N)\\<rangle> \\<prec> [(x, ?y)] \\<bullet> ?P';\n   ?y \\<in> supp ?N; x \\<sharp> ?N; x \\<sharp> ?P'; x \\<noteq> ?y;\n   ?y \\<sharp> ?xvec; ?y \\<sharp> ?yvec; ?y \\<sharp> ?M; distinct ?xvec;\n   distinct ?yvec; ?xvec \\<sharp>* \\<Psi>; ?y \\<sharp> \\<Psi>;\n   ?yvec \\<sharp>* \\<Psi>; ?xvec \\<sharp>* P; ?y \\<sharp> P;\n   ?yvec \\<sharp>* P; ?xvec \\<sharp>* ?M; ?y \\<sharp> ?M;\n   ?yvec \\<sharp>* ?M; ?xvec \\<sharp>* ?yvec;\n   x\\<alpha> =\n   ?M\\<lparr>\\<nu>*(?xvec @ ?y # ?yvec)\\<rparr>\\<langle>?N\\<rangle>;\n   xP' = ?P'\\<rbrakk>\n  \\<Longrightarrow> Prop\n\ngoal (1 subgoal):\n 1. Prop", "apply(cases rule: semanticsCases[of _ _ _ _ _ _ _ _ _ _ x x])"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>M K N Tvec Pa.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lbrakk>[] \\<sharp>* \\<Psi>; [] \\<sharp>* \\<lparr>\\<nu>x\\<rparr>P;\n         [] \\<sharp>* (x\\<alpha> \\<prec> xP')\\<rbrakk>\n        \\<Longrightarrow> \\<lparr>\\<nu>x\\<rparr>P =\n                          M\\<lparr>\\<lambda>*[] N\\<rparr>.Pa \\<and>\n                          x\\<alpha> \\<prec> xP' =\n                          K\\<lparr>N[[]::=Tvec]\\<rparr> \\<prec> Pa[[]::=Tvec] \\<and>\n                          \\<Psi> \\<turnstile> M \\<leftrightarrow> K \\<and>\n                          distinct [] \\<and>\n                          set [] \\<subseteq> supp N \\<and>\n                          length [] = length Tvec \\<and>\n                          [] \\<sharp>* Tvec \\<and>\n                          [] \\<sharp>* \\<Psi> \\<and>\n                          [] \\<sharp>* M \\<and> [] \\<sharp>* K\\<rbrakk>\n       \\<Longrightarrow> Prop\n 2. \\<And>M K N Pa.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lparr>\\<nu>x\\<rparr>P = M\\<langle>N\\<rangle>.Pa;\n        x\\<alpha> \\<prec> xP' = K\\<langle>N\\<rangle> \\<prec> Pa;\n        \\<Psi> \\<turnstile> M \\<leftrightarrow> K\\<rbrakk>\n       \\<Longrightarrow> Prop\n 3. \\<And>Cs Pa \\<phi>.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lparr>\\<nu>x\\<rparr>P = Cases Cs;\n        \\<Psi> \\<rhd> Pa \\<longmapsto> x\\<alpha> \\<prec> xP';\n        (\\<phi>, Pa) mem Cs; \\<Psi> \\<turnstile> \\<phi>; guarded Pa\\<rbrakk>\n       \\<Longrightarrow> Prop\n 4. \\<And>\\<Psi>\\<^sub>Q Pa \\<alpha> P' Q A\\<^sub>Q.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>;\n         bn x\\<alpha> \\<sharp>* \\<lparr>\\<nu>x\\<rparr>P;\n         bn x\\<alpha> \\<sharp>* (x\\<alpha> \\<prec> xP')\\<rbrakk>\n        \\<Longrightarrow> \\<lparr>\\<nu>x\\<rparr>P = Pa \\<parallel> Q \\<and>\n                          x\\<alpha> \\<prec> xP' =\n                          \\<alpha> \\<prec> P' \\<parallel> Q \\<and>\n                          bn x\\<alpha> = bn \\<alpha> \\<and>\n                          \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>Q \\<rhd> Pa \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                          extractFrame Q =\n                          \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle> \\<and>\n                          distinct A\\<^sub>Q \\<and>\n                          A\\<^sub>Q \\<sharp>* Pa \\<and>\n                          A\\<^sub>Q \\<sharp>* Q \\<and>\n                          A\\<^sub>Q \\<sharp>* \\<Psi> \\<and>\n                          A\\<^sub>Q \\<sharp>* \\<alpha> \\<and>\n                          A\\<^sub>Q \\<sharp>* P' \\<and>\n                          A\\<^sub>Q \\<sharp>* ?C11\\<rbrakk>\n       \\<Longrightarrow> Prop\n 5. \\<And>\\<Psi>\\<^sub>P Q \\<alpha> Q' Pa A\\<^sub>P.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>;\n         bn x\\<alpha> \\<sharp>* \\<lparr>\\<nu>x\\<rparr>P;\n         bn x\\<alpha> \\<sharp>* (x\\<alpha> \\<prec> xP')\\<rbrakk>\n        \\<Longrightarrow> \\<lparr>\\<nu>x\\<rparr>P = Pa \\<parallel> Q \\<and>\n                          x\\<alpha> \\<prec> xP' =\n                          \\<alpha> \\<prec> Pa \\<parallel> Q' \\<and>\n                          bn x\\<alpha> = bn \\<alpha> \\<and>\n                          \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<and>\n                          extractFrame Pa =\n                          \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle> \\<and>\n                          distinct A\\<^sub>P \\<and>\n                          A\\<^sub>P \\<sharp>* Pa \\<and>\n                          A\\<^sub>P \\<sharp>* Q \\<and>\n                          A\\<^sub>P \\<sharp>* \\<Psi> \\<and>\n                          A\\<^sub>P \\<sharp>* \\<alpha> \\<and>\n                          A\\<^sub>P \\<sharp>* Q' \\<and>\n                          A\\<^sub>P \\<sharp>* ?C11\\<rbrakk>\n       \\<Longrightarrow> Prop\n 6. \\<And>\\<Psi>\\<^sub>Q Pa M N P' A\\<^sub>P \\<Psi>\\<^sub>P Q K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lparr>\\<nu>x\\<rparr>P = Pa \\<parallel> Q;\n        x\\<alpha> \\<prec> xP' =\n        \\<tau> \\<prec> \\<lparr>\\<nu>*xvec\\<rparr>P' \\<parallel> Q';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> Pa \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P';\n        extractFrame Pa = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        A\\<^sub>P \\<sharp>* \\<Psi>; A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* Pa; A\\<^sub>P \\<sharp>* M;\n        A\\<^sub>P \\<sharp>* N; A\\<^sub>P \\<sharp>* P';\n        A\\<^sub>P \\<sharp>* Q; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* xvec;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* Pa; A\\<^sub>Q \\<sharp>* K;\n        A\\<^sub>Q \\<sharp>* N; A\\<^sub>Q \\<sharp>* P';\n        A\\<^sub>Q \\<sharp>* Q; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* xvec; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P; xvec \\<sharp>* \\<Psi>\\<^sub>Q;\n        xvec \\<sharp>* Pa; xvec \\<sharp>* M; xvec \\<sharp>* Q;\n        xvec \\<sharp>* K; A\\<^sub>P \\<sharp>* ?C11;\n        A\\<^sub>Q \\<sharp>* ?C11; xvec \\<sharp>* ?C11;\n        distinct xvec\\<rbrakk>\n       \\<Longrightarrow> Prop\n 7. \\<And>\\<Psi>\\<^sub>Q Pa M xvec N P' A\\<^sub>P \\<Psi>\\<^sub>P Q K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lparr>\\<nu>x\\<rparr>P = Pa \\<parallel> Q;\n        x\\<alpha> \\<prec> xP' =\n        \\<tau> \\<prec> \\<lparr>\\<nu>*xvec\\<rparr>P' \\<parallel> Q';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> Pa \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        extractFrame Pa = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K;\n        A\\<^sub>P \\<sharp>* \\<Psi>; A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* Pa; A\\<^sub>P \\<sharp>* M;\n        A\\<^sub>P \\<sharp>* N; A\\<^sub>P \\<sharp>* P';\n        A\\<^sub>P \\<sharp>* Q; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* xvec;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* Pa; A\\<^sub>Q \\<sharp>* K;\n        A\\<^sub>Q \\<sharp>* N; A\\<^sub>Q \\<sharp>* P';\n        A\\<^sub>Q \\<sharp>* Q; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* xvec; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P; xvec \\<sharp>* \\<Psi>\\<^sub>Q;\n        xvec \\<sharp>* Pa; xvec \\<sharp>* M; xvec \\<sharp>* Q;\n        xvec \\<sharp>* K; A\\<^sub>P \\<sharp>* ?C11;\n        A\\<^sub>Q \\<sharp>* ?C11; xvec \\<sharp>* ?C11;\n        distinct xvec\\<rbrakk>\n       \\<Longrightarrow> Prop\n 8. \\<And>Pa M xvec y yvec N P'.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>;\n         bn x\\<alpha> \\<sharp>* \\<lparr>\\<nu>x\\<rparr>P;\n         bn x\\<alpha> \\<sharp>* (x\\<alpha> \\<prec> xP'); x \\<sharp> \\<Psi>;\n         x \\<sharp> \\<lparr>\\<nu>x\\<rparr>P;\n         x \\<sharp> x\\<alpha> \\<prec> xP'; x \\<sharp> bn x\\<alpha>\\<rbrakk>\n        \\<Longrightarrow> \\<lparr>\\<nu>x\\<rparr>P =\n                          \\<lparr>\\<nu>x\\<rparr>Pa \\<and>\n                          x\\<alpha> \\<prec> xP' =\n                          M\\<lparr>\\<nu>*(xvec @\n    x # yvec)\\<rparr>\\<langle>N\\<rangle> \\<prec> P' \\<and>\n                          bn x\\<alpha> = xvec @ y # yvec \\<and>\n                          \\<Psi> \\<rhd> Pa \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                                   yvec)\\<rparr>\\<langle>N\\<rangle> \\<prec> P' \\<and>\n                          x \\<in> supp N \\<and>\n                          x \\<sharp> xvec \\<and>\n                          x \\<sharp> yvec \\<and>\n                          distinct xvec \\<and>\n                          distinct yvec \\<and>\n                          xvec \\<sharp>* \\<Psi> \\<and>\n                          xvec \\<sharp>* Pa \\<and>\n                          xvec \\<sharp>* M \\<and>\n                          xvec \\<sharp>* yvec \\<and>\n                          yvec \\<sharp>* \\<Psi> \\<and>\n                          yvec \\<sharp>* Pa \\<and> yvec \\<sharp>* M\\<rbrakk>\n       \\<Longrightarrow> Prop\n 9. \\<And>Pa \\<alpha> P'.\n       \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n        bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n        x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>M xvec yvec y N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                            yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n             N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n            y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n            y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n            distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n            yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n            yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n            yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n            x\\<alpha> =\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>;\n         bn x\\<alpha> \\<sharp>* \\<lparr>\\<nu>x\\<rparr>P;\n         bn x\\<alpha> \\<sharp>* (x\\<alpha> \\<prec> xP'); x \\<sharp> \\<Psi>;\n         x \\<sharp> \\<lparr>\\<nu>x\\<rparr>P;\n         x \\<sharp> x\\<alpha> \\<prec> xP'; x \\<sharp> bn x\\<alpha>\\<rbrakk>\n        \\<Longrightarrow> \\<lparr>\\<nu>x\\<rparr>P =\n                          \\<lparr>\\<nu>x\\<rparr>Pa \\<and>\n                          x\\<alpha> \\<prec> xP' =\n                          \\<alpha> \\<prec> \\<lparr>\\<nu>x\\<rparr>P' \\<and>\n                          bn x\\<alpha> = bn \\<alpha> \\<and>\n                          \\<Psi> \\<rhd> Pa \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                          x \\<sharp> \\<Psi> \\<and>\n                          x \\<sharp> \\<alpha> \\<and>\n                          bn \\<alpha> \\<sharp>* subject \\<alpha> \\<and>\n                          distinct (bn \\<alpha>)\\<rbrakk>\n       \\<Longrightarrow> Prop\n 10. \\<And>Pa.\n        \\<lbrakk>bn x\\<alpha> \\<sharp>* \\<Psi>; bn x\\<alpha> \\<sharp>* P;\n         bn x\\<alpha> \\<sharp>* subject x\\<alpha>; x \\<sharp> \\<Psi>;\n         x \\<sharp> x\\<alpha>; x \\<sharp> xP'; distinct (bn x\\<alpha>);\n         \\<And>P'.\n            \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> P';\n             xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n            \\<Longrightarrow> Prop;\n         \\<And>M xvec yvec y N P'.\n            \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n                             yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n              N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n             y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n             y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> M; distinct xvec;\n             distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n             yvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; y \\<sharp> P;\n             yvec \\<sharp>* P; xvec \\<sharp>* M; y \\<sharp> M;\n             yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n             x\\<alpha> =\n             M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n             xP' = P'\\<rbrakk>\n            \\<Longrightarrow> Prop;\n         \\<lparr>\\<nu>x\\<rparr>P = !Pa;\n         \\<Psi> \\<rhd> Pa \\<parallel>\n                       !Pa \\<longmapsto> x\\<alpha> \\<prec> xP';\n         guarded Pa\\<rbrakk>\n        \\<Longrightarrow> Prop", "apply(auto simp add: psi.inject alpha abs_fresh residualInject boundOutputApp boundOutput.inject eqvts)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M xvec y yvec Na.\n       \\<lbrakk>y \\<sharp> \\<Psi>; y \\<sharp> P; x \\<sharp> \\<Psi>;\n        x \\<sharp> xP';\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut M\n             (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>y\\<rparr>(\\<lparr>\\<nu>*yvec\\<rparr>Na \\<prec>' P'));\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>Ma xveca yveca ya N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut Ma\n             (\\<lparr>\\<nu>*xveca\\<rparr>\\<lparr>\\<nu>*yveca\\<rparr>([(x,\n                                 ya)] \\<bullet>\n                               N) \\<prec>' ([(x, ya)] \\<bullet> P'));\n            ya \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> ya;\n            ya \\<sharp> xveca; ya \\<sharp> yveca; distinct xveca;\n            distinct yveca; xveca \\<sharp>* \\<Psi>; ya \\<sharp> \\<Psi>;\n            yveca \\<sharp>* \\<Psi>; xveca \\<sharp>* P; ya \\<sharp> P;\n            yveca \\<sharp>* P; xveca \\<sharp>* Ma; ya \\<sharp> Ma;\n            yveca \\<sharp>* Ma; xveca \\<sharp>* yveca;\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle> =\n            Ma\\<lparr>\\<nu>*(xveca @ ya # yveca)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        x \\<sharp> M; y \\<sharp> yvec; y \\<sharp> xvec; y \\<sharp> M;\n        x \\<noteq> y; x \\<sharp> Na;\n        x\\<alpha> =\n        M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle>;\n        \\<Psi> \\<rhd> P \\<longmapsto> ROut M\n (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>*yvec\\<rparr>([(x, y)] \\<bullet>\n                 Na) \\<prec>' ([(x, y)] \\<bullet> xP'));\n        x \\<in> supp ([(x, y)] \\<bullet> Na); x \\<sharp> xvec;\n        x \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        xvec \\<sharp>* yvec; yvec \\<sharp>* \\<Psi>; yvec \\<sharp>* P;\n        yvec \\<sharp>* M\\<rbrakk>\n       \\<Longrightarrow> Prop", "apply(subgoal_tac \"y \\<in> supp Na\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M xvec y yvec Na.\n       \\<lbrakk>y \\<sharp> \\<Psi>; y \\<sharp> P; x \\<sharp> \\<Psi>;\n        x \\<sharp> xP';\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut M\n             (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>y\\<rparr>(\\<lparr>\\<nu>*yvec\\<rparr>Na \\<prec>' P'));\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>Ma xveca yveca ya N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut Ma\n             (\\<lparr>\\<nu>*xveca\\<rparr>\\<lparr>\\<nu>*yveca\\<rparr>([(x,\n                                 ya)] \\<bullet>\n                               N) \\<prec>' ([(x, ya)] \\<bullet> P'));\n            ya \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> ya;\n            ya \\<sharp> xveca; ya \\<sharp> yveca; distinct xveca;\n            distinct yveca; xveca \\<sharp>* \\<Psi>; ya \\<sharp> \\<Psi>;\n            yveca \\<sharp>* \\<Psi>; xveca \\<sharp>* P; ya \\<sharp> P;\n            yveca \\<sharp>* P; xveca \\<sharp>* Ma; ya \\<sharp> Ma;\n            yveca \\<sharp>* Ma; xveca \\<sharp>* yveca;\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle> =\n            Ma\\<lparr>\\<nu>*(xveca @ ya # yveca)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        x \\<sharp> M; y \\<sharp> yvec; y \\<sharp> xvec; y \\<sharp> M;\n        x \\<noteq> y; x \\<sharp> Na;\n        x\\<alpha> =\n        M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle>;\n        \\<Psi> \\<rhd> P \\<longmapsto> ROut M\n (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>*yvec\\<rparr>([(x, y)] \\<bullet>\n                 Na) \\<prec>' ([(x, y)] \\<bullet> xP'));\n        x \\<in> supp ([(x, y)] \\<bullet> Na); x \\<sharp> xvec;\n        x \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        xvec \\<sharp>* yvec; yvec \\<sharp>* \\<Psi>; yvec \\<sharp>* P;\n        yvec \\<sharp>* M; y \\<in> supp Na\\<rbrakk>\n       \\<Longrightarrow> Prop\n 2. \\<And>M xvec y yvec Na.\n       \\<lbrakk>y \\<sharp> \\<Psi>; y \\<sharp> P; x \\<sharp> \\<Psi>;\n        x \\<sharp> xP';\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut M\n             (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>y\\<rparr>(\\<lparr>\\<nu>*yvec\\<rparr>Na \\<prec>' P'));\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>Ma xveca yveca ya N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut Ma\n             (\\<lparr>\\<nu>*xveca\\<rparr>\\<lparr>\\<nu>*yveca\\<rparr>([(x,\n                                 ya)] \\<bullet>\n                               N) \\<prec>' ([(x, ya)] \\<bullet> P'));\n            ya \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> ya;\n            ya \\<sharp> xveca; ya \\<sharp> yveca; distinct xveca;\n            distinct yveca; xveca \\<sharp>* \\<Psi>; ya \\<sharp> \\<Psi>;\n            yveca \\<sharp>* \\<Psi>; xveca \\<sharp>* P; ya \\<sharp> P;\n            yveca \\<sharp>* P; xveca \\<sharp>* Ma; ya \\<sharp> Ma;\n            yveca \\<sharp>* Ma; xveca \\<sharp>* yveca;\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle> =\n            Ma\\<lparr>\\<nu>*(xveca @ ya # yveca)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        x \\<sharp> M; y \\<sharp> yvec; y \\<sharp> xvec; y \\<sharp> M;\n        x \\<noteq> y; x \\<sharp> Na;\n        x\\<alpha> =\n        M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle>;\n        \\<Psi> \\<rhd> P \\<longmapsto> ROut M\n (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>*yvec\\<rparr>([(x, y)] \\<bullet>\n                 Na) \\<prec>' ([(x, y)] \\<bullet> xP'));\n        x \\<in> supp ([(x, y)] \\<bullet> Na); x \\<sharp> xvec;\n        x \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        xvec \\<sharp>* yvec; yvec \\<sharp>* \\<Psi>; yvec \\<sharp>* P;\n        yvec \\<sharp>* M\\<rbrakk>\n       \\<Longrightarrow> y \\<in> supp Na", "apply(auto simp add: residualInject boundOutputApp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M xvec y yvec Na.\n       \\<lbrakk>y \\<sharp> \\<Psi>; y \\<sharp> P; x \\<sharp> \\<Psi>;\n        x \\<sharp> xP';\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut M\n             (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>y\\<rparr>(\\<lparr>\\<nu>*yvec\\<rparr>Na \\<prec>' P'));\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>Ma xveca yveca ya N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut Ma\n             (\\<lparr>\\<nu>*xveca\\<rparr>\\<lparr>\\<nu>*yveca\\<rparr>([(x,\n                                 ya)] \\<bullet>\n                               N) \\<prec>' ([(x, ya)] \\<bullet> P'));\n            ya \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> ya;\n            ya \\<sharp> xveca; ya \\<sharp> yveca; distinct xveca;\n            distinct yveca; xveca \\<sharp>* \\<Psi>; ya \\<sharp> \\<Psi>;\n            yveca \\<sharp>* \\<Psi>; xveca \\<sharp>* P; ya \\<sharp> P;\n            yveca \\<sharp>* P; xveca \\<sharp>* Ma; ya \\<sharp> Ma;\n            yveca \\<sharp>* Ma; xveca \\<sharp>* yveca;\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle> =\n            Ma\\<lparr>\\<nu>*(xveca @ ya # yveca)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        x \\<sharp> M; y \\<sharp> yvec; y \\<sharp> xvec; y \\<sharp> M;\n        x \\<noteq> y; x \\<sharp> Na;\n        x\\<alpha> =\n        M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle>;\n        \\<Psi> \\<rhd> P \\<longmapsto> ROut M\n (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>*yvec\\<rparr>([(x, y)] \\<bullet>\n                 Na) \\<prec>' ([(x, y)] \\<bullet> xP'));\n        x \\<in> supp ([(x, y)] \\<bullet> Na); x \\<sharp> xvec;\n        x \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        xvec \\<sharp>* yvec; yvec \\<sharp>* \\<Psi>; yvec \\<sharp>* P;\n        yvec \\<sharp>* M\\<rbrakk>\n       \\<Longrightarrow> y \\<in> supp Na", "apply(drule_tac pi=\"[(x, y)]\" in pt_set_bij2[OF pt_name_inst, OF at_name_inst])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M xvec y yvec Na.\n       \\<lbrakk>y \\<sharp> \\<Psi>; y \\<sharp> P; x \\<sharp> \\<Psi>;\n        x \\<sharp> xP';\n        \\<And>P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut M\n             (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>y\\<rparr>(\\<lparr>\\<nu>*yvec\\<rparr>Na \\<prec>' P'));\n            xP' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        \\<And>Ma xveca yveca ya N P'.\n           \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> ROut Ma\n             (\\<lparr>\\<nu>*xveca\\<rparr>\\<lparr>\\<nu>*yveca\\<rparr>([(x,\n                                 ya)] \\<bullet>\n                               N) \\<prec>' ([(x, ya)] \\<bullet> P'));\n            ya \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> ya;\n            ya \\<sharp> xveca; ya \\<sharp> yveca; distinct xveca;\n            distinct yveca; xveca \\<sharp>* \\<Psi>; ya \\<sharp> \\<Psi>;\n            yveca \\<sharp>* \\<Psi>; xveca \\<sharp>* P; ya \\<sharp> P;\n            yveca \\<sharp>* P; xveca \\<sharp>* Ma; ya \\<sharp> Ma;\n            yveca \\<sharp>* Ma; xveca \\<sharp>* yveca;\n            M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle> =\n            Ma\\<lparr>\\<nu>*(xveca @ ya # yveca)\\<rparr>\\<langle>N\\<rangle>;\n            xP' = P'\\<rbrakk>\n           \\<Longrightarrow> Prop;\n        x \\<sharp> M; y \\<sharp> yvec; y \\<sharp> xvec; y \\<sharp> M;\n        x \\<noteq> y; x \\<sharp> Na;\n        x\\<alpha> =\n        M\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle>;\n        \\<Psi> \\<rhd> P \\<longmapsto> ROut M\n (\\<lparr>\\<nu>*xvec\\<rparr>\\<lparr>\\<nu>*yvec\\<rparr>([(x, y)] \\<bullet>\n                 Na) \\<prec>' ([(x, y)] \\<bullet> xP'));\n        x \\<sharp> xvec; x \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        xvec \\<sharp>* yvec; yvec \\<sharp>* \\<Psi>; yvec \\<sharp>* P;\n        yvec \\<sharp>* M;\n        [(x, y)] \\<bullet> x\n        \\<in> [(x, y)] \\<bullet> supp ([(x, y)] \\<bullet> Na)\\<rbrakk>\n       \\<Longrightarrow> y \\<in> supp Na", "by(simp add: calc_atm eqvts)"], ["proof (state)\nthis:\n  Prop\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma parCases'[consumes 5, case_names cPar1 cPar2 cComm1 cComm2]:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha>    :: \"'a action\"\n  and   T    :: \"('a, 'b, 'c) psi\"\n  and   C    :: \"'d::fs_name\"\n\n  assumes Trans: \"\\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto>x\\<alpha> \\<prec> xT\"\n  and     \"bn x\\<alpha> \\<sharp>* \\<Psi>\"\n  and     \"bn x\\<alpha> \\<sharp>* P\"\n  and     \"bn x\\<alpha> \\<sharp>* Q\"\n  and     \"bn x\\<alpha> \\<sharp>* subject x\\<alpha>\"\n  and     rPar1: \"\\<And>P' A\\<^sub>Q \\<Psi>\\<^sub>Q. \\<lbrakk>\\<Psi> \\<otimes> \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto>x\\<alpha> \\<prec> P';  extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>; distinct A\\<^sub>Q;\n                                  A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* P; A\\<^sub>Q \\<sharp>* Q; A\\<^sub>Q \\<sharp>* x\\<alpha>; A\\<^sub>Q \\<sharp>* P'; A\\<^sub>Q \\<sharp>* C; xT = P' \\<parallel> Q\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rPar2: \"\\<And>Q' A\\<^sub>P \\<Psi>\\<^sub>P. \\<lbrakk>\\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto>x\\<alpha> \\<prec> Q';  extractFrame P = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>; distinct A\\<^sub>P;\n                                 A\\<^sub>P \\<sharp>* \\<Psi>; A\\<^sub>P \\<sharp>* P; A\\<^sub>P \\<sharp>* Q; A\\<^sub>P \\<sharp>* x\\<alpha>; A\\<^sub>P \\<sharp>* Q'; A\\<^sub>P \\<sharp>* C; xT = P \\<parallel> Q'\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rComm1: \"\\<And>\\<Psi>\\<^sub>Q M N P' A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q' A\\<^sub>Q.\n           \\<lbrakk>\\<Psi> \\<otimes> \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto>M\\<lparr>N\\<rparr> \\<prec> P'; extractFrame P = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>; distinct A\\<^sub>P;\n            \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto>K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'; extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>; distinct A\\<^sub>Q;\n            \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<otimes> \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K; distinct xvec;\n            A\\<^sub>P \\<sharp>* \\<Psi>;  A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;  A\\<^sub>P \\<sharp>* P;  A\\<^sub>P \\<sharp>* M;  A\\<^sub>P \\<sharp>* N;  A\\<^sub>P \\<sharp>* P';  A\\<^sub>P \\<sharp>* Q;  A\\<^sub>P \\<sharp>* xvec;  A\\<^sub>P \\<sharp>* Q'; A\\<^sub>P \\<sharp>* A\\<^sub>Q;  A\\<^sub>P \\<sharp>* C; \n            A\\<^sub>Q \\<sharp>* \\<Psi>;  A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P; A\\<^sub>Q \\<sharp>* P;  A\\<^sub>Q \\<sharp>* K;  A\\<^sub>Q \\<sharp>* N;  A\\<^sub>Q \\<sharp>* P';  A\\<^sub>Q \\<sharp>* Q;  A\\<^sub>Q \\<sharp>* xvec;  A\\<^sub>Q \\<sharp>* Q'; A\\<^sub>Q \\<sharp>* C; \n            xvec \\<sharp>* \\<Psi>;  xvec \\<sharp>* \\<Psi>\\<^sub>P; xvec \\<sharp>* P;  xvec \\<sharp>* M;  xvec \\<sharp>* K; xvec \\<sharp>* Q;  xvec \\<sharp>* \\<Psi>\\<^sub>Q;  xvec \\<sharp>* C; x\\<alpha>=\\<tau>; xT = \\<lparr>\\<nu>*xvec\\<rparr>(P' \\<parallel> Q')\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rComm2: \"\\<And>\\<Psi>\\<^sub>Q M xvec N P' A\\<^sub>P \\<Psi>\\<^sub>P K Q' A\\<^sub>Q.\n           \\<lbrakk>\\<Psi> \\<otimes> \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto>M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'; extractFrame P = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>; distinct A\\<^sub>P;\n            \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto>K\\<lparr>N\\<rparr> \\<prec> Q'; extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>; distinct A\\<^sub>Q;\n            \\<Psi> \\<otimes> \\<Psi>\\<^sub>P \\<otimes> \\<Psi>\\<^sub>Q \\<turnstile> M \\<leftrightarrow> K; distinct xvec;\n            A\\<^sub>P \\<sharp>* \\<Psi>;  A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;  A\\<^sub>P \\<sharp>* P;  A\\<^sub>P \\<sharp>* M;  A\\<^sub>P \\<sharp>* N;  A\\<^sub>P \\<sharp>* P';  A\\<^sub>P \\<sharp>* Q;  A\\<^sub>P \\<sharp>* xvec;  A\\<^sub>P \\<sharp>* Q'; A\\<^sub>P \\<sharp>* A\\<^sub>Q;  A\\<^sub>P \\<sharp>* C; \n            A\\<^sub>Q \\<sharp>* \\<Psi>;  A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P; A\\<^sub>Q \\<sharp>* P;  A\\<^sub>Q \\<sharp>* K;  A\\<^sub>Q \\<sharp>* N;  A\\<^sub>Q \\<sharp>* P';  A\\<^sub>Q \\<sharp>* Q;  A\\<^sub>Q \\<sharp>* xvec;  A\\<^sub>Q \\<sharp>* Q'; A\\<^sub>Q \\<sharp>* C; \n            xvec \\<sharp>* \\<Psi>;  xvec \\<sharp>* \\<Psi>\\<^sub>P; xvec \\<sharp>* P;  xvec \\<sharp>* M;  xvec \\<sharp>* K;  xvec \\<sharp>* Q;  xvec \\<sharp>* \\<Psi>\\<^sub>Q;  xvec \\<sharp>* C; x\\<alpha>=\\<tau>; xT = \\<lparr>\\<nu>*xvec\\<rparr>(P' \\<parallel> Q')\\<rbrakk> \\<Longrightarrow> Prop\"\n\n  shows \"Prop\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop", "from Trans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto> x\\<alpha> \\<prec> xT", "have \"distinct(bn x\\<alpha>)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto> x\\<alpha> \\<prec> xT\n\ngoal (1 subgoal):\n 1. distinct (bn x\\<alpha>)", "by(auto dest: boundOutputDistinct)"], ["proof (state)\nthis:\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "have \"length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)", "by simp"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n\ngoal (1 subgoal):\n 1. Prop", "note Trans"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto> x\\<alpha> \\<prec> xT\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto> x\\<alpha> \\<prec> xT\n\ngoal (1 subgoal):\n 1. Prop", "have \"length [] = inputLength(P \\<parallel> Q)\" and \"distinct []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length [] = inputLength (P \\<parallel> Q) &&& distinct []", "by(auto simp add: inputLength_inputLength'_inputLength''.simps)"], ["proof (state)\nthis:\n  length [] = inputLength (P \\<parallel> Q)\n  distinct []\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length [] = inputLength (P \\<parallel> Q)\n  distinct []\n\ngoal (1 subgoal):\n 1. Prop", "note \\<open>length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xT)\\<close> \\<open>distinct(bn x\\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "note \\<open>length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xT)\\<close> \\<open>distinct(bn x\\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "note \\<open>length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xT)\\<close> \\<open>distinct(bn x\\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "note \\<open>length(bn x\\<alpha>) = residualLength(x\\<alpha> \\<prec> xT)\\<close> \\<open>distinct(bn x\\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "moreover"], ["proof (state)\nthis:\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop", "obtain x::name where \"x \\<sharp> \\<Psi>\" and \"x \\<sharp> P\" and \"x \\<sharp> Q\" and \"x \\<sharp> x\\<alpha>\" and \"x \\<sharp> xT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> Q;\n         x \\<sharp> x\\<alpha>; x \\<sharp> xT\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(generate_fresh \"name\") auto"], ["proof (state)\nthis:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<sharp> x\\<alpha>\n  x \\<sharp> xT\n\ngoal (1 subgoal):\n 1. Prop", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto> x\\<alpha> \\<prec> xT\n  length [] = inputLength (P \\<parallel> Q)\n  distinct []\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<sharp> x\\<alpha>\n  x \\<sharp> xT", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto> x\\<alpha> \\<prec> xT\n  length [] = inputLength (P \\<parallel> Q)\n  distinct []\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<sharp> x\\<alpha>\n  x \\<sharp> xT\n\ngoal (1 subgoal):\n 1. Prop", "using \\<open>bn x\\<alpha> \\<sharp>* \\<Psi>\\<close> \\<open>bn x\\<alpha> \\<sharp>* P\\<close> \\<open>bn x\\<alpha> \\<sharp>* Q\\<close> \\<open>bn x\\<alpha> \\<sharp>* subject x\\<alpha>\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto> x\\<alpha> \\<prec> xT\n  length [] = inputLength (P \\<parallel> Q)\n  distinct []\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<sharp> x\\<alpha>\n  x \\<sharp> xT\n  bn x\\<alpha> \\<sharp>* \\<Psi>\n  bn x\\<alpha> \\<sharp>* P\n  bn x\\<alpha> \\<sharp>* Q\n  bn x\\<alpha> \\<sharp>* subject x\\<alpha>\n\ngoal (1 subgoal):\n 1. Prop", "using rPar1 rPar2 rComm1 rComm2"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<parallel> Q \\<longmapsto> x\\<alpha> \\<prec> xT\n  length [] = inputLength (P \\<parallel> Q)\n  distinct []\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  length (bn x\\<alpha>) = residualLength (x\\<alpha> \\<prec> xT)\n  distinct (bn x\\<alpha>)\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<sharp> x\\<alpha>\n  x \\<sharp> xT\n  bn x\\<alpha> \\<sharp>* \\<Psi>\n  bn x\\<alpha> \\<sharp>* P\n  bn x\\<alpha> \\<sharp>* Q\n  bn x\\<alpha> \\<sharp>* subject x\\<alpha>\n  \\<lbrakk>\\<Psi> \\<otimes>\n           ?\\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto> x\\<alpha> \\<prec> ?P';\n   extractFrame Q = \\<langle>?A\\<^sub>Q, ?\\<Psi>\\<^sub>Q\\<rangle>;\n   distinct ?A\\<^sub>Q; ?A\\<^sub>Q \\<sharp>* \\<Psi>; ?A\\<^sub>Q \\<sharp>* P;\n   ?A\\<^sub>Q \\<sharp>* Q; ?A\\<^sub>Q \\<sharp>* x\\<alpha>;\n   ?A\\<^sub>Q \\<sharp>* ?P'; ?A\\<^sub>Q \\<sharp>* C;\n   xT = ?P' \\<parallel> Q\\<rbrakk>\n  \\<Longrightarrow> Prop\n  \\<lbrakk>\\<Psi> \\<otimes>\n           ?\\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> x\\<alpha> \\<prec> ?Q';\n   extractFrame P = \\<langle>?A\\<^sub>P, ?\\<Psi>\\<^sub>P\\<rangle>;\n   distinct ?A\\<^sub>P; ?A\\<^sub>P \\<sharp>* \\<Psi>; ?A\\<^sub>P \\<sharp>* P;\n   ?A\\<^sub>P \\<sharp>* Q; ?A\\<^sub>P \\<sharp>* x\\<alpha>;\n   ?A\\<^sub>P \\<sharp>* ?Q'; ?A\\<^sub>P \\<sharp>* C;\n   xT = P \\<parallel> ?Q'\\<rbrakk>\n  \\<Longrightarrow> Prop\n  \\<lbrakk>\\<Psi> \\<otimes>\n           ?\\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto> ?M\\<lparr>?N\\<rparr> \\<prec> ?P';\n   extractFrame P = \\<langle>?A\\<^sub>P, ?\\<Psi>\\<^sub>P\\<rangle>;\n   distinct ?A\\<^sub>P;\n   \\<Psi> \\<otimes>\n   ?\\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> ?K\\<lparr>\\<nu>*?xvec\\<rparr>\\<langle>?N\\<rangle> \\<prec> ?Q';\n   extractFrame Q = \\<langle>?A\\<^sub>Q, ?\\<Psi>\\<^sub>Q\\<rangle>;\n   distinct ?A\\<^sub>Q;\n   \\<Psi> \\<otimes>\n   ?\\<Psi>\\<^sub>P \\<otimes>\n   ?\\<Psi>\\<^sub>Q \\<turnstile> ?M \\<leftrightarrow> ?K;\n   distinct ?xvec; ?A\\<^sub>P \\<sharp>* \\<Psi>;\n   ?A\\<^sub>P \\<sharp>* ?\\<Psi>\\<^sub>Q; ?A\\<^sub>P \\<sharp>* P;\n   ?A\\<^sub>P \\<sharp>* ?M; ?A\\<^sub>P \\<sharp>* ?N;\n   ?A\\<^sub>P \\<sharp>* ?P'; ?A\\<^sub>P \\<sharp>* Q;\n   ?A\\<^sub>P \\<sharp>* ?xvec; ?A\\<^sub>P \\<sharp>* ?Q';\n   ?A\\<^sub>P \\<sharp>* ?A\\<^sub>Q; ?A\\<^sub>P \\<sharp>* C;\n   ?A\\<^sub>Q \\<sharp>* \\<Psi>; ?A\\<^sub>Q \\<sharp>* ?\\<Psi>\\<^sub>P;\n   ?A\\<^sub>Q \\<sharp>* P; ?A\\<^sub>Q \\<sharp>* ?K; ?A\\<^sub>Q \\<sharp>* ?N;\n   ?A\\<^sub>Q \\<sharp>* ?P'; ?A\\<^sub>Q \\<sharp>* Q;\n   ?A\\<^sub>Q \\<sharp>* ?xvec; ?A\\<^sub>Q \\<sharp>* ?Q';\n   ?A\\<^sub>Q \\<sharp>* C; ?xvec \\<sharp>* \\<Psi>;\n   ?xvec \\<sharp>* ?\\<Psi>\\<^sub>P; ?xvec \\<sharp>* P; ?xvec \\<sharp>* ?M;\n   ?xvec \\<sharp>* ?K; ?xvec \\<sharp>* Q; ?xvec \\<sharp>* ?\\<Psi>\\<^sub>Q;\n   ?xvec \\<sharp>* C; x\\<alpha> = \\<tau>;\n   xT = \\<lparr>\\<nu>*?xvec\\<rparr>?P' \\<parallel> ?Q'\\<rbrakk>\n  \\<Longrightarrow> Prop\n  \\<lbrakk>\\<Psi> \\<otimes>\n           ?\\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto> ?M\\<lparr>\\<nu>*?xvec\\<rparr>\\<langle>?N\\<rangle> \\<prec> ?P';\n   extractFrame P = \\<langle>?A\\<^sub>P, ?\\<Psi>\\<^sub>P\\<rangle>;\n   distinct ?A\\<^sub>P;\n   \\<Psi> \\<otimes>\n   ?\\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> ?K\\<lparr>?N\\<rparr> \\<prec> ?Q';\n   extractFrame Q = \\<langle>?A\\<^sub>Q, ?\\<Psi>\\<^sub>Q\\<rangle>;\n   distinct ?A\\<^sub>Q;\n   \\<Psi> \\<otimes>\n   ?\\<Psi>\\<^sub>P \\<otimes>\n   ?\\<Psi>\\<^sub>Q \\<turnstile> ?M \\<leftrightarrow> ?K;\n   distinct ?xvec; ?A\\<^sub>P \\<sharp>* \\<Psi>;\n   ?A\\<^sub>P \\<sharp>* ?\\<Psi>\\<^sub>Q; ?A\\<^sub>P \\<sharp>* P;\n   ?A\\<^sub>P \\<sharp>* ?M; ?A\\<^sub>P \\<sharp>* ?N;\n   ?A\\<^sub>P \\<sharp>* ?P'; ?A\\<^sub>P \\<sharp>* Q;\n   ?A\\<^sub>P \\<sharp>* ?xvec; ?A\\<^sub>P \\<sharp>* ?Q';\n   ?A\\<^sub>P \\<sharp>* ?A\\<^sub>Q; ?A\\<^sub>P \\<sharp>* C;\n   ?A\\<^sub>Q \\<sharp>* \\<Psi>; ?A\\<^sub>Q \\<sharp>* ?\\<Psi>\\<^sub>P;\n   ?A\\<^sub>Q \\<sharp>* P; ?A\\<^sub>Q \\<sharp>* ?K; ?A\\<^sub>Q \\<sharp>* ?N;\n   ?A\\<^sub>Q \\<sharp>* ?P'; ?A\\<^sub>Q \\<sharp>* Q;\n   ?A\\<^sub>Q \\<sharp>* ?xvec; ?A\\<^sub>Q \\<sharp>* ?Q';\n   ?A\\<^sub>Q \\<sharp>* C; ?xvec \\<sharp>* \\<Psi>;\n   ?xvec \\<sharp>* ?\\<Psi>\\<^sub>P; ?xvec \\<sharp>* P; ?xvec \\<sharp>* ?M;\n   ?xvec \\<sharp>* ?K; ?xvec \\<sharp>* Q; ?xvec \\<sharp>* ?\\<Psi>\\<^sub>Q;\n   ?xvec \\<sharp>* C; x\\<alpha> = \\<tau>;\n   xT = \\<lparr>\\<nu>*?xvec\\<rparr>?P' \\<parallel> ?Q'\\<rbrakk>\n  \\<Longrightarrow> Prop\n\ngoal (1 subgoal):\n 1. Prop", "by(cases rule: semanticsCases[of _ _ _ _ _ _ _ _ _ C x x]) (auto simp add: psi.inject residualInject residualInject')"], ["proof (state)\nthis:\n  Prop\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inputCases'[consumes 1, case_names cInput]:\n  fixes \\<Psi>   :: 'b\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n  and   P    :: \"('a, 'b, 'c) psi\"  \n  and   \\<alpha>    :: \"'a action\"\n  and   P'   :: \"('a, 'b, 'c) psi\"\n  \n  assumes Trans: \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto>\\<alpha> \\<prec> P'\"  \n  and     rInput: \"\\<And>K Tvec. \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K; set xvec \\<subseteq> supp N; length xvec = length Tvec; distinct xvec; \\<alpha>=K\\<lparr>N[xvec::=Tvec]\\<rparr>; P' = P[xvec::=Tvec]\\<rbrakk> \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>) (P[xvec::=Tvec])\"\n\n  shows \"Prop \\<alpha> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "fix xvec N P"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "assume Trans: \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto>\\<alpha> \\<prec> P'\"\n       and \"xvec \\<sharp>* \\<Psi>\" and \"xvec \\<sharp>* M\" and \"xvec \\<sharp>* \\<alpha>\" and \"xvec \\<sharp>* P'\" and \"distinct xvec\"\n       and rInput: \"\\<And>K Tvec. \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K; set xvec \\<subseteq> supp N; length xvec = length Tvec; distinct xvec; \\<alpha>=K\\<lparr>N[xvec::=Tvec]\\<rparr>; P'=P[xvec::=Tvec]\\<rbrakk> \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>) (P[xvec::=Tvec])\""], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n  xvec \\<sharp>* \\<Psi>\n  xvec \\<sharp>* M\n  xvec \\<sharp>* \\<alpha>\n  xvec \\<sharp>* P'\n  distinct xvec\n  \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> ?K;\n   set xvec \\<subseteq> supp N; length xvec = length ?Tvec; distinct xvec;\n   \\<alpha> = ?K\\<lparr>N[xvec::=?Tvec]\\<rparr>;\n   P' = P[xvec::=?Tvec]\\<rbrakk>\n  \\<Longrightarrow> Prop (?K\\<lparr>N[xvec::=?Tvec]\\<rparr>)\n                     (P[xvec::=?Tvec])\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "from Trans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'", "have \"bn \\<alpha> = []\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. bn \\<alpha> = []", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<Longrightarrow>\n    bn \\<alpha> = []", "by(ind_cases \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto>\\<alpha> \\<prec> P'\") (auto simp add: residualInject)"], ["proof (state)\nthis:\n  bn \\<alpha> = []\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "from Trans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'", "have \"distinct(bn \\<alpha>)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. distinct (bn \\<alpha>)", "by(auto dest: boundOutputDistinct)"], ["proof (state)\nthis:\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "have \"length(bn \\<alpha>) = residualLength(\\<alpha> \\<prec> P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')", "by simp"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "note Trans"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "have \"length xvec = inputLength(M\\<lparr>\\<lambda>*xvec N\\<rparr>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length xvec = inputLength (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P)", "by auto"], ["proof (state)\nthis:\n  length xvec = inputLength (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  length xvec = inputLength (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "note \\<open>distinct xvec\\<close>"], ["proof (state)\nthis:\n  distinct xvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  distinct xvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "note \\<open>length(bn \\<alpha>) = residualLength(\\<alpha> \\<prec> P')\\<close> \\<open>distinct(bn \\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "note \\<open>length(bn \\<alpha>) = residualLength(\\<alpha> \\<prec> P')\\<close> \\<open>distinct(bn \\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "note \\<open>length(bn \\<alpha>) = residualLength(\\<alpha> \\<prec> P')\\<close> \\<open>distinct(bn \\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "note \\<open>length(bn \\<alpha>) = residualLength(\\<alpha> \\<prec> P')\\<close> \\<open>distinct(bn \\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "note \\<open>length(bn \\<alpha>) = residualLength(\\<alpha> \\<prec> P')\\<close> \\<open>distinct(bn \\<alpha>)\\<close>"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "obtain x::name where \"x \\<sharp> \\<Psi>\" and \"x \\<sharp> P\" and \"x \\<sharp> M\" and \"x \\<sharp> xvec\" and \"x \\<sharp> \\<alpha>\" and \"x \\<sharp> P'\" and \"x \\<sharp> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M;\n         x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n         x \\<sharp> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(generate_fresh \"name\") auto"], ["proof (state)\nthis:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> M\n  x \\<sharp> xvec\n  x \\<sharp> \\<alpha>\n  x \\<sharp> P'\n  x \\<sharp> N\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n  length xvec = inputLength (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P)\n  distinct xvec\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> M\n  x \\<sharp> xvec\n  x \\<sharp> \\<alpha>\n  x \\<sharp> P'\n  x \\<sharp> N", "have \"Prop \\<alpha> P'\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n  length xvec = inputLength (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P)\n  distinct xvec\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> M\n  x \\<sharp> xvec\n  x \\<sharp> \\<alpha>\n  x \\<sharp> P'\n  x \\<sharp> N\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "using \\<open>bn \\<alpha> = []\\<close> \\<open>xvec \\<sharp>* \\<Psi>\\<close>\\<open>xvec \\<sharp>* M\\<close> \\<open>xvec \\<sharp>* \\<alpha>\\<close> \\<open>xvec \\<sharp>* P'\\<close> rInput"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n  length xvec = inputLength (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P)\n  distinct xvec\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P')\n  distinct (bn \\<alpha>)\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> M\n  x \\<sharp> xvec\n  x \\<sharp> \\<alpha>\n  x \\<sharp> P'\n  x \\<sharp> N\n  bn \\<alpha> = []\n  xvec \\<sharp>* \\<Psi>\n  xvec \\<sharp>* M\n  xvec \\<sharp>* \\<alpha>\n  xvec \\<sharp>* P'\n  \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> ?K;\n   set xvec \\<subseteq> supp N; length xvec = length ?Tvec; distinct xvec;\n   \\<alpha> = ?K\\<lparr>N[xvec::=?Tvec]\\<rparr>;\n   P' = P[xvec::=?Tvec]\\<rbrakk>\n  \\<Longrightarrow> Prop (?K\\<lparr>N[xvec::=?Tvec]\\<rparr>)\n                     (P[xvec::=?Tvec])\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "apply(cases rule: semanticsCases[of _ _ _ _ _ _ _ _ _ C x])"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>Ma K N Tvec P.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        \\<lbrakk>xvec \\<sharp>* \\<Psi>;\n         xvec \\<sharp>* (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P);\n         xvec \\<sharp>* (\\<alpha> \\<prec> P')\\<rbrakk>\n        \\<Longrightarrow> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P =\n                          Ma\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<and>\n                          \\<alpha> \\<prec> P' =\n                          K\\<lparr>N[xvec::=Tvec]\\<rparr> \\<prec> P[xvec::=Tvec] \\<and>\n                          \\<Psi> \\<turnstile> Ma \\<leftrightarrow> K \\<and>\n                          distinct xvec \\<and>\n                          set xvec \\<subseteq> supp N \\<and>\n                          length xvec = length Tvec \\<and>\n                          xvec \\<sharp>* Tvec \\<and>\n                          xvec \\<sharp>* \\<Psi> \\<and>\n                          xvec \\<sharp>* Ma \\<and> xvec \\<sharp>* K\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 2. \\<And>Ma K N P.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        M\\<lparr>\\<lambda>*xvec N\\<rparr>.P = Ma\\<langle>N\\<rangle>.P;\n        \\<alpha> \\<prec> P' = K\\<langle>N\\<rangle> \\<prec> P;\n        \\<Psi> \\<turnstile> Ma \\<leftrightarrow> K\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 3. \\<And>Cs P \\<phi>.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        M\\<lparr>\\<lambda>*xvec N\\<rparr>.P = Cases Cs;\n        \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P';\n        (\\<phi>, P) mem Cs; \\<Psi> \\<turnstile> \\<phi>; guarded P\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 4. \\<And>\\<Psi>\\<^sub>Q P \\<alpha>' P'a Q A\\<^sub>Q.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        \\<lbrakk>bn \\<alpha> \\<sharp>* \\<Psi>;\n         bn \\<alpha> \\<sharp>* (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P);\n         bn \\<alpha> \\<sharp>* (\\<alpha> \\<prec> P')\\<rbrakk>\n        \\<Longrightarrow> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P =\n                          P \\<parallel> Q \\<and>\n                          \\<alpha> \\<prec> P' =\n                          \\<alpha>' \\<prec> P'a \\<parallel> Q \\<and>\n                          bn \\<alpha> = bn \\<alpha>' \\<and>\n                          \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto> \\<alpha>' \\<prec> P'a \\<and>\n                          extractFrame Q =\n                          \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle> \\<and>\n                          distinct A\\<^sub>Q \\<and>\n                          A\\<^sub>Q \\<sharp>* P \\<and>\n                          A\\<^sub>Q \\<sharp>* Q \\<and>\n                          A\\<^sub>Q \\<sharp>* \\<Psi> \\<and>\n                          A\\<^sub>Q \\<sharp>* \\<alpha>' \\<and>\n                          A\\<^sub>Q \\<sharp>* P'a \\<and>\n                          A\\<^sub>Q \\<sharp>* C\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 5. \\<And>\\<Psi>\\<^sub>P Q \\<alpha>' Q' P A\\<^sub>P.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        \\<lbrakk>bn \\<alpha> \\<sharp>* \\<Psi>;\n         bn \\<alpha> \\<sharp>* (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P);\n         bn \\<alpha> \\<sharp>* (\\<alpha> \\<prec> P')\\<rbrakk>\n        \\<Longrightarrow> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P =\n                          P \\<parallel> Q \\<and>\n                          \\<alpha> \\<prec> P' =\n                          \\<alpha>' \\<prec> P \\<parallel> Q' \\<and>\n                          bn \\<alpha> = bn \\<alpha>' \\<and>\n                          \\<Psi> \\<otimes>\n                          \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> \\<alpha>' \\<prec> Q' \\<and>\n                          extractFrame P =\n                          \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle> \\<and>\n                          distinct A\\<^sub>P \\<and>\n                          A\\<^sub>P \\<sharp>* P \\<and>\n                          A\\<^sub>P \\<sharp>* Q \\<and>\n                          A\\<^sub>P \\<sharp>* \\<Psi> \\<and>\n                          A\\<^sub>P \\<sharp>* \\<alpha>' \\<and>\n                          A\\<^sub>P \\<sharp>* Q' \\<and>\n                          A\\<^sub>P \\<sharp>* C\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 6. \\<And>\\<Psi>\\<^sub>Q P Ma N P'a A\\<^sub>P \\<Psi>\\<^sub>P Q K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        M\\<lparr>\\<lambda>*xvec N\\<rparr>.P = P \\<parallel> Q;\n        \\<alpha> \\<prec> P' =\n        \\<tau> \\<prec> \\<lparr>\\<nu>*xvec\\<rparr>P'a \\<parallel> Q';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto> Ma\\<lparr>N\\<rparr> \\<prec> P'a;\n        extractFrame P = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> Ma \\<leftrightarrow> K;\n        A\\<^sub>P \\<sharp>* \\<Psi>; A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* P; A\\<^sub>P \\<sharp>* Ma;\n        A\\<^sub>P \\<sharp>* N; A\\<^sub>P \\<sharp>* P'a;\n        A\\<^sub>P \\<sharp>* Q; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* xvec;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* P; A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'a; A\\<^sub>Q \\<sharp>* Q;\n        A\\<^sub>Q \\<sharp>* Q'; A\\<^sub>Q \\<sharp>* xvec;\n        xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        xvec \\<sharp>* Q; xvec \\<sharp>* K; A\\<^sub>P \\<sharp>* C;\n        A\\<^sub>Q \\<sharp>* C; xvec \\<sharp>* C; distinct xvec\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 7. \\<And>\\<Psi>\\<^sub>Q P Ma xvec N P'a A\\<^sub>P \\<Psi>\\<^sub>P Q K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        M\\<lparr>\\<lambda>*xvec N\\<rparr>.P = P \\<parallel> Q;\n        \\<alpha> \\<prec> P' =\n        \\<tau> \\<prec> \\<lparr>\\<nu>*xvec\\<rparr>P'a \\<parallel> Q';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> P \\<longmapsto> Ma\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'a;\n        extractFrame P = \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> Q \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame Q = \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> Ma \\<leftrightarrow> K;\n        A\\<^sub>P \\<sharp>* \\<Psi>; A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* P; A\\<^sub>P \\<sharp>* Ma;\n        A\\<^sub>P \\<sharp>* N; A\\<^sub>P \\<sharp>* P'a;\n        A\\<^sub>P \\<sharp>* Q; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* xvec;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* P; A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'a; A\\<^sub>Q \\<sharp>* Q;\n        A\\<^sub>Q \\<sharp>* Q'; A\\<^sub>Q \\<sharp>* xvec;\n        xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        xvec \\<sharp>* Q; xvec \\<sharp>* K; A\\<^sub>P \\<sharp>* C;\n        A\\<^sub>Q \\<sharp>* C; xvec \\<sharp>* C; distinct xvec\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 8. \\<And>P Ma xvec y yvec N P'a.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        \\<lbrakk>bn \\<alpha> \\<sharp>* \\<Psi>;\n         bn \\<alpha> \\<sharp>* (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P);\n         bn \\<alpha> \\<sharp>* (\\<alpha> \\<prec> P'); x \\<sharp> \\<Psi>;\n         x \\<sharp> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P;\n         x \\<sharp> \\<alpha> \\<prec> P'; x \\<sharp> bn \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P =\n                          \\<lparr>\\<nu>x\\<rparr>P \\<and>\n                          \\<alpha> \\<prec> P' =\n                          Ma\\<lparr>\\<nu>*(xvec @\n     x # yvec)\\<rparr>\\<langle>N\\<rangle> \\<prec> P'a \\<and>\n                          bn \\<alpha> = xvec @ y # yvec \\<and>\n                          \\<Psi> \\<rhd> P \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n                                   yvec)\\<rparr>\\<langle>N\\<rangle> \\<prec> P'a \\<and>\n                          x \\<in> supp N \\<and>\n                          x \\<sharp> xvec \\<and>\n                          x \\<sharp> yvec \\<and>\n                          distinct xvec \\<and>\n                          distinct yvec \\<and>\n                          xvec \\<sharp>* \\<Psi> \\<and>\n                          xvec \\<sharp>* P \\<and>\n                          xvec \\<sharp>* Ma \\<and>\n                          xvec \\<sharp>* yvec \\<and>\n                          yvec \\<sharp>* \\<Psi> \\<and>\n                          yvec \\<sharp>* P \\<and> yvec \\<sharp>* Ma\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 9. \\<And>P \\<alpha>' P'a.\n       \\<lbrakk>length (bn \\<alpha>) = residualLength (\\<alpha> \\<prec> P');\n        distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n        x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n        x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n        \\<And>K Tvec.\n           \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n            set xvec \\<subseteq> supp N; length xvec = length Tvec;\n            distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n            P' = P[xvec::=Tvec]\\<rbrakk>\n           \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                              (P[xvec::=Tvec]);\n        \\<lbrakk>bn \\<alpha> \\<sharp>* \\<Psi>;\n         bn \\<alpha> \\<sharp>* (M\\<lparr>\\<lambda>*xvec N\\<rparr>.P);\n         bn \\<alpha> \\<sharp>* (\\<alpha> \\<prec> P');\n         ?x2.16 \\<sharp> \\<Psi>;\n         ?x2.16 \\<sharp> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P;\n         ?x2.16 \\<sharp> \\<alpha> \\<prec> P';\n         ?x2.16 \\<sharp> bn \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P =\n                          \\<lparr>\\<nu>?x2.16\\<rparr>P \\<and>\n                          \\<alpha> \\<prec> P' =\n                          \\<alpha>' \\<prec> \\<lparr>\\<nu>?x2.16\\<rparr>P'a \\<and>\n                          bn \\<alpha> = bn \\<alpha>' \\<and>\n                          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha>' \\<prec> P'a \\<and>\n                          ?x2.16 \\<sharp> \\<Psi> \\<and>\n                          ?x2.16 \\<sharp> \\<alpha>' \\<and>\n                          bn \\<alpha>' \\<sharp>* subject \\<alpha>' \\<and>\n                          distinct (bn \\<alpha>')\\<rbrakk>\n       \\<Longrightarrow> Prop \\<alpha> P'\n 10. \\<And>P.\n        \\<lbrakk>length (bn \\<alpha>) =\n                 residualLength (\\<alpha> \\<prec> P');\n         distinct (bn \\<alpha>); x \\<sharp> \\<Psi>; x \\<sharp> P;\n         x \\<sharp> M; x \\<sharp> xvec; x \\<sharp> \\<alpha>; x \\<sharp> P';\n         x \\<sharp> N; bn \\<alpha> = []; xvec \\<sharp>* \\<Psi>;\n         xvec \\<sharp>* M; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* P';\n         \\<And>K Tvec.\n            \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n             set xvec \\<subseteq> supp N; length xvec = length Tvec;\n             distinct xvec; \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>;\n             P' = P[xvec::=Tvec]\\<rbrakk>\n            \\<Longrightarrow> Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>)\n                               (P[xvec::=Tvec]);\n         M\\<lparr>\\<lambda>*xvec N\\<rparr>.P = !P;\n         \\<Psi> \\<rhd> P \\<parallel> !P \\<longmapsto> \\<alpha> \\<prec> P';\n         guarded P\\<rbrakk>\n        \\<Longrightarrow> Prop \\<alpha> P'", "by(fastforce simp add: residualInject psi.inject inputChainFresh)+"], ["proof (state)\nthis:\n  Prop \\<alpha> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*?xveca2 ?Na2\\<rparr>.?Pa2 \\<longmapsto> \\<alpha> \\<prec> P';\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* M;\n   ?xveca2 \\<sharp>* \\<alpha>; ?xveca2 \\<sharp>* P'; distinct ?xveca2;\n   \\<And>K Tvec.\n      \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n       set ?xveca2 \\<subseteq> supp ?Na2; length ?xveca2 = length Tvec;\n       distinct ?xveca2; \\<alpha> = K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>;\n       P' = ?Pa2[?xveca2::=Tvec]\\<rbrakk>\n      \\<Longrightarrow> Prop (K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>)\n                         (?Pa2[?xveca2::=Tvec])\\<rbrakk>\n  \\<Longrightarrow> Prop \\<alpha> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "note Goal = this"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*?xveca2 ?Na2\\<rparr>.?Pa2 \\<longmapsto> \\<alpha> \\<prec> P';\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* M;\n   ?xveca2 \\<sharp>* \\<alpha>; ?xveca2 \\<sharp>* P'; distinct ?xveca2;\n   \\<And>K Tvec.\n      \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n       set ?xveca2 \\<subseteq> supp ?Na2; length ?xveca2 = length Tvec;\n       distinct ?xveca2; \\<alpha> = K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>;\n       P' = ?Pa2[?xveca2::=Tvec]\\<rbrakk>\n      \\<Longrightarrow> Prop (K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>)\n                         (?Pa2[?xveca2::=Tvec])\\<rbrakk>\n  \\<Longrightarrow> Prop \\<alpha> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*?xveca2 ?Na2\\<rparr>.?Pa2 \\<longmapsto> \\<alpha> \\<prec> P';\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* M;\n   ?xveca2 \\<sharp>* \\<alpha>; ?xveca2 \\<sharp>* P'; distinct ?xveca2;\n   \\<And>K Tvec.\n      \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n       set ?xveca2 \\<subseteq> supp ?Na2; length ?xveca2 = length Tvec;\n       distinct ?xveca2; \\<alpha> = K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>;\n       P' = ?Pa2[?xveca2::=Tvec]\\<rbrakk>\n      \\<Longrightarrow> Prop (K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>)\n                         (?Pa2[?xveca2::=Tvec])\\<rbrakk>\n  \\<Longrightarrow> Prop \\<alpha> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "obtain p :: \"name prm\" where \"(p \\<bullet> xvec) \\<sharp>* \\<Psi>\" and \"(p \\<bullet> xvec) \\<sharp>* M\" and \"(p \\<bullet> xvec) \\<sharp>* N\" and \"(p \\<bullet> xvec) \\<sharp>* P\"\n                                    and \"(p \\<bullet> xvec) \\<sharp>* \\<alpha>\" and \"(p \\<bullet> xvec) \\<sharp>* P'\" and S: \"set p \\<subseteq> set xvec \\<times> set(p \\<bullet> xvec)\"\n                                    and \"distinctPerm p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> xvec) \\<sharp>* \\<Psi>;\n         (p \\<bullet> xvec) \\<sharp>* M; (p \\<bullet> xvec) \\<sharp>* N;\n         (p \\<bullet> xvec) \\<sharp>* P;\n         (p \\<bullet> xvec) \\<sharp>* \\<alpha>;\n         (p \\<bullet> xvec) \\<sharp>* P';\n         set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n         distinctPerm p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac xvec=xvec and c=\"(\\<Psi>, M, N, P, \\<alpha>, P')\" in name_list_avoiding) auto"], ["proof (state)\nthis:\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* M\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  (p \\<bullet> xvec) \\<sharp>* P'\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "from Trans \\<open>(p \\<bullet> xvec) \\<sharp>* N\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* P\\<close> S"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)", "have \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*(p \\<bullet> xvec) (p \\<bullet> N)\\<rparr>.(p \\<bullet> P) \\<longmapsto>\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*p \\<bullet>\n                                     xvec p \\<bullet>\n    N\\<rparr>.p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P'", "by(simp add: inputChainAlpha')"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*p \\<bullet>\n                                   xvec p \\<bullet>\n  N\\<rparr>.p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*p \\<bullet>\n                                   xvec p \\<bullet>\n  N\\<rparr>.p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "{"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*p \\<bullet>\n                                   xvec p \\<bullet>\n  N\\<rparr>.p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "fix K Tvec"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "assume \"\\<Psi> \\<turnstile> M \\<leftrightarrow> K\""], ["proof (state)\nthis:\n  \\<Psi> \\<turnstile> M \\<leftrightarrow> K\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<turnstile> M \\<leftrightarrow> K\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "assume \"set(p \\<bullet> xvec) \\<subseteq> supp(p \\<bullet> N)\""], ["proof (state)\nthis:\n  set (p \\<bullet> xvec) \\<subseteq> supp (p \\<bullet> N)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "hence \"(p \\<bullet> set(p \\<bullet> xvec)) \\<subseteq> (p \\<bullet> supp(p \\<bullet> N))\""], ["proof (prove)\nusing this:\n  set (p \\<bullet> xvec) \\<subseteq> supp (p \\<bullet> N)\n\ngoal (1 subgoal):\n 1. p \\<bullet> set (p \\<bullet> xvec)\n    \\<subseteq> p \\<bullet> supp (p \\<bullet> N)", "by simp"], ["proof (state)\nthis:\n  p \\<bullet> set (p \\<bullet> xvec)\n  \\<subseteq> p \\<bullet> supp (p \\<bullet> N)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "with \\<open>distinctPerm p\\<close>"], ["proof (chain)\npicking this:\n  distinctPerm p\n  p \\<bullet> set (p \\<bullet> xvec)\n  \\<subseteq> p \\<bullet> supp (p \\<bullet> N)", "have \"set xvec \\<subseteq> supp N\""], ["proof (prove)\nusing this:\n  distinctPerm p\n  p \\<bullet> set (p \\<bullet> xvec)\n  \\<subseteq> p \\<bullet> supp (p \\<bullet> N)\n\ngoal (1 subgoal):\n 1. set xvec \\<subseteq> supp N", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  set xvec \\<subseteq> supp N\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  set xvec \\<subseteq> supp N\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "assume \"length(p \\<bullet> xvec) = length(Tvec::'a list)\""], ["proof (state)\nthis:\n  length (p \\<bullet> xvec) = length Tvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "hence \"length xvec = length Tvec\""], ["proof (prove)\nusing this:\n  length (p \\<bullet> xvec) = length Tvec\n\ngoal (1 subgoal):\n 1. length xvec = length Tvec", "by simp"], ["proof (state)\nthis:\n  length xvec = length Tvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  length xvec = length Tvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "assume \"distinct xvec\""], ["proof (state)\nthis:\n  distinct xvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  distinct xvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "assume \"\\<alpha>=K\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=Tvec]\\<rparr>\" and \"P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=Tvec]\""], ["proof (state)\nthis:\n  \\<alpha> = K\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=Tvec]\\<rparr>\n  P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=Tvec]\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "with \\<open>(p \\<bullet> xvec) \\<sharp>* P\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* N\\<close> \\<open>distinctPerm p\\<close> \\<open>length xvec = length Tvec\\<close> S"], ["proof (chain)\npicking this:\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* N\n  distinctPerm p\n  length xvec = length Tvec\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  \\<alpha> = K\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=Tvec]\\<rparr>\n  P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=Tvec]", "have \"\\<alpha>=K\\<lparr>(N[xvec::=Tvec])\\<rparr>\" and \"P' = P[xvec::=Tvec]\""], ["proof (prove)\nusing this:\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* N\n  distinctPerm p\n  length xvec = length Tvec\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  \\<alpha> = K\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=Tvec]\\<rparr>\n  P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=Tvec]\n\ngoal (1 subgoal):\n 1. \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr> &&& P' = P[xvec::=Tvec]", "by(simp add: renaming substTerm.renaming)+"], ["proof (state)\nthis:\n  \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>\n  P' = P[xvec::=Tvec]\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<turnstile> M \\<leftrightarrow> K\n  set xvec \\<subseteq> supp N\n  length xvec = length Tvec\n  distinct xvec\n  \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>\n  P' = P[xvec::=Tvec]", "have \"Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>) (P[xvec::=Tvec])\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<turnstile> M \\<leftrightarrow> K\n  set xvec \\<subseteq> supp N\n  length xvec = length Tvec\n  distinct xvec\n  \\<alpha> = K\\<lparr>N[xvec::=Tvec]\\<rparr>\n  P' = P[xvec::=Tvec]\n\ngoal (1 subgoal):\n 1. Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>) (P[xvec::=Tvec])", "by(rule rInput)"], ["proof (state)\nthis:\n  Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>) (P[xvec::=Tvec])\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "with \\<open>length xvec = length Tvec\\<close> S \\<open>distinctPerm p\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* N\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* P\\<close>"], ["proof (chain)\npicking this:\n  length xvec = length Tvec\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P\n  Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>) (P[xvec::=Tvec])", "have \"Prop (K\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=Tvec]\\<rparr>) ((p \\<bullet> P)[(p \\<bullet> xvec)::=Tvec])\""], ["proof (prove)\nusing this:\n  length xvec = length Tvec\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P\n  Prop (K\\<lparr>N[xvec::=Tvec]\\<rparr>) (P[xvec::=Tvec])\n\ngoal (1 subgoal):\n 1. Prop (K\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=Tvec]\\<rparr>)\n     ((p \\<bullet> P)[(p \\<bullet> xvec)::=Tvec])", "by(simp add: renaming substTerm.renaming)"], ["proof (state)\nthis:\n  Prop (K\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=Tvec]\\<rparr>)\n   ((p \\<bullet> P)[(p \\<bullet> xvec)::=Tvec])\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> ?K2;\n   set (p \\<bullet> xvec) \\<subseteq> supp (p \\<bullet> N);\n   length (p \\<bullet> xvec) = length ?Tvec2; distinct xvec;\n   \\<alpha> =\n   ?K2\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>;\n   P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2]\\<rbrakk>\n  \\<Longrightarrow> Prop\n                     (?K2\\<lparr>(p \\<bullet>\n                                  N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>)\n                     ((p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2])\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> ?K2;\n   set (p \\<bullet> xvec) \\<subseteq> supp (p \\<bullet> N);\n   length (p \\<bullet> xvec) = length ?Tvec2; distinct xvec;\n   \\<alpha> =\n   ?K2\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>;\n   P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2]\\<rbrakk>\n  \\<Longrightarrow> Prop\n                     (?K2\\<lparr>(p \\<bullet>\n                                  N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>)\n                     ((p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2])\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "from Trans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'", "have \"distinct xvec\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. distinct xvec", "by(rule inputDistinct)"], ["proof (state)\nthis:\n  distinct xvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "hence \"distinct(p \\<bullet> xvec)\""], ["proof (prove)\nusing this:\n  distinct xvec\n\ngoal (1 subgoal):\n 1. distinct (p \\<bullet> xvec)", "by simp"], ["proof (state)\nthis:\n  distinct (p \\<bullet> xvec)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*?xveca2 ?Na2\\<rparr>.?Pa2 \\<longmapsto> \\<alpha> \\<prec> P';\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* M;\n   ?xveca2 \\<sharp>* \\<alpha>; ?xveca2 \\<sharp>* P'; distinct ?xveca2;\n   \\<And>K Tvec.\n      \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n       set ?xveca2 \\<subseteq> supp ?Na2; length ?xveca2 = length Tvec;\n       distinct ?xveca2; \\<alpha> = K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>;\n       P' = ?Pa2[?xveca2::=Tvec]\\<rbrakk>\n      \\<Longrightarrow> Prop (K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>)\n                         (?Pa2[?xveca2::=Tvec])\\<rbrakk>\n  \\<Longrightarrow> Prop \\<alpha> P'\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*p \\<bullet>\n                                   xvec p \\<bullet>\n  N\\<rparr>.p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P'\n  \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> ?K2;\n   set (p \\<bullet> xvec) \\<subseteq> supp (p \\<bullet> N);\n   length (p \\<bullet> xvec) = length ?Tvec2; distinct xvec;\n   \\<alpha> =\n   ?K2\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>;\n   P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2]\\<rbrakk>\n  \\<Longrightarrow> Prop\n                     (?K2\\<lparr>(p \\<bullet>\n                                  N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>)\n                     ((p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2])\n  distinct (p \\<bullet> xvec)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*?xveca2 ?Na2\\<rparr>.?Pa2 \\<longmapsto> \\<alpha> \\<prec> P';\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* M;\n   ?xveca2 \\<sharp>* \\<alpha>; ?xveca2 \\<sharp>* P'; distinct ?xveca2;\n   \\<And>K Tvec.\n      \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n       set ?xveca2 \\<subseteq> supp ?Na2; length ?xveca2 = length Tvec;\n       distinct ?xveca2; \\<alpha> = K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>;\n       P' = ?Pa2[?xveca2::=Tvec]\\<rbrakk>\n      \\<Longrightarrow> Prop (K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>)\n                         (?Pa2[?xveca2::=Tvec])\\<rbrakk>\n  \\<Longrightarrow> Prop \\<alpha> P'\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*p \\<bullet>\n                                   xvec p \\<bullet>\n  N\\<rparr>.p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P'\n  \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> ?K2;\n   set (p \\<bullet> xvec) \\<subseteq> supp (p \\<bullet> N);\n   length (p \\<bullet> xvec) = length ?Tvec2; distinct xvec;\n   \\<alpha> =\n   ?K2\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>;\n   P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2]\\<rbrakk>\n  \\<Longrightarrow> Prop\n                     (?K2\\<lparr>(p \\<bullet>\n                                  N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>)\n                     ((p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2])\n  distinct (p \\<bullet> xvec)\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "using \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* M\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<alpha>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* P'\\<close> \\<open>distinct xvec\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*?xveca2 ?Na2\\<rparr>.?Pa2 \\<longmapsto> \\<alpha> \\<prec> P';\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* M;\n   ?xveca2 \\<sharp>* \\<alpha>; ?xveca2 \\<sharp>* P'; distinct ?xveca2;\n   \\<And>K Tvec.\n      \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K;\n       set ?xveca2 \\<subseteq> supp ?Na2; length ?xveca2 = length Tvec;\n       distinct ?xveca2; \\<alpha> = K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>;\n       P' = ?Pa2[?xveca2::=Tvec]\\<rbrakk>\n      \\<Longrightarrow> Prop (K\\<lparr>?Na2[?xveca2::=Tvec]\\<rparr>)\n                         (?Pa2[?xveca2::=Tvec])\\<rbrakk>\n  \\<Longrightarrow> Prop \\<alpha> P'\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*p \\<bullet>\n                                   xvec p \\<bullet>\n  N\\<rparr>.p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P'\n  \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> ?K2;\n   set (p \\<bullet> xvec) \\<subseteq> supp (p \\<bullet> N);\n   length (p \\<bullet> xvec) = length ?Tvec2; distinct xvec;\n   \\<alpha> =\n   ?K2\\<lparr>(p \\<bullet> N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>;\n   P' = (p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2]\\<rbrakk>\n  \\<Longrightarrow> Prop\n                     (?K2\\<lparr>(p \\<bullet>\n                                  N)[(p \\<bullet> xvec)::=?Tvec2]\\<rparr>)\n                     ((p \\<bullet> P)[(p \\<bullet> xvec)::=?Tvec2])\n  distinct (p \\<bullet> xvec)\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* M\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  (p \\<bullet> xvec) \\<sharp>* P'\n  distinct xvec\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "by(rule_tac Goal) assumption+"], ["proof (state)\nthis:\n  Prop \\<alpha> P'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma outputCases'[consumes 1, case_names cOutput]:\n  fixes \\<Psi> :: 'b\n  and   M  :: 'a\n  and   N  :: 'a\n  and   P  :: \"('a, 'b, 'c) psi\"  \n  and   \\<alpha>  :: \"'a action\"\n  and   P' :: \"('a, 'b, 'c) psi\"\n  \n  assumes \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<longmapsto>\\<alpha> \\<prec> P'\"\n  and     \"\\<And>K. \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> K; subject \\<alpha>=Some K\\<rbrakk> \\<Longrightarrow> Prop (K\\<langle>N\\<rangle>) P\"\n\n  shows \"Prop \\<alpha> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "using assms"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<longmapsto> \\<alpha> \\<prec> P'\n  \\<lbrakk>\\<Psi> \\<turnstile> M \\<leftrightarrow> ?K;\n   subject \\<alpha> = Some ?K\\<rbrakk>\n  \\<Longrightarrow> Prop (?K\\<langle>N\\<rangle>) P\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> P'", "by(cases rule: semantics.cases) (auto simp add: residualInject psi.inject)"], ["", "lemma tauOutput[dest]:\n  fixes \\<Psi>   :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n  and   P'   :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'\"\n  \n  shows False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "fix xvec N P'"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "assume \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'\"\n    and    \"xvec \\<sharp>* \\<Psi>\"\n    and    \"xvec \\<sharp>* P\"\n    and    \"xvec \\<sharp>* M\""], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'\n  xvec \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  xvec \\<sharp>* M\n\ngoal (1 subgoal):\n 1. False", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'\n  xvec \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  xvec \\<sharp>* M\n\ngoal (1 subgoal):\n 1. False", "obtain x:: name where \"x \\<sharp> \\<Psi>\" and \"x \\<sharp> P\" and \"x \\<sharp> xvec\" and \"x \\<sharp> M\" and \"x \\<sharp> N\" and \"x \\<sharp> P'\"\n                               and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec;\n         x \\<sharp> M; x \\<sharp> N; x \\<sharp> P';\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"(\\<Psi>, M, xvec, N, P')\" in tauActionUnfold) auto"], ["proof (state)\nthis:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> xvec\n  x \\<sharp> M\n  x \\<sharp> N\n  x \\<sharp> P'\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. False", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'\n  xvec \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  xvec \\<sharp>* M\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> xvec\n  x \\<sharp> M\n  x \\<sharp> N\n  x \\<sharp> P'\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)", "have False"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'\n  xvec \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  xvec \\<sharp>* M\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> xvec\n  x \\<sharp> M\n  x \\<sharp> N\n  x \\<sharp> P'\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>(nameTerm\n             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n            nameTerm\n             x\\<langle>nameTerm\n                        x\\<rangle>.P) \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n     xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n     x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n     x \\<sharp> N; x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> False", "apply(erule_tac resCases')"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n     x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n     x \\<sharp> N; x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<Psi>\n 2. \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n     x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n     x \\<sharp> N; x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>\n 3. \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n     x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n     x \\<sharp> N; x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> P'\n 4. \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n     x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n     x \\<sharp> N; x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* \\<Psi>\n 5. \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n     x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n     x \\<sharp> N; x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* (nameTerm\n          x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n 6. \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n     x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n     x \\<sharp> N; x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* subject\n         (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>)\n 7. \\<And>Ma xvec yvec y N P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n  yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n                         N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> Ma; distinct xvec;\n        distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n        yvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* (nameTerm\n                         x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                        nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<sharp> nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                   nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        yvec \\<sharp>* (nameTerm\n                         x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                        nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        xvec \\<sharp>* Ma; y \\<sharp> Ma; yvec \\<sharp>* Ma;\n        xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P'\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Ma xvec yvec y N P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n  yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n                         N)\\<rangle> \\<prec> [(x, y)] \\<bullet> P';\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P'\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule_tac parOutputCases)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Ma xvec yvec y N P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P'\\<rbrakk>\n       \\<Longrightarrow> (xvec @ yvec) \\<sharp>* \\<Psi>\n 2. \\<And>Ma xvec yvec y N P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P'\\<rbrakk>\n       \\<Longrightarrow> (xvec @\n                          yvec) \\<sharp>* nameTerm\n     x\\<lparr>\\<rparr>nameTerm x.\\<zero>\n 3. \\<And>Ma xvec yvec y N P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P'\\<rbrakk>\n       \\<Longrightarrow> (xvec @\n                          yvec) \\<sharp>* nameTerm\n     x\\<langle>nameTerm x\\<rangle>.P\n 4. \\<And>Ma xvec yvec y N P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P'\\<rbrakk>\n       \\<Longrightarrow> (xvec @ yvec) \\<sharp>* Ma\n 5. \\<And>Ma xvec yvec y N P' P'aa A\\<^sub>Q \\<Psi>\\<^sub>Q.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n              yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n                                     N)\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q; A\\<^sub>Q \\<sharp>* \\<Psi>;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* Ma; A\\<^sub>Q \\<sharp>* (xvec @ yvec);\n        A\\<^sub>Q \\<sharp>* ([(x, y)] \\<bullet> N);\n        A\\<^sub>Q \\<sharp>* ?C12 Ma xvec yvec y N P';\n        A\\<^sub>Q \\<sharp>* (xvec @ yvec); distinct (xvec @ yvec)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>Ma xvec yvec y N P' Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n          yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* Ma; A\\<^sub>P \\<sharp>* (xvec @ yvec);\n        A\\<^sub>P \\<sharp>* ([(x, y)] \\<bullet> N);\n        A\\<^sub>P \\<sharp>* ?C12 Ma xvec yvec y N P';\n        A\\<^sub>P \\<sharp>* (xvec @ yvec); distinct (xvec @ yvec)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp add: action.inject psi.inject)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xvec yvec y P' P'aa A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* M;\n        y \\<sharp> M; yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n        xvec = xvec @ y # yvec; P' = P';\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n     yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> P'aa;\n        A\\<^sub>Q = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>Ma xvec yvec y N P' Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n          yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* Ma; A\\<^sub>P \\<sharp>* (xvec @ yvec);\n        A\\<^sub>P \\<sharp>* ([(x, y)] \\<bullet> N);\n        A\\<^sub>P \\<sharp>* ?C12 Ma xvec yvec y N P';\n        A\\<^sub>P \\<sharp>* (xvec @ yvec); distinct (xvec @ yvec)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(drule_tac nilTrans(2)[where xvec=\"[]\", simplified])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xvec yvec y P' P'aa A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* M;\n        y \\<sharp> M; yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n        xvec = xvec @ y # yvec; P' = P'; A\\<^sub>Q = []; False\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>Ma xvec yvec y N P' Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n          yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* Ma; A\\<^sub>P \\<sharp>* (xvec @ yvec);\n        A\\<^sub>P \\<sharp>* ([(x, y)] \\<bullet> N);\n        A\\<^sub>P \\<sharp>* ?C12 Ma xvec yvec y N P';\n        A\\<^sub>P \\<sharp>* (xvec @ yvec); distinct (xvec @ yvec)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Ma xvec yvec y N P' Q' A\\<^sub>P.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* Ma;\n        y \\<sharp> Ma; yvec \\<sharp>* Ma; xvec \\<sharp>* yvec;\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>N\\<rangle>;\n        P' = P';\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n  yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> Q';\n        A\\<^sub>P = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp add: action.inject)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xvec yvec y P' Q' A\\<^sub>P.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        x \\<sharp> xvec \\<and> xvec \\<sharp>* P; y \\<sharp> P;\n        x \\<sharp> yvec \\<and> yvec \\<sharp>* P; xvec \\<sharp>* M;\n        y \\<sharp> M; yvec \\<sharp>* M; xvec \\<sharp>* yvec;\n        xvec = xvec @ y # yvec; P' = P';\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> Q';\n        A\\<^sub>P = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xvec yvec y P' Q' A\\<^sub>P.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        y \\<sharp> P; xvec \\<sharp>* M; y \\<sharp> M; yvec \\<sharp>* M;\n        xvec \\<sharp>* yvec; xvec = xvec @ y # yvec;\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*(xvec @\n yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet> N)\\<rangle> \\<prec> Q';\n        x \\<sharp> xvec; xvec \\<sharp>* P; x \\<sharp> yvec;\n        yvec \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule outputCases')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xvec yvec y P' Q' A\\<^sub>P K.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<in> supp N; x \\<sharp> N; x \\<sharp> P'; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; distinct xvec; distinct yvec;\n        xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>; yvec \\<sharp>* \\<Psi>;\n        y \\<sharp> P; xvec \\<sharp>* M; y \\<sharp> M; yvec \\<sharp>* M;\n        xvec \\<sharp>* yvec; xvec = xvec @ y # yvec; x \\<sharp> xvec;\n        xvec \\<sharp>* P; x \\<sharp> yvec; yvec \\<sharp>* P;\n        \\<Psi> \\<otimes> \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> K;\n        subject\n         (M\\<lparr>\\<nu>*(xvec @\n                          yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n           N)\\<rangle>) =\n        Some K\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(auto simp add: ntEq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P';\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule_tac parCases')"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* \\<Psi>\n 2. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* nameTerm\n            x\\<lparr>\\<rparr>nameTerm x.\\<zero>\n 3. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* nameTerm\n            x\\<langle>nameTerm x\\<rangle>.P\n 4. \\<And>P'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'\\<rbrakk>\n       \\<Longrightarrow> bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* subject\n            (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>)\n 5. \\<And>P' P'aa A\\<^sub>Q \\<Psi>\\<^sub>Q.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q; A\\<^sub>Q \\<sharp>* \\<Psi>;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>);\n        A\\<^sub>Q \\<sharp>* P'aa; A\\<^sub>Q \\<sharp>* ?C22 P';\n        P' =\n        P'aa \\<parallel> nameTerm x\\<langle>nameTerm x\\<rangle>.P\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>P' Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>);\n        A\\<^sub>P \\<sharp>* Q'; A\\<^sub>P \\<sharp>* ?C22 P';\n        P' =\n        nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel> Q'\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>P' \\<Psi>\\<^sub>Q Ma N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> Ma\\<lparr>N\\<rparr> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> Ma \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* Ma; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* ?C22 P';\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* ?C22 P'; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* Ma; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* ?C22 P';\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> = \\<tau>;\n        P' = \\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel> Q'\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>P' \\<Psi>\\<^sub>Q Ma xvec N P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N; x \\<sharp> [x].P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P';\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> Ma\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> Ma \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* Ma; A\\<^sub>P \\<sharp>* N;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* ?C22 P';\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* N;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* ?C22 P'; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* Ma; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* ?C22 P';\n        M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> = \\<tau>;\n        P' = \\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel> Q'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(auto simp add: abs_fresh)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P'aa.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(P'aa \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'aa\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>Q'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               Q');\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(drule_tac nilTrans(2)[where xvec=\"[]\", simplified])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P'aa.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(P'aa \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        False\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>Q'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               Q');\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               Q');\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(erule_tac outputCases')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q' K.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               Q');\n        \\<Psi> \\<otimes> \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> K;\n        subject (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) =\n        Some K\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>xvec \\<sharp>* \\<Psi>; xvec \\<sharp>* P; xvec \\<sharp>* M;\n        x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> xvec; x \\<sharp> M;\n        x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               Q');\n        \\<Psi> \\<otimes>\n        \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> M\\<rbrakk>\n       \\<Longrightarrow> False", "by(simp add: ntEq)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> ?P'a2;\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* P;\n   ?xveca2 \\<sharp>* M\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> ?P'a2;\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* P;\n   ?xveca2 \\<sharp>* M\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "obtain p where \"set p \\<subseteq> set xvec \\<times> set(p \\<bullet> xvec)\" and \"(p \\<bullet> xvec) \\<sharp>* N\" and  \"(p \\<bullet> xvec) \\<sharp>* P'\" \n                      and \"(p \\<bullet> xvec) \\<sharp>* \\<Psi>\" and \"(p \\<bullet> xvec) \\<sharp>* P\" and \"(p \\<bullet> xvec) \\<sharp>* M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n         (p \\<bullet> xvec) \\<sharp>* N; (p \\<bullet> xvec) \\<sharp>* P';\n         (p \\<bullet> xvec) \\<sharp>* \\<Psi>;\n         (p \\<bullet> xvec) \\<sharp>* P;\n         (p \\<bullet> xvec) \\<sharp>* M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac c=\"(N, P', \\<Psi>, P, M)\" and xvec=xvec in name_list_avoiding) auto"], ["proof (state)\nthis:\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P'\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* M\n\ngoal (1 subgoal):\n 1. False", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> ?P'a2;\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* P;\n   ?xveca2 \\<sharp>* M\\<rbrakk>\n  \\<Longrightarrow> False\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P'\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* M", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> ?P'a2;\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* P;\n   ?xveca2 \\<sharp>* M\\<rbrakk>\n  \\<Longrightarrow> False\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P'\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* M\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> ?P'a2;\n   ?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* P;\n   ?xveca2 \\<sharp>* M\\<rbrakk>\n  \\<Longrightarrow> False\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P'\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* M\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P'\n\ngoal (1 subgoal):\n 1. False", "by(simp add: boundOutputChainAlpha'' residualInject) auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauInput[dest]:\n  fixes \\<Psi> :: 'b\n  and   P  :: \"('a, 'b, 'c) psi\"\n  and   M  :: 'a\n  and   N  :: 'a\n  and   P' :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>M\\<lparr>N\\<rparr> \\<prec> P'\"\n\n  shows False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "obtain x:: name where \"x \\<sharp> \\<Psi>\" and \"x \\<sharp> P\" and \"x \\<sharp> M\" and \"x \\<sharp> N\" and \"x \\<sharp> P'\"\n                    and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M;\n         x \\<sharp> N; x \\<sharp> P';\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"(\\<Psi>, M, N, P')\" in tauActionUnfold) auto"], ["proof (state)\nthis:\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> M\n  x \\<sharp> N\n  x \\<sharp> P'\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. False", "with assms"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> M\n  x \\<sharp> N\n  x \\<sharp> P'\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)", "show False"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> M\n  x \\<sharp> N\n  x \\<sharp> P'\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>(nameTerm\n             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n            nameTerm\n             x\\<langle>nameTerm\n                        x\\<rangle>.P) \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P';\n     x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n     x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> False", "apply(erule_tac resCases')"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n     x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<Psi>\n 2. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n     x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> M\\<lparr>N\\<rparr>\n 3. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n     x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> P'\n 4. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n     x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> bn (M\\<lparr>N\\<rparr>) \\<sharp>* \\<Psi>\n 5. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n     x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> bn (M\\<lparr>N\\<rparr>) \\<sharp>* (nameTerm\n                    x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                   nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n 6. \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n     x \\<sharp> P';\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> bn (M\\<lparr>N\\<rparr>) \\<sharp>* subject\n                   (M\\<lparr>N\\<rparr>)\n 7. \\<And>Ma xvec yvec y Na P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> Ma\\<lparr>\\<nu>*(xvec @\n  yvec)\\<rparr>\\<langle>([(x, y)] \\<bullet>\n                         Na)\\<rangle> \\<prec> [(x, y)] \\<bullet> P'a;\n        y \\<in> supp Na; x \\<sharp> Na; x \\<sharp> P'a; x \\<noteq> y;\n        y \\<sharp> xvec; y \\<sharp> yvec; y \\<sharp> Ma; distinct xvec;\n        distinct yvec; xvec \\<sharp>* \\<Psi>; y \\<sharp> \\<Psi>;\n        yvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* (nameTerm\n                         x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                        nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        y \\<sharp> nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                   nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        yvec \\<sharp>* (nameTerm\n                         x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                        nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        xvec \\<sharp>* Ma; y \\<sharp> Ma; yvec \\<sharp>* Ma;\n        xvec \\<sharp>* yvec;\n        M\\<lparr>N\\<rparr> =\n        Ma\\<lparr>\\<nu>*(xvec @ y # yvec)\\<rparr>\\<langle>Na\\<rangle>;\n        P' = P'a\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> P';\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                      nameTerm\n                       x\\<langle>nameTerm\n                                  x\\<rangle>.P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a\\<rbrakk>\n       \\<Longrightarrow> False", "apply(drule_tac  parCases')"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a\\<rbrakk>\n       \\<Longrightarrow> bn (M\\<lparr>N\\<rparr>) \\<sharp>* \\<Psi>\n 2. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a\\<rbrakk>\n       \\<Longrightarrow> bn (M\\<lparr>N\\<rparr>) \\<sharp>* nameTerm\n                      x\\<lparr>\\<rparr>nameTerm x.\\<zero>\n 3. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a\\<rbrakk>\n       \\<Longrightarrow> bn (M\\<lparr>N\\<rparr>) \\<sharp>* nameTerm\n                      x\\<langle>nameTerm x\\<rangle>.P\n 4. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a\\<rbrakk>\n       \\<Longrightarrow> bn (M\\<lparr>N\\<rparr>) \\<sharp>* subject\n                      (M\\<lparr>N\\<rparr>)\n 5. \\<And>P'a P'aa A\\<^sub>Q \\<Psi>\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q; A\\<^sub>Q \\<sharp>* \\<Psi>;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* (M\\<lparr>N\\<rparr>); A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* ?C8 P'a;\n        P'a =\n        P'aa \\<parallel> nameTerm x\\<langle>nameTerm x\\<rangle>.P\\<rbrakk>\n       \\<Longrightarrow> ?Prop8 P'a\n 6. \\<And>P'a Q' A\\<^sub>P \\<Psi>\\<^sub>P.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* (M\\<lparr>N\\<rparr>); A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* ?C8 P'a;\n        P'a =\n        nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel> Q'\\<rbrakk>\n       \\<Longrightarrow> ?Prop8 P'a\n 7. \\<And>P'a \\<Psi>\\<^sub>Q Ma Na P'aa A\\<^sub>P \\<Psi>\\<^sub>P K xvec Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> Ma\\<lparr>Na\\<rparr> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>Na\\<rangle> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> Ma \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* Ma; A\\<^sub>P \\<sharp>* Na;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* ?C8 P'a;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* Na;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* ?C8 P'a; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* Ma; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* ?C8 P'a;\n        M\\<lparr>N\\<rparr> = \\<tau>;\n        P'a = \\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel> Q'\\<rbrakk>\n       \\<Longrightarrow> ?Prop8 P'a\n 8. \\<And>P'a \\<Psi>\\<^sub>Q Ma xvec Na P'aa A\\<^sub>P \\<Psi>\\<^sub>P K Q'\n       A\\<^sub>Q.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>Q \\<rhd> nameTerm\n                               x\\<lparr>\\<rparr>nameTerm\n           x.\\<zero> \\<longmapsto> Ma\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>Na\\<rangle> \\<prec> P'aa;\n        extractFrame (nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>) =\n        \\<langle>A\\<^sub>P, \\<Psi>\\<^sub>P\\<rangle>;\n        distinct A\\<^sub>P;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<rhd> nameTerm\n                               x\\<langle>nameTerm\n    x\\<rangle>.P \\<longmapsto> K\\<lparr>Na\\<rparr> \\<prec> Q';\n        extractFrame (nameTerm x\\<langle>nameTerm x\\<rangle>.P) =\n        \\<langle>A\\<^sub>Q, \\<Psi>\\<^sub>Q\\<rangle>;\n        distinct A\\<^sub>Q;\n        \\<Psi> \\<otimes>\n        \\<Psi>\\<^sub>P \\<otimes>\n        \\<Psi>\\<^sub>Q \\<turnstile> Ma \\<leftrightarrow> K;\n        distinct xvec; A\\<^sub>P \\<sharp>* \\<Psi>;\n        A\\<^sub>P \\<sharp>* \\<Psi>\\<^sub>Q;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>P \\<sharp>* Ma; A\\<^sub>P \\<sharp>* Na;\n        A\\<^sub>P \\<sharp>* P'aa;\n        A\\<^sub>P \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>P \\<sharp>* xvec; A\\<^sub>P \\<sharp>* Q';\n        A\\<^sub>P \\<sharp>* A\\<^sub>Q; A\\<^sub>P \\<sharp>* ?C8 P'a;\n        A\\<^sub>Q \\<sharp>* \\<Psi>; A\\<^sub>Q \\<sharp>* \\<Psi>\\<^sub>P;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        A\\<^sub>Q \\<sharp>* K; A\\<^sub>Q \\<sharp>* Na;\n        A\\<^sub>Q \\<sharp>* P'aa;\n        A\\<^sub>Q \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        A\\<^sub>Q \\<sharp>* xvec; A\\<^sub>Q \\<sharp>* Q';\n        A\\<^sub>Q \\<sharp>* ?C8 P'a; xvec \\<sharp>* \\<Psi>;\n        xvec \\<sharp>* \\<Psi>\\<^sub>P;\n        xvec \\<sharp>* nameTerm x\\<lparr>\\<rparr>nameTerm x.\\<zero>;\n        xvec \\<sharp>* Ma; xvec \\<sharp>* K;\n        xvec \\<sharp>* nameTerm x\\<langle>nameTerm x\\<rangle>.P;\n        xvec \\<sharp>* \\<Psi>\\<^sub>Q; xvec \\<sharp>* ?C8 P'a;\n        M\\<lparr>N\\<rparr> = \\<tau>;\n        P'a = \\<lparr>\\<nu>*xvec\\<rparr>P'aa \\<parallel> Q'\\<rbrakk>\n       \\<Longrightarrow> ?Prop8 P'a\n 9. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        x \\<sharp> [x].P'a;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' = \\<lparr>\\<nu>x\\<rparr>P'a; ?Prop8 P'a\\<rbrakk>\n       \\<Longrightarrow> False", "apply(auto simp add: abs_fresh)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"\\<Psi> \\<otimes> \\<one> \\<rhd> (nameTerm x)\\<lparr>\\<lambda>*[] (nameTerm x)\\<rparr>.\\<zero> \\<longmapsto>M\\<lparr>N\\<rparr> \\<prec> P'a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<lambda>*[] nameTerm\n        x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a", "apply(erule_tac inputCases')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P'a K Tvec.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a;\n        \\<Psi> \\<otimes> \\<one> \\<turnstile> nameTerm x \\<leftrightarrow> K;\n        set [] \\<subseteq> supp (nameTerm x); length [] = length Tvec;\n        distinct [];\n        M\\<lparr>N\\<rparr> = K\\<lparr>nameTerm x[[]::=Tvec]\\<rparr>;\n        P'a = \\<zero>[[]::=Tvec]\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>P'a.\n       \\<lbrakk>x \\<sharp> \\<Psi>; x \\<sharp> P; x \\<sharp> M; x \\<sharp> N;\n        \\<tau>.P =\n        \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                                x\\<lparr>\\<rparr>nameTerm\n            x.\\<zero> \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        P' =\n        \\<lparr>\\<nu>x\\<rparr>(P'a \\<parallel>\n                               nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n        \\<Psi> \\<otimes>\n        \\<one> \\<rhd> nameTerm\n                       x\\<lparr>\\<rparr>nameTerm\n   x.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> \\<otimes>\n                         \\<one> \\<rhd> nameTerm\n  x\\<lparr>\\<lambda>*[] nameTerm\n                         x\\<rparr>.\\<zero> \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P'a", "by(auto simp add: action.inject subst4)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauPrefixFrame:\n  fixes P :: \"('a, 'b, 'c) psi\"\n\n  shows \"extractFrame(\\<tau>.(P)) \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<one>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extractFrame (\\<tau>.P) \\<simeq>\\<^sub>F \\<bottom>\\<^sub>F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. extractFrame (\\<tau>.P) \\<simeq>\\<^sub>F \\<bottom>\\<^sub>F", "obtain x:: name where \"x \\<sharp> P\"\n                    and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"()\" in tauActionUnfold) auto"], ["proof (state)\nthis:\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. extractFrame (\\<tau>.P) \\<simeq>\\<^sub>F \\<bottom>\\<^sub>F", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. extractFrame (\\<tau>.P) \\<simeq>\\<^sub>F \\<bottom>\\<^sub>F", "by(force intro: frameResFresh Identity FrameStatEqTrans)"], ["proof (state)\nthis:\n  extractFrame (\\<tau>.P) \\<simeq>\\<^sub>F \\<bottom>\\<^sub>F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insertTauAssertion:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   \\<Psi> :: 'b\n\n  shows \"insertAssertion (extractFrame(\\<tau>.(P))) \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "obtain x:: name where \"x \\<sharp> P\" and \"x \\<sharp> \\<Psi>\"\n                    and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\\<Psi> in tauActionUnfold) auto"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> \\<Psi>\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  x \\<sharp> \\<Psi>\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<lparr>\\<nu>x\\<rparr>\\<langle>\\<epsilon>, \\<Psi> \\<otimes>\n                           \\<one> \\<otimes>\n                           \\<one>\\<rangle> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "apply(rule_tac G=\"\\<langle>\\<epsilon>, \\<Psi> \\<otimes> \\<one> \\<otimes> \\<one>\\<rangle>\" in FrameStatEqTrans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<lparr>\\<nu>x\\<rparr>\\<langle>\\<epsilon>, \\<Psi> \\<otimes>\n                           \\<one> \\<otimes>\n                           \\<one>\\<rangle> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi> \\<otimes>\n     \\<one> \\<otimes> \\<one>\\<rangle>\n 2. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<langle>\\<epsilon>, \\<Psi> \\<otimes>\n     \\<one> \\<otimes>\n     \\<one>\\<rangle> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "apply(rule_tac frameResFresh)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<langle>\\<epsilon>, \\<Psi> \\<otimes>\n                \\<one> \\<otimes> \\<one>\\<rangle>\n 2. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<langle>\\<epsilon>, \\<Psi> \\<otimes>\n     \\<one> \\<otimes>\n     \\<one>\\<rangle> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<Psi> \\<otimes> \\<one> \\<otimes> \\<one>\n 2. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<one> \\<otimes> \\<one> \\<simeq> \\<Psi>", "apply(subgoal_tac \"x \\<sharp> \\<one> \\<otimes> \\<one>\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm x\\<langle>nameTerm x\\<rangle>.P);\n     x \\<sharp> \\<one> \\<otimes> \\<one>\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<Psi> \\<otimes> \\<one> \\<otimes> \\<one>\n 2. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> \\<one> \\<otimes> \\<one>\n 3. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<one> \\<otimes> \\<one> \\<simeq> \\<Psi>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sharp> P; x \\<sharp> \\<Psi>;\n     \\<tau>.P =\n     \\<lparr>\\<nu>x\\<rparr>(nameTerm\n                             x\\<lparr>\\<rparr>nameTerm x.\\<zero> \\<parallel>\n                            nameTerm\n                             x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<otimes>\n                      \\<one> \\<otimes> \\<one> \\<simeq> \\<Psi>", "by(metis Identity AssertionStatEqTrans AssertionStatEqSym Associativity)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seqSubst4:\n  assumes \"y \\<sharp> \\<sigma>\"\n  and     \"wellFormedSubst \\<sigma>\"\n\n  shows \"substTerm.seqSubst (nameTerm y) \\<sigma> = nameTerm y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nameTerm y[<\\<sigma>>] = nameTerm y", "using assms"], ["proof (prove)\nusing this:\n  y \\<sharp> \\<sigma>\n  wellFormedSubst \\<sigma>\n\ngoal (1 subgoal):\n 1. nameTerm y[<\\<sigma>>] = nameTerm y", "by(induct \\<sigma>) (auto simp add: subst4)"], ["", "lemma tauSeqSubst[simp]:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   \\<sigma> :: \"(name list \\<times> 'a list) list\"\n  \n  assumes \"wellFormedSubst \\<sigma>\"\n\n  shows \"(\\<tau>.(P))[<\\<sigma>>] = \\<tau>.(P[<\\<sigma>>])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P[<\\<sigma>>] = \\<tau>.P[<\\<sigma>>]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<tau>.P[<\\<sigma>>] = \\<tau>.P[<\\<sigma>>]", "obtain x:: name where \"x \\<sharp> P[<\\<sigma>>]\" and \"x \\<sharp> \\<sigma>\" and \"x \\<sharp> P\"\n                    and \"\\<tau>.(P[<\\<sigma>>]) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.(P[<\\<sigma>>])))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P[<\\<sigma>>]; x \\<sharp> \\<sigma>;\n         x \\<sharp> P;\n         \\<tau>.P[<\\<sigma>>] =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm\n      x\\<rangle>.P[<\\<sigma>>])\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"(\\<sigma>, P)\" in tauActionUnfold) auto"], ["proof (state)\nthis:\n  x \\<sharp> P[<\\<sigma>>]\n  x \\<sharp> \\<sigma>\n  x \\<sharp> P\n  \\<tau>.P[<\\<sigma>>] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.P[<\\<sigma>>])\n\ngoal (1 subgoal):\n 1. \\<tau>.P[<\\<sigma>>] = \\<tau>.P[<\\<sigma>>]", "moreover"], ["proof (state)\nthis:\n  x \\<sharp> P[<\\<sigma>>]\n  x \\<sharp> \\<sigma>\n  x \\<sharp> P\n  \\<tau>.P[<\\<sigma>>] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.P[<\\<sigma>>])\n\ngoal (1 subgoal):\n 1. \\<tau>.P[<\\<sigma>>] = \\<tau>.P[<\\<sigma>>]", "obtain y:: name where \"y \\<sharp> P[<\\<sigma>>]\" and \"y \\<sharp> \\<sigma>\" and \"y \\<sharp> P\" and \"x \\<noteq> y\"\n                    and \"\\<tau>.(P) = \\<lparr>\\<nu>y\\<rparr>(((nameTerm y)\\<lparr>\\<lambda>*([]) (nameTerm y)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm y)\\<langle>(nameTerm y)\\<rangle>.(P)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P[<\\<sigma>>]; y \\<sharp> \\<sigma>;\n         y \\<sharp> P; x \\<noteq> y;\n         \\<tau>.P =\n         \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                                  y\\<lparr>\\<lambda>*[] nameTerm\n                   y\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 y\\<langle>nameTerm y\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"(\\<sigma>, P[<\\<sigma>>], x)\" in tauActionUnfold) auto"], ["proof (state)\nthis:\n  y \\<sharp> P[<\\<sigma>>]\n  y \\<sharp> \\<sigma>\n  y \\<sharp> P\n  x \\<noteq> y\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. \\<tau>.P[<\\<sigma>>] = \\<tau>.P[<\\<sigma>>]", "ultimately"], ["proof (chain)\npicking this:\n  x \\<sharp> P[<\\<sigma>>]\n  x \\<sharp> \\<sigma>\n  x \\<sharp> P\n  \\<tau>.P[<\\<sigma>>] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.P[<\\<sigma>>])\n  y \\<sharp> P[<\\<sigma>>]\n  y \\<sharp> \\<sigma>\n  y \\<sharp> P\n  x \\<noteq> y\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> P[<\\<sigma>>]\n  x \\<sharp> \\<sigma>\n  x \\<sharp> P\n  \\<tau>.P[<\\<sigma>>] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.P[<\\<sigma>>])\n  y \\<sharp> P[<\\<sigma>>]\n  y \\<sharp> \\<sigma>\n  y \\<sharp> P\n  x \\<noteq> y\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. \\<tau>.P[<\\<sigma>>] = \\<tau>.P[<\\<sigma>>]", "using assms"], ["proof (prove)\nusing this:\n  x \\<sharp> P[<\\<sigma>>]\n  x \\<sharp> \\<sigma>\n  x \\<sharp> P\n  \\<tau>.P[<\\<sigma>>] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.P[<\\<sigma>>])\n  y \\<sharp> P[<\\<sigma>>]\n  y \\<sharp> \\<sigma>\n  y \\<sharp> P\n  x \\<noteq> y\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)\n  wellFormedSubst \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<tau>.P[<\\<sigma>>] = \\<tau>.P[<\\<sigma>>]", "by(auto simp add: psi.inject alpha eqvts calc_atm psi.inject input.inject seqSubst4)"], ["proof (state)\nthis:\n  \\<tau>.P[<\\<sigma>>] = \\<tau>.P[<\\<sigma>>]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauSubst[simp]:\n  fixes P    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n  and   Tvec :: \"'a list\"\n  \n  assumes \"distinct xvec\"\n  and     \"length xvec = length Tvec\"\n\n  shows \"(\\<tau>.(P))[xvec::=Tvec] = \\<tau>.(P[xvec::=Tvec])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<tau>.P)[xvec::=Tvec] = \\<tau>.P[xvec::=Tvec]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<tau>.P)[xvec::=Tvec] = \\<tau>.P[xvec::=Tvec]", "obtain x:: name where \"x \\<sharp> P[xvec::=Tvec]\" and \"x \\<sharp> xvec\" and \"x \\<sharp> Tvec\" and \"x \\<sharp> P\"\n                    and \"\\<tau>.(P[xvec::=Tvec]) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.(P[xvec::=Tvec])))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P[xvec::=Tvec]; x \\<sharp> xvec;\n         x \\<sharp> Tvec; x \\<sharp> P;\n         \\<tau>.P[xvec::=Tvec] =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm\n      x\\<rangle>.(P[xvec::=Tvec]))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"(xvec, Tvec, P)\" in tauActionUnfold) auto"], ["proof (state)\nthis:\n  x \\<sharp> P[xvec::=Tvec]\n  x \\<sharp> xvec\n  x \\<sharp> Tvec\n  x \\<sharp> P\n  \\<tau>.P[xvec::=Tvec] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.(P[xvec::=Tvec]))\n\ngoal (1 subgoal):\n 1. (\\<tau>.P)[xvec::=Tvec] = \\<tau>.P[xvec::=Tvec]", "moreover"], ["proof (state)\nthis:\n  x \\<sharp> P[xvec::=Tvec]\n  x \\<sharp> xvec\n  x \\<sharp> Tvec\n  x \\<sharp> P\n  \\<tau>.P[xvec::=Tvec] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.(P[xvec::=Tvec]))\n\ngoal (1 subgoal):\n 1. (\\<tau>.P)[xvec::=Tvec] = \\<tau>.P[xvec::=Tvec]", "obtain y:: name where \"y \\<sharp> P[xvec::=Tvec]\" and \"y \\<sharp> xvec\" and \"y \\<sharp> Tvec\" and \"y \\<sharp> P\" and \"x \\<noteq> y\"\n                    and \"\\<tau>.(P) = \\<lparr>\\<nu>y\\<rparr>(((nameTerm y)\\<lparr>\\<lambda>*([]) (nameTerm y)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm y)\\<langle>(nameTerm y)\\<rangle>.(P)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P[xvec::=Tvec]; y \\<sharp> xvec;\n         y \\<sharp> Tvec; y \\<sharp> P; x \\<noteq> y;\n         \\<tau>.P =\n         \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                                  y\\<lparr>\\<lambda>*[] nameTerm\n                   y\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 y\\<langle>nameTerm y\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"(xvec, Tvec, P[xvec::=Tvec], x)\" in tauActionUnfold) auto"], ["proof (state)\nthis:\n  y \\<sharp> P[xvec::=Tvec]\n  y \\<sharp> xvec\n  y \\<sharp> Tvec\n  y \\<sharp> P\n  x \\<noteq> y\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. (\\<tau>.P)[xvec::=Tvec] = \\<tau>.P[xvec::=Tvec]", "ultimately"], ["proof (chain)\npicking this:\n  x \\<sharp> P[xvec::=Tvec]\n  x \\<sharp> xvec\n  x \\<sharp> Tvec\n  x \\<sharp> P\n  \\<tau>.P[xvec::=Tvec] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.(P[xvec::=Tvec]))\n  y \\<sharp> P[xvec::=Tvec]\n  y \\<sharp> xvec\n  y \\<sharp> Tvec\n  y \\<sharp> P\n  x \\<noteq> y\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> P[xvec::=Tvec]\n  x \\<sharp> xvec\n  x \\<sharp> Tvec\n  x \\<sharp> P\n  \\<tau>.P[xvec::=Tvec] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.(P[xvec::=Tvec]))\n  y \\<sharp> P[xvec::=Tvec]\n  y \\<sharp> xvec\n  y \\<sharp> Tvec\n  y \\<sharp> P\n  x \\<noteq> y\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. (\\<tau>.P)[xvec::=Tvec] = \\<tau>.P[xvec::=Tvec]", "using assms"], ["proof (prove)\nusing this:\n  x \\<sharp> P[xvec::=Tvec]\n  x \\<sharp> xvec\n  x \\<sharp> Tvec\n  x \\<sharp> P\n  \\<tau>.P[xvec::=Tvec] =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm\n                          x\\<langle>nameTerm x\\<rangle>.(P[xvec::=Tvec]))\n  y \\<sharp> P[xvec::=Tvec]\n  y \\<sharp> xvec\n  y \\<sharp> Tvec\n  y \\<sharp> P\n  x \\<noteq> y\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)\n  distinct xvec\n  length xvec = length Tvec\n\ngoal (1 subgoal):\n 1. (\\<tau>.P)[xvec::=Tvec] = \\<tau>.P[xvec::=Tvec]", "by(auto simp add: psi.inject alpha eqvts calc_atm psi.inject input.inject subst4)"], ["proof (state)\nthis:\n  (\\<tau>.P)[xvec::=Tvec] = \\<tau>.P[xvec::=Tvec]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauFresh[simp]:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   x :: name\n\n  shows \"x \\<sharp> \\<tau>.(P) = x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<tau>.P = x \\<sharp> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<tau>.P = x \\<sharp> P", "obtain y::name where \"y \\<noteq> x\" and \"y \\<sharp> P\" and \"\\<tau>.(P) = \\<lparr>\\<nu>y\\<rparr>(((nameTerm y)\\<lparr>\\<lambda>*([]) (nameTerm y)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm y)\\<langle>(nameTerm y)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<noteq> x; y \\<sharp> P;\n         \\<tau>.P =\n         \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                                  y\\<lparr>\\<lambda>*[] nameTerm\n                   y\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 y\\<langle>nameTerm y\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=x in tauActionUnfold) auto"], ["proof (state)\nthis:\n  y \\<noteq> x\n  y \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. x \\<sharp> \\<tau>.P = x \\<sharp> P", "thus ?thesis"], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  y \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>y\\<rparr>((nameTerm\n                           y\\<lparr>\\<lambda>*[] nameTerm\n            y\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm y\\<langle>nameTerm y\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. x \\<sharp> \\<tau>.P = x \\<sharp> P", "by(auto simp add: abs_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> \\<tau>.P = x \\<sharp> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauFreshChain[simp]:\n  fixes P    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n\n  shows \"xvec \\<sharp>* (\\<tau>.(P)) = (xvec \\<sharp>* P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xvec \\<sharp>* (\\<tau>.P) = xvec \\<sharp>* P", "by(induct xvec) auto"], ["", "lemma guardedTau:\n  fixes P :: \"('a, 'b, 'c) psi\"\n\n  shows \"guarded(\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. guarded (\\<tau>.P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. guarded (\\<tau>.P)", "obtain x::name where \"x \\<sharp> P\" and \"\\<tau>.(P) = \\<lparr>\\<nu>x\\<rparr>(((nameTerm x)\\<lparr>\\<lambda>*([]) (nameTerm x)\\<rparr>.\\<zero>) \\<parallel> ((nameTerm x)\\<langle>(nameTerm x)\\<rangle>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> P;\n         \\<tau>.P =\n         \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                                  x\\<lparr>\\<lambda>*[] nameTerm\n                   x\\<rparr>.\\<zero>) \\<parallel>\n                                nameTerm\n                                 x\\<langle>nameTerm x\\<rangle>.P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac C=\"()\" in tauActionUnfold) auto"], ["proof (state)\nthis:\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. guarded (\\<tau>.P)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  \\<tau>.P =\n  \\<lparr>\\<nu>x\\<rparr>((nameTerm\n                           x\\<lparr>\\<lambda>*[] nameTerm\n            x\\<rparr>.\\<zero>) \\<parallel>\n                         nameTerm x\\<langle>nameTerm x\\<rangle>.P)\n\ngoal (1 subgoal):\n 1. guarded (\\<tau>.P)", "by auto"], ["proof (state)\nthis:\n  guarded (\\<tau>.P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauChainBisim:\n  fixes \\<Psi>  :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   P'  :: \"('a, 'b, 'c) psi\"\n  and   P'' :: \"('a, 'b, 'c) psi\"\n  \n  assumes \"\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\"\n  and     \"\\<Psi> \\<rhd> P \\<sim> P''\"\n\n  obtains P''' where \"\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\" and \"\\<Psi> \\<rhd> P' \\<sim> P'''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n         \\<Psi> \\<rhd> P' \\<sim> P'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\n  \\<Psi> \\<rhd> P \\<sim> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n         \\<Psi> \\<rhd> P' \\<sim> P'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof(induct arbitrary: thesis rule: tauChainInduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a thesis.\n       \\<lbrakk>\\<And>P'''.\n                   \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                    \\<Psi> \\<rhd> a \\<sim> P'''\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a b c thesis.\n       \\<lbrakk>\\<Psi> \\<rhd> a \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> b;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>P'''.\n                       \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                        \\<Psi> \\<rhd> b \\<sim> P'''\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> b \\<longmapsto> \\<tau> \\<prec> c;\n        \\<And>P'''.\n           \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n            \\<Psi> \\<rhd> c \\<sim> P'''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis", "case(TauBase P)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> ?P''';\n   \\<Psi> \\<rhd> P \\<sim> ?P'''\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Psi> \\<rhd> P \\<sim> P''\n\ngoal (2 subgoals):\n 1. \\<And>a thesis.\n       \\<lbrakk>\\<And>P'''.\n                   \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                    \\<Psi> \\<rhd> a \\<sim> P'''\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>a b c thesis.\n       \\<lbrakk>\\<Psi> \\<rhd> a \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> b;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>P'''.\n                       \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                        \\<Psi> \\<rhd> b \\<sim> P'''\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> b \\<longmapsto> \\<tau> \\<prec> c;\n        \\<And>P'''.\n           \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n            \\<Psi> \\<rhd> c \\<sim> P'''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> ?P''';\n   \\<Psi> \\<rhd> P \\<sim> ?P'''\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Psi> \\<rhd> P \\<sim> P''\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>a b c thesis.\n       \\<lbrakk>\\<Psi> \\<rhd> a \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> b;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>P'''.\n                       \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                        \\<Psi> \\<rhd> b \\<sim> P'''\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> b \\<longmapsto> \\<tau> \\<prec> c;\n        \\<And>P'''.\n           \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n            \\<Psi> \\<rhd> c \\<sim> P'''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c thesis.\n       \\<lbrakk>\\<Psi> \\<rhd> a \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> b;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>P'''.\n                       \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                        \\<Psi> \\<rhd> b \\<sim> P'''\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> b \\<longmapsto> \\<tau> \\<prec> c;\n        \\<And>P'''.\n           \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n            \\<Psi> \\<rhd> c \\<sim> P'''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis", "case(TauStep P P' P''')"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\n  \\<lbrakk>\\<And>P'''.\n              \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n               \\<Psi> \\<rhd> P' \\<sim> P'''\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   \\<Psi> \\<rhd> P \\<sim> P''\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P'''\n  \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> ?P''';\n   \\<Psi> \\<rhd> P''' \\<sim> ?P'''\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Psi> \\<rhd> P \\<sim> P''\n\ngoal (1 subgoal):\n 1. \\<And>a b c thesis.\n       \\<lbrakk>\\<Psi> \\<rhd> a \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> b;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>P'''.\n                       \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                        \\<Psi> \\<rhd> b \\<sim> P'''\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> b \\<longmapsto> \\<tau> \\<prec> c;\n        \\<And>P'''.\n           \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n            \\<Psi> \\<rhd> c \\<sim> P'''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>\\<Psi> \\<rhd> P \\<sim> P''\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<sim> P''", "obtain P'''' where P''Chain: \"\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<sim> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P''''.\n        \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''';\n         \\<Psi> \\<rhd> P' \\<sim> P''''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac TauStep) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''''\n  \\<Psi> \\<rhd> P' \\<sim> P''''\n\ngoal (1 subgoal):\n 1. \\<And>a b c thesis.\n       \\<lbrakk>\\<Psi> \\<rhd> a \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> b;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>P'''.\n                       \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                        \\<Psi> \\<rhd> b \\<sim> P'''\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> b \\<longmapsto> \\<tau> \\<prec> c;\n        \\<And>P'''.\n           \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n            \\<Psi> \\<rhd> c \\<sim> P'''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>\\<Psi> \\<rhd> P' \\<sim> P''''\\<close> \\<open>\\<Psi> \\<rhd> P' \\<longmapsto>\\<tau> \\<prec> P'''\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P' \\<sim> P''''\n  \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P'''", "obtain P''''' where P''''Trans: \"\\<Psi> \\<rhd> P'''' \\<longmapsto>\\<tau> \\<prec> P'''''\" and \"\\<Psi> \\<rhd> P''' \\<sim> P'''''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P' \\<sim> P''''\n  \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P'''\n\ngoal (1 subgoal):\n 1. (\\<And>P'''''.\n        \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n         \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(drule_tac bisimE(4))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>P'''''.\n                \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n                 \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P''';\n     \\<Psi> \\<rhd> P'''' \\<sim> P'\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(drule_tac bisimE(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>P'''''.\n                \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n                 \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P''';\n     \\<Psi> \\<rhd> P'''' \\<leadsto>[bisim] P'\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(drule_tac simE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>P'''''.\n                \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n                 \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P'''\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> P' \\<longmapsto> ?\\<alpha>6 \\<prec> ?Q'6\n 2. \\<lbrakk>\\<And>P'''''.\n                \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n                 \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P'''\\<rbrakk>\n    \\<Longrightarrow> bn ?\\<alpha>6 \\<sharp>* \\<Psi>\n 3. \\<lbrakk>\\<And>P'''''.\n                \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n                 \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P'''\\<rbrakk>\n    \\<Longrightarrow> bn ?\\<alpha>6 \\<sharp>* P''''\n 4. \\<lbrakk>\\<And>P'''''.\n                \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n                 \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P''';\n     \\<exists>P'.\n        \\<Psi> \\<rhd> P'''' \\<longmapsto> ?\\<alpha>6 \\<prec> P' \\<and>\n        \\<Psi> \\<rhd> P' \\<sim> ?Q'6\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>\\<And>P'''''.\n                   \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n                    \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P';\n        \\<Psi> \\<rhd> P' \\<sim> P'''\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(drule_tac bisimE(4))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>\\<And>P'''''.\n                   \\<lbrakk>\\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P''''';\n                    \\<Psi> \\<rhd> P''' \\<sim> P'''''\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> P' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P';\n        \\<Psi> \\<rhd> P''' \\<sim> P'\\<rbrakk>\n       \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P'''''\n  \\<Psi> \\<rhd> P''' \\<sim> P'''''\n\ngoal (1 subgoal):\n 1. \\<And>a b c thesis.\n       \\<lbrakk>\\<Psi> \\<rhd> a \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> b;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>P'''.\n                       \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                        \\<Psi> \\<rhd> b \\<sim> P'''\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> b \\<longmapsto> \\<tau> \\<prec> c;\n        \\<And>P'''.\n           \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n            \\<Psi> \\<rhd> c \\<sim> P'''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from P''Chain P''''Trans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''''\n  \\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P'''''", "have \"\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''''\n  \\<Psi> \\<rhd> P'''' \\<longmapsto> \\<tau> \\<prec> P'''''\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''''", "by(drule_tac tauActTauChain) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''''\n\ngoal (1 subgoal):\n 1. \\<And>a b c thesis.\n       \\<lbrakk>\\<Psi> \\<rhd> a \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> b;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>P'''.\n                       \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n                        \\<Psi> \\<rhd> b \\<sim> P'''\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> b \\<longmapsto> \\<tau> \\<prec> c;\n        \\<And>P'''.\n           \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n            \\<Psi> \\<rhd> c \\<sim> P'''\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Psi> \\<rhd> a \\<sim> P''\\<rbrakk>\n       \\<Longrightarrow> thesis", "with \\<open>\\<Psi> \\<rhd> P''' \\<sim> P'''''\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P''' \\<sim> P'''''\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''''", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P''' \\<sim> P'''''\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''''\n\ngoal (1 subgoal):\n 1. thesis", "by(metis TauStep)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauChainStepCons:\n  fixes \\<Psi> :: 'b\n  and   P  :: \"('a, 'b, 'c) psi\"\n  and   P' :: \"('a, 'b, 'c) psi\"\n  \n  assumes PChain: \"\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\"\n\n  obtains P'' where \"\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sub>\\<tau> P''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume Goal: \"\\<And>P''. \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sub>\\<tau> P''; \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk> \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> ?P'';\n   \\<Psi> \\<rhd> P' \\<sim> ?P''\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain P'' where PTrans: \"\\<Psi> \\<rhd> \\<tau>.(P) \\<longmapsto>\\<tau> \\<prec> P''\" and \"\\<Psi> \\<rhd> P \\<sim> P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P'';\n         \\<Psi> \\<rhd> P \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using tauActionI"], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     ?\\<Psi> \\<rhd> \\<tau>.?P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n     ?\\<Psi> \\<rhd> ?P \\<sim> P'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P'';\n         \\<Psi> \\<rhd> P \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P''\n  \\<Psi> \\<rhd> P \\<sim> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from PChain \\<open>\\<Psi> \\<rhd> P \\<sim> P''\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\n  \\<Psi> \\<rhd> P \\<sim> P''", "obtain P''' where P''Chain: \"\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\" and \"\\<Psi> \\<rhd> P' \\<sim> P'''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\n  \\<Psi> \\<rhd> P \\<sim> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>\\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n         \\<Psi> \\<rhd> P' \\<sim> P'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule tauChainBisim)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\n  \\<Psi> \\<rhd> P' \\<sim> P'''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from PTrans P''Chain"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P''\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''", "have \"\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sub>\\<tau> P'''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P''\n  \\<Psi> \\<rhd> P'' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'''", "by(drule_tac tauActTauStepChain) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'''\n\ngoal (1 subgoal):\n 1. thesis", "using \\<open>\\<Psi> \\<rhd> P' \\<sim> P'''\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  \\<Psi> \\<rhd> P' \\<sim> P'''\n\ngoal (1 subgoal):\n 1. thesis", "by(rule Goal)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauChainCons:\n  fixes \\<Psi> :: 'b\n  and   P  :: \"('a, 'b, 'c) psi\"\n  and   P' :: \"('a, 'b, 'c) psi\"\n  \n  assumes \"\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\"\n\n  obtains P'' where \"\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume Goal: \"\\<And>P''. \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''; \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk> \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> ?P'';\n   \\<Psi> \\<rhd> P' \\<sim> ?P''\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'", "obtain P'' where \"\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sub>\\<tau> P''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule tauChainStepCons)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  \\<Psi> \\<rhd> P' \\<sim> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  \\<Psi> \\<rhd> P' \\<sim> P''\n\ngoal (1 subgoal):\n 1. thesis", "by(rule_tac Goal) auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakTransitionTau:\n  fixes \\<Psi>   :: 'b\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha>    :: \"'a action\"\n  and   P'   :: \"('a, 'b, 'c) psi\"\n\n  assumes PTrans: \"\\<Psi> : Q \\<rhd> P \\<Longrightarrow>\\<alpha> \\<prec> P'\"\n  and     \"bn \\<alpha> \\<sharp>* \\<Psi>\"\n  and     \"bn \\<alpha> \\<sharp>* P\"\n\n  obtains P'' where \"\\<Psi> : Q \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<alpha> \\<prec> P''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume Goal: \"\\<And>P''. \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<alpha> \\<prec> P''; \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk> \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> ?P'';\n   \\<Psi> \\<rhd> P' \\<sim> ?P''\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from PTrans"], ["proof (chain)\npicking this:\n  \\<Psi> : Q \\<rhd> P \\<Longrightarrow>\\<alpha> \\<prec> P'", "obtain P'' where PChain: \"\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''\"\n                           and QimpP'': \"insertAssertion (extractFrame Q) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion(extractFrame P'') \\<Psi>\"\n                           and P''Trans: \"\\<Psi> \\<rhd> P'' \\<longmapsto>\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  \\<Psi> : Q \\<rhd> P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'';\n         insertAssertion (extractFrame Q)\n          \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n      (extractFrame P'') \\<Psi>;\n         \\<Psi> \\<rhd> P'' \\<longmapsto> \\<alpha> \\<prec> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: weakTransitionE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''\n  insertAssertion (extractFrame Q)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame P'')\n                                     \\<Psi>\n  \\<Psi> \\<rhd> P'' \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from PChain"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''", "obtain P''' where tPChain: \"\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\" and \"\\<Psi> \\<rhd> P'' \\<sim> P'''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P''';\n         \\<Psi> \\<rhd> P'' \\<sim> P'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule tauChainCons)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\n  \\<Psi> \\<rhd> P'' \\<sim> P'''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\n  \\<Psi> \\<rhd> P'' \\<sim> P'''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from QimpP'' \\<open>\\<Psi> \\<rhd> P'' \\<sim> P'''\\<close>"], ["proof (chain)\npicking this:\n  insertAssertion (extractFrame Q)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame P'')\n                                     \\<Psi>\n  \\<Psi> \\<rhd> P'' \\<sim> P'''", "have \"insertAssertion (extractFrame Q) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion(extractFrame P''') \\<Psi>\""], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame Q)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame P'')\n                                     \\<Psi>\n  \\<Psi> \\<rhd> P'' \\<sim> P'''\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame Q)\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame P''')\n \\<Psi>", "by(metis bisimE FrameStatEq_def FrameStatImpTrans)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame Q)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame P''')\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  insertAssertion (extractFrame Q)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame P''')\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from tPChain \\<open>bn \\<alpha> \\<sharp>* P\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\n  bn \\<alpha> \\<sharp>* P", "have \"bn \\<alpha> \\<sharp>* P'''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\n  bn \\<alpha> \\<sharp>* P\n\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* P'''", "by(force intro: tauChainFreshChain)"], ["proof (state)\nthis:\n  bn \\<alpha> \\<sharp>* P'''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with \\<open>\\<Psi> \\<rhd> P'' \\<sim> P'''\\<close> P''Trans \\<open>bn \\<alpha> \\<sharp>* \\<Psi>\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P'' \\<sim> P'''\n  \\<Psi> \\<rhd> P'' \\<longmapsto> \\<alpha> \\<prec> P'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P'''", "obtain P'''' where \"\\<Psi> \\<rhd> P''' \\<longmapsto>\\<alpha> \\<prec> P''''\" and \"\\<Psi> \\<rhd> P' \\<sim> P''''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P'' \\<sim> P'''\n  \\<Psi> \\<rhd> P'' \\<longmapsto> \\<alpha> \\<prec> P'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P'''\n\ngoal (1 subgoal):\n 1. (\\<And>P''''.\n        \\<lbrakk>\\<Psi> \\<rhd> P''' \\<longmapsto> \\<alpha> \\<prec> P'''';\n         \\<Psi> \\<rhd> P' \\<sim> P''''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(metis bisimE simE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P''' \\<longmapsto> \\<alpha> \\<prec> P''''\n  \\<Psi> \\<rhd> P' \\<sim> P''''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>\\<Psi> : Q \\<rhd> \\<tau>.P \\<Longrightarrow>\\<alpha> \\<prec> P'';\n         \\<Psi> \\<rhd> P' \\<sim> P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\n  \\<Psi> \\<rhd> P'' \\<sim> P'''\n  insertAssertion (extractFrame Q)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame P''')\n                                     \\<Psi>\n  \\<Psi> \\<rhd> P''' \\<longmapsto> \\<alpha> \\<prec> P''''\n  \\<Psi> \\<rhd> P' \\<sim> P''''", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P'''\n  \\<Psi> \\<rhd> P'' \\<sim> P'''\n  insertAssertion (extractFrame Q)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame P''')\n                                     \\<Psi>\n  \\<Psi> \\<rhd> P''' \\<longmapsto> \\<alpha> \\<prec> P''''\n  \\<Psi> \\<rhd> P' \\<sim> P''''\n\ngoal (1 subgoal):\n 1. thesis", "by(rule_tac Goal) (blast intro: weakTransitionI)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}