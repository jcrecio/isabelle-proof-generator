{"file_name": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi/Sum.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi", "problem_names": ["lemma SumAssert1:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<longmapsto> Rs\"\n  and     \"\\<Psi> \\<turnstile> \\<phi>\"\n  and     \"guarded P\"\n\n  shows \"\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\"", "lemma SumAssert2:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> Q \\<longmapsto> Rs\"\n  and     \"\\<Psi> \\<turnstile> \\<phi>\"\n  and     \"guarded Q\"\n\n  shows \"\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\"", "lemma sumAssertCases[consumes 2, case_names cSum1 cSum2]:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<phi> :: 'c\n\n  assumes \"\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\"\n  and     \"\\<Psi> \\<turnstile> \\<phi>\"\n  and     rSum1: \"\\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> Rs; guarded P\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rSum2: \"\\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk> \\<Longrightarrow> Prop\"\n\n  shows Prop", "lemma sumElim[dest]:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<phi> :: 'c\n\n  assumes \"\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\"\n  and     \"\\<not>(\\<Psi> \\<turnstile> \\<phi>)\"\n\n  shows False", "lemma topSeqSubst[simp]:\n  shows \"(substCond.seqSubst T \\<sigma>) = T\"", "lemma suppTop:\n  shows \"((supp(\\<top>))::name set) = {}\"", "lemma freshTop[simp]:\n  fixes x    :: name\n  and   xvec :: \"name list\"\n  and   Xs   :: \"name set\"\n\n  shows \"x \\<sharp> \\<top>\" and \"xvec \\<sharp>* \\<top>\" and \"Xs \\<sharp>* \\<top>\"", "lemma sumSubst[simp]:\n  fixes P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n  and   Tvec :: \"'a list\"\n\n  assumes \"length xvec = length Tvec\"\n  and     \"distinct xvec\"\n\n  shows \"(P \\<oplus> Q)[xvec::=Tvec] = (P[xvec::=Tvec] \\<oplus> Q[xvec::=Tvec])\"", "lemma sumSeqSubst[simp]:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<sigma> :: \"(name list \\<times> 'a list) list\"\n\n  assumes \"wellFormedSubst \\<sigma>\"\n\n  shows \"(P \\<oplus> Q)[<\\<sigma>>] = ((P[<\\<sigma>>]) \\<oplus> (Q[<\\<sigma>>]))\"", "lemma Sum1:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<longmapsto> Rs\"\n  and     \"guarded P\"\n\n  shows \"\\<Psi> \\<rhd> P \\<oplus> Q \\<longmapsto> Rs\"", "lemma Sum2:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> Q \\<longmapsto> Rs\"\n  and     \"guarded Q\"\n\n  shows \"\\<Psi> \\<rhd> P \\<oplus> Q \\<longmapsto> Rs\"", "lemma sumCases[consumes 1, case_names cSum1 cSum2]:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<oplus> Q \\<longmapsto> Rs\"\n  and     rSum1: \"\\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> Rs; guarded P\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rSum2: \"\\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk> \\<Longrightarrow> Prop\"\n\n  shows Prop"], "translations": [["", "lemma SumAssert1:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<longmapsto> Rs\"\n  and     \"\\<Psi> \\<turnstile> \\<phi>\"\n  and     \"guarded P\"\n\n  shows \"\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "note \\<open>\\<Psi> \\<rhd> P \\<longmapsto> Rs\\<close>"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "have \"(\\<phi>, P) mem [(\\<phi>, P), (\\<phi>, Q)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<phi>, P) mem [(\\<phi>, P), (\\<phi>, Q)]", "by simp"], ["proof (state)\nthis:\n  (\\<phi>, P) mem [(\\<phi>, P), (\\<phi>, Q)]\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n  (\\<phi>, P) mem [(\\<phi>, P), (\\<phi>, Q)]", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n  (\\<phi>, P) mem [(\\<phi>, P), (\\<phi>, Q)]\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "using \\<open>\\<Psi> \\<turnstile> \\<phi>\\<close> \\<open>guarded P\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n  (\\<phi>, P) mem [(\\<phi>, P), (\\<phi>, Q)]\n  \\<Psi> \\<turnstile> \\<phi>\n  guarded P\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "by(rule Case)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SumAssert2:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> Q \\<longmapsto> Rs\"\n  and     \"\\<Psi> \\<turnstile> \\<phi>\"\n  and     \"guarded Q\"\n\n  shows \"\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "note \\<open>\\<Psi> \\<rhd> Q \\<longmapsto> Rs\\<close>"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "have \"(\\<phi>, Q) mem [(\\<phi>, P), (\\<phi>, Q)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<phi>, Q) mem [(\\<phi>, P), (\\<phi>, Q)]", "by simp"], ["proof (state)\nthis:\n  (\\<phi>, Q) mem [(\\<phi>, P), (\\<phi>, Q)]\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n  (\\<phi>, Q) mem [(\\<phi>, P), (\\<phi>, Q)]", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n  (\\<phi>, Q) mem [(\\<phi>, P), (\\<phi>, Q)]\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "using \\<open>\\<Psi> \\<turnstile> \\<phi>\\<close> \\<open>guarded Q\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n  (\\<phi>, Q) mem [(\\<phi>, P), (\\<phi>, Q)]\n  \\<Psi> \\<turnstile> \\<phi>\n  guarded Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "by(rule Case)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sumAssertCases[consumes 2, case_names cSum1 cSum2]:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<phi> :: 'c\n\n  assumes \"\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\"\n  and     \"\\<Psi> \\<turnstile> \\<phi>\"\n  and     rSum1: \"\\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> Rs; guarded P\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rSum2: \"\\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk> \\<Longrightarrow> Prop\"\n\n  shows Prop"], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop", "from \\<open>\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. Prop", "proof(induct rule: caseCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>' Pa.\n       \\<lbrakk>\\<Psi> \\<rhd> Pa \\<longmapsto> Rs;\n        (\\<phi>', Pa) mem [(\\<phi>, P), (\\<phi>, Q)];\n        \\<Psi> \\<turnstile> \\<phi>'; guarded Pa\\<rbrakk>\n       \\<Longrightarrow> Prop", "case(cCase \\<phi>' P')"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P' \\<longmapsto> Rs\n  (\\<phi>', P') mem [(\\<phi>, P), (\\<phi>, Q)]\n  \\<Psi> \\<turnstile> \\<phi>'\n  guarded P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>' Pa.\n       \\<lbrakk>\\<Psi> \\<rhd> Pa \\<longmapsto> Rs;\n        (\\<phi>', Pa) mem [(\\<phi>, P), (\\<phi>, Q)];\n        \\<Psi> \\<turnstile> \\<phi>'; guarded Pa\\<rbrakk>\n       \\<Longrightarrow> Prop", "from \\<open>(\\<phi>', P') mem [(\\<phi>, P), (\\<phi>, Q)]\\<close>"], ["proof (chain)\npicking this:\n  (\\<phi>', P') mem [(\\<phi>, P), (\\<phi>, Q)]", "have \"\\<phi> = \\<phi>'\" and D: \"P = P' \\<or> Q = P'\""], ["proof (prove)\nusing this:\n  (\\<phi>', P') mem [(\\<phi>, P), (\\<phi>, Q)]\n\ngoal (1 subgoal):\n 1. \\<phi> = \\<phi>' &&& P = P' \\<or> Q = P'", "by auto"], ["proof (state)\nthis:\n  \\<phi> = \\<phi>'\n  P = P' \\<or> Q = P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>' Pa.\n       \\<lbrakk>\\<Psi> \\<rhd> Pa \\<longmapsto> Rs;\n        (\\<phi>', Pa) mem [(\\<phi>, P), (\\<phi>, Q)];\n        \\<Psi> \\<turnstile> \\<phi>'; guarded Pa\\<rbrakk>\n       \\<Longrightarrow> Prop", "from D"], ["proof (chain)\npicking this:\n  P = P' \\<or> Q = P'", "show ?thesis"], ["proof (prove)\nusing this:\n  P = P' \\<or> Q = P'\n\ngoal (1 subgoal):\n 1. Prop", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P = P' \\<Longrightarrow> Prop\n 2. Q = P' \\<Longrightarrow> Prop", "assume \"P = P'\""], ["proof (state)\nthis:\n  P = P'\n\ngoal (2 subgoals):\n 1. P = P' \\<Longrightarrow> Prop\n 2. Q = P' \\<Longrightarrow> Prop", "with \\<open>\\<Psi> \\<rhd> P' \\<longmapsto> Rs\\<close> \\<open>guarded P'\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P' \\<longmapsto> Rs\n  guarded P'\n  P = P'", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P' \\<longmapsto> Rs\n  guarded P'\n  P = P'\n\ngoal (1 subgoal):\n 1. Prop", "by(rule_tac rSum1) auto"], ["proof (state)\nthis:\n  Prop\n\ngoal (1 subgoal):\n 1. Q = P' \\<Longrightarrow> Prop", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q = P' \\<Longrightarrow> Prop", "assume \"Q = P'\""], ["proof (state)\nthis:\n  Q = P'\n\ngoal (1 subgoal):\n 1. Q = P' \\<Longrightarrow> Prop", "with \\<open>\\<Psi> \\<rhd> P' \\<longmapsto> Rs\\<close> \\<open>guarded P'\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P' \\<longmapsto> Rs\n  guarded P'\n  Q = P'", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P' \\<longmapsto> Rs\n  guarded P'\n  Q = P'\n\ngoal (1 subgoal):\n 1. Prop", "by(rule_tac rSum2) auto"], ["proof (state)\nthis:\n  Prop\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Prop\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Prop\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sumElim[dest]:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<phi> :: 'c\n\n  assumes \"\\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\"\n  and     \"\\<not>(\\<Psi> \\<turnstile> \\<phi>)\"\n\n  shows False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<phi> Q \\<longmapsto> Rs\n  \\<not> \\<Psi> \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. False", "by(induct rule: caseCases) auto"], ["", "end"], ["", "locale sum = env +\n  fixes T :: 'c\n\n  assumes Top: \"\\<Psi> \\<turnstile> T\"\n  and     TopEqvt[eqvt]: \"((p::name prm) \\<bullet> T) = T\"\n  and     TopSubst[simp]: \"substCond T xvec Tvec = T\"\nbegin"], ["", "abbreviation topJudge (\"\\<top>\" 150) where \"\\<top> \\<equiv> T\""], ["", "abbreviation sumJudge (infixr \"\\<oplus>\" 80) where \"P \\<oplus> Q \\<equiv> P \\<oplus>\\<^sub>\\<top> Q\""], ["", "lemma topSeqSubst[simp]:\n  shows \"(substCond.seqSubst T \\<sigma>) = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. substCond.seqSubst (\\<top>) \\<sigma> = \\<top>", "by(induct \\<sigma>) auto"], ["", "lemma suppTop:\n  shows \"((supp(\\<top>))::name set) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (\\<top>) = {}", "by(auto simp add: supp_def eqvts)"], ["", "lemma freshTop[simp]:\n  fixes x    :: name\n  and   xvec :: \"name list\"\n  and   Xs   :: \"name set\"\n\n  shows \"x \\<sharp> \\<top>\" and \"xvec \\<sharp>* \\<top>\" and \"Xs \\<sharp>* \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<top> &&& xvec \\<sharp>* \\<top> &&& Xs \\<sharp>* \\<top>", "by(auto simp add: fresh_def fresh_star_def suppTop)"], ["", "lemma sumSubst[simp]:\n  fixes P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n  and   Tvec :: \"'a list\"\n\n  assumes \"length xvec = length Tvec\"\n  and     \"distinct xvec\"\n\n  shows \"(P \\<oplus> Q)[xvec::=Tvec] = (P[xvec::=Tvec] \\<oplus> Q[xvec::=Tvec])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus>\\<^sub>\\<top> Q[xvec::=Tvec] =\n    (P[xvec::=Tvec]) \\<oplus>\\<^sub>\\<top> Q[xvec::=Tvec]", "by auto"], ["", "lemma sumSeqSubst[simp]:\n  fixes P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<sigma> :: \"(name list \\<times> 'a list) list\"\n\n  assumes \"wellFormedSubst \\<sigma>\"\n\n  shows \"(P \\<oplus> Q)[<\\<sigma>>] = ((P[<\\<sigma>>]) \\<oplus> (Q[<\\<sigma>>]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus>\\<^sub>\\<top> Q[<\\<sigma>>] =\n    (P[<\\<sigma>>]) \\<oplus>\\<^sub>\\<top> Q[<\\<sigma>>]", "using assms"], ["proof (prove)\nusing this:\n  wellFormedSubst \\<sigma>\n\ngoal (1 subgoal):\n 1. P \\<oplus>\\<^sub>\\<top> Q[<\\<sigma>>] =\n    (P[<\\<sigma>>]) \\<oplus>\\<^sub>\\<top> Q[<\\<sigma>>]", "by(induct \\<sigma> arbitrary: P Q) auto"], ["", "lemma Sum1:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<longmapsto> Rs\"\n  and     \"guarded P\"\n\n  shows \"\\<Psi> \\<rhd> P \\<oplus> Q \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "have \"\\<Psi> \\<turnstile> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<turnstile> \\<top>", "by(rule Top)"], ["proof (state)\nthis:\n  \\<Psi> \\<turnstile> \\<top>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "with \\<open>\\<Psi> \\<rhd> P \\<longmapsto> Rs\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n  \\<Psi> \\<turnstile> \\<top>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n  \\<Psi> \\<turnstile> \\<top>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "using \\<open>guarded P\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n  \\<Psi> \\<turnstile> \\<top>\n  guarded P\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "by(rule SumAssert1)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Sum2:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> Q \\<longmapsto> Rs\"\n  and     \"guarded Q\"\n\n  shows \"\\<Psi> \\<rhd> P \\<oplus> Q \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "have \"\\<Psi> \\<turnstile> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<turnstile> \\<top>", "by(rule Top)"], ["proof (state)\nthis:\n  \\<Psi> \\<turnstile> \\<top>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "with \\<open>\\<Psi> \\<rhd> Q \\<longmapsto> Rs\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n  \\<Psi> \\<turnstile> \\<top>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n  \\<Psi> \\<turnstile> \\<top>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "using \\<open>guarded Q\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n  \\<Psi> \\<turnstile> \\<top>\n  guarded Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs", "by(rule SumAssert2)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sumCases[consumes 1, case_names cSum1 cSum2]:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<oplus> Q \\<longmapsto> Rs\"\n  and     rSum1: \"\\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> Rs; guarded P\\<rbrakk> \\<Longrightarrow> Prop\"\n  and     rSum2: \"\\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk> \\<Longrightarrow> Prop\"\n\n  shows Prop"], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop", "have \"\\<Psi> \\<turnstile> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<turnstile> \\<top>", "by(rule Top)"], ["proof (state)\nthis:\n  \\<Psi> \\<turnstile> \\<top>\n\ngoal (1 subgoal):\n 1. Prop", "with \\<open>\\<Psi> \\<rhd> P \\<oplus> Q \\<longmapsto> Rs\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs\n  \\<Psi> \\<turnstile> \\<top>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> Q \\<longmapsto> Rs\n  \\<Psi> \\<turnstile> \\<top>\n\ngoal (1 subgoal):\n 1. Prop", "proof(induct rule: sumAssertCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> Rs; guarded P\\<rbrakk>\n    \\<Longrightarrow> Prop\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk>\n    \\<Longrightarrow> Prop", "case cSum1"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n  guarded P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> Rs; guarded P\\<rbrakk>\n    \\<Longrightarrow> Prop\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk>\n    \\<Longrightarrow> Prop", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> Rs\n  guarded P\n\ngoal (1 subgoal):\n 1. Prop", "by (rule rSum1)"], ["proof (state)\nthis:\n  Prop\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk>\n    \\<Longrightarrow> Prop", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk>\n    \\<Longrightarrow> Prop", "case cSum2"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n  guarded Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> Rs; guarded Q\\<rbrakk>\n    \\<Longrightarrow> Prop", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> Rs\n  guarded Q\n\ngoal (1 subgoal):\n 1. Prop", "by(rule rSum2)"], ["proof (state)\nthis:\n  Prop\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Prop\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}