{"file_name": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi/Tau_Stat_Imp.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi", "problem_names": ["lemma tauLaw1StatImpLeft:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<lessapprox>\\<^sub>w<Rel> Q\"\n  and     \"(\\<Psi>, \\<tau>.(P), Q) \\<in> Rel\"\n \n  shows \"\\<Psi> \\<rhd> \\<tau>.(P) \\<lessapprox>\\<^sub>w<Rel> Q\"", "lemma tauLaw1StatImpRight:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\"\n  and     C1: \"\\<And>\\<Psi> P Q R. \\<lbrakk>(\\<Psi>, P, Q) \\<in> Rel; \\<Psi> \\<rhd> Q \\<sim> R\\<rbrakk> \\<Longrightarrow> (\\<Psi>, P, R) \\<in> Rel'\"\n\n  shows \"\\<Psi> \\<rhd> P \\<lessapprox><Rel'> \\<tau>.(Q)\"", "lemma tauLaw3StatImpLeft:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha> :: \"'a prefix\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.(P)), \\<alpha>\\<cdot>Q) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.(P)) \\<lessapprox><Rel> \\<alpha>\\<cdot>Q\"", "lemma tauLaw3StatImpRight:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, \\<alpha>\\<cdot>(\\<tau>.(Q))) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>P \\<lessapprox><Rel> \\<alpha>\\<cdot>(\\<tau>.(Q))\"", "lemma tauLaw2StatImpLeft:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus> \\<tau>.(P), \\<tau>.(P)) \\<in> Rel\" \n\n  shows \"\\<Psi> \\<rhd> P \\<oplus> \\<tau>.(P) \\<lessapprox><Rel> \\<tau>.(P)\"", "lemma tauLaw2StatImpRight:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.(P), P \\<oplus> \\<tau>.(P)) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<tau>.(P) \\<lessapprox><Rel> P \\<oplus> \\<tau>.(P)\"", "lemma tauLaw4StatImpLeft:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   M :: 'a\n  and   N :: 'a\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q), \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q) \\<lessapprox><Rel> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)\"", "lemma tauLaw4StatImpRight:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha> :: \"'a prefix\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q), \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q) \\<lessapprox><Rel> \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)\""], "translations": [["", "lemma tauLaw1StatImpLeft:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<lessapprox>\\<^sub>w<Rel> Q\"\n  and     \"(\\<Psi>, \\<tau>.(P), Q) \\<in> Rel\"\n \n  shows \"\\<Psi> \\<rhd> \\<tau>.(P) \\<lessapprox>\\<^sub>w<Rel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q", "have \"\\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q", "by simp"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q", "have \"insertAssertion (extractFrame(\\<tau>.(P))) \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "by(rule insertTauAssertion)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q", "hence \"insertAssertion (extractFrame(\\<tau>.(P))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q) \\<Psi>\""], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q)\n \\<Psi>", "by(metis FrameStatImpTrans FrameStatEq_def insertAssertionWeaken)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q) \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q) \\<Psi>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q) \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q", "using \\<open>(\\<Psi>, \\<tau>.(P), Q) \\<in> Rel\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q) \\<Psi>\n  (\\<Psi>, \\<tau>.P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q", "by(rule weakenStatImpI)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox>\\<^sub>w<Rel> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauLaw1StatImpRight:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\"\n  and     C1: \"\\<And>\\<Psi> P Q R. \\<lbrakk>(\\<Psi>, P, Q) \\<in> Rel; \\<Psi> \\<rhd> Q \\<sim> R\\<rbrakk> \\<Longrightarrow> (\\<Psi>, P, R) \\<in> Rel'\"\n\n  shows \"\\<Psi> \\<rhd> P \\<lessapprox><Rel'> \\<tau>.(Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<lessapprox><Rel'> \\<tau>.Q", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "from \\<open>\\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<lessapprox><Rel> Q", "obtain Q' Q'' \n    where QChain: \"\\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\" and PImpQ': \"insertAssertion (extractFrame P) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') \\<Psi>\" \n      and Q'Chain: \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\" and PRelQ'': \"(\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<lessapprox><Rel> Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q' Q''.\n        \\<lbrakk>\\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q';\n         insertAssertion (extractFrame P)\n          \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n      \\<Psi>;\n         \\<Psi> \\<otimes>\n         \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'';\n         (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule weakStatImpE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  insertAssertion (extractFrame P)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n  (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "obtain Q''' where QTrans: \"\\<Psi> \\<rhd> \\<tau>.(Q) \\<longmapsto>\\<tau> \\<prec> Q'''\" and \"\\<Psi> \\<rhd> Q \\<sim> Q'''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q'''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.Q \\<longmapsto> \\<tau> \\<prec> Q''';\n         \\<Psi> \\<rhd> Q \\<sim> Q'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using tauActionI"], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     ?\\<Psi> \\<rhd> \\<tau>.?P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n     ?\\<Psi> \\<rhd> ?P \\<sim> P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'''.\n        \\<lbrakk>\\<Psi> \\<rhd> \\<tau>.Q \\<longmapsto> \\<tau> \\<prec> Q''';\n         \\<Psi> \\<rhd> Q \\<sim> Q'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.Q \\<longmapsto> \\<tau> \\<prec> Q'''\n  \\<Psi> \\<rhd> Q \\<sim> Q'''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "from \\<open>\\<Psi> \\<rhd> Q \\<sim> Q'''\\<close> QChain bisimE(2)"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<sim> Q'''\n  \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  ?\\<Psi> \\<rhd> ?P \\<sim> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<leadsto>[bisim] ?Q", "obtain Q'''' where Q'''Chain: \"\\<Psi> \\<rhd> Q''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''\" and \"\\<Psi> \\<rhd> Q' \\<sim> Q''''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<sim> Q'''\n  \\<Psi> \\<rhd> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'\n  ?\\<Psi> \\<rhd> ?P \\<sim> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<leadsto>[bisim] ?Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q''''.\n        \\<lbrakk>\\<Psi> \\<rhd> Q''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'''';\n         \\<Psi> \\<rhd> Q' \\<sim> Q''''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(metis bisimE(4) simTauChain)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''\n  \\<Psi> \\<rhd> Q' \\<sim> Q''''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "from QTrans Q'''Chain"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.Q \\<longmapsto> \\<tau> \\<prec> Q'''\n  \\<Psi> \\<rhd> Q''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''", "have \"\\<Psi> \\<rhd> \\<tau>.(Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.Q \\<longmapsto> \\<tau> \\<prec> Q'''\n  \\<Psi> \\<rhd> Q''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''", "by(drule_tac tauActTauChain) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "from \\<open>\\<Psi> \\<rhd> Q' \\<sim> Q''''\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q' \\<sim> Q''''", "have \"insertAssertion (extractFrame Q') \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''') \\<Psi>\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q' \\<sim> Q''''\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame Q')\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n \\<Psi>", "by(metis bisimE FrameStatEq_def)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame Q')\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "with PImpQ'"], ["proof (chain)\npicking this:\n  insertAssertion (extractFrame P)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') \\<Psi>\n  insertAssertion (extractFrame Q')\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n                                     \\<Psi>", "have \"insertAssertion (extractFrame P) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''') \\<Psi>\""], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame P)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q') \\<Psi>\n  insertAssertion (extractFrame Q')\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame P)\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n \\<Psi>", "by(rule FrameStatImpTrans)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame P)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  insertAssertion (extractFrame P)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "from \\<open>\\<Psi> \\<rhd> Q' \\<sim> Q''''\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q' \\<sim> Q''''", "have \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<sim> Q''''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q' \\<sim> Q''''\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<sim> Q''''", "by(rule bisimE)"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<sim> Q''''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<sim> Q''''", "obtain Q''''' where Q''''Chain: \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q'''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'''''\" and \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q'' \\<sim> Q'''''\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<sim> Q''''\n\ngoal (1 subgoal):\n 1. (\\<And>Q'''''.\n        \\<lbrakk>\\<Psi> \\<otimes>\n                 \\<Psi>' \\<rhd> Q'''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''';\n         \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q'' \\<sim> Q'''''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Q'Chain bisimE(2)"], ["proof (prove)\nusing this:\n  \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q' \\<sim> Q''''\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''\n  ?\\<Psi> \\<rhd> ?P \\<sim> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<leadsto>[bisim] ?Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'''''.\n        \\<lbrakk>\\<Psi> \\<otimes>\n                 \\<Psi>' \\<rhd> Q'''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''';\n         \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q'' \\<sim> Q'''''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(metis bisimE(4) simTauChain)"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q'''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'''''\n  \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q'' \\<sim> Q'''''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "note Q''''Chain"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q'''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'''''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q'''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'''''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "from \\<open>(\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel\\<close> \\<open>\\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q'' \\<sim> Q'''''\\<close>"], ["proof (chain)\npicking this:\n  (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel\n  \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q'' \\<sim> Q'''''", "have \"(\\<Psi> \\<otimes> \\<Psi>', P, Q''''') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel\n  \\<Psi> \\<otimes> \\<Psi>' \\<rhd> Q'' \\<sim> Q'''''\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', P, Q''''') \\<in> Rel'", "by(rule C1)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', P, Q''''') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame P)\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''\n  insertAssertion (extractFrame P)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q'''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'''''\n  (\\<Psi> \\<otimes> \\<Psi>', P, Q''''') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q''''\n  insertAssertion (extractFrame P)\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q'''')\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> Q'''' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'''''\n  (\\<Psi> \\<otimes> \\<Psi>', P, Q''''') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion (extractFrame P)\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> \\<tau>.Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion (extractFrame P)\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>', P, Q'') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context tau begin"], ["", "lemma tauLaw3StatImpLeft:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha> :: \"'a prefix\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.(P)), \\<alpha>\\<cdot>Q) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.(P)) \\<lessapprox><Rel> \\<alpha>\\<cdot>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<lessapprox><Rel> \\<alpha>\\<cdot>Q", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "have \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "have \"insertAssertion (extractFrame(\\<alpha>\\<cdot>(\\<tau>.(P)))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame(\\<alpha>\\<cdot>Q)) \\<Psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<alpha>\\<cdot>Q)) \\<Psi>", "using insertTauAssertion"], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame (\\<tau>.?P))\n   ?\\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, ?\\<Psi>\\<rangle>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<alpha>\\<cdot>Q)) \\<Psi>", "by(nominal_induct \\<alpha> rule: prefix.strong_inducts) (auto simp add: FrameStatEq_def intro: FrameStatImpTrans)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame (\\<alpha>\\<cdot>Q))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame (\\<alpha>\\<cdot>Q))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "have \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "have \"(\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.(P)), \\<alpha>\\<cdot>Q) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), \\<alpha>\\<cdot>Q)\n    \\<in> Rel", "by(rule C1)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), \\<alpha>\\<cdot>Q)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'')\n          \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\n  insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame (\\<alpha>\\<cdot>Q))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\n  (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), \\<alpha>\\<cdot>Q)\n  \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\n  insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame (\\<alpha>\\<cdot>Q))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>Q\n  (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), \\<alpha>\\<cdot>Q)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> \\<alpha>\\<cdot>Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P)))\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.P), Q'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauLaw3StatImpRight:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, \\<alpha>\\<cdot>(\\<tau>.(Q))) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>P \\<lessapprox><Rel> \\<alpha>\\<cdot>(\\<tau>.(Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<alpha>\\<cdot>P \\<lessapprox><Rel> \\<alpha>\\<cdot>(\\<tau>.Q)", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "have \"\\<Psi> \\<rhd>  \\<alpha>\\<cdot>(\\<tau>.(Q)) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau>  \\<alpha>\\<cdot>(\\<tau>.(Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "have \"insertAssertion (extractFrame(\\<alpha>\\<cdot>P)) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame(\\<alpha>\\<cdot>(\\<tau>.(Q)))) \\<Psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<alpha>\\<cdot>(\\<tau>.Q))) \\<Psi>", "using insertTauAssertion"], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame (\\<tau>.?P))\n   ?\\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, ?\\<Psi>\\<rangle>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<alpha>\\<cdot>(\\<tau>.Q))) \\<Psi>", "by(nominal_induct \\<alpha> rule: prefix.strong_inducts) (auto simp add: FrameStatEq_def intro: FrameStatImpTrans)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<alpha>\\<cdot>(\\<tau>.Q)))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<alpha>\\<cdot>(\\<tau>.Q)))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "have \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd>  \\<alpha>\\<cdot>(\\<tau>.(Q)) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau>  \\<alpha>\\<cdot>(\\<tau>.(Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "have \"(\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, \\<alpha>\\<cdot>(\\<tau>.(Q))) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, \\<alpha>\\<cdot>(\\<tau>.Q))\n    \\<in> Rel", "by(rule C1)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, \\<alpha>\\<cdot>(\\<tau>.Q))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)\n  insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<alpha>\\<cdot>(\\<tau>.Q)))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)\n  (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, \\<alpha>\\<cdot>(\\<tau>.Q))\n  \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)\n  insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<alpha>\\<cdot>(\\<tau>.Q)))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.Q)\n  (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, \\<alpha>\\<cdot>(\\<tau>.Q))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion (extractFrame (\\<alpha>\\<cdot>P))\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P, Q'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context tauSum begin"], ["", "lemma tauLaw2StatImpLeft:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus> \\<tau>.(P), \\<tau>.(P)) \\<in> Rel\" \n\n  shows \"\\<Psi> \\<rhd> P \\<oplus> \\<tau>.(P) \\<lessapprox><Rel> \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<lessapprox><Rel> \\<tau>.P", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "have \"\\<Psi> \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "have \"insertAssertion (extractFrame(\\<tau>.(P))) \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "by(rule insertTauAssertion)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "hence \"insertAssertion (extractFrame(P \\<oplus> \\<tau>.(P))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame(\\<tau>.(P))) \\<Psi>\""], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<tau>.P)) \\<Psi>", "using Identity"], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n  ?\\<Psi> \\<otimes> \\<one> \\<simeq> ?\\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<tau>.P)) \\<Psi>", "by(rule_tac FrameStatImpTrans) (auto simp add: FrameStatEq_def AssertionStatEq_def)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame (\\<tau>.P)) \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame (\\<tau>.P)) \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "have \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> \\<tau>.(P) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "have \"(\\<Psi> \\<otimes> \\<Psi>', P \\<oplus> \\<tau>.(P), \\<tau>.(P)) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, \\<tau>.P)\n    \\<in> Rel", "by(rule C1)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, \\<tau>.P)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n          \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P\n  insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame (\\<tau>.P)) \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P\n  (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, \\<tau>.P)\n  \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P\n  insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame (\\<tau>.P)) \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<tau>.P\n  (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, \\<tau>.P)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n       \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>', P \\<oplus>\\<^sub>\\<top> \\<tau>.P, Q'')\n     \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauLaw2StatImpRight:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.(P), P \\<oplus> \\<tau>.(P)) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<tau>.(P) \\<lessapprox><Rel> P \\<oplus> \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<tau>.P \\<lessapprox><Rel> P \\<oplus>\\<^sub>\\<top> \\<tau>.P", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "have \"\\<Psi> \\<rhd> P \\<oplus> \\<tau>.(P) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus> \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "have \"insertAssertion (extractFrame(\\<tau>.(P))) \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>", "by(rule insertTauAssertion)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "hence \"insertAssertion (extractFrame(\\<tau>.(P))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame(P \\<oplus> \\<tau>.(P))) \\<Psi>\""], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P)) \\<Psi>", "using Identity"], ["proof (prove)\nusing this:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, \\<Psi>\\<rangle>\n  ?\\<Psi> \\<otimes> \\<one> \\<simeq> ?\\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion (extractFrame (\\<tau>.P))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (P \\<oplus>\\<^sub>\\<top> \\<tau>.P)) \\<Psi>", "by(rule_tac FrameStatImpTrans) (auto simp add: FrameStatEq_def AssertionStatEq_def)"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "have \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> P \\<oplus> \\<tau>.(P) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus> \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "have \"(\\<Psi> \\<otimes> \\<Psi>', \\<tau>.(P), P \\<oplus> \\<tau>.(P)) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, P \\<oplus>\\<^sub>\\<top> \\<tau>.P)\n    \\<in> Rel", "by(rule C1)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, P \\<oplus>\\<^sub>\\<top> \\<tau>.P)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion (extractFrame (\\<tau>.P))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P\n  (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, P \\<oplus>\\<^sub>\\<top> \\<tau>.P)\n  \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P\n  insertAssertion (extractFrame (\\<tau>.P))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (P \\<oplus>\\<^sub>\\<top> \\<tau>.P))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> P \\<oplus>\\<^sub>\\<top> \\<tau>.P\n  (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, P \\<oplus>\\<^sub>\\<top> \\<tau>.P)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion (extractFrame (\\<tau>.P))\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> P \\<oplus>\\<^sub>\\<top> \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion (extractFrame (\\<tau>.P))\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>', \\<tau>.P, Q'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauLaw4StatImpLeft:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   M :: 'a\n  and   N :: 'a\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q), \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q) \\<lessapprox><Rel> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<lessapprox><Rel> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n           Q'')\n          \\<in> Rel", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n           Q'')\n          \\<in> Rel", "have \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n           Q'')\n          \\<in> Rel", "hence \"insertAssertion (extractFrame(\\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame(\\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q))) \\<Psi>\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n\ngoal (1 subgoal):\n 1. insertAssertion\n     (extractFrame\n       ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)) \\<Psi>", "using insertTauAssertion Identity"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n  insertAssertion (extractFrame (\\<tau>.?P))\n   ?\\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, ?\\<Psi>\\<rangle>\n  ?\\<Psi> \\<otimes> \\<one> \\<simeq> ?\\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion\n     (extractFrame\n       ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)) \\<Psi>", "by(nominal_induct \\<alpha> rule: prefix.strong_inducts, auto) \n  (rule FrameStatImpTrans[where G=\"\\<langle>\\<epsilon>, \\<Psi>\\<rangle>\"], auto simp add: FrameStatEq_def AssertionStatEq_def)"], ["proof (state)\nthis:\n  insertAssertion\n   (extractFrame\n     ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n           Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  insertAssertion\n   (extractFrame\n     ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n           Q'')\n          \\<in> Rel", "have \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n           Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n           Q'')\n          \\<in> Rel", "have \"(\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q), \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>',\n     (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n     \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)\n    \\<in> Rel", "by(rule C1)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>',\n   (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n   \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n           Q'')\n          \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  insertAssertion\n   (extractFrame\n     ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n  (\\<Psi> \\<otimes> \\<Psi>',\n   (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n   \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)\n  \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  insertAssertion\n   (extractFrame\n     ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n  (\\<Psi> \\<otimes> \\<Psi>',\n   (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n   \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion\n        (extractFrame\n          ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>',\n        (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n        Q'')\n       \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion\n      (extractFrame\n        ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>',\n      (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n      Q'')\n     \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauLaw4StatImpRight:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<alpha> :: \"'a prefix\"\n\n  assumes C1: \"\\<And>\\<Psi>'. (\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q), \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)) \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q) \\<lessapprox><Rel> \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<lessapprox><Rel> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q", "proof(induct rule: weakStatImpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n          \\<in> Rel", "case(cStatImp \\<Psi>')"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n          \\<in> Rel", "have \"\\<Psi> \\<rhd> \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n          \\<in> Rel", "hence \"insertAssertion (extractFrame(\\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q))) \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame(\\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q))) \\<Psi>\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n\ngoal (1 subgoal):\n 1. insertAssertion\n     (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame\n   ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n \\<Psi>", "using insertTauAssertion Identity"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n  insertAssertion (extractFrame (\\<tau>.?P))\n   ?\\<Psi> \\<simeq>\\<^sub>F \\<langle>\\<epsilon>, ?\\<Psi>\\<rangle>\n  ?\\<Psi> \\<otimes> \\<one> \\<simeq> ?\\<Psi>\n\ngoal (1 subgoal):\n 1. insertAssertion\n     (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n     \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n (extractFrame\n   ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n \\<Psi>", "by(nominal_induct \\<alpha> rule: prefix.strong_inducts, auto) \n  (rule FrameStatImpTrans[where G=\"\\<langle>\\<epsilon>, \\<Psi>\\<rangle>\"], auto simp add: FrameStatEq_def AssertionStatEq_def)"], ["proof (state)\nthis:\n  insertAssertion\n   (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  insertAssertion\n   (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n                                     \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n          \\<in> Rel", "have \"\\<Psi> \\<otimes> \\<Psi>' \\<rhd> \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q) \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<otimes>\n    \\<Psi>' \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q", "by auto"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n          \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n          \\<in> Rel", "have \"(\\<Psi> \\<otimes> \\<Psi>', \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q), \\<alpha>\\<cdot>P \\<oplus> \\<alpha>\\<cdot>(\\<tau>.(P) \\<oplus> Q)) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>',\n     \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n     (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)\n    \\<in> Rel", "by(rule C1)"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>',\n   \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n   (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>'.\n       \\<exists>Q' Q''.\n          \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n          insertAssertion\n           (extractFrame\n             (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n           \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n       (extractFrame Q') \\<Psi> \\<and>\n          \\<Psi> \\<otimes>\n          \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n          (\\<Psi> \\<otimes> \\<Psi>',\n           \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n          \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  insertAssertion\n   (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n  (\\<Psi> \\<otimes> \\<Psi>',\n   \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n   (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)\n  \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  insertAssertion\n   (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n   \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion\n                                     (extractFrame\n ((\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n                                     \\<Psi>\n  \\<Psi> \\<otimes>\n  \\<Psi>' \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q\n  (\\<Psi> \\<otimes> \\<Psi>',\n   \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q,\n   (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q)\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q' Q''.\n       \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n       insertAssertion\n        (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n        \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n    \\<Psi> \\<and>\n       \\<Psi> \\<otimes>\n       \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n       (\\<Psi> \\<otimes> \\<Psi>',\n        \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n       \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q' Q''.\n     \\<Psi> \\<rhd> (\\<alpha>\\<cdot>P) \\<oplus>\\<^sub>\\<top> \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n     insertAssertion\n      (extractFrame (\\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q))\n      \\<Psi> \\<hookrightarrow>\\<^sub>F insertAssertion (extractFrame Q')\n  \\<Psi> \\<and>\n     \\<Psi> \\<otimes>\n     \\<Psi>' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n     (\\<Psi> \\<otimes> \\<Psi>',\n      \\<alpha>\\<cdot>(\\<tau>.P) \\<oplus>\\<^sub>\\<top> Q, Q'')\n     \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}