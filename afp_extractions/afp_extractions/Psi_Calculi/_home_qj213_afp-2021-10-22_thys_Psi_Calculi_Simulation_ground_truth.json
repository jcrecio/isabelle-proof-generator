{"file_name": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi/Simulation.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi", "problem_names": ["lemma simI[consumes 1, case_names cSim]:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   C   :: \"'d::fs_name\"\n\n  assumes Eqvt: \"eqvt Rel\"\n  and     Sim: \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q; bn \\<alpha>  \\<sharp>* \\<Psi>; distinct(bn \\<alpha>);\n                         bn \\<alpha> \\<sharp>* (subject \\<alpha>); bn \\<alpha> \\<sharp>* C\\<rbrakk> \\<Longrightarrow> \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"", "lemma simI2[case_names cSim]:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   C   :: \"'d::fs_name\"\n\n  assumes Sim: \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* P; bn \\<alpha>  \\<sharp>* \\<Psi>; distinct(bn \\<alpha>)\\<rbrakk> \\<Longrightarrow> \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"", "lemma simIChainFresh[consumes 4, case_names cSim]:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n  and   C    :: \"'d::fs_name\"\n\n  assumes Eqvt: \"eqvt Rel\"\n  and     \"xvec \\<sharp>* \\<Psi>\"\n  and     \"xvec \\<sharp>* P\"\n  and     \"xvec \\<sharp>* Q\"\n  and     Sim: \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q; bn \\<alpha> \\<sharp>* \\<Psi>;\n                         bn \\<alpha> \\<sharp>* subject \\<alpha>; distinct(bn \\<alpha>); bn \\<alpha> \\<sharp>* C; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* Q'\\<rbrakk> \\<Longrightarrow>\n                         \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"", "lemma simIFresh[consumes 4, case_names cSim]:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   x   :: name\n  and   C   :: \"'d::fs_name\"\n\n  assumes Eqvt: \"eqvt Rel\"\n  and     \"x \\<sharp> \\<Psi>\"\n  and     \"x \\<sharp> P\"\n  and     \"x \\<sharp> Q\"\n  and     \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q; bn \\<alpha> \\<sharp>* \\<Psi>;\n                    bn \\<alpha> \\<sharp>* subject \\<alpha>; distinct(bn \\<alpha>); bn \\<alpha> \\<sharp>* C; x \\<sharp> \\<alpha>; x \\<sharp> Q'\\<rbrakk> \\<Longrightarrow>\n                    \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"", "lemma simE:\n  fixes F   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"\n\n  shows \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* \\<Psi>; bn \\<alpha> \\<sharp>* P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"", "lemma simClosedAux:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   p   :: \"name prm\"\n\n  assumes EqvtRel: \"eqvt Rel\"\n  and     PSimQ: \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"\n\n  shows \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<leadsto>[Rel] (p \\<bullet> Q)\"", "lemma simClosed:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   p   :: \"name prm\"\n\n  assumes EqvtRel: \"eqvt Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q \\<Longrightarrow> (p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<leadsto>[Rel] (p \\<bullet> Q)\"\n  and   \"P \\<leadsto>[Rel] Q \\<Longrightarrow> (p \\<bullet> P) \\<leadsto>[Rel] (p \\<bullet> Q)\"", "lemma reflexive:\n  fixes Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n\n  assumes \"{(\\<Psi>, P, P) | \\<Psi> P. True} \\<subseteq> Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] P\"", "lemma transitive:\n  fixes \\<Psi>     :: 'b\n  and   P     :: \"('a, 'b, 'c) psi\"\n  and   Rel   :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q     :: \"('a, 'b, 'c) psi\"\n  and   Rel'  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   R     :: \"('a, 'b, 'c) psi\"\n  and   Rel'' :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n\n  assumes PSimQ: \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"\n  and     QSimR: \"\\<Psi> \\<rhd> Q \\<leadsto>[Rel'] R\"\n  and     Eqvt: \"eqvt Rel''\"\n  and     Set: \"{(\\<Psi>, P, R) | \\<Psi> P R. \\<exists>Q. (\\<Psi>, P, Q) \\<in> Rel \\<and> (\\<Psi>, Q, R) \\<in> Rel'} \\<subseteq> Rel''\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel''] R\"", "lemma statEqSim:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   \\<Psi>'  :: 'b\n\n  assumes PSimQ: \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"\n  and     \"eqvt Rel'\"\n  and     \"\\<Psi> \\<simeq> \\<Psi>'\"\n  and     C1: \"\\<And>\\<Psi>'' R S \\<Psi>'''. \\<lbrakk>(\\<Psi>'', R, S) \\<in> Rel; \\<Psi>'' \\<simeq> \\<Psi>'''\\<rbrakk> \\<Longrightarrow> (\\<Psi>''', R, S) \\<in> Rel'\"\n\n  shows \"\\<Psi>' \\<rhd> P \\<leadsto>[Rel'] Q\"", "lemma monotonic: \n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   A :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   B :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<leadsto>[A] Q\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[B] Q\""], "translations": [["", "lemma simI[consumes 1, case_names cSim]:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   C   :: \"'d::fs_name\"\n\n  assumes Eqvt: \"eqvt Rel\"\n  and     Sim: \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q; bn \\<alpha>  \\<sharp>* \\<Psi>; distinct(bn \\<alpha>);\n                         bn \\<alpha> \\<sharp>* (subject \\<alpha>); bn \\<alpha> \\<sharp>* C\\<rbrakk> \\<Longrightarrow> \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q", "proof(auto simp add: simulation_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* \\<Psi>; bn \\<alpha> \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "fix \\<alpha> Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* \\<Psi>; bn \\<alpha> \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "assume \"\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'\" and \"bn \\<alpha> \\<sharp>* \\<Psi>\" and \"bn \\<alpha> \\<sharp>* P\""], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* \\<Psi>; bn \\<alpha> \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "thus \"\\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "proof(nominal_induct \\<alpha> rule: action.strong_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a1 a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>a2\\<rparr> \\<prec> Q';\n        bn (a1\\<lparr>a2\\<rparr>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>a2\\<rparr>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>a2\\<rparr> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q';\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "case(In M N)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> Q'\n  bn (M\\<lparr>N\\<rparr>) \\<sharp>* \\<Psi>\n  bn (M\\<lparr>N\\<rparr>) \\<sharp>* P\n\ngoal (3 subgoals):\n 1. \\<And>a1 a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>a2\\<rparr> \\<prec> Q';\n        bn (a1\\<lparr>a2\\<rparr>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>a2\\<rparr>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>a2\\<rparr> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q';\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> Q'\n  bn (M\\<lparr>N\\<rparr>) \\<sharp>* \\<Psi>\n  bn (M\\<lparr>N\\<rparr>) \\<sharp>* P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "by(rule_tac Sim) auto"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q';\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q';\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "case(Out M xvec N)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* \\<Psi>\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* P\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q';\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* \\<Psi>\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* P\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q';\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "{"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* \\<Psi>\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* P\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q';\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "fix M xvec N Q'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "assume \"(xvec::name list) \\<sharp>* \\<Psi>\" and \"xvec \\<sharp>* P\""], ["proof (state)\nthis:\n  xvec \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "obtain p where xvecFreshPsi: \"((p::name prm) \\<bullet> (xvec::name list)) \\<sharp>* \\<Psi>\"\n                 and xvecFreshM: \"(p \\<bullet> xvec) \\<sharp>* (M::'a)\"\n                 and xvecFreshN: \"(p \\<bullet> xvec) \\<sharp>* (N::'a)\"\n                 and xvecFreshP: \"(p \\<bullet> xvec) \\<sharp>* P\"\n                 and xvecFreshQ: \"(p \\<bullet> xvec) \\<sharp>* Q\"\n                 and xvecFreshQ': \"(p \\<bullet> xvec) \\<sharp>* (Q'::('a, 'b, 'c) psi)\"\n                 and xvecFreshC: \"(p \\<bullet> xvec) \\<sharp>* C\"\n                 and xvecFreshxvec: \"(p \\<bullet> xvec) \\<sharp>* xvec\"\n                 and S: \"(set p) \\<subseteq> (set xvec) \\<times> (set(p \\<bullet> xvec))\"\n                 and dpr: \"distinctPerm p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> xvec) \\<sharp>* \\<Psi>;\n         (p \\<bullet> xvec) \\<sharp>* M; (p \\<bullet> xvec) \\<sharp>* N;\n         (p \\<bullet> xvec) \\<sharp>* P; (p \\<bullet> xvec) \\<sharp>* Q;\n         (p \\<bullet> xvec) \\<sharp>* Q'; (p \\<bullet> xvec) \\<sharp>* C;\n         (p \\<bullet> xvec) \\<sharp>* xvec;\n         set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n         distinctPerm p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac xvec=xvec and c=\"(\\<Psi>, M, Q, N, P, Q', xvec, C)\" in name_list_avoiding)\n          (auto simp add: eqvts fresh_star_prod)"], ["proof (state)\nthis:\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* M\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* Q'\n  (p \\<bullet> xvec) \\<sharp>* C\n  (p \\<bullet> xvec) \\<sharp>* xvec\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "from \\<open>(p \\<bullet> xvec) \\<sharp>* M\\<close> \\<open>distinctPerm p\\<close>"], ["proof (chain)\npicking this:\n  (p \\<bullet> xvec) \\<sharp>* M\n  distinctPerm p", "have \"xvec \\<sharp>* (p \\<bullet> M)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> xvec) \\<sharp>* M\n  distinctPerm p\n\ngoal (1 subgoal):\n 1. xvec \\<sharp>* (p \\<bullet> M)", "by(subst pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst, where pi=p, symmetric]) simp"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> M)\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "assume Trans: \"\\<Psi> \\<rhd> Q \\<longmapsto>M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\""], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "with xvecFreshN xvecFreshQ' S"], ["proof (chain)\npicking this:\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* Q'\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'", "have \"\\<Psi> \\<rhd> Q \\<longmapsto>M\\<lparr>\\<nu>*(p \\<bullet> xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  (p \\<bullet> xvec) \\<sharp>* N\n  (p \\<bullet> xvec) \\<sharp>* Q'\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n            xvec)\\<rparr>\\<langle>(p \\<bullet>\n                                   N)\\<rangle> \\<prec> p \\<bullet> Q'", "by(simp add: boundOutputChainAlpha'' residualInject)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "hence \"distinct(p \\<bullet> xvec)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. distinct (p \\<bullet> xvec)", "by(auto dest: boundOutputDistinct)"], ["proof (state)\nthis:\n  distinct (p \\<bullet> xvec)\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  distinct (p \\<bullet> xvec)\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "note xvecFreshPsi xvecFreshP xvecFreshQ xvecFreshM xvecFreshC"], ["proof (state)\nthis:\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* M\n  (p \\<bullet> xvec) \\<sharp>* C\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n  distinct (p \\<bullet> xvec)\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* M\n  (p \\<bullet> xvec) \\<sharp>* C", "obtain P' where PTrans: \"\\<Psi> \\<rhd> P \\<longmapsto>M\\<lparr>\\<nu>*(p \\<bullet> xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'\"\n                            and P'RelQ': \"(\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n  distinct (p \\<bullet> xvec)\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* M\n  (p \\<bullet> xvec) \\<sharp>* C\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n                         xvec)\\<rparr>\\<langle>(p \\<bullet>\n          N)\\<rangle> \\<prec> P';\n         (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(drule_tac Sim) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "hence \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<longmapsto>(p \\<bullet> (M\\<lparr>\\<nu>*(p \\<bullet> xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'))\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<rhd> p \\<bullet>\n                  P \\<longmapsto> p \\<bullet>\n                                  M\\<lparr>\\<nu>*(p \\<bullet>\n            xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'", "by(rule_tac semantics.eqvt)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> xvecFreshPsi \\<open>xvec \\<sharp>* P\\<close> xvecFreshP S dpr"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'", "have \"\\<Psi> \\<rhd> P \\<longmapsto>(p \\<bullet> M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> (p \\<bullet> P')\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                M\\<lparr>\\<nu>*(p \\<bullet>\n          xvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                   M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n               P'", "by(simp add: eqvts name_set_fresh_fresh)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n             P'\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> xvecFreshPsi \\<open>xvec \\<sharp>* P\\<close> xvecFreshP S \\<open>xvec \\<sharp>* (p \\<bullet> M)\\<close>"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  xvec \\<sharp>* (p \\<bullet> M)\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n             P'", "have \"\\<Psi> \\<rhd> P \\<longmapsto>(p \\<bullet> p \\<bullet> M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> (p \\<bullet> P')\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  xvec \\<sharp>* (p \\<bullet> M)\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n             P'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                   p \\<bullet>\n                                   M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n               P'", "by(rule_tac outputPermSubject)\n         (simp add: fresh_star_def | assumption)+"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 p \\<bullet>\n                                 M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n             P'\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "with dpr"], ["proof (chain)\npicking this:\n  distinctPerm p\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 p \\<bullet>\n                                 M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n             P'", "have \"\\<Psi> \\<rhd> P \\<longmapsto>M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> (p \\<bullet> P')\""], ["proof (prove)\nusing this:\n  distinctPerm p\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 p \\<bullet>\n                                 M)\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n             P'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n             P'", "by simp"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "from P'RelQ' Eqvt"], ["proof (chain)\npicking this:\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n  eqvt Rel", "have \"(p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q')\n    \\<in> Rel", "apply(simp add: eqvt_def eqvts)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<Psi>, P', p \\<bullet> Q') \\<in> Rel;\n     \\<forall>x\\<in>Rel. \\<forall>p. p \\<bullet> x \\<in> Rel\\<rbrakk>\n    \\<Longrightarrow> (p \\<bullet> \\<Psi>, p \\<bullet> P',\n                       p \\<bullet> p \\<bullet> Q')\n                      \\<in> Rel", "apply(erule_tac x=\"(\\<Psi>, P', p \\<bullet> Q')\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(\\<Psi>, P', p \\<bullet> Q') \\<in> Rel;\n     \\<forall>pa.\n        pa \\<bullet> (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\\<rbrakk>\n    \\<Longrightarrow> (p \\<bullet> \\<Psi>, p \\<bullet> P',\n                       p \\<bullet> p \\<bullet> Q')\n                      \\<in> Rel\n 2. \\<lbrakk>(\\<Psi>, P', p \\<bullet> Q') \\<in> Rel;\n     (\\<Psi>, P', p \\<bullet> Q') \\<notin> Rel\\<rbrakk>\n    \\<Longrightarrow> (p \\<bullet> \\<Psi>, p \\<bullet> P',\n                       p \\<bullet> p \\<bullet> Q')\n                      \\<in> Rel", "apply(erule_tac x=\"p\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(\\<Psi>, P', p \\<bullet> Q') \\<in> Rel;\n     p \\<bullet> (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\\<rbrakk>\n    \\<Longrightarrow> (p \\<bullet> \\<Psi>, p \\<bullet> P',\n                       p \\<bullet> p \\<bullet> Q')\n                      \\<in> Rel\n 2. \\<lbrakk>(\\<Psi>, P', p \\<bullet> Q') \\<in> Rel;\n     (\\<Psi>, P', p \\<bullet> Q') \\<notin> Rel\\<rbrakk>\n    \\<Longrightarrow> (p \\<bullet> \\<Psi>, p \\<bullet> P',\n                       p \\<bullet> p \\<bullet> Q')\n                      \\<in> Rel", "by(auto simp add: eqvts)"], ["proof (state)\nthis:\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> xvecFreshPsi S dpr"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel", "have \"(\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel", "have \"\\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q'__;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q'__) \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'__;\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q'__) \\<in> Rel", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* P;\n   \\<Psi> \\<rhd> Q \\<longmapsto> ?Ma2\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> ?Q'a2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       \\<Psi> \\<rhd> P \\<longmapsto> ?Ma2\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> P' \\<and>\n                       (\\<Psi>, P', ?Q'a2) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a1 list a2.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> Q';\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* \\<Psi>;\n        bn (a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle>) \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> a1\\<lparr>\\<nu>*list\\<rparr>\\<langle>a2\\<rangle> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* \\<Psi>\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* P\n  \\<lbrakk>?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* P;\n   \\<Psi> \\<rhd> Q \\<longmapsto> ?Ma2\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> ?Q'a2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       \\<Psi> \\<rhd> P \\<longmapsto> ?Ma2\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> P' \\<and>\n                       (\\<Psi>, P', ?Q'a2) \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* \\<Psi>\n  bn (M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle>) \\<sharp>* P\n  \\<lbrakk>?xveca2 \\<sharp>* \\<Psi>; ?xveca2 \\<sharp>* P;\n   \\<Psi> \\<rhd> Q \\<longmapsto> ?Ma2\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> ?Q'a2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       \\<Psi> \\<rhd> P \\<longmapsto> ?Ma2\\<lparr>\\<nu>*?xveca2\\<rparr>\\<langle>?Na2\\<rangle> \\<prec> P' \\<and>\n                       (\\<Psi>, P', ?Q'a2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "by force"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "case Tau"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'\n  bn (\\<tau>) \\<sharp>* \\<Psi>\n  bn (\\<tau>) \\<sharp>* P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q';\n     bn (\\<tau>) \\<sharp>* \\<Psi>; bn (\\<tau>) \\<sharp>* P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n                         (\\<Psi>, P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<tau> \\<prec> Q'\n  bn (\\<tau>) \\<sharp>* \\<Psi>\n  bn (\\<tau>) \\<sharp>* P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "by(rule_tac Sim) auto"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> \\<tau> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simI2[case_names cSim]:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   C   :: \"'d::fs_name\"\n\n  assumes Sim: \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* P; bn \\<alpha>  \\<sharp>* \\<Psi>; distinct(bn \\<alpha>)\\<rbrakk> \\<Longrightarrow> \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q';\n   bn ?\\<alpha> \\<sharp>* P; bn ?\\<alpha> \\<sharp>* \\<Psi>;\n   distinct (bn ?\\<alpha>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       \\<Psi> \\<rhd> P \\<longmapsto> ?\\<alpha> \\<prec> P' \\<and>\n                       (\\<Psi>, P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q", "by(auto simp add: simulation_def dest: boundOutputDistinct)"], ["", "lemma simIChainFresh[consumes 4, case_names cSim]:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Rel  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n  and   C    :: \"'d::fs_name\"\n\n  assumes Eqvt: \"eqvt Rel\"\n  and     \"xvec \\<sharp>* \\<Psi>\"\n  and     \"xvec \\<sharp>* P\"\n  and     \"xvec \\<sharp>* Q\"\n  and     Sim: \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q; bn \\<alpha> \\<sharp>* \\<Psi>;\n                         bn \\<alpha> \\<sharp>* subject \\<alpha>; distinct(bn \\<alpha>); bn \\<alpha> \\<sharp>* C; xvec \\<sharp>* \\<alpha>; xvec \\<sharp>* Q'\\<rbrakk> \\<Longrightarrow>\n                         \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q", "using \\<open>eqvt Rel\\<close>"], ["proof (prove)\nusing this:\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q", "proof(induct rule: simI[where C=\"(xvec, C)\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (xvec, C)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "case(cSim \\<alpha> Q')"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  bn \\<alpha> \\<sharp>* P\n  bn \\<alpha> \\<sharp>* Q\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  distinct (bn \\<alpha>)\n  bn \\<alpha> \\<sharp>* subject \\<alpha>\n  bn \\<alpha> \\<sharp>* (xvec, C)\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (xvec, C)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "from \\<open>bn \\<alpha> \\<sharp>* (xvec, C)\\<close>"], ["proof (chain)\npicking this:\n  bn \\<alpha> \\<sharp>* (xvec, C)", "have \"bn \\<alpha> \\<sharp>* xvec\" and \"bn \\<alpha> \\<sharp>* C\""], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* (xvec, C)\n\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* xvec &&& bn \\<alpha> \\<sharp>* C", "by(simp add: freshChainSym)+"], ["proof (state)\nthis:\n  bn \\<alpha> \\<sharp>* xvec\n  bn \\<alpha> \\<sharp>* C\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (xvec, C)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "obtain p::\"name prm\" where \"(p \\<bullet> xvec) \\<sharp>* \\<Psi>\" and  \"(p \\<bullet> xvec) \\<sharp>* P\" and  \"(p \\<bullet> xvec) \\<sharp>* Q\"\n                         and  \"(p \\<bullet> xvec) \\<sharp>* \\<alpha>\" and S: \"set p \\<subseteq> set xvec \\<times> set(p \\<bullet> xvec)\"\n                         and \"distinctPerm p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> xvec) \\<sharp>* \\<Psi>;\n         (p \\<bullet> xvec) \\<sharp>* P; (p \\<bullet> xvec) \\<sharp>* Q;\n         (p \\<bullet> xvec) \\<sharp>* \\<alpha>;\n         set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec);\n         distinctPerm p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac c=\"(\\<Psi>, P, Q, \\<alpha>)\" and xvec=xvec in name_list_avoiding) auto"], ["proof (state)\nthis:\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (xvec, C)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "proof(cases rule: actionCases[where \\<alpha>=\\<alpha>])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "case(cInput M N)"], ["proof (state)\nthis:\n  \\<alpha> = M\\<lparr>N\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from \\<open>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'\\<close> \\<open>\\<alpha>=M\\<lparr>N\\<rparr>\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<alpha> = M\\<lparr>N\\<rparr>", "have \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> Q) \\<longmapsto>(p \\<bullet> (M\\<lparr>N\\<rparr> \\<prec> Q'))\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<alpha> = M\\<lparr>N\\<rparr>\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<rhd> p \\<bullet>\n                  Q \\<longmapsto> p \\<bullet> M\\<lparr>N\\<rparr> \\<prec> Q'", "by(fastforce intro: semantics.eqvt)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                Q \\<longmapsto> p \\<bullet> M\\<lparr>N\\<rparr> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> \\<open>xvec \\<sharp>* Q\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* Q\\<close> S"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* Q\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                Q \\<longmapsto> p \\<bullet> M\\<lparr>N\\<rparr> \\<prec> Q'", "have QTrans: \"\\<Psi> \\<rhd> Q \\<longmapsto>(p \\<bullet> M)\\<lparr>(p \\<bullet> N)\\<rparr> \\<prec> (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* Q\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                Q \\<longmapsto> p \\<bullet> M\\<lparr>N\\<rparr> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                   M)\\<lparr>(p \\<bullet>\n        N)\\<rparr> \\<prec> p \\<bullet> Q'", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> p \\<bullet> Q'\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> p \\<bullet> Q'\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from \\<open>(p \\<bullet> xvec) \\<sharp>* \\<alpha>\\<close>"], ["proof (chain)\npicking this:\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>", "have \"(p \\<bullet> (p \\<bullet> xvec)) \\<sharp>* (p \\<bullet> \\<alpha>)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n\ngoal (1 subgoal):\n 1. (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> \\<alpha>)", "by(simp only: pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> \\<alpha>)\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>distinctPerm p\\<close> \\<open>\\<alpha>=M\\<lparr>N\\<rparr>\\<close>"], ["proof (chain)\npicking this:\n  distinctPerm p\n  \\<alpha> = M\\<lparr>N\\<rparr>\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> \\<alpha>)", "have \"xvec \\<sharp>* (p \\<bullet> M)\" and \"xvec \\<sharp>* (p \\<bullet> N)\""], ["proof (prove)\nusing this:\n  distinctPerm p\n  \\<alpha> = M\\<lparr>N\\<rparr>\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> \\<alpha>)\n\ngoal (1 subgoal):\n 1. xvec \\<sharp>* (p \\<bullet> M) &&& xvec \\<sharp>* (p \\<bullet> N)", "by simp+"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with QTrans \\<open>xvec \\<sharp>* Q\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* Q\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)", "have \"xvec \\<sharp>* (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* Q\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n\ngoal (1 subgoal):\n 1. xvec \\<sharp>* (p \\<bullet> Q')", "by(rule_tac inputFreshChainDerivative)"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> Q')\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> Q')", "have \"\\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet> M)\\<lparr>(p \\<bullet> N)\\<rparr> \\<prec> P' \\<and> (\\<Psi>, P', (p \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\nM)\\<lparr>(p \\<bullet> N)\\<rparr> \\<prec> P' \\<and>\n       (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel", "by(rule_tac Sim) (assumption | simp)+"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                    M)\\<lparr>(p \\<bullet>\n         N)\\<rparr> \\<prec> P' \\<and>\n     (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                    M)\\<lparr>(p \\<bullet>\n         N)\\<rparr> \\<prec> P' \\<and>\n     (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"\\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet> M)\\<lparr>(p \\<bullet> N)\\<rparr> \\<prec> P'\" and P'RelQ': \"(\\<Psi>, P', (p \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                    M)\\<lparr>(p \\<bullet>\n         N)\\<rparr> \\<prec> P' \\<and>\n     (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n          M)\\<lparr>(p \\<bullet> N)\\<rparr> \\<prec> P';\n         (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> P'\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from PTrans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> P'", "have \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<longmapsto> (p \\<bullet> ((p \\<bullet> M)\\<lparr>(p \\<bullet> N)\\<rparr> \\<prec> P'))\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> P'\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<rhd> p \\<bullet>\n                  P \\<longmapsto> p \\<bullet>\n                                  (p \\<bullet>\n                                   M)\\<lparr>(p \\<bullet>\n        N)\\<rparr> \\<prec> P'", "by(rule semantics.eqvt)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> P'\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> \\<open>xvec \\<sharp>* P\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* P\\<close> S \\<open>distinctPerm p\\<close>"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> P'", "have \"\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> (p \\<bullet> P')\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                (p \\<bullet>\n                                 M)\\<lparr>(p \\<bullet>\n      N)\\<rparr> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> p \\<bullet> P'", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> p \\<bullet> P'\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> p \\<bullet> P'\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from P'RelQ' \\<open>eqvt Rel\\<close>"], ["proof (chain)\npicking this:\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n  eqvt Rel", "have \"(p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q')\n    \\<in> Rel", "by(auto simp add: eqvt_def)"], ["proof (state)\nthis:\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> S \\<open>distinctPerm p\\<close>"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel", "have \"(\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>M N.\n       \\<alpha> = M\\<lparr>N\\<rparr> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 3. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> p \\<bullet> P'\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> p \\<bullet> P'\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "using \\<open>\\<alpha>=M\\<lparr>N\\<rparr>\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>N\\<rparr> \\<prec> p \\<bullet> P'\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n  \\<alpha> = M\\<lparr>N\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "case(cOutput M yvec N)"], ["proof (state)\nthis:\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from \\<open>distinct(bn \\<alpha>)\\<close> \\<open>bn \\<alpha> \\<sharp>* subject \\<alpha>\\<close> \\<open>\\<alpha>=M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  distinct (bn \\<alpha>)\n  bn \\<alpha> \\<sharp>* subject \\<alpha>\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>", "have \"distinct yvec\" and \"yvec \\<sharp>* M\""], ["proof (prove)\nusing this:\n  distinct (bn \\<alpha>)\n  bn \\<alpha> \\<sharp>* subject \\<alpha>\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n\ngoal (1 subgoal):\n 1. distinct yvec &&& yvec \\<sharp>* M", "by simp+"], ["proof (state)\nthis:\n  distinct yvec\n  yvec \\<sharp>* M\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from \\<open>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'\\<close> \\<open>\\<alpha>=M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>", "have \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> Q) \\<longmapsto>(p \\<bullet> (M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'))\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<rhd> p \\<bullet>\n                  Q \\<longmapsto> p \\<bullet>\n                                  M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'", "by(fastforce intro: semantics.eqvt)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                Q \\<longmapsto> p \\<bullet>\n                                M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> \\<open>xvec \\<sharp>* Q\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* Q\\<close> S"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* Q\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                Q \\<longmapsto> p \\<bullet>\n                                M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'", "have QTrans: \"\\<Psi> \\<rhd> Q \\<longmapsto>(p \\<bullet> M)\\<lparr>\\<nu>*(p \\<bullet> yvec)\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* Q\n  (p \\<bullet> xvec) \\<sharp>* Q\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                Q \\<longmapsto> p \\<bullet>\n                                M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                   M)\\<lparr>\\<nu>*(p \\<bullet>\n              yvec)\\<rparr>\\<langle>(p \\<bullet>\n                                     N)\\<rangle> \\<prec> p \\<bullet> Q'", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*(p \\<bullet>\n            yvec)\\<rparr>\\<langle>(p \\<bullet>\n                                   N)\\<rangle> \\<prec> p \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with S \\<open>bn \\<alpha> \\<sharp>* xvec\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<alpha>\\<close> \\<open>\\<alpha>=M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  bn \\<alpha> \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*(p \\<bullet>\n            yvec)\\<rparr>\\<langle>(p \\<bullet>\n                                   N)\\<rangle> \\<prec> p \\<bullet> Q'", "have \"\\<Psi> \\<rhd> Q \\<longmapsto>(p \\<bullet> M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  bn \\<alpha> \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*(p \\<bullet>\n            yvec)\\<rparr>\\<langle>(p \\<bullet>\n                                   N)\\<rangle> \\<prec> p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                   M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                   N)\\<rangle> \\<prec> p \\<bullet> Q'", "by simp"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from \\<open>(p \\<bullet> xvec) \\<sharp>* \\<alpha>\\<close>"], ["proof (chain)\npicking this:\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>", "have \"(p \\<bullet> (p \\<bullet> xvec)) \\<sharp>* (p \\<bullet> \\<alpha>)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n\ngoal (1 subgoal):\n 1. (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> \\<alpha>)", "by(simp only: pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> \\<alpha>)\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>distinctPerm p\\<close> \\<open>\\<alpha>=M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  distinctPerm p\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> \\<alpha>)", "have \"xvec \\<sharp>* (p \\<bullet> M)\" and \"xvec \\<sharp>* (p \\<bullet> N)\" and \"xvec \\<sharp>* (p \\<bullet> yvec)\""], ["proof (prove)\nusing this:\n  distinctPerm p\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  (p \\<bullet> p \\<bullet> xvec) \\<sharp>* (p \\<bullet> \\<alpha>)\n\ngoal (1 subgoal):\n 1. xvec \\<sharp>* (p \\<bullet> M) &&&\n    xvec \\<sharp>* (p \\<bullet> N) &&& xvec \\<sharp>* (p \\<bullet> yvec)", "by simp+"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> yvec)\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> yvec)\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with QTrans \\<open>xvec \\<sharp>* Q\\<close> \\<open>distinct yvec\\<close> \\<open>yvec \\<sharp>* M\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*(p \\<bullet>\n            yvec)\\<rparr>\\<langle>(p \\<bullet>\n                                   N)\\<rangle> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* Q\n  distinct yvec\n  yvec \\<sharp>* M\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> yvec)", "have \"xvec \\<sharp>* (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*(p \\<bullet>\n            yvec)\\<rparr>\\<langle>(p \\<bullet>\n                                   N)\\<rangle> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* Q\n  distinct yvec\n  yvec \\<sharp>* M\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> yvec)\n\ngoal (1 subgoal):\n 1. xvec \\<sharp>* (p \\<bullet> Q')", "by(drule_tac outputFreshChainDerivative(2)) (auto simp add: pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> Q')\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  xvec \\<sharp>* (p \\<bullet> Q')\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from \\<open>yvec \\<sharp>* M\\<close> S \\<open>bn \\<alpha> \\<sharp>* xvec\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<alpha>\\<close> \\<open>\\<alpha>=M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\\<close> \\<open>distinctPerm p\\<close>"], ["proof (chain)\npicking this:\n  yvec \\<sharp>* M\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  bn \\<alpha> \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  distinctPerm p", "have \"yvec \\<sharp>* (p \\<bullet> M)\""], ["proof (prove)\nusing this:\n  yvec \\<sharp>* M\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  bn \\<alpha> \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  distinctPerm p\n\ngoal (1 subgoal):\n 1. yvec \\<sharp>* (p \\<bullet> M)", "by(subst pt_fresh_star_bij[OF pt_name_inst, OF at_name_inst, symmetric, where pi=p]) simp"], ["proof (state)\nthis:\n  yvec \\<sharp>* (p \\<bullet> M)\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> yvec)\n  xvec \\<sharp>* (p \\<bullet> Q')\n  yvec \\<sharp>* (p \\<bullet> M)", "have \"\\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet> M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P' \\<and> (\\<Psi>, P', (p \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> yvec)\n  xvec \\<sharp>* (p \\<bullet> Q')\n  yvec \\<sharp>* (p \\<bullet> M)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\nM)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\nN)\\<rangle> \\<prec> P' \\<and>\n       (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel", "using \\<open>bn \\<alpha> \\<sharp>* \\<Psi>\\<close> \\<open>bn \\<alpha> \\<sharp>* P\\<close> \\<open>bn \\<alpha> \\<sharp>* Q\\<close>\\<open>bn \\<alpha> \\<sharp>* xvec\\<close> \\<open>bn \\<alpha> \\<sharp>* C\\<close> \\<open>yvec \\<sharp>* M\\<close> \\<open>\\<alpha>=M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\\<close> \\<open>distinct yvec\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> p \\<bullet> Q'\n  xvec \\<sharp>* (p \\<bullet> M)\n  xvec \\<sharp>* (p \\<bullet> N)\n  xvec \\<sharp>* (p \\<bullet> yvec)\n  xvec \\<sharp>* (p \\<bullet> Q')\n  yvec \\<sharp>* (p \\<bullet> M)\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n  bn \\<alpha> \\<sharp>* Q\n  bn \\<alpha> \\<sharp>* xvec\n  bn \\<alpha> \\<sharp>* C\n  yvec \\<sharp>* M\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  distinct yvec\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\nM)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\nN)\\<rangle> \\<prec> P' \\<and>\n       (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel", "by(rule_tac Sim) auto"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                    M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                    N)\\<rangle> \\<prec> P' \\<and>\n     (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                    M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                    N)\\<rangle> \\<prec> P' \\<and>\n     (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"\\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet> M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'\" and P'RelQ': \"(\\<Psi>, P', (p \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                    M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                    N)\\<rangle> \\<prec> P' \\<and>\n     (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n          M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n          N)\\<rangle> \\<prec> P';\n         (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> P'\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from PTrans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> P'", "have \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<longmapsto> (p \\<bullet> ((p \\<bullet> M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet> N)\\<rangle> \\<prec> P'))\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> P'\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<rhd> p \\<bullet>\n                  P \\<longmapsto> p \\<bullet>\n                                  (p \\<bullet>\n                                   M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                   N)\\<rangle> \\<prec> P'", "by(rule semantics.eqvt)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> \\<open>xvec \\<sharp>* P\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* P\\<close> S \\<open>distinctPerm p\\<close> \\<open>bn \\<alpha> \\<sharp>* xvec\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<alpha>\\<close> \\<open>\\<alpha>=M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  bn \\<alpha> \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> P'", "have \"\\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> (p \\<bullet> P')\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  xvec \\<sharp>* P\n  (p \\<bullet> xvec) \\<sharp>* P\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  bn \\<alpha> \\<sharp>* xvec\n  (p \\<bullet> xvec) \\<sharp>* \\<alpha>\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                (p \\<bullet>\n                                 M)\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>(p \\<bullet>\n                                 N)\\<rangle> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n             P'", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from P'RelQ' \\<open>eqvt Rel\\<close>"], ["proof (chain)\npicking this:\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n  eqvt Rel", "have \"(p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P', p \\<bullet> Q') \\<in> Rel\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q')\n    \\<in> Rel", "by(auto simp add: eqvt_def)"], ["proof (state)\nthis:\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>xvec \\<sharp>* \\<Psi>\\<close> \\<open>(p \\<bullet> xvec) \\<sharp>* \\<Psi>\\<close> S \\<open>distinctPerm p\\<close>"], ["proof (chain)\npicking this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel", "have \"(\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  xvec \\<sharp>* \\<Psi>\n  (p \\<bullet> xvec) \\<sharp>* \\<Psi>\n  set p \\<subseteq> set xvec \\<times> set (p \\<bullet> xvec)\n  distinctPerm p\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', p \\<bullet> p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>M xvec N.\n       \\<alpha> =\n       M\\<lparr>\\<nu>*xvec\\<rparr>\\<langle>N\\<rangle> \\<Longrightarrow>\n       \\<exists>P'.\n          \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (\\<Psi>, P', Q') \\<in> Rel\n 2. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "using \\<open>\\<alpha>=M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle> \\<prec> p \\<bullet>\n           P'\n  (\\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n  \\<alpha> = M\\<lparr>\\<nu>*yvec\\<rparr>\\<langle>N\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "case cTau"], ["proof (state)\nthis:\n  \\<alpha> = \\<tau>\n\ngoal (1 subgoal):\n 1. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "from \\<open>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'\\<close> \\<open>\\<alpha> = \\<tau>\\<close> \\<open>xvec \\<sharp>* Q\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<alpha> = \\<tau>\n  xvec \\<sharp>* Q", "have \"xvec \\<sharp>* Q'\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<alpha> = \\<tau>\n  xvec \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. xvec \\<sharp>* Q'", "by(blast dest: tauFreshChainDerivative)"], ["proof (state)\nthis:\n  xvec \\<sharp>* Q'\n\ngoal (1 subgoal):\n 1. \\<alpha> = \\<tau> \\<Longrightarrow>\n    \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "with \\<open>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'\\<close> \\<open>\\<alpha> = \\<tau>\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<alpha> = \\<tau>\n  xvec \\<sharp>* Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<alpha> = \\<tau>\n  xvec \\<sharp>* Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', Q') \\<in> Rel", "by(drule_tac Sim) auto"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (\\<Psi>, P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simIFresh[consumes 4, case_names cSim]:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   x   :: name\n  and   C   :: \"'d::fs_name\"\n\n  assumes Eqvt: \"eqvt Rel\"\n  and     \"x \\<sharp> \\<Psi>\"\n  and     \"x \\<sharp> P\"\n  and     \"x \\<sharp> Q\"\n  and     \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q; bn \\<alpha> \\<sharp>* \\<Psi>;\n                    bn \\<alpha> \\<sharp>* subject \\<alpha>; distinct(bn \\<alpha>); bn \\<alpha> \\<sharp>* C; x \\<sharp> \\<alpha>; x \\<sharp> Q'\\<rbrakk> \\<Longrightarrow>\n                    \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q", "using assms"], ["proof (prove)\nusing this:\n  eqvt Rel\n  x \\<sharp> \\<Psi>\n  x \\<sharp> P\n  x \\<sharp> Q\n  \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q';\n   bn ?\\<alpha> \\<sharp>* P; bn ?\\<alpha> \\<sharp>* Q;\n   bn ?\\<alpha> \\<sharp>* \\<Psi>; bn ?\\<alpha> \\<sharp>* subject ?\\<alpha>;\n   distinct (bn ?\\<alpha>); bn ?\\<alpha> \\<sharp>* C; x \\<sharp> ?\\<alpha>;\n   x \\<sharp> ?Q'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       \\<Psi> \\<rhd> P \\<longmapsto> ?\\<alpha> \\<prec> P' \\<and>\n                       (\\<Psi>, P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q", "by(rule_tac xvec=\"[x]\" and C=C in simIChainFresh) auto"], ["", "lemma simE:\n  fixes F   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"\n\n  shows \"\\<And>\\<alpha> Q'. \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'; bn \\<alpha> \\<sharp>* \\<Psi>; bn \\<alpha> \\<sharp>* P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. \\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (\\<Psi>, P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* \\<Psi>; bn \\<alpha> \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "using assms"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* \\<Psi>; bn \\<alpha> \\<sharp>* P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel", "by(auto simp add: simulation_def)"], ["", "lemma simClosedAux:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   p   :: \"name prm\"\n\n  assumes EqvtRel: \"eqvt Rel\"\n  and     PSimQ: \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"\n\n  shows \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<leadsto>[Rel] (p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> \\<Psi> \\<rhd> p \\<bullet> P \\<leadsto>[Rel] p \\<bullet> Q", "using EqvtRel"], ["proof (prove)\nusing this:\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. p \\<bullet> \\<Psi> \\<rhd> p \\<bullet> P \\<leadsto>[Rel] p \\<bullet> Q", "proof(induct rule: simI[of _ _ _ _ \"(\\<Psi>, P, p)\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "case(cSim \\<alpha> Q')"], ["proof (state)\nthis:\n  p \\<bullet> \\<Psi> \\<rhd> p \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  bn \\<alpha> \\<sharp>* (p \\<bullet> P)\n  bn \\<alpha> \\<sharp>* (p \\<bullet> Q)\n  bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>)\n  distinct (bn \\<alpha>)\n  bn \\<alpha> \\<sharp>* subject \\<alpha>\n  bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "from \\<open>p \\<bullet> \\<Psi> \\<rhd> p \\<bullet> Q \\<longmapsto>\\<alpha> \\<prec> Q'\\<close>"], ["proof (chain)\npicking this:\n  p \\<bullet> \\<Psi> \\<rhd> p \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'", "have \"(rev p \\<bullet> p \\<bullet> \\<Psi>) \\<rhd> (rev p \\<bullet> p \\<bullet> Q) \\<longmapsto>(rev p \\<bullet> (\\<alpha> \\<prec> Q'))\""], ["proof (prove)\nusing this:\n  p \\<bullet> \\<Psi> \\<rhd> p \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. rev p \\<bullet>\n    p \\<bullet>\n    \\<Psi> \\<rhd> rev p \\<bullet>\n                  p \\<bullet>\n                  Q \\<longmapsto> rev p \\<bullet> \\<alpha> \\<prec> Q'", "by(blast dest: semantics.eqvt)"], ["proof (state)\nthis:\n  rev p \\<bullet>\n  p \\<bullet>\n  \\<Psi> \\<rhd> rev p \\<bullet>\n                p \\<bullet>\n                Q \\<longmapsto> rev p \\<bullet> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "hence \"\\<Psi> \\<rhd> Q \\<longmapsto>(rev p \\<bullet> \\<alpha>) \\<prec> (rev p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  rev p \\<bullet>\n  p \\<bullet>\n  \\<Psi> \\<rhd> rev p \\<bullet>\n                p \\<bullet>\n                Q \\<longmapsto> rev p \\<bullet> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<longmapsto> rev p \\<bullet>\n                                  \\<alpha> \\<prec> rev p \\<bullet> Q'", "by(simp add: eqvts)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> rev p \\<bullet>\n                                \\<alpha> \\<prec> rev p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> rev p \\<bullet>\n                                \\<alpha> \\<prec> rev p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "with \\<open>bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<close>"], ["proof (chain)\npicking this:\n  bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\n  \\<Psi> \\<rhd> Q \\<longmapsto> rev p \\<bullet>\n                                \\<alpha> \\<prec> rev p \\<bullet> Q'", "have \"bn \\<alpha> \\<sharp>* \\<Psi>\" and \"bn \\<alpha> \\<sharp>* P\" and \"bn \\<alpha> \\<sharp>* p\""], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\n  \\<Psi> \\<rhd> Q \\<longmapsto> rev p \\<bullet>\n                                \\<alpha> \\<prec> rev p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* \\<Psi> &&&\n    bn \\<alpha> \\<sharp>* P &&& bn \\<alpha> \\<sharp>* p", "by simp+"], ["proof (state)\nthis:\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n  bn \\<alpha> \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> rev p \\<bullet>\n                                \\<alpha> \\<prec> rev p \\<bullet> Q'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n  bn \\<alpha> \\<sharp>* p", "obtain P' where PTrans: \"\\<Psi> \\<rhd> P \\<longmapsto>(rev p \\<bullet> \\<alpha>) \\<prec> P'\"\n                         and P'RelQ': \"(\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> rev p \\<bullet>\n                                \\<alpha> \\<prec> rev p \\<bullet> Q'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n  bn \\<alpha> \\<sharp>* p\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> rev p \\<bullet>\n         \\<alpha> \\<prec> P';\n         (\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using PSimQ"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<longmapsto> rev p \\<bullet>\n                                \\<alpha> \\<prec> rev p \\<bullet> Q'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n  bn \\<alpha> \\<sharp>* p\n  \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> rev p \\<bullet>\n         \\<alpha> \\<prec> P';\n         (\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: simE freshChainPermSimp simp add: eqvts)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> rev p \\<bullet> \\<alpha> \\<prec> P'\n  (\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "from PTrans"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> rev p \\<bullet> \\<alpha> \\<prec> P'", "have \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<longmapsto>(p \\<bullet> ((rev p \\<bullet> \\<alpha>) \\<prec> P'))\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> rev p \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<rhd> p \\<bullet>\n                  P \\<longmapsto> p \\<bullet>\n                                  rev p \\<bullet> \\<alpha> \\<prec> P'", "by(rule semantics.eqvt)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                rev p \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "with \\<open>bn \\<alpha> \\<sharp>* p\\<close>"], ["proof (chain)\npicking this:\n  bn \\<alpha> \\<sharp>* p\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                rev p \\<bullet> \\<alpha> \\<prec> P'", "have \"(p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<longmapsto>\\<alpha> \\<prec> (p \\<bullet> P')\""], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* p\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet>\n                P \\<longmapsto> p \\<bullet>\n                                rev p \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    \\<Psi> \\<rhd> p \\<bullet>\n                  P \\<longmapsto> \\<alpha> \\<prec> p \\<bullet> P'", "by(simp add: eqvts freshChainPermSimp)"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> p \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> p \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "from P'RelQ' EqvtRel"], ["proof (chain)\npicking this:\n  (\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel\n  eqvt Rel", "have \"(p \\<bullet> (\\<Psi>, P', rev p \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. p \\<bullet> (\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel", "by(simp only: eqvt_def)"], ["proof (state)\nthis:\n  p \\<bullet> (\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "hence \"(p \\<bullet> \\<Psi>, p \\<bullet> P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  p \\<bullet> (\\<Psi>, P', rev p \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (p \\<bullet> \\<Psi>, p \\<bullet> P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>p \\<bullet>\n                \\<Psi> \\<rhd> p \\<bullet>\n                              Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* (p \\<bullet> P);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> Q);\n        bn \\<alpha> \\<sharp>* (p \\<bullet> \\<Psi>); distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* (\\<Psi>, P, p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            p \\<bullet>\n                            \\<Psi> \\<rhd> p \\<bullet>\n    P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> p \\<bullet> P'\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', Q') \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  p \\<bullet>\n  \\<Psi> \\<rhd> p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> p \\<bullet> P'\n  (p \\<bullet> \\<Psi>, p \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       p \\<bullet>\n       \\<Psi> \\<rhd> p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     p \\<bullet>\n     \\<Psi> \\<rhd> p \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (p \\<bullet> \\<Psi>, P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simClosed:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   p   :: \"name prm\"\n\n  assumes EqvtRel: \"eqvt Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q \\<Longrightarrow> (p \\<bullet> \\<Psi>) \\<rhd> (p \\<bullet> P) \\<leadsto>[Rel] (p \\<bullet> Q)\"\n  and   \"P \\<leadsto>[Rel] Q \\<Longrightarrow> (p \\<bullet> P) \\<leadsto>[Rel] (p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q \\<Longrightarrow>\n     p \\<bullet>\n     \\<Psi> \\<rhd> p \\<bullet> P \\<leadsto>[Rel] p \\<bullet> Q) &&&\n    (P \\<leadsto>[Rel] Q \\<Longrightarrow>\n     p \\<bullet> P \\<leadsto>[Rel] p \\<bullet> Q)", "using EqvtRel"], ["proof (prove)\nusing this:\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q \\<Longrightarrow>\n     p \\<bullet>\n     \\<Psi> \\<rhd> p \\<bullet> P \\<leadsto>[Rel] p \\<bullet> Q) &&&\n    (P \\<leadsto>[Rel] Q \\<Longrightarrow>\n     p \\<bullet> P \\<leadsto>[Rel] p \\<bullet> Q)", "by(force dest: simClosedAux simp add: permBottom)+"], ["", "lemma reflexive:\n  fixes Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n\n  assumes \"{(\\<Psi>, P, P) | \\<Psi> P. True} \\<subseteq> Rel\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] P", "using assms"], ["proof (prove)\nusing this:\n  {(\\<Psi>, P, P) |\\<Psi> P. True} \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel] P", "by(auto simp add: simulation_def)"], ["", "lemma transitive:\n  fixes \\<Psi>     :: 'b\n  and   P     :: \"('a, 'b, 'c) psi\"\n  and   Rel   :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q     :: \"('a, 'b, 'c) psi\"\n  and   Rel'  :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   R     :: \"('a, 'b, 'c) psi\"\n  and   Rel'' :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n\n  assumes PSimQ: \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"\n  and     QSimR: \"\\<Psi> \\<rhd> Q \\<leadsto>[Rel'] R\"\n  and     Eqvt: \"eqvt Rel''\"\n  and     Set: \"{(\\<Psi>, P, R) | \\<Psi> P R. \\<exists>Q. (\\<Psi>, P, Q) \\<in> Rel \\<and> (\\<Psi>, Q, R) \\<in> Rel'} \\<subseteq> Rel''\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[Rel''] R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel''] R", "using \\<open>eqvt Rel''\\<close>"], ["proof (prove)\nusing this:\n  eqvt Rel''\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[Rel''] R", "proof(induct rule: simI[where C=Q])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> R \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* R;\n        bn \\<alpha> \\<sharp>* \\<Psi>; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel''", "case(cSim \\<alpha> R')"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> R \\<longmapsto> \\<alpha> \\<prec> R'\n  bn \\<alpha> \\<sharp>* P\n  bn \\<alpha> \\<sharp>* R\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  distinct (bn \\<alpha>)\n  bn \\<alpha> \\<sharp>* subject \\<alpha>\n  bn \\<alpha> \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> R \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* R;\n        bn \\<alpha> \\<sharp>* \\<Psi>; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel''", "from QSimR \\<open>\\<Psi> \\<rhd> R \\<longmapsto>\\<alpha> \\<prec> R'\\<close> \\<open>(bn \\<alpha>) \\<sharp>* \\<Psi>\\<close> \\<open>(bn \\<alpha>) \\<sharp>* Q\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> Q \\<leadsto>[Rel'] R\n  \\<Psi> \\<rhd> R \\<longmapsto> \\<alpha> \\<prec> R'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* Q", "obtain Q' where QTrans: \"\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'\" and Q'Rel'R': \"(\\<Psi>, Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Q \\<leadsto>[Rel'] R\n  \\<Psi> \\<rhd> R \\<longmapsto> \\<alpha> \\<prec> R'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>\\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n         (\\<Psi>, Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  (\\<Psi>, Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> R \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* R;\n        bn \\<alpha> \\<sharp>* \\<Psi>; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel''", "from PSimQ QTrans \\<open>bn \\<alpha> \\<sharp>* \\<Psi>\\<close> \\<open>bn \\<alpha> \\<sharp>* P\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P", "obtain P' where PTrans: \"\\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P'\" and P'RelQ': \"(\\<Psi>, P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P';\n         (\\<Psi>, P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  (\\<Psi>, P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi> \\<rhd> R \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* R;\n        bn \\<alpha> \\<sharp>* \\<Psi>; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>, P', Q') \\<in> Rel''", "with PTrans Q'Rel'R' P'RelQ' Set"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  (\\<Psi>, Q', R') \\<in> Rel'\n  (\\<Psi>, P', Q') \\<in> Rel\n  {(\\<Psi>, P, R) |\\<Psi> P R.\n   \\<exists>Q. (\\<Psi>, P, Q) \\<in> Rel \\<and> (\\<Psi>, Q, R) \\<in> Rel'}\n  \\<subseteq> Rel''\n  \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  (\\<Psi>, P', Q') \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  (\\<Psi>, Q', R') \\<in> Rel'\n  (\\<Psi>, P', Q') \\<in> Rel\n  {(\\<Psi>, P, R) |\\<Psi> P R.\n   \\<exists>Q. (\\<Psi>, P, Q) \\<in> Rel \\<and> (\\<Psi>, Q, R) \\<in> Rel'}\n  \\<subseteq> Rel''\n  \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  (\\<Psi>, P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>, P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (\\<Psi>, P', R') \\<in> Rel''\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma statEqSim:\n  fixes \\<Psi>   :: 'b\n  and   P   :: \"('a, 'b, 'c) psi\"\n  and   Rel :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q   :: \"('a, 'b, 'c) psi\"\n  and   \\<Psi>'  :: 'b\n\n  assumes PSimQ: \"\\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\"\n  and     \"eqvt Rel'\"\n  and     \"\\<Psi> \\<simeq> \\<Psi>'\"\n  and     C1: \"\\<And>\\<Psi>'' R S \\<Psi>'''. \\<lbrakk>(\\<Psi>'', R, S) \\<in> Rel; \\<Psi>'' \\<simeq> \\<Psi>'''\\<rbrakk> \\<Longrightarrow> (\\<Psi>''', R, S) \\<in> Rel'\"\n\n  shows \"\\<Psi>' \\<rhd> P \\<leadsto>[Rel'] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi>' \\<rhd> P \\<leadsto>[Rel'] Q", "using \\<open>eqvt Rel'\\<close>"], ["proof (prove)\nusing this:\n  eqvt Rel'\n\ngoal (1 subgoal):\n 1. \\<Psi>' \\<rhd> P \\<leadsto>[Rel'] Q", "proof(induct rule: simI[of _ _ _ _ \\<Psi>])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>'; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>', P', Q') \\<in> Rel'", "case(cSim \\<alpha> Q')"], ["proof (state)\nthis:\n  \\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  bn \\<alpha> \\<sharp>* P\n  bn \\<alpha> \\<sharp>* Q\n  bn \\<alpha> \\<sharp>* \\<Psi>'\n  distinct (bn \\<alpha>)\n  bn \\<alpha> \\<sharp>* subject \\<alpha>\n  bn \\<alpha> \\<sharp>* \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>'; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>', P', Q') \\<in> Rel'", "from \\<open>\\<Psi>' \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'\\<close> \\<open>\\<Psi> \\<simeq> \\<Psi>'\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<Psi> \\<simeq> \\<Psi>'", "have \"\\<Psi> \\<rhd> Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  \\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  \\<Psi> \\<simeq> \\<Psi>'\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by(metis statEqTransition AssertionStatEqSym)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>'; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>', P', Q') \\<in> Rel'", "with PSimQ \\<open>bn \\<alpha> \\<sharp>* \\<Psi>\\<close> \\<open>bn \\<alpha> \\<sharp>* P\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain P' where \"\\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P'\" and \"(\\<Psi>, P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<leadsto>[Rel] Q\n  bn \\<alpha> \\<sharp>* \\<Psi>\n  bn \\<alpha> \\<sharp>* P\n  \\<Psi> \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>\\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P';\n         (\\<Psi>, P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  (\\<Psi>, P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>'; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>', P', Q') \\<in> Rel'", "from \\<open>\\<Psi> \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P'\\<close> \\<open>\\<Psi> \\<simeq> \\<Psi>'\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  \\<Psi> \\<simeq> \\<Psi>'", "have \"\\<Psi>' \\<rhd> P \\<longmapsto>\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  \\<Psi> \\<simeq> \\<Psi>'\n\ngoal (1 subgoal):\n 1. \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'", "by(rule statEqTransition)"], ["proof (state)\nthis:\n  \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>'; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>', P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>'; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>', P', Q') \\<in> Rel'", "from \\<open>(\\<Psi>, P', Q') \\<in> Rel\\<close> \\<open>\\<Psi> \\<simeq> \\<Psi>'\\<close>"], ["proof (chain)\npicking this:\n  (\\<Psi>, P', Q') \\<in> Rel\n  \\<Psi> \\<simeq> \\<Psi>'", "have \"(\\<Psi>', P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P', Q') \\<in> Rel\n  \\<Psi> \\<simeq> \\<Psi>'\n\ngoal (1 subgoal):\n 1. (\\<Psi>', P', Q') \\<in> Rel'", "by(rule C1)"], ["proof (state)\nthis:\n  (\\<Psi>', P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       \\<lbrakk>\\<Psi>' \\<rhd> Q \\<longmapsto> \\<alpha> \\<prec> Q';\n        bn \\<alpha> \\<sharp>* P; bn \\<alpha> \\<sharp>* Q;\n        bn \\<alpha> \\<sharp>* \\<Psi>'; distinct (bn \\<alpha>);\n        bn \\<alpha> \\<sharp>* subject \\<alpha>;\n        bn \\<alpha> \\<sharp>* \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                            (\\<Psi>', P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  (\\<Psi>', P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P'\n  (\\<Psi>', P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (\\<Psi>', P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<Psi>' \\<rhd> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (\\<Psi>', P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma monotonic: \n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   A :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   B :: \"('b \\<times> ('a, 'b, 'c) psi \\<times> ('a, 'b, 'c) psi) set\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<leadsto>[A] Q\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"\\<Psi> \\<rhd> P \\<leadsto>[B] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[B] Q", "using assms"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<leadsto>[A] Q\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>[B] Q", "by(simp (no_asm) add: simulation_def) (auto dest: simE)"], ["", "end"], ["", "end"]]}