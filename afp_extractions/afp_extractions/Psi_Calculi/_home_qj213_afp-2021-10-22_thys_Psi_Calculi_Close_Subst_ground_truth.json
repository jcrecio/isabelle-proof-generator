{"file_name": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi/Close_Subst.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi", "problem_names": ["lemma closeSubstI:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<And>\\<sigma>. wellFormedSubst \\<sigma> \\<Longrightarrow> (\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> Rel\"\n\n  shows \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\"", "lemma closeSubstE:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<sigma> :: \"(name list \\<times> 'a list) list\"\n\n  assumes \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\"\n  and     \"wellFormedSubst \\<sigma>\"\n\n  shows \"(\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> Rel\"", "lemma closeSubstClosed:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   p :: \"name prm\"\n\n  assumes \"eqvt Rel\"\n  and     \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\"\n\n  shows \"(p \\<bullet> \\<Psi>, p \\<bullet> P, p \\<bullet> Q) \\<in> closeSubst Rel\"", "lemma closeSubstEqvt:\n  assumes \"eqvt Rel\"\n\n  shows \"eqvt(closeSubst Rel)\"", "lemma closeSubstUnfold:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<sigma> :: \"(name list \\<times> 'a list) list\"\n\n  assumes \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\"\n  and     \"wellFormedSubst \\<sigma>\"\n\n  shows \"(\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> closeSubst Rel\""], "translations": [["", "lemma closeSubstI:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n\n  assumes \"\\<And>\\<sigma>. wellFormedSubst \\<sigma> \\<Longrightarrow> (\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> Rel\"\n\n  shows \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi>, P, Q) \\<in> closeSubst Rel", "using assms"], ["proof (prove)\nusing this:\n  wellFormedSubst ?\\<sigma> \\<Longrightarrow>\n  (\\<Psi>, P[<?\\<sigma>>], Q[<?\\<sigma>>]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<Psi>, P, Q) \\<in> closeSubst Rel", "by(unfold closeSubst_def) auto"], ["", "lemma closeSubstE:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<sigma> :: \"(name list \\<times> 'a list) list\"\n\n  assumes \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\"\n  and     \"wellFormedSubst \\<sigma>\"\n\n  shows \"(\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> Rel", "using assms"], ["proof (prove)\nusing this:\n  (\\<Psi>, P, Q) \\<in> closeSubst Rel\n  wellFormedSubst \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> Rel", "by(unfold closeSubst_def) auto"], ["", "lemma closeSubstClosed:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   p :: \"name prm\"\n\n  assumes \"eqvt Rel\"\n  and     \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\"\n\n  shows \"(p \\<bullet> \\<Psi>, p \\<bullet> P, p \\<bullet> Q) \\<in> closeSubst Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<bullet> \\<Psi>, p \\<bullet> P, p \\<bullet> Q) \\<in> closeSubst Rel", "proof(rule closeSubstI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       wellFormedSubst \\<sigma> \\<Longrightarrow>\n       (p \\<bullet> \\<Psi>, p \\<bullet> P[<\\<sigma>>],\n        p \\<bullet> Q[<\\<sigma>>])\n       \\<in> Rel", "fix \\<sigma>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       wellFormedSubst \\<sigma> \\<Longrightarrow>\n       (p \\<bullet> \\<Psi>, p \\<bullet> P[<\\<sigma>>],\n        p \\<bullet> Q[<\\<sigma>>])\n       \\<in> Rel", "assume \"wellFormedSubst(\\<sigma>::(name list \\<times> 'a list) list)\""], ["proof (state)\nthis:\n  wellFormedSubst \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       wellFormedSubst \\<sigma> \\<Longrightarrow>\n       (p \\<bullet> \\<Psi>, p \\<bullet> P[<\\<sigma>>],\n        p \\<bullet> Q[<\\<sigma>>])\n       \\<in> Rel", "with \\<open>(\\<Psi>, P, Q) \\<in> closeSubst Rel\\<close> \\<open>wellFormedSubst \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  (\\<Psi>, P, Q) \\<in> closeSubst Rel\n  wellFormedSubst \\<sigma>\n  wellFormedSubst \\<sigma>", "have \"(\\<Psi>, P[<(rev p \\<bullet> \\<sigma>)>], Q[<(rev p \\<bullet> \\<sigma>)>]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P, Q) \\<in> closeSubst Rel\n  wellFormedSubst \\<sigma>\n  wellFormedSubst \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<Psi>, P[<rev p \\<bullet> \\<sigma>>], Q[<rev p \\<bullet> \\<sigma>>])\n    \\<in> Rel", "by(rule_tac closeSubstE) auto"], ["proof (state)\nthis:\n  (\\<Psi>, P[<rev p \\<bullet> \\<sigma>>], Q[<rev p \\<bullet> \\<sigma>>])\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       wellFormedSubst \\<sigma> \\<Longrightarrow>\n       (p \\<bullet> \\<Psi>, p \\<bullet> P[<\\<sigma>>],\n        p \\<bullet> Q[<\\<sigma>>])\n       \\<in> Rel", "hence \"(p \\<bullet> \\<Psi>, p \\<bullet> (P[<(rev p \\<bullet> \\<sigma>)>]), p \\<bullet> (Q[<(rev p \\<bullet> \\<sigma>)>])) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P[<rev p \\<bullet> \\<sigma>>], Q[<rev p \\<bullet> \\<sigma>>])\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (p \\<bullet> \\<Psi>, p \\<bullet> P[<rev p \\<bullet> \\<sigma>>],\n     p \\<bullet> Q[<rev p \\<bullet> \\<sigma>>])\n    \\<in> Rel", "by(drule_tac p=p in eqvtI[OF \\<open>eqvt Rel\\<close>]) (simp add: eqvts)"], ["proof (state)\nthis:\n  (p \\<bullet> \\<Psi>, p \\<bullet> P[<rev p \\<bullet> \\<sigma>>],\n   p \\<bullet> Q[<rev p \\<bullet> \\<sigma>>])\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       wellFormedSubst \\<sigma> \\<Longrightarrow>\n       (p \\<bullet> \\<Psi>, p \\<bullet> P[<\\<sigma>>],\n        p \\<bullet> Q[<\\<sigma>>])\n       \\<in> Rel", "thus \"(p \\<bullet> \\<Psi>, (p \\<bullet> P)[<\\<sigma>>], (p \\<bullet> Q)[<\\<sigma>>]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (p \\<bullet> \\<Psi>, p \\<bullet> P[<rev p \\<bullet> \\<sigma>>],\n   p \\<bullet> Q[<rev p \\<bullet> \\<sigma>>])\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (p \\<bullet> \\<Psi>, p \\<bullet> P[<\\<sigma>>],\n     p \\<bullet> Q[<\\<sigma>>])\n    \\<in> Rel", "by(simp del: seqSubs_def add: eqvts)"], ["proof (state)\nthis:\n  (p \\<bullet> \\<Psi>, p \\<bullet> P[<\\<sigma>>], p \\<bullet> Q[<\\<sigma>>])\n  \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma closeSubstEqvt:\n  assumes \"eqvt Rel\"\n\n  shows \"eqvt(closeSubst Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt (closeSubst Rel)", "proof(auto simp add: eqvt_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b p.\n       (a, aa, b) \\<in> closeSubst Rel \\<Longrightarrow>\n       (p \\<bullet> a, p \\<bullet> aa, p \\<bullet> b) \\<in> closeSubst Rel", "fix \\<Psi> P Q p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b p.\n       (a, aa, b) \\<in> closeSubst Rel \\<Longrightarrow>\n       (p \\<bullet> a, p \\<bullet> aa, p \\<bullet> b) \\<in> closeSubst Rel", "assume \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\""], ["proof (state)\nthis:\n  (\\<Psi>, P, Q) \\<in> closeSubst Rel\n\ngoal (1 subgoal):\n 1. \\<And>a aa b p.\n       (a, aa, b) \\<in> closeSubst Rel \\<Longrightarrow>\n       (p \\<bullet> a, p \\<bullet> aa, p \\<bullet> b) \\<in> closeSubst Rel", "thus \"((p::name prm) \\<bullet> \\<Psi>, p \\<bullet> P, p \\<bullet> Q) \\<in> closeSubst Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P, Q) \\<in> closeSubst Rel\n\ngoal (1 subgoal):\n 1. (p \\<bullet> \\<Psi>, p \\<bullet> P, p \\<bullet> Q) \\<in> closeSubst Rel", "by(drule_tac p=p in closeSubstClosed[OF \\<open>eqvt Rel\\<close>]) (simp add: eqvts)"], ["proof (state)\nthis:\n  (p \\<bullet> \\<Psi>, p \\<bullet> P, p \\<bullet> Q) \\<in> closeSubst Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma closeSubstUnfold:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   \\<sigma> :: \"(name list \\<times> 'a list) list\"\n\n  assumes \"(\\<Psi>, P, Q) \\<in> closeSubst Rel\"\n  and     \"wellFormedSubst \\<sigma>\"\n\n  shows \"(\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> closeSubst Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Psi>, P[<\\<sigma>>], Q[<\\<sigma>>]) \\<in> closeSubst Rel", "proof(rule closeSubstI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'.\n       wellFormedSubst \\<sigma>' \\<Longrightarrow>\n       (\\<Psi>, P[<\\<sigma>>][<\\<sigma>'>], Q[<\\<sigma>>][<\\<sigma>'>])\n       \\<in> Rel", "fix \\<sigma>'::\"(name list \\<times> 'a list) list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'.\n       wellFormedSubst \\<sigma>' \\<Longrightarrow>\n       (\\<Psi>, P[<\\<sigma>>][<\\<sigma>'>], Q[<\\<sigma>>][<\\<sigma>'>])\n       \\<in> Rel", "assume \"wellFormedSubst \\<sigma>'\""], ["proof (state)\nthis:\n  wellFormedSubst \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'.\n       wellFormedSubst \\<sigma>' \\<Longrightarrow>\n       (\\<Psi>, P[<\\<sigma>>][<\\<sigma>'>], Q[<\\<sigma>>][<\\<sigma>'>])\n       \\<in> Rel", "with \\<open>wellFormedSubst \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  wellFormedSubst \\<sigma>\n  wellFormedSubst \\<sigma>'", "have \"wellFormedSubst(\\<sigma>@\\<sigma>')\""], ["proof (prove)\nusing this:\n  wellFormedSubst \\<sigma>\n  wellFormedSubst \\<sigma>'\n\ngoal (1 subgoal):\n 1. wellFormedSubst (\\<sigma> @ \\<sigma>')", "by simp"], ["proof (state)\nthis:\n  wellFormedSubst (\\<sigma> @ \\<sigma>')\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'.\n       wellFormedSubst \\<sigma>' \\<Longrightarrow>\n       (\\<Psi>, P[<\\<sigma>>][<\\<sigma>'>], Q[<\\<sigma>>][<\\<sigma>'>])\n       \\<in> Rel", "with \\<open>(\\<Psi>, P, Q) \\<in> closeSubst Rel\\<close>"], ["proof (chain)\npicking this:\n  (\\<Psi>, P, Q) \\<in> closeSubst Rel\n  wellFormedSubst (\\<sigma> @ \\<sigma>')", "have \"(\\<Psi>, P[<(\\<sigma>@\\<sigma>')>], Q[<(\\<sigma>@\\<sigma>')>]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P, Q) \\<in> closeSubst Rel\n  wellFormedSubst (\\<sigma> @ \\<sigma>')\n\ngoal (1 subgoal):\n 1. (\\<Psi>, P[<(\\<sigma> @ \\<sigma>')>], Q[<(\\<sigma> @ \\<sigma>')>])\n    \\<in> Rel", "by(rule closeSubstE)"], ["proof (state)\nthis:\n  (\\<Psi>, P[<(\\<sigma> @ \\<sigma>')>], Q[<(\\<sigma> @ \\<sigma>')>])\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'.\n       wellFormedSubst \\<sigma>' \\<Longrightarrow>\n       (\\<Psi>, P[<\\<sigma>>][<\\<sigma>'>], Q[<\\<sigma>>][<\\<sigma>'>])\n       \\<in> Rel", "thus \"(\\<Psi>, P[<\\<sigma>>][<\\<sigma>'>], Q[<\\<sigma>>][<\\<sigma>'>]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (\\<Psi>, P[<(\\<sigma> @ \\<sigma>')>], Q[<(\\<sigma> @ \\<sigma>')>])\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<Psi>, P[<\\<sigma>>][<\\<sigma>'>], Q[<\\<sigma>>][<\\<sigma>'>])\n    \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (\\<Psi>, P[<\\<sigma>>][<\\<sigma>'>], Q[<\\<sigma>>][<\\<sigma>'>]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}