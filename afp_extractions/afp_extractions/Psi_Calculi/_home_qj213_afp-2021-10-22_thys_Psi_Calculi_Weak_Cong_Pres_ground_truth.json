{"file_name": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi/Weak_Cong_Pres.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Psi_Calculi", "problem_names": ["lemma weakPsiCongInputPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n\n  assumes \"\\<And>Tvec. length xvec = length Tvec \\<Longrightarrow>  \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\"\n\n  shows \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<doteq> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\"", "lemma weakPsiCongOutputPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n\n  assumes \"\\<Psi> \\<rhd> P \\<doteq> Q\"\n\n  shows \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<doteq> M\\<langle>N\\<rangle>.Q\"", "lemma weakBisimCasePres:\n  fixes \\<Psi>   :: 'b\n  and   CsP :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n  and   CsQ :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n\n  assumes A: \"\\<And>\\<phi> P. (\\<phi>, P) mem CsP \\<Longrightarrow> \\<exists>Q. (\\<phi>, Q) mem CsQ \\<and> guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n  and     B: \"\\<And>\\<phi> Q. (\\<phi>, Q) mem CsQ \\<Longrightarrow> \\<exists>P. (\\<phi>, P) mem CsP \\<and> guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n\n  shows \"\\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ\"", "lemma weakPsiCongCasePres:\n  fixes \\<Psi>   :: 'b\n  and   CsP :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n  and   CsQ :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n\n  assumes A: \"\\<And>\\<phi> P. (\\<phi>, P) mem CsP \\<Longrightarrow> \\<exists>Q. (\\<phi>, Q) mem CsQ \\<and> guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n  and     B: \"\\<And>\\<phi> Q. (\\<phi>, Q) mem CsQ \\<Longrightarrow> \\<exists>P. (\\<phi>, P) mem CsP \\<and> guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n\n  shows \"\\<Psi> \\<rhd> Cases CsP \\<doteq> Cases CsQ\"", "lemma weakPsiCongResPres:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   x :: name\n  \n  assumes \"\\<Psi> \\<rhd> P \\<doteq> Q\"\n  and     \"x \\<sharp> \\<Psi>\"\n\n  shows \"\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<doteq> \\<lparr>\\<nu>x\\<rparr>Q\"", "lemma weakPsiCongResChainPres:\n  fixes \\<Psi>   :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<doteq> Q\"\n  and     \"xvec \\<sharp>* \\<Psi>\"\n\n  shows \"\\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>P \\<doteq> \\<lparr>\\<nu>*xvec\\<rparr>Q\"", "lemma weakPsiCongParPres:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   R :: \"('a, 'b, 'c) psi\"\n  \n  assumes \"\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\"\n\n  shows \"\\<Psi> \\<rhd> P \\<parallel> R \\<doteq> Q \\<parallel> R\""], "translations": [["", "lemma weakPsiCongInputPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n\n  assumes \"\\<And>Tvec. length xvec = length Tvec \\<Longrightarrow>  \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\"\n\n  shows \"\\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<doteq> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<doteq> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<doteq> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "from assms"], ["proof (chain)\npicking this:\n  length xvec = length ?Tvec \\<Longrightarrow>\n  \\<Psi> \\<rhd> P[xvec::=?Tvec] \\<approx> Q[xvec::=?Tvec]", "have \"\\<forall>Tvec. length xvec = length Tvec \\<longrightarrow>  \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\""], ["proof (prove)\nusing this:\n  length xvec = length ?Tvec \\<Longrightarrow>\n  \\<Psi> \\<rhd> P[xvec::=?Tvec] \\<approx> Q[xvec::=?Tvec]\n\ngoal (1 subgoal):\n 1. \\<forall>Tvec.\n       length xvec = length Tvec \\<longrightarrow>\n       \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]", "by simp"], ["proof (state)\nthis:\n  \\<forall>Tvec.\n     length xvec = length Tvec \\<longrightarrow>\n     \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<doteq> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>Tvec.\n     length xvec = length Tvec \\<longrightarrow>\n     \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<doteq> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "proof(induct rule: weakPsiCongSymI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> Q[xvec::=Tvec] \\<approx> P[xvec::=Tvec]\n 2. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\n 3. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "case(cSym P Q)"], ["proof (state)\nthis:\n  \\<forall>Tvec.\n     length xvec = length Tvec \\<longrightarrow>\n     \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> Q[xvec::=Tvec] \\<approx> P[xvec::=Tvec]\n 2. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\n 3. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>Tvec.\n     length xvec = length Tvec \\<longrightarrow>\n     \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\n\ngoal (1 subgoal):\n 1. \\<forall>Tvec.\n       length xvec = length Tvec \\<longrightarrow>\n       \\<Psi> \\<rhd> Q[xvec::=Tvec] \\<approx> P[xvec::=Tvec]", "by(auto dest: weakBisimE)"], ["proof (state)\nthis:\n  \\<forall>Tvec.\n     length xvec = length Tvec \\<longrightarrow>\n     \\<Psi> \\<rhd> Q[xvec::=Tvec] \\<approx> P[xvec::=Tvec]\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\n 2. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\n 2. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "case(cSim P Q)"], ["proof (state)\nthis:\n  \\<forall>Tvec.\n     length xvec = length Tvec \\<longrightarrow>\n     \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\n 2. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "by(induct rule: weakCongSimI) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "case(cWeakBisim P Q)"], ["proof (state)\nthis:\n  \\<forall>Tvec.\n     length xvec = length Tvec \\<longrightarrow>\n     \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>Tvec.\n          length xvec = length Tvec \\<longrightarrow>\n          \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec] \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>Tvec.\n     length xvec = length Tvec \\<longrightarrow>\n     \\<Psi> \\<rhd> P[xvec::=Tvec] \\<approx> Q[xvec::=Tvec]\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q", "by(rule_tac weakBisimInputPres) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<approx> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<lparr>\\<lambda>*xvec N\\<rparr>.P \\<doteq> M\\<lparr>\\<lambda>*xvec N\\<rparr>.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakPsiCongOutputPres:\n  fixes \\<Psi>    :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   M    :: 'a\n  and   xvec :: \"name list\"\n  and   N    :: 'a\n\n  assumes \"\\<Psi> \\<rhd> P \\<doteq> Q\"\n\n  shows \"\\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<doteq> M\\<langle>N\\<rangle>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<doteq> M\\<langle>N\\<rangle>.Q", "using assms"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<doteq> M\\<langle>N\\<rangle>.Q", "proof(induct rule: weakPsiCongSymI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> Q \\<doteq> P\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q\n 3. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<langle>N\\<rangle>.Q", "case(cSym P Q)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> Q \\<doteq> P\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q\n 3. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<langle>N\\<rangle>.Q", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<doteq> P", "by(rule weakPsiCongSym)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<doteq> P\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<langle>N\\<rangle>.Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<langle>N\\<rangle>.Q", "case(cSim P Q)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<langle>N\\<rangle>.Q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<langle>N\\<rangle>.Q", "by(induct rule: weakCongSimI) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> M\\<langle>N\\<rangle>.Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q", "case(cWeakBisim P Q)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q", "by(metis weakPsiCongE weakBisimOutputPres)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> M\\<langle>N\\<rangle>.P \\<approx> M\\<langle>N\\<rangle>.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakBisimCasePres:\n  fixes \\<Psi>   :: 'b\n  and   CsP :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n  and   CsQ :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n\n  assumes A: \"\\<And>\\<phi> P. (\\<phi>, P) mem CsP \\<Longrightarrow> \\<exists>Q. (\\<phi>, Q) mem CsQ \\<and> guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n  and     B: \"\\<And>\\<phi> Q. (\\<phi>, Q) mem CsQ \\<Longrightarrow> \\<exists>P. (\\<phi>, P) mem CsP \\<and> guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n\n  shows \"\\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ", "let ?X = \"{(\\<Psi>, Cases CsP, Cases CsQ) | \\<Psi> CsP CsQ. (\\<forall>\\<phi> P. (\\<phi>, P) mem CsP \\<longrightarrow> (\\<exists>Q. (\\<phi>, Q) mem CsQ \\<and> guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                                     (\\<forall>\\<phi> Q. (\\<phi>, Q) mem CsQ \\<longrightarrow> (\\<exists>P. (\\<phi>, P) mem CsP \\<and> guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ", "from assms"], ["proof (chain)\npicking this:\n  (?\\<phi>, ?P) mem CsP \\<Longrightarrow>\n  \\<exists>Q.\n     (?\\<phi>, Q) mem CsQ \\<and>\n     guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> ?P \\<doteq> Q)\n  (?\\<phi>, ?Q) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q)", "have \"(\\<Psi>, Cases CsP, Cases CsQ) \\<in> ?X\""], ["proof (prove)\nusing this:\n  (?\\<phi>, ?P) mem CsP \\<Longrightarrow>\n  \\<exists>Q.\n     (?\\<phi>, Q) mem CsQ \\<and>\n     guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> ?P \\<doteq> Q)\n  (?\\<phi>, ?Q) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q)\n\ngoal (1 subgoal):\n 1. (\\<Psi>, Cases CsP, Cases CsQ)\n    \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n           (\\<forall>\\<phi> P.\n               (\\<phi>, P) mem CsP \\<longrightarrow>\n               (\\<exists>Q.\n                   (\\<phi>, Q) mem CsQ \\<and>\n                   guarded Q \\<and>\n                   (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n           (\\<forall>\\<phi> Q.\n               (\\<phi>, Q) mem CsQ \\<longrightarrow>\n               (\\<exists>P.\n                   (\\<phi>, P) mem CsP \\<and>\n                   guarded P \\<and>\n                   (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}", "by auto"], ["proof (state)\nthis:\n  (\\<Psi>, Cases CsP, Cases CsQ)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Psi>, Cases CsP, Cases CsQ)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ", "proof(coinduct rule: weakBisimCoinduct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<lessapprox><({(\\<Psi>, Cases CsP, Cases CsQ) |\n  \\<Psi> CsP CsQ.\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsP \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsQ \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> Q.\n      (\\<phi>, Q) mem CsQ \\<longrightarrow>\n      (\\<exists>P.\n          (\\<phi>, P) mem CsP \\<and>\n          guarded P \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n weakBisim)> S\n 2. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 3. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 4. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "case(cStatImp \\<Psi> CasesP CasesQ)"], ["proof (state)\nthis:\n  (\\<Psi>, CasesP, CasesQ)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (4 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<lessapprox><({(\\<Psi>, Cases CsP, Cases CsQ) |\n  \\<Psi> CsP CsQ.\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsP \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsQ \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> Q.\n      (\\<phi>, Q) mem CsQ \\<longrightarrow>\n      (\\<exists>P.\n          (\\<phi>, P) mem CsP \\<and>\n          guarded P \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n weakBisim)> S\n 2. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 3. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 4. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<Psi>, CasesP, CasesQ)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> CasesP \\<lessapprox><({(\\<Psi>, Cases CsP, Cases CsQ) |\n   \\<Psi> CsP CsQ.\n   (\\<forall>\\<phi> P.\n       (\\<phi>, P) mem CsP \\<longrightarrow>\n       (\\<exists>Q.\n           (\\<phi>, Q) mem CsQ \\<and>\n           guarded Q \\<and>\n           (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n   (\\<forall>\\<phi> Q.\n       (\\<phi>, Q) mem CsQ \\<longrightarrow>\n       (\\<exists>P.\n           (\\<phi>, P) mem CsP \\<and>\n           guarded P \\<and>\n           (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n  weakBisim)> CasesQ", "apply(auto simp add: weakStatImp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>CsP \\<Psi>'' CsQ.\n       \\<lbrakk>CasesP = Cases CsP; CasesQ = Cases CsQ;\n        \\<forall>\\<phi> P.\n           (\\<phi>, P) mem CsP \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem CsQ \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q));\n        \\<forall>\\<phi> Q.\n           (\\<phi>, Q) mem CsQ \\<longrightarrow>\n           (\\<exists>P.\n               (\\<phi>, P) mem CsP \\<and>\n               guarded P \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<Psi> \\<rhd> Cases CsQ \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q' \\<and>\n                            \\<langle>\\<epsilon>, \\<Psi> \\<otimes>\n           \\<one>\\<rangle> \\<hookrightarrow>\\<^sub>F insertAssertion\n                (extractFrame Q') \\<Psi> \\<and>\n                            (\\<exists>Q''.\n                                \\<Psi> \\<otimes>\n                                \\<Psi>'' \\<rhd> Q' \\<Longrightarrow>\\<^sup>^\\<^sub>\\<tau> Q'' \\<and>\n                                ((\\<exists>CsQ.\n                                     Q'' = Cases CsQ \\<and>\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))) \\<or>\n                                 \\<Psi> \\<otimes>\n                                 \\<Psi>'' \\<rhd> Cases CsP \\<approx> Q''))", "by(rule_tac x=\"Cases CsQ\" in exI, auto)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> CasesP \\<lessapprox><({(\\<Psi>, Cases CsP, Cases CsQ) |\n \\<Psi> CsP CsQ.\n (\\<forall>\\<phi> P.\n     (\\<phi>, P) mem CsP \\<longrightarrow>\n     (\\<exists>Q.\n         (\\<phi>, Q) mem CsQ \\<and>\n         guarded Q \\<and>\n         (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n (\\<forall>\\<phi> Q.\n     (\\<phi>, Q) mem CsQ \\<longrightarrow>\n     (\\<exists>P.\n         (\\<phi>, P) mem CsP \\<and>\n         guarded P \\<and>\n         (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\nweakBisim)> CasesQ\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "case(cSim \\<Psi> CasesP CasesQ)"], ["proof (state)\nthis:\n  (\\<Psi>, CasesP, CasesQ)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "then"], ["proof (chain)\npicking this:\n  (\\<Psi>, CasesP, CasesQ)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}", "obtain CsP CsQ where C1: \"\\<And>\\<phi> Q. (\\<phi>, Q) mem CsQ \\<Longrightarrow> \\<exists>P. (\\<phi>, P) mem CsP \\<and> guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n                          and A: \"CasesP = Cases CsP\" and B: \"CasesQ = Cases CsQ\""], ["proof (prove)\nusing this:\n  (\\<Psi>, CasesP, CasesQ)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (1 subgoal):\n 1. (\\<And>CsQ CsP.\n        \\<lbrakk>\\<And>\\<phi> Q.\n                    (\\<phi>, Q) mem CsQ \\<Longrightarrow>\n                    \\<exists>P.\n                       (\\<phi>, P) mem CsP \\<and>\n                       guarded P \\<and>\n                       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q);\n         CasesP = Cases CsP; CasesQ = Cases CsQ\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (?\\<phi>1, ?Q1) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>1, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q1)\n  CasesP = Cases CsP\n  CasesQ = Cases CsQ\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "note C1"], ["proof (state)\nthis:\n  (?\\<phi>1, ?Q1) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>1, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q1)\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "moreover"], ["proof (state)\nthis:\n  (?\\<phi>1, ?Q1) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>1, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q1)\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "have \"\\<And>\\<Psi> P Q. \\<Psi> \\<rhd> P \\<approx> Q \\<Longrightarrow> \\<Psi> \\<rhd> P \\<leadsto><weakBisim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi> P Q.\n       \\<Psi> \\<rhd> P \\<approx> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<leadsto><weakBisim> Q", "by(rule weakBisimE)"], ["proof (state)\nthis:\n  ?\\<Psi>1 \\<rhd> ?P1 \\<approx> ?Q1 \\<Longrightarrow>\n  ?\\<Psi>1 \\<rhd> ?P1 \\<leadsto><weakBisim> ?Q1\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "moreover"], ["proof (state)\nthis:\n  ?\\<Psi>1 \\<rhd> ?P1 \\<approx> ?Q1 \\<Longrightarrow>\n  ?\\<Psi>1 \\<rhd> ?P1 \\<leadsto><weakBisim> ?Q1\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "note weakPsiCongE(1) weakPsiCongE(2)"], ["proof (state)\nthis:\n  ?\\<Psi> \\<rhd> ?P \\<doteq> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<approx> ?Q\n  ?\\<Psi> \\<rhd> ?P \\<doteq> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> ?Q\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "ultimately"], ["proof (chain)\npicking this:\n  (?\\<phi>1, ?Q1) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>1, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q1)\n  ?\\<Psi>1 \\<rhd> ?P1 \\<approx> ?Q1 \\<Longrightarrow>\n  ?\\<Psi>1 \\<rhd> ?P1 \\<leadsto><weakBisim> ?Q1\n  ?\\<Psi> \\<rhd> ?P \\<doteq> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<approx> ?Q\n  ?\\<Psi> \\<rhd> ?P \\<doteq> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> ?Q", "have \"\\<Psi> \\<rhd> Cases CsP \\<leadsto><weakBisim> Cases CsQ\""], ["proof (prove)\nusing this:\n  (?\\<phi>1, ?Q1) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>1, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q1)\n  ?\\<Psi>1 \\<rhd> ?P1 \\<approx> ?Q1 \\<Longrightarrow>\n  ?\\<Psi>1 \\<rhd> ?P1 \\<leadsto><weakBisim> ?Q1\n  ?\\<Psi> \\<rhd> ?P \\<doteq> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<approx> ?Q\n  ?\\<Psi> \\<rhd> ?P \\<doteq> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> ?Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<leadsto><weakBisim> Cases CsQ", "by(rule_tac caseWeakSimPres) (assumption | blast)+"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Cases CsP \\<leadsto><weakBisim> Cases CsQ\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "hence \"\\<Psi> \\<rhd> Cases CsP \\<leadsto><(?X \\<union> weakBisim)> Cases CsQ\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> Cases CsP \\<leadsto><weakBisim> Cases CsQ\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\n   \\<Psi> CsP CsQ.\n   (\\<forall>\\<phi> P.\n       (\\<phi>, P) mem CsP \\<longrightarrow>\n       (\\<exists>Q.\n           (\\<phi>, Q) mem CsQ \\<and>\n           guarded Q \\<and>\n           (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n   (\\<forall>\\<phi> Q.\n       (\\<phi>, Q) mem CsQ \\<longrightarrow>\n       (\\<exists>P.\n           (\\<phi>, P) mem CsP \\<and>\n           guarded P \\<and>\n           (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n  weakBisim)> Cases CsQ", "by(rule_tac weakSimMonotonic) auto"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Cases CsP \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\n \\<Psi> CsP CsQ.\n (\\<forall>\\<phi> P.\n     (\\<phi>, P) mem CsP \\<longrightarrow>\n     (\\<exists>Q.\n         (\\<phi>, Q) mem CsQ \\<and>\n         guarded Q \\<and>\n         (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n (\\<forall>\\<phi> Q.\n     (\\<phi>, Q) mem CsQ \\<longrightarrow>\n     (\\<exists>P.\n         (\\<phi>, P) mem CsP \\<and>\n         guarded P \\<and>\n         (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\nweakBisim)> Cases CsQ\n\ngoal (3 subgoals):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       \\<Psi>' \\<rhd> R \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                     CsP CsQ.\n                                     (\\<forall>\\<phi> P.\n   (\\<phi>, P) mem CsP \\<longrightarrow>\n   (\\<exists>Q.\n       (\\<phi>, Q) mem CsQ \\<and>\n       guarded Q \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                     (\\<forall>\\<phi> Q.\n   (\\<phi>, Q) mem CsQ \\<longrightarrow>\n   (\\<exists>P.\n       (\\<phi>, P) mem CsP \\<and>\n       guarded P \\<and>\n       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                    weakBisim)> S\n 2. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 3. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "with A B"], ["proof (chain)\npicking this:\n  CasesP = Cases CsP\n  CasesQ = Cases CsQ\n  \\<Psi> \\<rhd> Cases CsP \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\n \\<Psi> CsP CsQ.\n (\\<forall>\\<phi> P.\n     (\\<phi>, P) mem CsP \\<longrightarrow>\n     (\\<exists>Q.\n         (\\<phi>, Q) mem CsQ \\<and>\n         guarded Q \\<and>\n         (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n (\\<forall>\\<phi> Q.\n     (\\<phi>, Q) mem CsQ \\<longrightarrow>\n     (\\<exists>P.\n         (\\<phi>, P) mem CsP \\<and>\n         guarded P \\<and>\n         (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\nweakBisim)> Cases CsQ", "show ?case"], ["proof (prove)\nusing this:\n  CasesP = Cases CsP\n  CasesQ = Cases CsQ\n  \\<Psi> \\<rhd> Cases CsP \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\n \\<Psi> CsP CsQ.\n (\\<forall>\\<phi> P.\n     (\\<phi>, P) mem CsP \\<longrightarrow>\n     (\\<exists>Q.\n         (\\<phi>, Q) mem CsQ \\<and>\n         guarded Q \\<and>\n         (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n (\\<forall>\\<phi> Q.\n     (\\<phi>, Q) mem CsQ \\<longrightarrow>\n     (\\<exists>P.\n         (\\<phi>, P) mem CsP \\<and>\n         guarded P \\<and>\n         (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\nweakBisim)> Cases CsQ\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> CasesP \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\nCsP CsQ.\n(\\<forall>\\<phi> P.\n    (\\<phi>, P) mem CsP \\<longrightarrow>\n    (\\<exists>Q.\n        (\\<phi>, Q) mem CsQ \\<and>\n        guarded Q \\<and>\n        (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n(\\<forall>\\<phi> Q.\n    (\\<phi>, Q) mem CsQ \\<longrightarrow>\n    (\\<exists>P.\n        (\\<phi>, P) mem CsP \\<and>\n        guarded P \\<and>\n        (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                     weakBisim)> CasesQ", "by blast"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> CasesP \\<leadsto><({(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi>\n                                    CsP CsQ.\n                                    (\\<forall>\\<phi> P.\n  (\\<phi>, P) mem CsP \\<longrightarrow>\n  (\\<exists>Q.\n      (\\<phi>, Q) mem CsQ \\<and>\n      guarded Q \\<and>\n      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n                                    (\\<forall>\\<phi> Q.\n  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n  (\\<exists>P.\n      (\\<phi>, P) mem CsP \\<and>\n      guarded P \\<and>\n      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<union>\n                                   weakBisim)> CasesQ\n\ngoal (2 subgoals):\n 1. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 2. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 2. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "case(cExt \\<Psi> P Q \\<Psi>')"], ["proof (state)\nthis:\n  (\\<Psi>, P, Q)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (2 subgoals):\n 1. \\<And>\\<Psi>' R S \\<Psi>''.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>' \\<otimes> \\<Psi>'', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<otimes> \\<Psi>'' \\<rhd> R \\<approx> S\n 2. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<Psi>, P, Q)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (1 subgoal):\n 1. (\\<Psi> \\<otimes> \\<Psi>', P, Q)\n    \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n           (\\<forall>\\<phi> P.\n               (\\<phi>, P) mem CsP \\<longrightarrow>\n               (\\<exists>Q.\n                   (\\<phi>, Q) mem CsQ \\<and>\n                   guarded Q \\<and>\n                   (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n           (\\<forall>\\<phi> Q.\n               (\\<phi>, Q) mem CsQ \\<longrightarrow>\n               (\\<exists>P.\n                   (\\<phi>, P) mem CsP \\<and>\n                   guarded P \\<and>\n                   (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n    \\<Psi> \\<otimes> \\<Psi>' \\<rhd> P \\<approx> Q", "by auto"], ["proof (state)\nthis:\n  (\\<Psi> \\<otimes> \\<Psi>', P, Q)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n  \\<Psi> \\<otimes> \\<Psi>' \\<rhd> P \\<approx> Q\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "case(cSym \\<Psi> P Q)"], ["proof (state)\nthis:\n  (\\<Psi>, P, Q)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (1 subgoal):\n 1. \\<And>\\<Psi>' R S.\n       (\\<Psi>', R, S)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>.\n                          \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<Longrightarrow>\n       (\\<Psi>', S, R)\n       \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n              (\\<forall>\\<phi> P.\n                  (\\<phi>, P) mem CsP \\<longrightarrow>\n                  (\\<exists>Q.\n                      (\\<phi>, Q) mem CsQ \\<and>\n                      guarded Q \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n              (\\<forall>\\<phi> Q.\n                  (\\<phi>, Q) mem CsQ \\<longrightarrow>\n                  (\\<exists>P.\n                      (\\<phi>, P) mem CsP \\<and>\n                      guarded P \\<and>\n                      (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n       \\<Psi>' \\<rhd> S \\<approx> R", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<Psi>, P, Q)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))}\n\ngoal (1 subgoal):\n 1. (\\<Psi>, Q, P)\n    \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n           (\\<forall>\\<phi> P.\n               (\\<phi>, P) mem CsP \\<longrightarrow>\n               (\\<exists>Q.\n                   (\\<phi>, Q) mem CsQ \\<and>\n                   guarded Q \\<and>\n                   (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n           (\\<forall>\\<phi> Q.\n               (\\<phi>, Q) mem CsQ \\<longrightarrow>\n               (\\<exists>P.\n                   (\\<phi>, P) mem CsP \\<and>\n                   guarded P \\<and>\n                   (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n    \\<Psi> \\<rhd> Q \\<approx> P", "by auto (metis weakPsiCongSym)+"], ["proof (state)\nthis:\n  (\\<Psi>, Q, P)\n  \\<in> {(\\<Psi>, Cases CsP, Cases CsQ) |\\<Psi> CsP CsQ.\n         (\\<forall>\\<phi> P.\n             (\\<phi>, P) mem CsP \\<longrightarrow>\n             (\\<exists>Q.\n                 (\\<phi>, Q) mem CsQ \\<and>\n                 guarded Q \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n         (\\<forall>\\<phi> Q.\n             (\\<phi>, Q) mem CsQ \\<longrightarrow>\n             (\\<exists>P.\n                 (\\<phi>, P) mem CsP \\<and>\n                 guarded P \\<and>\n                 (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))} \\<or>\n  \\<Psi> \\<rhd> Q \\<approx> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakPsiCongCasePres:\n  fixes \\<Psi>   :: 'b\n  and   CsP :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n  and   CsQ :: \"('c \\<times> ('a, 'b, 'c) psi) list\"\n\n  assumes A: \"\\<And>\\<phi> P. (\\<phi>, P) mem CsP \\<Longrightarrow> \\<exists>Q. (\\<phi>, Q) mem CsQ \\<and> guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n  and     B: \"\\<And>\\<phi> Q. (\\<phi>, Q) mem CsQ \\<Longrightarrow> \\<exists>P. (\\<phi>, P) mem CsP \\<and> guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)\"\n\n  shows \"\\<Psi> \\<rhd> Cases CsP \\<doteq> Cases CsQ\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<doteq> Cases CsQ", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<doteq> Cases CsQ", "let ?Prop = \"\\<lambda>CsP CsQ. \\<forall>\\<phi> P. (\\<phi>, P) mem CsP \\<longrightarrow> (\\<exists>Q. (\\<phi>, Q) mem CsQ \\<and> guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<doteq> Cases CsQ", "from A B"], ["proof (chain)\npicking this:\n  (?\\<phi>, ?P) mem CsP \\<Longrightarrow>\n  \\<exists>Q.\n     (?\\<phi>, Q) mem CsQ \\<and>\n     guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> ?P \\<doteq> Q)\n  (?\\<phi>, ?Q) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q)", "have \"?Prop CsP CsQ \\<and> ?Prop CsQ CsP\""], ["proof (prove)\nusing this:\n  (?\\<phi>, ?P) mem CsP \\<Longrightarrow>\n  \\<exists>Q.\n     (?\\<phi>, Q) mem CsQ \\<and>\n     guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> ?P \\<doteq> Q)\n  (?\\<phi>, ?Q) mem CsQ \\<Longrightarrow>\n  \\<exists>P.\n     (?\\<phi>, P) mem CsP \\<and>\n     guarded P \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> ?Q)\n\ngoal (1 subgoal):\n 1. (\\<forall>\\<phi> P.\n        (\\<phi>, P) mem CsP \\<longrightarrow>\n        (\\<exists>Q.\n            (\\<phi>, Q) mem CsQ \\<and>\n            guarded Q \\<and>\n            (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n    (\\<forall>\\<phi> P.\n        (\\<phi>, P) mem CsQ \\<longrightarrow>\n        (\\<exists>Q.\n            (\\<phi>, Q) mem CsP \\<and>\n            guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))", "by(metis weakPsiCongSym)"], ["proof (state)\nthis:\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsP \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsQ \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsQ \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsP \\<and>\n          guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<doteq> Cases CsQ", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsP \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsQ \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsQ \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsP \\<and>\n          guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<doteq> Cases CsQ", "proof(induct rule: weakPsiCongSymI[where C=\"\\<lambda>P. Cases P\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa)))\n 2. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<approx> Cases Q\n 3. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases Q", "case(cSym P Q)"], ["proof (state)\nthis:\n  (\\<forall>\\<phi> Pa.\n      (\\<phi>, Pa) mem P \\<longrightarrow>\n      (\\<exists>Qa.\n          (\\<phi>, Qa) mem Q \\<and>\n          guarded Qa \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n  (\\<forall>\\<phi> Pa.\n      (\\<phi>, Pa) mem Q \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem P \\<and>\n          guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Q)))\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa)))\n 2. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<approx> Cases Q\n 3. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases Q", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<forall>\\<phi> Pa.\n      (\\<phi>, Pa) mem P \\<longrightarrow>\n      (\\<exists>Qa.\n          (\\<phi>, Qa) mem Q \\<and>\n          guarded Qa \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n  (\\<forall>\\<phi> Pa.\n      (\\<phi>, Pa) mem Q \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem P \\<and>\n          guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Q)))\n\ngoal (1 subgoal):\n 1. (\\<forall>\\<phi> Pa.\n        (\\<phi>, Pa) mem Q \\<longrightarrow>\n        (\\<exists>Q.\n            (\\<phi>, Q) mem P \\<and>\n            guarded Q \\<and>\n            (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<and>\n    (\\<forall>\\<phi> Pa.\n        (\\<phi>, Pa) mem P \\<longrightarrow>\n        (\\<exists>Qa.\n            (\\<phi>, Qa) mem Q \\<and>\n            guarded Qa \\<and>\n            (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa)))", "by auto"], ["proof (state)\nthis:\n  (\\<forall>\\<phi> Pa.\n      (\\<phi>, Pa) mem Q \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem P \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> Pa.\n      (\\<phi>, Pa) mem P \\<longrightarrow>\n      (\\<exists>Qa.\n          (\\<phi>, Qa) mem Q \\<and>\n          guarded Qa \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa)))\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<approx> Cases Q\n 2. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<approx> Cases Q\n 2. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases Q", "case(cWeakBisim CsP CsQ)"], ["proof (state)\nthis:\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsP \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsQ \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsQ \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsP \\<and>\n          guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<approx> Cases Q\n 2. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases Q", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsP \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsQ \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsQ \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsP \\<and>\n          guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ", "by(rule_tac weakBisimCasePres) (metis weakPsiCongSym)+"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Cases CsP \\<approx> Cases CsQ\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases Q", "case(cSim CsP CsQ)"], ["proof (state)\nthis:\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsP \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsQ \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsQ \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsP \\<and>\n          guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem P \\<longrightarrow>\n           (\\<exists>Qa.\n               (\\<phi>, Qa) mem Q \\<and>\n               guarded Qa \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> Pa \\<doteq> Qa))) \\<and>\n       (\\<forall>\\<phi> Pa.\n           (\\<phi>, Pa) mem Q \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem P \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>.\n                   \\<Psi> \\<rhd> Pa \\<doteq> Q))) \\<Longrightarrow>\n       \\<Psi> \\<rhd> Cases P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases Q", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsP \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsQ \\<and>\n          guarded Q \\<and>\n          (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))) \\<and>\n  (\\<forall>\\<phi> P.\n      (\\<phi>, P) mem CsQ \\<longrightarrow>\n      (\\<exists>Q.\n          (\\<phi>, Q) mem CsP \\<and>\n          guarded Q \\<and> (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q)))\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Cases CsP \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases CsQ", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<phi> P.\n                (\\<phi>, P) mem CsP \\<longrightarrow>\n                (\\<exists>Q.\n                    (\\<phi>, Q) mem CsQ \\<and>\n                    guarded Q \\<and>\n                    (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q));\n     \\<forall>\\<phi> P.\n        (\\<phi>, P) mem CsQ \\<longrightarrow>\n        (\\<exists>Q.\n            (\\<phi>, Q) mem CsP \\<and>\n            guarded Q \\<and>\n            (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q))\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> \\<rhd> Cases CsP \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases CsQ", "apply(rule_tac weakCongSimCasePres, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi> Q.\n       \\<lbrakk>\\<forall>\\<phi> P.\n                   (\\<phi>, P) mem CsP \\<longrightarrow>\n                   (\\<exists>Q.\n                       (\\<phi>, Q) mem CsQ \\<and>\n                       guarded Q \\<and>\n                       (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q));\n        \\<forall>\\<phi> P.\n           (\\<phi>, P) mem CsQ \\<longrightarrow>\n           (\\<exists>Q.\n               (\\<phi>, Q) mem CsP \\<and>\n               guarded Q \\<and>\n               (\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q));\n        (\\<phi>, Q) mem CsQ\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P.\n                            (\\<phi>, P) mem CsP \\<and>\n                            guarded P \\<and>\n                            \\<Psi> \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q", "by(blast dest: weakPsiCongE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Cases CsP \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Cases CsQ\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Cases CsP \\<doteq> Cases CsQ\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakPsiCongResPres:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   x :: name\n  \n  assumes \"\\<Psi> \\<rhd> P \\<doteq> Q\"\n  and     \"x \\<sharp> \\<Psi>\"\n\n  shows \"\\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<doteq> \\<lparr>\\<nu>x\\<rparr>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<doteq> \\<lparr>\\<nu>x\\<rparr>Q", "using \\<open>\\<Psi> \\<rhd> P \\<doteq> Q\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<doteq> \\<lparr>\\<nu>x\\<rparr>Q", "proof(induct rule: weakPsiCongSymI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> Q \\<doteq> P\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<approx> \\<lparr>\\<nu>x\\<rparr>Q\n 3. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "case(cSym P Q)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> Q \\<doteq> P\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<approx> \\<lparr>\\<nu>x\\<rparr>Q\n 3. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<doteq> P", "by(rule weakPsiCongSym)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<doteq> P\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<approx> \\<lparr>\\<nu>x\\<rparr>Q\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<approx> \\<lparr>\\<nu>x\\<rparr>Q\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "case(cWeakBisim P Q)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<approx> \\<lparr>\\<nu>x\\<rparr>Q\n 2. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<approx> \\<lparr>\\<nu>x\\<rparr>Q", "using \\<open>x \\<sharp> \\<Psi>\\<close>"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n  x \\<sharp> \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<approx> \\<lparr>\\<nu>x\\<rparr>Q", "by(metis weakPsiCongE weakBisimResPres)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<approx> \\<lparr>\\<nu>x\\<rparr>Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "case(cSim P Q)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "obtain y::name where \"y \\<sharp> \\<Psi>\" and \"y \\<sharp> P\" and \"y \\<sharp> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> \\<Psi>; y \\<sharp> P; y \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(generate_fresh \"name\") auto"], ["proof (state)\nthis:\n  y \\<sharp> \\<Psi>\n  y \\<sharp> P\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "from \\<open>\\<Psi> \\<rhd> P \\<doteq> Q\\<close>"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> P \\<doteq> Q", "have \"([(x, y)] \\<bullet> \\<Psi>) \\<rhd> ([(x, y)] \\<bullet> P) \\<doteq> ([(x, y)] \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. [(x, y)] \\<bullet>\n    \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<doteq> [(x, y)] \\<bullet> Q", "by(rule weakPsiCongClosed)"], ["proof (state)\nthis:\n  [(x, y)] \\<bullet>\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<doteq> [(x, y)] \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "hence \"([(x, y)] \\<bullet> \\<Psi>) \\<rhd> ([(x, y)] \\<bullet> P) \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> ([(x, y)] \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  [(x, y)] \\<bullet>\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet> P \\<doteq> [(x, y)] \\<bullet> Q\n\ngoal (1 subgoal):\n 1. [(x, y)] \\<bullet>\n    \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                  P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                     y)] \\<bullet>\n                                   Q", "by(rule weakPsiCongE)"], ["proof (state)\nthis:\n  [(x, y)] \\<bullet>\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                   y)] \\<bullet>\n                                 Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "with \\<open>x \\<sharp> \\<Psi>\\<close> \\<open>y \\<sharp> \\<Psi>\\<close>"], ["proof (chain)\npicking this:\n  x \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>\n  [(x, y)] \\<bullet>\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                   y)] \\<bullet>\n                                 Q", "have \"\\<Psi>  \\<rhd> ([(x, y)] \\<bullet> P) \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> ([(x, y)] \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  x \\<sharp> \\<Psi>\n  y \\<sharp> \\<Psi>\n  [(x, y)] \\<bullet>\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                   y)] \\<bullet>\n                                 Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                  P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                     y)] \\<bullet>\n                                   Q", "by simp"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                   y)] \\<bullet>\n                                 Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "moreover"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                   y)] \\<bullet>\n                                 Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "have \"eqvt weakBisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt weakBisim", "by simp"], ["proof (state)\nthis:\n  eqvt weakBisim\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "moreover"], ["proof (state)\nthis:\n  eqvt weakBisim\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "note \\<open>y \\<sharp> \\<Psi>\\<close>"], ["proof (state)\nthis:\n  y \\<sharp> \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "moreover"], ["proof (state)\nthis:\n  y \\<sharp> \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "have \"weakBisim \\<subseteq> weakBisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weakBisim \\<subseteq> weakBisim", "by auto"], ["proof (state)\nthis:\n  weakBisim \\<subseteq> weakBisim\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "moreover"], ["proof (state)\nthis:\n  weakBisim \\<subseteq> weakBisim\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "note weakBisimResPres"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<Psi> \\<rhd> ?P \\<approx> ?Q; ?x \\<sharp> ?\\<Psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Psi> \\<rhd> \\<lparr>\\<nu>?x\\<rparr>?P \\<approx> \\<lparr>\\<nu>?x\\<rparr>?Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "ultimately"], ["proof (chain)\npicking this:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                   y)] \\<bullet>\n                                 Q\n  eqvt weakBisim\n  y \\<sharp> \\<Psi>\n  weakBisim \\<subseteq> weakBisim\n  \\<lbrakk>?\\<Psi> \\<rhd> ?P \\<approx> ?Q; ?x \\<sharp> ?\\<Psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Psi> \\<rhd> \\<lparr>\\<nu>?x\\<rparr>?P \\<approx> \\<lparr>\\<nu>?x\\<rparr>?Q", "have \"\\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P) \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> [(x, y)] \\<bullet>\n                P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> [(x,\n                                   y)] \\<bullet>\n                                 Q\n  eqvt weakBisim\n  y \\<sharp> \\<Psi>\n  weakBisim \\<subseteq> weakBisim\n  \\<lbrakk>?\\<Psi> \\<rhd> ?P \\<approx> ?Q; ?x \\<sharp> ?\\<Psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Psi> \\<rhd> \\<lparr>\\<nu>?x\\<rparr>?P \\<approx> \\<lparr>\\<nu>?x\\<rparr>?Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet>\n   P) \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>y\\<rparr>([(x,\n        y)] \\<bullet>\n      Q)", "by(rule weakCongSimResPres)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet>\n P) \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>y\\<rparr>([(x,\n      y)] \\<bullet>\n    Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "with \\<open>y \\<sharp> P\\<close> \\<open>y \\<sharp> Q\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> P\n  y \\<sharp> Q\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet>\n P) \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>y\\<rparr>([(x,\n      y)] \\<bullet>\n    Q)", "show ?case"], ["proof (prove)\nusing this:\n  y \\<sharp> P\n  y \\<sharp> Q\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet>\n P) \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>y\\<rparr>([(x,\n      y)] \\<bullet>\n    Q)\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q", "by(simp add: alphaRes)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> \\<lparr>\\<nu>x\\<rparr>P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> \\<lparr>\\<nu>x\\<rparr>Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakPsiCongResChainPres:\n  fixes \\<Psi>   :: 'b\n  and   P    :: \"('a, 'b, 'c) psi\"\n  and   Q    :: \"('a, 'b, 'c) psi\"\n  and   xvec :: \"name list\"\n\n  assumes \"\\<Psi> \\<rhd> P \\<doteq> Q\"\n  and     \"xvec \\<sharp>* \\<Psi>\"\n\n  shows \"\\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>P \\<doteq> \\<lparr>\\<nu>*xvec\\<rparr>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>P \\<doteq> \\<lparr>\\<nu>*xvec\\<rparr>Q", "using assms"], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<doteq> Q\n  xvec \\<sharp>* \\<Psi>\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> \\<lparr>\\<nu>*xvec\\<rparr>P \\<doteq> \\<lparr>\\<nu>*xvec\\<rparr>Q", "by(induct xvec) (auto intro: weakPsiCongResPres)"], ["", "lemma weakPsiCongParPres:\n  fixes \\<Psi> :: 'b\n  and   P :: \"('a, 'b, 'c) psi\"\n  and   Q :: \"('a, 'b, 'c) psi\"\n  and   R :: \"('a, 'b, 'c) psi\"\n  \n  assumes \"\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\"\n\n  shows \"\\<Psi> \\<rhd> P \\<parallel> R \\<doteq> Q \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<parallel> R \\<doteq> Q \\<parallel> R", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<parallel> R \\<doteq> Q \\<parallel> R", "proof(induct rule: weakPsiCongSymI[where C=\"\\<lambda>P. P \\<parallel> R\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> Q \\<doteq> P\n 2. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel> R \\<approx> Q \\<parallel> R\n 3. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "case(cSym P Q)"], ["proof (state)\nthis:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> Q \\<doteq> P\n 2. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel> R \\<approx> Q \\<parallel> R\n 3. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<forall>\\<Psi>. \\<Psi> \\<rhd> Q \\<doteq> P", "by(blast dest: weakPsiCongSym)"], ["proof (state)\nthis:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> Q \\<doteq> P\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel> R \\<approx> Q \\<parallel> R\n 2. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel> R \\<approx> Q \\<parallel> R\n 2. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "case(cWeakBisim P Q)"], ["proof (state)\nthis:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel> R \\<approx> Q \\<parallel> R\n 2. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<parallel> R \\<approx> Q \\<parallel> R", "by(metis weakBisimParPres weakPsiCongE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<parallel> R \\<approx> Q \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "case(cSim P Q)"], ["proof (state)\nthis:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "{"], ["proof (state)\nthis:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "fix \\<Psi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "from \\<open>\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q", "have \"\\<Psi> \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q\""], ["proof (prove)\nusing this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q", "by(auto dest: weakPsiCongE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "}"], ["proof (state)\nthis:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "moreover"], ["proof (state)\nthis:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "{"], ["proof (state)\nthis:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "fix \\<Psi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "from \\<open>\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q", "have \"\\<Psi> \\<rhd> P \\<leadsto><weakBisim> Q\""], ["proof (prove)\nusing this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<leadsto><weakBisim> Q", "by(auto dest: weakPsiCongE weakBisimE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<leadsto><weakBisim> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "}"], ["proof (state)\nthis:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto><weakBisim> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "moreover"], ["proof (state)\nthis:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto><weakBisim> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "{"], ["proof (state)\nthis:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto><weakBisim> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "fix \\<Psi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "from \\<open>\\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q", "have \"\\<Psi> \\<rhd> P \\<approx> Q\""], ["proof (prove)\nusing this:\n  \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<approx> Q", "by(auto dest: weakPsiCongE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<approx> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "hence \"\\<Psi> \\<rhd> Q \\<lessapprox><weakBisim> P\""], ["proof (prove)\nusing this:\n  \\<Psi> \\<rhd> P \\<approx> Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> Q \\<lessapprox><weakBisim> P", "by(metis weakBisimE)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> Q \\<lessapprox><weakBisim> P\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "}"], ["proof (state)\nthis:\n  ?\\<Psi>'2 \\<rhd> Q \\<lessapprox><weakBisim> P\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<forall>\\<Psi>. \\<Psi> \\<rhd> P \\<doteq> Q \\<Longrightarrow>\n       \\<Psi> \\<rhd> P \\<parallel>\n                     R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\nR", "ultimately"], ["proof (chain)\npicking this:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto><weakBisim> Q\n  ?\\<Psi>'2 \\<rhd> Q \\<lessapprox><weakBisim> P", "show ?case"], ["proof (prove)\nusing this:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto><weakBisim> Q\n  ?\\<Psi>'2 \\<rhd> Q \\<lessapprox><weakBisim> P\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<parallel>\n                  R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\n                                   R", "using weakBisimEqvt weakBisimEqvt weakBisimE(4)  weakBisimE(3) weakBisimParPresAux weakBisimResChainPres statEqWeakBisim"], ["proof (prove)\nusing this:\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q\n  ?\\<Psi>'2 \\<rhd> P \\<leadsto><weakBisim> Q\n  ?\\<Psi>'2 \\<rhd> Q \\<lessapprox><weakBisim> P\n  eqvt weakBisim\n  eqvt weakBisim\n  ?\\<Psi> \\<rhd> ?P \\<approx> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<rhd> ?Q \\<approx> ?P\n  ?\\<Psi> \\<rhd> ?P \\<approx> ?Q \\<Longrightarrow>\n  ?\\<Psi> \\<otimes> ?\\<Psi>' \\<rhd> ?P \\<approx> ?Q\n  \\<lbrakk>?\\<Psi> \\<otimes> ?\\<Psi>\\<^sub>R \\<rhd> ?P \\<approx> ?Q;\n   extractFrame ?R = \\<langle>?A\\<^sub>R, ?\\<Psi>\\<^sub>R\\<rangle>;\n   ?A\\<^sub>R \\<sharp>* ?\\<Psi>; ?A\\<^sub>R \\<sharp>* ?P;\n   ?A\\<^sub>R \\<sharp>* ?Q\\<rbrakk>\n  \\<Longrightarrow> ?\\<Psi> \\<rhd> ?P \\<parallel>\n                                   ?R \\<approx> ?Q \\<parallel> ?R\n  \\<lbrakk>?\\<Psi> \\<rhd> ?P \\<approx> ?Q; ?xvec \\<sharp>* ?\\<Psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Psi> \\<rhd> \\<lparr>\\<nu>*?xvec\\<rparr>?P \\<approx> \\<lparr>\\<nu>*?xvec\\<rparr>?Q\n  \\<lbrakk>?\\<Psi> \\<rhd> ?P \\<approx> ?Q;\n   ?\\<Psi> \\<simeq> ?\\<Psi>'\\<rbrakk>\n  \\<Longrightarrow> ?\\<Psi>' \\<rhd> ?P \\<approx> ?Q\n\ngoal (1 subgoal):\n 1. \\<Psi> \\<rhd> P \\<parallel>\n                  R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\n                                   R", "by(rule_tac weakCongSimParPres)"], ["proof (state)\nthis:\n  \\<Psi> \\<rhd> P \\<parallel>\n                R \\<leadsto>\\<guillemotleft>weakBisim\\<guillemotright> Q \\<parallel>\n                                 R\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}