{"file_name": "/home/qj213/afp-2021-10-22/thys/Relational_Paths/Paths.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Relational_Paths", "problem_names": ["lemma path_concat_aux_0:\n  assumes \"is_vector v\"\n      and \"v \\<noteq> 0\"\n      and \"w;v\\<^sup>T \\<le> x\"\n      and \"v;z \\<le> y\"\n    shows \"w;1;z \\<le> x;y\"", "lemma reachability_from_z_in_y:\n  assumes \"x \\<le> y\\<^sup>\\<star>;z\"\n      and \"x \\<cdot> z = 0\"\n    shows \"x \\<le> y\\<^sup>+;z\"", "lemma reachable_imp:\n  assumes \"point p\"\n      and \"point q\"\n      and \"p\\<^sup>\\<star>;q \\<le> p\\<^sup>T\\<^sup>\\<star>;p\"\n    shows \"p \\<le> p\\<^sup>\\<star>;q\"", "lemma no_start_end_points_iff:\n  \"no_start_end_points x \\<longleftrightarrow> no_start_points x \\<and> no_end_points x\"", "lemma has_start_end_points_iff:\n  \"has_start_end_points x \\<longleftrightarrow> has_start_points x \\<and> has_end_points x\"", "lemma terminating_iff:\n  \"terminating x \\<longleftrightarrow> backward_terminating x \\<and> forward_terminating x\"", "lemma finite_iff:\n  \"finite x \\<longleftrightarrow> backward_finite x \\<and> forward_finite x\"", "lemma no_start_end_points_path_iff:\n  \"no_start_end_points_path x \\<longleftrightarrow> no_start_points_path x \\<and> no_end_points_path x\"", "lemma has_start_end_points_path_iff:\n  \"has_start_end_points_path x \\<longleftrightarrow> has_start_points_path x \\<and> has_end_points_path x\"", "lemma terminating_path_iff:\n  \"terminating_path x \\<longleftrightarrow> backward_terminating_path x \\<and> forward_terminating_path x\"", "lemma finite_path_iff:\n  \"finite_path x \\<longleftrightarrow> backward_finite_path x \\<and> forward_finite_path x\"", "lemma connected_conv:\n  \"connected x \\<longleftrightarrow> connected (x\\<^sup>T)\"", "lemma conv_many_strongly_connected:\n  \"many_strongly_connected x \\<longleftrightarrow> many_strongly_connected (x\\<^sup>T)\"", "lemma conv_one_strongly_connected:\n  \"one_strongly_connected x \\<longleftrightarrow> one_strongly_connected (x\\<^sup>T)\"", "lemma conv_path:\n  \"path x \\<longleftrightarrow> path (x\\<^sup>T)\"", "lemma conv_cycle:\n  \"cycle x \\<longleftrightarrow> cycle (x\\<^sup>T)\"", "lemma conv_no_start_points:\n  \"no_start_points x \\<longleftrightarrow> no_end_points (x\\<^sup>T)\"", "lemma conv_no_start_end_points:\n  \"no_start_end_points x \\<longleftrightarrow> no_start_end_points (x\\<^sup>T)\"", "lemma conv_has_start_points:\n  \"has_start_points x \\<longleftrightarrow> has_end_points (x\\<^sup>T)\"", "lemma conv_has_start_end_points:\n  \"has_start_end_points x \\<longleftrightarrow> has_start_end_points (x\\<^sup>T)\"", "lemma conv_backward_terminating:\n  \"backward_terminating x \\<longleftrightarrow> forward_terminating (x\\<^sup>T)\"", "lemma conv_terminating:\n  \"terminating x \\<longleftrightarrow> terminating (x\\<^sup>T)\"", "lemma conv_backward_finite:\n  \"backward_finite x \\<longleftrightarrow> forward_finite (x\\<^sup>T)\"", "lemma conv_finite:\n  \"finite x \\<longleftrightarrow> finite (x\\<^sup>T)\"", "lemma conv_no_start_points_path:\n  \"no_start_points_path x \\<longleftrightarrow> no_end_points_path (x\\<^sup>T)\"", "lemma conv_no_start_end_points_path:\n  \"no_start_end_points_path x \\<longleftrightarrow> no_start_end_points_path (x\\<^sup>T)\"", "lemma conv_has_start_points_path:\n  \"has_start_points_path x \\<longleftrightarrow> has_end_points_path (x\\<^sup>T)\"", "lemma conv_has_start_end_points_path:\n  \"has_start_end_points_path x \\<longleftrightarrow> has_start_end_points_path (x\\<^sup>T)\"", "lemma conv_backward_terminating_path:\n  \"backward_terminating_path x \\<longleftrightarrow> forward_terminating_path (x\\<^sup>T)\"", "lemma conv_terminating_path:\n  \"terminating_path x \\<longleftrightarrow> terminating_path (x\\<^sup>T)\"", "lemma conv_backward_finite_path:\n  \"backward_finite_path x \\<longleftrightarrow> forward_finite_path (x\\<^sup>T)\"", "lemma conv_finite_path:\n  \"finite_path x \\<longleftrightarrow> finite_path (x\\<^sup>T)\"", "lemma connected_iff2:\n  assumes \"is_inj x\"\n      and \"is_p_fun x\"\n    shows \"connected x \\<longleftrightarrow> x;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma connected_iff3:\n  assumes \"is_inj x\"\n      and \"is_p_fun x\"\n    shows \"connected x \\<longleftrightarrow> x\\<^sup>T;1;x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma connected_iff4:\n  \"connected x \\<longleftrightarrow> x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma connected_iff5:\n  \"connected x \\<longleftrightarrow> x\\<^sup>+;1;x\\<^sup>+ \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma connected_iff6:\n  assumes \"is_inj x\"\n      and \"is_p_fun x\"\n    shows \"connected x \\<longleftrightarrow> x\\<^sup>+;1;(x\\<^sup>+)\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma connected_iff7:\n  assumes \"is_inj x\"\n      and \"is_p_fun x\"\n    shows \"connected x \\<longleftrightarrow> (x\\<^sup>+)\\<^sup>T;1;x\\<^sup>+ \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma connected_iff8:\n  \"connected x \\<longleftrightarrow> (x\\<^sup>+)\\<^sup>T;1;(x\\<^sup>+)\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma many_strongly_connected_iff_1:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T \\<le> x\\<^sup>\\<star>\"", "lemma many_strongly_connected_iff_2:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_3:\n  \"many_strongly_connected x \\<longleftrightarrow> x \\<le> x\\<^sup>T\\<^sup>\\<star>\"", "lemma many_strongly_connected_iff_4:\n  \"many_strongly_connected x \\<longleftrightarrow> x \\<le> x\\<^sup>T\\<^sup>+\"", "lemma many_strongly_connected_iff_5:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x\\<^sup>T \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_6:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x\\<^sup>\\<star> \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_7:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T\\<^sup>+ = x\\<^sup>+\"", "lemma many_strongly_connected_iff_5_eq:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x\\<^sup>T = x\\<^sup>+\"", "lemma many_strongly_connected_iff_6_eq:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x\\<^sup>\\<star> = x\\<^sup>+\"", "lemma many_strongly_connected_implies_no_start_end_points:\n  assumes \"many_strongly_connected x\"\n    shows \"no_start_end_points x\"", "lemma many_strongly_connected_implies_8:\n  assumes \"many_strongly_connected x\"\n    shows \"x;x\\<^sup>T \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_implies_9:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>T;x \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_implies_10:\n  assumes \"many_strongly_connected x\"\n    shows \"x;x\\<^sup>T;x\\<^sup>\\<star> \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_implies_10_eq:\n  assumes \"many_strongly_connected x\"\n    shows \"x;x\\<^sup>T;x\\<^sup>\\<star> = x\\<^sup>+\"", "lemma many_strongly_connected_implies_11:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>\\<star>;x\\<^sup>T;x \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_implies_11_eq:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>\\<star>;x\\<^sup>T;x = x\\<^sup>+\"", "lemma many_strongly_connected_implies_12:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>\\<star>;x;x\\<^sup>T \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_implies_12_eq:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>\\<star>;x;x\\<^sup>T = x\\<^sup>+\"", "lemma many_strongly_connected_implies_13:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>T;x;x\\<^sup>\\<star> \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_implies_13_eq:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>T;x;x\\<^sup>\\<star> = x\\<^sup>+\"", "lemma many_strongly_connected_iff_8:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x;x\\<^sup>T \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_9:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_10:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x;x\\<^sup>T;x\\<^sup>\\<star> \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_10_eq:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x;x\\<^sup>T;x\\<^sup>\\<star> = x\\<^sup>+\"", "lemma many_strongly_connected_iff_11:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x\\<^sup>T;x \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_11_eq:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x\\<^sup>T;x = x\\<^sup>+\"", "lemma many_strongly_connected_iff_12:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x;x\\<^sup>T \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_12_eq:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x;x\\<^sup>T = x\\<^sup>+\"", "lemma many_strongly_connected_iff_13:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x;x\\<^sup>\\<star> \\<le> x\\<^sup>+\"", "lemma many_strongly_connected_iff_13_eq:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x;x\\<^sup>\\<star> = x\\<^sup>+\"", "lemma one_strongly_connected_iff:\n  \"one_strongly_connected x \\<longleftrightarrow> connected x \\<and> many_strongly_connected x\"", "lemma one_strongly_connected_iff_1:\n  \"one_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>+\"", "lemma one_strongly_connected_iff_1_eq:\n  \"one_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;1;x\\<^sup>T = x\\<^sup>+\"", "lemma one_strongly_connected_iff_2:\n  \"one_strongly_connected x \\<longleftrightarrow> x;1;x \\<le> x\\<^sup>T\\<^sup>\\<star>\"", "lemma one_strongly_connected_iff_3:\n  \"one_strongly_connected x \\<longleftrightarrow> x;1;x \\<le> x\\<^sup>T\\<^sup>+\"", "lemma one_strongly_connected_iff_3_eq:\n  \"one_strongly_connected x \\<longleftrightarrow> x;1;x = x\\<^sup>T\\<^sup>+\"", "lemma one_strongly_connected_iff_4_eq:\n  \"one_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;1;x = x\\<^sup>+\"", "lemma one_strongly_connected_iff_5_eq:\n  \"one_strongly_connected x \\<longleftrightarrow> x;1;x\\<^sup>T = x\\<^sup>+\"", "lemma one_strongly_connected_iff_6_aux:\n  \"x;x\\<^sup>+ \\<le> x;1;x\"", "lemma one_strongly_connected_implies_6_eq:\n  assumes \"one_strongly_connected x\"\n    shows \"x;1;x = x;x\\<^sup>+\"", "lemma one_strongly_connected_iff_7_aux:\n  \"x\\<^sup>+ \\<le> x;1;x\"", "lemma one_strongly_connected_implies_7_eq:\n  assumes \"one_strongly_connected x\"\n    shows \"x;1;x = x\\<^sup>+\"", "lemma one_strongly_connected_implies_8:\n  assumes \"one_strongly_connected x\"\n    shows \"x;1;x \\<le> x\\<^sup>\\<star>\"", "lemma one_strongly_connected_iff_4:\n  assumes \"is_inj x\"\n    shows \"one_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;1;x \\<le> x\\<^sup>+\"", "lemma one_strongly_connected_iff_5:\n  assumes \"is_p_fun x\"\n    shows \"one_strongly_connected x \\<longleftrightarrow> x;1;x\\<^sup>T \\<le> x\\<^sup>+\"", "lemma one_strongly_connected_iff_6:\n  assumes \"is_p_fun x\"\n      and \"is_inj x\"\n    shows \"one_strongly_connected x \\<longleftrightarrow> x;1;x \\<le> x;x\\<^sup>+\"", "lemma one_strongly_connected_iff_6_eq:\n  assumes \"is_p_fun x\"\n      and \"is_inj x\"\n    shows \"one_strongly_connected x \\<longleftrightarrow> x;1;x = x;x\\<^sup>+\"", "lemma start_end_implies_terminating:\n  assumes \"has_start_points x\"\n      and \"has_end_points x\"\n    shows \"terminating x\"", "lemma start_points_end_points_conv:\n  \"start_points x = end_points (x\\<^sup>T)\"", "lemma start_point_at_most_one:\n  assumes \"path x\"\n    shows \"is_inj (start_points x)\"", "lemma start_point_zero_point:\n  assumes \"path x\"\n    shows \"start_points x = 0 \\<or> is_point (start_points x)\"", "lemma start_point_iff1:\n  assumes \"path x\"\n    shows \"is_point (start_points x) \\<longleftrightarrow> \\<not>(no_start_points x)\"", "lemma end_point_at_most_one:\n  assumes \"path x\"\n    shows \"is_inj (end_points x)\"", "lemma end_point_zero_point:\n  assumes \"path x\"\n    shows \"end_points x = 0 \\<or> is_point (end_points x)\"", "lemma end_point_iff1:\n  assumes \"path x\"\n    shows \"is_point (end_points x) \\<longleftrightarrow> \\<not>(no_end_points x)\"", "lemma predecessor_point':\n  assumes \"path x\"\n      and \"point s\"\n      and \"point e\"\n      and \"e;s\\<^sup>T \\<le> x\"\n    shows \"x;s = e\"", "lemma predecessor_point:\n  assumes \"path x\"\n      and \"point s\"\n      and \"point e\"\n      and \"e;s\\<^sup>T \\<le> x\"\n    shows \"point(x;s)\"", "lemma points_of_path_iff:\n  shows \"(x + x\\<^sup>T);1 = x\\<^sup>T;1 + start_points(x)\"\n    and \"(x + x\\<^sup>T);1 = x;1 + end_points(x)\"", "lemma path_concat_aux_1:\n  assumes \"x;1 \\<cdot> y;1 \\<cdot> y\\<^sup>T;1 = 0\"\n      and \"end_points x = start_points y\"\n    shows \"x;1 \\<cdot> y;1 = 0\"", "lemma path_concat_aux_2:\n  assumes \"x;1 \\<cdot> x\\<^sup>T;1 \\<cdot> y\\<^sup>T;1 = 0\"\n      and \"end_points x = start_points y\"\n    shows \"x\\<^sup>T;1 \\<cdot> y\\<^sup>T;1 = 0\"", "lemma path_concat_aux3_1:\n  assumes \"path x\"\n    shows \"x;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma path_concat_aux3_2:\n  assumes \"path x\"\n    shows \"x\\<^sup>T;1;x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma path_concat_aux3_3:\n  assumes \"path x\"\n    shows \"x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma path_concat_aux_3:\n  assumes \"path x\"\n      and \"y \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\"\n      and \"z \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\"\n    shows \"y;1;z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\"", "lemma path_concat_aux_4:\n  \"x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<le> x\\<^sup>\\<star> + x\\<^sup>T;1\"", "lemma path_concat_aux_5:\n  assumes \"path x\"\n      and \"y \\<le> start_points x\"\n      and \"z \\<le> x + x\\<^sup>T\"\n    shows \"y;1;z \\<le> x\\<^sup>\\<star>\"", "lemma path_conditions_disjoint_points_iff:\n  \"x;1 \\<cdot> (x\\<^sup>T;1 + y;1) \\<cdot> y\\<^sup>T;1 = 0 \\<and> start_points x \\<cdot> end_points y = 0 \\<longleftrightarrow> x;1 \\<cdot> y\\<^sup>T;1 = 0\"", "lemma reachable_implies_predecessor:\n  assumes \"p \\<noteq> q\"\n      and \"point p\"\n      and \"point q\"\n      and \"x\\<^sup>\\<star>;q \\<le> x\\<^sup>T\\<^sup>\\<star>;p\"\n    shows \"x;q \\<noteq> 0\"", "lemma acyclic_imp_one_step_different_points:\n  assumes \"is_acyclic x\"\n      and \"point p\"\n      and \"point q\"\n      and \"p \\<le> x;q\"\n    shows \"p \\<le> -q\" and \"p \\<noteq> q\"", "lemma start_point_iff2:\n  assumes \"path x\"\n    shows \"is_point (start_points x) \\<longleftrightarrow> has_start_points x\"", "lemma end_point_iff2:\n  assumes \"path x\"\n    shows \"is_point (end_points x) \\<longleftrightarrow> has_end_points x\"", "lemma edge_is_path:\n  assumes \"is_point p\"\n      and \"is_point q\"\n    shows \"path (p;q\\<^sup>T)\"", "lemma edge_start:\n  assumes \"is_point p\"\n      and \"is_point q\"\n      and \"p \\<noteq> q\"\n    shows \"start_points (p;q\\<^sup>T) = p\"", "lemma edge_end:\n  assumes \"is_point p\"\n      and \"is_point q\"\n      and \"p \\<noteq> q\"\n    shows \"end_points (p;q\\<^sup>T) = q\"", "lemma loop_no_start:\n  assumes \"is_point p\"\n    shows \"start_points (p;p\\<^sup>T) = 0\"", "lemma loop_no_end:\n  assumes \"is_point p\"\n    shows \"end_points (p;p\\<^sup>T) = 0\"", "lemma start_point_no_predecessor:\n  \"x;start_points(x) = 0\"", "lemma end_point_no_successor:\n  \"x\\<^sup>T;end_points(x) = 0\"", "lemma start_to_end:\n  assumes \"path x\"\n    shows \"start_points(x);end_points(x)\\<^sup>T \\<le> x\\<^sup>\\<star>\"", "lemma path_acyclic:\n  assumes \"has_start_points_path x\"\n    shows \"is_acyclic x\"", "lemma backward_terminating_iff1:\n  assumes \"path x\"\n    shows \"backward_terminating x \\<longleftrightarrow> has_start_points x \\<or> x = 0\"", "lemma backward_terminating_iff2_aux:\n  assumes \"path x\"\n    shows \"x;1 \\<cdot> 1;x\\<^sup>T \\<cdot> -(1;x) \\<le> x\\<^sup>T\\<^sup>\\<star>\"", "lemma backward_terminating_iff2:\n  assumes \"path x\"\n    shows \"backward_terminating x \\<longleftrightarrow> x \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\"", "lemma backward_terminating_iff3_aux:\n  assumes \"path x\"\n    shows \"x\\<^sup>T;1 \\<cdot> 1;x\\<^sup>T \\<cdot> -(1;x) \\<le> x\\<^sup>T\\<^sup>\\<star>\"", "lemma backward_terminating_iff3:\n  assumes \"path x\"\n    shows \"backward_terminating x \\<longleftrightarrow> x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\"", "lemma backward_terminating_iff4:\n  assumes \"path x\"\n    shows \"backward_terminating x \\<longleftrightarrow> x \\<le> -(1;x);x\\<^sup>\\<star>\"", "lemma forward_terminating_iff1:\n  assumes \"path x\"\n    shows \"forward_terminating x \\<longleftrightarrow> has_end_points x \\<or> x = 0\"", "lemma forward_terminating_iff2:\n  assumes \"path x\"\n    shows \"forward_terminating x \\<longleftrightarrow> x\\<^sup>T \\<le> x\\<^sup>\\<star>;-(x;1)\"", "lemma forward_terminating_iff3:\n  assumes \"path x\"\n    shows \"forward_terminating x \\<longleftrightarrow> x \\<le> x\\<^sup>\\<star>;-(x;1)\"", "lemma forward_terminating_iff4:\n  assumes \"path x\"\n    shows \"forward_terminating x \\<longleftrightarrow> x \\<le> -(1;x\\<^sup>T);x\\<^sup>T\\<^sup>\\<star>\"", "lemma terminating_iff1:\n  assumes \"path x\"\n    shows \"terminating x \\<longleftrightarrow> has_start_end_points x \\<or> x = 0\"", "lemma terminating_iff2:\n  assumes \"path x\"\n    shows \"terminating x \\<longleftrightarrow> x \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1) \\<cdot> -(1;x\\<^sup>T);x\\<^sup>T\\<^sup>\\<star>\"", "lemma terminating_iff3:\n  assumes \"path x\"\n    shows \"terminating x \\<longleftrightarrow> x \\<le> x\\<^sup>\\<star>;-(x;1) \\<cdot> -(1;x);x\\<^sup>\\<star>\"", "lemma backward_terminating_path_irreflexive:\n  assumes \"backward_terminating_path x\"\n    shows \"x \\<le> -1'\"", "lemma forward_terminating_path_end_points_1:\n  assumes \"forward_terminating_path x\"\n    shows \"x \\<le> x\\<^sup>+;end_points x\"", "lemma forward_terminating_path_end_points_2:\n  assumes \"forward_terminating_path x\"\n    shows \"x\\<^sup>T \\<le> x\\<^sup>\\<star>;end_points x\"", "lemma forward_terminating_path_end_points_3:\n  assumes \"forward_terminating_path x\"\n  shows \"start_points x \\<le> x\\<^sup>+;end_points x\"", "lemma backward_terminating_path_start_points_1:\n  assumes \"backward_terminating_path x\"\n    shows \"x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>+;start_points x\"", "lemma backward_terminating_path_start_points_2:\n  assumes \"backward_terminating_path x\"\n    shows \"x \\<le> x\\<^sup>T\\<^sup>\\<star>;start_points x\"", "lemma backward_terminating_path_start_points_3:\n  assumes \"backward_terminating_path x\"\n    shows \"end_points x \\<le> x\\<^sup>T\\<^sup>+;start_points x\"", "lemma path_aux1a:\n assumes \"forward_terminating_path x\"\n   shows \"x \\<noteq> 0 \\<longleftrightarrow> end_points x \\<noteq> 0\"", "lemma path_aux1b:\n  assumes \"backward_terminating_path y\"\n    shows \"y \\<noteq> 0 \\<longleftrightarrow> start_points y \\<noteq> 0\"", "lemma path_aux1:\n  assumes \"forward_terminating_path x\"\n      and \"backward_terminating_path y\"\n    shows \"x \\<noteq> 0 \\<or> y \\<noteq> 0 \\<longleftrightarrow> end_points x \\<noteq> 0 \\<or> start_points y \\<noteq> 0\"", "lemma backward_finite_iff_msc:\n  \"backward_finite x \\<longleftrightarrow> many_strongly_connected x \\<or> backward_terminating x\"", "lemma forward_finite_iff_msc:\n  \"forward_finite x \\<longleftrightarrow> many_strongly_connected x \\<or> forward_terminating x\"", "lemma finite_iff_msc:\n  \"finite x \\<longleftrightarrow> many_strongly_connected x \\<or> terminating x\"", "lemma path_concatenation:\n  assumes \"forward_terminating_path x\"\n      and \"backward_terminating_path y\"\n      and \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> (x\\<^sup>T;1 + y;1) \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"path (x+y)\"", "lemma path_concatenation_with_edge:\n   assumes \"x\\<noteq>0\"\n      and \"forward_terminating_path x\"\n      and \"is_point q\"\n      and \"q \\<le> -(1;x)\"\n    shows \"path (x+(end_points x);q\\<^sup>T)\"", "lemma path_concatenation_cycle_free:\n  assumes \"forward_terminating_path x\"\n      and \"backward_terminating_path y\"\n      and \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"path (x+y)\"", "lemma path_concatenation_start_points_approx:\n  assumes \"end_points x = start_points y\"\n    shows \"start_points (x+y) \\<le> start_points x\"", "lemma path_concatenation_end_points_approx:\n  assumes \"end_points x = start_points y\"\n     shows \"end_points (x+y) \\<le> end_points y\"", "lemma path_concatenation_start_points:\n  assumes \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"start_points (x+y) = start_points x\"", "lemma path_concatenation_end_points:\n  assumes \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"end_points (x+y) = end_points y\"", "lemma path_concatenation_cycle_free_complete:\n  assumes \"forward_terminating_path x\"\n      and \"backward_terminating_path y\"\n      and \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"path (x+y) \\<and> start_points (x+y) = start_points x \\<and> end_points (x+y) = end_points y\"", "lemma reachable_points_iff:\n  assumes \"point p\"\n    shows \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) = (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x\"", "lemma path_from_given_point:\n  assumes \"path x\"\n      and \"point p\"\n    shows \"path(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\"\n      and \"start_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> p\"\n      and \"end_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> end_points(x)\"", "lemma path_from_given_point':\n  assumes \"has_start_points_path x\"\n      and \"point p\"\n      and \"p \\<le> x;1\" (* p has a successor hence path not empty *)\n    shows \"path(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\"\n      and \"start_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) = p\"\n      and \"end_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) = end_points(x)\"", "lemma selfloop_is_cycle:\n  assumes \"is_point x\"\n  shows \"cycle (x;x\\<^sup>T)\"", "lemma start_point_no_cycle:\n  assumes \"has_start_points_path x\"\n    shows \"\\<not> cycle x\"", "lemma end_point_no_cycle:\n  assumes \"has_end_points_path x\"\n    shows \"\\<not> cycle x\"", "lemma cycle_no_points:\n  assumes \"cycle x\"\n    shows \"start_points x = 0\"\n      and \"end_points x = 0\"", "lemma path_path_equals_cycle_aux:\n  assumes \"has_start_end_points_path x\"\n      and \"has_start_end_points_path y\"\n      and \"start_points x = end_points y\"\n      and \"end_points x = start_points y\"\nshows \"x \\<le> (x+y)\\<^sup>T\\<^sup>\\<star>\"", "lemma path_path_equals_cycle:\n  assumes \"has_start_end_points_path x\"\n      and \"has_start_end_points_path y\"\n      and \"start_points x = end_points y\"\n      and \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> (x\\<^sup>T;1 + y;1) \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"cycle(x + y)\"", "lemma path_edge_equals_cycle:\n  assumes \"has_start_end_points_path x\"\n    shows \"cycle(x + end_points(x);(start_points x)\\<^sup>T)\"", "lemma cycle_remove_edge:\n  assumes \"cycle x\"\n      and \"point s\"\n      and \"point e\"\n      and \"e;s\\<^sup>T \\<le> x\"\n    shows \"path(x \\<cdot> -(e;s\\<^sup>T))\"\n      and \"start_points (x \\<cdot> -(e;s\\<^sup>T)) \\<le> s\"\n      and \"end_points (x \\<cdot> -(e;s\\<^sup>T)) \\<le> e\"", "lemma cycle_remove_edge':\n  assumes \"cycle x\"\n      and \"point s\"\n      and \"point e\"\n      and \"s\\<noteq>e\"\n      and \"e;s\\<^sup>T \\<le> x\"\n    shows \"path(x \\<cdot> -(e;s\\<^sup>T))\"\n      and \"s = start_points (x \\<cdot> -(e;s\\<^sup>T))\"\n      and \"e = end_points (x \\<cdot> -(e;s\\<^sup>T))\""], "translations": [["", "lemma path_concat_aux_0:\n  assumes \"is_vector v\"\n      and \"v \\<noteq> 0\"\n      and \"w;v\\<^sup>T \\<le> x\"\n      and \"v;z \\<le> y\"\n    shows \"w;1;z \\<le> x;y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "from tarski assms(1,2)"], ["proof (chain)\npicking this:\n  (?x \\<noteq> 0) = (1 ; ?x ; 1 = 1)\n  is_vector v\n  v \\<noteq> 0", "have \"1 = 1;v\\<^sup>T;v;1\""], ["proof (prove)\nusing this:\n  (?x \\<noteq> 0) = (1 ; ?x ; 1 = 1)\n  is_vector v\n  v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 = 1 ; v\\<^sup>T ; v ; 1", "by (metis conv_contrav conv_one eq_refl inf_absorb1 inf_top_left is_vector_def ra_2)"], ["proof (state)\nthis:\n  1 = 1 ; v\\<^sup>T ; v ; 1\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "hence \"w;1;z = w;1;v\\<^sup>T;v;1;z\""], ["proof (prove)\nusing this:\n  1 = 1 ; v\\<^sup>T ; v ; 1\n\ngoal (1 subgoal):\n 1. w ; 1 ; z = w ; 1 ; v\\<^sup>T ; v ; 1 ; z", "by (simp add: mult_isor mult_isol mult_assoc)"], ["proof (state)\nthis:\n  w ; 1 ; z = w ; 1 ; v\\<^sup>T ; v ; 1 ; z\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "also"], ["proof (state)\nthis:\n  w ; 1 ; z = w ; 1 ; v\\<^sup>T ; v ; 1 ; z\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "from assms(1)"], ["proof (chain)\npicking this:\n  is_vector v", "have \"... = w;v\\<^sup>T;v;z\""], ["proof (prove)\nusing this:\n  is_vector v\n\ngoal (1 subgoal):\n 1. w ; 1 ; v\\<^sup>T ; v ; 1 ; z = w ; v\\<^sup>T ; v ; z", "by (metis is_vector_def comp_assoc conv_contrav conv_one)"], ["proof (state)\nthis:\n  w ; 1 ; v\\<^sup>T ; v ; 1 ; z = w ; v\\<^sup>T ; v ; z\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "also"], ["proof (state)\nthis:\n  w ; 1 ; v\\<^sup>T ; v ; 1 ; z = w ; v\\<^sup>T ; v ; z\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "from assms(3)"], ["proof (chain)\npicking this:\n  w ; v\\<^sup>T \\<le> x", "have \"... \\<le> x;v;z\""], ["proof (prove)\nusing this:\n  w ; v\\<^sup>T \\<le> x\n\ngoal (1 subgoal):\n 1. w ; v\\<^sup>T ; v ; z \\<le> x ; v ; z", "by (simp add: mult_isor)"], ["proof (state)\nthis:\n  w ; v\\<^sup>T ; v ; z \\<le> x ; v ; z\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "also"], ["proof (state)\nthis:\n  w ; v\\<^sup>T ; v ; z \\<le> x ; v ; z\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "from assms(4)"], ["proof (chain)\npicking this:\n  v ; z \\<le> y", "have \"... \\<le> x;y\""], ["proof (prove)\nusing this:\n  v ; z \\<le> y\n\ngoal (1 subgoal):\n 1. x ; v ; z \\<le> x ; y", "by (simp add: mult_isol mult_assoc)"], ["proof (state)\nthis:\n  x ; v ; z \\<le> x ; y\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "finally"], ["proof (chain)\npicking this:\n  w ; 1 ; z \\<le> x ; y", "show ?thesis"], ["proof (prove)\nusing this:\n  w ; 1 ; z \\<le> x ; y\n\ngoal (1 subgoal):\n 1. w ; 1 ; z \\<le> x ; y", "."], ["proof (state)\nthis:\n  w ; 1 ; z \\<le> x ; y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* context relation_algebra_tarski *)"], ["", "subsection \\<open>Consequences without the Tarski rule\\<close>"], ["", "context relation_algebra_rtc\nbegin"], ["", "text \\<open>Definitions for path classifications\\<close>"], ["", "abbreviation connected\n  where \"connected x \\<equiv> x;1;x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["", "abbreviation many_strongly_connected\n  where \"many_strongly_connected x \\<equiv> x\\<^sup>\\<star> = x\\<^sup>T\\<^sup>\\<star>\""], ["", "abbreviation one_strongly_connected\n  where \"one_strongly_connected x \\<equiv> x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>\\<star>\""], ["", "definition path\n  where \"path x \\<equiv> connected x \\<and> is_p_fun x \\<and> is_inj x\""], ["", "abbreviation cycle\n  where \"cycle x \\<equiv> path x \\<and> many_strongly_connected x\""], ["", "abbreviation start_points\n  where \"start_points x \\<equiv> x;1 \\<cdot> -(x\\<^sup>T;1)\""], ["", "abbreviation end_points\n  where \"end_points x \\<equiv> x\\<^sup>T;1 \\<cdot> -(x;1)\""], ["", "abbreviation no_start_points\n  where \"no_start_points x \\<equiv> x;1 \\<le> x\\<^sup>T;1\""], ["", "abbreviation no_end_points\n  where \"no_end_points x \\<equiv> x\\<^sup>T;1 \\<le> x;1\""], ["", "abbreviation no_start_end_points\n  where \"no_start_end_points x \\<equiv> x;1 = x\\<^sup>T;1\""], ["", "abbreviation has_start_points\n  where \"has_start_points x \\<equiv> 1 = -(1;x);x;1\""], ["", "abbreviation has_end_points\n  where \"has_end_points x \\<equiv> 1 = 1;x;-(x;1)\""], ["", "abbreviation has_start_end_points\n  where \"has_start_end_points x \\<equiv> 1 = -(1;x);x;1 \\<cdot> 1;x;-(x;1)\""], ["", "abbreviation backward_terminating\n  where \"backward_terminating x \\<equiv> x \\<le> -(1;x);x;1\""], ["", "abbreviation forward_terminating\n  where \"forward_terminating x \\<equiv> x \\<le> 1;x;-(x;1)\""], ["", "abbreviation terminating\n  where \"terminating x \\<equiv> x \\<le> -(1;x);x;1 \\<cdot> 1;x;-(x;1)\""], ["", "abbreviation backward_finite\n  where \"backward_finite x \\<equiv> x \\<le> x\\<^sup>T\\<^sup>\\<star> + -(1;x);x;1\""], ["", "abbreviation forward_finite\n  where \"forward_finite x \\<equiv> x \\<le> x\\<^sup>T\\<^sup>\\<star> + 1;x;-(x;1)\""], ["", "abbreviation finite\n  where \"finite x \\<equiv> x \\<le> x\\<^sup>T\\<^sup>\\<star> + (-(1;x);x;1 \\<cdot> 1;x;-(x;1))\""], ["", "abbreviation no_start_points_path\n  where \"no_start_points_path x \\<equiv> path x \\<and> no_start_points x\""], ["", "abbreviation no_end_points_path\n  where \"no_end_points_path x \\<equiv> path x \\<and> no_end_points x\""], ["", "abbreviation no_start_end_points_path\n  where \"no_start_end_points_path x \\<equiv> path x \\<and> no_start_end_points x\""], ["", "abbreviation has_start_points_path\n  where \"has_start_points_path x \\<equiv> path x \\<and> has_start_points x\""], ["", "abbreviation has_end_points_path\n  where \"has_end_points_path x \\<equiv> path x \\<and> has_end_points x\""], ["", "abbreviation has_start_end_points_path\n  where \"has_start_end_points_path x \\<equiv> path x \\<and> has_start_end_points x\""], ["", "abbreviation backward_terminating_path\n  where \"backward_terminating_path x \\<equiv> path x \\<and> backward_terminating x\""], ["", "abbreviation forward_terminating_path\n  where \"forward_terminating_path x \\<equiv> path x \\<and> forward_terminating x\""], ["", "abbreviation terminating_path\n  where \"terminating_path x \\<equiv> path x \\<and> terminating x\""], ["", "abbreviation backward_finite_path\n  where \"backward_finite_path x \\<equiv> path x \\<and> backward_finite x\""], ["", "abbreviation forward_finite_path\n  where \"forward_finite_path x \\<equiv> path x \\<and> forward_finite x\""], ["", "abbreviation finite_path\n  where \"finite_path x \\<equiv> path x \\<and> finite x\""], ["", "text \\<open>General properties\\<close>"], ["", "lemma reachability_from_z_in_y:\n  assumes \"x \\<le> y\\<^sup>\\<star>;z\"\n      and \"x \\<cdot> z = 0\"\n    shows \"x \\<le> y\\<^sup>+;z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y\\<^sup>+ ; z", "by (metis assms conway.dagger_unfoldl_distr galois_1 galois_aux inf.orderE)"], ["", "lemma reachable_imp:\n  assumes \"point p\"\n      and \"point q\"\n      and \"p\\<^sup>\\<star>;q \\<le> p\\<^sup>T\\<^sup>\\<star>;p\"\n    shows \"p \\<le> p\\<^sup>\\<star>;q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> p\\<^sup>\\<star> ; q", "by (metis assms conway.dagger_unfoldr_distr le_supE point_swap star_conv)"], ["", "text \\<open>Basic equivalences\\<close>"], ["", "lemma no_start_end_points_iff:\n  \"no_start_end_points x \\<longleftrightarrow> no_start_points x \\<and> no_end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no_start_end_points x = (no_start_points x \\<and> no_end_points x)", "by fastforce"], ["", "lemma has_start_end_points_iff:\n  \"has_start_end_points x \\<longleftrightarrow> has_start_points x \\<and> has_end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_end_points x = (has_start_points x \\<and> has_end_points x)", "by (metis inf_eq_top_iff)"], ["", "lemma terminating_iff:\n  \"terminating x \\<longleftrightarrow> backward_terminating x \\<and> forward_terminating x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating x = (backward_terminating x \\<and> forward_terminating x)", "by simp"], ["", "lemma finite_iff:\n  \"finite x \\<longleftrightarrow> backward_finite x \\<and> forward_finite x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relation_algebra_rtc_class.finite x =\n    (backward_finite x \\<and> forward_finite x)", "by (simp add: sup_inf_distrib1 inf.boundedI)"], ["", "lemma no_start_end_points_path_iff:\n  \"no_start_end_points_path x \\<longleftrightarrow> no_start_points_path x \\<and> no_end_points_path x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no_start_end_points_path x =\n    (no_start_points_path x \\<and> no_end_points_path x)", "by fastforce"], ["", "lemma has_start_end_points_path_iff:\n  \"has_start_end_points_path x \\<longleftrightarrow> has_start_points_path x \\<and> has_end_points_path x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_end_points_path x =\n    (has_start_points_path x \\<and> has_end_points_path x)", "using has_start_end_points_iff"], ["proof (prove)\nusing this:\n  has_start_end_points ?x = (has_start_points ?x \\<and> has_end_points ?x)\n\ngoal (1 subgoal):\n 1. has_start_end_points_path x =\n    (has_start_points_path x \\<and> has_end_points_path x)", "by blast"], ["", "lemma terminating_path_iff:\n  \"terminating_path x \\<longleftrightarrow> backward_terminating_path x \\<and> forward_terminating_path x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating_path x =\n    (backward_terminating_path x \\<and> forward_terminating_path x)", "by fastforce"], ["", "lemma finite_path_iff:\n  \"finite_path x \\<longleftrightarrow> backward_finite_path x \\<and> forward_finite_path x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_path x = (backward_finite_path x \\<and> forward_finite_path x)", "using finite_iff"], ["proof (prove)\nusing this:\n  relation_algebra_rtc_class.finite ?x =\n  (backward_finite ?x \\<and> forward_finite ?x)\n\ngoal (1 subgoal):\n 1. finite_path x = (backward_finite_path x \\<and> forward_finite_path x)", "by fastforce"], ["", "text \\<open>Closure under converse\\<close>"], ["", "lemma connected_conv:\n  \"connected x \\<longleftrightarrow> connected (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x = connected (x\\<^sup>T)", "by (metis comp_assoc conv_add conv_contrav conv_iso conv_one star_conv)"], ["", "lemma conv_many_strongly_connected:\n  \"many_strongly_connected x \\<longleftrightarrow> many_strongly_connected (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = many_strongly_connected (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_one_strongly_connected:\n  \"one_strongly_connected x \\<longleftrightarrow> one_strongly_connected (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = one_strongly_connected (x\\<^sup>T)", "by (metis comp_assoc conv_contrav conv_iso conv_one star_conv)"], ["", "lemma conv_path:\n  \"path x \\<longleftrightarrow> path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path x = path (x\\<^sup>T)", "using connected_conv inj_p_fun path_def"], ["proof (prove)\nusing this:\n  connected ?x = connected (?x\\<^sup>T)\n  is_inj ?x = is_p_fun (?x\\<^sup>T)\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n\ngoal (1 subgoal):\n 1. path x = path (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_cycle:\n  \"cycle x \\<longleftrightarrow> cycle (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle x = cycle (x\\<^sup>T)", "using conv_path"], ["proof (prove)\nusing this:\n  path ?x = path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. cycle x = cycle (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_no_start_points:\n  \"no_start_points x \\<longleftrightarrow> no_end_points (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no_start_points x = no_end_points (x\\<^sup>T)", "by simp"], ["", "lemma conv_no_start_end_points:\n  \"no_start_end_points x \\<longleftrightarrow> no_start_end_points (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no_start_end_points x = no_start_end_points (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_has_start_points:\n  \"has_start_points x \\<longleftrightarrow> has_end_points (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_points x = has_end_points (x\\<^sup>T)", "by (metis comp_assoc conv_compl conv_contrav conv_invol conv_one)"], ["", "lemma conv_has_start_end_points:\n  \"has_start_end_points x \\<longleftrightarrow> has_start_end_points (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_end_points x = has_start_end_points (x\\<^sup>T)", "by (metis comp_assoc conv_compl conv_contrav conv_invol conv_one inf_eq_top_iff)"], ["", "lemma conv_backward_terminating:\n  \"backward_terminating x \\<longleftrightarrow> forward_terminating (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_terminating x = forward_terminating (x\\<^sup>T)", "by (metis comp_assoc conv_compl conv_contrav conv_iso conv_one)"], ["", "lemma conv_terminating:\n  \"terminating x \\<longleftrightarrow> terminating (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating x = terminating (x\\<^sup>T)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. terminating x \\<Longrightarrow> terminating (x\\<^sup>T)\n 2. terminating (x\\<^sup>T) \\<Longrightarrow> terminating x", "apply (metis conv_compl conv_contrav conv_one conv_times inf.commute le_iff_inf mult_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating (x\\<^sup>T) \\<Longrightarrow> terminating x", "by (metis conv_compl conv_contrav conv_invol conv_one conv_times inf.commute le_iff_inf mult_assoc)"], ["", "lemma conv_backward_finite:\n  \"backward_finite x \\<longleftrightarrow> forward_finite (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_finite x = forward_finite (x\\<^sup>T)", "by (metis comp_assoc conv_add conv_compl conv_contrav conv_iso conv_one star_conv)"], ["", "lemma conv_finite:\n  \"finite x \\<longleftrightarrow> finite (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relation_algebra_rtc_class.finite x =\n    relation_algebra_rtc_class.finite (x\\<^sup>T)", "by (metis finite_iff conv_backward_finite conv_invol)"], ["", "lemma conv_no_start_points_path:\n  \"no_start_points_path x \\<longleftrightarrow> no_end_points_path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no_start_points_path x = no_end_points_path (x\\<^sup>T)", "using conv_path"], ["proof (prove)\nusing this:\n  path ?x = path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. no_start_points_path x = no_end_points_path (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_no_start_end_points_path:\n  \"no_start_end_points_path x \\<longleftrightarrow> no_start_end_points_path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no_start_end_points_path x = no_start_end_points_path (x\\<^sup>T)", "using conv_path"], ["proof (prove)\nusing this:\n  path ?x = path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. no_start_end_points_path x = no_start_end_points_path (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_has_start_points_path:\n  \"has_start_points_path x \\<longleftrightarrow> has_end_points_path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_points_path x = has_end_points_path (x\\<^sup>T)", "using conv_has_start_points conv_path"], ["proof (prove)\nusing this:\n  has_start_points ?x = has_end_points (?x\\<^sup>T)\n  path ?x = path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. has_start_points_path x = has_end_points_path (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_has_start_end_points_path:\n  \"has_start_end_points_path x \\<longleftrightarrow> has_start_end_points_path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_end_points_path x = has_start_end_points_path (x\\<^sup>T)", "using conv_has_start_end_points conv_path"], ["proof (prove)\nusing this:\n  has_start_end_points ?x = has_start_end_points (?x\\<^sup>T)\n  path ?x = path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. has_start_end_points_path x = has_start_end_points_path (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_backward_terminating_path:\n  \"backward_terminating_path x \\<longleftrightarrow> forward_terminating_path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_terminating_path x = forward_terminating_path (x\\<^sup>T)", "using conv_backward_terminating conv_path"], ["proof (prove)\nusing this:\n  backward_terminating ?x = forward_terminating (?x\\<^sup>T)\n  path ?x = path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. backward_terminating_path x = forward_terminating_path (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_terminating_path:\n  \"terminating_path x \\<longleftrightarrow> terminating_path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating_path x = terminating_path (x\\<^sup>T)", "using conv_path conv_terminating"], ["proof (prove)\nusing this:\n  path ?x = path (?x\\<^sup>T)\n  terminating ?x = terminating (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. terminating_path x = terminating_path (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_backward_finite_path:\n  \"backward_finite_path x \\<longleftrightarrow> forward_finite_path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_finite_path x = forward_finite_path (x\\<^sup>T)", "using conv_backward_finite conv_path"], ["proof (prove)\nusing this:\n  backward_finite ?x = forward_finite (?x\\<^sup>T)\n  path ?x = path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. backward_finite_path x = forward_finite_path (x\\<^sup>T)", "by fastforce"], ["", "lemma conv_finite_path:\n  \"finite_path x \\<longleftrightarrow> finite_path (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_path x = finite_path (x\\<^sup>T)", "using conv_finite conv_path"], ["proof (prove)\nusing this:\n  relation_algebra_rtc_class.finite ?x =\n  relation_algebra_rtc_class.finite (?x\\<^sup>T)\n  path ?x = path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. finite_path x = finite_path (x\\<^sup>T)", "by blast"], ["", "text \\<open>Equivalences for \\<open>connected\\<close>\\<close>"], ["", "lemma connected_iff2:\n  assumes \"is_inj x\"\n      and \"is_p_fun x\"\n    shows \"connected x \\<longleftrightarrow> x;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x =\n    (x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "assume 1: \"connected x\""], ["proof (state)\nthis:\n  connected x\n\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "have \"x;1;x\\<^sup>T \\<le> x;1;x;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T", "by (metis conv_invol modular_var_3 vector_meet_comp_x')"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T\n\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "also"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T\n\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "have \"... \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>);x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "using 1 mult_isor star_star_plus"], ["proof (prove)\nusing this:\n  connected x\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n  ?x\\<^sup>\\<star> + ?y\\<^sup>\\<star> = ?x\\<^sup>+ + ?y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "by fastforce"], ["proof (state)\nthis:\n  x ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "also"], ["proof (state)\nthis:\n  x ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "have \"... \\<le> x\\<^sup>\\<star>;x;x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>", "using join_isol star_slide_var"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n  ?x\\<^sup>\\<star> ; ?x = ?x\\<^sup>+\n\ngoal (1 subgoal):\n 1. (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "from assms(1)"], ["proof (chain)\npicking this:\n  is_inj x", "have \"... \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  is_inj x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "by (metis is_inj_def comp_assoc join_iso mult_1_right mult_isol)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>\n  \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n 2. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "finally"], ["proof (chain)\npicking this:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "show \"x;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "assume 2: \"x;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "have \"x;1;x \\<le> x;1;x\\<^sup>T;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; 1 ; x\\<^sup>T ; x", "by (simp add: modular_var_3 vector_meet_comp_x)"], ["proof (state)\nthis:\n  x ; 1 ; x \\<le> x ; 1 ; x\\<^sup>T ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "also"], ["proof (state)\nthis:\n  x ; 1 ; x \\<le> x ; 1 ; x\\<^sup>T ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "have \"... \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+);x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T ; x \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+) ; x", "using 2"], ["proof (prove)\nusing this:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T ; x \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+) ; x", "by (metis mult_isor star_star_plus sup_commute)"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T ; x \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+) ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "also"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T ; x \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+) ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "have \"... \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+) ; x\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T ; x", "using join_iso star_slide_var"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x + ?z \\<le> ?y + ?z\n  ?x\\<^sup>\\<star> ; ?x = ?x\\<^sup>+\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+) ; x\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T ; x", "by simp"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+) ; x\n  \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+) ; x\n  \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "from assms(2)"], ["proof (chain)\npicking this:\n  is_p_fun x", "have \"... \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  is_p_fun x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T ; x\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "by (metis comp_assoc is_p_fun_def join_isol mult_1_right mult_isol)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T ; x\n  \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<Longrightarrow>\n    connected x", "finally"], ["proof (chain)\npicking this:\n  connected x", "show \"connected x\""], ["proof (prove)\nusing this:\n  connected x\n\ngoal (1 subgoal):\n 1. connected x", "."], ["proof (state)\nthis:\n  connected x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma connected_iff3:\n  assumes \"is_inj x\"\n      and \"is_p_fun x\"\n    shows \"connected x \\<longleftrightarrow> x\\<^sup>T;1;x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x =\n    (x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "by (metis assms connected_conv connected_iff2 inj_p_fun p_fun_inj conv_invol add_commute)"], ["", "lemma connected_iff4:\n  \"connected x \\<longleftrightarrow> x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x =\n    (x\\<^sup>T ; 1 ; x\\<^sup>T\n     \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "by (metis connected_conv conv_invol add_commute)"], ["", "lemma connected_iff5:\n  \"connected x \\<longleftrightarrow> x\\<^sup>+;1;x\\<^sup>+ \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x =\n    (x\\<^sup>+ ; 1 ; x\\<^sup>+\n     \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "using comp_assoc plus_top top_plus"], ["proof (prove)\nusing this:\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  ?x\\<^sup>+ ; 1 = ?x ; 1\n  1 ; ?x\\<^sup>+ = 1 ; ?x\n\ngoal (1 subgoal):\n 1. connected x =\n    (x\\<^sup>+ ; 1 ; x\\<^sup>+\n     \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "by fastforce"], ["", "lemma connected_iff6:\n  assumes \"is_inj x\"\n      and \"is_p_fun x\"\n    shows \"connected x \\<longleftrightarrow> x\\<^sup>+;1;(x\\<^sup>+)\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x =\n    (x\\<^sup>+ ; 1 ; (x\\<^sup>+)\\<^sup>T\n     \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "using assms connected_iff2 comp_assoc plus_conv plus_top top_plus"], ["proof (prove)\nusing this:\n  is_inj x\n  is_p_fun x\n  \\<lbrakk>is_inj ?x; is_p_fun ?x\\<rbrakk>\n  \\<Longrightarrow> connected ?x =\n                    (?x ; 1 ; ?x\\<^sup>T\n                     \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>)\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  (?x\\<^sup>+)\\<^sup>T = ?x\\<^sup>T\\<^sup>+\n  ?x\\<^sup>+ ; 1 = ?x ; 1\n  1 ; ?x\\<^sup>+ = 1 ; ?x\n\ngoal (1 subgoal):\n 1. connected x =\n    (x\\<^sup>+ ; 1 ; (x\\<^sup>+)\\<^sup>T\n     \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "by fastforce"], ["", "lemma connected_iff7:\n  assumes \"is_inj x\"\n      and \"is_p_fun x\"\n    shows \"connected x \\<longleftrightarrow> (x\\<^sup>+)\\<^sup>T;1;x\\<^sup>+ \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x =\n    ((x\\<^sup>+)\\<^sup>T ; 1 ; x\\<^sup>+\n     \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "by (metis assms connected_iff3 conv_contrav conv_invol conv_one top_plus vector_meet_comp_x)"], ["", "lemma connected_iff8:\n  \"connected x \\<longleftrightarrow> (x\\<^sup>+)\\<^sup>T;1;(x\\<^sup>+)\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x =\n    ((x\\<^sup>+)\\<^sup>T ; 1 ; (x\\<^sup>+)\\<^sup>T\n     \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "by (metis connected_iff4 comp_assoc conv_contrav conv_invol conv_one plus_conv star_conv top_plus)"], ["", "text \\<open>Equivalences and implications for \\<open>many_strongly_connected\\<close>\\<close>"], ["", "lemma many_strongly_connected_iff_1:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x\\<^sup>T \\<le> x\\<^sup>\\<star>)", "apply (rule iffI,simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> \\<Longrightarrow>\n    many_strongly_connected x", "by (metis conv_invol conv_iso eq_iff star_conv star_invol star_iso)"], ["", "lemma many_strongly_connected_iff_2:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x\\<^sup>T \\<le> x\\<^sup>+)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "assume as: \"many_strongly_connected x\""], ["proof (state)\nthis:\n  many_strongly_connected x\n\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "hence \"x\\<^sup>T \\<le> x\\<^sup>\\<star> \\<cdot> (-(1') + x)\""], ["proof (prove)\nusing this:\n  many_strongly_connected x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> \\<cdot> (- 1' + x)", "by (metis many_strongly_connected_iff_1 loop_backward_forward inf_greatest)"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>\\<star> \\<cdot> (- 1' + x)\n\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>\\<star> \\<cdot> (- 1' + x)\n\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "have \"... \\<le> (x\\<^sup>\\<star> \\<cdot> -(1')) + (x\\<^sup>\\<star> \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> (- 1' + x)\n    \\<le> x\\<^sup>\\<star> \\<cdot> - 1' + x\\<^sup>\\<star> \\<cdot> x", "by (simp add: inf_sup_distrib1)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> (- 1' + x)\n  \\<le> x\\<^sup>\\<star> \\<cdot> - 1' + x\\<^sup>\\<star> \\<cdot> x\n\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> (- 1' + x)\n  \\<le> x\\<^sup>\\<star> \\<cdot> - 1' + x\\<^sup>\\<star> \\<cdot> x\n\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "have \"... \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> - 1' + x\\<^sup>\\<star> \\<cdot> x \\<le> x\\<^sup>+", "by (metis as eq_iff mult_1_right mult_isol star_ref sup.absorb1 conv_invol eq_refl galois_1\n              inf.absorb_iff1 inf.commute star_unfoldl_eq sup_mono many_strongly_connected_iff_1)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> - 1' + x\\<^sup>\\<star> \\<cdot> x \\<le> x\\<^sup>+\n\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow> x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T \\<le> x\\<^sup>+", "show \"x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>+", "."], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "show \"x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "using order_trans star_1l many_strongly_connected_iff_1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n  ?x\\<^sup>+ \\<le> ?x\\<^sup>\\<star>\n  many_strongly_connected ?x = (?x\\<^sup>T \\<le> ?x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow> many_strongly_connected x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma many_strongly_connected_iff_3:\n  \"many_strongly_connected x \\<longleftrightarrow> x \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x \\<le> x\\<^sup>T\\<^sup>\\<star>)", "by (metis conv_invol many_strongly_connected_iff_1)"], ["", "lemma many_strongly_connected_iff_4:\n  \"many_strongly_connected x \\<longleftrightarrow> x \\<le> x\\<^sup>T\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x \\<le> x\\<^sup>T\\<^sup>+)", "by (metis conv_invol many_strongly_connected_iff_2)"], ["", "lemma many_strongly_connected_iff_5:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>\\<star> ; x\\<^sup>T \\<le> x\\<^sup>+)", "by (metis comp_assoc conv_contrav conway.dagger_unfoldr_distr star_conv star_denest_var_2\n          star_invol star_trans_eq star_unfoldl_eq sup.boundedE many_strongly_connected_iff_2)"], ["", "lemma many_strongly_connected_iff_6:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x\\<^sup>\\<star> \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+)", "by (metis dual_order.trans star_1l star_conv star_inductl_star star_invol star_slide_var\n          many_strongly_connected_iff_1 many_strongly_connected_iff_5)"], ["", "lemma many_strongly_connected_iff_7:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T\\<^sup>+ = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x\\<^sup>T\\<^sup>+ = x\\<^sup>+)", "by (metis antisym conv_invol star_slide_var star_unfoldl_eq many_strongly_connected_iff_5)"], ["", "lemma many_strongly_connected_iff_5_eq:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x\\<^sup>T = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x\\<^sup>\\<star> ; x\\<^sup>T = x\\<^sup>+)", "by (metis order.refl star_slide_var many_strongly_connected_iff_5 many_strongly_connected_iff_7)"], ["", "lemma many_strongly_connected_iff_6_eq:\n  \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x\\<^sup>\\<star> = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x\\<^sup>T ; x\\<^sup>\\<star> = x\\<^sup>+)", "using many_strongly_connected_iff_6 many_strongly_connected_iff_7"], ["proof (prove)\nusing this:\n  many_strongly_connected ?x =\n  (?x\\<^sup>T ; ?x\\<^sup>\\<star> \\<le> ?x\\<^sup>+)\n  many_strongly_connected ?x = (?x\\<^sup>T\\<^sup>+ = ?x\\<^sup>+)\n\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x\\<^sup>T ; x\\<^sup>\\<star> = x\\<^sup>+)", "by force"], ["", "lemma many_strongly_connected_implies_no_start_end_points:\n  assumes \"many_strongly_connected x\"\n    shows \"no_start_end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no_start_end_points x", "by (metis assms conway.dagger_unfoldl_distr mult_assoc sup_top_left conv_invol\n        many_strongly_connected_iff_7)"], ["", "lemma many_strongly_connected_implies_8:\n  assumes \"many_strongly_connected x\"\n    shows \"x;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<le> x\\<^sup>+", "by (simp add: assms mult_isol)"], ["", "lemma many_strongly_connected_implies_9:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>T;x \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x \\<le> x\\<^sup>+", "by (metis assms eq_refl phl_cons1 star_ext star_slide_var)"], ["", "lemma many_strongly_connected_implies_10:\n  assumes \"many_strongly_connected x\"\n    shows \"x;x\\<^sup>T;x\\<^sup>\\<star> \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+", "by (simp add: assms comp_assoc mult_isol)"], ["", "lemma many_strongly_connected_implies_10_eq:\n  assumes \"many_strongly_connected x\"\n    shows \"x;x\\<^sup>T;x\\<^sup>\\<star> = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T ; x\\<^sup>\\<star> = x\\<^sup>+", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x ; x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+\n 2. x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x\\<^sup>\\<star>", "show \"x;x\\<^sup>T;x\\<^sup>\\<star> \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+", "by (simp add: assms comp_assoc mult_isol)"], ["proof (state)\nthis:\n  x ; x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x\\<^sup>\\<star>", "have \"x\\<^sup>+ \\<le> x;x\\<^sup>T;x;x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x ; x\\<^sup>\\<star>", "using mult_isor x_leq_triple_x"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n  ?x \\<le> ?x ; ?x\\<^sup>T ; ?x\n\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x ; x\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x ; x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x\\<^sup>\\<star>", "thus \"x\\<^sup>+ \\<le> x;x\\<^sup>T;x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x ; x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x\\<^sup>\\<star>", "by (simp add: comp_assoc mult_isol order_trans)"], ["proof (state)\nthis:\n  x\\<^sup>+ \\<le> x ; x\\<^sup>T ; x\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma many_strongly_connected_implies_11:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>\\<star>;x\\<^sup>T;x \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x\\<^sup>T ; x \\<le> x\\<^sup>+", "by (metis assms conv_contrav conv_iso mult_isol star_1l star_slide_var)"], ["", "lemma many_strongly_connected_implies_11_eq:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>\\<star>;x\\<^sup>T;x = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x\\<^sup>T ; x = x\\<^sup>+", "by (metis assms comp_assoc conv_invol many_strongly_connected_iff_5_eq\n          many_strongly_connected_implies_10_eq)"], ["", "lemma many_strongly_connected_implies_12:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>\\<star>;x;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T \\<le> x\\<^sup>+", "by (metis assms comp_assoc mult_isol star_1l star_slide_var)"], ["", "lemma many_strongly_connected_implies_12_eq:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>\\<star>;x;x\\<^sup>T = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T = x\\<^sup>+", "by (metis assms comp_assoc star_slide_var many_strongly_connected_implies_10_eq)"], ["", "lemma many_strongly_connected_implies_13:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>T;x;x\\<^sup>\\<star> \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>\\<star> \\<le> x\\<^sup>+", "by (metis assms star_slide_var many_strongly_connected_implies_11 mult.assoc)"], ["", "lemma many_strongly_connected_implies_13_eq:\n  assumes \"many_strongly_connected x\"\n    shows \"x\\<^sup>T;x;x\\<^sup>\\<star> = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>\\<star> = x\\<^sup>+", "by (metis assms conv_invol many_strongly_connected_iff_7 many_strongly_connected_implies_10_eq)"], ["", "lemma many_strongly_connected_iff_8:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x ; x\\<^sup>T \\<le> x\\<^sup>+)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow>\n    x ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    many_strongly_connected x", "apply (simp add: mult_isol)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    many_strongly_connected x", "apply (simp add: many_strongly_connected_iff_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>\\<star>", "by (metis comp_assoc conv_invol dual_order.trans mult_isol x_leq_triple_x assms comp_assoc\n          dual_order.trans is_p_fun_def order.refl prod_star_closure star_ref)"], ["", "lemma many_strongly_connected_iff_9:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x = (x\\<^sup>T ; x \\<le> x\\<^sup>+)", "by (metis assms conv_contrav conv_iso inj_p_fun star_conv star_slide_var\n          many_strongly_connected_iff_1 many_strongly_connected_iff_8)"], ["", "lemma many_strongly_connected_iff_10:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x;x\\<^sup>T;x\\<^sup>\\<star> \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x ; x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. many_strongly_connected x \\<Longrightarrow>\n    x ; x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+\n 2. x ; x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+ \\<Longrightarrow>\n    many_strongly_connected x", "apply (simp add: comp_assoc mult_isol)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T ; x\\<^sup>\\<star> \\<le> x\\<^sup>+ \\<Longrightarrow>\n    many_strongly_connected x", "by (metis assms mult_isol mult_oner order_trans star_ref many_strongly_connected_iff_8)"], ["", "lemma many_strongly_connected_iff_10_eq:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x;x\\<^sup>T;x\\<^sup>\\<star> = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x ; x\\<^sup>T ; x\\<^sup>\\<star> = x\\<^sup>+)", "using assms many_strongly_connected_iff_10 many_strongly_connected_implies_10_eq"], ["proof (prove)\nusing this:\n  is_p_fun x\n  is_p_fun ?x \\<Longrightarrow>\n  many_strongly_connected ?x =\n  (?x ; ?x\\<^sup>T ; ?x\\<^sup>\\<star> \\<le> ?x\\<^sup>+)\n  many_strongly_connected ?x \\<Longrightarrow>\n  ?x ; ?x\\<^sup>T ; ?x\\<^sup>\\<star> = ?x\\<^sup>+\n\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x ; x\\<^sup>T ; x\\<^sup>\\<star> = x\\<^sup>+)", "by fastforce"], ["", "lemma many_strongly_connected_iff_11:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x\\<^sup>T;x \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>\\<star> ; x\\<^sup>T ; x \\<le> x\\<^sup>+)", "by (metis assms comp_assoc conv_contrav conv_iso inj_p_fun plus_conv star_conv\n          many_strongly_connected_iff_10 many_strongly_connected_iff_2)"], ["", "lemma many_strongly_connected_iff_11_eq:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x\\<^sup>T;x = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>\\<star> ; x\\<^sup>T ; x = x\\<^sup>+)", "using assms many_strongly_connected_iff_11 many_strongly_connected_implies_11_eq"], ["proof (prove)\nusing this:\n  is_inj x\n  is_inj ?x \\<Longrightarrow>\n  many_strongly_connected ?x =\n  (?x\\<^sup>\\<star> ; ?x\\<^sup>T ; ?x \\<le> ?x\\<^sup>+)\n  many_strongly_connected ?x \\<Longrightarrow>\n  ?x\\<^sup>\\<star> ; ?x\\<^sup>T ; ?x = ?x\\<^sup>+\n\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>\\<star> ; x\\<^sup>T ; x = x\\<^sup>+)", "by fastforce"], ["", "lemma many_strongly_connected_iff_12:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>\\<star> ; x ; x\\<^sup>T \\<le> x\\<^sup>+)", "by (metis assms dual_order.trans mult_double_iso mult_oner star_ref star_slide_var\n          many_strongly_connected_iff_8 many_strongly_connected_implies_12)"], ["", "lemma many_strongly_connected_iff_12_eq:\n  assumes \"is_p_fun x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>\\<star>;x;x\\<^sup>T = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>\\<star> ; x ; x\\<^sup>T = x\\<^sup>+)", "using assms many_strongly_connected_iff_12 many_strongly_connected_implies_12_eq"], ["proof (prove)\nusing this:\n  is_p_fun x\n  is_p_fun ?x \\<Longrightarrow>\n  many_strongly_connected ?x =\n  (?x\\<^sup>\\<star> ; ?x ; ?x\\<^sup>T \\<le> ?x\\<^sup>+)\n  many_strongly_connected ?x \\<Longrightarrow>\n  ?x\\<^sup>\\<star> ; ?x ; ?x\\<^sup>T = ?x\\<^sup>+\n\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>\\<star> ; x ; x\\<^sup>T = x\\<^sup>+)", "by fastforce"], ["", "lemma many_strongly_connected_iff_13:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x;x\\<^sup>\\<star> \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>T ; x ; x\\<^sup>\\<star> \\<le> x\\<^sup>+)", "by (metis assms comp_assoc conv_contrav conv_iso inj_p_fun star_conv star_slide_var\n          many_strongly_connected_iff_1 many_strongly_connected_iff_12)"], ["", "lemma many_strongly_connected_iff_13_eq:\n  assumes \"is_inj x\"\n    shows \"many_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;x;x\\<^sup>\\<star> = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>T ; x ; x\\<^sup>\\<star> = x\\<^sup>+)", "using assms many_strongly_connected_iff_13 many_strongly_connected_implies_13_eq"], ["proof (prove)\nusing this:\n  is_inj x\n  is_inj ?x \\<Longrightarrow>\n  many_strongly_connected ?x =\n  (?x\\<^sup>T ; ?x ; ?x\\<^sup>\\<star> \\<le> ?x\\<^sup>+)\n  many_strongly_connected ?x \\<Longrightarrow>\n  ?x\\<^sup>T ; ?x ; ?x\\<^sup>\\<star> = ?x\\<^sup>+\n\ngoal (1 subgoal):\n 1. many_strongly_connected x =\n    (x\\<^sup>T ; x ; x\\<^sup>\\<star> = x\\<^sup>+)", "by fastforce"], ["", "text \\<open>Equivalences and implications for \\<open>one_strongly_connected\\<close>\\<close>"], ["", "lemma one_strongly_connected_iff:\n  \"one_strongly_connected x \\<longleftrightarrow> connected x \\<and> many_strongly_connected x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x =\n    (connected x \\<and> many_strongly_connected x)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    connected x \\<and> many_strongly_connected x\n 2. connected x \\<and> many_strongly_connected x \\<Longrightarrow>\n    one_strongly_connected x", "apply (metis top_greatest x_leq_triple_x mult_double_iso top_greatest dual_order.trans\n              many_strongly_connected_iff_1 comp_assoc conv_contrav conv_invol conv_iso le_supI2\n              star_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x \\<and> many_strongly_connected x \\<Longrightarrow>\n    one_strongly_connected x", "by (metis comp_assoc conv_contrav conv_iso conv_one conway.dagger_denest star_conv star_invol\n          star_sum_unfold star_trans_eq)"], ["", "lemma one_strongly_connected_iff_1:\n  \"one_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "assume 1: \"one_strongly_connected x\""], ["proof (state)\nthis:\n  one_strongly_connected x\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "have \"x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>T;x;x\\<^sup>T;1;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T", "by (metis conv_invol mult_isor x_leq_triple_x)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "from 1"], ["proof (chain)\npicking this:\n  one_strongly_connected x", "have \"... \\<le> x\\<^sup>T;x;x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  one_strongly_connected x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T ; x ; x\\<^sup>\\<star>", "by (metis distrib_left mult_assoc sup.absorb_iff1)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n  \\<le> x\\<^sup>T ; x ; x\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n  \\<le> x\\<^sup>T ; x ; x\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "from 1"], ["proof (chain)\npicking this:\n  one_strongly_connected x", "have \"... \\<le> x\\<^sup>+\""], ["proof (prove)\nusing this:\n  one_strongly_connected x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>\\<star> \\<le> x\\<^sup>+", "using many_strongly_connected_implies_13 one_strongly_connected_iff"], ["proof (prove)\nusing this:\n  one_strongly_connected x\n  many_strongly_connected ?x \\<Longrightarrow>\n  ?x\\<^sup>T ; ?x ; ?x\\<^sup>\\<star> \\<le> ?x\\<^sup>+\n  one_strongly_connected ?x =\n  (connected ?x \\<and> many_strongly_connected ?x)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>\\<star> \\<le> x\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> \\<le> x\\<^sup>+\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+", "show \"x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+", "."], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "assume \"x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "thus \"one_strongly_connected x\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. one_strongly_connected x", "using dual_order.trans star_1l"], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  ?x\\<^sup>+ \\<le> ?x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. one_strongly_connected x", "by blast"], ["proof (state)\nthis:\n  one_strongly_connected x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_strongly_connected_iff_1_eq:\n  \"one_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;1;x\\<^sup>T = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x\\<^sup>T ; 1 ; x\\<^sup>T = x\\<^sup>+)", "apply (rule iffI, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x\\<^sup>T = x\\<^sup>+", "by (metis comp_assoc conv_contrav conv_invol mult_double_iso plus_conv star_slide_var top_greatest\n          top_plus many_strongly_connected_implies_10_eq one_strongly_connected_iff eq_iff\n          one_strongly_connected_iff_1)"], ["", "lemma one_strongly_connected_iff_2:\n  \"one_strongly_connected x \\<longleftrightarrow> x;1;x \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x ; 1 ; x \\<le> x\\<^sup>T\\<^sup>\\<star>)", "by (metis conv_invol eq_refl less_eq_def one_strongly_connected_iff)"], ["", "lemma one_strongly_connected_iff_3:\n  \"one_strongly_connected x \\<longleftrightarrow> x;1;x \\<le> x\\<^sup>T\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x ; 1 ; x \\<le> x\\<^sup>T\\<^sup>+)", "by (metis comp_assoc conv_contrav conv_invol conv_iso conv_one star_conv\n          one_strongly_connected_iff_1)"], ["", "lemma one_strongly_connected_iff_3_eq:\n  \"one_strongly_connected x \\<longleftrightarrow> x;1;x = x\\<^sup>T\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x ; 1 ; x = x\\<^sup>T\\<^sup>+)", "by (metis conv_invol one_strongly_connected_iff_1_eq one_strongly_connected_iff_2)"], ["", "lemma one_strongly_connected_iff_4_eq:\n  \"one_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;1;x = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x\\<^sup>T ; 1 ; x = x\\<^sup>+)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow> x\\<^sup>T ; 1 ; x = x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x = x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "apply (metis comp_assoc top_plus many_strongly_connected_iff_7 one_strongly_connected_iff\n              one_strongly_connected_iff_1_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x = x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "by (metis comp_assoc conv_contrav conv_invol conv_one plus_conv top_plus\n          one_strongly_connected_iff_1_eq)"], ["", "lemma one_strongly_connected_iff_5_eq:\n  \"one_strongly_connected x \\<longleftrightarrow> x;1;x\\<^sup>T = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x ; 1 ; x\\<^sup>T = x\\<^sup>+)", "using comp_assoc conv_contrav conv_invol conv_one plus_conv top_plus many_strongly_connected_iff_7\n      one_strongly_connected_iff one_strongly_connected_iff_3_eq"], ["proof (prove)\nusing this:\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  (?x ; ?y)\\<^sup>T = ?y\\<^sup>T ; ?x\\<^sup>T\n  (?x\\<^sup>T)\\<^sup>T = ?x\n  1\\<^sup>T = 1\n  (?x\\<^sup>+)\\<^sup>T = ?x\\<^sup>T\\<^sup>+\n  1 ; ?x\\<^sup>+ = 1 ; ?x\n  many_strongly_connected ?x = (?x\\<^sup>T\\<^sup>+ = ?x\\<^sup>+)\n  one_strongly_connected ?x =\n  (connected ?x \\<and> many_strongly_connected ?x)\n  one_strongly_connected ?x = (?x ; 1 ; ?x = ?x\\<^sup>T\\<^sup>+)\n\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x ; 1 ; x\\<^sup>T = x\\<^sup>+)", "by metis"], ["", "lemma one_strongly_connected_iff_6_aux:\n  \"x;x\\<^sup>+ \\<le> x;1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>+ \\<le> x ; 1 ; x", "by (metis comp_assoc maddux_21 mult_isol top_plus)"], ["", "lemma one_strongly_connected_implies_6_eq:\n  assumes \"one_strongly_connected x\"\n    shows \"x;1;x = x;x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x = x ; x\\<^sup>+", "by (metis assms comp_assoc many_strongly_connected_iff_7 many_strongly_connected_implies_10_eq\n          one_strongly_connected_iff one_strongly_connected_iff_3_eq)"], ["", "lemma one_strongly_connected_iff_7_aux:\n  \"x\\<^sup>+ \\<le> x;1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<le> x ; 1 ; x", "by (metis le_infI maddux_20 maddux_21 plus_top top_plus vector_meet_comp_x')"], ["", "lemma one_strongly_connected_implies_7_eq:\n  assumes \"one_strongly_connected x\"\n    shows \"x;1;x = x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x = x\\<^sup>+", "using assms many_strongly_connected_iff_7 one_strongly_connected_iff one_strongly_connected_iff_3_eq"], ["proof (prove)\nusing this:\n  one_strongly_connected x\n  many_strongly_connected ?x = (?x\\<^sup>T\\<^sup>+ = ?x\\<^sup>+)\n  one_strongly_connected ?x =\n  (connected ?x \\<and> many_strongly_connected ?x)\n  one_strongly_connected ?x = (?x ; 1 ; ?x = ?x\\<^sup>T\\<^sup>+)\n\ngoal (1 subgoal):\n 1. x ; 1 ; x = x\\<^sup>+", "by force"], ["", "lemma one_strongly_connected_implies_8:\n  assumes \"one_strongly_connected x\"\n    shows \"x;1;x \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x\\<^sup>\\<star>", "using assms one_strongly_connected_iff"], ["proof (prove)\nusing this:\n  one_strongly_connected x\n  one_strongly_connected ?x =\n  (connected ?x \\<and> many_strongly_connected ?x)\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x\\<^sup>\\<star>", "by fastforce"], ["", "lemma one_strongly_connected_iff_4:\n  assumes \"is_inj x\"\n    shows \"one_strongly_connected x \\<longleftrightarrow> x\\<^sup>T;1;x \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "assume \"one_strongly_connected x\""], ["proof (state)\nthis:\n  one_strongly_connected x\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+\n 2. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "thus \"x\\<^sup>T;1;x \\<le> x\\<^sup>+\""], ["proof (prove)\nusing this:\n  one_strongly_connected x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+", "by (simp add: one_strongly_connected_iff_4_eq)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "assume 1: \"x\\<^sup>T;1;x \\<le> x\\<^sup>+\""], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "hence \"x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>\\<star>;x;x\\<^sup>T\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T", "by (metis mult_isor star_slide_var comp_assoc conv_invol modular_var_3 vector_meet_comp_x\n              order.trans)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "from assms"], ["proof (chain)\npicking this:\n  is_inj x", "have \"... \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  is_inj x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T \\<le> x\\<^sup>\\<star>", "using comp_assoc is_inj_def mult_isol mult_oner"], ["proof (prove)\nusing this:\n  is_inj x\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  is_inj ?x \\<equiv> ?x ; ?x\\<^sup>T \\<le> 1'\n  ?x \\<le> ?y \\<Longrightarrow> ?z ; ?x \\<le> ?z ; ?y\n  ?x ; 1' = ?x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T \\<le> x\\<^sup>\\<star>", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "finally"], ["proof (chain)\npicking this:\n  one_strongly_connected x", "show \"one_strongly_connected x\""], ["proof (prove)\nusing this:\n  one_strongly_connected x\n\ngoal (1 subgoal):\n 1. one_strongly_connected x", "using dual_order.trans star_1l"], ["proof (prove)\nusing this:\n  one_strongly_connected x\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  ?x\\<^sup>+ \\<le> ?x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. one_strongly_connected x", "by fastforce"], ["proof (state)\nthis:\n  one_strongly_connected x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_strongly_connected_iff_5:\n  assumes \"is_p_fun x\"\n    shows \"one_strongly_connected x \\<longleftrightarrow> x;1;x\\<^sup>T \\<le> x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "using one_strongly_connected_iff_5_eq"], ["proof (prove)\nusing this:\n  one_strongly_connected ?x = (?x ; 1 ; ?x\\<^sup>T = ?x\\<^sup>+)\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow>\n    x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+\n 2. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>+ \\<Longrightarrow>\n    one_strongly_connected x", "by (metis assms comp_assoc mult_double_iso order.trans star_slide_var top_greatest top_plus\n          many_strongly_connected_iff_12 many_strongly_connected_iff_7 one_strongly_connected_iff_3)"], ["", "lemma one_strongly_connected_iff_6:\n  assumes \"is_p_fun x\"\n      and \"is_inj x\"\n    shows \"one_strongly_connected x \\<longleftrightarrow> x;1;x \\<le> x;x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x ; 1 ; x \\<le> x ; x\\<^sup>+)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow> x ; 1 ; x \\<le> x ; x\\<^sup>+\n 2. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "assume \"one_strongly_connected x\""], ["proof (state)\nthis:\n  one_strongly_connected x\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow> x ; 1 ; x \\<le> x ; x\\<^sup>+\n 2. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "thus \"x;1;x \\<le> x;x\\<^sup>+\""], ["proof (prove)\nusing this:\n  one_strongly_connected x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+", "by (simp add: one_strongly_connected_implies_6_eq)"], ["proof (state)\nthis:\n  x ; 1 ; x \\<le> x ; x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "assume 1: \"x;1;x \\<le> x;x\\<^sup>+\""], ["proof (state)\nthis:\n  x ; 1 ; x \\<le> x ; x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "have \"x\\<^sup>T;1;x \\<le> x\\<^sup>T;x;x\\<^sup>T;1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x", "by (metis conv_invol mult_isor x_leq_triple_x)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "have \"... \\<le> x\\<^sup>T;x;1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; 1 ; x", "by (metis comp_assoc mult_double_iso top_greatest)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; 1 ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; 1 ; x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "from 1"], ["proof (chain)\npicking this:\n  x ; 1 ; x \\<le> x ; x\\<^sup>+", "have \"... \\<le> x\\<^sup>T;x;x\\<^sup>+\""], ["proof (prove)\nusing this:\n  x ; 1 ; x \\<le> x ; x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>+", "by (simp add: comp_assoc mult_isol)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "from assms(1)"], ["proof (chain)\npicking this:\n  is_p_fun x", "have \"... \\<le> x\\<^sup>+\""], ["proof (prove)\nusing this:\n  is_p_fun x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>+ \\<le> x\\<^sup>+", "by (metis comp_assoc is_p_fun_def mult_isor mult_onel)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>+ \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+", "show \"one_strongly_connected x\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. one_strongly_connected x", "using assms(2) one_strongly_connected_iff_4"], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>+\n  is_inj x\n  is_inj ?x \\<Longrightarrow>\n  one_strongly_connected ?x = (?x\\<^sup>T ; 1 ; ?x \\<le> ?x\\<^sup>+)\n\ngoal (1 subgoal):\n 1. one_strongly_connected x", "by blast"], ["proof (state)\nthis:\n  one_strongly_connected x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_strongly_connected_iff_6_eq:\n  assumes \"is_p_fun x\"\n      and \"is_inj x\"\n    shows \"one_strongly_connected x \\<longleftrightarrow> x;1;x = x;x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_strongly_connected x = (x ; 1 ; x = x ; x\\<^sup>+)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow> x ; 1 ; x = x ; x\\<^sup>+\n 2. x ; 1 ; x = x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "using one_strongly_connected_implies_6_eq"], ["proof (prove)\nusing this:\n  one_strongly_connected ?x \\<Longrightarrow> ?x ; 1 ; ?x = ?x ; ?x\\<^sup>+\n\ngoal (2 subgoals):\n 1. one_strongly_connected x \\<Longrightarrow> x ; 1 ; x = x ; x\\<^sup>+\n 2. x ; 1 ; x = x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x = x ; x\\<^sup>+ \\<Longrightarrow> one_strongly_connected x", "by (simp add: assms one_strongly_connected_iff_6)"], ["", "text \\<open>Start points and end points\\<close>"], ["", "lemma start_end_implies_terminating:\n  assumes \"has_start_points x\"\n      and \"has_end_points x\"\n    shows \"terminating x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating x", "using assms"], ["proof (prove)\nusing this:\n  has_start_points x\n  has_end_points x\n\ngoal (1 subgoal):\n 1. terminating x", "by simp"], ["", "lemma start_points_end_points_conv:\n  \"start_points x = end_points (x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x = end_points (x\\<^sup>T)", "by simp"], ["", "lemma start_point_at_most_one:\n  assumes \"path x\"\n    shows \"is_inj (start_points x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have isvec: \"is_vector (x;1 \\<cdot> -(x\\<^sup>T;1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (start_points x)", "by (simp add: comp_assoc is_vector_def one_compl vector_1)"], ["proof (state)\nthis:\n  is_vector (start_points x)\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have \"x;1 \\<cdot> 1;x\\<^sup>T \\<le> x;1;x;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T", "by (metis comp_assoc conv_contrav conv_one inf.cobounded2 mult_1_right mult_isol one_conv ra_2)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have \"... \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>);x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "using \\<open>path x\\<close>"], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "by (metis path_def mult_isor)"], ["proof (state)\nthis:\n  x ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "also"], ["proof (state)\nthis:\n  x ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have \"... = x\\<^sup>T + x\\<^sup>+;x\\<^sup>T + x\\<^sup>T\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T =\n    x\\<^sup>T + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+", "by (simp add: star_slide_var)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T =\n  x\\<^sup>T + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T =\n  x\\<^sup>T + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have \"... \\<le> x\\<^sup>T\\<^sup>+ + x\\<^sup>+;x\\<^sup>T + x\\<^sup>T\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n    \\<le> x\\<^sup>T\\<^sup>+ + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+", "by (metis add_iso mult_1_right star_unfoldl_eq subdistl)"], ["proof (state)\nthis:\n  x\\<^sup>T + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n  \\<le> x\\<^sup>T\\<^sup>+ + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "also"], ["proof (state)\nthis:\n  x\\<^sup>T + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n  \\<le> x\\<^sup>T\\<^sup>+ + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have \"... \\<le> x\\<^sup>\\<star>;x;x\\<^sup>T + x\\<^sup>T\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n    \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>+", "by (simp add: star_slide_var add_comm)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>+ + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n  \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "also"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>+ + x\\<^sup>+ ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n  \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have \"... \\<le> x\\<^sup>\\<star>;1' + x\\<^sup>T\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n    \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>+", "using \\<open>path x\\<close>"], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n    \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>+", "by (metis path_def is_inj_def comp_assoc distrib_left join_iso less_eq_def)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n  \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>+\n  \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have \"... = 1' + x\\<^sup>\\<star>;x + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>+ =\n    1' + x\\<^sup>\\<star> ; x + x\\<^sup>T\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>+ =\n  1' + x\\<^sup>\\<star> ; x + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>+ =\n  1' + x\\<^sup>\\<star> ; x + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "have \"... \\<le> 1' + 1;x + x\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1' + x\\<^sup>\\<star> ; x + x\\<^sup>T\\<^sup>+\n    \\<le> 1' + 1 ; x + x\\<^sup>T ; 1", "by (metis join_isol mult_isol mult_isor sup.mono top_greatest)"], ["proof (state)\nthis:\n  1' + x\\<^sup>\\<star> ; x + x\\<^sup>T\\<^sup>+\n  \\<le> 1' + 1 ; x + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "finally"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> 1' + 1 ; x + x\\<^sup>T ; 1", "have aux: \"x;1 \\<cdot> 1;x\\<^sup>T \\<le> 1' + 1;x + x\\<^sup>T;1\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> 1' + 1 ; x + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> 1' + 1 ; x + x\\<^sup>T ; 1", "."], ["proof (state)\nthis:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> 1' + 1 ; x + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "from aux"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> 1' + 1 ; x + x\\<^sup>T ; 1", "have \"x;1 \\<cdot> 1;x\\<^sup>T \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(1;x) \\<le> 1'\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> 1' + 1 ; x + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (1 ; x)\n    \\<le> 1'", "by (simp add: galois_1 sup_commute)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (1 ; x)\n  \\<le> 1'\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "hence \"(x;1 \\<cdot> -(x\\<^sup>T;1)) \\<cdot> (x;1 \\<cdot> -(x\\<^sup>T;1))\\<^sup>T \\<le> 1'\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (1 ; x)\n  \\<le> 1'\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> start_points x\\<^sup>T \\<le> 1'", "by (simp add: conv_compl inf.assoc inf.left_commute)"], ["proof (state)\nthis:\n  start_points x \\<cdot> start_points x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "with isvec"], ["proof (chain)\npicking this:\n  is_vector (start_points x)\n  start_points x \\<cdot> start_points x\\<^sup>T \\<le> 1'", "have \"(x;1 \\<cdot> -(x\\<^sup>T;1)) ; (x;1 \\<cdot> -(x\\<^sup>T;1))\\<^sup>T \\<le> 1'\""], ["proof (prove)\nusing this:\n  is_vector (start_points x)\n  start_points x \\<cdot> start_points x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. start_points x ; start_points x\\<^sup>T \\<le> 1'", "by (metis vector_meet_comp')"], ["proof (state)\nthis:\n  start_points x ; start_points x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "thus \"is_inj (start_points x)\""], ["proof (prove)\nusing this:\n  start_points x ; start_points x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. is_inj (start_points x)", "by (simp add: conv_compl is_inj_def)"], ["proof (state)\nthis:\n  is_inj (start_points x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma start_point_zero_point:\n  assumes \"path x\"\n    shows \"start_points x = 0 \\<or> is_point (start_points x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x = 0 \\<or> is_point (start_points x)", "using assms start_point_at_most_one comp_assoc is_point_def is_vector_def vector_compl vector_mult"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow> is_inj (start_points ?x)\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  is_point ?x \\<equiv> is_vector ?x \\<and> is_inj ?x \\<and> ?x \\<noteq> 0\n  is_vector ?x \\<equiv> ?x = ?x ; 1\n  is_vector ?x \\<Longrightarrow> is_vector (- ?x)\n  \\<lbrakk>is_vector ?x; is_vector ?y\\<rbrakk>\n  \\<Longrightarrow> is_vector (?x \\<cdot> ?y)\n\ngoal (1 subgoal):\n 1. start_points x = 0 \\<or> is_point (start_points x)", "by simp"], ["", "lemma start_point_iff1:\n  assumes \"path x\"\n    shows \"is_point (start_points x) \\<longleftrightarrow> \\<not>(no_start_points x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_point (start_points x) = (\\<not> no_start_points x)", "using assms start_point_zero_point galois_aux2 is_point_def"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  start_points ?x = 0 \\<or> is_point (start_points ?x)\n  (?x \\<cdot> - ?y = 0) = (?x \\<le> ?y)\n  is_point ?x \\<equiv> is_vector ?x \\<and> is_inj ?x \\<and> ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = (\\<not> no_start_points x)", "by blast"], ["", "lemma end_point_at_most_one:\n  assumes \"path x\"\n    shows \"is_inj (end_points x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_inj (end_points x)", "by (metis assms conv_path compl_bot_eq conv_invol inj_def_var1 is_point_def top_greatest\n          start_point_zero_point)"], ["", "lemma end_point_zero_point:\n  assumes \"path x\"\n    shows \"end_points x = 0 \\<or> is_point (end_points x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points x = 0 \\<or> is_point (end_points x)", "using assms conv_path start_point_zero_point"], ["proof (prove)\nusing this:\n  path x\n  path ?x = path (?x\\<^sup>T)\n  path ?x \\<Longrightarrow>\n  start_points ?x = 0 \\<or> is_point (start_points ?x)\n\ngoal (1 subgoal):\n 1. end_points x = 0 \\<or> is_point (end_points x)", "by fastforce"], ["", "lemma end_point_iff1:\n  assumes \"path x\"\n    shows \"is_point (end_points x) \\<longleftrightarrow> \\<not>(no_end_points x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_point (end_points x) = (\\<not> no_end_points x)", "using assms end_point_zero_point galois_aux2 is_point_def"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow> end_points ?x = 0 \\<or> is_point (end_points ?x)\n  (?x \\<cdot> - ?y = 0) = (?x \\<le> ?y)\n  is_point ?x \\<equiv> is_vector ?x \\<and> is_inj ?x \\<and> ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. is_point (end_points x) = (\\<not> no_end_points x)", "by blast"], ["", "lemma predecessor_point':\n  assumes \"path x\"\n      and \"point s\"\n      and \"point e\"\n      and \"e;s\\<^sup>T \\<le> x\"\n    shows \"x;s = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; s = e", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x ; s \\<le> e\n 2. e \\<le> x ; s", "show 1: \"e \\<le> x ; s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<le> x ; s", "using assms(2,4) point_def ss423bij"], ["proof (prove)\nusing this:\n  point s\n  e ; s\\<^sup>T \\<le> x\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  bijective ?x \\<Longrightarrow>\n  (?y ; ?x\\<^sup>T \\<le> ?z) = (?y \\<le> ?z ; ?x)\n\ngoal (1 subgoal):\n 1. e \\<le> x ; s", "by blast"], ["proof (state)\nthis:\n  e \\<le> x ; s\n\ngoal (1 subgoal):\n 1. x ; s \\<le> e", "show \"x ; s \\<le> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; s \\<le> e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; s \\<le> e", "have \"e\\<^sup>T ; (x ; s) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e\\<^sup>T ; (x ; s) = 1", "using 1"], ["proof (prove)\nusing this:\n  e \\<le> x ; s\n\ngoal (1 subgoal):\n 1. e\\<^sup>T ; (x ; s) = 1", "by (metis assms(3) eq_iff is_vector_def point_def ss423conv top_greatest)"], ["proof (state)\nthis:\n  e\\<^sup>T ; (x ; s) = 1\n\ngoal (1 subgoal):\n 1. x ; s \\<le> e", "thus ?thesis"], ["proof (prove)\nusing this:\n  e\\<^sup>T ; (x ; s) = 1\n\ngoal (1 subgoal):\n 1. x ; s \\<le> e", "by (metis assms(1-3) comp_assoc conv_contrav conv_invol eq_iff inj_compose is_vector_def\n                mult_isol path_def point_def ss423conv sur_def_var1 top_greatest)"], ["proof (state)\nthis:\n  x ; s \\<le> e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ; s \\<le> e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma predecessor_point:\n  assumes \"path x\"\n      and \"point s\"\n      and \"point e\"\n      and \"e;s\\<^sup>T \\<le> x\"\n    shows \"point(x;s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. point (x ; s)", "using predecessor_point' assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>path ?x; point ?s; point ?e; ?e ; ?s\\<^sup>T \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ; ?s = ?e\n  path x\n  point s\n  point e\n  e ; s\\<^sup>T \\<le> x\n\ngoal (1 subgoal):\n 1. point (x ; s)", "by blast"], ["", "lemma points_of_path_iff:\n  shows \"(x + x\\<^sup>T);1 = x\\<^sup>T;1 + start_points(x)\"\n    and \"(x + x\\<^sup>T);1 = x;1 + end_points(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + x\\<^sup>T) ; 1 = x\\<^sup>T ; 1 + start_points x &&&\n    (x + x\\<^sup>T) ; 1 = x ; 1 + end_points x", "using aux9 inf.commute sup.commute"], ["proof (prove)\nusing this:\n  ?x + - ?x \\<cdot> ?y = ?x + ?y\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n  ?a + ?b = ?b + ?a\n\ngoal (1 subgoal):\n 1. (x + x\\<^sup>T) ; 1 = x\\<^sup>T ; 1 + start_points x &&&\n    (x + x\\<^sup>T) ; 1 = x ; 1 + end_points x", "by auto"], ["", "text \\<open>Path concatenation preliminaries\\<close>"], ["", "lemma path_concat_aux_1:\n  assumes \"x;1 \\<cdot> y;1 \\<cdot> y\\<^sup>T;1 = 0\"\n      and \"end_points x = start_points y\"\n    shows \"x;1 \\<cdot> y;1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "have \"x;1 \\<cdot> y;1 = (x;1 \\<cdot> y;1 \\<cdot> y\\<^sup>T;1) + (x;1 \\<cdot> y;1 \\<cdot> -(y\\<^sup>T;1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 =\n    x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1)", "by simp"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 =\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 =\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "from assms(1)"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have \"... = x;1 \\<cdot> y;1 \\<cdot> -(y\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1) =\n    x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1)", "by (metis aux6_var de_morgan_3 inf.left_commute inf_compl_bot inf_sup_absorb)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1) =\n  x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1) =\n  x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "from assms(2)"], ["proof (chain)\npicking this:\n  end_points x = start_points y", "have \"... = x;1 \\<cdot> x\\<^sup>T;1 \\<cdot> -(x;1)\""], ["proof (prove)\nusing this:\n  end_points x = start_points y\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1) =\n    x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> - (x ; 1)", "by (simp add: inf.assoc)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1) =\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> - (y\\<^sup>T ; 1) =\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> - (x ; 1) = 0", "by (simp add: inf.commute inf.assoc)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> - (x ; 1) = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "finally"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> y ; 1 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 = 0", "."], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concat_aux_2:\n  assumes \"x;1 \\<cdot> x\\<^sup>T;1 \\<cdot> y\\<^sup>T;1 = 0\"\n      and \"end_points x = start_points y\"\n    shows \"x\\<^sup>T;1 \\<cdot> y\\<^sup>T;1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have \"y\\<^sup>T;1 \\<cdot> x\\<^sup>T;1 \\<cdot> (x\\<^sup>T)\\<^sup>T;1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>T ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> (x\\<^sup>T)\\<^sup>T ; 1 = 0", "using assms(1) inf.assoc inf.commute"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> (x\\<^sup>T)\\<^sup>T ; 1 = 0", "by force"], ["proof (state)\nthis:\n  y\\<^sup>T ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> (x\\<^sup>T)\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  y\\<^sup>T ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> (x\\<^sup>T)\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "by (metis assms(2) conv_invol inf.commute path_concat_aux_1)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concat_aux3_1:\n  assumes \"path x\"\n    shows \"x;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"x;1;x\\<^sup>T \\<le> x;1;x\\<^sup>T;x;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x ; 1 ; x\\<^sup>T ; x ; x\\<^sup>T", "by (metis comp_assoc conv_invol mult_isol x_leq_triple_x)"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<le> x ; 1 ; x\\<^sup>T ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<le> x ; 1 ; x\\<^sup>T ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x;1;x;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T ; x ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T", "by (metis mult_isol mult_isor mult_assoc top_greatest)"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T ; x ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T ; x ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>);x\\<^sup>T\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "using path_def comp_assoc mult_isor"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n\ngoal (1 subgoal):\n 1. x ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "by blast"], ["proof (state)\nthis:\n  x ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... = x\\<^sup>\\<star>;x;x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T =\n    x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (simp add: star_slide_var star_star_plus)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T =\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T =\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>\\<star>;1' + x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (metis assms path_def is_inj_def join_iso mult_isol mult_assoc)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "using join_isol"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concat_aux3_2:\n  assumes \"path x\"\n    shows \"x\\<^sup>T;1;x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"x\\<^sup>T;1;x \\<le> x\\<^sup>T;x;x\\<^sup>T;1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x", "by (metis comp_assoc conv_invol mult_isor x_leq_triple_x)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>T;x;1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; 1 ; x", "by (metis mult_isol mult_isor mult_assoc top_greatest)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; 1 ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>T ; x ; 1 ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> x\\<^sup>T;(x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; 1 ; x\n    \\<le> x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "by (simp add: comp_assoc mult_isol path_def)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; 1 ; x\n  \\<le> x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; 1 ; x\n  \\<le> x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... = x\\<^sup>T;x;x\\<^sup>\\<star> + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) =\n    x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+", "by (simp add: comp_assoc distrib_left star_star_plus)"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) =\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) =\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> 1';x\\<^sup>\\<star> + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n    \\<le> 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+", "by (metis assms path_def is_p_fun_def join_iso mult_isor mult_assoc)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n  \\<le> 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n  \\<le> 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "using join_isol"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n\ngoal (1 subgoal):\n 1. 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n  \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concat_aux3_3:\n  assumes \"path x\"\n    shows \"x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"x\\<^sup>T;1;x\\<^sup>T \\<le> x\\<^sup>T;x;x\\<^sup>T;1;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T", "by (metis comp_assoc conv_invol mult_isor x_leq_triple_x)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>T;x;1;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T ; x ; 1 ; x\\<^sup>T", "by (metis mult_isol mult_isor mult_assoc top_greatest)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n  \\<le> x\\<^sup>T ; x ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T ; 1 ; x\\<^sup>T\n  \\<le> x\\<^sup>T ; x ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> x\\<^sup>T;(x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "using path_concat_aux3_1"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  ?x ; 1 ; ?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)", "by (simp add: mult_assoc mult_isol)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; 1 ; x\\<^sup>T\n  \\<le> x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; 1 ; x\\<^sup>T\n  \\<le> x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... = x\\<^sup>T;x;x\\<^sup>\\<star> + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) =\n    x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+", "by (simp add: comp_assoc distrib_left star_star_plus)"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) =\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) =\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> 1';x\\<^sup>\\<star> + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n    \\<le> 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+", "by (metis assms path_def is_p_fun_def join_iso mult_isor mult_assoc)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n  \\<le> 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n  \\<le> 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "using join_isol"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n\ngoal (1 subgoal):\n 1. 1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  1' ; x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>+\n  \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concat_aux_3:\n  assumes \"path x\"\n      and \"y \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\"\n      and \"z \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\"\n    shows \"y;1;z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "from assms(2,3)"], ["proof (chain)\npicking this:\n  y \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\n  z \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+", "have \"y;1;z \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>+);1;(x\\<^sup>+ + x\\<^sup>T\\<^sup>+)\""], ["proof (prove)\nusing this:\n  y \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\n  z \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. y ; 1 ; z\n    \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) ; 1 ;\n          (x\\<^sup>+ + x\\<^sup>T\\<^sup>+)", "using mult_isol_var mult_isor"], ["proof (prove)\nusing this:\n  y \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\n  z \\<le> x\\<^sup>+ + x\\<^sup>T\\<^sup>+\n  \\<lbrakk>?u \\<le> ?x; ?v \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?u ; ?v \\<le> ?x ; ?y\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n\ngoal (1 subgoal):\n 1. y ; 1 ; z\n    \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) ; 1 ;\n          (x\\<^sup>+ + x\\<^sup>T\\<^sup>+)", "by blast"], ["proof (state)\nthis:\n  y ; 1 ; z\n  \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) ; 1 ;\n        (x\\<^sup>+ + x\\<^sup>T\\<^sup>+)\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  y ; 1 ; z\n  \\<le> (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) ; 1 ;\n        (x\\<^sup>+ + x\\<^sup>T\\<^sup>+)\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... = x\\<^sup>+;1;x\\<^sup>+ + x\\<^sup>+;1;x\\<^sup>T\\<^sup>+ + x\\<^sup>T\\<^sup>+;1;x\\<^sup>+ + x\\<^sup>T\\<^sup>+;1;x\\<^sup>T\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) ; 1 ; (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) =\n    x\\<^sup>+ ; 1 ; x\\<^sup>+ + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>+ +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+", "by (simp add: distrib_left sup_commute sup_left_commute)"], ["proof (state)\nthis:\n  (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) ; 1 ; (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) =\n  x\\<^sup>+ ; 1 ; x\\<^sup>+ + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>+ +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) ; 1 ; (x\\<^sup>+ + x\\<^sup>T\\<^sup>+) =\n  x\\<^sup>+ ; 1 ; x\\<^sup>+ + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>+ +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... = x;x\\<^sup>\\<star>;1;x\\<^sup>\\<star>;x + x;x\\<^sup>\\<star>;1;x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;1;x\\<^sup>\\<star>;x + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;1;x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; 1 ; x\\<^sup>+ + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>+ +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ =\n    x\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n    x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (simp add: comp_assoc star_slide_var)"], ["proof (state)\nthis:\n  x\\<^sup>+ ; 1 ; x\\<^sup>+ + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>+ +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ =\n  x\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>+ ; 1 ; x\\<^sup>+ + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>+ +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>+ =\n  x\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x;1;x + x;x\\<^sup>\\<star>;1;x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;1;x\\<^sup>\\<star>;x + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;1;x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n    x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x ; 1 ; x + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n          x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n          x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (metis comp_assoc mult_double_iso top_greatest join_iso)"], ["proof (state)\nthis:\n  x\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x ; 1 ; x + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x ; 1 ; x + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x;1;x + x;1;x\\<^sup>T + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;1;x\\<^sup>\\<star>;x + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;1;x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T +\n          x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n          x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (metis comp_assoc mult_double_iso top_greatest join_iso join_isol)"], ["proof (state)\nthis:\n  x ; 1 ; x + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x ; 1 ; x + x\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x;1;x + x;1;x\\<^sup>T + x\\<^sup>T;1;x + x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;1;x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x + x ; 1 ; x\\<^sup>T +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n          x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (metis comp_assoc mult_double_iso top_greatest join_iso join_isol)"], ["proof (state)\nthis:\n  x ; 1 ; x + x ; 1 ; x\\<^sup>T +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x ; 1 ; x + x ; 1 ; x\\<^sup>T +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>\\<star> ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n        x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x;1;x + x;1;x\\<^sup>T + x\\<^sup>T;1;x + x\\<^sup>T;1;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n    x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n          x\\<^sup>T ; 1 ; x\\<^sup>T", "by (metis comp_assoc mult_double_iso top_greatest join_isol)"], ["proof (state)\nthis:\n  x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n        x\\<^sup>T ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n  x\\<^sup>T\\<^sup>+ ; 1 ; x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n        x\\<^sup>T ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n    x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "using assms(1) path_def path_concat_aux3_1 path_concat_aux3_2 path_concat_aux3_3 join_iso join_isol"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  path ?x \\<Longrightarrow>\n  ?x ; 1 ; ?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  path ?x \\<Longrightarrow>\n  ?x\\<^sup>T ; 1 ; ?x \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  path ?x \\<Longrightarrow>\n  ?x\\<^sup>T ; 1 ; ?x\\<^sup>T\n  \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  ?x \\<le> ?y \\<Longrightarrow> ?x + ?z \\<le> ?y + ?z\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n\ngoal (1 subgoal):\n 1. x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n    x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  x ; 1 ; x + x ; 1 ; x\\<^sup>T + x\\<^sup>T ; 1 ; x +\n  x\\<^sup>T ; 1 ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  y ; 1 ; z \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concat_aux_4:\n  \"x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star> \\<le> x\\<^sup>\\<star> + x\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n    \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1", "by (metis star_star_plus add_comm join_isol mult_isol top_greatest)"], ["", "lemma path_concat_aux_5:\n  assumes \"path x\"\n      and \"y \\<le> start_points x\"\n      and \"z \\<le> x + x\\<^sup>T\"\n    shows \"y;1;z \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "from assms(1)"], ["proof (chain)\npicking this:\n  path x", "have \"x;1;x \\<le> x\\<^sup>\\<star> + x\\<^sup>T;1\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1", "using path_def path_concat_aux_4 dual_order.trans"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T ; 1\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1", "by blast"], ["proof (state)\nthis:\n  x ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "hence aux1: \"x;1;x \\<cdot> -(x\\<^sup>T;1) \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x ; 1 ; x \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) \\<le> x\\<^sup>\\<star>", "by (simp add: galois_1 sup_commute)"], ["proof (state)\nthis:\n  x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "from assms(1)"], ["proof (chain)\npicking this:\n  path x", "have \"x;1;x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T;1\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1", "using dual_order.trans path_concat_aux3_1 path_concat_aux_4"], ["proof (prove)\nusing this:\n  path x\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  path ?x \\<Longrightarrow>\n  ?x ; 1 ; ?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1", "by blast"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "hence aux2: \"x;1;x\\<^sup>T \\<cdot> -(x\\<^sup>T;1) \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>\\<star> + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\\<^sup>T \\<cdot> - (x\\<^sup>T ; 1) \\<le> x\\<^sup>\\<star>", "by (simp add: galois_1 sup_commute)"], ["proof (state)\nthis:\n  x ; 1 ; x\\<^sup>T \\<cdot> - (x\\<^sup>T ; 1) \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "from assms(2,3)"], ["proof (chain)\npicking this:\n  y \\<le> start_points x\n  z \\<le> x + x\\<^sup>T", "have \"y;1;z \\<le> (x;1 \\<cdot> -(x\\<^sup>T;1));1;(x + x\\<^sup>T)\""], ["proof (prove)\nusing this:\n  y \\<le> start_points x\n  z \\<le> x + x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> start_points x ; 1 ; (x + x\\<^sup>T)", "by (simp add: mult_isol_var mult_isor)"], ["proof (state)\nthis:\n  y ; 1 ; z \\<le> start_points x ; 1 ; (x + x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  y ; 1 ; z \\<le> start_points x ; 1 ; (x + x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "have \"... = (x;1 \\<cdot> -(x\\<^sup>T;1));1;x + (x;1 \\<cdot> -(x\\<^sup>T;1));1;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x ; 1 ; (x + x\\<^sup>T) =\n    start_points x ; 1 ; x + start_points x ; 1 ; x\\<^sup>T", "using distrib_left"], ["proof (prove)\nusing this:\n  ?a ; (?b + ?c) = ?a ; ?b + ?a ; ?c\n\ngoal (1 subgoal):\n 1. start_points x ; 1 ; (x + x\\<^sup>T) =\n    start_points x ; 1 ; x + start_points x ; 1 ; x\\<^sup>T", "by blast"], ["proof (state)\nthis:\n  start_points x ; 1 ; (x + x\\<^sup>T) =\n  start_points x ; 1 ; x + start_points x ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  start_points x ; 1 ; (x + x\\<^sup>T) =\n  start_points x ; 1 ; x + start_points x ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "have \"... = (x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> 1;x) + (x;1 \\<cdot> -(x\\<^sup>T;1));1;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x ; 1 ; x + start_points x ; 1 ; x\\<^sup>T =\n    start_points x \\<cdot> 1 ; x + start_points x ; 1 ; x\\<^sup>T", "by (metis comp_assoc inf_top_right is_vector_def one_idem_mult vector_1 vector_compl)"], ["proof (state)\nthis:\n  start_points x ; 1 ; x + start_points x ; 1 ; x\\<^sup>T =\n  start_points x \\<cdot> 1 ; x + start_points x ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  start_points x ; 1 ; x + start_points x ; 1 ; x\\<^sup>T =\n  start_points x \\<cdot> 1 ; x + start_points x ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "have \"... = (x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> 1;x) + (x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> 1;x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<cdot> 1 ; x + start_points x ; 1 ; x\\<^sup>T =\n    start_points x \\<cdot> 1 ; x + start_points x \\<cdot> 1 ; x\\<^sup>T", "by (metis comp_assoc inf_top_right is_vector_def one_idem_mult vector_1 vector_compl)"], ["proof (state)\nthis:\n  start_points x \\<cdot> 1 ; x + start_points x ; 1 ; x\\<^sup>T =\n  start_points x \\<cdot> 1 ; x + start_points x \\<cdot> 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  start_points x \\<cdot> 1 ; x + start_points x ; 1 ; x\\<^sup>T =\n  start_points x \\<cdot> 1 ; x + start_points x \\<cdot> 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "have \"... = (x;1;x \\<cdot> -(x\\<^sup>T;1)) + (x;1;x\\<^sup>T -(x\\<^sup>T;1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<cdot> 1 ; x + start_points x \\<cdot> 1 ; x\\<^sup>T =\n    x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) +\n    (x ; 1 ; x\\<^sup>T - x\\<^sup>T ; 1)", "using vector_meet_comp_x vector_meet_comp_x' diff_eq inf.assoc inf.commute"], ["proof (prove)\nusing this:\n  ?x ; 1 ; ?x\\<^sup>T = ?x ; 1 \\<cdot> 1 ; ?x\\<^sup>T\n  ?x ; 1 ; ?x = ?x ; 1 \\<cdot> 1 ; ?x\n  ?x - ?y = ?x \\<cdot> - ?y\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> 1 ; x + start_points x \\<cdot> 1 ; x\\<^sup>T =\n    x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) +\n    (x ; 1 ; x\\<^sup>T - x\\<^sup>T ; 1)", "by simp"], ["proof (state)\nthis:\n  start_points x \\<cdot> 1 ; x + start_points x \\<cdot> 1 ; x\\<^sup>T =\n  x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) + (x ; 1 ; x\\<^sup>T - x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  start_points x \\<cdot> 1 ; x + start_points x \\<cdot> 1 ; x\\<^sup>T =\n  x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) + (x ; 1 ; x\\<^sup>T - x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "from aux1 aux2"], ["proof (chain)\npicking this:\n  x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) \\<le> x\\<^sup>\\<star>\n  x ; 1 ; x\\<^sup>T \\<cdot> - (x\\<^sup>T ; 1) \\<le> x\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) \\<le> x\\<^sup>\\<star>\n  x ; 1 ; x\\<^sup>T \\<cdot> - (x\\<^sup>T ; 1) \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) +\n    (x ; 1 ; x\\<^sup>T - x\\<^sup>T ; 1)\n    \\<le> x\\<^sup>\\<star>", "by (simp add: diff_eq join_iso)"], ["proof (state)\nthis:\n  x ; 1 ; x \\<cdot> - (x\\<^sup>T ; 1) + (x ; 1 ; x\\<^sup>T - x\\<^sup>T ; 1)\n  \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  y ; 1 ; z \\<le> x\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  y ; 1 ; z \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; z \\<le> x\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  y ; 1 ; z \\<le> x\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_conditions_disjoint_points_iff:\n  \"x;1 \\<cdot> (x\\<^sup>T;1 + y;1) \\<cdot> y\\<^sup>T;1 = 0 \\<and> start_points x \\<cdot> end_points y = 0 \\<longleftrightarrow> x;1 \\<cdot> y\\<^sup>T;1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n     start_points x \\<cdot> end_points y = 0) =\n    (x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n 2. x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0", "assume 1: \"x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\""], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (2 subgoals):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n 2. x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0", "hence g1: \"x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0", "by (metis inf.left_commute inf_bot_right inf_commute)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (2 subgoals):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n 2. x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0", "have g2: \"start_points x \\<cdot> end_points y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<cdot> end_points y = 0", "using 1"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> end_points y = 0", "by (metis compl_inf_bot inf.assoc inf.commute inf.left_idem)"], ["proof (state)\nthis:\n  start_points x \\<cdot> end_points y = 0\n\ngoal (2 subgoals):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n 2. x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0", "show \"x;1 \\<cdot> (x\\<^sup>T;1 + y;1) \\<cdot> y\\<^sup>T;1 = 0 \\<and> start_points x \\<cdot> end_points y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0", "using g1 and g2"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0", "by simp"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "assume a: \"x;1 \\<cdot> (x\\<^sup>T;1 + y;1) \\<cdot> y\\<^sup>T;1 = 0 \\<and> start_points x \\<cdot> end_points y = 0\""], ["proof (state)\nthis:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "from a"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n  start_points x \\<cdot> end_points y = 0", "have a1: \"x;1 \\<cdot> x\\<^sup>T;1 \\<cdot> y\\<^sup>T;1 = 0\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "by (simp add: inf.commute inf_sup_distrib1)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "from a"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n  start_points x \\<cdot> end_points y = 0", "have a2: \"x;1 \\<cdot> y;1 \\<cdot> y\\<^sup>T;1 = 0\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "by (simp add: inf.commute inf_sup_distrib1)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "from a"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n  start_points x \\<cdot> end_points y = 0", "have a3: \"start_points x \\<cdot> end_points y = 0\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> end_points y = 0", "by blast"], ["proof (state)\nthis:\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have \"x;1 \\<cdot> y\\<^sup>T;1 = x;1 \\<cdot> x\\<^sup>T;1 \\<cdot> y\\<^sup>T;1 + x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> y\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y\\<^sup>T ; 1 =\n    x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    start_points x \\<cdot> y\\<^sup>T ; 1", "by (metis aux4 inf_sup_distrib2)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 =\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 =\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "from a1"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have \"... = x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> y\\<^sup>T;1\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    start_points x \\<cdot> y\\<^sup>T ; 1 =\n    start_points x \\<cdot> y\\<^sup>T ; 1", "using sup_bot_left"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n  0 + ?x = ?x\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    start_points x \\<cdot> y\\<^sup>T ; 1 =\n    start_points x \\<cdot> y\\<^sup>T ; 1", "by blast"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> y\\<^sup>T ; 1 =\n  start_points x \\<cdot> y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> y\\<^sup>T ; 1 =\n  start_points x \\<cdot> y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have \"... = x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> y;1 \\<cdot> y\\<^sup>T;1 + x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y;1) \\<cdot> y\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<cdot> y\\<^sup>T ; 1 =\n    start_points x \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1", "by (metis aux4 inf_sup_distrib2)"], ["proof (state)\nthis:\n  start_points x \\<cdot> y\\<^sup>T ; 1 =\n  start_points x \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "also"], ["proof (state)\nthis:\n  start_points x \\<cdot> y\\<^sup>T ; 1 =\n  start_points x \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have \"... \\<le> x;1 \\<cdot> y;1 \\<cdot> y\\<^sup>T;1 + x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y;1) \\<cdot> y\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1\n    \\<le> x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n          start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1", "using join_iso meet_iso"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x + ?z \\<le> ?y + ?z\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1\n    \\<le> x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n          start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1", "by simp"], ["proof (state)\nthis:\n  start_points x \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1\n  \\<le> x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n        start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "also"], ["proof (state)\nthis:\n  start_points x \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1\n  \\<le> x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n        start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "from a2"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have \"... = start_points x \\<cdot> end_points y\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1 =\n    start_points x \\<cdot> end_points y", "using sup_bot_left inf.commute inf.left_commute"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n  0 + ?x = ?x\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n  ?b \\<cdot> (?a \\<cdot> ?c) = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1 =\n    start_points x \\<cdot> end_points y", "by simp"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1 =\n  start_points x \\<cdot> end_points y\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  start_points x \\<cdot> - (y ; 1) \\<cdot> y\\<^sup>T ; 1 =\n  start_points x \\<cdot> end_points y\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "from a3"], ["proof (chain)\npicking this:\n  start_points x \\<cdot> end_points y = 0", "have \"... = 0\""], ["proof (prove)\nusing this:\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> end_points y = 0", "by blast"], ["proof (state)\nthis:\n  start_points x \\<cdot> end_points y = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0 \\<and>\n    start_points x \\<cdot> end_points y = 0 \\<Longrightarrow>\n    x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "finally"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 \\<le> 0", "show \"x;1 \\<cdot> y\\<^sup>T;1 = 0\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 \\<le> 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "using le_bot"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 \\<le> 0\n  ?a \\<le> 0 \\<Longrightarrow> ?a = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "by blast"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* end relation_algebra_rtc *)"], ["", "subsection \\<open>Consequences with the Tarski rule\\<close>"], ["", "context relation_algebra_rtc_tarski\nbegin"], ["", "text \\<open>General theorems\\<close>"], ["", "lemma reachable_implies_predecessor:\n  assumes \"p \\<noteq> q\"\n      and \"point p\"\n      and \"point q\"\n      and \"x\\<^sup>\\<star>;q \\<le> x\\<^sup>T\\<^sup>\\<star>;p\"\n    shows \"x;q \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; q \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; q = 0 \\<Longrightarrow> False", "assume contra: \"x;q=0\""], ["proof (state)\nthis:\n  x ; q = 0\n\ngoal (1 subgoal):\n 1. x ; q = 0 \\<Longrightarrow> False", "with assms(4)"], ["proof (chain)\npicking this:\n  x\\<^sup>\\<star> ; q \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n  x ; q = 0", "have \"q \\<le> x\\<^sup>T\\<^sup>\\<star>;p\""], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star> ; q \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n  x ; q = 0\n\ngoal (1 subgoal):\n 1. q \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "by (simp add: independence1)"], ["proof (state)\nthis:\n  q \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. x ; q = 0 \\<Longrightarrow> False", "hence \"p \\<le> x\\<^sup>\\<star>;q\""], ["proof (prove)\nusing this:\n  q \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. p \\<le> x\\<^sup>\\<star> ; q", "by (metis assms(2,3) point_swap star_conv)"], ["proof (state)\nthis:\n  p \\<le> x\\<^sup>\\<star> ; q\n\ngoal (1 subgoal):\n 1. x ; q = 0 \\<Longrightarrow> False", "with contra assms(2,3)"], ["proof (chain)\npicking this:\n  x ; q = 0\n  point p\n  point q\n  p \\<le> x\\<^sup>\\<star> ; q", "have \"p=q\""], ["proof (prove)\nusing this:\n  x ; q = 0\n  point p\n  point q\n  p \\<le> x\\<^sup>\\<star> ; q\n\ngoal (1 subgoal):\n 1. p = q", "by (simp add: independence1 is_point_def point_singleton point_is_point)"], ["proof (state)\nthis:\n  p = q\n\ngoal (1 subgoal):\n 1. x ; q = 0 \\<Longrightarrow> False", "with assms(1)"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  p = q", "show False"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p = q\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma acyclic_imp_one_step_different_points:\n  assumes \"is_acyclic x\"\n      and \"point p\"\n      and \"point q\"\n      and \"p \\<le> x;q\"\n    shows \"p \\<le> -q\" and \"p \\<noteq> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> - q &&& p \\<noteq> q", "using acyclic_reachable_points assms point_is_point point_not_equal(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_point ?p; is_point ?q; ?p \\<le> ?x ; ?q;\n   is_acyclic ?x\\<rbrakk>\n  \\<Longrightarrow> ?p \\<noteq> ?q\n  is_acyclic x\n  point p\n  point q\n  p \\<le> x ; q\n  point ?x = is_point ?x\n  \\<lbrakk>is_point ?p; is_point ?q\\<rbrakk>\n  \\<Longrightarrow> (?p \\<noteq> ?q) = (?p \\<le> - ?q)\n\ngoal (1 subgoal):\n 1. p \\<le> - q &&& p \\<noteq> q", "by auto"], ["", "text \\<open>Start points and end points\\<close>"], ["", "lemma start_point_iff2:\n  assumes \"path x\"\n    shows \"is_point (start_points x) \\<longleftrightarrow> has_start_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "have \"has_start_points x \\<longleftrightarrow> 1 \\<le> -(1;x);x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_points x = (1 \\<le> - (1 ; x) ; x ; 1)", "by (simp add: eq_iff)"], ["proof (state)\nthis:\n  has_start_points x = (1 \\<le> - (1 ; x) ; x ; 1)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "also"], ["proof (state)\nthis:\n  has_start_points x = (1 \\<le> - (1 ; x) ; x ; 1)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "have \"... \\<longleftrightarrow> 1 \\<le> 1;x\\<^sup>T;-(x\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 \\<le> - (1 ; x) ; x ; 1) =\n    (1 \\<le> 1 ; x\\<^sup>T ; - (x\\<^sup>T ; 1))", "by (metis comp_assoc conv_compl conv_contrav conv_iso conv_one)"], ["proof (state)\nthis:\n  (1 \\<le> - (1 ; x) ; x ; 1) = (1 \\<le> 1 ; x\\<^sup>T ; - (x\\<^sup>T ; 1))\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "also"], ["proof (state)\nthis:\n  (1 \\<le> - (1 ; x) ; x ; 1) = (1 \\<le> 1 ; x\\<^sup>T ; - (x\\<^sup>T ; 1))\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "have \"... \\<longleftrightarrow> 1 \\<le> 1;(x;1 \\<cdot> -(x\\<^sup>T;1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 \\<le> 1 ; x\\<^sup>T ; - (x\\<^sup>T ; 1)) =\n    (1 \\<le> 1 ; start_points x)", "by (metis (no_types) conv_contrav conv_one inf.commute is_vector_def one_idem_mult ra_2 vector_1\n              vector_meet_comp_x)"], ["proof (state)\nthis:\n  (1 \\<le> 1 ; x\\<^sup>T ; - (x\\<^sup>T ; 1)) = (1 \\<le> 1 ; start_points x)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "also"], ["proof (state)\nthis:\n  (1 \\<le> 1 ; x\\<^sup>T ; - (x\\<^sup>T ; 1)) = (1 \\<le> 1 ; start_points x)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "have \"... \\<longleftrightarrow> 1 = 1;(x;1 \\<cdot> -(x\\<^sup>T;1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 \\<le> 1 ; start_points x) = (1 = 1 ; start_points x)", "by (simp add: eq_iff)"], ["proof (state)\nthis:\n  (1 \\<le> 1 ; start_points x) = (1 = 1 ; start_points x)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "also"], ["proof (state)\nthis:\n  (1 \\<le> 1 ; start_points x) = (1 = 1 ; start_points x)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "have \"... \\<longleftrightarrow> x;1 \\<cdot> -(x\\<^sup>T;1) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 = 1 ; start_points x) = (start_points x \\<noteq> 0)", "by (metis tarski comp_assoc one_compl ra_1 ss_p18)"], ["proof (state)\nthis:\n  (1 = 1 ; start_points x) = (start_points x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "also"], ["proof (state)\nthis:\n  (1 = 1 ; start_points x) = (start_points x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "have \"... \\<longleftrightarrow> is_point (start_points x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (start_points x \\<noteq> 0) = is_point (start_points x)", "using assms is_point_def start_point_zero_point"], ["proof (prove)\nusing this:\n  path x\n  is_point ?x \\<equiv> is_vector ?x \\<and> is_inj ?x \\<and> ?x \\<noteq> 0\n  path ?x \\<Longrightarrow>\n  start_points ?x = 0 \\<or> is_point (start_points ?x)\n\ngoal (1 subgoal):\n 1. (start_points x \\<noteq> 0) = is_point (start_points x)", "by blast"], ["proof (state)\nthis:\n  (start_points x \\<noteq> 0) = is_point (start_points x)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", "finally"], ["proof (chain)\npicking this:\n  has_start_points x = is_point (start_points x)", "show ?thesis"], ["proof (prove)\nusing this:\n  has_start_points x = is_point (start_points x)\n\ngoal (1 subgoal):\n 1. is_point (start_points x) = has_start_points x", ".."], ["proof (state)\nthis:\n  is_point (start_points x) = has_start_points x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma end_point_iff2:\n  assumes \"path x\"\n    shows \"is_point (end_points x) \\<longleftrightarrow> has_end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_point (end_points x) = has_end_points x", "by (metis assms conv_invol conv_has_start_points conv_path start_point_iff2)"], ["", "lemma edge_is_path:\n  assumes \"is_point p\"\n      and \"is_point q\"\n    shows \"path (p;q\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (p ; q\\<^sup>T)", "apply (unfold path_def; intro conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. connected (p ; q\\<^sup>T)\n 2. is_p_fun (p ; q\\<^sup>T)\n 3. is_inj (p ; q\\<^sup>T)", "apply (metis assms comp_assoc is_point_def le_supI1 star_ext vector_rectangle point_equations(3))"], ["proof (prove)\ngoal (2 subgoals):\n 1. is_p_fun (p ; q\\<^sup>T)\n 2. is_inj (p ; q\\<^sup>T)", "apply (metis is_p_fun_def assms comp_assoc conv_contrav conv_invol is_inj_def is_point_def\n                vector_2_var vector_meet_comp_x' point_equations)"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_inj (p ; q\\<^sup>T)", "by (metis is_inj_def assms conv_invol conv_times is_point_def p_fun_mult_var vector_meet_comp)"], ["", "lemma edge_start:\n  assumes \"is_point p\"\n      and \"is_point q\"\n      and \"p \\<noteq> q\"\n    shows \"start_points (p;q\\<^sup>T) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (p ; q\\<^sup>T) = p", "using assms"], ["proof (prove)\nusing this:\n  is_point p\n  is_point q\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. start_points (p ; q\\<^sup>T) = p", "by (simp add: comp_assoc point_equations(1,3) point_not_equal inf.absorb1)"], ["", "lemma edge_end:\n  assumes \"is_point p\"\n      and \"is_point q\"\n      and \"p \\<noteq> q\"\n    shows \"end_points (p;q\\<^sup>T) = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (p ; q\\<^sup>T) = q", "using assms edge_start"], ["proof (prove)\nusing this:\n  is_point p\n  is_point q\n  p \\<noteq> q\n  \\<lbrakk>is_point ?p; is_point ?q; ?p \\<noteq> ?q\\<rbrakk>\n  \\<Longrightarrow> start_points (?p ; ?q\\<^sup>T) = ?p\n\ngoal (1 subgoal):\n 1. end_points (p ; q\\<^sup>T) = q", "by simp"], ["", "lemma loop_no_start:\n  assumes \"is_point p\"\n    shows \"start_points (p;p\\<^sup>T) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (p ; p\\<^sup>T) = 0", "by simp"], ["", "lemma loop_no_end:\n  assumes \"is_point p\"\n    shows \"end_points (p;p\\<^sup>T) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (p ; p\\<^sup>T) = 0", "by simp"], ["", "lemma start_point_no_predecessor:\n  \"x;start_points(x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; start_points x = 0", "by (metis inf_top.right_neutral modular_1_aux')"], ["", "lemma end_point_no_successor:\n  \"x\\<^sup>T;end_points(x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; end_points x = 0", "by (metis conv_invol start_point_no_predecessor)"], ["", "lemma start_to_end:\n  assumes \"path x\"\n    shows \"start_points(x);end_points(x)\\<^sup>T \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "proof (cases \"end_points(x) = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. end_points x = 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>\n 2. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "assume \"end_points(x) = 0\""], ["proof (state)\nthis:\n  end_points x = 0\n\ngoal (2 subgoals):\n 1. end_points x = 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>\n 2. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "thus ?thesis"], ["proof (prove)\nusing this:\n  end_points x = 0\n\ngoal (1 subgoal):\n 1. start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "assume ass: \"end_points(x) \\<noteq> 0\""], ["proof (state)\nthis:\n  end_points x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "hence nz: \"x;end_points(x) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  end_points x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x ; end_points x \\<noteq> 0", "by (metis comp_res_aux compl_bot_eq inf.left_idem)"], ["proof (state)\nthis:\n  x ; end_points x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "have a: \"x;end_points(x);end_points(x)\\<^sup>T \\<le> x + x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; end_points x ; end_points x\\<^sup>T \\<le> x + x\\<^sup>T", "by (metis end_point_at_most_one assms(1) is_inj_def comp_assoc mult_isol mult_oner le_supI1)"], ["proof (state)\nthis:\n  x ; end_points x ; end_points x\\<^sup>T \\<le> x + x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "have \"start_points(x);end_points(x)\\<^sup>T = start_points(x);1;end_points(x)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x ; end_points x\\<^sup>T =\n    start_points x ; 1 ; end_points x\\<^sup>T", "using ass"], ["proof (prove)\nusing this:\n  end_points x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. start_points x ; end_points x\\<^sup>T =\n    start_points x ; 1 ; end_points x\\<^sup>T", "by (simp add: comp_assoc is_vector_def one_compl vector_1)"], ["proof (state)\nthis:\n  start_points x ; end_points x\\<^sup>T =\n  start_points x ; 1 ; end_points x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  start_points x ; end_points x\\<^sup>T =\n  start_points x ; 1 ; end_points x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "have \"... = start_points(x);1;x;end_points(x);1;end_points(x)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x ; 1 ; end_points x\\<^sup>T =\n    start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T", "using nz tarski"], ["proof (prove)\nusing this:\n  x ; end_points x \\<noteq> 0\n  (?x \\<noteq> 0) = (1 ; ?x ; 1 = 1)\n\ngoal (1 subgoal):\n 1. start_points x ; 1 ; end_points x\\<^sup>T =\n    start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T", "by (simp add: comp_assoc)"], ["proof (state)\nthis:\n  start_points x ; 1 ; end_points x\\<^sup>T =\n  start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  start_points x ; 1 ; end_points x\\<^sup>T =\n  start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "have \"... = start_points(x);1;x;end_points(x);end_points(x)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T =\n    start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T", "using ass"], ["proof (prove)\nusing this:\n  end_points x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T =\n    start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T", "by (simp add: comp_assoc is_vector_def one_compl vector_1)"], ["proof (state)\nthis:\n  start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T =\n  start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T =\n  start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "with a assms(1)"], ["proof (chain)\npicking this:\n  x ; end_points x ; end_points x\\<^sup>T \\<le> x + x\\<^sup>T\n  path x\n  start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T =\n  start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T", "have \"... \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x ; end_points x ; end_points x\\<^sup>T \\<le> x + x\\<^sup>T\n  path x\n  start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T =\n  start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T\n\ngoal (1 subgoal):\n 1. start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T\n    \\<le> x\\<^sup>\\<star>", "using path_concat_aux_5 comp_assoc eq_refl"], ["proof (prove)\nusing this:\n  x ; end_points x ; end_points x\\<^sup>T \\<le> x + x\\<^sup>T\n  path x\n  start_points x ; 1 ; x ; end_points x ; 1 ; end_points x\\<^sup>T =\n  start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T\n  \\<lbrakk>path ?x; ?y \\<le> start_points ?x;\n   ?z \\<le> ?x + ?x\\<^sup>T\\<rbrakk>\n  \\<Longrightarrow> ?y ; 1 ; ?z \\<le> ?x\\<^sup>\\<star>\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  ?x = ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T\n    \\<le> x\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  start_points x ; 1 ; x ; end_points x ; end_points x\\<^sup>T\n  \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<noteq> 0 \\<Longrightarrow>\n    start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  start_points x ; end_points x\\<^sup>T \\<le> x\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_acyclic:\n  assumes \"has_start_points_path x\"\n    shows \"is_acyclic x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_acyclic x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_acyclic x", "let ?r = \"start_points(x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. is_acyclic x", "have pt: \"point(?r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. point (start_points x)", "using assms point_is_point start_point_iff2"], ["proof (prove)\nusing this:\n  has_start_points_path x\n  point ?x = is_point ?x\n  path ?x \\<Longrightarrow> is_point (start_points ?x) = has_start_points ?x\n\ngoal (1 subgoal):\n 1. point (start_points x)", "by blast"], ["proof (state)\nthis:\n  point (start_points x)\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"x\\<^sup>+\\<cdot>1' = (x\\<^sup>+)\\<^sup>T\\<cdot>x\\<^sup>+\\<cdot>1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<cdot> 1' = (x\\<^sup>+)\\<^sup>T \\<cdot> x\\<^sup>+ \\<cdot> 1'", "by (metis conv_e conv_times inf.assoc inf.left_idem inf_le2 many_strongly_connected_iff_7\n              mult_oner star_subid)"], ["proof (state)\nthis:\n  x\\<^sup>+ \\<cdot> 1' = (x\\<^sup>+)\\<^sup>T \\<cdot> x\\<^sup>+ \\<cdot> 1'\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  x\\<^sup>+ \\<cdot> 1' = (x\\<^sup>+)\\<^sup>T \\<cdot> x\\<^sup>+ \\<cdot> 1'\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... \\<le> x\\<^sup>T;1\\<cdot>x\\<^sup>+\\<cdot>1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>+)\\<^sup>T \\<cdot> x\\<^sup>+ \\<cdot> 1'\n    \\<le> x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1'", "by (metis conv_contrav inf.commute maddux_20 meet_double_iso plus_top star_conv star_slide_var)"], ["proof (state)\nthis:\n  (x\\<^sup>+)\\<^sup>T \\<cdot> x\\<^sup>+ \\<cdot> 1'\n  \\<le> x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1'\n\ngoal (1 subgoal):\n 1. is_acyclic x", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>+ \\<cdot> 1' \\<le> x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1'", "have \"?r;(x\\<^sup>+\\<cdot>1') \\<le> ?r;(x\\<^sup>T;1\\<cdot>x\\<^sup>+\\<cdot>1')\""], ["proof (prove)\nusing this:\n  x\\<^sup>+ \\<cdot> 1' \\<le> x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1'\n\ngoal (1 subgoal):\n 1. start_points x ; (x\\<^sup>+ \\<cdot> 1')\n    \\<le> start_points x ; (x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1')", "using mult_isol"], ["proof (prove)\nusing this:\n  x\\<^sup>+ \\<cdot> 1' \\<le> x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1'\n  ?x \\<le> ?y \\<Longrightarrow> ?z ; ?x \\<le> ?z ; ?y\n\ngoal (1 subgoal):\n 1. start_points x ; (x\\<^sup>+ \\<cdot> 1')\n    \\<le> start_points x ; (x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1')", "by blast"], ["proof (state)\nthis:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1')\n  \\<le> start_points x ; (x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1')\n  \\<le> start_points x ; (x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... = (?r\\<cdot>1;x);(x\\<^sup>+\\<cdot>1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x ; (x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1') =\n    (start_points x \\<cdot> 1 ; x) ; (x\\<^sup>+ \\<cdot> 1')", "by (metis (no_types, lifting) comp_assoc conv_contrav conv_invol conv_one inf.assoc\n              is_vector_def one_idem_mult vector_2)"], ["proof (state)\nthis:\n  start_points x ; (x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1') =\n  (start_points x \\<cdot> 1 ; x) ; (x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  start_points x ; (x\\<^sup>T ; 1 \\<cdot> x\\<^sup>+ \\<cdot> 1') =\n  (start_points x \\<cdot> 1 ; x) ; (x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... = ?r;x;(x\\<^sup>+\\<cdot>1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (start_points x \\<cdot> 1 ; x) ; (x\\<^sup>+ \\<cdot> 1') =\n    start_points x ; x ; (x\\<^sup>+ \\<cdot> 1')", "by (metis comp_assoc inf_top.right_neutral is_vector_def one_compl one_idem_mult vector_1)"], ["proof (state)\nthis:\n  (start_points x \\<cdot> 1 ; x) ; (x\\<^sup>+ \\<cdot> 1') =\n  start_points x ; x ; (x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  (start_points x \\<cdot> 1 ; x) ; (x\\<^sup>+ \\<cdot> 1') =\n  start_points x ; x ; (x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>);(x\\<^sup>+\\<cdot>1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x ; x ; (x\\<^sup>+ \\<cdot> 1')\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ;\n          (x\\<^sup>+ \\<cdot> 1')", "using assms(1) mult_isor"], ["proof (prove)\nusing this:\n  has_start_points_path x\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n\ngoal (1 subgoal):\n 1. start_points x ; x ; (x\\<^sup>+ \\<cdot> 1')\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ;\n          (x\\<^sup>+ \\<cdot> 1')", "by (meson connected_iff4 dual_order.trans mult_subdistr path_concat_aux3_3)"], ["proof (state)\nthis:\n  start_points x ; x ; (x\\<^sup>+ \\<cdot> 1')\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; (x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  start_points x ; x ; (x\\<^sup>+ \\<cdot> 1')\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; (x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... = x\\<^sup>\\<star>;(x\\<^sup>+\\<cdot>1') + x\\<^sup>T\\<^sup>+;(x\\<^sup>+\\<cdot>1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; (x\\<^sup>+ \\<cdot> 1') =\n    x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') +\n    x\\<^sup>T\\<^sup>+ ; (x\\<^sup>+ \\<cdot> 1')", "by (metis distrib_right star_star_plus sup.commute)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; (x\\<^sup>+ \\<cdot> 1') =\n  x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') +\n  x\\<^sup>T\\<^sup>+ ; (x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; (x\\<^sup>+ \\<cdot> 1') =\n  x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') +\n  x\\<^sup>T\\<^sup>+ ; (x\\<^sup>+ \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... \\<le> x\\<^sup>\\<star>;(x\\<^sup>+\\<cdot>1') + x\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') +\n    x\\<^sup>T\\<^sup>+ ; (x\\<^sup>+ \\<cdot> 1')\n    \\<le> x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') + x\\<^sup>T ; 1", "by (metis join_isol mult_isol plus_top top_greatest)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') +\n  x\\<^sup>T\\<^sup>+ ; (x\\<^sup>+ \\<cdot> 1')\n  \\<le> x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "finally"], ["proof (chain)\npicking this:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1')\n  \\<le> x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') + x\\<^sup>T ; 1", "have \"?r;(x\\<^sup>+\\<cdot>1');1 \\<le> x\\<^sup>\\<star>;(x\\<^sup>+\\<cdot>1');1 + x\\<^sup>T;1\""], ["proof (prove)\nusing this:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1')\n  \\<le> x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n    \\<le> x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') ; 1 + x\\<^sup>T ; 1", "by (metis distrib_right inf_absorb2 mult_assoc mult_subdistr one_idem_mult)"], ["proof (state)\nthis:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n  \\<le> x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') ; 1 + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "hence 1: \"?r;(x\\<^sup>+\\<cdot>1');1 \\<le> x\\<^sup>T;1\""], ["proof (prove)\nusing this:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n  \\<le> x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') ; 1 + x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1 \\<le> x\\<^sup>T ; 1", "using assms(1) path_def inj_implies_step_forwards_backwards sup_absorb2"], ["proof (prove)\nusing this:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n  \\<le> x\\<^sup>\\<star> ; (x\\<^sup>+ \\<cdot> 1') ; 1 + x\\<^sup>T ; 1\n  has_start_points_path x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  is_inj ?x \\<Longrightarrow>\n  ?x\\<^sup>\\<star> ; (?x\\<^sup>+ \\<cdot> 1') ; 1 \\<le> ?x\\<^sup>T ; 1\n  ?x \\<le> ?y \\<Longrightarrow> ?x + ?y = ?y\n\ngoal (1 subgoal):\n 1. start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1 \\<le> x\\<^sup>T ; 1", "by simp"], ["proof (state)\nthis:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1 \\<le> x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"x\\<^sup>+\\<cdot>1' \\<le> (x\\<^sup>+\\<cdot>1');1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ \\<cdot> 1' \\<le> (x\\<^sup>+ \\<cdot> 1') ; 1", "by (simp add: maddux_20)"], ["proof (state)\nthis:\n  x\\<^sup>+ \\<cdot> 1' \\<le> (x\\<^sup>+ \\<cdot> 1') ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  x\\<^sup>+ \\<cdot> 1' \\<le> (x\\<^sup>+ \\<cdot> 1') ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... \\<le> ?r\\<^sup>T;?r;(x\\<^sup>+\\<cdot>1');1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>+ \\<cdot> 1') ; 1\n    \\<le> start_points x\\<^sup>T ; start_points x ; (x\\<^sup>+ \\<cdot> 1') ;\n          1", "using pt comp_assoc point_def ss423conv"], ["proof (prove)\nusing this:\n  point (start_points x)\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  bijective ?x \\<Longrightarrow>\n  (?x ; ?y \\<le> ?z) = (?y \\<le> ?x\\<^sup>T ; ?z)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>+ \\<cdot> 1') ; 1\n    \\<le> start_points x\\<^sup>T ; start_points x ; (x\\<^sup>+ \\<cdot> 1') ;\n          1", "by fastforce"], ["proof (state)\nthis:\n  (x\\<^sup>+ \\<cdot> 1') ; 1\n  \\<le> start_points x\\<^sup>T ; start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>+ \\<cdot> 1') ; 1\n  \\<le> start_points x\\<^sup>T ; start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... \\<le> ?r\\<^sup>T;x\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x\\<^sup>T ; start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n    \\<le> start_points x\\<^sup>T ; x\\<^sup>T ; 1", "using 1"], ["proof (prove)\nusing this:\n  start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1 \\<le> x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. start_points x\\<^sup>T ; start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n    \\<le> start_points x\\<^sup>T ; x\\<^sup>T ; 1", "by (simp add: comp_assoc mult_isol)"], ["proof (state)\nthis:\n  start_points x\\<^sup>T ; start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n  \\<le> start_points x\\<^sup>T ; x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "also"], ["proof (state)\nthis:\n  start_points x\\<^sup>T ; start_points x ; (x\\<^sup>+ \\<cdot> 1') ; 1\n  \\<le> start_points x\\<^sup>T ; x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. is_acyclic x", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x\\<^sup>T ; x\\<^sup>T ; 1 = 0", "by (metis start_point_no_predecessor annil conv_contrav conv_zero)"], ["proof (state)\nthis:\n  start_points x\\<^sup>T ; x\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. is_acyclic x", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>+ \\<cdot> 1' \\<le> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>+ \\<cdot> 1' \\<le> 0\n\ngoal (1 subgoal):\n 1. is_acyclic x", "using galois_aux le_bot"], ["proof (prove)\nusing this:\n  x\\<^sup>+ \\<cdot> 1' \\<le> 0\n  (?x \\<cdot> ?y = 0) = (?x \\<le> - ?y)\n  ?a \\<le> 0 \\<Longrightarrow> ?a = 0\n\ngoal (1 subgoal):\n 1. is_acyclic x", "by blast"], ["proof (state)\nthis:\n  is_acyclic x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Equivalences for \\<open>terminating\\<close>\\<close>"], ["", "lemma backward_terminating_iff1:\n  assumes \"path x\"\n    shows \"backward_terminating x \\<longleftrightarrow> has_start_points x \\<or> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_terminating x = (has_start_points x \\<or> x = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow> has_start_points x \\<or> x = 0\n 2. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "assume \"backward_terminating x\""], ["proof (state)\nthis:\n  backward_terminating x\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow> has_start_points x \\<or> x = 0\n 2. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "hence \"1;x;1 \\<le> 1;-(1;x);x;1;1\""], ["proof (prove)\nusing this:\n  backward_terminating x\n\ngoal (1 subgoal):\n 1. 1 ; x ; 1 \\<le> 1 ; - (1 ; x) ; x ; 1 ; 1", "by (metis mult_isor mult_isol comp_assoc)"], ["proof (state)\nthis:\n  1 ; x ; 1 \\<le> 1 ; - (1 ; x) ; x ; 1 ; 1\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow> has_start_points x \\<or> x = 0\n 2. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "also"], ["proof (state)\nthis:\n  1 ; x ; 1 \\<le> 1 ; - (1 ; x) ; x ; 1 ; 1\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow> has_start_points x \\<or> x = 0\n 2. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "have \"... = -(1;x);x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 ; - (1 ; x) ; x ; 1 ; 1 = - (1 ; x) ; x ; 1", "by (metis conv_compl conv_contrav conv_invol conv_one mult_assoc one_compl one_idem_mult)"], ["proof (state)\nthis:\n  1 ; - (1 ; x) ; x ; 1 ; 1 = - (1 ; x) ; x ; 1\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow> has_start_points x \\<or> x = 0\n 2. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "finally"], ["proof (chain)\npicking this:\n  1 ; x ; 1 \\<le> - (1 ; x) ; x ; 1", "have \"1;x;1 \\<le> -(1;x);x;1\""], ["proof (prove)\nusing this:\n  1 ; x ; 1 \\<le> - (1 ; x) ; x ; 1\n\ngoal (1 subgoal):\n 1. 1 ; x ; 1 \\<le> - (1 ; x) ; x ; 1", "."], ["proof (state)\nthis:\n  1 ; x ; 1 \\<le> - (1 ; x) ; x ; 1\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow> has_start_points x \\<or> x = 0\n 2. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "with tarski"], ["proof (chain)\npicking this:\n  (?x \\<noteq> 0) = (1 ; ?x ; 1 = 1)\n  1 ; x ; 1 \\<le> - (1 ; x) ; x ; 1", "show \"has_start_points x \\<or> x = 0\""], ["proof (prove)\nusing this:\n  (?x \\<noteq> 0) = (1 ; ?x ; 1 = 1)\n  1 ; x ; 1 \\<le> - (1 ; x) ; x ; 1\n\ngoal (1 subgoal):\n 1. has_start_points x \\<or> x = 0", "by (metis top_le)"], ["proof (state)\nthis:\n  has_start_points x \\<or> x = 0\n\ngoal (1 subgoal):\n 1. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "show \"has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x", "by fastforce"], ["proof (state)\nthis:\n  has_start_points x \\<or> x = 0 \\<Longrightarrow> backward_terminating x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma backward_terminating_iff2_aux:\n  assumes \"path x\"\n    shows \"x;1 \\<cdot> 1;x\\<^sup>T \\<cdot> -(1;x) \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"x;1 \\<cdot> 1;x\\<^sup>T \\<le> x;1;x;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T", "by (metis conv_invol modular_var_3 vector_meet_comp_x vector_meet_comp_x')"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x ; 1 ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>);x\\<^sup>T\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "using path_def mult_isor"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n\ngoal (1 subgoal):\n 1. x ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "by blast"], ["proof (state)\nthis:\n  x ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>\\<star>;x;x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T +\n          x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (simp add: star_star_plus star_slide_var add_comm)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T +\n        x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T +\n        x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> x\\<^sup>\\<star>;1' + x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (metis path_def is_inj_def join_iso mult_assoc mult_isol)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"... = x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T =\n    x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>", "by (metis mult_1_right star_slide_var star_star_plus sup.commute)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T =\n  x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T =\n  x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star> + 1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>\n    \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x", "by (metis join_iso mult_isor star_slide_var top_greatest add_comm)"], ["proof (state)\nthis:\n  x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star> \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x", "have \"x;1 \\<cdot> 1;x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1;x\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x", "."], ["proof (state)\nthis:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "by (simp add: galois_1 sup.commute)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n  \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma backward_terminating_iff2:\n  assumes \"path x\"\n    shows \"backward_terminating x \\<longleftrightarrow> x \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_terminating x =\n    (x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "assume \"backward_terminating x\""], ["proof (state)\nthis:\n  backward_terminating x\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "with assms"], ["proof (chain)\npicking this:\n  path x\n  backward_terminating x", "have \"has_start_points x \\<or> x = 0\""], ["proof (prove)\nusing this:\n  path x\n  backward_terminating x\n\ngoal (1 subgoal):\n 1. has_start_points x \\<or> x = 0", "by (simp add: backward_terminating_iff1)"], ["proof (state)\nthis:\n  has_start_points x \\<or> x = 0\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "thus \"x \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  has_start_points x \\<or> x = 0\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x = 0 \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "assume \"x = 0\""], ["proof (state)\nthis:\n  x = 0\n\ngoal (2 subgoals):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x = 0 \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = 0\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "by simp"], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "assume \"has_start_points x\""], ["proof (state)\nthis:\n  has_start_points x\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "hence aux1: \"1 = 1;x\\<^sup>T;-(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  has_start_points x\n\ngoal (1 subgoal):\n 1. has_end_points (x\\<^sup>T)", "by (metis comp_assoc conv_compl conv_contrav conv_one)"], ["proof (state)\nthis:\n  has_end_points (x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "have \"x = x \\<cdot> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x \\<cdot> 1", "by simp"], ["proof (state)\nthis:\n  x = x \\<cdot> 1\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  x = x \\<cdot> 1\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "have \"... \\<le> (x;-(1;x) \\<cdot> 1;x\\<^sup>T);-(x\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> 1\n    \\<le> (x ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)", "by (metis inf.commute aux1 conv_compl conv_contrav conv_invol conv_one modular_2_var)"], ["proof (state)\nthis:\n  x \\<cdot> 1\n  \\<le> (x ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  x \\<cdot> 1\n  \\<le> (x ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "have \"... = (x;1 \\<cdot> -(1;x) \\<cdot> 1;x\\<^sup>T);-(x\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1) =\n    (x ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)", "by (metis comp_assoc conv_compl conv_contrav conv_invol conv_one inf.commute inf_top_left\n                one_compl ra_1)"], ["proof (state)\nthis:\n  (x ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1) =\n  (x ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  (x ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1) =\n  (x ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. (x ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "using backward_terminating_iff2_aux inf.commute inf.assoc mult_isor"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  ?x ; 1 \\<cdot> 1 ; ?x\\<^sup>T \\<cdot> - (1 ; ?x)\n  \\<le> ?x\\<^sup>T\\<^sup>\\<star>\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n\ngoal (1 subgoal):\n 1. (x ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "by fastforce"], ["proof (state)\nthis:\n  (x ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "finally"], ["proof (chain)\npicking this:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "show \"x \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "."], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "assume \"x \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "hence\"x \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1) \\<cdot> x\""], ["proof (prove)\nusing this:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<cdot> x", "by simp"], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "also"], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have \"... = (x\\<^sup>T\\<^sup>\\<star> \\<cdot> -(1;x));1 \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<cdot> x =\n    (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ; 1 \\<cdot> x", "by (metis one_compl conv_compl conv_contrav conv_invol conv_one inf_top_left ra_2)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<cdot> x =\n  (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ; 1 \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<cdot> x =\n  (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ; 1 \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have \"... \\<le> (x\\<^sup>T\\<^sup>\\<star> \\<cdot> -(1;x)) ; (1 \\<cdot> (x\\<^sup>\\<star> \\<cdot> -(1;x)\\<^sup>T);x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ; 1 \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ;\n          (1 \\<cdot> (x\\<^sup>\\<star> \\<cdot> - (1 ; x)\\<^sup>T) ; x)", "by (metis (mono_tags) conv_compl conv_invol conv_times modular_1_var star_conv)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ; 1 \\<cdot> x\n  \\<le> (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ;\n        (1 \\<cdot> (x\\<^sup>\\<star> \\<cdot> - (1 ; x)\\<^sup>T) ; x)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ; 1 \\<cdot> x\n  \\<le> (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ;\n        (1 \\<cdot> (x\\<^sup>\\<star> \\<cdot> - (1 ; x)\\<^sup>T) ; x)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have \"... \\<le> -(1;x);x\\<^sup>\\<star>;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ;\n    (1 \\<cdot> (x\\<^sup>\\<star> \\<cdot> - (1 ; x)\\<^sup>T) ; x)\n    \\<le> - (1 ; x) ; x\\<^sup>\\<star> ; x", "by (simp add: mult_assoc mult_isol_var)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ;\n  (1 \\<cdot> (x\\<^sup>\\<star> \\<cdot> - (1 ; x)\\<^sup>T) ; x)\n  \\<le> - (1 ; x) ; x\\<^sup>\\<star> ; x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> \\<cdot> - (1 ; x)) ;\n  (1 \\<cdot> (x\\<^sup>\\<star> \\<cdot> - (1 ; x)\\<^sup>T) ; x)\n  \\<le> - (1 ; x) ; x\\<^sup>\\<star> ; x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have \"... \\<le> -(1;x);x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (1 ; x) ; x\\<^sup>\\<star> ; x \\<le> - (1 ; x) ; x ; 1", "by (simp add: mult_assoc mult_isol star_slide_var)"], ["proof (state)\nthis:\n  - (1 ; x) ; x\\<^sup>\\<star> ; x \\<le> - (1 ; x) ; x ; 1\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "finally"], ["proof (chain)\npicking this:\n  backward_terminating x", "show \"backward_terminating x\""], ["proof (prove)\nusing this:\n  backward_terminating x\n\ngoal (1 subgoal):\n 1. backward_terminating x", "."], ["proof (state)\nthis:\n  backward_terminating x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma backward_terminating_iff3_aux:\n  assumes \"path x\"\n    shows \"x\\<^sup>T;1 \\<cdot> 1;x\\<^sup>T \\<cdot> -(1;x) \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"x\\<^sup>T;1 \\<cdot> 1;x\\<^sup>T \\<le> x\\<^sup>T;1;x;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T ; 1 ; x ; x\\<^sup>T", "by (metis conv_invol modular_var_3 vector_meet_comp_x vector_meet_comp_x')"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T ; 1 ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T ; 1 ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>);x\\<^sup>T\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "using mult_isor path_concat_aux3_2"], ["proof (prove)\nusing this:\n  path x\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n  path ?x \\<Longrightarrow>\n  ?x\\<^sup>T ; 1 ; ?x \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x ; x\\<^sup>T\n    \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x ; x\\<^sup>T\n  \\<le> (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>\\<star>;x;x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T +\n          x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (simp add: star_star_plus star_slide_var add_comm)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T +\n        x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; x ; x\\<^sup>T +\n        x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> x\\<^sup>\\<star>;1' + x\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n    \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T", "by (metis path_def is_inj_def join_iso mult_assoc mult_isol)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; x ; x\\<^sup>T + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n  \\<le> x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"... = x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T =\n    x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>", "by (metis mult_1_right star_slide_var star_star_plus sup.commute)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T =\n  x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; 1' + x\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T =\n  x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star> + 1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star>\n    \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x", "by (metis join_iso mult_isor star_slide_var top_greatest add_comm)"], ["proof (state)\nthis:\n  x\\<^sup>+ + x\\<^sup>T\\<^sup>\\<star> \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x", "have \"x\\<^sup>T;1 \\<cdot> 1;x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1;x\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x", "."], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + 1 ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n    \\<le> x\\<^sup>T\\<^sup>\\<star>", "by (simp add: galois_1 sup.commute)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<cdot> - (1 ; x)\n  \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma backward_terminating_iff3:\n  assumes \"path x\"\n    shows \"backward_terminating x \\<longleftrightarrow> x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_terminating x =\n    (x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "assume \"backward_terminating x\""], ["proof (state)\nthis:\n  backward_terminating x\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "with assms"], ["proof (chain)\npicking this:\n  path x\n  backward_terminating x", "have \"has_start_points x \\<or> x = 0\""], ["proof (prove)\nusing this:\n  path x\n  backward_terminating x\n\ngoal (1 subgoal):\n 1. has_start_points x \\<or> x = 0", "by (simp add: backward_terminating_iff1)"], ["proof (state)\nthis:\n  has_start_points x \\<or> x = 0\n\ngoal (2 subgoals):\n 1. backward_terminating x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "thus \"x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  has_start_points x \\<or> x = 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x = 0 \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "assume \"x = 0\""], ["proof (state)\nthis:\n  x = 0\n\ngoal (2 subgoals):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n 2. x = 0 \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "assume \"has_start_points x\""], ["proof (state)\nthis:\n  has_start_points x\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "hence aux1: \"1 = 1;x\\<^sup>T;-(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  has_start_points x\n\ngoal (1 subgoal):\n 1. has_end_points (x\\<^sup>T)", "by (metis comp_assoc conv_compl conv_contrav conv_one)"], ["proof (state)\nthis:\n  has_end_points (x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "have \"x\\<^sup>T = x\\<^sup>T \\<cdot> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T = x\\<^sup>T \\<cdot> 1", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>T = x\\<^sup>T \\<cdot> 1\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  x\\<^sup>T = x\\<^sup>T \\<cdot> 1\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "have \"... \\<le> (x\\<^sup>T;-(1;x) \\<cdot> 1;x\\<^sup>T);-(x\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<cdot> 1\n    \\<le> (x\\<^sup>T ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)", "by (metis inf.commute aux1 conv_compl conv_contrav conv_invol conv_one modular_2_var)"], ["proof (state)\nthis:\n  x\\<^sup>T \\<cdot> 1\n  \\<le> (x\\<^sup>T ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  x\\<^sup>T \\<cdot> 1\n  \\<le> (x\\<^sup>T ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "have \"... = (x\\<^sup>T;1 \\<cdot> -(1;x) \\<cdot> 1;x\\<^sup>T);-(x\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1) =\n    (x\\<^sup>T ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ;\n    - (x\\<^sup>T ; 1)", "by (metis comp_assoc conv_compl conv_contrav conv_invol conv_one inf.commute inf_top_left one_compl ra_1)"], ["proof (state)\nthis:\n  (x\\<^sup>T ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1) =\n  (x\\<^sup>T ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ;\n  - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T ; - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ; - (x\\<^sup>T ; 1) =\n  (x\\<^sup>T ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ;\n  - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "from assms"], ["proof (chain)\npicking this:\n  path x", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  path x\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ;\n    - (x\\<^sup>T ; 1)\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "using backward_terminating_iff3_aux inf.commute inf.assoc mult_isor"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  ?x\\<^sup>T ; 1 \\<cdot> 1 ; ?x\\<^sup>T \\<cdot> - (1 ; ?x)\n  \\<le> ?x\\<^sup>T\\<^sup>\\<star>\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ;\n    - (x\\<^sup>T ; 1)\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "by fastforce"], ["proof (state)\nthis:\n  (x\\<^sup>T ; 1 \\<cdot> - (1 ; x) \\<cdot> 1 ; x\\<^sup>T) ;\n  - (x\\<^sup>T ; 1)\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. has_start_points x \\<Longrightarrow>\n    x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "show \"x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)", "."], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have 1: \"-(1;x) \\<cdot> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (1 ; x) \\<cdot> x = 0", "by (simp add: galois_aux2 inf.commute maddux_21)"], ["proof (state)\nthis:\n  - (1 ; x) \\<cdot> x = 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "assume \"x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1)\""], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "hence \"x = -(1;x);x\\<^sup>\\<star> \\<cdot> x\""], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. x = - (1 ; x) ; x\\<^sup>\\<star> \\<cdot> x", "by (metis (mono_tags, lifting) conv_compl conv_contrav conv_iso conv_one inf.absorb2 star_conv)"], ["proof (state)\nthis:\n  x = - (1 ; x) ; x\\<^sup>\\<star> \\<cdot> x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "also"], ["proof (state)\nthis:\n  x = - (1 ; x) ; x\\<^sup>\\<star> \\<cdot> x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have \"... = (-(1;x);x\\<^sup>+ + -(1;x);1') \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (1 ; x) ; x\\<^sup>\\<star> \\<cdot> x =\n    (- (1 ; x) ; x\\<^sup>+ + - (1 ; x) ; 1') \\<cdot> x", "by (metis distrib_left star_unfoldl_eq sup_commute)"], ["proof (state)\nthis:\n  - (1 ; x) ; x\\<^sup>\\<star> \\<cdot> x =\n  (- (1 ; x) ; x\\<^sup>+ + - (1 ; x) ; 1') \\<cdot> x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "also"], ["proof (state)\nthis:\n  - (1 ; x) ; x\\<^sup>\\<star> \\<cdot> x =\n  (- (1 ; x) ; x\\<^sup>+ + - (1 ; x) ; 1') \\<cdot> x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have \"... = -(1;x);x\\<^sup>+ \\<cdot> x + -(1;x) \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (1 ; x) ; x\\<^sup>+ + - (1 ; x) ; 1') \\<cdot> x =\n    - (1 ; x) ; x\\<^sup>+ \\<cdot> x + - (1 ; x) \\<cdot> x", "by (simp add: inf_sup_distrib2)"], ["proof (state)\nthis:\n  (- (1 ; x) ; x\\<^sup>+ + - (1 ; x) ; 1') \\<cdot> x =\n  - (1 ; x) ; x\\<^sup>+ \\<cdot> x + - (1 ; x) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "also"], ["proof (state)\nthis:\n  (- (1 ; x) ; x\\<^sup>+ + - (1 ; x) ; 1') \\<cdot> x =\n  - (1 ; x) ; x\\<^sup>+ \\<cdot> x + - (1 ; x) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have \"... \\<le> -(1;x);x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (1 ; x) ; x\\<^sup>+ \\<cdot> x + - (1 ; x) \\<cdot> x\n    \\<le> - (1 ; x) ; x\\<^sup>+", "using 1"], ["proof (prove)\nusing this:\n  - (1 ; x) \\<cdot> x = 0\n\ngoal (1 subgoal):\n 1. - (1 ; x) ; x\\<^sup>+ \\<cdot> x + - (1 ; x) \\<cdot> x\n    \\<le> - (1 ; x) ; x\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  - (1 ; x) ; x\\<^sup>+ \\<cdot> x + - (1 ; x) \\<cdot> x\n  \\<le> - (1 ; x) ; x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "also"], ["proof (state)\nthis:\n  - (1 ; x) ; x\\<^sup>+ \\<cdot> x + - (1 ; x) \\<cdot> x\n  \\<le> - (1 ; x) ; x\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "have \"... \\<le> -(1;x);x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (1 ; x) ; x\\<^sup>+ \\<le> - (1 ; x) ; x ; 1", "by (simp add: mult_assoc mult_isol star_slide_var)"], ["proof (state)\nthis:\n  - (1 ; x) ; x\\<^sup>+ \\<le> - (1 ; x) ; x ; 1\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<Longrightarrow>\n    backward_terminating x", "finally"], ["proof (chain)\npicking this:\n  backward_terminating x", "show \"backward_terminating x\""], ["proof (prove)\nusing this:\n  backward_terminating x\n\ngoal (1 subgoal):\n 1. backward_terminating x", "."], ["proof (state)\nthis:\n  backward_terminating x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma backward_terminating_iff4:\n  assumes \"path x\"\n    shows \"backward_terminating x \\<longleftrightarrow> x \\<le> -(1;x);x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_terminating x = (x \\<le> - (1 ; x) ; x\\<^sup>\\<star>)", "apply (subst backward_terminating_iff3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. path x\n 2. (x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)) =\n    (x \\<le> - (1 ; x) ; x\\<^sup>\\<star>)", "apply (rule assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)) =\n    (x \\<le> - (1 ; x) ; x\\<^sup>\\<star>)", "by (metis (mono_tags, lifting) conv_compl conv_iso star_conv conv_contrav conv_one)"], ["", "lemma forward_terminating_iff1:\n  assumes \"path x\"\n    shows \"forward_terminating x \\<longleftrightarrow> has_end_points x \\<or> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forward_terminating x = (has_end_points x \\<or> x = 0)", "by (metis comp_assoc eq_refl le_bot one_compl tarski top_greatest)"], ["", "lemma forward_terminating_iff2:\n  assumes \"path x\"\n    shows \"forward_terminating x \\<longleftrightarrow> x\\<^sup>T \\<le> x\\<^sup>\\<star>;-(x;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forward_terminating x = (x\\<^sup>T \\<le> x\\<^sup>\\<star> ; - (x ; 1))", "by (metis assms backward_terminating_iff1 backward_terminating_iff2 end_point_iff2\n          forward_terminating_iff1 compl_bot_eq conv_compl conv_invol conv_one conv_path\n          double_compl start_point_iff2)"], ["", "lemma forward_terminating_iff3:\n  assumes \"path x\"\n    shows \"forward_terminating x \\<longleftrightarrow> x \\<le> x\\<^sup>\\<star>;-(x;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forward_terminating x = (x \\<le> x\\<^sup>\\<star> ; - (x ; 1))", "by (metis assms backward_terminating_iff1 backward_terminating_iff3 end_point_iff2\n          forward_terminating_iff1 compl_bot_eq conv_compl conv_invol conv_one conv_path\n          double_compl start_point_iff2)"], ["", "lemma forward_terminating_iff4:\n  assumes \"path x\"\n    shows \"forward_terminating x \\<longleftrightarrow> x \\<le> -(1;x\\<^sup>T);x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forward_terminating x =\n    (x \\<le> - (1 ; x\\<^sup>T) ; x\\<^sup>T\\<^sup>\\<star>)", "using forward_terminating_iff2 conv_contrav conv_iso star_conv assms conv_compl"], ["proof (prove)\nusing this:\n  path ?x \\<Longrightarrow>\n  forward_terminating ?x = (?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> ; - (?x ; 1))\n  (?x ; ?y)\\<^sup>T = ?y\\<^sup>T ; ?x\\<^sup>T\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n  (?x\\<^sup>\\<star>)\\<^sup>T = ?x\\<^sup>T\\<^sup>\\<star>\n  path x\n  (- ?x)\\<^sup>T = - ?x\\<^sup>T\n\ngoal (1 subgoal):\n 1. forward_terminating x =\n    (x \\<le> - (1 ; x\\<^sup>T) ; x\\<^sup>T\\<^sup>\\<star>)", "by force"], ["", "lemma terminating_iff1:\n  assumes \"path x\"\n    shows \"terminating x \\<longleftrightarrow> has_start_end_points x \\<or> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating x = (has_start_end_points x \\<or> x = 0)", "using assms backward_terminating_iff1 forward_terminating_iff1"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  backward_terminating ?x = (has_start_points ?x \\<or> ?x = 0)\n  path ?x \\<Longrightarrow>\n  forward_terminating ?x = (has_end_points ?x \\<or> ?x = 0)\n\ngoal (1 subgoal):\n 1. terminating x = (has_start_end_points x \\<or> x = 0)", "by fastforce"], ["", "lemma terminating_iff2:\n  assumes \"path x\"\n    shows \"terminating x \\<longleftrightarrow> x \\<le> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1) \\<cdot> -(1;x\\<^sup>T);x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating x =\n    (x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<cdot>\n             - (1 ; x\\<^sup>T) ; x\\<^sup>T\\<^sup>\\<star>)", "using assms backward_terminating_iff2 forward_terminating_iff2 conv_compl conv_iso star_conv"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  backward_terminating ?x =\n  (?x \\<le> ?x\\<^sup>T\\<^sup>\\<star> ; - (?x\\<^sup>T ; 1))\n  path ?x \\<Longrightarrow>\n  forward_terminating ?x = (?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> ; - (?x ; 1))\n  (- ?x)\\<^sup>T = - ?x\\<^sup>T\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n  (?x\\<^sup>\\<star>)\\<^sup>T = ?x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. terminating x =\n    (x \\<le> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<cdot>\n             - (1 ; x\\<^sup>T) ; x\\<^sup>T\\<^sup>\\<star>)", "by force"], ["", "lemma terminating_iff3:\n  assumes \"path x\"\n    shows \"terminating x \\<longleftrightarrow> x \\<le> x\\<^sup>\\<star>;-(x;1) \\<cdot> -(1;x);x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminating x =\n    (x \\<le> x\\<^sup>\\<star> ; - (x ; 1) \\<cdot>\n             - (1 ; x) ; x\\<^sup>\\<star>)", "using assms backward_terminating_iff4 forward_terminating_iff3"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  backward_terminating ?x = (?x \\<le> - (1 ; ?x) ; ?x\\<^sup>\\<star>)\n  path ?x \\<Longrightarrow>\n  forward_terminating ?x = (?x \\<le> ?x\\<^sup>\\<star> ; - (?x ; 1))\n\ngoal (1 subgoal):\n 1. terminating x =\n    (x \\<le> x\\<^sup>\\<star> ; - (x ; 1) \\<cdot>\n             - (1 ; x) ; x\\<^sup>\\<star>)", "by fastforce"], ["", "lemma backward_terminating_path_irreflexive:\n  assumes \"backward_terminating_path x\"\n    shows \"x \\<le> -1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "have 1: \"x;x\\<^sup>T \\<le> 1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<le> 1'", "using assms is_inj_def path_def"], ["proof (prove)\nusing this:\n  backward_terminating_path x\n  is_inj ?x \\<equiv> ?x ; ?x\\<^sup>T \\<le> 1'\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<le> 1'", "by blast"], ["proof (state)\nthis:\n  x ; x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "have \"x;(x\\<^sup>T \\<cdot> 1') \\<le> x;x\\<^sup>T \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; (x\\<^sup>T \\<cdot> 1') \\<le> x ; x\\<^sup>T \\<cdot> x", "by (metis inf.bounded_iff inf.commute mult_1_right mult_subdistl)"], ["proof (state)\nthis:\n  x ; (x\\<^sup>T \\<cdot> 1') \\<le> x ; x\\<^sup>T \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "also"], ["proof (state)\nthis:\n  x ; (x\\<^sup>T \\<cdot> 1') \\<le> x ; x\\<^sup>T \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "have \"... \\<le> 1' \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<cdot> x \\<le> 1' \\<cdot> x", "using 1 meet_iso"], ["proof (prove)\nusing this:\n  x ; x\\<^sup>T \\<le> 1'\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<cdot> x \\<le> 1' \\<cdot> x", "by blast"], ["proof (state)\nthis:\n  x ; x\\<^sup>T \\<cdot> x \\<le> 1' \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "also"], ["proof (state)\nthis:\n  x ; x\\<^sup>T \\<cdot> x \\<le> 1' \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "have \"... = 1' \\<cdot> x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1' \\<cdot> x = 1' \\<cdot> x\\<^sup>T", "by (metis conv_e conv_times inf.cobounded1 is_test_def test_eq_conv)"], ["proof (state)\nthis:\n  1' \\<cdot> x = 1' \\<cdot> x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "finally"], ["proof (chain)\npicking this:\n  x ; (x\\<^sup>T \\<cdot> 1') \\<le> 1' \\<cdot> x\\<^sup>T", "have 2: \"x\\<^sup>T;-(x\\<^sup>T \\<cdot> 1') \\<le> -(x\\<^sup>T \\<cdot> 1')\""], ["proof (prove)\nusing this:\n  x ; (x\\<^sup>T \\<cdot> 1') \\<le> 1' \\<cdot> x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; - (x\\<^sup>T \\<cdot> 1') \\<le> - (x\\<^sup>T \\<cdot> 1')", "by (metis compl_le_swap1 conv_galois_1 inf.commute)"], ["proof (state)\nthis:\n  x\\<^sup>T ; - (x\\<^sup>T \\<cdot> 1') \\<le> - (x\\<^sup>T \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "have \"x\\<^sup>T \\<cdot> 1' \\<le> x\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<cdot> 1' \\<le> x\\<^sup>T ; 1", "by (simp add: le_infI1 maddux_20)"], ["proof (state)\nthis:\n  x\\<^sup>T \\<cdot> 1' \\<le> x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "hence \"-(x\\<^sup>T;1) \\<le> -(x\\<^sup>T \\<cdot> 1')\""], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<cdot> 1' \\<le> x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. - (x\\<^sup>T ; 1) \\<le> - (x\\<^sup>T \\<cdot> 1')", "using compl_mono"], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<cdot> 1' \\<le> x\\<^sup>T ; 1\n  ?x \\<le> ?y \\<Longrightarrow> - ?y \\<le> - ?x\n\ngoal (1 subgoal):\n 1. - (x\\<^sup>T ; 1) \\<le> - (x\\<^sup>T \\<cdot> 1')", "by blast"], ["proof (state)\nthis:\n  - (x\\<^sup>T ; 1) \\<le> - (x\\<^sup>T \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "hence \"x\\<^sup>T;-(x\\<^sup>T \\<cdot> 1') + -(x\\<^sup>T;1) \\<le> -(x\\<^sup>T \\<cdot> 1')\""], ["proof (prove)\nusing this:\n  - (x\\<^sup>T ; 1) \\<le> - (x\\<^sup>T \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; - (x\\<^sup>T \\<cdot> 1') + - (x\\<^sup>T ; 1)\n    \\<le> - (x\\<^sup>T \\<cdot> 1')", "using 2"], ["proof (prove)\nusing this:\n  - (x\\<^sup>T ; 1) \\<le> - (x\\<^sup>T \\<cdot> 1')\n  x\\<^sup>T ; - (x\\<^sup>T \\<cdot> 1') \\<le> - (x\\<^sup>T \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; - (x\\<^sup>T \\<cdot> 1') + - (x\\<^sup>T ; 1)\n    \\<le> - (x\\<^sup>T \\<cdot> 1')", "by (simp add: le_supI)"], ["proof (state)\nthis:\n  x\\<^sup>T ; - (x\\<^sup>T \\<cdot> 1') + - (x\\<^sup>T ; 1)\n  \\<le> - (x\\<^sup>T \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "hence \"x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1) \\<le> -(x\\<^sup>T \\<cdot> 1')\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; - (x\\<^sup>T \\<cdot> 1') + - (x\\<^sup>T ; 1)\n  \\<le> - (x\\<^sup>T \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1)\n    \\<le> - (x\\<^sup>T \\<cdot> 1')", "by (simp add: rtc_inductl)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<le> - (x\\<^sup>T \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "hence \"x\\<^sup>T \\<cdot> 1' \\<cdot> x\\<^sup>T\\<^sup>\\<star>;-(x\\<^sup>T;1) = 0\""], ["proof (prove)\nusing this:\n  x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) \\<le> - (x\\<^sup>T \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<cdot> 1' \\<cdot>\n    x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) =\n    0", "by (simp add: compl_le_swap1 galois_aux)"], ["proof (state)\nthis:\n  x\\<^sup>T \\<cdot> 1' \\<cdot> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) =\n  0\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "hence \"x\\<^sup>T \\<cdot> 1' = 0\""], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<cdot> 1' \\<cdot> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) =\n  0\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<cdot> 1' = 0", "using assms backward_terminating_iff3 inf.order_iff le_infI1"], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<cdot> 1' \\<cdot> x\\<^sup>T\\<^sup>\\<star> ; - (x\\<^sup>T ; 1) =\n  0\n  backward_terminating_path x\n  path ?x \\<Longrightarrow>\n  backward_terminating ?x =\n  (?x\\<^sup>T \\<le> ?x\\<^sup>T\\<^sup>\\<star> ; - (?x\\<^sup>T ; 1))\n  (?a \\<le> ?b) = (?a = ?a \\<cdot> ?b)\n  ?a \\<le> ?x \\<Longrightarrow> ?a \\<cdot> ?b \\<le> ?x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<cdot> 1' = 0", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>T \\<cdot> 1' = 0\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "hence \"x \\<cdot> 1' = 0\""], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<cdot> 1' = 0\n\ngoal (1 subgoal):\n 1. x \\<cdot> 1' = 0", "by (simp add: conv_self_conjugate)"], ["proof (state)\nthis:\n  x \\<cdot> 1' = 0\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<cdot> 1' = 0\n\ngoal (1 subgoal):\n 1. x \\<le> - 1'", "by (simp add: galois_aux)"], ["proof (state)\nthis:\n  x \\<le> - 1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma forward_terminating_path_end_points_1:\n  assumes \"forward_terminating_path x\"\n    shows \"x \\<le> x\\<^sup>+;end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "have 1: \"-(x;1) \\<cdot> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x ; 1) \\<cdot> x = 0", "by (simp add: galois_aux maddux_20)"], ["proof (state)\nthis:\n  - (x ; 1) \\<cdot> x = 0\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "have \"x = x\\<^sup>\\<star>;-(x;1) \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x\\<^sup>\\<star> ; - (x ; 1) \\<cdot> x", "using assms forward_terminating_iff3 inf.absorb2"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  path ?x \\<Longrightarrow>\n  forward_terminating ?x = (?x \\<le> ?x\\<^sup>\\<star> ; - (?x ; 1))\n  ?b \\<le> ?a \\<Longrightarrow> ?a \\<cdot> ?b = ?b\n\ngoal (1 subgoal):\n 1. x = x\\<^sup>\\<star> ; - (x ; 1) \\<cdot> x", "by fastforce"], ["proof (state)\nthis:\n  x = x\\<^sup>\\<star> ; - (x ; 1) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "also"], ["proof (state)\nthis:\n  x = x\\<^sup>\\<star> ; - (x ; 1) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "have \"... = (x\\<^sup>+;-(x;1) + 1';-(x;1)) \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> ; - (x ; 1) \\<cdot> x =\n    (x\\<^sup>+ ; - (x ; 1) + 1' ; - (x ; 1)) \\<cdot> x", "by (simp add: sup.commute)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; - (x ; 1) \\<cdot> x =\n  (x\\<^sup>+ ; - (x ; 1) + 1' ; - (x ; 1)) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> ; - (x ; 1) \\<cdot> x =\n  (x\\<^sup>+ ; - (x ; 1) + 1' ; - (x ; 1)) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "have \"... = x\\<^sup>+;-(x;1) \\<cdot> x + -(x;1) \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>+ ; - (x ; 1) + 1' ; - (x ; 1)) \\<cdot> x =\n    x\\<^sup>+ ; - (x ; 1) \\<cdot> x + - (x ; 1) \\<cdot> x", "using inf_sup_distrib2"], ["proof (prove)\nusing this:\n  (?y + ?z) \\<cdot> ?x = ?y \\<cdot> ?x + ?z \\<cdot> ?x\n\ngoal (1 subgoal):\n 1. (x\\<^sup>+ ; - (x ; 1) + 1' ; - (x ; 1)) \\<cdot> x =\n    x\\<^sup>+ ; - (x ; 1) \\<cdot> x + - (x ; 1) \\<cdot> x", "by fastforce"], ["proof (state)\nthis:\n  (x\\<^sup>+ ; - (x ; 1) + 1' ; - (x ; 1)) \\<cdot> x =\n  x\\<^sup>+ ; - (x ; 1) \\<cdot> x + - (x ; 1) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>+ ; - (x ; 1) + 1' ; - (x ; 1)) \\<cdot> x =\n  x\\<^sup>+ ; - (x ; 1) \\<cdot> x + - (x ; 1) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "have \"... = x\\<^sup>+;-(x;1) \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; - (x ; 1) \\<cdot> x + - (x ; 1) \\<cdot> x =\n    x\\<^sup>+ ; - (x ; 1) \\<cdot> x", "using 1"], ["proof (prove)\nusing this:\n  - (x ; 1) \\<cdot> x = 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; - (x ; 1) \\<cdot> x + - (x ; 1) \\<cdot> x =\n    x\\<^sup>+ ; - (x ; 1) \\<cdot> x", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>+ ; - (x ; 1) \\<cdot> x + - (x ; 1) \\<cdot> x =\n  x\\<^sup>+ ; - (x ; 1) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "also"], ["proof (state)\nthis:\n  x\\<^sup>+ ; - (x ; 1) \\<cdot> x + - (x ; 1) \\<cdot> x =\n  x\\<^sup>+ ; - (x ; 1) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "have \"... \\<le> x\\<^sup>+;(-(x;1) \\<cdot> (x\\<^sup>+)\\<^sup>T;x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; - (x ; 1) \\<cdot> x\n    \\<le> x\\<^sup>+ ; (- (x ; 1) \\<cdot> (x\\<^sup>+)\\<^sup>T ; x)", "using modular_1_var"], ["proof (prove)\nusing this:\n  ?x ; ?y \\<cdot> ?z \\<le> ?x ; (?y \\<cdot> ?x\\<^sup>T ; ?z)\n\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; - (x ; 1) \\<cdot> x\n    \\<le> x\\<^sup>+ ; (- (x ; 1) \\<cdot> (x\\<^sup>+)\\<^sup>T ; x)", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>+ ; - (x ; 1) \\<cdot> x\n  \\<le> x\\<^sup>+ ; (- (x ; 1) \\<cdot> (x\\<^sup>+)\\<^sup>T ; x)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "also"], ["proof (state)\nthis:\n  x\\<^sup>+ ; - (x ; 1) \\<cdot> x\n  \\<le> x\\<^sup>+ ; (- (x ; 1) \\<cdot> (x\\<^sup>+)\\<^sup>T ; x)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "have \"... = x\\<^sup>+;(-(x;1) \\<cdot> x\\<^sup>T\\<^sup>+;x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; (- (x ; 1) \\<cdot> (x\\<^sup>+)\\<^sup>T ; x) =\n    x\\<^sup>+ ; (- (x ; 1) \\<cdot> x\\<^sup>T\\<^sup>+ ; x)", "using plus_conv"], ["proof (prove)\nusing this:\n  (?x\\<^sup>+)\\<^sup>T = ?x\\<^sup>T\\<^sup>+\n\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; (- (x ; 1) \\<cdot> (x\\<^sup>+)\\<^sup>T ; x) =\n    x\\<^sup>+ ; (- (x ; 1) \\<cdot> x\\<^sup>T\\<^sup>+ ; x)", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>+ ; (- (x ; 1) \\<cdot> (x\\<^sup>+)\\<^sup>T ; x) =\n  x\\<^sup>+ ; (- (x ; 1) \\<cdot> x\\<^sup>T\\<^sup>+ ; x)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "also"], ["proof (state)\nthis:\n  x\\<^sup>+ ; (- (x ; 1) \\<cdot> (x\\<^sup>+)\\<^sup>T ; x) =\n  x\\<^sup>+ ; (- (x ; 1) \\<cdot> x\\<^sup>T\\<^sup>+ ; x)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "have \"... \\<le> x\\<^sup>+;end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; (- (x ; 1) \\<cdot> x\\<^sup>T\\<^sup>+ ; x)\n    \\<le> x\\<^sup>+ ; end_points x", "by (metis inf_commute inf_top_right modular_1' mult_subdistl plus_conv plus_top)"], ["proof (state)\nthis:\n  x\\<^sup>+ ; (- (x ; 1) \\<cdot> x\\<^sup>T\\<^sup>+ ; x)\n  \\<le> x\\<^sup>+ ; end_points x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "finally"], ["proof (chain)\npicking this:\n  x \\<le> x\\<^sup>+ ; end_points x", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<le> x\\<^sup>+ ; end_points x\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>+ ; end_points x", "."], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>+ ; end_points x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma forward_terminating_path_end_points_2:\n  assumes \"forward_terminating_path x\"\n    shows \"x\\<^sup>T \\<le> x\\<^sup>\\<star>;end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "have \"x\\<^sup>T \\<le> x\\<^sup>T;x;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>T ; x ; x\\<^sup>T", "by (metis conv_invol x_leq_triple_x)"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>T ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>T ; x ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "have \"... \\<le> x\\<^sup>T;x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>T \\<le> x\\<^sup>T ; x ; 1", "using mult_isol top_greatest"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z ; ?x \\<le> ?z ; ?y\n  ?a \\<le> 1\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; x\\<^sup>T \\<le> x\\<^sup>T ; x ; 1", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T \\<le> x\\<^sup>T ; x ; 1\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; x\\<^sup>T \\<le> x\\<^sup>T ; x ; 1\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "have \"... \\<le> x\\<^sup>T;x\\<^sup>+;end_points x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x ; 1 \\<le> x\\<^sup>T ; x\\<^sup>+ ; end_points x ; 1", "by (metis assms forward_terminating_path_end_points_1 comp_assoc mult_isol mult_isor)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; 1 \\<le> x\\<^sup>T ; x\\<^sup>+ ; end_points x ; 1\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x ; 1 \\<le> x\\<^sup>T ; x\\<^sup>+ ; end_points x ; 1\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "have \"... = x\\<^sup>T;x\\<^sup>+;end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x\\<^sup>+ ; end_points x ; 1 =\n    x\\<^sup>T ; x\\<^sup>+ ; end_points x", "by (metis inf_commute mult_assoc one_compl ra_1)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x\\<^sup>+ ; end_points x ; 1 =\n  x\\<^sup>T ; x\\<^sup>+ ; end_points x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; x\\<^sup>+ ; end_points x ; 1 =\n  x\\<^sup>T ; x\\<^sup>+ ; end_points x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "have \"... \\<le> x\\<^sup>\\<star>;end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x\\<^sup>+ ; end_points x\n    \\<le> x\\<^sup>\\<star> ; end_points x", "by (metis assms comp_assoc compl_le_swap1 conv_galois_1 conv_invol p_fun_compl path_def)"], ["proof (state)\nthis:\n  x\\<^sup>T ; x\\<^sup>+ ; end_points x \\<le> x\\<^sup>\\<star> ; end_points x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "show ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x", "."], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> x\\<^sup>\\<star> ; end_points x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma forward_terminating_path_end_points_3:\n  assumes \"forward_terminating_path x\"\n  shows \"start_points x \\<le> x\\<^sup>+;end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<le> x\\<^sup>+ ; end_points x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. start_points x \\<le> x\\<^sup>+ ; end_points x", "have \"start_points x \\<le> x\\<^sup>+;end_points x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<le> x\\<^sup>+ ; end_points x ; 1", "using assms forward_terminating_path_end_points_1 comp_assoc mult_isor inf.coboundedI1"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  forward_terminating_path ?x \\<Longrightarrow>\n  ?x \\<le> ?x\\<^sup>+ ; end_points ?x\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n  ?a \\<le> ?c \\<Longrightarrow> ?a \\<cdot> ?b \\<le> ?c\n\ngoal (1 subgoal):\n 1. start_points x \\<le> x\\<^sup>+ ; end_points x ; 1", "by blast"], ["proof (state)\nthis:\n  start_points x \\<le> x\\<^sup>+ ; end_points x ; 1\n\ngoal (1 subgoal):\n 1. start_points x \\<le> x\\<^sup>+ ; end_points x", "also"], ["proof (state)\nthis:\n  start_points x \\<le> x\\<^sup>+ ; end_points x ; 1\n\ngoal (1 subgoal):\n 1. start_points x \\<le> x\\<^sup>+ ; end_points x", "have \"... = x\\<^sup>+;end_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+ ; end_points x ; 1 = x\\<^sup>+ ; end_points x", "by (metis inf_commute mult_assoc one_compl ra_1 )"], ["proof (state)\nthis:\n  x\\<^sup>+ ; end_points x ; 1 = x\\<^sup>+ ; end_points x\n\ngoal (1 subgoal):\n 1. start_points x \\<le> x\\<^sup>+ ; end_points x", "finally"], ["proof (chain)\npicking this:\n  start_points x \\<le> x\\<^sup>+ ; end_points x", "show ?thesis"], ["proof (prove)\nusing this:\n  start_points x \\<le> x\\<^sup>+ ; end_points x\n\ngoal (1 subgoal):\n 1. start_points x \\<le> x\\<^sup>+ ; end_points x", "."], ["proof (state)\nthis:\n  start_points x \\<le> x\\<^sup>+ ; end_points x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma backward_terminating_path_start_points_1:\n  assumes \"backward_terminating_path x\"\n    shows \"x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>+;start_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>+ ; start_points x", "using assms forward_terminating_path_end_points_1 conv_backward_terminating_path"], ["proof (prove)\nusing this:\n  backward_terminating_path x\n  forward_terminating_path ?x \\<Longrightarrow>\n  ?x \\<le> ?x\\<^sup>+ ; end_points ?x\n  backward_terminating_path ?x = forward_terminating_path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>+ ; start_points x", "by fastforce"], ["", "lemma backward_terminating_path_start_points_2:\n  assumes \"backward_terminating_path x\"\n    shows \"x \\<le> x\\<^sup>T\\<^sup>\\<star>;start_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; start_points x", "using assms forward_terminating_path_end_points_2 conv_backward_terminating_path"], ["proof (prove)\nusing this:\n  backward_terminating_path x\n  forward_terminating_path ?x \\<Longrightarrow>\n  ?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> ; end_points ?x\n  backward_terminating_path ?x = forward_terminating_path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; start_points x", "by fastforce"], ["", "lemma backward_terminating_path_start_points_3:\n  assumes \"backward_terminating_path x\"\n    shows \"end_points x \\<le> x\\<^sup>T\\<^sup>+;start_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points x \\<le> x\\<^sup>T\\<^sup>+ ; start_points x", "using assms forward_terminating_path_end_points_3 conv_backward_terminating_path"], ["proof (prove)\nusing this:\n  backward_terminating_path x\n  forward_terminating_path ?x \\<Longrightarrow>\n  start_points ?x \\<le> ?x\\<^sup>+ ; end_points ?x\n  backward_terminating_path ?x = forward_terminating_path (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. end_points x \\<le> x\\<^sup>T\\<^sup>+ ; start_points x", "by fastforce"], ["", "(* lemma not shown in the paper; not necessary for other theorems *)"], ["", "lemma path_aux1a:\n assumes \"forward_terminating_path x\"\n   shows \"x \\<noteq> 0 \\<longleftrightarrow> end_points x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<noteq> 0) = (end_points x \\<noteq> 0)", "using assms end_point_iff2 forward_terminating_iff1 end_point_iff1 galois_aux2"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  path ?x \\<Longrightarrow> is_point (end_points ?x) = has_end_points ?x\n  path ?x \\<Longrightarrow>\n  forward_terminating ?x = (has_end_points ?x \\<or> ?x = 0)\n  path ?x \\<Longrightarrow>\n  is_point (end_points ?x) = (\\<not> no_end_points ?x)\n  (?x \\<cdot> - ?y = 0) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. (x \\<noteq> 0) = (end_points x \\<noteq> 0)", "by force"], ["", "(* lemma not shown in the paper; not necessary for other theorems *)"], ["", "lemma path_aux1b:\n  assumes \"backward_terminating_path y\"\n    shows \"y \\<noteq> 0 \\<longleftrightarrow> start_points y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<noteq> 0) = (start_points y \\<noteq> 0)", "using assms start_point_iff2 backward_terminating_iff1 start_point_iff1 galois_aux2"], ["proof (prove)\nusing this:\n  backward_terminating_path y\n  path ?x \\<Longrightarrow> is_point (start_points ?x) = has_start_points ?x\n  path ?x \\<Longrightarrow>\n  backward_terminating ?x = (has_start_points ?x \\<or> ?x = 0)\n  path ?x \\<Longrightarrow>\n  is_point (start_points ?x) = (\\<not> no_start_points ?x)\n  (?x \\<cdot> - ?y = 0) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. (y \\<noteq> 0) = (start_points y \\<noteq> 0)", "by force"], ["", "(* lemma not shown in the paper; not necessary for other theorems *)"], ["", "lemma path_aux1:\n  assumes \"forward_terminating_path x\"\n      and \"backward_terminating_path y\"\n    shows \"x \\<noteq> 0 \\<or> y \\<noteq> 0 \\<longleftrightarrow> end_points x \\<noteq> 0 \\<or> start_points y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<noteq> 0 \\<or> y \\<noteq> 0) =\n    (end_points x \\<noteq> 0 \\<or> start_points y \\<noteq> 0)", "using assms path_aux1a path_aux1b"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  backward_terminating_path y\n  forward_terminating_path ?x \\<Longrightarrow>\n  (?x \\<noteq> 0) = (end_points ?x \\<noteq> 0)\n  backward_terminating_path ?y \\<Longrightarrow>\n  (?y \\<noteq> 0) = (start_points ?y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (x \\<noteq> 0 \\<or> y \\<noteq> 0) =\n    (end_points x \\<noteq> 0 \\<or> start_points y \\<noteq> 0)", "by blast"], ["", "text \\<open>Equivalences for \\<open>finite\\<close>\\<close>"], ["", "lemma backward_finite_iff_msc:\n  \"backward_finite x \\<longleftrightarrow> many_strongly_connected x \\<or> backward_terminating x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_finite x =\n    (many_strongly_connected x \\<or> backward_terminating x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. backward_finite x \\<Longrightarrow>\n    many_strongly_connected x \\<or> backward_terminating x\n 2. many_strongly_connected x \\<or> backward_terminating x \\<Longrightarrow>\n    backward_finite x", "assume 1: \"backward_finite x\""], ["proof (state)\nthis:\n  backward_finite x\n\ngoal (2 subgoals):\n 1. backward_finite x \\<Longrightarrow>\n    many_strongly_connected x \\<or> backward_terminating x\n 2. many_strongly_connected x \\<or> backward_terminating x \\<Longrightarrow>\n    backward_finite x", "thus \"many_strongly_connected x \\<or> backward_terminating x\""], ["proof (prove)\nusing this:\n  backward_finite x\n\ngoal (1 subgoal):\n 1. many_strongly_connected x \\<or> backward_terminating x", "proof (cases \"-(1;x);x;1 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 = 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x\n 2. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x", "assume \"-(1;x);x;1 = 0\""], ["proof (state)\nthis:\n  - (1 ; x) ; x ; 1 = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 = 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x\n 2. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x", "thus \"many_strongly_connected x \\<or> backward_terminating x\""], ["proof (prove)\nusing this:\n  - (1 ; x) ; x ; 1 = 0\n\ngoal (1 subgoal):\n 1. many_strongly_connected x \\<or> backward_terminating x", "using 1"], ["proof (prove)\nusing this:\n  - (1 ; x) ; x ; 1 = 0\n  backward_finite x\n\ngoal (1 subgoal):\n 1. many_strongly_connected x \\<or> backward_terminating x", "by (metis conv_invol many_strongly_connected_iff_1 sup_bot_right)"], ["proof (state)\nthis:\n  many_strongly_connected x \\<or> backward_terminating x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x", "assume \"-(1;x);x;1 \\<noteq> 0\""], ["proof (state)\nthis:\n  - (1 ; x) ; x ; 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x", "hence \"1;-(1;x);x;1 = 1\""], ["proof (prove)\nusing this:\n  - (1 ; x) ; x ; 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 ; - (1 ; x) ; x ; 1 = 1", "by (simp add: comp_assoc tarski)"], ["proof (state)\nthis:\n  1 ; - (1 ; x) ; x ; 1 = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x", "hence \"-(1;x);x;1 = 1\""], ["proof (prove)\nusing this:\n  1 ; - (1 ; x) ; x ; 1 = 1\n\ngoal (1 subgoal):\n 1. - (1 ; x) ; x ; 1 = 1", "by (metis comp_assoc conv_compl conv_contrav conv_invol conv_one one_compl)"], ["proof (state)\nthis:\n  - (1 ; x) ; x ; 1 = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>backward_finite x; - (1 ; x) ; x ; 1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> many_strongly_connected x \\<or> backward_terminating x", "thus \"many_strongly_connected x \\<or> backward_terminating x\""], ["proof (prove)\nusing this:\n  - (1 ; x) ; x ; 1 = 1\n\ngoal (1 subgoal):\n 1. many_strongly_connected x \\<or> backward_terminating x", "using 1"], ["proof (prove)\nusing this:\n  - (1 ; x) ; x ; 1 = 1\n  backward_finite x\n\ngoal (1 subgoal):\n 1. many_strongly_connected x \\<or> backward_terminating x", "by simp"], ["proof (state)\nthis:\n  many_strongly_connected x \\<or> backward_terminating x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  many_strongly_connected x \\<or> backward_terminating x\n\ngoal (1 subgoal):\n 1. many_strongly_connected x \\<or> backward_terminating x \\<Longrightarrow>\n    backward_finite x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. many_strongly_connected x \\<or> backward_terminating x \\<Longrightarrow>\n    backward_finite x", "assume \"many_strongly_connected x \\<or> backward_terminating x\""], ["proof (state)\nthis:\n  many_strongly_connected x \\<or> backward_terminating x\n\ngoal (1 subgoal):\n 1. many_strongly_connected x \\<or> backward_terminating x \\<Longrightarrow>\n    backward_finite x", "thus \"backward_finite x\""], ["proof (prove)\nusing this:\n  many_strongly_connected x \\<or> backward_terminating x\n\ngoal (1 subgoal):\n 1. backward_finite x", "by (metis star_ext sup.coboundedI1 sup.coboundedI2)"], ["proof (state)\nthis:\n  backward_finite x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma forward_finite_iff_msc:\n  \"forward_finite x \\<longleftrightarrow> many_strongly_connected x \\<or> forward_terminating x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forward_finite x =\n    (many_strongly_connected x \\<or> forward_terminating x)", "by (metis backward_finite_iff_msc conv_backward_finite conv_backward_terminating conv_invol)"], ["", "lemma finite_iff_msc:\n  \"finite x \\<longleftrightarrow> many_strongly_connected x \\<or> terminating x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relation_algebra_rtc_class.finite x =\n    (many_strongly_connected x \\<or> terminating x)", "using backward_finite_iff_msc forward_finite_iff_msc finite_iff"], ["proof (prove)\nusing this:\n  backward_finite ?x =\n  (many_strongly_connected ?x \\<or> backward_terminating ?x)\n  forward_finite ?x =\n  (many_strongly_connected ?x \\<or> forward_terminating ?x)\n  relation_algebra_rtc_class.finite ?x =\n  (backward_finite ?x \\<and> forward_finite ?x)\n\ngoal (1 subgoal):\n 1. relation_algebra_rtc_class.finite x =\n    (many_strongly_connected x \\<or> terminating x)", "by fastforce"], ["", "text \\<open>Path concatenation\\<close>"], ["", "lemma path_concatenation:\n  assumes \"forward_terminating_path x\"\n      and \"backward_terminating_path y\"\n      and \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> (x\\<^sup>T;1 + y;1) \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"path (x+y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x + y)", "proof (cases \"y = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y = 0 \\<Longrightarrow> path (x + y)\n 2. y \\<noteq> 0 \\<Longrightarrow> path (x + y)", "assume \"y = 0\""], ["proof (state)\nthis:\n  y = 0\n\ngoal (2 subgoals):\n 1. y = 0 \\<Longrightarrow> path (x + y)\n 2. y \\<noteq> 0 \\<Longrightarrow> path (x + y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  y = 0\n\ngoal (1 subgoal):\n 1. path (x + y)", "using assms(1)"], ["proof (prove)\nusing this:\n  y = 0\n  forward_terminating_path x\n\ngoal (1 subgoal):\n 1. path (x + y)", "by fastforce"], ["proof (state)\nthis:\n  path (x + y)\n\ngoal (1 subgoal):\n 1. y \\<noteq> 0 \\<Longrightarrow> path (x + y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> 0 \\<Longrightarrow> path (x + y)", "assume as: \"y \\<noteq> 0\""], ["proof (state)\nthis:\n  y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y \\<noteq> 0 \\<Longrightarrow> path (x + y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x + y)", "proof (unfold path_def; intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. connected (x + y)\n 2. is_p_fun (x + y)\n 3. is_inj (x + y)", "from assms(4)"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0", "have a: \"x;1 \\<cdot> x\\<^sup>T;1 \\<cdot> y\\<^sup>T;1 + x;1 \\<cdot> y;1 \\<cdot> y\\<^sup>T;1= 0\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n    x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 =\n    0", "by (simp add: inf_sup_distrib1 inf_sup_distrib2)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 =\n  0\n\ngoal (3 subgoals):\n 1. connected (x + y)\n 2. is_p_fun (x + y)\n 3. is_inj (x + y)", "hence aux1: \"x;1 \\<cdot> x\\<^sup>T;1 \\<cdot> y\\<^sup>T;1 = 0\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 =\n  0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "using sup_eq_bot_iff"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 =\n  0\n  (?x + ?y = 0) = (?x = 0 \\<and> ?y = 0)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "by blast"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (3 subgoals):\n 1. connected (x + y)\n 2. is_p_fun (x + y)\n 3. is_inj (x + y)", "from a"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 =\n  0", "have aux2: \"x;1 \\<cdot> y;1 \\<cdot> y\\<^sup>T;1= 0\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 =\n  0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "using sup_eq_bot_iff"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> x\\<^sup>T ; 1 \\<cdot> y\\<^sup>T ; 1 +\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 =\n  0\n  (?x + ?y = 0) = (?x = 0 \\<and> ?y = 0)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "by blast"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (3 subgoals):\n 1. connected (x + y)\n 2. is_p_fun (x + y)\n 3. is_inj (x + y)", "show \"is_inj (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_inj (x + y)", "proof (unfold is_inj_def; auto simp add: distrib_left)"], ["proof (state)\ngoal (4 subgoals):\n 1. x ; x\\<^sup>T \\<le> 1'\n 2. y ; x\\<^sup>T \\<le> 1'\n 3. x ; y\\<^sup>T \\<le> 1'\n 4. y ; y\\<^sup>T \\<le> 1'", "show \"x;x\\<^sup>T \\<le> 1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<le> 1'", "using assms(1) path_def is_inj_def"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  is_inj ?x \\<equiv> ?x ; ?x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. x ; x\\<^sup>T \\<le> 1'", "by blast"], ["proof (state)\nthis:\n  x ; x\\<^sup>T \\<le> 1'\n\ngoal (3 subgoals):\n 1. y ; x\\<^sup>T \\<le> 1'\n 2. x ; y\\<^sup>T \\<le> 1'\n 3. y ; y\\<^sup>T \\<le> 1'", "show \"y;y\\<^sup>T \\<le> 1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ; y\\<^sup>T \\<le> 1'", "using assms(2) path_def is_inj_def"], ["proof (prove)\nusing this:\n  backward_terminating_path y\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  is_inj ?x \\<equiv> ?x ; ?x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. y ; y\\<^sup>T \\<le> 1'", "by blast"], ["proof (state)\nthis:\n  y ; y\\<^sup>T \\<le> 1'\n\ngoal (2 subgoals):\n 1. y ; x\\<^sup>T \\<le> 1'\n 2. x ; y\\<^sup>T \\<le> 1'", "have \"y;x\\<^sup>T = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ; x\\<^sup>T = 0", "by (metis assms(3) aux1 annir comp_assoc conv_one le_bot modular_var_2 one_idem_mult\n                  path_concat_aux_2 schroeder_2)"], ["proof (state)\nthis:\n  y ; x\\<^sup>T = 0\n\ngoal (2 subgoals):\n 1. y ; x\\<^sup>T \\<le> 1'\n 2. x ; y\\<^sup>T \\<le> 1'", "thus \"y;x\\<^sup>T \\<le> 1'\""], ["proof (prove)\nusing this:\n  y ; x\\<^sup>T = 0\n\ngoal (1 subgoal):\n 1. y ; x\\<^sup>T \\<le> 1'", "using bot_least le_bot"], ["proof (prove)\nusing this:\n  y ; x\\<^sup>T = 0\n  0 \\<le> ?a\n  ?a \\<le> 0 \\<Longrightarrow> ?a = 0\n\ngoal (1 subgoal):\n 1. y ; x\\<^sup>T \\<le> 1'", "by blast"], ["proof (state)\nthis:\n  y ; x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. x ; y\\<^sup>T \\<le> 1'", "thus \"x;y\\<^sup>T \\<le> 1'\""], ["proof (prove)\nusing this:\n  y ; x\\<^sup>T \\<le> 1'\n\ngoal (1 subgoal):\n 1. x ; y\\<^sup>T \\<le> 1'", "using conv_iso"], ["proof (prove)\nusing this:\n  y ; x\\<^sup>T \\<le> 1'\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n\ngoal (1 subgoal):\n 1. x ; y\\<^sup>T \\<le> 1'", "by force"], ["proof (state)\nthis:\n  x ; y\\<^sup>T \\<le> 1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_inj (x + y)\n\ngoal (2 subgoals):\n 1. connected (x + y)\n 2. is_p_fun (x + y)", "show \"is_p_fun (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_p_fun (x + y)", "proof (unfold is_p_fun_def; auto simp add: distrib_left)"], ["proof (state)\ngoal (4 subgoals):\n 1. x\\<^sup>T ; x \\<le> 1'\n 2. y\\<^sup>T ; x \\<le> 1'\n 3. x\\<^sup>T ; y \\<le> 1'\n 4. y\\<^sup>T ; y \\<le> 1'", "show \"x\\<^sup>T;x \\<le> 1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x \\<le> 1'", "using assms(1) path_def is_p_fun_def"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  is_p_fun ?x \\<equiv> ?x\\<^sup>T ; ?x \\<le> 1'\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; x \\<le> 1'", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>T ; x \\<le> 1'\n\ngoal (3 subgoals):\n 1. y\\<^sup>T ; x \\<le> 1'\n 2. x\\<^sup>T ; y \\<le> 1'\n 3. y\\<^sup>T ; y \\<le> 1'", "show \"y\\<^sup>T;y \\<le> 1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>T ; y \\<le> 1'", "using assms(2) path_def is_p_fun_def"], ["proof (prove)\nusing this:\n  backward_terminating_path y\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  is_p_fun ?x \\<equiv> ?x\\<^sup>T ; ?x \\<le> 1'\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; y \\<le> 1'", "by blast"], ["proof (state)\nthis:\n  y\\<^sup>T ; y \\<le> 1'\n\ngoal (2 subgoals):\n 1. y\\<^sup>T ; x \\<le> 1'\n 2. x\\<^sup>T ; y \\<le> 1'", "have \"y\\<^sup>T;x \\<le> y\\<^sup>T;(y;1 \\<cdot> x;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>T ; x \\<le> y\\<^sup>T ; (y ; 1 \\<cdot> x ; 1)", "by (metis conjugation_prop2 inf.commute inf_top.left_neutral maddux_20 mult_isol order_trans\n                  schroeder_1_var)"], ["proof (state)\nthis:\n  y\\<^sup>T ; x \\<le> y\\<^sup>T ; (y ; 1 \\<cdot> x ; 1)\n\ngoal (2 subgoals):\n 1. y\\<^sup>T ; x \\<le> 1'\n 2. x\\<^sup>T ; y \\<le> 1'", "also"], ["proof (state)\nthis:\n  y\\<^sup>T ; x \\<le> y\\<^sup>T ; (y ; 1 \\<cdot> x ; 1)\n\ngoal (2 subgoals):\n 1. y\\<^sup>T ; x \\<le> 1'\n 2. x\\<^sup>T ; y \\<le> 1'", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>T ; (y ; 1 \\<cdot> x ; 1) = 0", "using assms(3) aux2 annir inf_commute path_concat_aux_1"], ["proof (prove)\nusing this:\n  end_points x = start_points y\n  x ; 1 \\<cdot> y ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n  ?x ; 0 = 0\n  ?x \\<cdot> ?y = ?y \\<cdot> ?x\n  \\<lbrakk>?x ; 1 \\<cdot> ?y ; 1 \\<cdot> ?y\\<^sup>T ; 1 = 0;\n   end_points ?x = start_points ?y\\<rbrakk>\n  \\<Longrightarrow> ?x ; 1 \\<cdot> ?y ; 1 = 0\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; (y ; 1 \\<cdot> x ; 1) = 0", "by fastforce"], ["proof (state)\nthis:\n  y\\<^sup>T ; (y ; 1 \\<cdot> x ; 1) = 0\n\ngoal (2 subgoals):\n 1. y\\<^sup>T ; x \\<le> 1'\n 2. x\\<^sup>T ; y \\<le> 1'", "finally"], ["proof (chain)\npicking this:\n  y\\<^sup>T ; x \\<le> 0", "show \"y\\<^sup>T;x \\<le> 1'\""], ["proof (prove)\nusing this:\n  y\\<^sup>T ; x \\<le> 0\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; x \\<le> 1'", "using bot_least le_bot"], ["proof (prove)\nusing this:\n  y\\<^sup>T ; x \\<le> 0\n  0 \\<le> ?a\n  ?a \\<le> 0 \\<Longrightarrow> ?a = 0\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; x \\<le> 1'", "by blast"], ["proof (state)\nthis:\n  y\\<^sup>T ; x \\<le> 1'\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; y \\<le> 1'", "thus \"x\\<^sup>T;y \\<le> 1'\""], ["proof (prove)\nusing this:\n  y\\<^sup>T ; x \\<le> 1'\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; y \\<le> 1'", "using conv_iso"], ["proof (prove)\nusing this:\n  y\\<^sup>T ; x \\<le> 1'\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; y \\<le> 1'", "by force"], ["proof (state)\nthis:\n  x\\<^sup>T ; y \\<le> 1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_p_fun (x + y)\n\ngoal (1 subgoal):\n 1. connected (x + y)", "show \"connected (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (x + y)", "proof (auto simp add: distrib_left)"], ["proof (state)\ngoal (4 subgoals):\n 1. x ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 3. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 4. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "have \"x;1;x \\<le> x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected x", "using assms(1) path_def"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n\ngoal (1 subgoal):\n 1. connected x", "by simp"], ["proof (state)\nthis:\n  connected x\n\ngoal (4 subgoals):\n 1. x ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 3. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 4. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  connected x\n\ngoal (4 subgoals):\n 1. x ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 3. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 4. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "have \"... \\<le> (x\\<^sup>\\<star>;y\\<^sup>\\<star>)\\<^sup>\\<star> + (x\\<^sup>T\\<^sup>\\<star>;y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "using join_iso join_isol star_subdist"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x + ?z \\<le> ?y + ?z\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n  ?x\\<^sup>\\<star> \\<le> (?x + ?y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (4 subgoals):\n 1. x ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 3. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 4. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x ; 1 ; x\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "show \"x;1;x \\<le> (x\\<^sup>\\<star>;y\\<^sup>\\<star>)\\<^sup>\\<star> + (x\\<^sup>T\\<^sup>\\<star>;y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x ; 1 ; x\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  x ; 1 ; x\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (3 subgoals):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 3. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "have \"y;1;y \\<le> y\\<^sup>\\<star> + y\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected y", "using assms(2) path_def"], ["proof (prove)\nusing this:\n  backward_terminating_path y\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n\ngoal (1 subgoal):\n 1. connected y", "by simp"], ["proof (state)\nthis:\n  connected y\n\ngoal (3 subgoals):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 3. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  connected y\n\ngoal (3 subgoals):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 3. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "have \"... \\<le> (x\\<^sup>\\<star>;y\\<^sup>\\<star>)\\<^sup>\\<star> + (x\\<^sup>T\\<^sup>\\<star>;y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> + y\\<^sup>T\\<^sup>\\<star>\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "by (metis star_denest star_subdist sup.mono sup_commute)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> + y\\<^sup>T\\<^sup>\\<star>\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (3 subgoals):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 3. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  y ; 1 ; y\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "show \"y;1;y \\<le> (x\\<^sup>\\<star>;y\\<^sup>\\<star>)\\<^sup>\\<star> + (x\\<^sup>T\\<^sup>\\<star>;y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  y ; 1 ; y\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  y ; 1 ; y\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n 2. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "show \"y;1;x \\<le> (x\\<^sup>\\<star>;y\\<^sup>\\<star>)\\<^sup>\\<star> + (x\\<^sup>T\\<^sup>\\<star>;y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "have \"(y;1);1;(1;x) \\<le> y\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ; 1 ; 1 ; (1 ; x)\n    \\<le> y\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\\<^sup>\\<star>", "proof (rule_tac v=\"start_points y\" in path_concat_aux_0)"], ["proof (state)\ngoal (4 subgoals):\n 1. is_vector (start_points y)\n 2. start_points y \\<noteq> 0\n 3. y ; 1 ; start_points y\\<^sup>T \\<le> y\\<^sup>T\\<^sup>\\<star>\n 4. start_points y ; (1 ; x) \\<le> x\\<^sup>T\\<^sup>\\<star>", "show \"is_vector (start_points y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (start_points y)", "by (metis is_vector_def comp_assoc one_compl one_idem_mult ra_1)"], ["proof (state)\nthis:\n  is_vector (start_points y)\n\ngoal (3 subgoals):\n 1. start_points y \\<noteq> 0\n 2. y ; 1 ; start_points y\\<^sup>T \\<le> y\\<^sup>T\\<^sup>\\<star>\n 3. start_points y ; (1 ; x) \\<le> x\\<^sup>T\\<^sup>\\<star>", "show \"start_points y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points y \\<noteq> 0", "using as"], ["proof (prove)\nusing this:\n  y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. start_points y \\<noteq> 0", "by (metis assms(2) conv_compl conv_contrav conv_one inf.orderE inf_bot_right\n                      inf_top.right_neutral maddux_141)"], ["proof (state)\nthis:\n  start_points y \\<noteq> 0\n\ngoal (2 subgoals):\n 1. y ; 1 ; start_points y\\<^sup>T \\<le> y\\<^sup>T\\<^sup>\\<star>\n 2. start_points y ; (1 ; x) \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"(start_points y);1;y\\<^sup>T \\<le> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points y ; 1 ; y\\<^sup>T \\<le> y\\<^sup>\\<star>", "by (rule path_concat_aux_5) (simp_all add: assms(2))"], ["proof (state)\nthis:\n  start_points y ; 1 ; y\\<^sup>T \\<le> y\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. y ; 1 ; start_points y\\<^sup>T \\<le> y\\<^sup>T\\<^sup>\\<star>\n 2. start_points y ; (1 ; x) \\<le> x\\<^sup>T\\<^sup>\\<star>", "thus \"y;1;(start_points y)\\<^sup>T \\<le> y\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  start_points y ; 1 ; y\\<^sup>T \\<le> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; start_points y\\<^sup>T \\<le> y\\<^sup>T\\<^sup>\\<star>", "by (metis (mono_tags, lifting) conv_iso comp_assoc conv_contrav conv_invol conv_one\n                      star_conv)"], ["proof (state)\nthis:\n  y ; 1 ; start_points y\\<^sup>T \\<le> y\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. start_points y ; (1 ; x) \\<le> x\\<^sup>T\\<^sup>\\<star>", "have \"end_points x;1;x \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points x ; 1 ; x \\<le> x\\<^sup>T\\<^sup>\\<star>", "apply (rule path_concat_aux_5)"], ["proof (prove)\ngoal (3 subgoals):\n 1. path (x\\<^sup>T)\n 2. end_points x \\<le> start_points (x\\<^sup>T)\n 3. x \\<le> x\\<^sup>T + (x\\<^sup>T)\\<^sup>T", "using assms(1) conv_path"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  path ?x = path (?x\\<^sup>T)\n\ngoal (3 subgoals):\n 1. path (x\\<^sup>T)\n 2. end_points x \\<le> start_points (x\\<^sup>T)\n 3. x \\<le> x\\<^sup>T + (x\\<^sup>T)\\<^sup>T", "by simp_all"], ["proof (state)\nthis:\n  end_points x ; 1 ; x \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. start_points y ; (1 ; x) \\<le> x\\<^sup>T\\<^sup>\\<star>", "thus \"start_points y;(1;x) \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  end_points x ; 1 ; x \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. start_points y ; (1 ; x) \\<le> x\\<^sup>T\\<^sup>\\<star>", "by (metis assms(3) mult_assoc)"], ["proof (state)\nthis:\n  start_points y ; (1 ; x) \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y ; 1 ; 1 ; (1 ; x)\n  \\<le> y\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "thus ?thesis"], ["proof (prove)\nusing this:\n  y ; 1 ; 1 ; (1 ; x)\n  \\<le> y\\<^sup>T\\<^sup>\\<star> ; x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y ; 1 ; x\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "by (metis comp_assoc le_supI2 less_eq_def one_idem_mult star_denest star_subdist_var_1\n                    sup.commute)"], ["proof (state)\nthis:\n  y ; 1 ; x\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y ; 1 ; x\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "show \"x;1;y \\<le> (x\\<^sup>\\<star>;y\\<^sup>\\<star>)\\<^sup>\\<star> + (x\\<^sup>T\\<^sup>\\<star>;y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "have \"(x;1);1;(1;y) \\<le> x\\<^sup>\\<star>;y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; 1 ; (1 ; y) \\<le> x\\<^sup>\\<star> ; y\\<^sup>\\<star>", "proof (rule_tac v=\"start_points y\" in path_concat_aux_0)"], ["proof (state)\ngoal (4 subgoals):\n 1. is_vector (start_points y)\n 2. start_points y \\<noteq> 0\n 3. x ; 1 ; start_points y\\<^sup>T \\<le> x\\<^sup>\\<star>\n 4. start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>", "show \"is_vector (start_points y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (start_points y)", "by (simp add: comp_assoc is_vector_def one_compl vector_1_comm)"], ["proof (state)\nthis:\n  is_vector (start_points y)\n\ngoal (3 subgoals):\n 1. start_points y \\<noteq> 0\n 2. x ; 1 ; start_points y\\<^sup>T \\<le> x\\<^sup>\\<star>\n 3. start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>", "show \"start_points y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points y \\<noteq> 0", "using as assms(2,4) backward_terminating_iff1 galois_aux2 start_point_iff1 start_point_iff2"], ["proof (prove)\nusing this:\n  y \\<noteq> 0\n  backward_terminating_path y\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0\n  path ?x \\<Longrightarrow>\n  backward_terminating ?x = (has_start_points ?x \\<or> ?x = 0)\n  (?x \\<cdot> - ?y = 0) = (?x \\<le> ?y)\n  path ?x \\<Longrightarrow>\n  is_point (start_points ?x) = (\\<not> no_start_points ?x)\n  path ?x \\<Longrightarrow> is_point (start_points ?x) = has_start_points ?x\n\ngoal (1 subgoal):\n 1. start_points y \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  start_points y \\<noteq> 0\n\ngoal (2 subgoals):\n 1. x ; 1 ; start_points y\\<^sup>T \\<le> x\\<^sup>\\<star>\n 2. start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>", "have \"end_points x;1;x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>", "apply (rule path_concat_aux_5)"], ["proof (prove)\ngoal (3 subgoals):\n 1. path (x\\<^sup>T)\n 2. end_points x \\<le> start_points (x\\<^sup>T)\n 3. x\\<^sup>T \\<le> x\\<^sup>T + (x\\<^sup>T)\\<^sup>T", "using assms(1) conv_path"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  path ?x = path (?x\\<^sup>T)\n\ngoal (3 subgoals):\n 1. path (x\\<^sup>T)\n 2. end_points x \\<le> start_points (x\\<^sup>T)\n 3. x\\<^sup>T \\<le> x\\<^sup>T + (x\\<^sup>T)\\<^sup>T", "by simp_all"], ["proof (state)\nthis:\n  end_points x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. x ; 1 ; start_points y\\<^sup>T \\<le> x\\<^sup>\\<star>\n 2. start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>", "hence \"(end_points x;1;x\\<^sup>T)\\<^sup>T \\<le> (x\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\""], ["proof (prove)\nusing this:\n  end_points x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (end_points x ; 1 ; x\\<^sup>T)\\<^sup>T\n    \\<le> (x\\<^sup>T\\<^sup>\\<star>)\\<^sup>T", "using conv_iso"], ["proof (prove)\nusing this:\n  end_points x ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n\ngoal (1 subgoal):\n 1. (end_points x ; 1 ; x\\<^sup>T)\\<^sup>T\n    \\<le> (x\\<^sup>T\\<^sup>\\<star>)\\<^sup>T", "by blast"], ["proof (state)\nthis:\n  (end_points x ; 1 ; x\\<^sup>T)\\<^sup>T\n  \\<le> (x\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n\ngoal (2 subgoals):\n 1. x ; 1 ; start_points y\\<^sup>T \\<le> x\\<^sup>\\<star>\n 2. start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>", "thus \"x;1;(start_points y)\\<^sup>T \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  (end_points x ; 1 ; x\\<^sup>T)\\<^sup>T\n  \\<le> (x\\<^sup>T\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. x ; 1 ; start_points y\\<^sup>T \\<le> x\\<^sup>\\<star>", "by (simp add: assms(3) comp_assoc star_conv)"], ["proof (state)\nthis:\n  x ; 1 ; start_points y\\<^sup>T \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>", "have \"start_points y;1;y \\<le> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points y ; 1 ; y \\<le> y\\<^sup>\\<star>", "by (rule path_concat_aux_5) (simp_all add: assms(2))"], ["proof (state)\nthis:\n  start_points y ; 1 ; y \\<le> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>", "thus \"start_points y;(1;y) \\<le> y\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  start_points y ; 1 ; y \\<le> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>", "by (simp add: mult_assoc)"], ["proof (state)\nthis:\n  start_points y ; (1 ; y) \\<le> y\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ; 1 ; 1 ; (1 ; y) \\<le> x\\<^sup>\\<star> ; y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x ; 1 ; 1 ; (1 ; y) \\<le> x\\<^sup>\\<star> ; y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; y\n    \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>", "by (metis comp_assoc dual_order.trans le_supI1 one_idem_mult star_ext)"], ["proof (state)\nthis:\n  x ; 1 ; y\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ; 1 ; y\n  \\<le> (x\\<^sup>\\<star> ; y\\<^sup>\\<star>)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  connected (x + y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  path (x + y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concatenation_with_edge:\n   assumes \"x\\<noteq>0\"\n      and \"forward_terminating_path x\"\n      and \"is_point q\"\n      and \"q \\<le> -(1;x)\"\n    shows \"path (x+(end_points x);q\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x + end_points x ; q\\<^sup>T)", "proof (rule path_concatenation)"], ["proof (state)\ngoal (4 subgoals):\n 1. forward_terminating_path x\n 2. backward_terminating_path (end_points x ; q\\<^sup>T)\n 3. end_points x = start_points (end_points x ; q\\<^sup>T)\n 4. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; q\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; q\\<^sup>T)\\<^sup>T ; 1 =\n    0", "from assms(1,2)"], ["proof (chain)\npicking this:\n  x \\<noteq> 0\n  forward_terminating_path x", "have 1: \"is_point(end_points x)\""], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n  forward_terminating_path x\n\ngoal (1 subgoal):\n 1. is_point (end_points x)", "using end_point_zero_point path_aux1a"], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n  forward_terminating_path x\n  path ?x \\<Longrightarrow> end_points ?x = 0 \\<or> is_point (end_points ?x)\n  forward_terminating_path ?x \\<Longrightarrow>\n  (?x \\<noteq> 0) = (end_points ?x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. is_point (end_points x)", "by blast"], ["proof (state)\nthis:\n  is_point (end_points x)\n\ngoal (4 subgoals):\n 1. forward_terminating_path x\n 2. backward_terminating_path (end_points x ; q\\<^sup>T)\n 3. end_points x = start_points (end_points x ; q\\<^sup>T)\n 4. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; q\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; q\\<^sup>T)\\<^sup>T ; 1 =\n    0", "show 2: \"backward_terminating_path ((end_points x);q\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_terminating_path (end_points x ; q\\<^sup>T)", "apply (intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. path (end_points x ; q\\<^sup>T)\n 2. backward_terminating (end_points x ; q\\<^sup>T)", "apply (metis edge_is_path 1 assms(3))"], ["proof (prove)\ngoal (1 subgoal):\n 1. backward_terminating (end_points x ; q\\<^sup>T)", "by (metis assms(2-4) 1 bot_least comp_assoc compl_le_swap1 conv_galois_2 double_compl\n              end_point_iff1 le_supE point_equations(1) tarski top_le)"], ["proof (state)\nthis:\n  backward_terminating_path (end_points x ; q\\<^sup>T)\n\ngoal (3 subgoals):\n 1. forward_terminating_path x\n 2. end_points x = start_points (end_points x ; q\\<^sup>T)\n 3. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; q\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; q\\<^sup>T)\\<^sup>T ; 1 =\n    0", "thus \"end_points x = start_points ((end_points x);q\\<^sup>T)\""], ["proof (prove)\nusing this:\n  backward_terminating_path (end_points x ; q\\<^sup>T)\n\ngoal (1 subgoal):\n 1. end_points x = start_points (end_points x ; q\\<^sup>T)", "by (metis assms(3) 1 edge_start comp_assoc compl_top_eq double_compl inf.absorb_iff2 inf.commute\n              inf_top_right modular_2_aux' point_equations(2))"], ["proof (state)\nthis:\n  end_points x = start_points (end_points x ; q\\<^sup>T)\n\ngoal (2 subgoals):\n 1. forward_terminating_path x\n 2. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; q\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; q\\<^sup>T)\\<^sup>T ; 1 =\n    0", "show \"x;1 \\<cdot> (x\\<^sup>T;1 + ((end_points x);q\\<^sup>T);1) \\<cdot> ((end_points x);q\\<^sup>T)\\<^sup>T;1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; q\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; q\\<^sup>T)\\<^sup>T ; 1 =\n    0", "using 2"], ["proof (prove)\nusing this:\n  backward_terminating_path (end_points x ; q\\<^sup>T)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; q\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; q\\<^sup>T)\\<^sup>T ; 1 =\n    0", "by (metis assms(3,4) annir compl_le_swap1 compl_top_eq conv_galois_2 double_compl\n                      inf.absorb_iff2 inf.commute modular_1' modular_2_aux' point_equations(2))"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; q\\<^sup>T ; 1) \\<cdot>\n  (end_points x ; q\\<^sup>T)\\<^sup>T ; 1 =\n  0\n\ngoal (1 subgoal):\n 1. forward_terminating_path x", "show \"forward_terminating_path x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forward_terminating_path x", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  forward_terminating_path x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concatenation_cycle_free:\n  assumes \"forward_terminating_path x\"\n      and \"backward_terminating_path y\"\n      and \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"path (x+y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x + y)", "apply (rule path_concatenation,simp_all add: assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0", "by (metis assms(4) inf.left_commute inf_bot_right inf_commute)"], ["", "lemma path_concatenation_start_points_approx:\n  assumes \"end_points x = start_points y\"\n    shows \"start_points (x+y) \\<le> start_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "have \"start_points (x+y) = x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y\\<^sup>T;1) + y;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x + y) =\n    start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1)", "by (simp add: inf.assoc inf_sup_distrib2)"], ["proof (state)\nthis:\n  start_points (x + y) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "also"], ["proof (state)\nthis:\n  start_points (x + y) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "with assms(1)"], ["proof (chain)\npicking this:\n  end_points x = start_points y\n  start_points (x + y) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1)", "have \"... = x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y\\<^sup>T;1) + x\\<^sup>T;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(x;1)\""], ["proof (prove)\nusing this:\n  end_points x = start_points y\n  start_points (x + y) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1) =\n    start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    x\\<^sup>T ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (x ; 1)", "by (metis inf.assoc inf.left_commute)"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  x\\<^sup>T ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (x ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "also"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  x\\<^sup>T ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (x ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "have \"... = x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    x\\<^sup>T ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (x ; 1) =\n    start_points x \\<cdot> - (y\\<^sup>T ; 1)", "by simp"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  x\\<^sup>T ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (x ; 1) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "also"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  x\\<^sup>T ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (x ; 1) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "have \"... \\<le> start_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<cdot> - (y\\<^sup>T ; 1) \\<le> start_points x", "using inf_le1"], ["proof (prove)\nusing this:\n  ?x \\<cdot> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> - (y\\<^sup>T ; 1) \\<le> start_points x", "by blast"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) \\<le> start_points x\n\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "finally"], ["proof (chain)\npicking this:\n  start_points (x + y) \\<le> start_points x", "show ?thesis"], ["proof (prove)\nusing this:\n  start_points (x + y) \\<le> start_points x\n\ngoal (1 subgoal):\n 1. start_points (x + y) \\<le> start_points x", "."], ["proof (state)\nthis:\n  start_points (x + y) \\<le> start_points x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concatenation_end_points_approx:\n  assumes \"end_points x = start_points y\"\n     shows \"end_points (x+y) \\<le> end_points y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "have \"end_points (x+y) = x\\<^sup>T;1 \\<cdot> -(x;1) \\<cdot> -(y;1) + y\\<^sup>T;1 \\<cdot> -(x;1) \\<cdot> -(y;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x + y) =\n    end_points x \\<cdot> - (y ; 1) +\n    y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)", "by (simp add: inf.assoc inf_sup_distrib2)"], ["proof (state)\nthis:\n  end_points (x + y) =\n  end_points x \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "also"], ["proof (state)\nthis:\n  end_points (x + y) =\n  end_points x \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "from assms(1)"], ["proof (chain)\npicking this:\n  end_points x = start_points y", "have \"... = y;1 \\<cdot> -(y\\<^sup>T;1) \\<cdot> -(y;1) + y\\<^sup>T;1 \\<cdot> -(x;1) \\<cdot> -(y;1)\""], ["proof (prove)\nusing this:\n  end_points x = start_points y\n\ngoal (1 subgoal):\n 1. end_points x \\<cdot> - (y ; 1) +\n    y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n    start_points y \\<cdot> - (y ; 1) +\n    y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)", "by simp"], ["proof (state)\nthis:\n  end_points x \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n  start_points y \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "also"], ["proof (state)\nthis:\n  end_points x \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n  start_points y \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "have \"... = y\\<^sup>T;1 \\<cdot> -(x;1) \\<cdot> -(y;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points y \\<cdot> - (y ; 1) +\n    y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n    y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)", "by (simp add: inf.commute)"], ["proof (state)\nthis:\n  start_points y \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "also"], ["proof (state)\nthis:\n  start_points y \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "have \"... \\<le> end_points y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) \\<le> end_points y", "using inf_le1 meet_iso"], ["proof (prove)\nusing this:\n  ?x \\<cdot> ?y \\<le> ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) \\<le> end_points y", "by blast"], ["proof (state)\nthis:\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) \\<le> end_points y\n\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "finally"], ["proof (chain)\npicking this:\n  end_points (x + y) \\<le> end_points y", "show ?thesis"], ["proof (prove)\nusing this:\n  end_points (x + y) \\<le> end_points y\n\ngoal (1 subgoal):\n 1. end_points (x + y) \\<le> end_points y", "."], ["proof (state)\nthis:\n  end_points (x + y) \\<le> end_points y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concatenation_start_points:\n  assumes \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"start_points (x+y) = start_points x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "from assms(2)"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have aux: \"x;1 \\<cdot> -(y\\<^sup>T;1) = x;1\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> - (y\\<^sup>T ; 1) = x ; 1", "by (simp add: galois_aux inf.absorb1)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> - (y\\<^sup>T ; 1) = x ; 1\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "have \"start_points (x+y) = (x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y\\<^sup>T;1)) + (y;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y\\<^sup>T;1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x + y) =\n    start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1)", "by (simp add: inf_sup_distrib2 inf.assoc)"], ["proof (state)\nthis:\n  start_points (x + y) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "also"], ["proof (state)\nthis:\n  start_points (x + y) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "from assms(1)"], ["proof (chain)\npicking this:\n  end_points x = start_points y", "have \"... = (x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y\\<^sup>T;1)) + (x\\<^sup>T;1 \\<cdot> -(x;1) \\<cdot> -(x\\<^sup>T;1))\""], ["proof (prove)\nusing this:\n  end_points x = start_points y\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1) =\n    start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    end_points x \\<cdot> - (x\\<^sup>T ; 1)", "using inf.assoc inf.commute"], ["proof (prove)\nusing this:\n  end_points x = start_points y\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1) =\n    start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    end_points x \\<cdot> - (x\\<^sup>T ; 1)", "by simp"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  end_points x \\<cdot> - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "also"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  y ; 1 \\<cdot> - (x\\<^sup>T ; 1) \\<cdot> - (y\\<^sup>T ; 1) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  end_points x \\<cdot> - (x\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "have \"... = (x;1 \\<cdot> -(x\\<^sup>T;1) \\<cdot> -(y\\<^sup>T;1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n    end_points x \\<cdot> - (x\\<^sup>T ; 1) =\n    start_points x \\<cdot> - (y\\<^sup>T ; 1)", "by (simp add: inf.assoc)"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  end_points x \\<cdot> - (x\\<^sup>T ; 1) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "also"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) +\n  end_points x \\<cdot> - (x\\<^sup>T ; 1) =\n  start_points x \\<cdot> - (y\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "from aux"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> - (y\\<^sup>T ; 1) = x ; 1", "have \"... = x;1 \\<cdot> -(x\\<^sup>T;1)\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> - (y\\<^sup>T ; 1) = x ; 1\n\ngoal (1 subgoal):\n 1. start_points x \\<cdot> - (y\\<^sup>T ; 1) = start_points x", "by (metis inf.assoc inf.commute)"], ["proof (state)\nthis:\n  start_points x \\<cdot> - (y\\<^sup>T ; 1) = start_points x\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "finally"], ["proof (chain)\npicking this:\n  start_points (x + y) = start_points x", "show ?thesis"], ["proof (prove)\nusing this:\n  start_points (x + y) = start_points x\n\ngoal (1 subgoal):\n 1. start_points (x + y) = start_points x", "."], ["proof (state)\nthis:\n  start_points (x + y) = start_points x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concatenation_end_points:\n  assumes \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"end_points (x+y) = end_points y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "from assms(2)"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0", "have aux: \"y\\<^sup>T;1 \\<cdot> -(x;1) = y\\<^sup>T;1\""], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; 1 \\<cdot> - (x ; 1) = y\\<^sup>T ; 1", "using galois_aux inf.absorb1 inf_commute"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n  (?x \\<cdot> ?y = 0) = (?x \\<le> - ?y)\n  ?a \\<le> ?b \\<Longrightarrow> ?a \\<cdot> ?b = ?a\n  ?x \\<cdot> ?y = ?y \\<cdot> ?x\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; 1 \\<cdot> - (x ; 1) = y\\<^sup>T ; 1", "by blast"], ["proof (state)\nthis:\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) = y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "have \"end_points (x+y) = (x\\<^sup>T;1 + y\\<^sup>T;1) \\<cdot> -(x;1) \\<cdot> -(y;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x + y) =\n    (x\\<^sup>T ; 1 + y\\<^sup>T ; 1) \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)", "using inf.assoc"], ["proof (prove)\nusing this:\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. end_points (x + y) =\n    (x\\<^sup>T ; 1 + y\\<^sup>T ; 1) \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)", "by simp"], ["proof (state)\nthis:\n  end_points (x + y) =\n  (x\\<^sup>T ; 1 + y\\<^sup>T ; 1) \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "also"], ["proof (state)\nthis:\n  end_points (x + y) =\n  (x\\<^sup>T ; 1 + y\\<^sup>T ; 1) \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "from assms(1)"], ["proof (chain)\npicking this:\n  end_points x = start_points y", "have \"... = (y;1 \\<cdot> -(y\\<^sup>T;1) \\<cdot> -(y;1)) + (y\\<^sup>T;1 \\<cdot> -(x;1) \\<cdot> -(y;1))\""], ["proof (prove)\nusing this:\n  end_points x = start_points y\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T ; 1 + y\\<^sup>T ; 1) \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n    start_points y \\<cdot> - (y ; 1) +\n    y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)", "by (simp add: inf_sup_distrib2)"], ["proof (state)\nthis:\n  (x\\<^sup>T ; 1 + y\\<^sup>T ; 1) \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n  start_points y \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T ; 1 + y\\<^sup>T ; 1) \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n  start_points y \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "have \"... = y\\<^sup>T;1 \\<cdot> -(x;1) \\<cdot> -(y;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points y \\<cdot> - (y ; 1) +\n    y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n    y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)", "by (simp add: inf.assoc)"], ["proof (state)\nthis:\n  start_points y \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "also"], ["proof (state)\nthis:\n  start_points y \\<cdot> - (y ; 1) +\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) =\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "from aux"], ["proof (chain)\npicking this:\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) = y\\<^sup>T ; 1", "have \"... = y\\<^sup>T;1 \\<cdot> -(y;1)\""], ["proof (prove)\nusing this:\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) = y\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) = end_points y", "by (metis inf.assoc inf.commute)"], ["proof (state)\nthis:\n  y\\<^sup>T ; 1 \\<cdot> - (x ; 1) \\<cdot> - (y ; 1) = end_points y\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "finally"], ["proof (chain)\npicking this:\n  end_points (x + y) = end_points y", "show ?thesis"], ["proof (prove)\nusing this:\n  end_points (x + y) = end_points y\n\ngoal (1 subgoal):\n 1. end_points (x + y) = end_points y", "."], ["proof (state)\nthis:\n  end_points (x + y) = end_points y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_concatenation_cycle_free_complete:\n  assumes \"forward_terminating_path x\"\n      and \"backward_terminating_path y\"\n      and \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"path (x+y) \\<and> start_points (x+y) = start_points x \\<and> end_points (x+y) = end_points y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x + y) \\<and>\n    start_points (x + y) = start_points x \\<and>\n    end_points (x + y) = end_points y", "using assms path_concatenation_cycle_free path_concatenation_end_points path_concatenation_start_points"], ["proof (prove)\nusing this:\n  forward_terminating_path x\n  backward_terminating_path y\n  end_points x = start_points y\n  x ; 1 \\<cdot> y\\<^sup>T ; 1 = 0\n  \\<lbrakk>forward_terminating_path ?x; backward_terminating_path ?y;\n   end_points ?x = start_points ?y;\n   ?x ; 1 \\<cdot> ?y\\<^sup>T ; 1 = 0\\<rbrakk>\n  \\<Longrightarrow> path (?x + ?y)\n  \\<lbrakk>end_points ?x = start_points ?y;\n   ?x ; 1 \\<cdot> ?y\\<^sup>T ; 1 = 0\\<rbrakk>\n  \\<Longrightarrow> end_points (?x + ?y) = end_points ?y\n  \\<lbrakk>end_points ?x = start_points ?y;\n   ?x ; 1 \\<cdot> ?y\\<^sup>T ; 1 = 0\\<rbrakk>\n  \\<Longrightarrow> start_points (?x + ?y) = start_points ?x\n\ngoal (1 subgoal):\n 1. path (x + y) \\<and>\n    start_points (x + y) = start_points x \\<and>\n    end_points (x + y) = end_points y", "by blast"], ["", "text \\<open>Path restriction (path from a given point)\\<close>"], ["", "lemma reachable_points_iff:\n  assumes \"point p\"\n    shows \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) = (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n 2. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x", "show \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x \\<le> x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x", "proof (rule le_infI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n 2. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x \\<le> x", "show \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x \\<le> x\\<^sup>T\\<^sup>\\<star>;p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "have \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x \\<le> x\\<^sup>T\\<^sup>\\<star>;p;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p ; 1", "by (simp add: mult_isol_var)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p ; 1\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p ; 1\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star>;p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p ; 1 \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "using assms"], ["proof (prove)\nusing this:\n  point p\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p ; 1 \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "by (simp add: comp_assoc eq_iff point_equations(1) point_is_point)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; p ; 1 \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "finally"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "show ?thesis"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "."], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x \\<le> x", "show \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x \\<le> x", "by (metis inf_le2 mult_isor mult_onel)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "show \"x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x \\<le> (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "have \"(x\\<^sup>T\\<^sup>\\<star>;p);x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>;p + -1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p ; x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p + - 1'", "by (metis assms comp_assoc is_vector_def mult_isol point_def sup.coboundedI1 top_greatest)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; p ; x\\<^sup>T\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p + - 1'\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "hence aux: \"(-(x\\<^sup>T\\<^sup>\\<star>;p) \\<cdot> 1');x \\<le> -(x\\<^sup>T\\<^sup>\\<star>;p)\""], ["proof (prove)\nusing this:\n  x\\<^sup>T\\<^sup>\\<star> ; p ; x\\<^sup>T\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p + - 1'\n\ngoal (1 subgoal):\n 1. (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n    \\<le> - (x\\<^sup>T\\<^sup>\\<star> ; p)", "using compl_mono conv_galois_2"], ["proof (prove)\nusing this:\n  x\\<^sup>T\\<^sup>\\<star> ; p ; x\\<^sup>T\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p + - 1'\n  ?x \\<le> ?y \\<Longrightarrow> - ?y \\<le> - ?x\n  (?y ; ?x \\<le> ?z) = (?y \\<le> - (- ?z ; ?x\\<^sup>T))\n\ngoal (1 subgoal):\n 1. (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n    \\<le> - (x\\<^sup>T\\<^sup>\\<star> ; p)", "by fastforce"], ["proof (state)\nthis:\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n  \\<le> - (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "have \"x = (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x + (-(x\\<^sup>T\\<^sup>\\<star>;p) \\<cdot> 1');x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x", "by (metis aux4 distrib_right inf_commute mult_1_left)"], ["proof (state)\nthis:\n  x =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "also"], ["proof (state)\nthis:\n  x =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "with aux"], ["proof (chain)\npicking this:\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n  \\<le> - (x\\<^sup>T\\<^sup>\\<star> ; p)\n  x =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x", "have \"... \\<le> (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x + -(x\\<^sup>T\\<^sup>\\<star>;p)\""], ["proof (prove)\nusing this:\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n  \\<le> - (x\\<^sup>T\\<^sup>\\<star> ; p)\n  x =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n          - (x\\<^sup>T\\<^sup>\\<star> ; p)", "using join_isol"], ["proof (prove)\nusing this:\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n  \\<le> - (x\\<^sup>T\\<^sup>\\<star> ; p)\n  x =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n          - (x\\<^sup>T\\<^sup>\\<star> ; p)", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x\n  \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n        - (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "finally"], ["proof (chain)\npicking this:\n  x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n          - (x\\<^sup>T\\<^sup>\\<star> ; p)", "have \"x \\<le> (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1');x + -(x\\<^sup>T\\<^sup>\\<star>;p)\""], ["proof (prove)\nusing this:\n  x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n          - (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n            - (x\\<^sup>T\\<^sup>\\<star> ; p)", "."], ["proof (state)\nthis:\n  x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n          - (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n          - (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "using galois_2 inf.commute"], ["proof (prove)\nusing this:\n  x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n          - (x\\<^sup>T\\<^sup>\\<star> ; p)\n  (?x \\<le> ?y + - ?z) = (?x \\<cdot> ?z \\<le> ?y)\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n    \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n  \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x\n  \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_from_given_point:\n  assumes \"path x\"\n      and \"point p\"\n    shows \"path(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\"\n      and \"start_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> p\"\n      and \"end_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> end_points(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) &&&\n    start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p &&&\n    end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "proof (unfold path_def; intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n 2. is_p_fun (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n 3. is_inj (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n 4. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n 5. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "show uni: \"is_p_fun (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_p_fun (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "by (metis assms(1) inf_commute is_p_fun_def p_fun_mult_var path_def)"], ["proof (state)\nthis:\n  is_p_fun (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal (4 subgoals):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n 2. is_inj (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n 3. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n 4. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "show inj: \"is_inj (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_inj (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "by (metis abel_semigroup.commute assms(1) conv_times inf.abel_semigroup_axioms inj_p_fun\n              is_p_fun_def p_fun_mult_var path_def)"], ["proof (state)\nthis:\n  is_inj (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal (3 subgoals):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n 2. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n 3. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "show \"connected (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "let ?t=\"x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1'\""], ["proof (state)\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "let ?u=\"-(x\\<^sup>T\\<^sup>\\<star>;p) \\<cdot> 1'\""], ["proof (state)\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "(* some aux statements about ?t and ?u *)"], ["proof (state)\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have t_plus_u: \"?t + ?u = 1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1' +\n    - (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1' =\n    1'", "by (simp add: inf.commute)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1' +\n  - (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1' =\n  1'\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have t_times_u: \"?t ; ?u \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n    \\<le> 0", "by (simp add: inf.left_commute is_test_def test_comp_eq_mult)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have t_conv: \"?t\\<^sup>T=?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\\<^sup>T =\n    x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1'", "using inf.cobounded2 is_test_def test_eq_conv"], ["proof (prove)\nusing this:\n  ?a \\<cdot> ?b \\<le> ?b\n  is_test ?x \\<equiv> ?x \\<le> 1'\n  is_test ?x \\<Longrightarrow> ?x\\<^sup>T = ?x\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\\<^sup>T =\n    x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1'", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\\<^sup>T =\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1'\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have txu_zero: \"?t;x;?u \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n    \\<le> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n    \\<le> 0", "have \"x\\<^sup>T;?t;1 \\<le> -?u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n    \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n    \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')", "have \"x\\<^sup>T;?t;1 \\<le> x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n    \\<le> x\\<^sup>T\\<^sup>+ ; p", "using assms(2)"], ["proof (prove)\nusing this:\n  point p\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n    \\<le> x\\<^sup>T\\<^sup>+ ; p", "by (simp add: is_vector_def mult.semigroup_axioms mult_isol_var mult_subdistr order.refl\n                        point_def semigroup.assoc)"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n  \\<le> x\\<^sup>T\\<^sup>+ ; p\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n    \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n  \\<le> x\\<^sup>T\\<^sup>+ ; p\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n    \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')", "have \"... \\<le> -?u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ ; p\n    \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')", "by (simp add: le_supI1 mult_isor)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>+ ; p \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n    \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n  \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')", "show ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n  \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n    \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')", "."], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n  \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n  \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n    \\<le> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; 1\n  \\<le> - (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n    \\<le> 0", "by (metis compl_bot_eq compl_le_swap1 conv_contrav conv_galois_1 t_conv)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n  \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "hence txux_zero: \"?t;x;?u;x \\<le> 0\""], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n    x\n    \\<le> 0", "using annil le_bot"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n  \\<le> 0\n  0 ; ?x = 0\n  ?a \\<le> 0 \\<Longrightarrow> ?a = 0\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n    x\n    \\<le> 0", "by fastforce"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n  x\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "(* end some aux statements about ?t and ?u *)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n  x\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have tx_leq: \"?t;x\\<^sup>\\<star> \\<le> (?t;x)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "have \"?t;x\\<^sup>\\<star> = ?t;(?t;x + ?u;x)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n     (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star>", "using t_plus_u"], ["proof (prove)\nusing this:\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1' +\n  - (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1' =\n  1'\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n     (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star>", "by (metis distrib_right' mult_onel)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n   (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n   (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "have \"... = ?t;(?u;x;(?u;x)\\<^sup>\\<star>;(?t;x)\\<^sup>\\<star>+(?t;x)\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n     (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    (((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>+ ;\n     ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n     ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>)", "using txux_zero star_denest_10"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n  x\n  \\<le> 0\n  ?x ; ?y = 0 \\<Longrightarrow>\n  (?x + ?y)\\<^sup>\\<star> = ?y\\<^sup>+ ; ?x\\<^sup>\\<star> + ?x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n     (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    (((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>+ ;\n     ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n     ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>)", "by (simp add: comp_assoc le_bot)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n   (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>+ ;\n   ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n   ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x +\n   (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>+ ;\n   ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n   ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "have \"... = ?t;?u;x;(?u;x)\\<^sup>\\<star>;(?t;x)\\<^sup>\\<star>+?t;(?t;x)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    (((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>+ ;\n     ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n     ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>) =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n    x ;\n    ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "by (simp add: comp_assoc distrib_left)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>+ ;\n   ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n   ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>) =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n  x ;\n  ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>+ ;\n   ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n   ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>) =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n  x ;\n  ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "have \"... \\<le> 0;x;(?u;x)\\<^sup>\\<star>;(?t;x)\\<^sup>\\<star>+?t;(?t;x)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n    x ;\n    ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n    \\<le> 0 ; x ;\n          ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "using le_bot t_times_u"], ["proof (prove)\nusing this:\n  ?a \\<le> 0 \\<Longrightarrow> ?a = 0\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1')\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n    x ;\n    ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n    \\<le> 0 ; x ;\n          ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n          (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n  x ;\n  ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n  \\<le> 0 ; x ;\n        ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ;\n  x ;\n  ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n  \\<le> 0 ; x ;\n        ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "have \"... \\<le>(?t;x)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 ; x ;\n    ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "by (metis annil inf.commute inf_bot_right le_supI mult_onel mult_subdistr)"], ["proof (state)\nthis:\n  0 ; x ; ((- (x\\<^sup>T\\<^sup>\\<star> ; p) \\<cdot> 1') ; x)\\<^sup>\\<star> ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "hence aux: \"?t;x\\<^sup>\\<star>;?t \\<le> (?t;x)\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> ;\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "using inf.cobounded2 order.trans prod_star_closure star_ref"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star>\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n  ?a \\<cdot> ?b \\<le> ?b\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n  \\<lbrakk>?x \\<le> ?z\\<^sup>\\<star>; ?y \\<le> ?z\\<^sup>\\<star>\\<rbrakk>\n  \\<Longrightarrow> ?x ; ?y \\<le> ?z\\<^sup>\\<star>\n  reflexive (?x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> ;\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "with t_conv"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\\<^sup>T =\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1'\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>", "have aux_trans: \"?t;x\\<^sup>T\\<^sup>\\<star>;?t \\<le> (?t;x)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\\<^sup>T =\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1'\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>T\\<^sup>\\<star> ;\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n           x)\\<^sup>T\\<^sup>\\<star>", "by (metis comp_assoc conv_contrav conv_self_conjugate_var g_iso star_conv)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>T\\<^sup>\\<star> ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "from aux aux_trans"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>T\\<^sup>\\<star> ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>", "have \"?t;(x\\<^sup>\\<star>+x\\<^sup>T\\<^sup>\\<star>);?t \\<le> (?t;x)\\<^sup>\\<star> + (?t;x)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>\\<star> ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star>\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x\\<^sup>T\\<^sup>\\<star> ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n    (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ;\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n           x)\\<^sup>T\\<^sup>\\<star>", "by (metis sup_mono distrib_right' distrib_left)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "with assms(1) path_concat_aux3_1"], ["proof (chain)\npicking this:\n  path x\n  path ?x \\<Longrightarrow>\n  ?x ; 1 ; ?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>", "have \"?t;(x;1;x\\<^sup>T);?t \\<le> (?t;x)\\<^sup>\\<star> + (?t;x)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  ?x ; 1 ; ?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; (x ; 1 ; x\\<^sup>T) ;\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n           x)\\<^sup>T\\<^sup>\\<star>", "using dual_order.trans mult_double_iso"], ["proof (prove)\nusing this:\n  path x\n  path ?x \\<Longrightarrow>\n  ?x ; 1 ; ?x\\<^sup>T \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n  (x\\<^sup>\\<star> + x\\<^sup>T\\<^sup>\\<star>) ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  ?x \\<le> ?y \\<Longrightarrow> ?w ; ?x ; ?z \\<le> ?w ; ?y ; ?z\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; (x ; 1 ; x\\<^sup>T) ;\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n           x)\\<^sup>T\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; (x ; 1 ; x\\<^sup>T) ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "with t_conv"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\\<^sup>T =\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1'\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; (x ; 1 ; x\\<^sup>T) ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>", "have \"(?t;x);1;(?t;x)\\<^sup>T \\<le> (?t;x)\\<^sup>\\<star> + (?t;x)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\\<^sup>T =\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1'\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; (x ; 1 ; x\\<^sup>T) ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ; 1 ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n           x)\\<^sup>T\\<^sup>\\<star>", "using comp_assoc conv_contrav"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\\<^sup>T =\n  x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1'\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; (x ; 1 ; x\\<^sup>T) ;\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1')\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  (?x ; ?y)\\<^sup>T = ?y\\<^sup>T ; ?x\\<^sup>T\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ; 1 ;\n    ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\n    \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n          ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ;\n           x)\\<^sup>T\\<^sup>\\<star>", "by fastforce"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ; 1 ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "with connected_iff2"], ["proof (chain)\npicking this:\n  \\<lbrakk>is_inj ?x; is_p_fun ?x\\<rbrakk>\n  \\<Longrightarrow> connected ?x =\n                    (?x ; 1 ; ?x\\<^sup>T\n                     \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>)\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ; 1 ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_inj ?x; is_p_fun ?x\\<rbrakk>\n  \\<Longrightarrow> connected ?x =\n                    (?x ; 1 ; ?x\\<^sup>T\n                     \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>)\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ; 1 ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "using assms(2) inj reachable_points_iff uni"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_inj ?x; is_p_fun ?x\\<rbrakk>\n  \\<Longrightarrow> connected ?x =\n                    (?x ; 1 ; ?x\\<^sup>T\n                     \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>)\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x ; 1 ;\n  ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\n  \\<le> ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>\\<star> +\n        ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1') ; x)\\<^sup>T\\<^sup>\\<star>\n  point p\n  is_inj (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n  point ?p \\<Longrightarrow>\n  ?x\\<^sup>T\\<^sup>\\<star> ; ?p \\<cdot> ?x =\n  (?x\\<^sup>T\\<^sup>\\<star> ; ?p \\<cdot> 1') ; ?x\n  is_p_fun (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal (1 subgoal):\n 1. connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "by fastforce"], ["proof (state)\nthis:\n  connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  connected (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal (2 subgoals):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n 2. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n 2. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "show \"start_points (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "have 1: \"is_vector (x\\<^sup>T\\<^sup>\\<star>;p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)", "using assms(2)"], ["proof (prove)\nusing this:\n  point p\n\ngoal (1 subgoal):\n 1. is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)", "by (simp add: is_vector_def mult_assoc point_def)"], ["proof (state)\nthis:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "hence \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x);1 \\<le> x\\<^sup>T\\<^sup>\\<star>;p\""], ["proof (prove)\nusing this:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "by (simp add: inf.commute vector_1_comm)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "have \"... = x\\<^sup>T\\<^sup>+;p + p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; p = x\\<^sup>T\\<^sup>+ ; p + p", "by (simp add: sup.commute)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; p = x\\<^sup>T\\<^sup>+ ; p + p\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "finally"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  \\<le> x\\<^sup>T\\<^sup>+ ; p + p", "have 2: \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x);1 \\<cdot> -(x\\<^sup>T\\<^sup>+;p) \\<le> p\""], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  \\<le> x\\<^sup>T\\<^sup>+ ; p + p\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1 \\<cdot>\n    - (x\\<^sup>T\\<^sup>+ ; p)\n    \\<le> p", "using galois_1"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  \\<le> x\\<^sup>T\\<^sup>+ ; p + p\n  (?x \\<cdot> - ?y \\<le> ?z) = (?x \\<le> ?y + ?z)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1 \\<cdot>\n    - (x\\<^sup>T\\<^sup>+ ; p)\n    \\<le> p", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1 \\<cdot>\n  - (x\\<^sup>T\\<^sup>+ ; p)\n  \\<le> p\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "have \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 = (x\\<^sup>T \\<cdot> (x\\<^sup>T\\<^sup>\\<star>;p)\\<^sup>T);1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n    (x\\<^sup>T \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T) ; 1", "by (simp add: inf.commute)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  (x\\<^sup>T \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T) ; 1\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  (x\\<^sup>T \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T) ; 1\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "have \"... = x\\<^sup>T;(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T) ; 1 =\n    x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)", "using 1 vector_2"], ["proof (prove)\nusing this:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n  is_vector ?y \\<Longrightarrow>\n  (?x \\<cdot> ?y\\<^sup>T) ; ?z = ?x ; (?y \\<cdot> ?z)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T) ; 1 =\n    x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T) ; 1 =\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T) ; 1 =\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "have \"... = x\\<^sup>T\\<^sup>+;p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1) =\n    x\\<^sup>T\\<^sup>+ ; p", "by (simp add: comp_assoc)"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1) =\n  x\\<^sup>T\\<^sup>+ ; p\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "finally"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  x\\<^sup>T\\<^sup>+ ; p", "show \"start_points (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> p\""], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  x\\<^sup>T\\<^sup>+ ; p\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "using 2"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  x\\<^sup>T\\<^sup>+ ; p\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1 \\<cdot>\n  - (x\\<^sup>T\\<^sup>+ ; p)\n  \\<le> p\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "by simp"], ["proof (state)\nthis:\n  start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "show \"end_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> end_points(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "have 1: \"is_vector (x\\<^sup>T\\<^sup>\\<star>;p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)", "using assms(2)"], ["proof (prove)\nusing this:\n  point p\n\ngoal (1 subgoal):\n 1. is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)", "by (simp add: is_vector_def mult_assoc point_def)"], ["proof (state)\nthis:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "have \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 = ((x\\<^sup>T\\<^sup>\\<star>;p)\\<^sup>T \\<cdot> x\\<^sup>T);1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n    ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1", "by (simp add: star_conv)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "have \"... = x\\<^sup>T;(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1 =\n    x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)", "using 1 vector_2 inf.commute"], ["proof (prove)\nusing this:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n  is_vector ?y \\<Longrightarrow>\n  (?x \\<cdot> ?y\\<^sup>T) ; ?z = ?x ; (?y \\<cdot> ?z)\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1 =\n    x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)", "by fastforce"], ["proof (state)\nthis:\n  ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1 =\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "also"], ["proof (state)\nthis:\n  ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1 =\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star>;p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "using comp_assoc mult_isor"], ["proof (prove)\nusing this:\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "finally"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "have 2: \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 \\<cdot> -(x\\<^sup>T\\<^sup>\\<star>;p) = 0\""], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    - (x\\<^sup>T\\<^sup>\\<star> ; p) =\n    0", "using galois_aux2"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n  (?x \\<cdot> - ?y = 0) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    - (x\\<^sup>T\\<^sup>\\<star> ; p) =\n    0", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  - (x\\<^sup>T\\<^sup>\\<star> ; p) =\n  0\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "have \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 \\<cdot> -((x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x);1) = (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 \\<cdot> (-(x\\<^sup>T\\<^sup>\\<star>;p) + -(x;1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) + - (x ; 1))", "using 1 vector_1"], ["proof (prove)\nusing this:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n  is_vector ?x \\<Longrightarrow> (?x \\<cdot> ?y) ; ?z = ?x \\<cdot> ?y ; ?z\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) + - (x ; 1))", "by fastforce"], ["proof (state)\nthis:\n  end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) + - (x ; 1))\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "also"], ["proof (state)\nthis:\n  end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) + - (x ; 1))\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "have \"... = (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 \\<cdot> -(x\\<^sup>T\\<^sup>\\<star>;p) + (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 \\<cdot> -(x;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) + - (x ; 1)) =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    - (x\\<^sup>T\\<^sup>\\<star> ; p) +\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)", "using inf_sup_distrib1"], ["proof (prove)\nusing this:\n  ?x \\<cdot> (?y + ?z) = ?x \\<cdot> ?y + ?x \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    (- (x\\<^sup>T\\<^sup>\\<star> ; p) + - (x ; 1)) =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    - (x\\<^sup>T\\<^sup>\\<star> ; p) +\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)", "by blast"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) + - (x ; 1)) =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  - (x\\<^sup>T\\<^sup>\\<star> ; p) +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  (- (x\\<^sup>T\\<^sup>\\<star> ; p) + - (x ; 1)) =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  - (x\\<^sup>T\\<^sup>\\<star> ; p) +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "have \"... = (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 \\<cdot> -(x;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    - (x\\<^sup>T\\<^sup>\\<star> ; p) +\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1) =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)", "using 2"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  - (x\\<^sup>T\\<^sup>\\<star> ; p) =\n  0\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n    - (x\\<^sup>T\\<^sup>\\<star> ; p) +\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1) =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)", "by simp"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  - (x\\<^sup>T\\<^sup>\\<star> ; p) +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1) =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot>\n  - (x\\<^sup>T\\<^sup>\\<star> ; p) +\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1) =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "have \"... \\<le> x\\<^sup>T;1 \\<cdot> -(x;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n    \\<le> end_points x", "using meet_iso mult_subdistr_var"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n  (?x \\<cdot> ?y) ; ?z \\<le> ?x ; ?z \\<cdot> ?y ; ?z\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n    \\<le> end_points x", "by fastforce"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<cdot> - (x ; 1)\n  \\<le> end_points x\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "finally"], ["proof (chain)\npicking this:\n  end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "show ?thesis"], ["proof (prove)\nusing this:\n  end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "."], ["proof (state)\nthis:\n  end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_from_given_point':\n  assumes \"has_start_points_path x\"\n      and \"point p\"\n      and \"p \\<le> x;1\" (* p has a successor hence path not empty *)\n    shows \"path(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\"\n      and \"start_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) = p\"\n      and \"end_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) = end_points(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) &&&\n    start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = p &&&\n    end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = end_points x", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. path (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n 2. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = p\n 3. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = end_points x", "show \"path(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "using assms path_from_given_point(1)"], ["proof (prove)\nusing this:\n  has_start_points_path x\n  point p\n  p \\<le> x ; 1\n  \\<lbrakk>path ?x; point ?p\\<rbrakk>\n  \\<Longrightarrow> path (?x\\<^sup>T\\<^sup>\\<star> ; ?p \\<cdot> ?x)\n\ngoal (1 subgoal):\n 1. path (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "by blast"], ["proof (state)\nthis:\n  path (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal (2 subgoals):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = p\n 2. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = end_points x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = p\n 2. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = end_points x", "show \"start_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = p", "proof (simp only: eq_iff; rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n 2. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "show \"start_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "using assms path_from_given_point(2)"], ["proof (prove)\nusing this:\n  has_start_points_path x\n  point p\n  p \\<le> x ; 1\n  \\<lbrakk>path ?x; point ?p\\<rbrakk>\n  \\<Longrightarrow> start_points (?x\\<^sup>T\\<^sup>\\<star> ; ?p \\<cdot> ?x)\n                    \\<le> ?p\n\ngoal (1 subgoal):\n 1. start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p", "by blast"], ["proof (state)\nthis:\n  start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> p\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "show \"p \\<le> start_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have 1: \"is_vector(x\\<^sup>T\\<^sup>\\<star>;p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)", "using assms(2) comp_assoc is_vector_def point_equations(1) point_is_point"], ["proof (prove)\nusing this:\n  point p\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  is_vector ?x \\<equiv> ?x = ?x ; 1\n  is_point ?p \\<Longrightarrow> ?p ; 1 = ?p\n  point ?x = is_point ?x\n\ngoal (1 subgoal):\n 1. is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)", "by fastforce"], ["proof (state)\nthis:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "hence a: \"p \\<le> (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x);1\""], ["proof (prove)\nusing this:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. p \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1", "by (metis vector_1 assms(3) conway.dagger_unfoldl_distr inf.orderI inf_greatest\n                  inf_sup_absorb)"], ["proof (state)\nthis:\n  p \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have \"x\\<^sup>T\\<^sup>+;p \\<cdot> p \\<le> (x\\<^sup>T\\<^sup>+ \\<cdot> 1'); p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> (x\\<^sup>T\\<^sup>+ \\<cdot> 1') ; p", "using assms(2) inj_distr point_def"], ["proof (prove)\nusing this:\n  point p\n  is_inj ?z \\<Longrightarrow> (?x \\<cdot> ?y) ; ?z = ?x ; ?z \\<cdot> ?y ; ?z\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> (x\\<^sup>T\\<^sup>+ \\<cdot> 1') ; p", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> (x\\<^sup>T\\<^sup>+ \\<cdot> 1') ; p\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "also"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> (x\\<^sup>T\\<^sup>+ \\<cdot> 1') ; p\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have \"... \\<le> (-1'\\<^sup>T \\<cdot> 1'); p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>+ \\<cdot> 1') ; p \\<le> (- 1'\\<^sup>T \\<cdot> 1') ; p", "using assms(1) path_acyclic"], ["proof (prove)\nusing this:\n  has_start_points_path x\n  has_start_points_path ?x \\<Longrightarrow> is_acyclic ?x\n\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>+ \\<cdot> 1') ; p \\<le> (- 1'\\<^sup>T \\<cdot> 1') ; p", "by (metis conv_contrav conv_e meet_iso mult_isor star_conv star_slide_var test_converse)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>+ \\<cdot> 1') ; p \\<le> (- 1'\\<^sup>T \\<cdot> 1') ; p\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>+ \\<cdot> 1') ; p \\<le> (- 1'\\<^sup>T \\<cdot> 1') ; p\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have \"... \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- 1'\\<^sup>T \\<cdot> 1') ; p \\<le> 0", "by simp"], ["proof (state)\nthis:\n  (- 1'\\<^sup>T \\<cdot> 1') ; p \\<le> 0\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> 0", "have 2: \"x\\<^sup>T\\<^sup>+;p \\<cdot> p \\<le> 0\""], ["proof (prove)\nusing this:\n  x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> 0", "."], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> 0\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have b: \"p \\<le> -((x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "have \"(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1 = ((x\\<^sup>T\\<^sup>\\<star>;p)\\<^sup>T \\<cdot> x\\<^sup>T);1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n    ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1", "by (simp add: star_conv)"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 =\n  ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "have \"... = x\\<^sup>T;(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1 =\n    x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)", "using 1 vector_2 inf.commute"], ["proof (prove)\nusing this:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n  is_vector ?y \\<Longrightarrow>\n  (?x \\<cdot> ?y\\<^sup>T) ; ?z = ?x ; (?y \\<cdot> ?z)\n  ?a \\<cdot> ?b = ?b \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1 =\n    x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)", "by fastforce"], ["proof (state)\nthis:\n  ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1 =\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  ((x\\<^sup>T\\<^sup>\\<star> ; p)\\<^sup>T \\<cdot> x\\<^sup>T) ; 1 =\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1)\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "have \"... = x\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>;p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1) =\n    x\\<^sup>T\\<^sup>+ ; p", "by (simp add: comp_assoc)"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1) =\n  x\\<^sup>T\\<^sup>+ ; p\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> 1) =\n  x\\<^sup>T\\<^sup>+ ; p\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "have \"... \\<le> -p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ ; p \\<le> - p", "using 2 galois_aux le_bot"], ["proof (prove)\nusing this:\n  x\\<^sup>T\\<^sup>+ ; p \\<cdot> p \\<le> 0\n  (?x \\<cdot> ?y = 0) = (?x \\<le> - ?y)\n  ?a \\<le> 0 \\<Longrightarrow> ?a = 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ ; p \\<le> - p", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>+ ; p \\<le> - p\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "finally"], ["proof (chain)\npicking this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<le> - p", "show ?thesis"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<le> - p\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "using compl_le_swap1"], ["proof (prove)\nusing this:\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1 \\<le> - p\n  ?y \\<le> - ?x \\<Longrightarrow> ?x \\<le> - ?y\n\ngoal (1 subgoal):\n 1. p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "by blast"], ["proof (state)\nthis:\n  p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "with a"], ["proof (chain)\npicking this:\n  p \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  p \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "by simp"], ["proof (state)\nthis:\n  p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<le> start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  start_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = p\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = end_points x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = end_points x", "show \"end_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) = end_points(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = end_points x", "proof (simp only: eq_iff; rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x\n 2. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "show \"end_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x) \\<le> end_points(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "using assms path_from_given_point(3)"], ["proof (prove)\nusing this:\n  has_start_points_path x\n  point p\n  p \\<le> x ; 1\n  \\<lbrakk>path ?x; point ?p\\<rbrakk>\n  \\<Longrightarrow> end_points (?x\\<^sup>T\\<^sup>\\<star> ; ?p \\<cdot> ?x)\n                    \\<le> end_points ?x\n\ngoal (1 subgoal):\n 1. end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x", "by blast"], ["proof (state)\nthis:\n  end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) \\<le> end_points x\n\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "show \"end_points(x) \\<le> end_points(x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have 1: \"is_vector(x\\<^sup>T\\<^sup>\\<star>;p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)", "using assms(2) comp_assoc is_vector_def point_equations(1) point_is_point"], ["proof (prove)\nusing this:\n  point p\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  is_vector ?x \\<equiv> ?x = ?x ; 1\n  is_point ?p \\<Longrightarrow> ?p ; 1 = ?p\n  point ?x = is_point ?x\n\ngoal (1 subgoal):\n 1. is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)", "by fastforce"], ["proof (state)\nthis:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have 2: \"is_vector(end_points(x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (end_points x)", "by (simp add: comp_assoc is_vector_def one_compl vector_1_comm)"], ["proof (state)\nthis:\n  is_vector (end_points x)\n\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have a: \"end_points(x) \\<le> (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "have \"x\\<^sup>T;1 \\<cdot> 1;x\\<^sup>T = x\\<^sup>T;1;x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T = x\\<^sup>T ; 1 ; x\\<^sup>T", "by (simp add: vector_meet_comp_x')"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T = x\\<^sup>T ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T = x\\<^sup>T ; 1 ; x\\<^sup>T\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>\\<star>", "using assms(1) path_concat_aux3_3 sup.commute"], ["proof (prove)\nusing this:\n  has_start_points_path x\n  path ?x \\<Longrightarrow>\n  ?x\\<^sup>T ; 1 ; ?x\\<^sup>T\n  \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n  ?a + ?b = ?b + ?a\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 ; x\\<^sup>T\n    \\<le> x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>\\<star>", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "have \"... = x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>\\<star> =\n    x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>+", "by (simp add: star_star_plus sup.commute)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>\\<star> =\n  x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>+\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "also"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>\\<star> =\n  x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>+\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star> + x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>+\n    \\<le> x\\<^sup>T\\<^sup>\\<star> + x ; 1", "using join_isol mult_isol"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n  ?x \\<le> ?y \\<Longrightarrow> ?z ; ?x \\<le> ?z ; ?y\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>+\n    \\<le> x\\<^sup>T\\<^sup>\\<star> + x ; 1", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> + x\\<^sup>+ \\<le> x\\<^sup>T\\<^sup>\\<star> + x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + x ; 1", "have \"end_points(x) \\<cdot> 1;x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star> + x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>", "by (metis galois_1 inf.assoc inf.commute sup_commute)"], ["proof (state)\nthis:\n  end_points x \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "hence \"end_points(x) \\<cdot> p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  end_points x \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<cdot> p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>", "using assms(3)"], ["proof (prove)\nusing this:\n  end_points x \\<cdot> 1 ; x\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n  p \\<le> x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<cdot> p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>", "by (metis conv_contrav conv_iso conv_one dual_order.trans inf.cobounded1 inf.right_idem\n                    inf_mono)"], ["proof (state)\nthis:\n  end_points x \\<cdot> p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "hence \"end_points(x) ; p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  end_points x \\<cdot> p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x ; p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>", "using assms(2) 2"], ["proof (prove)\nusing this:\n  end_points x \\<cdot> p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n  point p\n  is_vector (end_points x)\n\ngoal (1 subgoal):\n 1. end_points x ; p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>", "by (simp add: point_def vector_meet_comp)"], ["proof (state)\nthis:\n  end_points x ; p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "hence \"end_points(x) \\<le> x\\<^sup>T\\<^sup>\\<star>;p\""], ["proof (prove)\nusing this:\n  end_points x ; p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. end_points x \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "using assms(2) point_def ss423bij"], ["proof (prove)\nusing this:\n  end_points x ; p\\<^sup>T \\<le> x\\<^sup>T\\<^sup>\\<star>\n  point p\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  bijective ?x \\<Longrightarrow>\n  (?y ; ?x\\<^sup>T \\<le> ?z) = (?y \\<le> ?z ; ?x)\n\ngoal (1 subgoal):\n 1. end_points x \\<le> x\\<^sup>T\\<^sup>\\<star> ; p", "by blast"], ["proof (state)\nthis:\n  end_points x \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "hence \"x\\<^sup>T;1 \\<le> x\\<^sup>T\\<^sup>\\<star>;p + x;1\""], ["proof (prove)\nusing this:\n  end_points x \\<le> x\\<^sup>T\\<^sup>\\<star> ; p\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>\\<star> ; p + x ; 1", "by (simp add: galois_1 sup_commute)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>\\<star> ; p + x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "hence \"x\\<^sup>T;1 \\<le> x\\<^sup>T\\<^sup>+;p + p + x;1\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>\\<star> ; p + x ; 1\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>+ ; p + p + x ; 1", "by (metis conway.dagger_unfoldl_distr sup_commute)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>+ ; p + p + x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "hence \"x\\<^sup>T;1 \\<le> x\\<^sup>T\\<^sup>+;p + x;1\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>+ ; p + p + x ; 1\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>+ ; p + x ; 1", "by (simp add: assms(3) sup.absorb2 sup.assoc)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>+ ; p + x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "hence \"end_points(x) \\<le> x\\<^sup>T\\<^sup>+;p\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 \\<le> x\\<^sup>T\\<^sup>+ ; p + x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> x\\<^sup>T\\<^sup>+ ; p", "by (simp add: galois_1 sup_commute)"], ["proof (state)\nthis:\n  end_points x \\<le> x\\<^sup>T\\<^sup>+ ; p\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "also"], ["proof (state)\nthis:\n  end_points x \\<le> x\\<^sup>T\\<^sup>+ ; p\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "have \"... = (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x)\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ ; p =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "using 1 inf_commute mult_assoc vector_2"], ["proof (prove)\nusing this:\n  is_vector (x\\<^sup>T\\<^sup>\\<star> ; p)\n  ?x \\<cdot> ?y = ?y \\<cdot> ?x\n  ?a ; ?b ; ?c = ?a ; (?b ; ?c)\n  is_vector ?y \\<Longrightarrow>\n  (?x \\<cdot> ?y\\<^sup>T) ; ?z = ?x ; (?y \\<cdot> ?z)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>+ ; p =\n    (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>+ ; p =\n  (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "finally"], ["proof (chain)\npicking this:\n  end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "show ?thesis"], ["proof (prove)\nusing this:\n  end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1", "."], ["proof (state)\nthis:\n  end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "have \"x\\<^sup>T;1 \\<cdot> (x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x);1 \\<le> x;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n    \\<le> x ; 1", "by (simp add: le_infI2 mult_isor)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  \\<le> x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "hence b: \"end_points(x) \\<le> -((x\\<^sup>T\\<^sup>\\<star>;p \\<cdot> x);1)\""], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  \\<le> x ; 1\n\ngoal (1 subgoal):\n 1. end_points x \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1)", "using galois_1 galois_2"], ["proof (prove)\nusing this:\n  x\\<^sup>T ; 1 \\<cdot> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1\n  \\<le> x ; 1\n  (?x \\<cdot> - ?y \\<le> ?z) = (?x \\<le> ?y + ?z)\n  (?x \\<le> ?y + - ?z) = (?x \\<cdot> ?z \\<le> ?y)\n\ngoal (1 subgoal):\n 1. end_points x \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1)", "by blast"], ["proof (state)\nthis:\n  end_points x \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1)\n\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "with a"], ["proof (chain)\npicking this:\n  end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n  end_points x \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  end_points x \\<le> (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\\<^sup>T ; 1\n  end_points x \\<le> - ((x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) ; 1)\n\ngoal (1 subgoal):\n 1. end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)", "by simp"], ["proof (state)\nthis:\n  end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  end_points x \\<le> end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  end_points (x\\<^sup>T\\<^sup>\\<star> ; p \\<cdot> x) = end_points x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Cycles\\<close>"], ["", "lemma selfloop_is_cycle:\n  assumes \"is_point x\"\n  shows \"cycle (x;x\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle (x ; x\\<^sup>T)", "by (simp add: assms edge_is_path)"], ["", "lemma start_point_no_cycle:\n  assumes \"has_start_points_path x\"\n    shows \"\\<not> cycle x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> cycle x", "using assms many_strongly_connected_implies_no_start_end_points no_start_end_points_iff\n      start_point_iff1 start_point_iff2"], ["proof (prove)\nusing this:\n  has_start_points_path x\n  many_strongly_connected ?x \\<Longrightarrow> no_start_end_points ?x\n  no_start_end_points ?x = (no_start_points ?x \\<and> no_end_points ?x)\n  path ?x \\<Longrightarrow>\n  is_point (start_points ?x) = (\\<not> no_start_points ?x)\n  path ?x \\<Longrightarrow> is_point (start_points ?x) = has_start_points ?x\n\ngoal (1 subgoal):\n 1. \\<not> cycle x", "by blast"], ["", "lemma end_point_no_cycle:\n  assumes \"has_end_points_path x\"\n    shows \"\\<not> cycle x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> cycle x", "using assms end_point_iff2 end_point_iff1 many_strongly_connected_implies_no_start_end_points\n      no_start_end_points_iff"], ["proof (prove)\nusing this:\n  has_end_points_path x\n  path ?x \\<Longrightarrow> is_point (end_points ?x) = has_end_points ?x\n  path ?x \\<Longrightarrow>\n  is_point (end_points ?x) = (\\<not> no_end_points ?x)\n  many_strongly_connected ?x \\<Longrightarrow> no_start_end_points ?x\n  no_start_end_points ?x = (no_start_points ?x \\<and> no_end_points ?x)\n\ngoal (1 subgoal):\n 1. \\<not> cycle x", "by blast"], ["", "lemma cycle_no_points:\n  assumes \"cycle x\"\n    shows \"start_points x = 0\"\n      and \"end_points x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x = 0 &&& end_points x = 0", "by (metis assms inf_compl_bot many_strongly_connected_implies_no_start_end_points)+"], ["", "text \\<open>Path concatenation to cycle\\<close>"], ["", "lemma path_path_equals_cycle_aux:\n  assumes \"has_start_end_points_path x\"\n      and \"has_start_end_points_path y\"\n      and \"start_points x = end_points y\"\n      and \"end_points x = start_points y\"\nshows \"x \\<le> (x+y)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "let ?e = \"end_points(x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "let ?s = \"start_points(x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have sp: \"is_point(?s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_point (start_points x)", "using assms(1) start_point_iff2 has_start_end_points_path_iff"], ["proof (prove)\nusing this:\n  has_start_end_points_path x\n  path ?x \\<Longrightarrow> is_point (start_points ?x) = has_start_points ?x\n  has_start_end_points_path ?x =\n  (has_start_points_path ?x \\<and> has_end_points_path ?x)\n\ngoal (1 subgoal):\n 1. is_point (start_points x)", "by blast"], ["proof (state)\nthis:\n  is_point (start_points x)\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have ep: \"is_point(?e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_point (end_points x)", "using assms(1) end_point_iff2 has_start_end_points_path_iff"], ["proof (prove)\nusing this:\n  has_start_end_points_path x\n  path ?x \\<Longrightarrow> is_point (end_points ?x) = has_end_points ?x\n  has_start_end_points_path ?x =\n  (has_start_points_path ?x \\<and> has_end_points_path ?x)\n\ngoal (1 subgoal):\n 1. is_point (end_points x)", "by blast"], ["proof (state)\nthis:\n  is_point (end_points x)\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have \"x \\<le> x\\<^sup>T\\<^sup>\\<star>;?s;1 \\<cdot> 1;?e\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 \\<cdot>\n            1 ; end_points x\\<^sup>T ; x\\<^sup>T\\<^sup>\\<star>", "by (metis assms(1) backward_terminating_path_start_points_2 end_point_iff2 ep\n                forward_terminating_iff1 forward_terminating_path_end_points_2 comp_assoc\n                conv_contrav conv_invol conv_iso inf.boundedI point_equations(1) point_equations(4)\n                star_conv sp start_point_iff2)"], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 \\<cdot>\n          1 ; end_points x\\<^sup>T ; x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 \\<cdot>\n          1 ; end_points x\\<^sup>T ; x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have \"... = x\\<^sup>T\\<^sup>\\<star>;?s;1;?e\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 \\<cdot>\n    1 ; end_points x\\<^sup>T ; x\\<^sup>T\\<^sup>\\<star> =\n    x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 ; end_points x\\<^sup>T ;\n    x\\<^sup>T\\<^sup>\\<star>", "by (metis inf_commute inf_top_right ra_1)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 \\<cdot>\n  1 ; end_points x\\<^sup>T ; x\\<^sup>T\\<^sup>\\<star> =\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 ; end_points x\\<^sup>T ;\n  x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 \\<cdot>\n  1 ; end_points x\\<^sup>T ; x\\<^sup>T\\<^sup>\\<star> =\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 ; end_points x\\<^sup>T ;\n  x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have \"... = x\\<^sup>T\\<^sup>\\<star>;?s;?e\\<^sup>T;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 ; end_points x\\<^sup>T ;\n    x\\<^sup>T\\<^sup>\\<star> =\n    x\\<^sup>T\\<^sup>\\<star> ; start_points x ; end_points x\\<^sup>T ;\n    x\\<^sup>T\\<^sup>\\<star>", "by (metis ep comp_assoc point_equations(4))"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 ; end_points x\\<^sup>T ;\n  x\\<^sup>T\\<^sup>\\<star> =\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; end_points x\\<^sup>T ;\n  x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; 1 ; end_points x\\<^sup>T ;\n  x\\<^sup>T\\<^sup>\\<star> =\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; end_points x\\<^sup>T ;\n  x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> x\\<^sup>T\\<^sup>\\<star>;y\\<^sup>T\\<^sup>\\<star>;x\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; start_points x ; end_points x\\<^sup>T ;\n    x\\<^sup>T\\<^sup>\\<star>\n    \\<le> x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star> ;\n          x\\<^sup>T\\<^sup>\\<star>", "by (metis (mono_tags, lifting) assms(2-4) start_to_end comp_assoc conv_contrav conv_invol\n                conv_iso mult_double_iso star_conv)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; end_points x\\<^sup>T ;\n  x\\<^sup>T\\<^sup>\\<star>\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star> ;\n        x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; start_points x ; end_points x\\<^sup>T ;\n  x\\<^sup>T\\<^sup>\\<star>\n  \\<le> x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star> ;\n        x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have \"... = (x\\<^sup>\\<star>;y\\<^sup>\\<star>;x\\<^sup>\\<star>)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star> ;\n    x\\<^sup>T\\<^sup>\\<star> =\n    (x\\<^sup>\\<star> ; y\\<^sup>\\<star> ; x\\<^sup>\\<star>)\\<^sup>T", "by (simp add: comp_assoc star_conv)"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star> ;\n  x\\<^sup>T\\<^sup>\\<star> =\n  (x\\<^sup>\\<star> ; y\\<^sup>\\<star> ; x\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T\\<^sup>\\<star> ; y\\<^sup>T\\<^sup>\\<star> ;\n  x\\<^sup>T\\<^sup>\\<star> =\n  (x\\<^sup>\\<star> ; y\\<^sup>\\<star> ; x\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have \"... \\<le> ((x+y)\\<^sup>\\<star>;(x+y)\\<^sup>\\<star>;(x+y)\\<^sup>\\<star>)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> ; y\\<^sup>\\<star> ; x\\<^sup>\\<star>)\\<^sup>T\n    \\<le> ((x + y)\\<^sup>\\<star> ; (x + y)\\<^sup>\\<star> ;\n           (x + y)\\<^sup>\\<star>)\\<^sup>T", "by (metis conv_invol conv_iso prod_star_closure star_conv star_denest star_ext star_iso\n                star_trans_eq sup_ge1)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> ; y\\<^sup>\\<star> ; x\\<^sup>\\<star>)\\<^sup>T\n  \\<le> ((x + y)\\<^sup>\\<star> ; (x + y)\\<^sup>\\<star> ;\n         (x + y)\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> ; y\\<^sup>\\<star> ; x\\<^sup>\\<star>)\\<^sup>T\n  \\<le> ((x + y)\\<^sup>\\<star> ; (x + y)\\<^sup>\\<star> ;\n         (x + y)\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "have \"... = (x+y)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x + y)\\<^sup>\\<star> ; (x + y)\\<^sup>\\<star> ;\n     (x + y)\\<^sup>\\<star>)\\<^sup>T =\n    (x + y)\\<^sup>T\\<^sup>\\<star>", "by (metis star_conv star_trans_eq)"], ["proof (state)\nthis:\n  ((x + y)\\<^sup>\\<star> ; (x + y)\\<^sup>\\<star> ;\n   (x + y)\\<^sup>\\<star>)\\<^sup>T =\n  (x + y)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "show x: \"x \\<le> (x+y)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  x \\<le> (x + y)\\<^sup>T\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_path_equals_cycle:\n  assumes \"has_start_end_points_path x\"\n      and \"has_start_end_points_path y\"\n      and \"start_points x = end_points y\"\n      and \"end_points x = start_points y\"\n      and \"x;1 \\<cdot> (x\\<^sup>T;1 + y;1) \\<cdot> y\\<^sup>T;1 = 0\"\n    shows \"cycle(x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle (x + y)", "proof (intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. path (x + y)\n 2. many_strongly_connected (x + y)", "show \"path (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x + y)", "apply (rule path_concatenation)"], ["proof (prove)\ngoal (4 subgoals):\n 1. forward_terminating_path x\n 2. backward_terminating_path y\n 3. end_points x = start_points y\n 4. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0", "using assms"], ["proof (prove)\nusing this:\n  has_start_end_points_path x\n  has_start_end_points_path y\n  start_points x = end_points y\n  end_points x = start_points y\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0\n\ngoal (4 subgoals):\n 1. forward_terminating_path x\n 2. backward_terminating_path y\n 3. end_points x = start_points y\n 4. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + y ; 1) \\<cdot> y\\<^sup>T ; 1 = 0", "by(simp_all add:has_start_end_points_iff)"], ["proof (state)\nthis:\n  path (x + y)\n\ngoal (1 subgoal):\n 1. many_strongly_connected (x + y)", "show \"many_strongly_connected (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_strongly_connected (x + y)", "by (metis path_path_equals_cycle_aux assms(1-4) sup.commute le_supI many_strongly_connected_iff_3)"], ["proof (state)\nthis:\n  many_strongly_connected (x + y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_edge_equals_cycle:\n  assumes \"has_start_end_points_path x\"\n    shows \"cycle(x + end_points(x);(start_points x)\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle (x + end_points x ; start_points x\\<^sup>T)", "proof (rule path_path_equals_cycle)"], ["proof (state)\ngoal (5 subgoals):\n 1. has_start_end_points_path x\n 2. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)\n 3. start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n 4. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 5. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "let ?s = \"start_points x\""], ["proof (state)\ngoal (5 subgoals):\n 1. has_start_end_points_path x\n 2. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)\n 3. start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n 4. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 5. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "let ?e = \"end_points x\""], ["proof (state)\ngoal (5 subgoals):\n 1. has_start_end_points_path x\n 2. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)\n 3. start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n 4. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 5. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "let ?y = \"(?e;?s\\<^sup>T)\""], ["proof (state)\ngoal (5 subgoals):\n 1. has_start_end_points_path x\n 2. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)\n 3. start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n 4. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 5. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "have sp: \"is_point(?s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_point (start_points x)", "using start_point_iff2 assms has_start_end_points_path_iff"], ["proof (prove)\nusing this:\n  path ?x \\<Longrightarrow> is_point (start_points ?x) = has_start_points ?x\n  has_start_end_points_path x\n  has_start_end_points_path ?x =\n  (has_start_points_path ?x \\<and> has_end_points_path ?x)\n\ngoal (1 subgoal):\n 1. is_point (start_points x)", "by blast"], ["proof (state)\nthis:\n  is_point (start_points x)\n\ngoal (5 subgoals):\n 1. has_start_end_points_path x\n 2. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)\n 3. start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n 4. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 5. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "have ep: \"is_point(?e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_point (end_points x)", "using end_point_iff2 assms has_start_end_points_path_iff"], ["proof (prove)\nusing this:\n  path ?x \\<Longrightarrow> is_point (end_points ?x) = has_end_points ?x\n  has_start_end_points_path x\n  has_start_end_points_path ?x =\n  (has_start_points_path ?x \\<and> has_end_points_path ?x)\n\ngoal (1 subgoal):\n 1. is_point (end_points x)", "by blast"], ["proof (state)\nthis:\n  is_point (end_points x)\n\ngoal (5 subgoals):\n 1. has_start_end_points_path x\n 2. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)\n 3. start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n 4. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 5. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "show \"has_start_end_points_path x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_end_points_path x", "using assms"], ["proof (prove)\nusing this:\n  has_start_end_points_path x\n\ngoal (1 subgoal):\n 1. has_start_end_points_path x", "by blast"], ["proof (state)\nthis:\n  has_start_end_points_path x\n\ngoal (4 subgoals):\n 1. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)\n 2. start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n 3. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 4. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "show \"has_start_end_points_path ?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)", "using edge_is_path"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_point ?p; is_point ?q\\<rbrakk>\n  \\<Longrightarrow> path (?p ; ?q\\<^sup>T)\n\ngoal (1 subgoal):\n 1. has_start_end_points_path (end_points x ; start_points x\\<^sup>T)", "by (metis assms edge_end edge_start end_point_iff2 end_point_iff1 galois_aux2\n              has_start_end_points_iff inf.left_idem inf_compl_bot_right start_point_iff2)"], ["proof (state)\nthis:\n  has_start_end_points_path (end_points x ; start_points x\\<^sup>T)\n\ngoal (3 subgoals):\n 1. start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n 2. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 3. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "show \"?s = end_points ?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points x = end_points (end_points x ; start_points x\\<^sup>T)", "by (metis sp ep edge_end annil conv_zero inf.left_idem inf_compl_bot_right)"], ["proof (state)\nthis:\n  start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n\ngoal (2 subgoals):\n 1. end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n 2. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "thus \"?e = start_points ?y\""], ["proof (prove)\nusing this:\n  start_points x = end_points (end_points x ; start_points x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. end_points x = start_points (end_points x ; start_points x\\<^sup>T)", "by (metis edge_start ep conv_contrav conv_invol sp)"], ["proof (state)\nthis:\n  end_points x = start_points (end_points x ; start_points x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "show \"x;1 \\<cdot> (x\\<^sup>T;1 + ?e;?s\\<^sup>T;1) \\<cdot> (?e;?s\\<^sup>T)\\<^sup>T;1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "have \"x;1 \\<cdot> (x\\<^sup>T;1 + ?e;?s\\<^sup>T;1) \\<cdot> (?e;?s\\<^sup>T)\\<^sup>T;1 = x;1 \\<cdot> (x\\<^sup>T;1 + ?e;1;?s\\<^sup>T;1) \\<cdot> (?s;?e\\<^sup>T);1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; 1 ; start_points x\\<^sup>T ; 1) \\<cdot>\n    start_points x ; end_points x\\<^sup>T ; 1", "using sp comp_assoc point_equations(3)"], ["proof (prove)\nusing this:\n  is_point (start_points x)\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  is_point ?p \\<Longrightarrow> ?p\\<^sup>T ; 1 = 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; 1 ; start_points x\\<^sup>T ; 1) \\<cdot>\n    start_points x ; end_points x\\<^sup>T ; 1", "by fastforce"], ["proof (state)\nthis:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n  (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; 1 ; start_points x\\<^sup>T ; 1) \\<cdot>\n  start_points x ; end_points x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n  (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; 1 ; start_points x\\<^sup>T ; 1) \\<cdot>\n  start_points x ; end_points x\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "have \"... = x;1 \\<cdot> (x\\<^sup>T;1 + ?e;1) \\<cdot> ?s;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; 1 ; start_points x\\<^sup>T ; 1) \\<cdot>\n    start_points x ; end_points x\\<^sup>T ; 1 =\n    x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; 1) \\<cdot>\n    start_points x ; 1", "by (metis sp ep comp_assoc point_equations(1,3))"], ["proof (state)\nthis:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; 1 ; start_points x\\<^sup>T ; 1) \\<cdot>\n  start_points x ; end_points x\\<^sup>T ; 1 =\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; 1) \\<cdot>\n  start_points x ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; 1 ; start_points x\\<^sup>T ; 1) \\<cdot>\n  start_points x ; end_points x\\<^sup>T ; 1 =\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; 1) \\<cdot>\n  start_points x ; 1\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "have \"... \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; 1) \\<cdot>\n    start_points x ; 1\n    \\<le> 0", "by (simp add: sp ep inf.assoc point_equations(1))"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> (x\\<^sup>T ; 1 + end_points x ; 1) \\<cdot>\n  start_points x ; 1\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "finally"], ["proof (chain)\npicking this:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n  (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1\n  \\<le> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n  (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "using bot_unique"], ["proof (prove)\nusing this:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n  (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1\n  \\<le> 0\n  (?a \\<le> 0) = (?a = 0)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot>\n    (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n    (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n    0", "by blast"], ["proof (state)\nthis:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n  (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ; 1 \\<cdot>\n  (x\\<^sup>T ; 1 + end_points x ; start_points x\\<^sup>T ; 1) \\<cdot>\n  (end_points x ; start_points x\\<^sup>T)\\<^sup>T ; 1 =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Break cycles\\<close>"], ["", "lemma cycle_remove_edge:\n  assumes \"cycle x\"\n      and \"point s\"\n      and \"point e\"\n      and \"e;s\\<^sup>T \\<le> x\"\n    shows \"path(x \\<cdot> -(e;s\\<^sup>T))\"\n      and \"start_points (x \\<cdot> -(e;s\\<^sup>T)) \\<le> s\"\n      and \"end_points (x \\<cdot> -(e;s\\<^sup>T)) \\<le> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x \\<cdot> - (e ; s\\<^sup>T)) &&&\n    start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s &&&\n    end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. path (x \\<cdot> - (e ; s\\<^sup>T))\n 2. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s\n 3. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "show \"path(x \\<cdot> -(e;s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x \\<cdot> - (e ; s\\<^sup>T))", "proof (unfold path_def; intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))\n 2. is_p_fun (x \\<cdot> - (e ; s\\<^sup>T))\n 3. is_inj (x \\<cdot> - (e ; s\\<^sup>T))", "show 1: \"is_p_fun(x \\<cdot> -(e;s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_p_fun (x \\<cdot> - (e ; s\\<^sup>T))", "using assms(1) path_def is_p_fun_def p_fun_mult_var"], ["proof (prove)\nusing this:\n  cycle x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  is_p_fun ?x \\<equiv> ?x\\<^sup>T ; ?x \\<le> 1'\n  ?x\\<^sup>T ; ?x \\<le> 1' \\<Longrightarrow>\n  (?x \\<cdot> ?y)\\<^sup>T ; (?x \\<cdot> ?y) \\<le> 1'\n\ngoal (1 subgoal):\n 1. is_p_fun (x \\<cdot> - (e ; s\\<^sup>T))", "by blast"], ["proof (state)\nthis:\n  is_p_fun (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal (2 subgoals):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))\n 2. is_inj (x \\<cdot> - (e ; s\\<^sup>T))", "show 2: \"is_inj(x \\<cdot> -(e;s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_inj (x \\<cdot> - (e ; s\\<^sup>T))", "using assms(1) path_def inf.cobounded1 injective_down_closed"], ["proof (prove)\nusing this:\n  cycle x\n  path ?x \\<equiv> connected ?x \\<and> is_p_fun ?x \\<and> is_inj ?x\n  ?a \\<cdot> ?b \\<le> ?a\n  \\<lbrakk>is_inj ?x; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> is_inj ?y\n\ngoal (1 subgoal):\n 1. is_inj (x \\<cdot> - (e ; s\\<^sup>T))", "by blast"], ["proof (state)\nthis:\n  is_inj (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "show \"connected (x \\<cdot> -(e;s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"x\\<^sup>\\<star> = ((x \\<cdot> -(e;s\\<^sup>T)) + e;s\\<^sup>T)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> =\n    (x \\<cdot> - (e ; s\\<^sup>T) + e ; s\\<^sup>T)\\<^sup>\\<star>", "by (metis assms(4) aux4_comm inf.absorb2)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T) + e ; s\\<^sup>T)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T) + e ; s\\<^sup>T)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... = (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; (e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T) + e ; s\\<^sup>T)\\<^sup>\\<star> =\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n    (e ; s\\<^sup>T ;\n     (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T) + e ; s\\<^sup>T)\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T) + e ; s\\<^sup>T)\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... = (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; (1' + e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>;(e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n    (e ; s\\<^sup>T ;\n     (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star> =\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n    (1' +\n     (e ; s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>+)", "by fastforce"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (1' +\n   (e ; s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>+)\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (1' +\n   (e ; s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>+)\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... = (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>;(e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n    (1' +\n     (e ; s\\<^sup>T ;\n      (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>+) =\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n    (e ; s\\<^sup>T ;\n     (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>", "by (simp add: distrib_left mult_assoc)"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (1' +\n   (e ; s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>+) =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (1' +\n   (e ; s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>+) =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... = (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; e;(s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>;e)\\<^sup>\\<star>;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n    (e ; s\\<^sup>T ;\n     (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star> =\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ;\n    (s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n     e)\\<^sup>\\<star> ;\n    s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "by (simp add: comp_assoc star_slide)"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ;\n  (s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n   e)\\<^sup>\\<star> ;\n  s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ;\n  (s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n   e)\\<^sup>\\<star> ;\n  s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; e;1;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ;\n    (s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n     e)\\<^sup>\\<star> ;\n    s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n    \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; 1 ; s\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "using top_greatest join_isol mult_double_iso"], ["proof (prove)\nusing this:\n  ?a \\<le> 1\n  ?x \\<le> ?y \\<Longrightarrow> ?z + ?x \\<le> ?z + ?y\n  ?x \\<le> ?y \\<Longrightarrow> ?w ; ?x ; ?z \\<le> ?w ; ?y ; ?z\n\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ;\n    (s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n     e)\\<^sup>\\<star> ;\n    s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n    \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; 1 ; s\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "by (metis mult_assoc)"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ;\n  (s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n   e)\\<^sup>\\<star> ;\n  s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; 1 ; s\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ;\n  (s\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n   e)\\<^sup>\\<star> ;\n  s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; 1 ; s\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... = (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; 1 ; s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> =\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "using assms(3)"], ["proof (prove)\nusing this:\n  point e\n\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; 1 ; s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> =\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "by (simp add: comp_assoc is_vector_def point_def)"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; 1 ; s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "have 3: \"x\\<^sup>\\<star> \\<le> (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star>\n    \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "."], ["proof (state)\nthis:\n  x\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "from assms(4)"], ["proof (chain)\npicking this:\n  e ; s\\<^sup>T \\<le> x", "have \"e;s\\<^sup>T \\<le> e;e\\<^sup>T;x\""], ["proof (prove)\nusing this:\n  e ; s\\<^sup>T \\<le> x\n\ngoal (1 subgoal):\n 1. e ; s\\<^sup>T \\<le> e ; e\\<^sup>T ; x", "using assms(3) comp_assoc mult_isol point_def ss423conv"], ["proof (prove)\nusing this:\n  e ; s\\<^sup>T \\<le> x\n  point e\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  ?x \\<le> ?y \\<Longrightarrow> ?z ; ?x \\<le> ?z ; ?y\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  bijective ?x \\<Longrightarrow>\n  (?x ; ?y \\<le> ?z) = (?y \\<le> ?x\\<^sup>T ; ?z)\n\ngoal (1 subgoal):\n 1. e ; s\\<^sup>T \\<le> e ; e\\<^sup>T ; x", "by fastforce"], ["proof (state)\nthis:\n  e ; s\\<^sup>T \\<le> e ; e\\<^sup>T ; x\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  e ; s\\<^sup>T \\<le> e ; e\\<^sup>T ; x\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> e;e\\<^sup>T;(x\\<^sup>\\<star>)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; x \\<le> e ; e\\<^sup>T ; (x\\<^sup>\\<star>)\\<^sup>T", "using assms(1) many_strongly_connected_iff_3 mult_isol star_conv"], ["proof (prove)\nusing this:\n  cycle x\n  many_strongly_connected ?x = (?x \\<le> ?x\\<^sup>T\\<^sup>\\<star>)\n  ?x \\<le> ?y \\<Longrightarrow> ?z ; ?x \\<le> ?z ; ?y\n  (?x\\<^sup>\\<star>)\\<^sup>T = ?x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; x \\<le> e ; e\\<^sup>T ; (x\\<^sup>\\<star>)\\<^sup>T", "by fastforce"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; x \\<le> e ; e\\<^sup>T ; (x\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; x \\<le> e ; e\\<^sup>T ; (x\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> e;e\\<^sup>T;((x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; (x\\<^sup>\\<star>)\\<^sup>T\n    \\<le> e ; e\\<^sup>T ;\n          ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n           (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n           (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>T", "using 3 conv_iso mult_isol"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n  ?x \\<le> ?y \\<Longrightarrow> ?z ; ?x \\<le> ?z ; ?y\n\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; (x\\<^sup>\\<star>)\\<^sup>T\n    \\<le> e ; e\\<^sup>T ;\n          ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n           (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n           (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>T", "by blast"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x\\<^sup>\\<star>)\\<^sup>T\n  \\<le> e ; e\\<^sup>T ;\n        ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n         (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n         (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x\\<^sup>\\<star>)\\<^sup>T\n  \\<le> e ; e\\<^sup>T ;\n        ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n         (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n         (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>T\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> e;e\\<^sup>T;((x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s;e\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ;\n    ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n     (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n     (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>T\n    \\<le> e ; e\\<^sup>T ;\n          ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n           (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s ;\n           e\\<^sup>T ;\n           (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>)", "by (simp add: star_conv comp_assoc)"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ;\n  ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>T\n  \\<le> e ; e\\<^sup>T ;\n        ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n         (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s ;\n         e\\<^sup>T ;\n         (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ;\n  ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>)\\<^sup>T\n  \\<le> e ; e\\<^sup>T ;\n        ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n         (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s ;\n         e\\<^sup>T ;\n         (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> e;e\\<^sup>T;(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> + e;e\\<^sup>T;(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s;e\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ;\n    ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n     (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s ; e\\<^sup>T ;\n     (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>)\n    \\<le> e ; e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n          e ; e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n          s ;\n          e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "by (simp add: comp_assoc distrib_left)"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ;\n  ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s ; e\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>)\n  \\<le> e ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n        e ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n        s ;\n        e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ;\n  ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s ; e\\<^sup>T ;\n   (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>)\n  \\<le> e ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n        e ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n        s ;\n        e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> e;e\\<^sup>T;(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> + e;1;e\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n    e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n    s ;\n    e\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n    \\<le> e ; e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n          e ; 1 ; e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "by (metis comp_assoc join_isol mult_isol mult_isor top_greatest)"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s ;\n  e\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n  \\<le> e ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n        e ; 1 ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; s ;\n  e\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n  \\<le> e ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n        e ; 1 ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> e;e\\<^sup>T;(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> + e;e\\<^sup>T;(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n    e ; 1 ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n    \\<le> e ; e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n          e ; e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "using assms(3)"], ["proof (prove)\nusing this:\n  point e\n\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n    e ; 1 ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n    \\<le> e ; e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n          e ; e\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "by (simp add: point_equations(1) point_is_point)"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n  e ; 1 ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n  \\<le> e ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n        e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n  e ; 1 ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n  \\<le> e ; e\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n        e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... = e;e\\<^sup>T;(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n    e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> =\n    e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> =\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> +\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> =\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> 1';(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n    \\<le> 1' ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "using assms(3) is_inj_def point_def join_iso mult_isor"], ["proof (prove)\nusing this:\n  point e\n  is_inj ?x \\<equiv> ?x ; ?x\\<^sup>T \\<le> 1'\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x + ?z \\<le> ?y + ?z\n  ?x \\<le> ?y \\<Longrightarrow> ?x ; ?z \\<le> ?y ; ?z\n\ngoal (1 subgoal):\n 1. e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n    \\<le> 1' ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  e ; e\\<^sup>T ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n  \\<le> 1' ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "finally"], ["proof (chain)\npicking this:\n  e ; s\\<^sup>T\n  \\<le> 1' ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "have 4: \"e;s\\<^sup>T \\<le>(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  e ; s\\<^sup>T\n  \\<le> 1' ; (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. e ; s\\<^sup>T \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  e ; s\\<^sup>T \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"(x \\<cdot> -(e;s\\<^sup>T));1;(x \\<cdot> -(e;s\\<^sup>T)) \\<le> x;1;x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 ; (x \\<cdot> - (e ; s\\<^sup>T))\n    \\<le> x ; 1 ; x", "by (simp add: mult_isol_var)"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 ; (x \\<cdot> - (e ; s\\<^sup>T))\n  \\<le> x ; 1 ; x\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 ; (x \\<cdot> - (e ; s\\<^sup>T))\n  \\<le> x ; 1 ; x\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"...\\<le> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x\\<^sup>\\<star>", "using assms(1) connected_iff4 one_strongly_connected_iff one_strongly_connected_implies_8\n              path_concat_aux3_3"], ["proof (prove)\nusing this:\n  cycle x\n  connected ?x =\n  (?x\\<^sup>T ; 1 ; ?x\\<^sup>T\n   \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>)\n  one_strongly_connected ?x =\n  (connected ?x \\<and> many_strongly_connected ?x)\n  one_strongly_connected ?x \\<Longrightarrow>\n  ?x ; 1 ; ?x \\<le> ?x\\<^sup>\\<star>\n  path ?x \\<Longrightarrow>\n  ?x\\<^sup>T ; 1 ; ?x\\<^sup>T\n  \\<le> ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x ; 1 ; x \\<le> x\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  x ; 1 ; x \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  x ; 1 ; x \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; e;s\\<^sup>T ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star>\n    \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "by (rule 3)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ; (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n    \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "using 4"], ["proof (prove)\nusing this:\n  e ; s\\<^sup>T \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n    \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>", "by (metis comp_assoc join_isol mult_isol mult_isor)"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ; e ; s\\<^sup>T ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "have \"... \\<le> (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>\\<star> + (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n    \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "using 1 2 triple_star"], ["proof (prove)\nusing this:\n  is_p_fun (x \\<cdot> - (e ; s\\<^sup>T))\n  is_inj (x \\<cdot> - (e ; s\\<^sup>T))\n  \\<lbrakk>is_inj ?x; is_p_fun ?x\\<rbrakk>\n  \\<Longrightarrow> ?x\\<^sup>\\<star> ; ?x\\<^sup>T\\<^sup>\\<star> ;\n                    ?x\\<^sup>\\<star> =\n                    ?x\\<^sup>\\<star> + ?x\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n    \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n          (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>", "by force"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star> ;\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star>\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>\\<star> +\n        (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "finally"], ["proof (chain)\npicking this:\n  connected (x \\<cdot> - (e ; s\\<^sup>T))", "show ?thesis"], ["proof (prove)\nusing this:\n  connected (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal (1 subgoal):\n 1. connected (x \\<cdot> - (e ; s\\<^sup>T))", "."], ["proof (state)\nthis:\n  connected (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  connected (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  path (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal (2 subgoals):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s\n 2. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s\n 2. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "show \"start_points (x \\<cdot> -(e;s\\<^sup>T)) \\<le> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "have 1: \"is_vector(-s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (- s)", "using assms(2)"], ["proof (prove)\nusing this:\n  point s\n\ngoal (1 subgoal):\n 1. is_vector (- s)", "by (simp add: point_def vector_compl)"], ["proof (state)\nthis:\n  is_vector (- s)\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "have \"(x \\<cdot> -(e;s\\<^sup>T));1 \\<cdot> -s \\<le> x;1 \\<cdot> -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 \\<cdot> - s \\<le> x ; 1 \\<cdot> - s", "using meet_iso mult_subdistr"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n  (?x \\<cdot> ?y) ; ?z \\<le> ?x ; ?z\n\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 \\<cdot> - s \\<le> x ; 1 \\<cdot> - s", "by blast"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 \\<cdot> - s \\<le> x ; 1 \\<cdot> - s\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 \\<cdot> - s \\<le> x ; 1 \\<cdot> - s\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "have \"... \\<le> x\\<^sup>T;1 \\<cdot> -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> - s \\<le> x\\<^sup>T ; 1 \\<cdot> - s", "using assms(1) many_strongly_connected_implies_no_start_end_points meet_iso\n            no_start_end_points_path_iff"], ["proof (prove)\nusing this:\n  cycle x\n  many_strongly_connected ?x \\<Longrightarrow> no_start_end_points ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n  no_start_end_points_path ?x =\n  (no_start_points_path ?x \\<and> no_end_points_path ?x)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> - s \\<le> x\\<^sup>T ; 1 \\<cdot> - s", "by blast"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> - s \\<le> x\\<^sup>T ; 1 \\<cdot> - s\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> - s \\<le> x\\<^sup>T ; 1 \\<cdot> - s\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "have \"... \\<le> (x\\<^sup>T \\<cdot> -s);1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> - s \\<le> (x\\<^sup>T \\<cdot> - s) ; 1", "using 1"], ["proof (prove)\nusing this:\n  is_vector (- s)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> - s \\<le> (x\\<^sup>T \\<cdot> - s) ; 1", "by (simp add: vector_1_comm)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> - s \\<le> (x\\<^sup>T \\<cdot> - s) ; 1\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> - s \\<le> (x\\<^sup>T \\<cdot> - s) ; 1\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "have \"... \\<le> (x\\<^sup>T \\<cdot> -(s;e\\<^sup>T));1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T \\<cdot> - s) ; 1\n    \\<le> (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1", "by (metis 1 galois_aux inf.boundedI inf.cobounded1 inf.commute mult_isor schroeder_2\n                vector_1_comm)"], ["proof (state)\nthis:\n  (x\\<^sup>T \\<cdot> - s) ; 1\n  \\<le> (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "also"], ["proof (state)\nthis:\n  (x\\<^sup>T \\<cdot> - s) ; 1\n  \\<le> (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "have \"... = (x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1 =\n    (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "by (simp add: conv_compl)"], ["proof (state)\nthis:\n  (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1 =\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "finally"], ["proof (chain)\npicking this:\n  (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 \\<cdot> - s\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<cdot> - (e ; s\\<^sup>T)) ; 1 \\<cdot> - s\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "by (simp add: galois_1 sup_commute)"], ["proof (state)\nthis:\n  start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "show \"end_points (x \\<cdot> -(e;s\\<^sup>T)) \\<le> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "have 1: \"is_vector(-e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (- e)", "using assms(3)"], ["proof (prove)\nusing this:\n  point e\n\ngoal (1 subgoal):\n 1. is_vector (- e)", "by (simp add: point_def vector_compl)"], ["proof (state)\nthis:\n  is_vector (- e)\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "have \"(x \\<cdot> -(e;s\\<^sup>T))\\<^sup>T;1 \\<cdot> -e \\<le> x\\<^sup>T;1 \\<cdot> -e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1 \\<cdot> - e\n    \\<le> x\\<^sup>T ; 1 \\<cdot> - e", "using meet_iso mult_subdistr"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n  (?x \\<cdot> ?y) ; ?z \\<le> ?x ; ?z\n\ngoal (1 subgoal):\n 1. (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1 \\<cdot> - e\n    \\<le> x\\<^sup>T ; 1 \\<cdot> - e", "by simp"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1 \\<cdot> - e\n  \\<le> x\\<^sup>T ; 1 \\<cdot> - e\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "also"], ["proof (state)\nthis:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1 \\<cdot> - e\n  \\<le> x\\<^sup>T ; 1 \\<cdot> - e\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "have \"... \\<le> x;1 \\<cdot> -e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> - e \\<le> x ; 1 \\<cdot> - e", "using assms(1) many_strongly_connected_implies_no_start_end_points meet_iso\n            no_start_end_points_path_iff"], ["proof (prove)\nusing this:\n  cycle x\n  many_strongly_connected ?x \\<Longrightarrow> no_start_end_points ?x\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n  no_start_end_points_path ?x =\n  (no_start_points_path ?x \\<and> no_end_points_path ?x)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> - e \\<le> x ; 1 \\<cdot> - e", "by blast"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> - e \\<le> x ; 1 \\<cdot> - e\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> - e \\<le> x ; 1 \\<cdot> - e\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "have \"... \\<le> (x \\<cdot> -e);1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> - e \\<le> (x \\<cdot> - e) ; 1", "using 1"], ["proof (prove)\nusing this:\n  is_vector (- e)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> - e \\<le> (x \\<cdot> - e) ; 1", "by (simp add: vector_1_comm)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> - e \\<le> (x \\<cdot> - e) ; 1\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> - e \\<le> (x \\<cdot> - e) ; 1\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "have \"... \\<le> (x \\<cdot> -(e;s\\<^sup>T));1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - e) ; 1 \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "by (metis 1 galois_aux inf.boundedI inf.cobounded1 inf.commute mult_isor schroeder_2\n                vector_1_comm)"], ["proof (state)\nthis:\n  (x \\<cdot> - e) ; 1 \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "finally"], ["proof (chain)\npicking this:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1 \\<cdot> - e\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1 \\<cdot> - e\n  \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "by (simp add: galois_1 sup_commute)"], ["proof (state)\nthis:\n  end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_remove_edge':\n  assumes \"cycle x\"\n      and \"point s\"\n      and \"point e\"\n      and \"s\\<noteq>e\"\n      and \"e;s\\<^sup>T \\<le> x\"\n    shows \"path(x \\<cdot> -(e;s\\<^sup>T))\"\n      and \"s = start_points (x \\<cdot> -(e;s\\<^sup>T))\"\n      and \"e = end_points (x \\<cdot> -(e;s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x \\<cdot> - (e ; s\\<^sup>T)) &&&\n    s = start_points (x \\<cdot> - (e ; s\\<^sup>T)) &&&\n    e = end_points (x \\<cdot> - (e ; s\\<^sup>T))", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. path (x \\<cdot> - (e ; s\\<^sup>T))\n 2. s = start_points (x \\<cdot> - (e ; s\\<^sup>T))\n 3. e = end_points (x \\<cdot> - (e ; s\\<^sup>T))", "show \"path (x \\<cdot> - (e ; s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (x \\<cdot> - (e ; s\\<^sup>T))", "using assms(1,2,3,5) cycle_remove_edge(1)"], ["proof (prove)\nusing this:\n  cycle x\n  point s\n  point e\n  e ; s\\<^sup>T \\<le> x\n  \\<lbrakk>cycle ?x; point ?s; point ?e; ?e ; ?s\\<^sup>T \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> path (?x \\<cdot> - (?e ; ?s\\<^sup>T))\n\ngoal (1 subgoal):\n 1. path (x \\<cdot> - (e ; s\\<^sup>T))", "by blast"], ["proof (state)\nthis:\n  path (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal (2 subgoals):\n 1. s = start_points (x \\<cdot> - (e ; s\\<^sup>T))\n 2. e = end_points (x \\<cdot> - (e ; s\\<^sup>T))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. s = start_points (x \\<cdot> - (e ; s\\<^sup>T))\n 2. e = end_points (x \\<cdot> - (e ; s\\<^sup>T))", "show \"s = start_points (x \\<cdot> - (e ; s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = start_points (x \\<cdot> - (e ; s\\<^sup>T))", "proof (simp only: eq_iff; rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))\n 2. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "show \"s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))", "have a: \"s \\<le> (x \\<cdot> - (e ; s\\<^sup>T));1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "have 1: \"is_vector(-e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (- e)", "using assms(3) point_def vector_compl"], ["proof (prove)\nusing this:\n  point e\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  is_vector ?x \\<Longrightarrow> is_vector (- ?x)\n\ngoal (1 subgoal):\n 1. is_vector (- e)", "by blast"], ["proof (state)\nthis:\n  is_vector (- e)\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "from assms(2-4)"], ["proof (chain)\npicking this:\n  point s\n  point e\n  s \\<noteq> e", "have \"s = s \\<cdot> -e\""], ["proof (prove)\nusing this:\n  point s\n  point e\n  s \\<noteq> e\n\ngoal (1 subgoal):\n 1. s = s \\<cdot> - e", "using comp_assoc edge_end point_equations(1) point_equations(3) point_is_point"], ["proof (prove)\nusing this:\n  point s\n  point e\n  s \\<noteq> e\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  \\<lbrakk>is_point ?p; is_point ?q; ?p \\<noteq> ?q\\<rbrakk>\n  \\<Longrightarrow> end_points (?p ; ?q\\<^sup>T) = ?q\n  is_point ?p \\<Longrightarrow> ?p ; 1 = ?p\n  is_point ?p \\<Longrightarrow> ?p\\<^sup>T ; 1 = 1\n  point ?x = is_point ?x\n\ngoal (1 subgoal):\n 1. s = s \\<cdot> - e", "by fastforce"], ["proof (state)\nthis:\n  s = s \\<cdot> - e\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "also"], ["proof (state)\nthis:\n  s = s \\<cdot> - e\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "have \"... \\<le> x\\<^sup>T;e \\<cdot> -e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<cdot> - e \\<le> x\\<^sup>T ; e \\<cdot> - e", "using assms(3,5) conv_iso meet_iso point_def ss423conv"], ["proof (prove)\nusing this:\n  point e\n  e ; s\\<^sup>T \\<le> x\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  bijective ?x \\<Longrightarrow>\n  (?x ; ?y \\<le> ?z) = (?y \\<le> ?x\\<^sup>T ; ?z)\n\ngoal (1 subgoal):\n 1. s \\<cdot> - e \\<le> x\\<^sup>T ; e \\<cdot> - e", "by fastforce"], ["proof (state)\nthis:\n  s \\<cdot> - e \\<le> x\\<^sup>T ; e \\<cdot> - e\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "also"], ["proof (state)\nthis:\n  s \\<cdot> - e \\<le> x\\<^sup>T ; e \\<cdot> - e\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "have \"... \\<le> x;1 \\<cdot> -e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; e \\<cdot> - e \\<le> x ; 1 \\<cdot> - e", "by (metis assms(1) many_strongly_connected_implies_no_start_end_points meet_iso mult_isol\n                    top_greatest)"], ["proof (state)\nthis:\n  x\\<^sup>T ; e \\<cdot> - e \\<le> x ; 1 \\<cdot> - e\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; e \\<cdot> - e \\<le> x ; 1 \\<cdot> - e\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "have \"... \\<le> (x \\<cdot> -e);1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> - e \\<le> (x \\<cdot> - e) ; 1", "using 1"], ["proof (prove)\nusing this:\n  is_vector (- e)\n\ngoal (1 subgoal):\n 1. x ; 1 \\<cdot> - e \\<le> (x \\<cdot> - e) ; 1", "by (simp add: vector_1_comm)"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> - e \\<le> (x \\<cdot> - e) ; 1\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "also"], ["proof (state)\nthis:\n  x ; 1 \\<cdot> - e \\<le> (x \\<cdot> - e) ; 1\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "have \"... \\<le> (x \\<cdot> - (e ; s\\<^sup>T));1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - e) ; 1 \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "by (metis assms(3) comp_anti is_vector_def meet_isor mult_isol mult_isor point_def\n                    top_greatest)"], ["proof (state)\nthis:\n  (x \\<cdot> - e) ; 1 \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "finally"], ["proof (chain)\npicking this:\n  s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1", "."], ["proof (state)\nthis:\n  s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))", "have b: \"s \\<le> -((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T;1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "have 1: \"x;s =e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; s = e", "using assms predecessor_point'"], ["proof (prove)\nusing this:\n  cycle x\n  point s\n  point e\n  s \\<noteq> e\n  e ; s\\<^sup>T \\<le> x\n  \\<lbrakk>path ?x; point ?s; point ?e; ?e ; ?s\\<^sup>T \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ; ?s = ?e\n\ngoal (1 subgoal):\n 1. x ; s = e", "by blast"], ["proof (state)\nthis:\n  x ; s = e\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "have \"s \\<cdot> x\\<^sup>T = s;(e\\<^sup>T+-(e\\<^sup>T)) \\<cdot> x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<cdot> x\\<^sup>T = s ; (e\\<^sup>T + - e\\<^sup>T) \\<cdot> x\\<^sup>T", "using assms(2) point_equations(1) point_is_point"], ["proof (prove)\nusing this:\n  point s\n  is_point ?p \\<Longrightarrow> ?p ; 1 = ?p\n  point ?x = is_point ?x\n\ngoal (1 subgoal):\n 1. s \\<cdot> x\\<^sup>T = s ; (e\\<^sup>T + - e\\<^sup>T) \\<cdot> x\\<^sup>T", "by fastforce"], ["proof (state)\nthis:\n  s \\<cdot> x\\<^sup>T = s ; (e\\<^sup>T + - e\\<^sup>T) \\<cdot> x\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  s \\<cdot> x\\<^sup>T = s ; (e\\<^sup>T + - e\\<^sup>T) \\<cdot> x\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "have \"... = s;e\\<^sup>T \\<cdot> x\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s ; (e\\<^sup>T + - e\\<^sup>T) \\<cdot> x\\<^sup>T =\n    s ; e\\<^sup>T \\<cdot> x\\<^sup>T", "by (metis 1 conv_contrav inf.commute inf_sup_absorb modular_1')"], ["proof (state)\nthis:\n  s ; (e\\<^sup>T + - e\\<^sup>T) \\<cdot> x\\<^sup>T =\n  s ; e\\<^sup>T \\<cdot> x\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  s ; (e\\<^sup>T + - e\\<^sup>T) \\<cdot> x\\<^sup>T =\n  s ; e\\<^sup>T \\<cdot> x\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "have \"... \\<le> e\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s ; e\\<^sup>T \\<cdot> x\\<^sup>T \\<le> e\\<^sup>T", "by (metis assms(3) inf.coboundedI1 mult_isor point_equations(4) point_is_point\n                    top_greatest)"], ["proof (state)\nthis:\n  s ; e\\<^sup>T \\<cdot> x\\<^sup>T \\<le> e\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "finally"], ["proof (chain)\npicking this:\n  s \\<cdot> x\\<^sup>T \\<le> e\\<^sup>T", "have \"s \\<cdot> x\\<^sup>T \\<le> s \\<cdot> e\\<^sup>T\""], ["proof (prove)\nusing this:\n  s \\<cdot> x\\<^sup>T \\<le> e\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<cdot> x\\<^sup>T \\<le> s \\<cdot> e\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  s \\<cdot> x\\<^sup>T \\<le> s \\<cdot> e\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "also"], ["proof (state)\nthis:\n  s \\<cdot> x\\<^sup>T \\<le> s \\<cdot> e\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "have \"... \\<le> s ; e\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<cdot> e\\<^sup>T \\<le> s ; e\\<^sup>T", "using assms(2,3)"], ["proof (prove)\nusing this:\n  point s\n  point e\n\ngoal (1 subgoal):\n 1. s \\<cdot> e\\<^sup>T \\<le> s ; e\\<^sup>T", "by (simp add: point_def vector_meet_comp)"], ["proof (state)\nthis:\n  s \\<cdot> e\\<^sup>T \\<le> s ; e\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "finally"], ["proof (chain)\npicking this:\n  s \\<cdot> x\\<^sup>T \\<le> s ; e\\<^sup>T", "have 2: \"s \\<cdot> x\\<^sup>T \\<cdot> -(s ; e\\<^sup>T) = 0\""], ["proof (prove)\nusing this:\n  s \\<cdot> x\\<^sup>T \\<le> s ; e\\<^sup>T\n\ngoal (1 subgoal):\n 1. s \\<cdot> x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T) = 0", "using galois_aux2"], ["proof (prove)\nusing this:\n  s \\<cdot> x\\<^sup>T \\<le> s ; e\\<^sup>T\n  (?x \\<cdot> - ?y = 0) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. s \\<cdot> x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T) = 0", "by blast"], ["proof (state)\nthis:\n  s \\<cdot> x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T) = 0\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<cdot> x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T) = 0\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<cdot> x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T) = 0 \\<Longrightarrow>\n    s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "have \"s ; e\\<^sup>T = e\\<^sup>T \\<cdot> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s ; e\\<^sup>T = e\\<^sup>T \\<cdot> s", "using assms(2,3) inf_commute point_def vector_meet_comp"], ["proof (prove)\nusing this:\n  point s\n  point e\n  ?x \\<cdot> ?y = ?y \\<cdot> ?x\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  \\<lbrakk>is_vector ?v; is_vector ?w\\<rbrakk>\n  \\<Longrightarrow> ?v ; ?w\\<^sup>T = ?v \\<cdot> ?w\\<^sup>T\n\ngoal (1 subgoal):\n 1. s ; e\\<^sup>T = e\\<^sup>T \\<cdot> s", "by force"], ["proof (state)\nthis:\n  s ; e\\<^sup>T = e\\<^sup>T \\<cdot> s\n\ngoal (1 subgoal):\n 1. s \\<cdot> x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T) = 0 \\<Longrightarrow>\n    s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  s ; e\\<^sup>T = e\\<^sup>T \\<cdot> s\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "using 2"], ["proof (prove)\nusing this:\n  s ; e\\<^sup>T = e\\<^sup>T \\<cdot> s\n  s \\<cdot> x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T) = 0\n\ngoal (1 subgoal):\n 1. s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "by (metis assms(2,3) conv_compl conv_invol conv_one conv_times galois_aux\n                      inf.assoc point_def point_equations(1) point_is_point schroeder_2\n                      vector_meet_comp)"], ["proof (state)\nthis:\n  s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))", "with a"], ["proof (chain)\npicking this:\n  s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1\n  s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<le> (x \\<cdot> - (e ; s\\<^sup>T)) ; 1\n  s \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1)\n\ngoal (1 subgoal):\n 1. s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))", "by simp"], ["proof (state)\nthis:\n  s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<le> start_points (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "show \"start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "using assms(1,2,3,5) cycle_remove_edge(2)"], ["proof (prove)\nusing this:\n  cycle x\n  point s\n  point e\n  e ; s\\<^sup>T \\<le> x\n  \\<lbrakk>cycle ?x; point ?s; point ?e; ?e ; ?s\\<^sup>T \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> start_points (?x \\<cdot> - (?e ; ?s\\<^sup>T)) \\<le> ?s\n\ngoal (1 subgoal):\n 1. start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s", "by blast"], ["proof (state)\nthis:\n  start_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s = start_points (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal (1 subgoal):\n 1. e = end_points (x \\<cdot> - (e ; s\\<^sup>T))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e = end_points (x \\<cdot> - (e ; s\\<^sup>T))", "show \"e = end_points (x \\<cdot> - (e ; s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e = end_points (x \\<cdot> - (e ; s\\<^sup>T))", "proof (simp only: eq_iff; rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))\n 2. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "show \"e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))", "(* just copied and adapted the proof of the previous case (start_point) *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))", "have a: \"e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T;1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "have 1: \"is_vector(-s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_vector (- s)", "using assms(2) point_def vector_compl"], ["proof (prove)\nusing this:\n  point s\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  is_vector ?x \\<Longrightarrow> is_vector (- ?x)\n\ngoal (1 subgoal):\n 1. is_vector (- s)", "by blast"], ["proof (state)\nthis:\n  is_vector (- s)\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "from assms(2-4)"], ["proof (chain)\npicking this:\n  point s\n  point e\n  s \\<noteq> e", "have \"e = e \\<cdot> -s\""], ["proof (prove)\nusing this:\n  point s\n  point e\n  s \\<noteq> e\n\ngoal (1 subgoal):\n 1. e = e \\<cdot> - s", "using comp_assoc edge_end point_equations(1) point_equations(3) point_is_point"], ["proof (prove)\nusing this:\n  point s\n  point e\n  s \\<noteq> e\n  ?x ; ?y ; ?z = ?x ; (?y ; ?z)\n  \\<lbrakk>is_point ?p; is_point ?q; ?p \\<noteq> ?q\\<rbrakk>\n  \\<Longrightarrow> end_points (?p ; ?q\\<^sup>T) = ?q\n  is_point ?p \\<Longrightarrow> ?p ; 1 = ?p\n  is_point ?p \\<Longrightarrow> ?p\\<^sup>T ; 1 = 1\n  point ?x = is_point ?x\n\ngoal (1 subgoal):\n 1. e = e \\<cdot> - s", "by fastforce"], ["proof (state)\nthis:\n  e = e \\<cdot> - s\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "also"], ["proof (state)\nthis:\n  e = e \\<cdot> - s\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "have \"... \\<le> x;s \\<cdot> -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<cdot> - s \\<le> x ; s \\<cdot> - s", "using assms(2,5) meet_iso point_def ss423bij"], ["proof (prove)\nusing this:\n  point s\n  e ; s\\<^sup>T \\<le> x\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  bijective ?x \\<Longrightarrow>\n  (?y ; ?x\\<^sup>T \\<le> ?z) = (?y \\<le> ?z ; ?x)\n\ngoal (1 subgoal):\n 1. e \\<cdot> - s \\<le> x ; s \\<cdot> - s", "by fastforce"], ["proof (state)\nthis:\n  e \\<cdot> - s \\<le> x ; s \\<cdot> - s\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "also"], ["proof (state)\nthis:\n  e \\<cdot> - s \\<le> x ; s \\<cdot> - s\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "have \"... \\<le> x\\<^sup>T;1 \\<cdot> -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ; s \\<cdot> - s \\<le> x\\<^sup>T ; 1 \\<cdot> - s", "by (metis assms(1) many_strongly_connected_implies_no_start_end_points meet_iso mult_isol\n                    top_greatest)"], ["proof (state)\nthis:\n  x ; s \\<cdot> - s \\<le> x\\<^sup>T ; 1 \\<cdot> - s\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "also"], ["proof (state)\nthis:\n  x ; s \\<cdot> - s \\<le> x\\<^sup>T ; 1 \\<cdot> - s\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "have \"... \\<le> (x\\<^sup>T \\<cdot> -s);1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> - s \\<le> (x\\<^sup>T \\<cdot> - s) ; 1", "using 1"], ["proof (prove)\nusing this:\n  is_vector (- s)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; 1 \\<cdot> - s \\<le> (x\\<^sup>T \\<cdot> - s) ; 1", "by (simp add: vector_1_comm)"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> - s \\<le> (x\\<^sup>T \\<cdot> - s) ; 1\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "also"], ["proof (state)\nthis:\n  x\\<^sup>T ; 1 \\<cdot> - s \\<le> (x\\<^sup>T \\<cdot> - s) ; 1\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "have \"... \\<le> (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T));1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>T \\<cdot> - s) ; 1\n    \\<le> (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1", "by (metis assms(2) comp_anti is_vector_def meet_isor mult_isol mult_isor point_def\n                    top_greatest)"], ["proof (state)\nthis:\n  (x\\<^sup>T \\<cdot> - s) ; 1\n  \\<le> (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "finally"], ["proof (chain)\npicking this:\n  e \\<le> (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1", "show ?thesis"], ["proof (prove)\nusing this:\n  e \\<le> (x\\<^sup>T \\<cdot> - (s ; e\\<^sup>T)) ; 1\n\ngoal (1 subgoal):\n 1. e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1", "by (simp add: conv_compl)"], ["proof (state)\nthis:\n  e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1\n\ngoal (1 subgoal):\n 1. e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))", "have b: \"e \\<le> -((x \\<cdot> - (e ; s\\<^sup>T));1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "have 1: \"x\\<^sup>T;e =s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T ; e = s", "using assms predecessor_point'"], ["proof (prove)\nusing this:\n  cycle x\n  point s\n  point e\n  s \\<noteq> e\n  e ; s\\<^sup>T \\<le> x\n  \\<lbrakk>path ?x; point ?s; point ?e; ?e ; ?s\\<^sup>T \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ; ?s = ?e\n\ngoal (1 subgoal):\n 1. x\\<^sup>T ; e = s", "by (metis conv_contrav conv_invol conv_iso conv_path)"], ["proof (state)\nthis:\n  x\\<^sup>T ; e = s\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "have \"e \\<cdot> x = e;(s\\<^sup>T+-(s\\<^sup>T)) \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<cdot> x = e ; (s\\<^sup>T + - s\\<^sup>T) \\<cdot> x", "using assms(3) point_equations(1) point_is_point"], ["proof (prove)\nusing this:\n  point e\n  is_point ?p \\<Longrightarrow> ?p ; 1 = ?p\n  point ?x = is_point ?x\n\ngoal (1 subgoal):\n 1. e \\<cdot> x = e ; (s\\<^sup>T + - s\\<^sup>T) \\<cdot> x", "by fastforce"], ["proof (state)\nthis:\n  e \\<cdot> x = e ; (s\\<^sup>T + - s\\<^sup>T) \\<cdot> x\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "also"], ["proof (state)\nthis:\n  e \\<cdot> x = e ; (s\\<^sup>T + - s\\<^sup>T) \\<cdot> x\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "have \"... = e;s\\<^sup>T \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; (s\\<^sup>T + - s\\<^sup>T) \\<cdot> x = e ; s\\<^sup>T \\<cdot> x", "by (metis 1 conv_contrav conv_invol inf.commute inf_sup_absorb modular_1')"], ["proof (state)\nthis:\n  e ; (s\\<^sup>T + - s\\<^sup>T) \\<cdot> x = e ; s\\<^sup>T \\<cdot> x\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "also"], ["proof (state)\nthis:\n  e ; (s\\<^sup>T + - s\\<^sup>T) \\<cdot> x = e ; s\\<^sup>T \\<cdot> x\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "have \"... \\<le> s\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; s\\<^sup>T \\<cdot> x \\<le> s\\<^sup>T", "by (metis assms(2) inf.coboundedI1 mult_isor point_equations(4) point_is_point top_greatest)"], ["proof (state)\nthis:\n  e ; s\\<^sup>T \\<cdot> x \\<le> s\\<^sup>T\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "finally"], ["proof (chain)\npicking this:\n  e \\<cdot> x \\<le> s\\<^sup>T", "have \"e \\<cdot> x \\<le> e \\<cdot> s\\<^sup>T\""], ["proof (prove)\nusing this:\n  e \\<cdot> x \\<le> s\\<^sup>T\n\ngoal (1 subgoal):\n 1. e \\<cdot> x \\<le> e \\<cdot> s\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  e \\<cdot> x \\<le> e \\<cdot> s\\<^sup>T\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "also"], ["proof (state)\nthis:\n  e \\<cdot> x \\<le> e \\<cdot> s\\<^sup>T\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "have \"... \\<le> e ; s\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<cdot> s\\<^sup>T \\<le> e ; s\\<^sup>T", "using assms(2,3)"], ["proof (prove)\nusing this:\n  point s\n  point e\n\ngoal (1 subgoal):\n 1. e \\<cdot> s\\<^sup>T \\<le> e ; s\\<^sup>T", "by (simp add: point_def vector_meet_comp)"], ["proof (state)\nthis:\n  e \\<cdot> s\\<^sup>T \\<le> e ; s\\<^sup>T\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "finally"], ["proof (chain)\npicking this:\n  e \\<cdot> x \\<le> e ; s\\<^sup>T", "have 2: \"e \\<cdot> x \\<cdot> -(e ; s\\<^sup>T) = 0\""], ["proof (prove)\nusing this:\n  e \\<cdot> x \\<le> e ; s\\<^sup>T\n\ngoal (1 subgoal):\n 1. e \\<cdot> x \\<cdot> - (e ; s\\<^sup>T) = 0", "using galois_aux2"], ["proof (prove)\nusing this:\n  e \\<cdot> x \\<le> e ; s\\<^sup>T\n  (?x \\<cdot> - ?y = 0) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. e \\<cdot> x \\<cdot> - (e ; s\\<^sup>T) = 0", "by blast"], ["proof (state)\nthis:\n  e \\<cdot> x \\<cdot> - (e ; s\\<^sup>T) = 0\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  e \\<cdot> x \\<cdot> - (e ; s\\<^sup>T) = 0\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<cdot> x \\<cdot> - (e ; s\\<^sup>T) = 0 \\<Longrightarrow>\n    e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "have \"e ; s\\<^sup>T = s\\<^sup>T \\<cdot> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e ; s\\<^sup>T = s\\<^sup>T \\<cdot> e", "using assms(2,3) inf_commute point_def vector_meet_comp"], ["proof (prove)\nusing this:\n  point s\n  point e\n  ?x \\<cdot> ?y = ?y \\<cdot> ?x\n  point ?x \\<equiv> is_vector ?x \\<and> bijective ?x\n  \\<lbrakk>is_vector ?v; is_vector ?w\\<rbrakk>\n  \\<Longrightarrow> ?v ; ?w\\<^sup>T = ?v \\<cdot> ?w\\<^sup>T\n\ngoal (1 subgoal):\n 1. e ; s\\<^sup>T = s\\<^sup>T \\<cdot> e", "by force"], ["proof (state)\nthis:\n  e ; s\\<^sup>T = s\\<^sup>T \\<cdot> e\n\ngoal (1 subgoal):\n 1. e \\<cdot> x \\<cdot> - (e ; s\\<^sup>T) = 0 \\<Longrightarrow>\n    e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  e ; s\\<^sup>T = s\\<^sup>T \\<cdot> e\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "using 2"], ["proof (prove)\nusing this:\n  e ; s\\<^sup>T = s\\<^sup>T \\<cdot> e\n  e \\<cdot> x \\<cdot> - (e ; s\\<^sup>T) = 0\n\ngoal (1 subgoal):\n 1. e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "by (metis assms(2,3) conv_one galois_aux inf.assoc point_def point_equations(1)\n                      point_is_point schroeder_2 vector_meet_comp)"], ["proof (state)\nthis:\n  e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)\n\ngoal (1 subgoal):\n 1. e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))", "with a"], ["proof (chain)\npicking this:\n  e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1\n  e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  e \\<le> (x \\<cdot> - (e ; s\\<^sup>T))\\<^sup>T ; 1\n  e \\<le> - ((x \\<cdot> - (e ; s\\<^sup>T)) ; 1)\n\ngoal (1 subgoal):\n 1. e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))", "by simp"], ["proof (state)\nthis:\n  e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<le> end_points (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "show \"end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "using assms(1,2,3,5) cycle_remove_edge(3)"], ["proof (prove)\nusing this:\n  cycle x\n  point s\n  point e\n  e ; s\\<^sup>T \\<le> x\n  \\<lbrakk>cycle ?x; point ?s; point ?e; ?e ; ?s\\<^sup>T \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> end_points (?x \\<cdot> - (?e ; ?s\\<^sup>T)) \\<le> ?e\n\ngoal (1 subgoal):\n 1. end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e", "by blast"], ["proof (state)\nthis:\n  end_points (x \\<cdot> - (e ; s\\<^sup>T)) \\<le> e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e = end_points (x \\<cdot> - (e ; s\\<^sup>T))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* context relation_algebra_rtc_tarski *)"], ["", "end"]]}