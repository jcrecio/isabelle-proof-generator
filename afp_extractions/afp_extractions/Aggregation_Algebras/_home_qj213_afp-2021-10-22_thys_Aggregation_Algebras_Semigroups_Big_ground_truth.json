{"file_name": "/home/qj213/afp-2021-10-22/thys/Aggregation_Algebras/Semigroups_Big.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Aggregation_Algebras", "problem_names": ["lemma infinite [simp]: \"\\<not> finite A \\<Longrightarrow> F g A = \\<^bold>1\"", "lemma empty [simp]: \"F g {} = \\<^bold>1\"", "lemma insert [simp]: \"finite A \\<Longrightarrow> x \\<notin> A \\<Longrightarrow> F g (insert x A) = g x \\<^bold>* F g A\"", "lemma remove:\n  assumes \"finite A\" and \"x \\<in> A\"\n  shows \"F g A = g x \\<^bold>* F g (A - {x})\"", "lemma insert_remove: \"finite A \\<Longrightarrow> F g (insert x A) = g x \\<^bold>* F g (A - {x})\"", "lemma insert_if: \"finite A \\<Longrightarrow> F g (insert x A) = (if x \\<in> A then F g A else g x \\<^bold>* F g A)\"", "lemma neutral: \"\\<forall>x\\<in>A. g x = \\<^bold>1 \\<Longrightarrow> F g A = \\<^bold>1\"", "lemma neutral_const [simp]: \"F (\\<lambda>_. \\<^bold>1) A = \\<^bold>1\"", "lemma F_one [simp]: \"F g A \\<^bold>* \\<^bold>1 = F g A\"", "lemma one_F [simp]: \"\\<^bold>1 \\<^bold>* F g A = F g A\"", "lemma F_g_one [simp]: \"F (\\<lambda>x . g x \\<^bold>* \\<^bold>1) A = F g A\"", "lemma union_inter:\n  assumes \"finite A\" and \"finite B\"\n  shows \"F g (A \\<union> B) \\<^bold>* F g (A \\<inter> B) = F g A \\<^bold>* F g B\"\n  \\<comment> \\<open>The reversed orientation looks more natural, but LOOPS as a simprule!\\<close>", "lemma union_diff2:\n  assumes \"finite A\" and \"finite B\"\n  shows \"F g (A \\<union> B) = F g (A - B) \\<^bold>* F g (B - A) \\<^bold>* F g (A \\<inter> B)\"", "lemma subset_diff:\n  assumes \"B \\<subseteq> A\" and \"finite A\"\n  shows \"F g A = F g (A - B) \\<^bold>* F g B\"", "lemma setdiff_irrelevant:\n  assumes \"finite A\"\n  shows \"F g (A - {x. g x = z}) = F g A\"", "lemma not_neutral_contains_not_neutral:\n  assumes \"F g A \\<noteq> \\<^bold>1\"\n  obtains a where \"a \\<in> A\" and \"g a \\<noteq> \\<^bold>1\"", "lemma reindex:\n  assumes \"inj_on h A\"\n  shows \"F g (h ` A) = F (g \\<circ> h) A\"", "lemma cong [fundef_cong]:\n  assumes \"A = B\"\n  assumes g_h: \"\\<And>x. x \\<in> B \\<Longrightarrow> g x = h x\"\n  shows \"F g A = F h B\"", "lemma strong_cong [cong]:\n  assumes \"A = B\" \"\\<And>x. x \\<in> B =simp=> g x = h x\"\n  shows \"F (\\<lambda>x. g x) A = F (\\<lambda>x. h x) B\"", "lemma reindex_cong:\n  assumes \"inj_on l B\"\n  assumes \"A = l ` B\"\n  assumes \"\\<And>x. x \\<in> B \\<Longrightarrow> g (l x) = h x\"\n  shows \"F g A = F h B\"", "lemma UNION_disjoint:\n  assumes \"finite I\" and \"\\<forall>i\\<in>I. finite (A i)\"\n    and \"\\<forall>i\\<in>I. \\<forall>j\\<in>I. i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\"\n  shows \"F g (\\<Union>(A ` I)) = F (\\<lambda>x. F g (A x)) I\"", "lemma Union_disjoint:\n  assumes \"\\<forall>A\\<in>C. finite A\" \"\\<forall>A\\<in>C. \\<forall>B\\<in>C. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\"\n  shows \"F g (\\<Union>C) = (F \\<circ> F) g C\"", "lemma distrib: \"F (\\<lambda>x. g x \\<^bold>* h x) A = F g A \\<^bold>* F h A\"", "lemma Sigma:\n  \"finite A \\<Longrightarrow> \\<forall>x\\<in>A. finite (B x) \\<Longrightarrow> F (\\<lambda>x. F (g x) (B x)) A = F (case_prod g) (SIGMA x:A. B x)\"", "lemma related:\n  assumes Re: \"R \\<^bold>1 \\<^bold>1\"\n    and Rop: \"\\<forall>x1 y1 x2 y2. R x1 x2 \\<and> R y1 y2 \\<longrightarrow> R (x1 \\<^bold>* y1) (x2 \\<^bold>* y2)\"\n    and fin: \"finite S\"\n    and R_h_g: \"\\<forall>x\\<in>S. R (h x) (g x)\"\n  shows \"R (F h S) (F g S)\"", "lemma mono_neutral_cong_left:\n  assumes \"finite T\"\n    and \"S \\<subseteq> T\"\n    and \"\\<forall>i \\<in> T - S. h i = \\<^bold>1\"\n    and \"\\<And>x. x \\<in> S \\<Longrightarrow> g x = h x\"\n  shows \"F g S = F h T\"", "lemma mono_neutral_cong_right:\n  \"finite T \\<Longrightarrow> S \\<subseteq> T \\<Longrightarrow> \\<forall>i \\<in> T - S. g i = \\<^bold>1 \\<Longrightarrow> (\\<And>x. x \\<in> S \\<Longrightarrow> g x = h x) \\<Longrightarrow>\n    F g T = F h S\"", "lemma mono_neutral_left: \"finite T \\<Longrightarrow> S \\<subseteq> T \\<Longrightarrow> \\<forall>i \\<in> T - S. g i = \\<^bold>1 \\<Longrightarrow> F g S = F g T\"", "lemma mono_neutral_right: \"finite T \\<Longrightarrow> S \\<subseteq> T \\<Longrightarrow> \\<forall>i \\<in> T - S. g i = \\<^bold>1 \\<Longrightarrow> F g T = F g S\"", "lemma mono_neutral_cong:\n  assumes [simp]: \"finite T\" \"finite S\"\n    and *: \"\\<And>i. i \\<in> T - S \\<Longrightarrow> h i = \\<^bold>1\" \"\\<And>i. i \\<in> S - T \\<Longrightarrow> g i = \\<^bold>1\"\n    and gh: \"\\<And>x. x \\<in> S \\<inter> T \\<Longrightarrow> g x = h x\"\n shows \"F g S = F h T\"", "lemma reindex_bij_betw: \"bij_betw h S T \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\"", "lemma reindex_bij_witness:\n  assumes witness:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> i (j a) = a\"\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> j a \\<in> T\"\n    \"\\<And>b. b \\<in> T \\<Longrightarrow> j (i b) = b\"\n    \"\\<And>b. b \\<in> T \\<Longrightarrow> i b \\<in> S\"\n  assumes eq:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> h (j a) = g a\"\n  shows \"F g S = F h T\"", "lemma reindex_bij_betw_not_neutral:\n  assumes fin: \"finite S'\" \"finite T'\"\n  assumes bij: \"bij_betw h (S - S') (T - T')\"\n  assumes nn:\n    \"\\<And>a. a \\<in> S' \\<Longrightarrow> g (h a) = z\"\n    \"\\<And>b. b \\<in> T' \\<Longrightarrow> g b = z\"\n  shows \"F (\\<lambda>x. g (h x)) S = F g T\"", "lemma reindex_nontrivial:\n  assumes \"finite A\"\n    and nz: \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> h x = h y \\<Longrightarrow> g (h x) = \\<^bold>1\"\n  shows \"F g (h ` A) = F (g \\<circ> h) A\"", "lemma reindex_bij_witness_not_neutral:\n  assumes fin: \"finite S'\" \"finite T'\"\n  assumes witness:\n    \"\\<And>a. a \\<in> S - S' \\<Longrightarrow> i (j a) = a\"\n    \"\\<And>a. a \\<in> S - S' \\<Longrightarrow> j a \\<in> T - T'\"\n    \"\\<And>b. b \\<in> T - T' \\<Longrightarrow> j (i b) = b\"\n    \"\\<And>b. b \\<in> T - T' \\<Longrightarrow> i b \\<in> S - S'\"\n  assumes nn:\n    \"\\<And>a. a \\<in> S' \\<Longrightarrow> g a = z\"\n    \"\\<And>b. b \\<in> T' \\<Longrightarrow> h b = z\"\n  assumes eq:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> h (j a) = g a\"\n  shows \"F g S = F h T\"", "lemma delta_remove:\n  assumes fS: \"finite S\"\n  shows \"F (\\<lambda>k. if k = a then b k else c k) S = (if a \\<in> S then b a \\<^bold>* F c (S-{a}) else F c (S-{a}))\"", "lemma delta [simp]:\n  assumes fS: \"finite S\"\n  shows \"F (\\<lambda>k. if k = a then b k else \\<^bold>1) S = (if a \\<in> S then b a \\<^bold>* \\<^bold>1 else \\<^bold>1)\"", "lemma delta' [simp]:\n  assumes fin: \"finite S\"\n  shows \"F (\\<lambda>k. if a = k then b k else \\<^bold>1) S = (if a \\<in> S then b a \\<^bold>* \\<^bold>1 else \\<^bold>1)\"", "lemma If_cases:\n  fixes P :: \"'b \\<Rightarrow> bool\" and g h :: \"'b \\<Rightarrow> 'a\"\n  assumes fin: \"finite A\"\n  shows \"F (\\<lambda>x. if P x then h x else g x) A = F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})\"", "lemma cartesian_product: \"F (\\<lambda>x. F (g x) B) A = F (case_prod g) (A \\<times> B)\"", "lemma inter_restrict:\n  assumes \"finite A\"\n  shows \"F g (A \\<inter> B) = F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A\"", "lemma inter_filter:\n  \"finite A \\<Longrightarrow> F g {x \\<in> A. P x} = F (\\<lambda>x. if P x then g x else \\<^bold>1) A\"", "lemma Union_comp:\n  assumes \"\\<forall>A \\<in> B. finite A\"\n    and \"\\<And>A1 A2 x. A1 \\<in> B \\<Longrightarrow> A2 \\<in> B \\<Longrightarrow> A1 \\<noteq> A2 \\<Longrightarrow> x \\<in> A1 \\<Longrightarrow> x \\<in> A2 \\<Longrightarrow> g x = \\<^bold>1\"\n  shows \"F g (\\<Union>B) = (F \\<circ> F) g B\"", "lemma swap: \"F (\\<lambda>i. F (g i) B) A = F (\\<lambda>j. F (\\<lambda>i. g i j) A) B\"", "lemma swap_restrict:\n  \"finite A \\<Longrightarrow> finite B \\<Longrightarrow>\n    F (\\<lambda>x. F (g x) {y. y \\<in> B \\<and> R x y}) A = F (\\<lambda>y. F (\\<lambda>x. g x y) {x. x \\<in> A \\<and> R x y}) B\"", "lemma Plus:\n  fixes A :: \"'b set\" and B :: \"'c set\"\n  assumes fin: \"finite A\" \"finite B\"\n  shows \"F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B\"", "lemma same_carrier:\n  assumes \"finite C\"\n  assumes subset: \"A \\<subseteq> C\" \"B \\<subseteq> C\"\n  assumes trivial: \"\\<And>a. a \\<in> C - A \\<Longrightarrow> g a = \\<^bold>1\" \"\\<And>b. b \\<in> C - B \\<Longrightarrow> h b = \\<^bold>1\"\n  shows \"F g A = F h B \\<longleftrightarrow> F g C = F h C\"", "lemma same_carrierI:\n  assumes \"finite C\"\n  assumes subset: \"A \\<subseteq> C\" \"B \\<subseteq> C\"\n  assumes trivial: \"\\<And>a. a \\<in> C - A \\<Longrightarrow> g a = \\<^bold>1\" \"\\<And>b. b \\<in> C - B \\<Longrightarrow> h b = \\<^bold>1\"\n  assumes \"F g C = F h C\"\n  shows \"F g A = F h B\"", "lemma (in ab_semigroup_add_0) sum_image_gen_0:\n  assumes fin: \"finite S\"\n  shows \"sum_0 g S = sum_0 (\\<lambda>y. sum_0 g {x. x \\<in> S \\<and> f x = y}) (f ` S)\"", "lemma sum_Un2:\n  assumes \"finite (A \\<union> B)\"\n  shows \"sum_0 f (A \\<union> B) = sum_0 f (A - B) + sum_0 f (B - A) + sum_0 f (A \\<inter> B)\"", "lemma add_nonneg_nonneg [simp]: \"0 \\<le> a \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> 0 \\<le> a + b\"", "lemma add_nonpos_nonpos: \"a \\<le> 0 \\<Longrightarrow> b \\<le> 0 \\<Longrightarrow> a + b \\<le> 0\"", "lemma (in ordered_ab_semigroup_add_0) sum_mono:\n  \"(\\<And>i. i\\<in>K \\<Longrightarrow> f i \\<le> g i) \\<Longrightarrow> (\\<Sum>i\\<in>K. f i) \\<le> (\\<Sum>i\\<in>K. g i)\"", "lemma (in ordered_ab_semigroup_add_0) sum_mono_00:\n  \"(\\<And>i. i\\<in>K \\<Longrightarrow> f i + 0 \\<le> g i + 0) \\<Longrightarrow> (\\<Sum>i\\<in>K. f i) \\<le> (\\<Sum>i\\<in>K. g i)\"", "lemma (in ordered_ab_semigroup_add_0) sum_mono_0:\n  \"(\\<And>i. i\\<in>K \\<Longrightarrow> f i + 0 \\<le> g i) \\<Longrightarrow> (\\<Sum>i\\<in>K. f i) \\<le> (\\<Sum>i\\<in>K. g i)\"", "lemma sum_nonneg: \"(\\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> f x) \\<Longrightarrow> 0 \\<le> sum_0 f A\"", "lemma sum_nonpos: \"(\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le> 0) \\<Longrightarrow> sum_0 f A \\<le> 0\"", "lemma sum_mono2:\n  assumes fin: \"finite B\"\n    and sub: \"A \\<subseteq> B\"\n    and nn: \"\\<And>b. b \\<in> B-A \\<Longrightarrow> 0 \\<le> f b\"\n  shows \"sum_0 f A \\<le> sum_0 f B\"", "lemma sum_le_included:\n  assumes \"finite s\" \"finite t\"\n  and \"\\<forall>y\\<in>t. 0 \\<le> g y\" \"(\\<forall>x\\<in>s. \\<exists>y\\<in>t. i y = x \\<and> f x \\<le> g y)\"\n  shows \"sum_0 f s \\<le> sum_0 g t\"", "lemma sum_comp_morphism:\n  \"h 0 = 0 \\<Longrightarrow> (\\<And>x y. h (x + y) = h x + h y) \\<Longrightarrow> sum_0 (h \\<circ> g) A = h (sum_0 g A)\"", "lemma sum_cong_Suc:\n  assumes \"0 \\<notin> A\" \"\\<And>x. Suc x \\<in> A \\<Longrightarrow> f (Suc x) = g (Suc x)\"\n  shows \"sum_0 f A = sum_0 g A\""], "translations": [["", "lemma infinite [simp]: \"\\<not> finite A \\<Longrightarrow> F g A = \\<^bold>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> F g A = \\<^bold>1", "by (simp add: eq_fold)"], ["", "lemma empty [simp]: \"F g {} = \\<^bold>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g {} = \\<^bold>1", "by (simp add: eq_fold)"], ["", "lemma insert [simp]: \"finite A \\<Longrightarrow> x \\<notin> A \\<Longrightarrow> F g (insert x A) = g x \\<^bold>* F g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> F g (insert x A) = g x \\<^bold>* F g A", "by (simp add: eq_fold)"], ["", "lemma remove:\n  assumes \"finite A\" and \"x \\<in> A\"\n  shows \"F g A = g x \\<^bold>* F g (A - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g A = g x \\<^bold>* F g (A - {x})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F g A = g x \\<^bold>* F g (A - {x})", "from \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A", "obtain B where B: \"A = insert x B\" and \"x \\<notin> B\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>A = insert x B; x \\<notin> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: mk_disjoint_insert)"], ["proof (state)\nthis:\n  A = insert x B\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. F g A = g x \\<^bold>* F g (A - {x})", "moreover"], ["proof (state)\nthis:\n  A = insert x B\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. F g A = g x \\<^bold>* F g (A - {x})", "from \\<open>finite A\\<close> B"], ["proof (chain)\npicking this:\n  finite A\n  A = insert x B", "have \"finite B\""], ["proof (prove)\nusing this:\n  finite A\n  A = insert x B\n\ngoal (1 subgoal):\n 1. finite B", "by simp"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. F g A = g x \\<^bold>* F g (A - {x})", "ultimately"], ["proof (chain)\npicking this:\n  A = insert x B\n  x \\<notin> B\n  finite B", "show ?thesis"], ["proof (prove)\nusing this:\n  A = insert x B\n  x \\<notin> B\n  finite B\n\ngoal (1 subgoal):\n 1. F g A = g x \\<^bold>* F g (A - {x})", "by simp"], ["proof (state)\nthis:\n  F g A = g x \\<^bold>* F g (A - {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insert_remove: \"finite A \\<Longrightarrow> F g (insert x A) = g x \\<^bold>* F g (A - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    F g (insert x A) = g x \\<^bold>* F g (A - {x})", "by (cases \"x \\<in> A\") (simp_all add: remove insert_absorb)"], ["", "lemma insert_if: \"finite A \\<Longrightarrow> F g (insert x A) = (if x \\<in> A then F g A else g x \\<^bold>* F g A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    F g (insert x A) = (if x \\<in> A then F g A else g x \\<^bold>* F g A)", "by (cases \"x \\<in> A\") (simp_all add: insert_absorb)"], ["", "lemma neutral: \"\\<forall>x\\<in>A. g x = \\<^bold>1 \\<Longrightarrow> F g A = \\<^bold>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. g x = \\<^bold>1 \\<Longrightarrow> F g A = \\<^bold>1", "by (induct A rule: infinite_finite_induct) simp_all"], ["", "lemma neutral_const [simp]: \"F (\\<lambda>_. \\<^bold>1) A = \\<^bold>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>_. \\<^bold>1) A = \\<^bold>1", "by (simp add: neutral)"], ["", "lemma F_one [simp]: \"F g A \\<^bold>* \\<^bold>1 = F g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g A \\<^bold>* \\<^bold>1 = F g A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F g A \\<^bold>* \\<^bold>1 = F g A", "have \"\\<And>f b B. F f (insert (b::'b) B) \\<^bold>* \\<^bold>1 = F f (insert b B) \\<or> infinite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f b B.\n       F f (insert b B) \\<^bold>* \\<^bold>1 = F f (insert b B) \\<or>\n       infinite B", "using insert_remove"], ["proof (prove)\nusing this:\n  finite ?A \\<Longrightarrow>\n  F ?g (insert ?x ?A) = ?g ?x \\<^bold>* F ?g (?A - {?x})\n\ngoal (1 subgoal):\n 1. \\<And>f b B.\n       F f (insert b B) \\<^bold>* \\<^bold>1 = F f (insert b B) \\<or>\n       infinite B", "by fastforce"], ["proof (state)\nthis:\n  F ?f1 (insert ?b1 ?B1) \\<^bold>* \\<^bold>1 = F ?f1 (insert ?b1 ?B1) \\<or>\n  infinite ?B1\n\ngoal (1 subgoal):\n 1. F g A \\<^bold>* \\<^bold>1 = F g A", "then"], ["proof (chain)\npicking this:\n  F ?f1 (insert ?b1 ?B1) \\<^bold>* \\<^bold>1 = F ?f1 (insert ?b1 ?B1) \\<or>\n  infinite ?B1", "show ?thesis"], ["proof (prove)\nusing this:\n  F ?f1 (insert ?b1 ?B1) \\<^bold>* \\<^bold>1 = F ?f1 (insert ?b1 ?B1) \\<or>\n  infinite ?B1\n\ngoal (1 subgoal):\n 1. F g A \\<^bold>* \\<^bold>1 = F g A", "by (metis (no_types) all_not_in_conv empty z_idem infinite insert_if)"], ["proof (state)\nthis:\n  F g A \\<^bold>* \\<^bold>1 = F g A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_F [simp]: \"\\<^bold>1 \\<^bold>* F g A = F g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>1 \\<^bold>* F g A = F g A", "using F_one commute"], ["proof (prove)\nusing this:\n  F ?g ?A \\<^bold>* \\<^bold>1 = F ?g ?A\n  ?a \\<^bold>* ?b = ?b \\<^bold>* ?a\n\ngoal (1 subgoal):\n 1. \\<^bold>1 \\<^bold>* F g A = F g A", "by auto"], ["", "lemma F_g_one [simp]: \"F (\\<lambda>x . g x \\<^bold>* \\<^bold>1) A = F g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g x \\<^bold>* \\<^bold>1) A = F g A", "apply (induct A rule: infinite_finite_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A.\n       infinite A \\<Longrightarrow>\n       F (\\<lambda>x. g x \\<^bold>* \\<^bold>1) A = F g A\n 2. F (\\<lambda>x. g x \\<^bold>* \\<^bold>1) {} = F g {}\n 3. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F (\\<lambda>x. g x \\<^bold>* \\<^bold>1) Fa = F g Fa\\<rbrakk>\n       \\<Longrightarrow> F (\\<lambda>x. g x \\<^bold>* \\<^bold>1)\n                          (insert x Fa) =\n                         F g (insert x Fa)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. F (\\<lambda>x. g x \\<^bold>* \\<^bold>1) {} = F g {}\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F (\\<lambda>x. g x \\<^bold>* \\<^bold>1) Fa = F g Fa\\<rbrakk>\n       \\<Longrightarrow> F (\\<lambda>x. g x \\<^bold>* \\<^bold>1)\n                          (insert x Fa) =\n                         F g (insert x Fa)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F (\\<lambda>x. g x \\<^bold>* \\<^bold>1) Fa = F g Fa\\<rbrakk>\n       \\<Longrightarrow> F (\\<lambda>x. g x \\<^bold>* \\<^bold>1)\n                          (insert x Fa) =\n                         F g (insert x Fa)", "by (metis one_F assoc insert)"], ["", "lemma union_inter:\n  assumes \"finite A\" and \"finite B\"\n  shows \"F g (A \\<union> B) \\<^bold>* F g (A \\<inter> B) = F g A \\<^bold>* F g B\"\n  \\<comment> \\<open>The reversed orientation looks more natural, but LOOPS as a simprule!\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (A \\<union> B) \\<^bold>* F g (A \\<inter> B) = F g A \\<^bold>* F g B", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. F g (A \\<union> B) \\<^bold>* F g (A \\<inter> B) = F g A \\<^bold>* F g B", "proof (induct A)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite B \\<Longrightarrow>\n    F g ({} \\<union> B) \\<^bold>* F g ({} \\<inter> B) =\n    F g {} \\<^bold>* F g B\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        finite B \\<Longrightarrow>\n        F g (Fa \\<union> B) \\<^bold>* F g (Fa \\<inter> B) =\n        F g Fa \\<^bold>* F g B;\n        finite B\\<rbrakk>\n       \\<Longrightarrow> F g (insert x Fa \\<union> B) \\<^bold>*\n                         F g (insert x Fa \\<inter> B) =\n                         F g (insert x Fa) \\<^bold>* F g B", "case empty"], ["proof (state)\nthis:\n  finite B\n\ngoal (2 subgoals):\n 1. finite B \\<Longrightarrow>\n    F g ({} \\<union> B) \\<^bold>* F g ({} \\<inter> B) =\n    F g {} \\<^bold>* F g B\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        finite B \\<Longrightarrow>\n        F g (Fa \\<union> B) \\<^bold>* F g (Fa \\<inter> B) =\n        F g Fa \\<^bold>* F g B;\n        finite B\\<rbrakk>\n       \\<Longrightarrow> F g (insert x Fa \\<union> B) \\<^bold>*\n                         F g (insert x Fa \\<inter> B) =\n                         F g (insert x Fa) \\<^bold>* F g B", "then"], ["proof (chain)\npicking this:\n  finite B", "show ?case"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. F g ({} \\<union> B) \\<^bold>* F g ({} \\<inter> B) =\n    F g {} \\<^bold>* F g B", "by simp"], ["proof (state)\nthis:\n  F g ({} \\<union> B) \\<^bold>* F g ({} \\<inter> B) = F g {} \\<^bold>* F g B\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        finite B \\<Longrightarrow>\n        F g (Fa \\<union> B) \\<^bold>* F g (Fa \\<inter> B) =\n        F g Fa \\<^bold>* F g B;\n        finite B\\<rbrakk>\n       \\<Longrightarrow> F g (insert x Fa \\<union> B) \\<^bold>*\n                         F g (insert x Fa \\<inter> B) =\n                         F g (insert x Fa) \\<^bold>* F g B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        finite B \\<Longrightarrow>\n        F g (Fa \\<union> B) \\<^bold>* F g (Fa \\<inter> B) =\n        F g Fa \\<^bold>* F g B;\n        finite B\\<rbrakk>\n       \\<Longrightarrow> F g (insert x Fa \\<union> B) \\<^bold>*\n                         F g (insert x Fa \\<inter> B) =\n                         F g (insert x Fa) \\<^bold>* F g B", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  x \\<notin> A\n  finite B \\<Longrightarrow>\n  F g (A \\<union> B) \\<^bold>* F g (A \\<inter> B) = F g A \\<^bold>* F g B\n  finite B\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        finite B \\<Longrightarrow>\n        F g (Fa \\<union> B) \\<^bold>* F g (Fa \\<inter> B) =\n        F g Fa \\<^bold>* F g B;\n        finite B\\<rbrakk>\n       \\<Longrightarrow> F g (insert x Fa \\<union> B) \\<^bold>*\n                         F g (insert x Fa \\<inter> B) =\n                         F g (insert x Fa) \\<^bold>* F g B", "then"], ["proof (chain)\npicking this:\n  finite A\n  x \\<notin> A\n  finite B \\<Longrightarrow>\n  F g (A \\<union> B) \\<^bold>* F g (A \\<inter> B) = F g A \\<^bold>* F g B\n  finite B", "show ?case"], ["proof (prove)\nusing this:\n  finite A\n  x \\<notin> A\n  finite B \\<Longrightarrow>\n  F g (A \\<union> B) \\<^bold>* F g (A \\<inter> B) = F g A \\<^bold>* F g B\n  finite B\n\ngoal (1 subgoal):\n 1. F g (insert x A \\<union> B) \\<^bold>* F g (insert x A \\<inter> B) =\n    F g (insert x A) \\<^bold>* F g B", "by (auto simp: insert_absorb Int_insert_left commute [of _ \"g x\"] assoc left_commute)"], ["proof (state)\nthis:\n  F g (insert x A \\<union> B) \\<^bold>* F g (insert x A \\<inter> B) =\n  F g (insert x A) \\<^bold>* F g B\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary union_inter_neutral:\n  assumes \"finite A\" and \"finite B\"\n    and \"\\<forall>x \\<in> A \\<inter> B. g x = \\<^bold>1\"\n  shows \"F g (A \\<union> B) = F g A \\<^bold>* F g B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (A \\<union> B) = F g A \\<^bold>* F g B", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  \\<forall>x\\<in>A \\<inter> B. g x = \\<^bold>1\n\ngoal (1 subgoal):\n 1. F g (A \\<union> B) = F g A \\<^bold>* F g B", "by (simp add: union_inter [symmetric] neutral)"], ["", "corollary union_disjoint:\n  assumes \"finite A\" and \"finite B\"\n  assumes \"A \\<inter> B = {}\"\n  shows \"F g (A \\<union> B) = F g A \\<^bold>* F g B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (A \\<union> B) = F g A \\<^bold>* F g B", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. F g (A \\<union> B) = F g A \\<^bold>* F g B", "by (simp add: union_inter_neutral)"], ["", "lemma union_diff2:\n  assumes \"finite A\" and \"finite B\"\n  shows \"F g (A \\<union> B) = F g (A - B) \\<^bold>* F g (B - A) \\<^bold>* F g (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (A \\<union> B) =\n    F g (A - B) \\<^bold>* F g (B - A) \\<^bold>* F g (A \\<inter> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F g (A \\<union> B) =\n    F g (A - B) \\<^bold>* F g (B - A) \\<^bold>* F g (A \\<inter> B)", "have \"A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B", "by auto"], ["proof (state)\nthis:\n  A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B\n\ngoal (1 subgoal):\n 1. F g (A \\<union> B) =\n    F g (A - B) \\<^bold>* F g (B - A) \\<^bold>* F g (A \\<inter> B)", "with assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B\n\ngoal (1 subgoal):\n 1. F g (A \\<union> B) =\n    F g (A - B) \\<^bold>* F g (B - A) \\<^bold>* F g (A \\<inter> B)", "by simp (subst union_disjoint, auto)+"], ["proof (state)\nthis:\n  F g (A \\<union> B) =\n  F g (A - B) \\<^bold>* F g (B - A) \\<^bold>* F g (A \\<inter> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subset_diff:\n  assumes \"B \\<subseteq> A\" and \"finite A\"\n  shows \"F g A = F g (A - B) \\<^bold>* F g B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "from assms"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  finite A", "have \"finite (A - B)\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  finite A\n\ngoal (1 subgoal):\n 1. finite (A - B)", "by auto"], ["proof (state)\nthis:\n  finite (A - B)\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "moreover"], ["proof (state)\nthis:\n  finite (A - B)\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "from assms"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  finite A", "have \"finite B\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  finite A\n\ngoal (1 subgoal):\n 1. finite B", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "moreover"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "from assms"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  finite A", "have \"(A - B) \\<inter> B = {}\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  finite A\n\ngoal (1 subgoal):\n 1. (A - B) \\<inter> B = {}", "by auto"], ["proof (state)\nthis:\n  (A - B) \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "ultimately"], ["proof (chain)\npicking this:\n  finite (A - B)\n  finite B\n  (A - B) \\<inter> B = {}", "have \"F g (A - B \\<union> B) = F g (A - B) \\<^bold>* F g B\""], ["proof (prove)\nusing this:\n  finite (A - B)\n  finite B\n  (A - B) \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. F g (A - B \\<union> B) = F g (A - B) \\<^bold>* F g B", "by (rule union_disjoint)"], ["proof (state)\nthis:\n  F g (A - B \\<union> B) = F g (A - B) \\<^bold>* F g B\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "moreover"], ["proof (state)\nthis:\n  F g (A - B \\<union> B) = F g (A - B) \\<^bold>* F g B\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "from assms"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  finite A", "have \"A \\<union> B = A\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  finite A\n\ngoal (1 subgoal):\n 1. A \\<union> B = A", "by auto"], ["proof (state)\nthis:\n  A \\<union> B = A\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "ultimately"], ["proof (chain)\npicking this:\n  F g (A - B \\<union> B) = F g (A - B) \\<^bold>* F g B\n  A \\<union> B = A", "show ?thesis"], ["proof (prove)\nusing this:\n  F g (A - B \\<union> B) = F g (A - B) \\<^bold>* F g B\n  A \\<union> B = A\n\ngoal (1 subgoal):\n 1. F g A = F g (A - B) \\<^bold>* F g B", "by simp"], ["proof (state)\nthis:\n  F g A = F g (A - B) \\<^bold>* F g B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma setdiff_irrelevant:\n  assumes \"finite A\"\n  shows \"F g (A - {x. g x = z}) = F g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (A - {x. g x = \\<^bold>1}) = F g A", "using assms"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. F g (A - {x. g x = \\<^bold>1}) = F g A", "by (induct A) (simp_all add: insert_Diff_if)"], ["", "lemma not_neutral_contains_not_neutral:\n  assumes \"F g A \\<noteq> \\<^bold>1\"\n  obtains a where \"a \\<in> A\" and \"g a \\<noteq> \\<^bold>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; g a \\<noteq> \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; g a \\<noteq> \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  F g A \\<noteq> \\<^bold>1", "have \"\\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1\""], ["proof (prove)\nusing this:\n  F g A \\<noteq> \\<^bold>1\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1", "proof (induct A rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; F g A \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1\n 2. F g {} \\<noteq> \\<^bold>1 \\<Longrightarrow>\n    \\<exists>a\\<in>{}. g a \\<noteq> \\<^bold>1\n 3. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F g Fa \\<noteq> \\<^bold>1 \\<Longrightarrow>\n        \\<exists>a\\<in>Fa. g a \\<noteq> \\<^bold>1;\n        F g (insert x Fa) \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>insert x Fa. g a \\<noteq> \\<^bold>1", "case infinite"], ["proof (state)\nthis:\n  infinite A_\n  F g A_ \\<noteq> \\<^bold>1\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; F g A \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1\n 2. F g {} \\<noteq> \\<^bold>1 \\<Longrightarrow>\n    \\<exists>a\\<in>{}. g a \\<noteq> \\<^bold>1\n 3. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F g Fa \\<noteq> \\<^bold>1 \\<Longrightarrow>\n        \\<exists>a\\<in>Fa. g a \\<noteq> \\<^bold>1;\n        F g (insert x Fa) \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>insert x Fa. g a \\<noteq> \\<^bold>1", "then"], ["proof (chain)\npicking this:\n  infinite A_\n  F g A_ \\<noteq> \\<^bold>1", "show ?case"], ["proof (prove)\nusing this:\n  infinite A_\n  F g A_ \\<noteq> \\<^bold>1\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A_. g a \\<noteq> \\<^bold>1", "by simp"], ["proof (state)\nthis:\n  \\<exists>a\\<in>A_. g a \\<noteq> \\<^bold>1\n\ngoal (2 subgoals):\n 1. F g {} \\<noteq> \\<^bold>1 \\<Longrightarrow>\n    \\<exists>a\\<in>{}. g a \\<noteq> \\<^bold>1\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F g Fa \\<noteq> \\<^bold>1 \\<Longrightarrow>\n        \\<exists>a\\<in>Fa. g a \\<noteq> \\<^bold>1;\n        F g (insert x Fa) \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>insert x Fa. g a \\<noteq> \\<^bold>1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. F g {} \\<noteq> \\<^bold>1 \\<Longrightarrow>\n    \\<exists>a\\<in>{}. g a \\<noteq> \\<^bold>1\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F g Fa \\<noteq> \\<^bold>1 \\<Longrightarrow>\n        \\<exists>a\\<in>Fa. g a \\<noteq> \\<^bold>1;\n        F g (insert x Fa) \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>insert x Fa. g a \\<noteq> \\<^bold>1", "case empty"], ["proof (state)\nthis:\n  F g {} \\<noteq> \\<^bold>1\n\ngoal (2 subgoals):\n 1. F g {} \\<noteq> \\<^bold>1 \\<Longrightarrow>\n    \\<exists>a\\<in>{}. g a \\<noteq> \\<^bold>1\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F g Fa \\<noteq> \\<^bold>1 \\<Longrightarrow>\n        \\<exists>a\\<in>Fa. g a \\<noteq> \\<^bold>1;\n        F g (insert x Fa) \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>insert x Fa. g a \\<noteq> \\<^bold>1", "then"], ["proof (chain)\npicking this:\n  F g {} \\<noteq> \\<^bold>1", "show ?case"], ["proof (prove)\nusing this:\n  F g {} \\<noteq> \\<^bold>1\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>{}. g a \\<noteq> \\<^bold>1", "by simp"], ["proof (state)\nthis:\n  \\<exists>a\\<in>{}. g a \\<noteq> \\<^bold>1\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F g Fa \\<noteq> \\<^bold>1 \\<Longrightarrow>\n        \\<exists>a\\<in>Fa. g a \\<noteq> \\<^bold>1;\n        F g (insert x Fa) \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>insert x Fa. g a \\<noteq> \\<^bold>1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F g Fa \\<noteq> \\<^bold>1 \\<Longrightarrow>\n        \\<exists>a\\<in>Fa. g a \\<noteq> \\<^bold>1;\n        F g (insert x Fa) \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>insert x Fa. g a \\<noteq> \\<^bold>1", "case (insert a A)"], ["proof (state)\nthis:\n  finite A\n  a \\<notin> A\n  F g A \\<noteq> \\<^bold>1 \\<Longrightarrow>\n  \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1\n  F g (insert a A) \\<noteq> \\<^bold>1\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        F g Fa \\<noteq> \\<^bold>1 \\<Longrightarrow>\n        \\<exists>a\\<in>Fa. g a \\<noteq> \\<^bold>1;\n        F g (insert x Fa) \\<noteq> \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>insert x Fa. g a \\<noteq> \\<^bold>1", "then"], ["proof (chain)\npicking this:\n  finite A\n  a \\<notin> A\n  F g A \\<noteq> \\<^bold>1 \\<Longrightarrow>\n  \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1\n  F g (insert a A) \\<noteq> \\<^bold>1", "show ?case"], ["proof (prove)\nusing this:\n  finite A\n  a \\<notin> A\n  F g A \\<noteq> \\<^bold>1 \\<Longrightarrow>\n  \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1\n  F g (insert a A) \\<noteq> \\<^bold>1\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>insert a A. g a \\<noteq> \\<^bold>1", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>a\\<in>insert a A. g a \\<noteq> \\<^bold>1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; g a \\<noteq> \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a1 \\<in> A; g ?a1 \\<noteq> \\<^bold>1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a1 \\<in> A; g ?a1 \\<noteq> \\<^bold>1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>a\\<in>A. g a \\<noteq> \\<^bold>1\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reindex:\n  assumes \"inj_on h A\"\n  shows \"F g (h ` A) = F (g \\<circ> h) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (h ` A) = F (g \\<circ> h) A", "proof (cases \"finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> F g (h ` A) = F (g \\<circ> h) A\n 2. infinite A \\<Longrightarrow> F g (h ` A) = F (g \\<circ> h) A", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> F g (h ` A) = F (g \\<circ> h) A\n 2. infinite A \\<Longrightarrow> F g (h ` A) = F (g \\<circ> h) A", "with assms"], ["proof (chain)\npicking this:\n  inj_on h A\n  finite A", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on h A\n  finite A\n\ngoal (1 subgoal):\n 1. F g (h ` A) = F (g \\<circ> h) A", "by (simp add: eq_fold fold_image comp_assoc)"], ["proof (state)\nthis:\n  F g (h ` A) = F (g \\<circ> h) A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> F g (h ` A) = F (g \\<circ> h) A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> F g (h ` A) = F (g \\<circ> h) A", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> F g (h ` A) = F (g \\<circ> h) A", "with assms"], ["proof (chain)\npicking this:\n  inj_on h A\n  infinite A", "have \"\\<not> finite (h ` A)\""], ["proof (prove)\nusing this:\n  inj_on h A\n  infinite A\n\ngoal (1 subgoal):\n 1. infinite (h ` A)", "by (blast dest: finite_imageD)"], ["proof (state)\nthis:\n  infinite (h ` A)\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> F g (h ` A) = F (g \\<circ> h) A", "with False"], ["proof (chain)\npicking this:\n  infinite A\n  infinite (h ` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite A\n  infinite (h ` A)\n\ngoal (1 subgoal):\n 1. F g (h ` A) = F (g \\<circ> h) A", "by simp"], ["proof (state)\nthis:\n  F g (h ` A) = F (g \\<circ> h) A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cong [fundef_cong]:\n  assumes \"A = B\"\n  assumes g_h: \"\\<And>x. x \\<in> B \\<Longrightarrow> g x = h x\"\n  shows \"F g A = F h B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g A = F h B", "using g_h"], ["proof (prove)\nusing this:\n  ?x1 \\<in> B \\<Longrightarrow> g ?x1 = h ?x1\n\ngoal (1 subgoal):\n 1. F g A = F h B", "unfolding \\<open>A = B\\<close>"], ["proof (prove)\nusing this:\n  ?x1 \\<in> B \\<Longrightarrow> g ?x1 = h ?x1\n\ngoal (1 subgoal):\n 1. F g B = F h B", "by (induct B rule: infinite_finite_induct) auto"], ["", "lemma strong_cong [cong]:\n  assumes \"A = B\" \"\\<And>x. x \\<in> B =simp=> g x = h x\"\n  shows \"F (\\<lambda>x. g x) A = F (\\<lambda>x. h x) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g A = F h B", "by (rule cong) (use assms in \\<open>simp_all add: simp_implies_def\\<close>)"], ["", "lemma reindex_cong:\n  assumes \"inj_on l B\"\n  assumes \"A = l ` B\"\n  assumes \"\\<And>x. x \\<in> B \\<Longrightarrow> g (l x) = h x\"\n  shows \"F g A = F h B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g A = F h B", "using assms"], ["proof (prove)\nusing this:\n  inj_on l B\n  A = l ` B\n  ?x1 \\<in> B \\<Longrightarrow> g (l ?x1) = h ?x1\n\ngoal (1 subgoal):\n 1. F g A = F h B", "by (simp add: reindex)"], ["", "lemma UNION_disjoint:\n  assumes \"finite I\" and \"\\<forall>i\\<in>I. finite (A i)\"\n    and \"\\<forall>i\\<in>I. \\<forall>j\\<in>I. i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\"\n  shows \"F g (\\<Union>(A ` I)) = F (\\<lambda>x. F g (A x)) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (\\<Union> (A ` I)) = F (\\<lambda>x. F g (A x)) I", "apply (insert assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i);\n     \\<forall>i\\<in>I.\n        \\<forall>j\\<in>I.\n           i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n    \\<Longrightarrow> F g (\\<Union> (A ` I)) = F (\\<lambda>x. F g (A x)) I", "apply (induct rule: finite_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i\\<in>{}. finite (A i);\n     \\<forall>i\\<in>{}.\n        \\<forall>j\\<in>{}.\n           i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n    \\<Longrightarrow> F g (\\<Union> (A ` {})) = F (\\<lambda>x. F g (A x)) {}\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>\\<forall>i\\<in>Fa. finite (A i);\n         \\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> (A ` Fa)) =\n                          F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>\\<forall>i\\<in>Fa. finite (A i);\n         \\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> (A ` Fa)) =\n                          F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)", "apply atomize"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)", "apply (subgoal_tac \"\\<forall>i\\<in>Fa. x \\<noteq> i\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {};\n        \\<forall>i\\<in>Fa. x \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>Fa. x \\<noteq> i", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>Fa. x \\<noteq> i\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {};\n        \\<forall>i\\<in>Fa. x \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {};\n        \\<forall>i\\<in>Fa. x \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)", "apply (subgoal_tac \"A x \\<inter> \\<Union>(A ` Fa) = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {};\n        \\<forall>i\\<in>Fa. x \\<noteq> i;\n        A x \\<inter> \\<Union> (A ` Fa) = {}\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {};\n        \\<forall>i\\<in>Fa. x \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> A x \\<inter> \\<Union> (A ` Fa) = {}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {};\n        \\<forall>i\\<in>Fa. x \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> A x \\<inter> \\<Union> (A ` Fa) = {}\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {};\n        \\<forall>i\\<in>Fa. x \\<noteq> i;\n        A x \\<inter> \\<Union> (A ` Fa) = {}\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        (\\<forall>i\\<in>Fa. finite (A i)) \\<longrightarrow>\n        (\\<forall>i\\<in>Fa.\n            \\<forall>j\\<in>Fa.\n               i \\<noteq> j \\<longrightarrow>\n               A i \\<inter> A j = {}) \\<longrightarrow>\n        F g (\\<Union> (A ` Fa)) = F (\\<lambda>x. F g (A x)) Fa;\n        \\<forall>i\\<in>insert x Fa. finite (A i);\n        \\<forall>i\\<in>insert x Fa.\n           \\<forall>j\\<in>insert x Fa.\n              i \\<noteq> j \\<longrightarrow> A i \\<inter> A j = {};\n        \\<forall>i\\<in>Fa. x \\<noteq> i;\n        A x \\<inter> \\<Union> (A ` Fa) = {}\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (A ` insert x Fa)) =\n                         F (\\<lambda>x. F g (A x)) (insert x Fa)", "apply (simp add: union_disjoint)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Union_disjoint:\n  assumes \"\\<forall>A\\<in>C. finite A\" \"\\<forall>A\\<in>C. \\<forall>B\\<in>C. A \\<noteq> B \\<longrightarrow> A \\<inter> B = {}\"\n  shows \"F g (\\<Union>C) = (F \\<circ> F) g C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (\\<Union> C) = (F \\<circ> F) g C", "proof (cases \"finite C\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite C \\<Longrightarrow> F g (\\<Union> C) = (F \\<circ> F) g C\n 2. infinite C \\<Longrightarrow> F g (\\<Union> C) = (F \\<circ> F) g C", "case True"], ["proof (state)\nthis:\n  finite C\n\ngoal (2 subgoals):\n 1. finite C \\<Longrightarrow> F g (\\<Union> C) = (F \\<circ> F) g C\n 2. infinite C \\<Longrightarrow> F g (\\<Union> C) = (F \\<circ> F) g C", "from UNION_disjoint [OF this assms]"], ["proof (chain)\npicking this:\n  F ?g (\\<Union>A\\<in>C. A) = F (F ?g) C", "show ?thesis"], ["proof (prove)\nusing this:\n  F ?g (\\<Union>A\\<in>C. A) = F (F ?g) C\n\ngoal (1 subgoal):\n 1. F g (\\<Union> C) = (F \\<circ> F) g C", "by simp"], ["proof (state)\nthis:\n  F g (\\<Union> C) = (F \\<circ> F) g C\n\ngoal (1 subgoal):\n 1. infinite C \\<Longrightarrow> F g (\\<Union> C) = (F \\<circ> F) g C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite C \\<Longrightarrow> F g (\\<Union> C) = (F \\<circ> F) g C", "case False"], ["proof (state)\nthis:\n  infinite C\n\ngoal (1 subgoal):\n 1. infinite C \\<Longrightarrow> F g (\\<Union> C) = (F \\<circ> F) g C", "then"], ["proof (chain)\npicking this:\n  infinite C", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite C\n\ngoal (1 subgoal):\n 1. F g (\\<Union> C) = (F \\<circ> F) g C", "by (auto dest: finite_UnionD intro: infinite)"], ["proof (state)\nthis:\n  F g (\\<Union> C) = (F \\<circ> F) g C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distrib: \"F (\\<lambda>x. g x \\<^bold>* h x) A = F g A \\<^bold>* F h A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g x \\<^bold>* h x) A = F g A \\<^bold>* F h A", "by (induct A rule: infinite_finite_induct) (simp_all add: assoc commute left_commute)"], ["", "lemma Sigma:\n  \"finite A \\<Longrightarrow> \\<forall>x\\<in>A. finite (B x) \\<Longrightarrow> F (\\<lambda>x. F (g x) (B x)) A = F (case_prod g) (SIGMA x:A. B x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. F (g x) (B x)) A =\n                      F (\\<lambda>(x, y). g x y) (Sigma A B)", "apply (subst Sigma_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. F (g x) (B x)) A =\n                      F (\\<lambda>(x, y). g x y)\n                       (\\<Union>x\\<in>A. \\<Union>y\\<in>B x. {(x, y)})", "apply (subst UNION_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>A. finite (\\<Union>y\\<in>B i. {(i, y)})\n 3. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>A.\n                         \\<forall>j\\<in>A.\n                            i \\<noteq> j \\<longrightarrow>\n                            (\\<Union>y\\<in>B i. {(i, y)}) \\<inter>\n                            (\\<Union>y\\<in>B j. {(j, y)}) =\n                            {}\n 4. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. F (g x) (B x)) A =\n                      F (\\<lambda>x.\n                            F (\\<lambda>(x, y). g x y)\n                             (\\<Union>y\\<in>B x. {(x, y)}))\n                       A", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>A. finite (\\<Union>y\\<in>B i. {(i, y)})\n 2. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>A.\n                         \\<forall>j\\<in>A.\n                            i \\<noteq> j \\<longrightarrow>\n                            (\\<Union>y\\<in>B i. {(i, y)}) \\<inter>\n                            (\\<Union>y\\<in>B j. {(j, y)}) =\n                            {}\n 3. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. F (g x) (B x)) A =\n                      F (\\<lambda>x.\n                            F (\\<lambda>(x, y). g x y)\n                             (\\<Union>y\\<in>B x. {(x, y)}))\n                       A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>A.\n                         \\<forall>j\\<in>A.\n                            i \\<noteq> j \\<longrightarrow>\n                            (\\<Union>y\\<in>B i. {(i, y)}) \\<inter>\n                            (\\<Union>y\\<in>B j. {(j, y)}) =\n                            {}\n 2. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. F (g x) (B x)) A =\n                      F (\\<lambda>x.\n                            F (\\<lambda>(x, y). g x y)\n                             (\\<Union>y\\<in>B x. {(x, y)}))\n                       A", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. F (g x) (B x)) A =\n                      F (\\<lambda>x.\n                            F (\\<lambda>(x, y). g x y)\n                             (\\<Union>y\\<in>B x. {(x, y)}))\n                       A", "apply (rule cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x)\\<rbrakk>\n    \\<Longrightarrow> A = A\n 2. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> F (g x) (B x) =\n                         F (\\<lambda>(x, y). g x y)\n                          (\\<Union>y\\<in>B x. {(x, y)})", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> F (g x) (B x) =\n                         F (\\<lambda>(x, y). g x y)\n                          (\\<Union>y\\<in>B x. {(x, y)})", "apply (simp add: fun_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> F (g x) (B x) =\n                         F (\\<lambda>x.\n                               case x of (x, xa) \\<Rightarrow> g x xa)\n                          (\\<Union>y\\<in>B x. {(x, y)})", "apply (subst UNION_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> finite (B x)\n 2. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>B x. finite {(x, i)}\n 3. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>B x.\n                            \\<forall>j\\<in>B x.\n                               i \\<noteq> j \\<longrightarrow>\n                               {(x, i)} \\<inter> {(x, j)} = {}\n 4. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> F (g x) (B x) =\n                         F (\\<lambda>xa.\n                               F (\\<lambda>(x, y). g x y) {(x, xa)})\n                          (B x)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>B x. finite {(x, i)}\n 2. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>B x.\n                            \\<forall>j\\<in>B x.\n                               i \\<noteq> j \\<longrightarrow>\n                               {(x, i)} \\<inter> {(x, j)} = {}\n 3. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> F (g x) (B x) =\n                         F (\\<lambda>xa.\n                               F (\\<lambda>(x, y). g x y) {(x, xa)})\n                          (B x)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>B x.\n                            \\<forall>j\\<in>B x.\n                               i \\<noteq> j \\<longrightarrow>\n                               {(x, i)} \\<inter> {(x, j)} = {}\n 2. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> F (g x) (B x) =\n                         F (\\<lambda>xa.\n                               F (\\<lambda>(x, y). g x y) {(x, xa)})\n                          (B x)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; \\<forall>x\\<in>A. finite (B x); x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> F (g x) (B x) =\n                         F (\\<lambda>xa.\n                               F (\\<lambda>(x, y). g x y) {(x, xa)})\n                          (B x)", "apply (simp add: comp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma related:\n  assumes Re: \"R \\<^bold>1 \\<^bold>1\"\n    and Rop: \"\\<forall>x1 y1 x2 y2. R x1 x2 \\<and> R y1 y2 \\<longrightarrow> R (x1 \\<^bold>* y1) (x2 \\<^bold>* y2)\"\n    and fin: \"finite S\"\n    and R_h_g: \"\\<forall>x\\<in>S. R (h x) (g x)\"\n  shows \"R (F h S) (F g S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R (F h S) (F g S)", "using fin"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. R (F h S) (F g S)", "by (rule finite_subset_induct) (use assms in auto)"], ["", "lemma mono_neutral_cong_left:\n  assumes \"finite T\"\n    and \"S \\<subseteq> T\"\n    and \"\\<forall>i \\<in> T - S. h i = \\<^bold>1\"\n    and \"\\<And>x. x \\<in> S \\<Longrightarrow> g x = h x\"\n  shows \"F g S = F h T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F h T", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F g S = F h T", "have eq: \"T = S \\<union> (T - S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T = S \\<union> (T - S)", "using \\<open>S \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. T = S \\<union> (T - S)", "by blast"], ["proof (state)\nthis:\n  T = S \\<union> (T - S)\n\ngoal (1 subgoal):\n 1. F g S = F h T", "have d: \"S \\<inter> (T - S) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<inter> (T - S) = {}", "using \\<open>S \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. S \\<inter> (T - S) = {}", "by blast"], ["proof (state)\nthis:\n  S \\<inter> (T - S) = {}\n\ngoal (1 subgoal):\n 1. F g S = F h T", "from \\<open>finite T\\<close> \\<open>S \\<subseteq> T\\<close>"], ["proof (chain)\npicking this:\n  finite T\n  S \\<subseteq> T", "have f: \"finite S\" \"finite (T - S)\""], ["proof (prove)\nusing this:\n  finite T\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. finite S &&& finite (T - S)", "by (auto intro: finite_subset)"], ["proof (state)\nthis:\n  finite S\n  finite (T - S)\n\ngoal (1 subgoal):\n 1. F g S = F h T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F h T", "using assms(4)"], ["proof (prove)\nusing this:\n  ?x1 \\<in> S \\<Longrightarrow> g ?x1 = h ?x1\n\ngoal (1 subgoal):\n 1. F g S = F h T", "by (simp add: union_disjoint [OF f d, unfolded eq [symmetric]] neutral [OF assms(3)])"], ["proof (state)\nthis:\n  F g S = F h T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mono_neutral_cong_right:\n  \"finite T \\<Longrightarrow> S \\<subseteq> T \\<Longrightarrow> \\<forall>i \\<in> T - S. g i = \\<^bold>1 \\<Longrightarrow> (\\<And>x. x \\<in> S \\<Longrightarrow> g x = h x) \\<Longrightarrow>\n    F g T = F h S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite T; S \\<subseteq> T;\n     \\<forall>i\\<in>T - S. g i = \\<^bold>1;\n     \\<And>x. x \\<in> S \\<Longrightarrow> g x = h x\\<rbrakk>\n    \\<Longrightarrow> F g T = F h S", "by (auto intro!: mono_neutral_cong_left [symmetric])"], ["", "lemma mono_neutral_left: \"finite T \\<Longrightarrow> S \\<subseteq> T \\<Longrightarrow> \\<forall>i \\<in> T - S. g i = \\<^bold>1 \\<Longrightarrow> F g S = F g T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite T; S \\<subseteq> T;\n     \\<forall>i\\<in>T - S. g i = \\<^bold>1\\<rbrakk>\n    \\<Longrightarrow> F g S = F g T", "by (blast intro: mono_neutral_cong_left)"], ["", "lemma mono_neutral_right: \"finite T \\<Longrightarrow> S \\<subseteq> T \\<Longrightarrow> \\<forall>i \\<in> T - S. g i = \\<^bold>1 \\<Longrightarrow> F g T = F g S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite T; S \\<subseteq> T;\n     \\<forall>i\\<in>T - S. g i = \\<^bold>1\\<rbrakk>\n    \\<Longrightarrow> F g T = F g S", "by (blast intro!: mono_neutral_left [symmetric])"], ["", "lemma mono_neutral_cong:\n  assumes [simp]: \"finite T\" \"finite S\"\n    and *: \"\\<And>i. i \\<in> T - S \\<Longrightarrow> h i = \\<^bold>1\" \"\\<And>i. i \\<in> S - T \\<Longrightarrow> g i = \\<^bold>1\"\n    and gh: \"\\<And>x. x \\<in> S \\<inter> T \\<Longrightarrow> g x = h x\"\n shows \"F g S = F h T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F h T", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F g S = F h T", "have \"F g S = F g (S \\<inter> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F g (S \\<inter> T)", "by(rule mono_neutral_right)(auto intro: *)"], ["proof (state)\nthis:\n  F g S = F g (S \\<inter> T)\n\ngoal (1 subgoal):\n 1. F g S = F h T", "also"], ["proof (state)\nthis:\n  F g S = F g (S \\<inter> T)\n\ngoal (1 subgoal):\n 1. F g S = F h T", "have \"\\<dots> = F h (S \\<inter> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (S \\<inter> T) = F h (S \\<inter> T)", "using refl gh"], ["proof (prove)\nusing this:\n  ?t = ?t\n  ?x1 \\<in> S \\<inter> T \\<Longrightarrow> g ?x1 = h ?x1\n\ngoal (1 subgoal):\n 1. F g (S \\<inter> T) = F h (S \\<inter> T)", "by(rule cong)"], ["proof (state)\nthis:\n  F g (S \\<inter> T) = F h (S \\<inter> T)\n\ngoal (1 subgoal):\n 1. F g S = F h T", "also"], ["proof (state)\nthis:\n  F g (S \\<inter> T) = F h (S \\<inter> T)\n\ngoal (1 subgoal):\n 1. F g S = F h T", "have \"\\<dots> = F h T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F h (S \\<inter> T) = F h T", "by(rule mono_neutral_left)(auto intro: *)"], ["proof (state)\nthis:\n  F h (S \\<inter> T) = F h T\n\ngoal (1 subgoal):\n 1. F g S = F h T", "finally"], ["proof (chain)\npicking this:\n  F g S = F h T", "show ?thesis"], ["proof (prove)\nusing this:\n  F g S = F h T\n\ngoal (1 subgoal):\n 1. F g S = F h T", "."], ["proof (state)\nthis:\n  F g S = F h T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reindex_bij_betw: \"bij_betw h S T \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw h S T \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "by (auto simp: bij_betw_def reindex)"], ["", "lemma reindex_bij_witness:\n  assumes witness:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> i (j a) = a\"\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> j a \\<in> T\"\n    \"\\<And>b. b \\<in> T \\<Longrightarrow> j (i b) = b\"\n    \"\\<And>b. b \\<in> T \\<Longrightarrow> i b \\<in> S\"\n  assumes eq:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> h (j a) = g a\"\n  shows \"F g S = F h T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F h T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F g S = F h T", "have \"bij_betw j S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw j S T", "using bij_betw_byWitness[where A=S and f=j and f'=i and A'=T] witness"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>a\\<in>S. i (j a) = a; \\<forall>a'\\<in>T. j (i a') = a';\n   j ` S \\<subseteq> T; i ` T \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> bij_betw j S T\n  ?a1 \\<in> S \\<Longrightarrow> i (j ?a1) = ?a1\n  ?a1 \\<in> S \\<Longrightarrow> j ?a1 \\<in> T\n  ?b1 \\<in> T \\<Longrightarrow> j (i ?b1) = ?b1\n  ?b1 \\<in> T \\<Longrightarrow> i ?b1 \\<in> S\n\ngoal (1 subgoal):\n 1. bij_betw j S T", "by auto"], ["proof (state)\nthis:\n  bij_betw j S T\n\ngoal (1 subgoal):\n 1. F g S = F h T", "moreover"], ["proof (state)\nthis:\n  bij_betw j S T\n\ngoal (1 subgoal):\n 1. F g S = F h T", "have \"F g S = F (\\<lambda>x. h (j x)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F (\\<lambda>x. h (j x)) S", "by (intro cong) (auto simp: eq)"], ["proof (state)\nthis:\n  F g S = F (\\<lambda>x. h (j x)) S\n\ngoal (1 subgoal):\n 1. F g S = F h T", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw j S T\n  F g S = F (\\<lambda>x. h (j x)) S", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw j S T\n  F g S = F (\\<lambda>x. h (j x)) S\n\ngoal (1 subgoal):\n 1. F g S = F h T", "by (simp add: reindex_bij_betw)"], ["proof (state)\nthis:\n  F g S = F h T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reindex_bij_betw_not_neutral:\n  assumes fin: \"finite S'\" \"finite T'\"\n  assumes bij: \"bij_betw h (S - S') (T - T')\"\n  assumes nn:\n    \"\\<And>a. a \\<in> S' \\<Longrightarrow> g (h a) = z\"\n    \"\\<And>b. b \\<in> T' \\<Longrightarrow> g b = z\"\n  shows \"F (\\<lambda>x. g (h x)) S = F g T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) S = F g T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) S = F g T", "have [simp]: \"finite S \\<longleftrightarrow> finite T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S = finite T", "using bij_betw_finite[OF bij] fin"], ["proof (prove)\nusing this:\n  finite (S - S') = finite (T - T')\n  finite S'\n  finite T'\n\ngoal (1 subgoal):\n 1. finite S = finite T", "by auto"], ["proof (state)\nthis:\n  finite S = finite T\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) S = F g T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) S = F g T", "proof (cases \"finite S\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\n 2. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "case True"], ["proof (state)\nthis:\n  finite S\n\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\n 2. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "with nn"], ["proof (chain)\npicking this:\n  ?a1 \\<in> S' \\<Longrightarrow> g (h ?a1) = \\<^bold>1\n  ?b1 \\<in> T' \\<Longrightarrow> g ?b1 = \\<^bold>1\n  finite S", "have \"F (\\<lambda>x. g (h x)) S = F (\\<lambda>x. g (h x)) (S - S')\""], ["proof (prove)\nusing this:\n  ?a1 \\<in> S' \\<Longrightarrow> g (h ?a1) = \\<^bold>1\n  ?b1 \\<in> T' \\<Longrightarrow> g ?b1 = \\<^bold>1\n  finite S\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) S = F (\\<lambda>x. g (h x)) (S - S')", "by (intro mono_neutral_cong_right) auto"], ["proof (state)\nthis:\n  F (\\<lambda>x. g (h x)) S = F (\\<lambda>x. g (h x)) (S - S')\n\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\n 2. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "also"], ["proof (state)\nthis:\n  F (\\<lambda>x. g (h x)) S = F (\\<lambda>x. g (h x)) (S - S')\n\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\n 2. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "have \"\\<dots> = F g (T - T')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) (S - S') = F g (T - T')", "using bij"], ["proof (prove)\nusing this:\n  bij_betw h (S - S') (T - T')\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) (S - S') = F g (T - T')", "by (rule reindex_bij_betw)"], ["proof (state)\nthis:\n  F (\\<lambda>x. g (h x)) (S - S') = F g (T - T')\n\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\n 2. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "also"], ["proof (state)\nthis:\n  F (\\<lambda>x. g (h x)) (S - S') = F g (T - T')\n\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\n 2. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "have \"\\<dots> = F g T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (T - T') = F g T", "using nn \\<open>finite S\\<close>"], ["proof (prove)\nusing this:\n  ?a1 \\<in> S' \\<Longrightarrow> g (h ?a1) = \\<^bold>1\n  ?b1 \\<in> T' \\<Longrightarrow> g ?b1 = \\<^bold>1\n  finite S\n\ngoal (1 subgoal):\n 1. F g (T - T') = F g T", "by (intro mono_neutral_cong_left) auto"], ["proof (state)\nthis:\n  F g (T - T') = F g T\n\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T\n 2. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "finally"], ["proof (chain)\npicking this:\n  F (\\<lambda>x. g (h x)) S = F g T", "show ?thesis"], ["proof (prove)\nusing this:\n  F (\\<lambda>x. g (h x)) S = F g T\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) S = F g T", "."], ["proof (state)\nthis:\n  F (\\<lambda>x. g (h x)) S = F g T\n\ngoal (1 subgoal):\n 1. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "case False"], ["proof (state)\nthis:\n  infinite S\n\ngoal (1 subgoal):\n 1. infinite S \\<Longrightarrow> F (\\<lambda>x. g (h x)) S = F g T", "then"], ["proof (chain)\npicking this:\n  infinite S", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite S\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. g (h x)) S = F g T", "by simp"], ["proof (state)\nthis:\n  F (\\<lambda>x. g (h x)) S = F g T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F (\\<lambda>x. g (h x)) S = F g T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reindex_nontrivial:\n  assumes \"finite A\"\n    and nz: \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> h x = h y \\<Longrightarrow> g (h x) = \\<^bold>1\"\n  shows \"F g (h ` A) = F (g \\<circ> h) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (h ` A) = F (g \\<circ> h) A", "proof (subst reindex_bij_betw_not_neutral [symmetric])"], ["proof (state)\ngoal (6 subgoals):\n 1. finite ?S'\n 2. finite ?T'\n 3. bij_betw ?h (?S - ?S') (h ` A - ?T')\n 4. \\<And>a. a \\<in> ?S' \\<Longrightarrow> g (?h a) = \\<^bold>1\n 5. \\<And>b. b \\<in> ?T' \\<Longrightarrow> g b = \\<^bold>1\n 6. F (\\<lambda>x. g (?h x)) ?S = F (g \\<circ> h) A", "show \"bij_betw h (A - {x \\<in> A. (g \\<circ> h) x = \\<^bold>1}) (h ` A - h ` {x \\<in> A. (g \\<circ> h) x = \\<^bold>1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw h (A - {x \\<in> A. (g \\<circ> h) x = \\<^bold>1})\n     (h ` A - h ` {x \\<in> A. (g \\<circ> h) x = \\<^bold>1})", "using nz"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x1 \\<in> A; ?y1 \\<in> A; ?x1 \\<noteq> ?y1;\n   h ?x1 = h ?y1\\<rbrakk>\n  \\<Longrightarrow> g (h ?x1) = \\<^bold>1\n\ngoal (1 subgoal):\n 1. bij_betw h (A - {x \\<in> A. (g \\<circ> h) x = \\<^bold>1})\n     (h ` A - h ` {x \\<in> A. (g \\<circ> h) x = \\<^bold>1})", "by (auto intro!: inj_onI simp: bij_betw_def)"], ["proof (state)\nthis:\n  bij_betw h (A - {x \\<in> A. (g \\<circ> h) x = \\<^bold>1})\n   (h ` A - h ` {x \\<in> A. (g \\<circ> h) x = \\<^bold>1})\n\ngoal (5 subgoals):\n 1. finite {x \\<in> A. (g \\<circ> h) x = \\<^bold>1}\n 2. finite (h ` {x \\<in> A. (g \\<circ> h) x = \\<^bold>1})\n 3. \\<And>a.\n       a \\<in> {x \\<in> A. (g \\<circ> h) x = \\<^bold>1} \\<Longrightarrow>\n       g (h a) = \\<^bold>1\n 4. \\<And>b.\n       b \\<in> h `\n               {x \\<in> A. (g \\<circ> h) x = \\<^bold>1} \\<Longrightarrow>\n       g b = \\<^bold>1\n 5. F (\\<lambda>x. g (h x)) A = F (g \\<circ> h) A", "qed (use \\<open>finite A\\<close> in auto)"], ["", "lemma reindex_bij_witness_not_neutral:\n  assumes fin: \"finite S'\" \"finite T'\"\n  assumes witness:\n    \"\\<And>a. a \\<in> S - S' \\<Longrightarrow> i (j a) = a\"\n    \"\\<And>a. a \\<in> S - S' \\<Longrightarrow> j a \\<in> T - T'\"\n    \"\\<And>b. b \\<in> T - T' \\<Longrightarrow> j (i b) = b\"\n    \"\\<And>b. b \\<in> T - T' \\<Longrightarrow> i b \\<in> S - S'\"\n  assumes nn:\n    \"\\<And>a. a \\<in> S' \\<Longrightarrow> g a = z\"\n    \"\\<And>b. b \\<in> T' \\<Longrightarrow> h b = z\"\n  assumes eq:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> h (j a) = g a\"\n  shows \"F g S = F h T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F h T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F g S = F h T", "have bij: \"bij_betw j (S - (S' \\<inter> S)) (T - (T' \\<inter> T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw j (S - S' \\<inter> S) (T - T' \\<inter> T)", "using witness"], ["proof (prove)\nusing this:\n  ?a1 \\<in> S - S' \\<Longrightarrow> i (j ?a1) = ?a1\n  ?a1 \\<in> S - S' \\<Longrightarrow> j ?a1 \\<in> T - T'\n  ?b1 \\<in> T - T' \\<Longrightarrow> j (i ?b1) = ?b1\n  ?b1 \\<in> T - T' \\<Longrightarrow> i ?b1 \\<in> S - S'\n\ngoal (1 subgoal):\n 1. bij_betw j (S - S' \\<inter> S) (T - T' \\<inter> T)", "by (intro bij_betw_byWitness[where f'=i]) auto"], ["proof (state)\nthis:\n  bij_betw j (S - S' \\<inter> S) (T - T' \\<inter> T)\n\ngoal (1 subgoal):\n 1. F g S = F h T", "have F_eq: \"F g S = F (\\<lambda>x. h (j x)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F (\\<lambda>x. h (j x)) S", "by (intro cong) (auto simp: eq)"], ["proof (state)\nthis:\n  F g S = F (\\<lambda>x. h (j x)) S\n\ngoal (1 subgoal):\n 1. F g S = F h T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F g S = F h T", "unfolding F_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. h (j x)) S = F h T", "using fin nn eq"], ["proof (prove)\nusing this:\n  finite S'\n  finite T'\n  ?a1 \\<in> S' \\<Longrightarrow> g ?a1 = \\<^bold>1\n  ?b1 \\<in> T' \\<Longrightarrow> h ?b1 = \\<^bold>1\n  ?a1 \\<in> S \\<Longrightarrow> h (j ?a1) = g ?a1\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. h (j x)) S = F h T", "by (intro reindex_bij_betw_not_neutral[OF _ _ bij]) auto"], ["proof (state)\nthis:\n  F g S = F h T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma delta_remove:\n  assumes fS: \"finite S\"\n  shows \"F (\\<lambda>k. if k = a then b k else c k) S = (if a \\<in> S then b a \\<^bold>* F c (S-{a}) else F c (S-{a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "let ?f = \"(\\<lambda>k. if k = a then b k else c k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "proof (cases \"a \\<in> S\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))\n 2. a \\<notin> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "case False"], ["proof (state)\nthis:\n  a \\<notin> S\n\ngoal (2 subgoals):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))\n 2. a \\<notin> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "then"], ["proof (chain)\npicking this:\n  a \\<notin> S", "have \"\\<forall>k\\<in>S. ?f k = c k\""], ["proof (prove)\nusing this:\n  a \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>S. (if k = a then b k else c k) = c k", "by simp"], ["proof (state)\nthis:\n  \\<forall>k\\<in>S. (if k = a then b k else c k) = c k\n\ngoal (2 subgoals):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))\n 2. a \\<notin> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "with False"], ["proof (chain)\npicking this:\n  a \\<notin> S\n  \\<forall>k\\<in>S. (if k = a then b k else c k) = c k", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<notin> S\n  \\<forall>k\\<in>S. (if k = a then b k else c k) = c k\n\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "by simp"], ["proof (state)\nthis:\n  F (\\<lambda>k. if k = a then b k else c k) S =\n  (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))\n\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "case True"], ["proof (state)\nthis:\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "let ?A = \"S - {a}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "let ?B = \"{a}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "from True"], ["proof (chain)\npicking this:\n  a \\<in> S", "have eq: \"S = ?A \\<union> ?B\""], ["proof (prove)\nusing this:\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. S = S - {a} \\<union> {a}", "by blast"], ["proof (state)\nthis:\n  S = S - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "have dj: \"?A \\<inter> ?B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S - {a}) \\<inter> {a} = {}", "by simp"], ["proof (state)\nthis:\n  (S - {a}) \\<inter> {a} = {}\n\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "from fS"], ["proof (chain)\npicking this:\n  finite S", "have fAB: \"finite ?A\" \"finite ?B\""], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. finite (S - {a}) &&& finite {a}", "by auto"], ["proof (state)\nthis:\n  finite (S - {a})\n  finite {a}\n\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "have \"F ?f S = F ?f ?A \\<^bold>* F ?f ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    F (\\<lambda>k. if k = a then b k else c k) (S - {a}) \\<^bold>*\n    F (\\<lambda>k. if k = a then b k else c k) {a}", "using union_disjoint [OF fAB dj, of ?f, unfolded eq [symmetric]]"], ["proof (prove)\nusing this:\n  F (\\<lambda>k. if k = a then b k else c k) S =\n  F (\\<lambda>k. if k = a then b k else c k) (S - {a}) \\<^bold>*\n  F (\\<lambda>k. if k = a then b k else c k) {a}\n\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    F (\\<lambda>k. if k = a then b k else c k) (S - {a}) \\<^bold>*\n    F (\\<lambda>k. if k = a then b k else c k) {a}", "by simp"], ["proof (state)\nthis:\n  F (\\<lambda>k. if k = a then b k else c k) S =\n  F (\\<lambda>k. if k = a then b k else c k) (S - {a}) \\<^bold>*\n  F (\\<lambda>k. if k = a then b k else c k) {a}\n\ngoal (1 subgoal):\n 1. a \\<in> S \\<Longrightarrow>\n    F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "with True"], ["proof (chain)\npicking this:\n  a \\<in> S\n  F (\\<lambda>k. if k = a then b k else c k) S =\n  F (\\<lambda>k. if k = a then b k else c k) (S - {a}) \\<^bold>*\n  F (\\<lambda>k. if k = a then b k else c k) {a}", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> S\n  F (\\<lambda>k. if k = a then b k else c k) S =\n  F (\\<lambda>k. if k = a then b k else c k) (S - {a}) \\<^bold>*\n  F (\\<lambda>k. if k = a then b k else c k) {a}\n\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "using abel_semigroup_set.remove abel_semigroup_set_axioms fS"], ["proof (prove)\nusing this:\n  a \\<in> S\n  F (\\<lambda>k. if k = a then b k else c k) S =\n  F (\\<lambda>k. if k = a then b k else c k) (S - {a}) \\<^bold>*\n  F (\\<lambda>k. if k = a then b k else c k) {a}\n  \\<lbrakk>abel_semigroup_set ?f ?z; finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> abel_semigroup_set.F ?f ?z ?g ?A =\n                    ?f (?g ?x) (abel_semigroup_set.F ?f ?z ?g (?A - {?x}))\n  abel_semigroup_set (\\<^bold>*) \\<^bold>1\n  finite S\n\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else c k) S =\n    (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))", "by fastforce"], ["proof (state)\nthis:\n  F (\\<lambda>k. if k = a then b k else c k) S =\n  (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F (\\<lambda>k. if k = a then b k else c k) S =\n  (if a \\<in> S then b a \\<^bold>* F c (S - {a}) else F c (S - {a}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma delta [simp]:\n  assumes fS: \"finite S\"\n  shows \"F (\\<lambda>k. if k = a then b k else \\<^bold>1) S = (if a \\<in> S then b a \\<^bold>* \\<^bold>1 else \\<^bold>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if k = a then b k else \\<^bold>1) S =\n    (if a \\<in> S then b a \\<^bold>* \\<^bold>1 else \\<^bold>1)", "by (simp add: delta_remove [OF assms])"], ["", "lemma delta' [simp]:\n  assumes fin: \"finite S\"\n  shows \"F (\\<lambda>k. if a = k then b k else \\<^bold>1) S = (if a \\<in> S then b a \\<^bold>* \\<^bold>1 else \\<^bold>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if a = k then b k else \\<^bold>1) S =\n    (if a \\<in> S then b a \\<^bold>* \\<^bold>1 else \\<^bold>1)", "using delta [OF fin, of a b, symmetric]"], ["proof (prove)\nusing this:\n  (if a \\<in> S then b a \\<^bold>* \\<^bold>1 else \\<^bold>1) =\n  F (\\<lambda>k. if k = a then b k else \\<^bold>1) S\n\ngoal (1 subgoal):\n 1. F (\\<lambda>k. if a = k then b k else \\<^bold>1) S =\n    (if a \\<in> S then b a \\<^bold>* \\<^bold>1 else \\<^bold>1)", "by (auto intro: cong)"], ["", "lemma If_cases:\n  fixes P :: \"'b \\<Rightarrow> bool\" and g h :: \"'b \\<Rightarrow> 'a\"\n  assumes fin: \"finite A\"\n  shows \"F (\\<lambda>x. if P x then h x else g x) A = F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. if P x then h x else g x) A =\n    F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. if P x then h x else g x) A =\n    F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})", "have a: \"A = A \\<inter> {x. P x} \\<union> A \\<inter> -{x. P x}\" \"(A \\<inter> {x. P x}) \\<inter> (A \\<inter> -{x. P x}) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = A \\<inter> {x. P x} \\<union> A \\<inter> - {x. P x} &&&\n    A \\<inter> {x. P x} \\<inter> (A \\<inter> - {x. P x}) = {}", "by blast+"], ["proof (state)\nthis:\n  A = A \\<inter> {x. P x} \\<union> A \\<inter> - {x. P x}\n  A \\<inter> {x. P x} \\<inter> (A \\<inter> - {x. P x}) = {}\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. if P x then h x else g x) A =\n    F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})", "from fin"], ["proof (chain)\npicking this:\n  finite A", "have f: \"finite (A \\<inter> {x. P x})\" \"finite (A \\<inter> -{x. P x})\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (A \\<inter> {x. P x}) &&& finite (A \\<inter> - {x. P x})", "by auto"], ["proof (state)\nthis:\n  finite (A \\<inter> {x. P x})\n  finite (A \\<inter> - {x. P x})\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. if P x then h x else g x) A =\n    F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})", "let ?g = \"\\<lambda>x. if P x then h x else g x\""], ["proof (state)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. if P x then h x else g x) A =\n    F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})", "from union_disjoint [OF f a(2), of ?g] a(1)"], ["proof (chain)\npicking this:\n  F (\\<lambda>x. if P x then h x else g x)\n   (A \\<inter> {x. P x} \\<union> A \\<inter> - {x. P x}) =\n  F (\\<lambda>x. if P x then h x else g x) (A \\<inter> {x. P x}) \\<^bold>*\n  F (\\<lambda>x. if P x then h x else g x) (A \\<inter> - {x. P x})\n  A = A \\<inter> {x. P x} \\<union> A \\<inter> - {x. P x}", "show ?thesis"], ["proof (prove)\nusing this:\n  F (\\<lambda>x. if P x then h x else g x)\n   (A \\<inter> {x. P x} \\<union> A \\<inter> - {x. P x}) =\n  F (\\<lambda>x. if P x then h x else g x) (A \\<inter> {x. P x}) \\<^bold>*\n  F (\\<lambda>x. if P x then h x else g x) (A \\<inter> - {x. P x})\n  A = A \\<inter> {x. P x} \\<union> A \\<inter> - {x. P x}\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. if P x then h x else g x) A =\n    F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})", "by (subst (1 2) cong) simp_all"], ["proof (state)\nthis:\n  F (\\<lambda>x. if P x then h x else g x) A =\n  F h (A \\<inter> {x. P x}) \\<^bold>* F g (A \\<inter> - {x. P x})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cartesian_product: \"F (\\<lambda>x. F (g x) B) A = F (case_prod g) (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>x. F (g x) B) A = F (\\<lambda>(x, y). g x y) (A \\<times> B)", "apply (rule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>(x, y). g x y) (A \\<times> B) = F (\\<lambda>x. F (g x) B) A", "apply (cases \"finite A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow>\n    F (\\<lambda>(x, y). g x y) (A \\<times> B) = F (\\<lambda>x. F (g x) B) A\n 2. infinite A \\<Longrightarrow>\n    F (\\<lambda>(x, y). g x y) (A \\<times> B) = F (\\<lambda>x. F (g x) B) A", "apply (cases \"finite B\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>finite A; finite B\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>(x, y). g x y) (A \\<times> B) =\n                      F (\\<lambda>x. F (g x) B) A\n 2. \\<lbrakk>finite A; infinite B\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>(x, y). g x y) (A \\<times> B) =\n                      F (\\<lambda>x. F (g x) B) A\n 3. infinite A \\<Longrightarrow>\n    F (\\<lambda>(x, y). g x y) (A \\<times> B) = F (\\<lambda>x. F (g x) B) A", "apply (simp add: Sigma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; infinite B\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>(x, y). g x y) (A \\<times> B) =\n                      F (\\<lambda>x. F (g x) B) A\n 2. infinite A \\<Longrightarrow>\n    F (\\<lambda>(x, y). g x y) (A \\<times> B) = F (\\<lambda>x. F (g x) B) A", "apply (cases \"A = {}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>finite A; infinite B; A = {}\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>(x, y). g x y) (A \\<times> B) =\n                      F (\\<lambda>x. F (g x) B) A\n 2. \\<lbrakk>finite A; infinite B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>(x, y). g x y) (A \\<times> B) =\n                      F (\\<lambda>x. F (g x) B) A\n 3. infinite A \\<Longrightarrow>\n    F (\\<lambda>(x, y). g x y) (A \\<times> B) = F (\\<lambda>x. F (g x) B) A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; infinite B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>(x, y). g x y) (A \\<times> B) =\n                      F (\\<lambda>x. F (g x) B) A\n 2. infinite A \\<Longrightarrow>\n    F (\\<lambda>(x, y). g x y) (A \\<times> B) = F (\\<lambda>x. F (g x) B) A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; infinite B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. case x of (x, xa) \\<Rightarrow> g x xa)\n                       (A \\<times> B) =\n                      \\<^bold>1\n 2. infinite A \\<Longrightarrow>\n    F (\\<lambda>(x, y). g x y) (A \\<times> B) = F (\\<lambda>x. F (g x) B) A", "apply (auto intro: infinite dest: finite_cartesian_productD2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow>\n    F (\\<lambda>x. case x of (x, xa) \\<Rightarrow> g x xa) (A \\<times> B) =\n    \\<^bold>1", "apply (cases \"B = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>infinite A; B = {}\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. case x of (x, xa) \\<Rightarrow> g x xa)\n                       (A \\<times> B) =\n                      \\<^bold>1\n 2. \\<lbrakk>infinite A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. case x of (x, xa) \\<Rightarrow> g x xa)\n                       (A \\<times> B) =\n                      \\<^bold>1", "apply (auto intro: infinite dest: finite_cartesian_productD1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inter_restrict:\n  assumes \"finite A\"\n  shows \"F g (A \\<inter> B) = F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F g (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A", "let ?g = \"\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1\""], ["proof (state)\ngoal (1 subgoal):\n 1. F g (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A", "have \"\\<forall>i\\<in>A - A \\<inter> B. (if i \\<in> A \\<inter> B then g i else \\<^bold>1) = \\<^bold>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>A - A \\<inter> B.\n       (if i \\<in> A \\<inter> B then g i else \\<^bold>1) = \\<^bold>1", "by simp"], ["proof (state)\nthis:\n  \\<forall>i\\<in>A - A \\<inter> B.\n     (if i \\<in> A \\<inter> B then g i else \\<^bold>1) = \\<^bold>1\n\ngoal (1 subgoal):\n 1. F g (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A", "moreover"], ["proof (state)\nthis:\n  \\<forall>i\\<in>A - A \\<inter> B.\n     (if i \\<in> A \\<inter> B then g i else \\<^bold>1) = \\<^bold>1\n\ngoal (1 subgoal):\n 1. F g (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A", "have \"A \\<inter> B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> B \\<subseteq> A", "by blast"], ["proof (state)\nthis:\n  A \\<inter> B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. F g (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>A - A \\<inter> B.\n     (if i \\<in> A \\<inter> B then g i else \\<^bold>1) = \\<^bold>1\n  A \\<inter> B \\<subseteq> A", "have \"F ?g (A \\<inter> B) = F ?g A\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>A - A \\<inter> B.\n     (if i \\<in> A \\<inter> B then g i else \\<^bold>1) = \\<^bold>1\n  A \\<inter> B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1)\n     (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1) A", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>A - A \\<inter> B.\n     (if i \\<in> A \\<inter> B then g i else \\<^bold>1) = \\<^bold>1\n  A \\<inter> B \\<subseteq> A\n  finite A\n\ngoal (1 subgoal):\n 1. F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1)\n     (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1) A", "by (intro mono_neutral_left) auto"], ["proof (state)\nthis:\n  F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1)\n   (A \\<inter> B) =\n  F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1) A\n\ngoal (1 subgoal):\n 1. F g (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A", "then"], ["proof (chain)\npicking this:\n  F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1)\n   (A \\<inter> B) =\n  F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1) A", "show ?thesis"], ["proof (prove)\nusing this:\n  F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1)\n   (A \\<inter> B) =\n  F (\\<lambda>x. if x \\<in> A \\<inter> B then g x else \\<^bold>1) A\n\ngoal (1 subgoal):\n 1. F g (A \\<inter> B) =\n    F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A", "by simp"], ["proof (state)\nthis:\n  F g (A \\<inter> B) =\n  F (\\<lambda>x. if x \\<in> B then g x else \\<^bold>1) A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inter_filter:\n  \"finite A \\<Longrightarrow> F g {x \\<in> A. P x} = F (\\<lambda>x. if P x then g x else \\<^bold>1) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    F g {x \\<in> A. P x} = F (\\<lambda>x. if P x then g x else \\<^bold>1) A", "by (simp add: inter_restrict [symmetric, of A \"{x. P x}\" g, simplified mem_Collect_eq] Int_def)"], ["", "lemma Union_comp:\n  assumes \"\\<forall>A \\<in> B. finite A\"\n    and \"\\<And>A1 A2 x. A1 \\<in> B \\<Longrightarrow> A2 \\<in> B \\<Longrightarrow> A1 \\<noteq> A2 \\<Longrightarrow> x \\<in> A1 \\<Longrightarrow> x \\<in> A2 \\<Longrightarrow> g x = \\<^bold>1\"\n  shows \"F g (\\<Union>B) = (F \\<circ> F) g B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (\\<Union> B) = (F \\<circ> F) g B", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>B. finite A\n  \\<lbrakk>?A1.1 \\<in> B; ?A2.1 \\<in> B; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n\ngoal (1 subgoal):\n 1. F g (\\<Union> B) = (F \\<circ> F) g B", "proof (induct B rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; Ball A finite;\n        \\<And>A1 A2 x.\n           \\<lbrakk>A1 \\<in> A; A2 \\<in> A; A1 \\<noteq> A2; x \\<in> A1;\n            x \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> A) = (F \\<circ> F) g A\n 2. \\<lbrakk>Ball {} finite;\n     \\<And>A1 A2 x.\n        \\<lbrakk>A1 \\<in> {}; A2 \\<in> {}; A1 \\<noteq> A2; x \\<in> A1;\n         x \\<in> A2\\<rbrakk>\n        \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n    \\<Longrightarrow> F g (\\<Union> {}) = (F \\<circ> F) g {}\n 3. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "case (infinite A)"], ["proof (state)\nthis:\n  infinite A\n  \\<forall>a\\<in>A. finite a\n  \\<lbrakk>?A1.1 \\<in> A; ?A2.1 \\<in> A; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; Ball A finite;\n        \\<And>A1 A2 x.\n           \\<lbrakk>A1 \\<in> A; A2 \\<in> A; A1 \\<noteq> A2; x \\<in> A1;\n            x \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> A) = (F \\<circ> F) g A\n 2. \\<lbrakk>Ball {} finite;\n     \\<And>A1 A2 x.\n        \\<lbrakk>A1 \\<in> {}; A2 \\<in> {}; A1 \\<noteq> A2; x \\<in> A1;\n         x \\<in> A2\\<rbrakk>\n        \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n    \\<Longrightarrow> F g (\\<Union> {}) = (F \\<circ> F) g {}\n 3. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "then"], ["proof (chain)\npicking this:\n  infinite A\n  \\<forall>a\\<in>A. finite a\n  \\<lbrakk>?A1.1 \\<in> A; ?A2.1 \\<in> A; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1", "have \"\\<not> finite (\\<Union>A)\""], ["proof (prove)\nusing this:\n  infinite A\n  \\<forall>a\\<in>A. finite a\n  \\<lbrakk>?A1.1 \\<in> A; ?A2.1 \\<in> A; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n\ngoal (1 subgoal):\n 1. infinite (\\<Union> A)", "by (blast dest: finite_UnionD)"], ["proof (state)\nthis:\n  infinite (\\<Union> A)\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; Ball A finite;\n        \\<And>A1 A2 x.\n           \\<lbrakk>A1 \\<in> A; A2 \\<in> A; A1 \\<noteq> A2; x \\<in> A1;\n            x \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> A) = (F \\<circ> F) g A\n 2. \\<lbrakk>Ball {} finite;\n     \\<And>A1 A2 x.\n        \\<lbrakk>A1 \\<in> {}; A2 \\<in> {}; A1 \\<noteq> A2; x \\<in> A1;\n         x \\<in> A2\\<rbrakk>\n        \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n    \\<Longrightarrow> F g (\\<Union> {}) = (F \\<circ> F) g {}\n 3. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "with infinite"], ["proof (chain)\npicking this:\n  infinite A\n  \\<forall>a\\<in>A. finite a\n  \\<lbrakk>?A1.1 \\<in> A; ?A2.1 \\<in> A; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n  infinite (\\<Union> A)", "show ?case"], ["proof (prove)\nusing this:\n  infinite A\n  \\<forall>a\\<in>A. finite a\n  \\<lbrakk>?A1.1 \\<in> A; ?A2.1 \\<in> A; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n  infinite (\\<Union> A)\n\ngoal (1 subgoal):\n 1. F g (\\<Union> A) = (F \\<circ> F) g A", "by simp"], ["proof (state)\nthis:\n  F g (\\<Union> A) = (F \\<circ> F) g A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Ball {} finite;\n     \\<And>A1 A2 x.\n        \\<lbrakk>A1 \\<in> {}; A2 \\<in> {}; A1 \\<noteq> A2; x \\<in> A1;\n         x \\<in> A2\\<rbrakk>\n        \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n    \\<Longrightarrow> F g (\\<Union> {}) = (F \\<circ> F) g {}\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ball {} finite;\n     \\<And>A1 A2 x.\n        \\<lbrakk>A1 \\<in> {}; A2 \\<in> {}; A1 \\<noteq> A2; x \\<in> A1;\n         x \\<in> A2\\<rbrakk>\n        \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n    \\<Longrightarrow> F g (\\<Union> {}) = (F \\<circ> F) g {}\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "case empty"], ["proof (state)\nthis:\n  \\<forall>a\\<in>{}. finite a\n  \\<lbrakk>?A1.1 \\<in> {}; ?A2.1 \\<in> {}; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Ball {} finite;\n     \\<And>A1 A2 x.\n        \\<lbrakk>A1 \\<in> {}; A2 \\<in> {}; A1 \\<noteq> A2; x \\<in> A1;\n         x \\<in> A2\\<rbrakk>\n        \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n    \\<Longrightarrow> F g (\\<Union> {}) = (F \\<circ> F) g {}\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "then"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>{}. finite a\n  \\<lbrakk>?A1.1 \\<in> {}; ?A2.1 \\<in> {}; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>{}. finite a\n  \\<lbrakk>?A1.1 \\<in> {}; ?A2.1 \\<in> {}; ?A1.1 \\<noteq> ?A2.1;\n   ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n\ngoal (1 subgoal):\n 1. F g (\\<Union> {}) = (F \\<circ> F) g {}", "by simp"], ["proof (state)\nthis:\n  F g (\\<Union> {}) = (F \\<circ> F) g {}\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "case (insert A B)"], ["proof (state)\nthis:\n  finite B\n  A \\<notin> B\n  \\<lbrakk>\\<forall>a\\<in>B. finite a;\n   \\<And>A1 A2 x.\n      \\<lbrakk>A1 \\<in> B; A2 \\<in> B; A1 \\<noteq> A2; x \\<in> A1;\n       x \\<in> A2\\<rbrakk>\n      \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n  \\<Longrightarrow> F g (\\<Union> B) = (F \\<circ> F) g B\n  \\<forall>a\\<in>insert A B. finite a\n  \\<lbrakk>?A1.1 \\<in> insert A B; ?A2.1 \\<in> insert A B;\n   ?A1.1 \\<noteq> ?A2.1; ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "then"], ["proof (chain)\npicking this:\n  finite B\n  A \\<notin> B\n  \\<lbrakk>\\<forall>a\\<in>B. finite a;\n   \\<And>A1 A2 x.\n      \\<lbrakk>A1 \\<in> B; A2 \\<in> B; A1 \\<noteq> A2; x \\<in> A1;\n       x \\<in> A2\\<rbrakk>\n      \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n  \\<Longrightarrow> F g (\\<Union> B) = (F \\<circ> F) g B\n  \\<forall>a\\<in>insert A B. finite a\n  \\<lbrakk>?A1.1 \\<in> insert A B; ?A2.1 \\<in> insert A B;\n   ?A1.1 \\<noteq> ?A2.1; ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1", "have \"finite A\" \"finite B\" \"finite (\\<Union>B)\" \"A \\<notin> B\"\n    and \"\\<forall>x\\<in>A \\<inter> \\<Union>B. g x = \\<^bold>1\"\n    and H: \"F g (\\<Union>B) = (F \\<circ> F) g B\""], ["proof (prove)\nusing this:\n  finite B\n  A \\<notin> B\n  \\<lbrakk>\\<forall>a\\<in>B. finite a;\n   \\<And>A1 A2 x.\n      \\<lbrakk>A1 \\<in> B; A2 \\<in> B; A1 \\<noteq> A2; x \\<in> A1;\n       x \\<in> A2\\<rbrakk>\n      \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n  \\<Longrightarrow> F g (\\<Union> B) = (F \\<circ> F) g B\n  \\<forall>a\\<in>insert A B. finite a\n  \\<lbrakk>?A1.1 \\<in> insert A B; ?A2.1 \\<in> insert A B;\n   ?A1.1 \\<noteq> ?A2.1; ?x1 \\<in> ?A1.1; ?x1 \\<in> ?A2.1\\<rbrakk>\n  \\<Longrightarrow> g ?x1 = \\<^bold>1\n\ngoal (1 subgoal):\n 1. ((finite A &&& finite B) &&& finite (\\<Union> B) &&& A \\<notin> B) &&&\n    \\<forall>x\\<in>A \\<inter> \\<Union> B. g x = \\<^bold>1 &&&\n    F g (\\<Union> B) = (F \\<circ> F) g B", "by auto"], ["proof (state)\nthis:\n  finite A\n  finite B\n  finite (\\<Union> B)\n  A \\<notin> B\n  \\<forall>x\\<in>A \\<inter> \\<Union> B. g x = \\<^bold>1\n  F g (\\<Union> B) = (F \\<circ> F) g B\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "then"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  finite (\\<Union> B)\n  A \\<notin> B\n  \\<forall>x\\<in>A \\<inter> \\<Union> B. g x = \\<^bold>1\n  F g (\\<Union> B) = (F \\<circ> F) g B", "have \"F g (A \\<union> \\<Union>B) = F g A \\<^bold>* F g (\\<Union>B)\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  finite (\\<Union> B)\n  A \\<notin> B\n  \\<forall>x\\<in>A \\<inter> \\<Union> B. g x = \\<^bold>1\n  F g (\\<Union> B) = (F \\<circ> F) g B\n\ngoal (1 subgoal):\n 1. F g (A \\<union> \\<Union> B) = F g A \\<^bold>* F g (\\<Union> B)", "by (simp add: union_inter_neutral)"], ["proof (state)\nthis:\n  F g (A \\<union> \\<Union> B) = F g A \\<^bold>* F g (\\<Union> B)\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>Ball Fa finite;\n         \\<And>A1 A2 x.\n            \\<lbrakk>A1 \\<in> Fa; A2 \\<in> Fa; A1 \\<noteq> A2; x \\<in> A1;\n             x \\<in> A2\\<rbrakk>\n            \\<Longrightarrow> g x = \\<^bold>1\\<rbrakk>\n        \\<Longrightarrow> F g (\\<Union> Fa) = (F \\<circ> F) g Fa;\n        Ball (insert x Fa) finite;\n        \\<And>A1 A2 xa.\n           \\<lbrakk>A1 \\<in> insert x Fa; A2 \\<in> insert x Fa;\n            A1 \\<noteq> A2; xa \\<in> A1; xa \\<in> A2\\<rbrakk>\n           \\<Longrightarrow> g xa = \\<^bold>1\\<rbrakk>\n       \\<Longrightarrow> F g (\\<Union> (insert x Fa)) =\n                         (F \\<circ> F) g (insert x Fa)", "with \\<open>finite B\\<close> \\<open>A \\<notin> B\\<close>"], ["proof (chain)\npicking this:\n  finite B\n  A \\<notin> B\n  F g (A \\<union> \\<Union> B) = F g A \\<^bold>* F g (\\<Union> B)", "show ?case"], ["proof (prove)\nusing this:\n  finite B\n  A \\<notin> B\n  F g (A \\<union> \\<Union> B) = F g A \\<^bold>* F g (\\<Union> B)\n\ngoal (1 subgoal):\n 1. F g (\\<Union> (insert A B)) = (F \\<circ> F) g (insert A B)", "by (simp add: H)"], ["proof (state)\nthis:\n  F g (\\<Union> (insert A B)) = (F \\<circ> F) g (insert A B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma swap: \"F (\\<lambda>i. F (g i) B) A = F (\\<lambda>j. F (\\<lambda>i. g i j) A) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>i. F (g i) B) A = F (\\<lambda>j. F (\\<lambda>i. g i j) A) B", "unfolding cartesian_product"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>(i, y). g i y) (A \\<times> B) =\n    F (\\<lambda>(j, i). g i j) (B \\<times> A)", "by (rule reindex_bij_witness [where i = \"\\<lambda>(i, j). (j, i)\" and j = \"\\<lambda>(i, j). (j, i)\"]) auto"], ["", "lemma swap_restrict:\n  \"finite A \\<Longrightarrow> finite B \\<Longrightarrow>\n    F (\\<lambda>x. F (g x) {y. y \\<in> B \\<and> R x y}) A = F (\\<lambda>y. F (\\<lambda>x. g x y) {x. x \\<in> A \\<and> R x y}) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite B\\<rbrakk>\n    \\<Longrightarrow> F (\\<lambda>x. F (g x) {y \\<in> B. R x y}) A =\n                      F (\\<lambda>y.\n                            F (\\<lambda>x. g x y) {x \\<in> A. R x y})\n                       B", "by (simp add: inter_filter) (rule swap)"], ["", "lemma Plus:\n  fixes A :: \"'b set\" and B :: \"'c set\"\n  assumes fin: \"finite A\" \"finite B\"\n  shows \"F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "have \"A <+> B = Inl ` A \\<union> Inr ` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A <+> B = Inl ` A \\<union> Inr ` B", "by auto"], ["proof (state)\nthis:\n  A <+> B = Inl ` A \\<union> Inr ` B\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "moreover"], ["proof (state)\nthis:\n  A <+> B = Inl ` A \\<union> Inr ` B\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "from fin"], ["proof (chain)\npicking this:\n  finite A\n  finite B", "have \"finite (Inl ` A)\" \"finite (Inr ` B)\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. finite (Inl ` A) &&& finite (Inr ` B)", "by auto"], ["proof (state)\nthis:\n  finite (Inl ` A)\n  finite (Inr ` B)\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "moreover"], ["proof (state)\nthis:\n  finite (Inl ` A)\n  finite (Inr ` B)\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "have \"Inl ` A \\<inter> Inr ` B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inl ` A \\<inter> Inr ` B = {}", "by auto"], ["proof (state)\nthis:\n  Inl ` A \\<inter> Inr ` B = {}\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "moreover"], ["proof (state)\nthis:\n  Inl ` A \\<inter> Inr ` B = {}\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "have \"inj_on Inl A\" \"inj_on Inr B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on Inl A &&& inj_on Inr B", "by (auto intro: inj_onI)"], ["proof (state)\nthis:\n  inj_on Inl A\n  inj_on Inr B\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "ultimately"], ["proof (chain)\npicking this:\n  A <+> B = Inl ` A \\<union> Inr ` B\n  finite (Inl ` A)\n  finite (Inr ` B)\n  Inl ` A \\<inter> Inr ` B = {}\n  inj_on Inl A\n  inj_on Inr B", "show ?thesis"], ["proof (prove)\nusing this:\n  A <+> B = Inl ` A \\<union> Inr ` B\n  finite (Inl ` A)\n  finite (Inr ` B)\n  Inl ` A \\<inter> Inr ` B = {}\n  inj_on Inl A\n  inj_on Inr B\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "using fin"], ["proof (prove)\nusing this:\n  A <+> B = Inl ` A \\<union> Inr ` B\n  finite (Inl ` A)\n  finite (Inr ` B)\n  Inl ` A \\<inter> Inr ` B = {}\n  inj_on Inl A\n  inj_on Inr B\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B", "by (simp add: union_disjoint reindex)"], ["proof (state)\nthis:\n  F g (A <+> B) = F (g \\<circ> Inl) A \\<^bold>* F (g \\<circ> Inr) B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma same_carrier:\n  assumes \"finite C\"\n  assumes subset: \"A \\<subseteq> C\" \"B \\<subseteq> C\"\n  assumes trivial: \"\\<And>a. a \\<in> C - A \\<Longrightarrow> g a = \\<^bold>1\" \"\\<And>b. b \\<in> C - B \\<Longrightarrow> h b = \\<^bold>1\"\n  shows \"F g A = F h B \\<longleftrightarrow> F g C = F h C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "have \"finite A\" and \"finite B\" and \"finite (C - A)\" and \"finite (C - B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (finite A &&& finite B) &&& finite (C - A) &&& finite (C - B)", "using \\<open>finite C\\<close> subset"], ["proof (prove)\nusing this:\n  finite C\n  A \\<subseteq> C\n  B \\<subseteq> C\n\ngoal (1 subgoal):\n 1. (finite A &&& finite B) &&& finite (C - A) &&& finite (C - B)", "by (auto elim: finite_subset)"], ["proof (state)\nthis:\n  finite A\n  finite B\n  finite (C - A)\n  finite (C - B)\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "from subset"], ["proof (chain)\npicking this:\n  A \\<subseteq> C\n  B \\<subseteq> C", "have [simp]: \"A - (C - A) = A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> C\n  B \\<subseteq> C\n\ngoal (1 subgoal):\n 1. A - (C - A) = A", "by auto"], ["proof (state)\nthis:\n  A - (C - A) = A\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "from subset"], ["proof (chain)\npicking this:\n  A \\<subseteq> C\n  B \\<subseteq> C", "have [simp]: \"B - (C - B) = B\""], ["proof (prove)\nusing this:\n  A \\<subseteq> C\n  B \\<subseteq> C\n\ngoal (1 subgoal):\n 1. B - (C - B) = B", "by auto"], ["proof (state)\nthis:\n  B - (C - B) = B\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "from subset"], ["proof (chain)\npicking this:\n  A \\<subseteq> C\n  B \\<subseteq> C", "have \"C = A \\<union> (C - A)\""], ["proof (prove)\nusing this:\n  A \\<subseteq> C\n  B \\<subseteq> C\n\ngoal (1 subgoal):\n 1. C = A \\<union> (C - A)", "by auto"], ["proof (state)\nthis:\n  C = A \\<union> (C - A)\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "then"], ["proof (chain)\npicking this:\n  C = A \\<union> (C - A)", "have \"F g C = F g (A \\<union> (C - A))\""], ["proof (prove)\nusing this:\n  C = A \\<union> (C - A)\n\ngoal (1 subgoal):\n 1. F g C = F g (A \\<union> (C - A))", "by simp"], ["proof (state)\nthis:\n  F g C = F g (A \\<union> (C - A))\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "also"], ["proof (state)\nthis:\n  F g C = F g (A \\<union> (C - A))\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "have \"\\<dots> = F g (A - (C - A)) \\<^bold>* F g (C - A - A) \\<^bold>* F g (A \\<inter> (C - A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g (A \\<union> (C - A)) =\n    F g (A - (C - A)) \\<^bold>* F g (C - A - A) \\<^bold>*\n    F g (A \\<inter> (C - A))", "using \\<open>finite A\\<close> \\<open>finite (C - A)\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite (C - A)\n\ngoal (1 subgoal):\n 1. F g (A \\<union> (C - A)) =\n    F g (A - (C - A)) \\<^bold>* F g (C - A - A) \\<^bold>*\n    F g (A \\<inter> (C - A))", "by (simp only: union_diff2)"], ["proof (state)\nthis:\n  F g (A \\<union> (C - A)) =\n  F g (A - (C - A)) \\<^bold>* F g (C - A - A) \\<^bold>*\n  F g (A \\<inter> (C - A))\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "finally"], ["proof (chain)\npicking this:\n  F g C =\n  F g (A - (C - A)) \\<^bold>* F g (C - A - A) \\<^bold>*\n  F g (A \\<inter> (C - A))", "have *: \"F g C = F g A\""], ["proof (prove)\nusing this:\n  F g C =\n  F g (A - (C - A)) \\<^bold>* F g (C - A - A) \\<^bold>*\n  F g (A \\<inter> (C - A))\n\ngoal (1 subgoal):\n 1. F g C = F g A", "using trivial"], ["proof (prove)\nusing this:\n  F g C =\n  F g (A - (C - A)) \\<^bold>* F g (C - A - A) \\<^bold>*\n  F g (A \\<inter> (C - A))\n  ?a1 \\<in> C - A \\<Longrightarrow> g ?a1 = \\<^bold>1\n  ?b1 \\<in> C - B \\<Longrightarrow> h ?b1 = \\<^bold>1\n\ngoal (1 subgoal):\n 1. F g C = F g A", "by simp"], ["proof (state)\nthis:\n  F g C = F g A\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "from subset"], ["proof (chain)\npicking this:\n  A \\<subseteq> C\n  B \\<subseteq> C", "have \"C = B \\<union> (C - B)\""], ["proof (prove)\nusing this:\n  A \\<subseteq> C\n  B \\<subseteq> C\n\ngoal (1 subgoal):\n 1. C = B \\<union> (C - B)", "by auto"], ["proof (state)\nthis:\n  C = B \\<union> (C - B)\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "then"], ["proof (chain)\npicking this:\n  C = B \\<union> (C - B)", "have \"F h C = F h (B \\<union> (C - B))\""], ["proof (prove)\nusing this:\n  C = B \\<union> (C - B)\n\ngoal (1 subgoal):\n 1. F h C = F h (B \\<union> (C - B))", "by simp"], ["proof (state)\nthis:\n  F h C = F h (B \\<union> (C - B))\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "also"], ["proof (state)\nthis:\n  F h C = F h (B \\<union> (C - B))\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "have \"\\<dots> = F h (B - (C - B)) \\<^bold>* F h (C - B - B) \\<^bold>* F h (B \\<inter> (C - B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F h (B \\<union> (C - B)) =\n    F h (B - (C - B)) \\<^bold>* F h (C - B - B) \\<^bold>*\n    F h (B \\<inter> (C - B))", "using \\<open>finite B\\<close> \\<open>finite (C - B)\\<close>"], ["proof (prove)\nusing this:\n  finite B\n  finite (C - B)\n\ngoal (1 subgoal):\n 1. F h (B \\<union> (C - B)) =\n    F h (B - (C - B)) \\<^bold>* F h (C - B - B) \\<^bold>*\n    F h (B \\<inter> (C - B))", "by (simp only: union_diff2)"], ["proof (state)\nthis:\n  F h (B \\<union> (C - B)) =\n  F h (B - (C - B)) \\<^bold>* F h (C - B - B) \\<^bold>*\n  F h (B \\<inter> (C - B))\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "finally"], ["proof (chain)\npicking this:\n  F h C =\n  F h (B - (C - B)) \\<^bold>* F h (C - B - B) \\<^bold>*\n  F h (B \\<inter> (C - B))", "have \"F h C = F h B\""], ["proof (prove)\nusing this:\n  F h C =\n  F h (B - (C - B)) \\<^bold>* F h (C - B - B) \\<^bold>*\n  F h (B \\<inter> (C - B))\n\ngoal (1 subgoal):\n 1. F h C = F h B", "using trivial"], ["proof (prove)\nusing this:\n  F h C =\n  F h (B - (C - B)) \\<^bold>* F h (C - B - B) \\<^bold>*\n  F h (B \\<inter> (C - B))\n  ?a1 \\<in> C - A \\<Longrightarrow> g ?a1 = \\<^bold>1\n  ?b1 \\<in> C - B \\<Longrightarrow> h ?b1 = \\<^bold>1\n\ngoal (1 subgoal):\n 1. F h C = F h B", "by simp"], ["proof (state)\nthis:\n  F h C = F h B\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "with *"], ["proof (chain)\npicking this:\n  F g C = F g A\n  F h C = F h B", "show ?thesis"], ["proof (prove)\nusing this:\n  F g C = F g A\n  F h C = F h B\n\ngoal (1 subgoal):\n 1. (F g A = F h B) = (F g C = F h C)", "by simp"], ["proof (state)\nthis:\n  (F g A = F h B) = (F g C = F h C)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma same_carrierI:\n  assumes \"finite C\"\n  assumes subset: \"A \\<subseteq> C\" \"B \\<subseteq> C\"\n  assumes trivial: \"\\<And>a. a \\<in> C - A \\<Longrightarrow> g a = \\<^bold>1\" \"\\<And>b. b \\<in> C - B \\<Longrightarrow> h b = \\<^bold>1\"\n  assumes \"F g C = F h C\"\n  shows \"F g A = F h B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F g A = F h B", "using assms same_carrier [of C A B]"], ["proof (prove)\nusing this:\n  finite C\n  A \\<subseteq> C\n  B \\<subseteq> C\n  ?a1 \\<in> C - A \\<Longrightarrow> g ?a1 = \\<^bold>1\n  ?b1 \\<in> C - B \\<Longrightarrow> h ?b1 = \\<^bold>1\n  F g C = F h C\n  \\<lbrakk>finite C; A \\<subseteq> C; B \\<subseteq> C;\n   \\<And>a. a \\<in> C - A \\<Longrightarrow> ?g a = \\<^bold>1;\n   \\<And>b. b \\<in> C - B \\<Longrightarrow> ?h b = \\<^bold>1\\<rbrakk>\n  \\<Longrightarrow> (F ?g A = F ?h B) = (F ?g C = F ?h C)\n\ngoal (1 subgoal):\n 1. F g A = F h B", "by simp"], ["", "end"], ["", "subsection \\<open>Generalized summation over a set\\<close>"], ["", "no_notation Sum (\"\\<Sum>\")"], ["", "class ab_semigroup_add_0 = zero + ab_semigroup_add +\n  assumes zero_neutral [simp]: \"x + y + 0 = x + y\"\n  assumes zero_idem [simp]: \"0 + 0 = 0\"\nbegin"], ["", "sublocale sum_0: abel_semigroup_set plus 0\n  defines sum_0 = sum_0.F"], ["proof (prove)\ngoal (1 subgoal):\n 1. abel_semigroup_set (+) (0::'a)", "by unfold_locales simp_all"], ["", "abbreviation Sum_0 (\"\\<Sum>\")\n  where \"\\<Sum> \\<equiv> sum_0 (\\<lambda>x. x)\""], ["", "end"], ["", "context comm_monoid_add\nbegin"], ["", "subclass ab_semigroup_add_0"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ab_semigroup_add_0 (+) (0::'a)", "by unfold_locales simp_all"], ["", "end"], ["", "text \\<open>Now: lots of fancy syntax. First, @{term \"sum_0 (\\<lambda>x. e) A\"} is written \\<open>\\<Sum>x\\<in>A. e\\<close>.\\<close>"], ["", "syntax (ASCII)\n  \"_sum\" :: \"pttrn \\<Rightarrow> 'a set \\<Rightarrow> 'b \\<Rightarrow> 'b::comm_monoid_add\"  (\"(3SUM (_/:_)./ _)\" [0, 51, 10] 10)"], ["", "syntax\n  \"_sum\" :: \"pttrn \\<Rightarrow> 'a set \\<Rightarrow> 'b \\<Rightarrow> 'b::comm_monoid_add\"  (\"(2\\<Sum>(_/\\<in>_)./ _)\" [0, 51, 10] 10)"], ["", "translations \\<comment> \\<open>Beware of argument permutation!\\<close>\n  \"\\<Sum>i\\<in>A. b\" \\<rightleftharpoons> \"CONST sum_0 (\\<lambda>i. b) A\""], ["", "text \\<open>Instead of @{term\"\\<Sum>x\\<in>{x. P}. e\"} we introduce the shorter \\<open>\\<Sum>x|P. e\\<close>.\\<close>"], ["", "syntax (ASCII)\n  \"_qsum\" :: \"pttrn \\<Rightarrow> bool \\<Rightarrow> 'a \\<Rightarrow> 'a\"  (\"(3SUM _ |/ _./ _)\" [0, 0, 10] 10)"], ["", "syntax\n  \"_qsum\" :: \"pttrn \\<Rightarrow> bool \\<Rightarrow> 'a \\<Rightarrow> 'a\"  (\"(2\\<Sum>_ | (_)./ _)\" [0, 0, 10] 10)"], ["", "translations\n  \"\\<Sum>x|P. t\" => \"CONST sum_0 (\\<lambda>x. t) {x. P}\""], ["", "print_translation \\<open>\nlet\n  fun sum_tr' [Abs (x, Tx, t), Const (@{const_syntax Collect}, _) $ Abs (y, Ty, P)] =\n        if x <> y then raise Match\n        else\n          let\n            val x' = Syntax_Trans.mark_bound_body (x, Tx);\n            val t' = subst_bound (x', t);\n            val P' = subst_bound (x', P);\n          in\n            Syntax.const @{syntax_const \"_qsum\"} $ Syntax_Trans.mark_bound_abs (x, Tx) $ P' $ t'\n          end\n    | sum_tr' _ = raise Match;\nin [(@{const_syntax sum_0}, K sum_tr')] end\n\\<close>"], ["", "lemma (in ab_semigroup_add_0) sum_image_gen_0:\n  assumes fin: \"finite S\"\n  shows \"sum_0 g S = sum_0 (\\<lambda>y. sum_0 g {x. x \\<in> S \\<and> f x = y}) (f ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "have \"{y. y\\<in> f`S \\<and> f x = y} = {f x}\" if \"x \\<in> S\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y \\<in> f ` S. f x = y} = {f x}", "using that"], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. {y \\<in> f ` S. f x = y} = {f x}", "by auto"], ["proof (state)\nthis:\n  ?x1 \\<in> S \\<Longrightarrow> {y \\<in> f ` S. f ?x1 = y} = {f ?x1}\n\ngoal (1 subgoal):\n 1. sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "then"], ["proof (chain)\npicking this:\n  ?x1 \\<in> S \\<Longrightarrow> {y \\<in> f ` S. f ?x1 = y} = {f ?x1}", "have \"sum_0 g S = sum_0 (\\<lambda>x. sum_0 (\\<lambda>y. g x) {y. y\\<in> f`S \\<and> f x = y}) S\""], ["proof (prove)\nusing this:\n  ?x1 \\<in> S \\<Longrightarrow> {y \\<in> f ` S. f ?x1 = y} = {f ?x1}\n\ngoal (1 subgoal):\n 1. sum_0 g S = (\\<Sum>x\\<in>S. \\<Sum>y | y \\<in> f ` S \\<and> f x = y. g x)", "by simp"], ["proof (state)\nthis:\n  sum_0 g S = (\\<Sum>x\\<in>S. \\<Sum>y | y \\<in> f ` S \\<and> f x = y. g x)\n\ngoal (1 subgoal):\n 1. sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "also"], ["proof (state)\nthis:\n  sum_0 g S = (\\<Sum>x\\<in>S. \\<Sum>y | y \\<in> f ` S \\<and> f x = y. g x)\n\ngoal (1 subgoal):\n 1. sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "have \"\\<dots> = sum_0 (\\<lambda>y. sum_0 g {x. x \\<in> S \\<and> f x = y}) (f ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>S. \\<Sum>y | y \\<in> f ` S \\<and> f x = y. g x) =\n    (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "by (rule sum_0.swap_restrict [OF fin finite_imageI [OF fin]])"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>S. \\<Sum>y | y \\<in> f ` S \\<and> f x = y. g x) =\n  (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})\n\ngoal (1 subgoal):\n 1. sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "finally"], ["proof (chain)\npicking this:\n  sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})\n\ngoal (1 subgoal):\n 1. sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})", "."], ["proof (state)\nthis:\n  sum_0 g S = (\\<Sum>y\\<in>f ` S. sum_0 g {x \\<in> S. f x = y})\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Properties in more restricted classes of structures\\<close>"], ["", "lemma sum_Un2:\n  assumes \"finite (A \\<union> B)\"\n  shows \"sum_0 f (A \\<union> B) = sum_0 f (A - B) + sum_0 f (B - A) + sum_0 f (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_0 f (A \\<union> B) =\n    sum_0 f (A - B) + sum_0 f (B - A) + sum_0 f (A \\<inter> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_0 f (A \\<union> B) =\n    sum_0 f (A - B) + sum_0 f (B - A) + sum_0 f (A \\<inter> B)", "have \"A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B", "by auto"], ["proof (state)\nthis:\n  A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B\n\ngoal (1 subgoal):\n 1. sum_0 f (A \\<union> B) =\n    sum_0 f (A - B) + sum_0 f (B - A) + sum_0 f (A \\<inter> B)", "with assms"], ["proof (chain)\npicking this:\n  finite (A \\<union> B)\n  A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (A \\<union> B)\n  A \\<union> B = A - B \\<union> (B - A) \\<union> A \\<inter> B\n\ngoal (1 subgoal):\n 1. sum_0 f (A \\<union> B) =\n    sum_0 f (A - B) + sum_0 f (B - A) + sum_0 f (A \\<inter> B)", "by simp (subst sum_0.union_disjoint, auto)+"], ["proof (state)\nthis:\n  sum_0 f (A \\<union> B) =\n  sum_0 f (A - B) + sum_0 f (B - A) + sum_0 f (A \\<inter> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "class ordered_ab_semigroup_add_0 = ab_semigroup_add_0 + ordered_ab_semigroup_add\nbegin"], ["", "lemma add_nonneg_nonneg [simp]: \"0 \\<le> a \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> 0 \\<le> a + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> a + b", "using add_mono[of 0 a 0 b]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n  \\<Longrightarrow> (0::'a) + (0::'a) \\<le> a + b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> a + b", "by simp"], ["", "lemma add_nonpos_nonpos: \"a \\<le> 0 \\<Longrightarrow> b \\<le> 0 \\<Longrightarrow> a + b \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> (0::'a); b \\<le> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a + b \\<le> (0::'a)", "using add_mono[of a 0 b 0]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<le> (0::'a); b \\<le> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> a + b \\<le> (0::'a) + (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> (0::'a); b \\<le> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a + b \\<le> (0::'a)", "by simp"], ["", "end"], ["", "lemma (in ordered_ab_semigroup_add_0) sum_mono:\n  \"(\\<And>i. i\\<in>K \\<Longrightarrow> f i \\<le> g i) \\<Longrightarrow> (\\<Sum>i\\<in>K. f i) \\<le> (\\<Sum>i\\<in>K. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> K \\<Longrightarrow> f i \\<le> g i) \\<Longrightarrow>\n    sum_0 f K \\<le> sum_0 g K", "by (induct K rule: infinite_finite_induct) (use add_mono in auto)"], ["", "lemma (in ordered_ab_semigroup_add_0) sum_mono_00:\n  \"(\\<And>i. i\\<in>K \\<Longrightarrow> f i + 0 \\<le> g i + 0) \\<Longrightarrow> (\\<Sum>i\\<in>K. f i) \\<le> (\\<Sum>i\\<in>K. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> K \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n    sum_0 f K \\<le> sum_0 g K", "proof (induct K rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>i.\n           i \\<in> A \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f A \\<le> sum_0 g A\n 2. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> sum_0 g {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> sum_0 g F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "case (infinite A)"], ["proof (state)\nthis:\n  infinite A\n  ?i1 \\<in> A \\<Longrightarrow> f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>i.\n           i \\<in> A \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f A \\<le> sum_0 g A\n 2. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> sum_0 g {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> sum_0 g F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "then"], ["proof (chain)\npicking this:\n  infinite A\n  ?i1 \\<in> A \\<Longrightarrow> f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  infinite A\n  ?i1 \\<in> A \\<Longrightarrow> f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 g A", "by simp"], ["proof (state)\nthis:\n  sum_0 f A \\<le> sum_0 g A\n\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> sum_0 g {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> sum_0 g F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> sum_0 g {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> sum_0 g F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "case empty"], ["proof (state)\nthis:\n  ?i1 \\<in> {} \\<Longrightarrow> f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> sum_0 g {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> sum_0 g F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "then"], ["proof (chain)\npicking this:\n  ?i1 \\<in> {} \\<Longrightarrow> f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  ?i1 \\<in> {} \\<Longrightarrow> f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n\ngoal (1 subgoal):\n 1. sum_0 f {} \\<le> sum_0 g {}", "by simp"], ["proof (state)\nthis:\n  sum_0 f {} \\<le> sum_0 g {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> sum_0 g F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> sum_0 g F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  (\\<And>i.\n      i \\<in> F \\<Longrightarrow>\n      f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> sum_0 g F\n  ?i1 \\<in> insert x F \\<Longrightarrow>\n  f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> sum_0 g F;\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "then"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  (\\<And>i.\n      i \\<in> F \\<Longrightarrow>\n      f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> sum_0 g F\n  ?i1 \\<in> insert x F \\<Longrightarrow>\n  f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  (\\<And>i.\n      i \\<in> F \\<Longrightarrow>\n      f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> sum_0 g F\n  ?i1 \\<in> insert x F \\<Longrightarrow>\n  f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n\ngoal (1 subgoal):\n 1. sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F; x \\<notin> F;\n     (\\<And>i.\n         i \\<in> F \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F \\<le> sum_0 g F;\n     \\<And>i.\n        i \\<in> insert x F \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "fix x :: 'b and F :: \"'b set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F__; x__ \\<notin> F__;\n     (\\<And>i.\n         i \\<in> F__ \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F__ \\<le> sum_0 g F__;\n     \\<And>i.\n        i \\<in> insert x__ F__ \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x__ F__)\n                      \\<le> sum_0 g (insert x__ F__)", "assume a1: \"finite F\""], ["proof (state)\nthis:\n  finite F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F__; x__ \\<notin> F__;\n     (\\<And>i.\n         i \\<in> F__ \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F__ \\<le> sum_0 g F__;\n     \\<And>i.\n        i \\<in> insert x__ F__ \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x__ F__)\n                      \\<le> sum_0 g (insert x__ F__)", "assume a2: \"x \\<notin> F\""], ["proof (state)\nthis:\n  x \\<notin> F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F__; x__ \\<notin> F__;\n     (\\<And>i.\n         i \\<in> F__ \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F__ \\<le> sum_0 g F__;\n     \\<And>i.\n        i \\<in> insert x__ F__ \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x__ F__)\n                      \\<le> sum_0 g (insert x__ F__)", "assume a3: \"(\\<And>i. i \\<in> F \\<Longrightarrow> f i + 0 \\<le> g i + 0) \\<Longrightarrow> sum_0 f F \\<le> sum_0 g F\""], ["proof (state)\nthis:\n  (\\<And>i.\n      i \\<in> F \\<Longrightarrow>\n      f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> sum_0 g F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F__; x__ \\<notin> F__;\n     (\\<And>i.\n         i \\<in> F__ \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F__ \\<le> sum_0 g F__;\n     \\<And>i.\n        i \\<in> insert x__ F__ \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x__ F__)\n                      \\<le> sum_0 g (insert x__ F__)", "assume a4: \"\\<And>i. i \\<in> insert x F \\<Longrightarrow> f i + 0 \\<le> g i + 0\""], ["proof (state)\nthis:\n  ?i1 \\<in> insert x F \\<Longrightarrow>\n  f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F__; x__ \\<notin> F__;\n     (\\<And>i.\n         i \\<in> F__ \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F__ \\<le> sum_0 g F__;\n     \\<And>i.\n        i \\<in> insert x__ F__ \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x__ F__)\n                      \\<le> sum_0 g (insert x__ F__)", "obtain bb :: 'b where\n      f5: \"bb \\<in> F \\<and> \\<not> f bb + 0 \\<le> g bb + 0 \\<or> sum_0 f F \\<le> sum_0 g F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>bb.\n        bb \\<in> F \\<and> \\<not> f bb + (0::'a) \\<le> g bb + (0::'a) \\<or>\n        sum_0 f F \\<le> sum_0 g F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using a3"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in> F \\<Longrightarrow>\n      f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> sum_0 g F\n\ngoal (1 subgoal):\n 1. (\\<And>bb.\n        bb \\<in> F \\<and> \\<not> f bb + (0::'a) \\<le> g bb + (0::'a) \\<or>\n        sum_0 f F \\<le> sum_0 g F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bb \\<in> F \\<and> \\<not> f bb + (0::'a) \\<le> g bb + (0::'a) \\<or>\n  sum_0 f F \\<le> sum_0 g F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F__; x__ \\<notin> F__;\n     (\\<And>i.\n         i \\<in> F__ \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F__ \\<le> sum_0 g F__;\n     \\<And>i.\n        i \\<in> insert x__ F__ \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x__ F__)\n                      \\<le> sum_0 g (insert x__ F__)", "have \"\\<forall>b. x \\<noteq> b \\<or> f b + 0 \\<le> g b + 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>b. x \\<noteq> b \\<or> f b + (0::'a) \\<le> g b + (0::'a)", "using a4"], ["proof (prove)\nusing this:\n  ?i1 \\<in> insert x F \\<Longrightarrow>\n  f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>b. x \\<noteq> b \\<or> f b + (0::'a) \\<le> g b + (0::'a)", "by simp"], ["proof (state)\nthis:\n  \\<forall>b. x \\<noteq> b \\<or> f b + (0::'a) \\<le> g b + (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F__; x__ \\<notin> F__;\n     (\\<And>i.\n         i \\<in> F__ \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F__ \\<le> sum_0 g F__;\n     \\<And>i.\n        i \\<in> insert x__ F__ \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x__ F__)\n                      \\<le> sum_0 g (insert x__ F__)", "then"], ["proof (chain)\npicking this:\n  \\<forall>b. x \\<noteq> b \\<or> f b + (0::'a) \\<le> g b + (0::'a)", "have \"\\<forall>a aa. f x + 0 + a \\<le> g x + 0 + aa \\<or> \\<not> a \\<le> aa\""], ["proof (prove)\nusing this:\n  \\<forall>b. x \\<noteq> b \\<or> f b + (0::'a) \\<le> g b + (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>a aa.\n       f x + (0::'a) + a \\<le> g x + (0::'a) + aa \\<or> \\<not> a \\<le> aa", "using add_mono"], ["proof (prove)\nusing this:\n  \\<forall>b. x \\<noteq> b \\<or> f b + (0::'a) \\<le> g b + (0::'a)\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. \\<forall>a aa.\n       f x + (0::'a) + a \\<le> g x + (0::'a) + aa \\<or> \\<not> a \\<le> aa", "by blast"], ["proof (state)\nthis:\n  \\<forall>a aa.\n     f x + (0::'a) + a \\<le> g x + (0::'a) + aa \\<or> \\<not> a \\<le> aa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F__; x__ \\<notin> F__;\n     (\\<And>i.\n         i \\<in> F__ \\<Longrightarrow>\n         f i + (0::'a) \\<le> g i + (0::'a)) \\<Longrightarrow>\n     sum_0 f F__ \\<le> sum_0 g F__;\n     \\<And>i.\n        i \\<in> insert x__ F__ \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i + (0::'a)\\<rbrakk>\n    \\<Longrightarrow> sum_0 f (insert x__ F__)\n                      \\<le> sum_0 g (insert x__ F__)", "then"], ["proof (chain)\npicking this:\n  \\<forall>a aa.\n     f x + (0::'a) + a \\<le> g x + (0::'a) + aa \\<or> \\<not> a \\<le> aa", "show \"sum_0 f (insert x F) \\<le> sum_0 g (insert x F)\""], ["proof (prove)\nusing this:\n  \\<forall>a aa.\n     f x + (0::'a) + a \\<le> g x + (0::'a) + aa \\<or> \\<not> a \\<le> aa\n\ngoal (1 subgoal):\n 1. sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "using f5 a4 a2 a1"], ["proof (prove)\nusing this:\n  \\<forall>a aa.\n     f x + (0::'a) + a \\<le> g x + (0::'a) + aa \\<or> \\<not> a \\<le> aa\n  bb \\<in> F \\<and> \\<not> f bb + (0::'a) \\<le> g bb + (0::'a) \\<or>\n  sum_0 f F \\<le> sum_0 g F\n  ?i1 \\<in> insert x F \\<Longrightarrow>\n  f ?i1 + (0::'a) \\<le> g ?i1 + (0::'a)\n  x \\<notin> F\n  finite F\n\ngoal (1 subgoal):\n 1. sum_0 f (insert x F) \\<le> sum_0 g (insert x F)", "by (metis (no_types) add_assoc insert_iff sum_0.insert sum_0.one_F)"], ["proof (state)\nthis:\n  sum_0 f (insert x F) \\<le> sum_0 g (insert x F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum_0 f (insert x F) \\<le> sum_0 g (insert x F)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in ordered_ab_semigroup_add_0) sum_mono_0:\n  \"(\\<And>i. i\\<in>K \\<Longrightarrow> f i + 0 \\<le> g i) \\<Longrightarrow> (\\<Sum>i\\<in>K. f i) \\<le> (\\<Sum>i\\<in>K. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> K \\<Longrightarrow>\n        f i + (0::'a) \\<le> g i) \\<Longrightarrow>\n    sum_0 f K \\<le> sum_0 g K", "apply (rule sum_mono_00)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<And>i.\n                   i \\<in> K \\<Longrightarrow> f i + (0::'a) \\<le> g i;\n        i \\<in> K\\<rbrakk>\n       \\<Longrightarrow> f i + (0::'a) \\<le> g i + (0::'a)", "by (metis add_right_mono zero_neutral)"], ["", "context ordered_ab_semigroup_add_0\nbegin"], ["", "lemma sum_nonneg: \"(\\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> f x) \\<Longrightarrow> 0 \\<le> sum_0 f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> A \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n    (0::'a) \\<le> sum_0 f A", "proof (induct A rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x. x \\<in> A \\<Longrightarrow> (0::'a) \\<le> f x\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f A\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n    (0::'a) \\<le> sum_0 f {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "case infinite"], ["proof (state)\nthis:\n  infinite A_\n  ?x1 \\<in> A_ \\<Longrightarrow> (0::'a) \\<le> f ?x1\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x. x \\<in> A \\<Longrightarrow> (0::'a) \\<le> f x\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f A\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n    (0::'a) \\<le> sum_0 f {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "then"], ["proof (chain)\npicking this:\n  infinite A_\n  ?x1 \\<in> A_ \\<Longrightarrow> (0::'a) \\<le> f ?x1", "show ?case"], ["proof (prove)\nusing this:\n  infinite A_\n  ?x1 \\<in> A_ \\<Longrightarrow> (0::'a) \\<le> f ?x1\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum_0 f A_", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> sum_0 f A_\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n    (0::'a) \\<le> sum_0 f {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n    (0::'a) \\<le> sum_0 f {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "case empty"], ["proof (state)\nthis:\n  ?x1 \\<in> {} \\<Longrightarrow> (0::'a) \\<le> f ?x1\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n    (0::'a) \\<le> sum_0 f {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "then"], ["proof (chain)\npicking this:\n  ?x1 \\<in> {} \\<Longrightarrow> (0::'a) \\<le> f ?x1", "show ?case"], ["proof (prove)\nusing this:\n  ?x1 \\<in> {} \\<Longrightarrow> (0::'a) \\<le> f ?x1\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum_0 f {}", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> sum_0 f {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n  (0::'a) \\<le> sum_0 f F\n  ?x1 \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f ?x1\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "then"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n  (0::'a) \\<le> sum_0 f F\n  ?x1 \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f ?x1", "have \"0 + 0 \\<le> f x + sum_0 f F\""], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n  (0::'a) \\<le> sum_0 f F\n  ?x1 \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f ?x1\n\ngoal (1 subgoal):\n 1. (0::'a) + (0::'a) \\<le> f x + sum_0 f F", "by (blast intro: add_mono)"], ["proof (state)\nthis:\n  (0::'a) + (0::'a) \\<le> f x + sum_0 f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n        (0::'a) \\<le> sum_0 f F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f xa\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum_0 f (insert x F)", "with insert"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n  (0::'a) \\<le> sum_0 f F\n  ?x1 \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f ?x1\n  (0::'a) + (0::'a) \\<le> f x + sum_0 f F", "show ?case"], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> (0::'a) \\<le> f x) \\<Longrightarrow>\n  (0::'a) \\<le> sum_0 f F\n  ?x1 \\<in> insert x F \\<Longrightarrow> (0::'a) \\<le> f ?x1\n  (0::'a) + (0::'a) \\<le> f x + sum_0 f F\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum_0 f (insert x F)", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> sum_0 f (insert x F)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_nonpos: \"(\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le> 0) \\<Longrightarrow> sum_0 f A \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> A \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n    sum_0 f A \\<le> (0::'a)", "proof (induct A rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f A \\<le> (0::'a)\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> (0::'a)\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "case infinite"], ["proof (state)\nthis:\n  infinite A_\n  ?x1 \\<in> A_ \\<Longrightarrow> f ?x1 \\<le> (0::'a)\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f A \\<le> (0::'a)\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> (0::'a)\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "then"], ["proof (chain)\npicking this:\n  infinite A_\n  ?x1 \\<in> A_ \\<Longrightarrow> f ?x1 \\<le> (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  infinite A_\n  ?x1 \\<in> A_ \\<Longrightarrow> f ?x1 \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. sum_0 f A_ \\<le> (0::'a)", "by simp"], ["proof (state)\nthis:\n  sum_0 f A_ \\<le> (0::'a)\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> (0::'a)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> (0::'a)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "case empty"], ["proof (state)\nthis:\n  ?x1 \\<in> {} \\<Longrightarrow> f ?x1 \\<le> (0::'a)\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n    sum_0 f {} \\<le> (0::'a)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "then"], ["proof (chain)\npicking this:\n  ?x1 \\<in> {} \\<Longrightarrow> f ?x1 \\<le> (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  ?x1 \\<in> {} \\<Longrightarrow> f ?x1 \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. sum_0 f {} \\<le> (0::'a)", "by simp"], ["proof (state)\nthis:\n  sum_0 f {} \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> (0::'a)\n  ?x1 \\<in> insert x F \\<Longrightarrow> f ?x1 \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "then"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> (0::'a)\n  ?x1 \\<in> insert x F \\<Longrightarrow> f ?x1 \\<le> (0::'a)", "have \"f x + sum_0 f F \\<le> 0 + 0\""], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> (0::'a)\n  ?x1 \\<in> insert x F \\<Longrightarrow> f ?x1 \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. f x + sum_0 f F \\<le> (0::'a) + (0::'a)", "by (blast intro: add_mono)"], ["proof (state)\nthis:\n  f x + sum_0 f F \\<le> (0::'a) + (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n        sum_0 f F \\<le> (0::'a);\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> f xa \\<le> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> sum_0 f (insert x F) \\<le> (0::'a)", "with insert"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> (0::'a)\n  ?x1 \\<in> insert x F \\<Longrightarrow> f ?x1 \\<le> (0::'a)\n  f x + sum_0 f F \\<le> (0::'a) + (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  (\\<And>x. x \\<in> F \\<Longrightarrow> f x \\<le> (0::'a)) \\<Longrightarrow>\n  sum_0 f F \\<le> (0::'a)\n  ?x1 \\<in> insert x F \\<Longrightarrow> f ?x1 \\<le> (0::'a)\n  f x + sum_0 f F \\<le> (0::'a) + (0::'a)\n\ngoal (1 subgoal):\n 1. sum_0 f (insert x F) \\<le> (0::'a)", "by simp"], ["proof (state)\nthis:\n  sum_0 f (insert x F) \\<le> (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_mono2:\n  assumes fin: \"finite B\"\n    and sub: \"A \\<subseteq> B\"\n    and nn: \"\\<And>b. b \\<in> B-A \\<Longrightarrow> 0 \\<le> f b\"\n  shows \"sum_0 f A \\<le> sum_0 f B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f B", "have \"sum_0 f A \\<le> sum_0 f A + sum_0 f (B-A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f A + sum_0 f (B - A)", "by (metis add_left_mono sum_0.F_one nn sum_nonneg)"], ["proof (state)\nthis:\n  sum_0 f A \\<le> sum_0 f A + sum_0 f (B - A)\n\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f B", "also"], ["proof (state)\nthis:\n  sum_0 f A \\<le> sum_0 f A + sum_0 f (B - A)\n\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f B", "from fin finite_subset[OF sub fin]"], ["proof (chain)\npicking this:\n  finite B\n  finite A", "have \"\\<dots> = sum_0 f (A \\<union> (B-A))\""], ["proof (prove)\nusing this:\n  finite B\n  finite A\n\ngoal (1 subgoal):\n 1. sum_0 f A + sum_0 f (B - A) = sum_0 f (A \\<union> (B - A))", "by (simp add: sum_0.union_disjoint del: Un_Diff_cancel)"], ["proof (state)\nthis:\n  sum_0 f A + sum_0 f (B - A) = sum_0 f (A \\<union> (B - A))\n\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f B", "also"], ["proof (state)\nthis:\n  sum_0 f A + sum_0 f (B - A) = sum_0 f (A \\<union> (B - A))\n\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f B", "from sub"], ["proof (chain)\npicking this:\n  A \\<subseteq> B", "have \"A \\<union> (B-A) = B\""], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. A \\<union> (B - A) = B", "by blast"], ["proof (state)\nthis:\n  A \\<union> (B - A) = B\n\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f B", "finally"], ["proof (chain)\npicking this:\n  sum_0 f A \\<le> sum_0 f B", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_0 f A \\<le> sum_0 f B\n\ngoal (1 subgoal):\n 1. sum_0 f A \\<le> sum_0 f B", "."], ["proof (state)\nthis:\n  sum_0 f A \\<le> sum_0 f B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_le_included:\n  assumes \"finite s\" \"finite t\"\n  and \"\\<forall>y\\<in>t. 0 \\<le> g y\" \"(\\<forall>x\\<in>s. \\<exists>y\\<in>t. i y = x \\<and> f x \\<le> g y)\"\n  shows \"sum_0 f s \\<le> sum_0 g t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> sum_0 g t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> sum_0 g t", "have \"sum_0 f s \\<le> sum_0 (\\<lambda>y. sum_0 g {x. x\\<in>t \\<and> i x = y}) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> (\\<Sum>y\\<in>s. sum_0 g {x \\<in> t. i x = y})", "proof (rule sum_mono_0)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> s \\<Longrightarrow>\n       f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> s \\<Longrightarrow>\n       f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "assume \"y \\<in> s\""], ["proof (state)\nthis:\n  y \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> s \\<Longrightarrow>\n       f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "with assms"], ["proof (chain)\npicking this:\n  finite s\n  finite t\n  \\<forall>y\\<in>t. (0::'a) \\<le> g y\n  \\<forall>x\\<in>s. \\<exists>y\\<in>t. i y = x \\<and> f x \\<le> g y\n  y \\<in> s", "obtain z where z: \"z \\<in> t\" \"y = i z\" \"f y \\<le> g z\""], ["proof (prove)\nusing this:\n  finite s\n  finite t\n  \\<forall>y\\<in>t. (0::'a) \\<le> g y\n  \\<forall>x\\<in>s. \\<exists>y\\<in>t. i y = x \\<and> f x \\<le> g y\n  y \\<in> s\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> t; y = i z; f y \\<le> g z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z \\<in> t\n  y = i z\n  f y \\<le> g z\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> s \\<Longrightarrow>\n       f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "hence \"f y + 0 \\<le> sum_0 g {z}\""], ["proof (prove)\nusing this:\n  z \\<in> t\n  y = i z\n  f y \\<le> g z\n\ngoal (1 subgoal):\n 1. f y + (0::'a) \\<le> sum_0 g {z}", "by (metis Diff_eq_empty_iff add_commute finite.simps add_left_mono sum_0.empty sum_0.insert_remove subset_insertI)"], ["proof (state)\nthis:\n  f y + (0::'a) \\<le> sum_0 g {z}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> s \\<Longrightarrow>\n       f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "also"], ["proof (state)\nthis:\n  f y + (0::'a) \\<le> sum_0 g {z}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> s \\<Longrightarrow>\n       f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "have \"... \\<le> sum_0 g {x \\<in> t. i x = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_0 g {z} \\<le> sum_0 g {x \\<in> t. i x = y}", "apply (rule sum_mono2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite {x \\<in> t. i x = y}\n 2. {z} \\<subseteq> {x \\<in> t. i x = y}\n 3. \\<And>b.\n       b \\<in> {x \\<in> t. i x = y} - {z} \\<Longrightarrow>\n       (0::'a) \\<le> g b", "using assms z"], ["proof (prove)\nusing this:\n  finite s\n  finite t\n  \\<forall>y\\<in>t. (0::'a) \\<le> g y\n  \\<forall>x\\<in>s. \\<exists>y\\<in>t. i y = x \\<and> f x \\<le> g y\n  z \\<in> t\n  y = i z\n  f y \\<le> g z\n\ngoal (3 subgoals):\n 1. finite {x \\<in> t. i x = y}\n 2. {z} \\<subseteq> {x \\<in> t. i x = y}\n 3. \\<And>b.\n       b \\<in> {x \\<in> t. i x = y} - {z} \\<Longrightarrow>\n       (0::'a) \\<le> g b", "by simp_all"], ["proof (state)\nthis:\n  sum_0 g {z} \\<le> sum_0 g {x \\<in> t. i x = y}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> s \\<Longrightarrow>\n       f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "finally"], ["proof (chain)\npicking this:\n  f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "show \"f y + 0 \\<le> sum_0 g {x \\<in> t. i x = y}\""], ["proof (prove)\nusing this:\n  f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}\n\ngoal (1 subgoal):\n 1. f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}", "."], ["proof (state)\nthis:\n  f y + (0::'a) \\<le> sum_0 g {x \\<in> t. i x = y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum_0 f s \\<le> (\\<Sum>y\\<in>s. sum_0 g {x \\<in> t. i x = y})\n\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> sum_0 g t", "also"], ["proof (state)\nthis:\n  sum_0 f s \\<le> (\\<Sum>y\\<in>s. sum_0 g {x \\<in> t. i x = y})\n\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> sum_0 g t", "have \"\\<dots> \\<le> sum_0 (\\<lambda>y. sum_0 g {x. x\\<in>t \\<and> i x = y}) (i ` t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>s. sum_0 g {x \\<in> t. i x = y})\n    \\<le> (\\<Sum>y\\<in>i ` t. sum_0 g {x \\<in> t. i x = y})", "using assms(2-4)"], ["proof (prove)\nusing this:\n  finite t\n  \\<forall>y\\<in>t. (0::'a) \\<le> g y\n  \\<forall>x\\<in>s. \\<exists>y\\<in>t. i y = x \\<and> f x \\<le> g y\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>s. sum_0 g {x \\<in> t. i x = y})\n    \\<le> (\\<Sum>y\\<in>i ` t. sum_0 g {x \\<in> t. i x = y})", "by (auto intro!: sum_mono2 sum_nonneg)"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>s. sum_0 g {x \\<in> t. i x = y})\n  \\<le> (\\<Sum>y\\<in>i ` t. sum_0 g {x \\<in> t. i x = y})\n\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> sum_0 g t", "also"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>s. sum_0 g {x \\<in> t. i x = y})\n  \\<le> (\\<Sum>y\\<in>i ` t. sum_0 g {x \\<in> t. i x = y})\n\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> sum_0 g t", "have \"\\<dots> \\<le> sum_0 g t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>i ` t. sum_0 g {x \\<in> t. i x = y}) \\<le> sum_0 g t", "using assms"], ["proof (prove)\nusing this:\n  finite s\n  finite t\n  \\<forall>y\\<in>t. (0::'a) \\<le> g y\n  \\<forall>x\\<in>s. \\<exists>y\\<in>t. i y = x \\<and> f x \\<le> g y\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>i ` t. sum_0 g {x \\<in> t. i x = y}) \\<le> sum_0 g t", "by (auto simp: sum_image_gen_0[symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>i ` t. sum_0 g {x \\<in> t. i x = y}) \\<le> sum_0 g t\n\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> sum_0 g t", "finally"], ["proof (chain)\npicking this:\n  sum_0 f s \\<le> sum_0 g t", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_0 f s \\<le> sum_0 g t\n\ngoal (1 subgoal):\n 1. sum_0 f s \\<le> sum_0 g t", "."], ["proof (state)\nthis:\n  sum_0 f s \\<le> sum_0 g t\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma sum_comp_morphism:\n  \"h 0 = 0 \\<Longrightarrow> (\\<And>x y. h (x + y) = h x + h y) \\<Longrightarrow> sum_0 (h \\<circ> g) A = h (sum_0 g A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h (0::'b) = (0::'a); \\<And>x y. h (x + y) = h x + h y\\<rbrakk>\n    \\<Longrightarrow> sum_0 (h \\<circ> g) A = h (sum_0 g A)", "by (induct A rule: infinite_finite_induct) simp_all"], ["", "lemma sum_cong_Suc:\n  assumes \"0 \\<notin> A\" \"\\<And>x. Suc x \\<in> A \\<Longrightarrow> f (Suc x) = g (Suc x)\"\n  shows \"sum_0 f A = sum_0 g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_0 f A = sum_0 g A", "proof (rule sum_0.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. A = A\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> f x = g x", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. A = A\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> f x = g x", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. A = A\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> f x = g x", "with assms(1)"], ["proof (chain)\npicking this:\n  0 \\<notin> A\n  x \\<in> A", "show \"f x = g x\""], ["proof (prove)\nusing this:\n  0 \\<notin> A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. f x = g x", "by (cases x) (auto intro!: assms(2))"], ["proof (state)\nthis:\n  f x = g x\n\ngoal (1 subgoal):\n 1. A = A", "qed simp_all"], ["", "end"]]}