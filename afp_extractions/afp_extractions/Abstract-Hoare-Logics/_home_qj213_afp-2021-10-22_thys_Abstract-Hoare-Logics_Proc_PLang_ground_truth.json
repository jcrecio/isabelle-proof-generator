{"file_name": "/home/qj213/afp-2021-10-22/thys/Abstract-Hoare-Logics/Proc/PLang.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Abstract-Hoare-Logics", "problem_names": ["lemma [iff]: \"(s -Do f\\<rightarrow> t) = (t \\<in> f s)\"", "lemma [iff]: \"(s -c;d\\<rightarrow> u) = (\\<exists>t. s -c\\<rightarrow> t \\<and> t -d\\<rightarrow> u)\"", "lemma [iff]: \"(s -IF b THEN c ELSE d\\<rightarrow> t) =\n              (s -if b s then c else d\\<rightarrow> t)\"", "lemma unfold_while:\n \"(s -WHILE b DO c\\<rightarrow> u) =\n  (s -IF b THEN c;WHILE b DO c ELSE Do(\\<lambda>s. {s})\\<rightarrow> u)\"", "lemma [iff]: \"(s -CALL\\<rightarrow> t) = (s -body\\<rightarrow> t)\"", "lemma [iff]: \"(s -LOCAL f; c; g\\<rightarrow> u) = (\\<exists>t. f s -c\\<rightarrow> t \\<and> u = g s t)\"", "lemma [simp]: \"\\<not>b s \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> s\"", "lemma WhileI: \"\\<lbrakk>b s; s -c\\<rightarrow> t; t -WHILE b DO c\\<rightarrow> u\\<rbrakk> \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u\"", "lemma [iff]: \"(s -Do f-n\\<rightarrow> t) = (t \\<in> f s)\"", "lemma [iff]: \"(s -c1;c2-n\\<rightarrow> u) = (\\<exists>t. s -c1-n\\<rightarrow> t \\<and> t -c2-n\\<rightarrow> u)\"", "lemma [iff]: \"(s -IF b THEN c ELSE d-n\\<rightarrow> t) =\n              (s -if b s then c else d-n\\<rightarrow> t)\"", "lemma [iff]: \"(s -CALL- 0\\<rightarrow> t) = False\"", "lemma [iff]: \"(s -CALL-Suc n\\<rightarrow> t) = (s -body-n\\<rightarrow> t)\"", "lemma [iff]: \"(s -LOCAL f; c; g-n\\<rightarrow> u) = (\\<exists>t. f s -c-n\\<rightarrow> t \\<and> u = g s t)\"", "lemma exec_mono[rule_format]: \"s -c-m\\<rightarrow> t \\<Longrightarrow> \\<forall>n. m \\<le> n \\<longrightarrow> s -c-n\\<rightarrow> t\"", "lemma exec_iff_execn: \"(s -c\\<rightarrow> t) = (\\<exists>n. s -c-n\\<rightarrow> t)\"", "lemma while_lemma[rule_format]:\n\"s -w-n\\<rightarrow> t \\<Longrightarrow> \\<forall>b c. w = WHILE b DO c \\<and> P s \\<and>\n                    (\\<forall>s s'. P s \\<and> b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow> P s') \\<longrightarrow> P t \\<and> \\<not>b t\"", "lemma while_rule:\n \"\\<lbrakk>s -WHILE b DO c-n\\<rightarrow> t; P s; \\<And>s s'. \\<lbrakk>P s; b s; s -c-n\\<rightarrow> s' \\<rbrakk> \\<Longrightarrow> P s'\\<rbrakk>\n  \\<Longrightarrow> P t \\<and> \\<not>b t\""], "translations": [["", "lemma [iff]: \"(s -Do f\\<rightarrow> t) = (t \\<in> f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -Do f\\<rightarrow> t) = (t \\<in> f s)", "by(auto elim: exec.cases intro:exec.intros)"], ["", "lemma [iff]: \"(s -c;d\\<rightarrow> u) = (\\<exists>t. s -c\\<rightarrow> t \\<and> t -d\\<rightarrow> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -c; d\\<rightarrow> u) =\n    (\\<exists>t. s -c\\<rightarrow> t \\<and> t -d\\<rightarrow> u)", "by(auto elim: exec.cases intro:exec.intros)"], ["", "lemma [iff]: \"(s -IF b THEN c ELSE d\\<rightarrow> t) =\n              (s -if b s then c else d\\<rightarrow> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -IF b THEN c ELSE d\\<rightarrow> t) =\n    (s -if b s then c else d\\<rightarrow> t)", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. s -IF b THEN c ELSE d\\<rightarrow> t \\<Longrightarrow>\n    s -if b s then c else d\\<rightarrow> t\n 2. s -if b s then c else d\\<rightarrow> t \\<Longrightarrow>\n    s -IF b THEN c ELSE d\\<rightarrow> t", "apply(auto elim: exec.cases intro:exec.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s -if b s then c else d\\<rightarrow> t \\<Longrightarrow>\n    s -IF b THEN c ELSE d\\<rightarrow> t", "apply(auto intro:exec.intros split:if_split_asm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma unfold_while:\n \"(s -WHILE b DO c\\<rightarrow> u) =\n  (s -IF b THEN c;WHILE b DO c ELSE Do(\\<lambda>s. {s})\\<rightarrow> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -WHILE b DO c\\<rightarrow> u) =\n    (s -IF b THEN c; WHILE b DO c ELSE Do (\\<lambda>s. {s})\\<rightarrow> u)", "by(auto elim: exec.cases intro:exec.intros split:if_split_asm)"], ["", "lemma [iff]: \"(s -CALL\\<rightarrow> t) = (s -body\\<rightarrow> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -CALL\\<rightarrow> t) = (s -body\\<rightarrow> t)", "by(blast elim: exec.cases intro:exec.intros)"], ["", "lemma [iff]: \"(s -LOCAL f; c; g\\<rightarrow> u) = (\\<exists>t. f s -c\\<rightarrow> t \\<and> u = g s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -LOCAL f; c; g\\<rightarrow> u) =\n    (\\<exists>t. f s -c\\<rightarrow> t \\<and> u = g s t)", "by(fastforce elim: exec.cases intro:exec.intros)"], ["", "lemma [simp]: \"\\<not>b s \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> b s \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> s", "by(fast intro:exec.intros)"], ["", "lemma WhileI: \"\\<lbrakk>b s; s -c\\<rightarrow> t; t -WHILE b DO c\\<rightarrow> u\\<rbrakk> \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b s; s -c\\<rightarrow> t;\n     t -WHILE b DO c\\<rightarrow> u\\<rbrakk>\n    \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u", "by(fastforce elim:exec.WhileTrue)"], ["", "(*>*)"], ["", "text\\<open>This semantics turns out not to be fine-grained\nenough. The soundness proof for the Hoare logic below proceeds by\ninduction on the call depth during execution. To make this work we\ndefine a second semantics \\mbox{\\<open>s -c-n\\<rightarrow> t\\<close>} which expresses that the\nexecution uses at most @{term n} nested procedure invocations, where\n@{term n} is a natural number. The rules are straightforward: @{term\nn} is just passed around, except for procedure calls, where it is\ndecremented:\\<close>"], ["", "inductive\n  execn :: \"state \\<Rightarrow> com \\<Rightarrow> nat \\<Rightarrow> state \\<Rightarrow> bool\"   (\"_/ -_-_\\<rightarrow>/ _\" [50,0,0,50] 50)\nwhere\n  \"t \\<in> f s \\<Longrightarrow> s -Do f-n\\<rightarrow> t\"\n\n| \"\\<lbrakk> s0 -c1-n\\<rightarrow> s1; s1 -c2-n\\<rightarrow> s2 \\<rbrakk> \\<Longrightarrow> s0 -c1;c2-n\\<rightarrow> s2\"\n\n| \"\\<lbrakk>  b s; s -c1-n\\<rightarrow> t \\<rbrakk> \\<Longrightarrow> s -IF b THEN c1 ELSE c2-n\\<rightarrow> t\"\n| \"\\<lbrakk> \\<not>b s; s -c2-n\\<rightarrow> t \\<rbrakk> \\<Longrightarrow> s -IF b THEN c1 ELSE c2-n\\<rightarrow> t\"\n\n| (*<*)WhileFalse:(*>*)\"\\<not>b s \\<Longrightarrow> s -WHILE b DO c-n\\<rightarrow> s\"\n| (*<*)WhileTrue:(*>*)\"\\<lbrakk>b s; s -c-n\\<rightarrow> t; t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk> \\<Longrightarrow> s -WHILE b DO c-n\\<rightarrow> u\"\n\n| \"s -body-n\\<rightarrow> t \\<Longrightarrow> s -CALL-Suc n\\<rightarrow> t\"\n\n| \"f s -c-n\\<rightarrow> t \\<Longrightarrow> s -LOCAL f; c; g-n\\<rightarrow> g s t\""], ["", "lemma [iff]: \"(s -Do f-n\\<rightarrow> t) = (t \\<in> f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -Do f-n\\<rightarrow> t) = (t \\<in> f s)", "by(auto elim: execn.cases intro:execn.intros)"], ["", "lemma [iff]: \"(s -c1;c2-n\\<rightarrow> u) = (\\<exists>t. s -c1-n\\<rightarrow> t \\<and> t -c2-n\\<rightarrow> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -c1; c2-n\\<rightarrow> u) =\n    (\\<exists>t. s -c1-n\\<rightarrow> t \\<and> t -c2-n\\<rightarrow> u)", "by(best elim: execn.cases intro:execn.intros)"], ["", "lemma [iff]: \"(s -IF b THEN c ELSE d-n\\<rightarrow> t) =\n              (s -if b s then c else d-n\\<rightarrow> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -IF b THEN c ELSE d-n\\<rightarrow> t) =\n    (s -if b s then c else d-n\\<rightarrow> t)", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>b s; s -IF b THEN c ELSE d-n\\<rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> s -c-n\\<rightarrow> t\n 2. \\<lbrakk>b s; s -c-n\\<rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> s -IF b THEN c ELSE d-n\\<rightarrow> t\n 3. \\<lbrakk>\\<not> b s; s -IF b THEN c ELSE d-n\\<rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> s -d-n\\<rightarrow> t\n 4. \\<lbrakk>\\<not> b s; s -d-n\\<rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> s -IF b THEN c ELSE d-n\\<rightarrow> t", "apply(blast elim: execn.cases intro:execn.intros)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"(s -CALL- 0\\<rightarrow> t) = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -CALL-0\\<rightarrow> t) = False", "by(blast elim: execn.cases intro:execn.intros)"], ["", "lemma [iff]: \"(s -CALL-Suc n\\<rightarrow> t) = (s -body-n\\<rightarrow> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -CALL-Suc n\\<rightarrow> t) = (s -body-n\\<rightarrow> t)", "by(blast elim: execn.cases intro:execn.intros)"], ["", "lemma [iff]: \"(s -LOCAL f; c; g-n\\<rightarrow> u) = (\\<exists>t. f s -c-n\\<rightarrow> t \\<and> u = g s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -LOCAL f; c; g-n\\<rightarrow> u) =\n    (\\<exists>t. f s -c-n\\<rightarrow> t \\<and> u = g s t)", "by(auto elim: execn.cases intro:execn.intros)"], ["", "text\\<open>\\noindent By induction on @{prop\"s -c-m\\<rightarrow> t\"} we show\nmonotonicity w.r.t.\\ the call depth:\\<close>"], ["", "lemma exec_mono[rule_format]: \"s -c-m\\<rightarrow> t \\<Longrightarrow> \\<forall>n. m \\<le> n \\<longrightarrow> s -c-n\\<rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s -c-m\\<rightarrow> t \\<Longrightarrow>\n    \\<forall>n\\<ge>m. s -c-n\\<rightarrow> t", "apply(erule execn.induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>t f s n.\n       t \\<in> f s \\<Longrightarrow>\n       \\<forall>na\\<ge>n. s -Do f-na\\<rightarrow> t\n 2. \\<And>s0 c1 n s1 c2 s2.\n       \\<lbrakk>s0 -c1-n\\<rightarrow> s1;\n        \\<forall>na\\<ge>n. s0 -c1-na\\<rightarrow> s1;\n        s1 -c2-n\\<rightarrow> s2;\n        \\<forall>na\\<ge>n. s1 -c2-na\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s0 -c1; c2-na\\<rightarrow> s2\n 3. \\<And>b s c1 n t c2.\n       \\<lbrakk>b s; s -c1-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c1-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s\n                            -IF b THEN c1 ELSE c2-na\\<rightarrow> t\n 4. \\<And>b s c2 n t c1.\n       \\<lbrakk>\\<not> b s; s -c2-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c2-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s\n                            -IF b THEN c1 ELSE c2-na\\<rightarrow> t\n 5. \\<And>b s c n.\n       \\<not> b s \\<Longrightarrow>\n       \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow> s\n 6. \\<And>b s c n t u.\n       \\<lbrakk>b s; s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c-na\\<rightarrow> t;\n        t -WHILE b DO c-n\\<rightarrow> u;\n        \\<forall>na\\<ge>n. t -WHILE b DO c-na\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow>\n                            u\n 7. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>Suc n. s -CALL-na\\<rightarrow> t\n 8. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(blast)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>s0 c1 n s1 c2 s2.\n       \\<lbrakk>s0 -c1-n\\<rightarrow> s1;\n        \\<forall>na\\<ge>n. s0 -c1-na\\<rightarrow> s1;\n        s1 -c2-n\\<rightarrow> s2;\n        \\<forall>na\\<ge>n. s1 -c2-na\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s0 -c1; c2-na\\<rightarrow> s2\n 2. \\<And>b s c1 n t c2.\n       \\<lbrakk>b s; s -c1-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c1-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s\n                            -IF b THEN c1 ELSE c2-na\\<rightarrow> t\n 3. \\<And>b s c2 n t c1.\n       \\<lbrakk>\\<not> b s; s -c2-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c2-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s\n                            -IF b THEN c1 ELSE c2-na\\<rightarrow> t\n 4. \\<And>b s c n.\n       \\<not> b s \\<Longrightarrow>\n       \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow> s\n 5. \\<And>b s c n t u.\n       \\<lbrakk>b s; s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c-na\\<rightarrow> t;\n        t -WHILE b DO c-n\\<rightarrow> u;\n        \\<forall>na\\<ge>n. t -WHILE b DO c-na\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow>\n                            u\n 6. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>Suc n. s -CALL-na\\<rightarrow> t\n 7. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(blast)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>b s c1 n t c2.\n       \\<lbrakk>b s; s -c1-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c1-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s\n                            -IF b THEN c1 ELSE c2-na\\<rightarrow> t\n 2. \\<And>b s c2 n t c1.\n       \\<lbrakk>\\<not> b s; s -c2-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c2-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s\n                            -IF b THEN c1 ELSE c2-na\\<rightarrow> t\n 3. \\<And>b s c n.\n       \\<not> b s \\<Longrightarrow>\n       \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow> s\n 4. \\<And>b s c n t u.\n       \\<lbrakk>b s; s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c-na\\<rightarrow> t;\n        t -WHILE b DO c-n\\<rightarrow> u;\n        \\<forall>na\\<ge>n. t -WHILE b DO c-na\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow>\n                            u\n 5. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>Suc n. s -CALL-na\\<rightarrow> t\n 6. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b s c2 n t c1.\n       \\<lbrakk>\\<not> b s; s -c2-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c2-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s\n                            -IF b THEN c1 ELSE c2-na\\<rightarrow> t\n 2. \\<And>b s c n.\n       \\<not> b s \\<Longrightarrow>\n       \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow> s\n 3. \\<And>b s c n t u.\n       \\<lbrakk>b s; s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c-na\\<rightarrow> t;\n        t -WHILE b DO c-n\\<rightarrow> u;\n        \\<forall>na\\<ge>n. t -WHILE b DO c-na\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow>\n                            u\n 4. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>Suc n. s -CALL-na\\<rightarrow> t\n 5. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b s c n.\n       \\<not> b s \\<Longrightarrow>\n       \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow> s\n 2. \\<And>b s c n t u.\n       \\<lbrakk>b s; s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c-na\\<rightarrow> t;\n        t -WHILE b DO c-n\\<rightarrow> u;\n        \\<forall>na\\<ge>n. t -WHILE b DO c-na\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow>\n                            u\n 3. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>Suc n. s -CALL-na\\<rightarrow> t\n 4. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(simp add:execn.intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b s c n t u.\n       \\<lbrakk>b s; s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -c-na\\<rightarrow> t;\n        t -WHILE b DO c-n\\<rightarrow> u;\n        \\<forall>na\\<ge>n. t -WHILE b DO c-na\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -WHILE b DO c-na\\<rightarrow>\n                            u\n 2. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>Suc n. s -CALL-na\\<rightarrow> t\n 3. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(blast intro:execn.intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>Suc n. s -CALL-na\\<rightarrow> t\n 2. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n t na.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t;\n        Suc n \\<le> na\\<rbrakk>\n       \\<Longrightarrow> s -CALL-na\\<rightarrow> t\n 2. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(rename_tac m)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n t m.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t; Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> s -CALL-m\\<rightarrow> t\n 2. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply(case_tac m)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s n t m.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t; Suc n \\<le> m;\n        m = 0\\<rbrakk>\n       \\<Longrightarrow> s -CALL-m\\<rightarrow> t\n 2. \\<And>s n t m nat.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t; Suc n \\<le> m;\n        m = Suc nat\\<rbrakk>\n       \\<Longrightarrow> s -CALL-m\\<rightarrow> t\n 3. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n t m nat.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. s -body-na\\<rightarrow> t; Suc n \\<le> m;\n        m = Suc nat\\<rbrakk>\n       \\<Longrightarrow> s -CALL-m\\<rightarrow> t\n 2. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>na\\<ge>n. f s -c-na\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>na\\<ge>n. s -LOCAL f; c; g-na\\<rightarrow>\n                            g s t", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>\\noindent With the help of this lemma we prove the expected\nrelationship between the two semantics:\\<close>"], ["", "lemma exec_iff_execn: \"(s -c\\<rightarrow> t) = (\\<exists>n. s -c-n\\<rightarrow> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -c\\<rightarrow> t) = (\\<exists>n. s -c-n\\<rightarrow> t)", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. s -c\\<rightarrow> t \\<Longrightarrow> \\<exists>n. s -c-n\\<rightarrow> t\n 2. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(erule exec.induct)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>t f s.\n       t \\<in> f s \\<Longrightarrow> \\<exists>n. s -Do f-n\\<rightarrow> t\n 2. \\<And>s0 c1 s1 c2 s2.\n       \\<lbrakk>s0 -c1\\<rightarrow> s1;\n        \\<exists>n. s0 -c1-n\\<rightarrow> s1; s1 -c2\\<rightarrow> s2;\n        \\<exists>n. s1 -c2-n\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s0 -c1; c2-n\\<rightarrow> s2\n 3. \\<And>b s c1 t c2.\n       \\<lbrakk>b s; s -c1\\<rightarrow> t;\n        \\<exists>n. s -c1-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 4. \\<And>b s c2 t c1.\n       \\<lbrakk>\\<not> b s; s -c2\\<rightarrow> t;\n        \\<exists>n. s -c2-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 5. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<exists>n. s -WHILE b DO c-n\\<rightarrow> s\n 6. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 7. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 8. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 9. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply blast"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>s0 c1 s1 c2 s2.\n       \\<lbrakk>s0 -c1\\<rightarrow> s1;\n        \\<exists>n. s0 -c1-n\\<rightarrow> s1; s1 -c2\\<rightarrow> s2;\n        \\<exists>n. s1 -c2-n\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s0 -c1; c2-n\\<rightarrow> s2\n 2. \\<And>b s c1 t c2.\n       \\<lbrakk>b s; s -c1\\<rightarrow> t;\n        \\<exists>n. s -c1-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 3. \\<And>b s c2 t c1.\n       \\<lbrakk>\\<not> b s; s -c2\\<rightarrow> t;\n        \\<exists>n. s -c2-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 4. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<exists>n. s -WHILE b DO c-n\\<rightarrow> s\n 5. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 6. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 7. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 8. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply clarify"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>s0 c1 s1 c2 s2 n na.\n       \\<lbrakk>s0 -c1\\<rightarrow> s1; s1 -c2\\<rightarrow> s2;\n        s0 -c1-n\\<rightarrow> s1; s1 -c2-na\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s0 -c1; c2-n\\<rightarrow> s2\n 2. \\<And>b s c1 t c2.\n       \\<lbrakk>b s; s -c1\\<rightarrow> t;\n        \\<exists>n. s -c1-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 3. \\<And>b s c2 t c1.\n       \\<lbrakk>\\<not> b s; s -c2\\<rightarrow> t;\n        \\<exists>n. s -c2-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 4. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<exists>n. s -WHILE b DO c-n\\<rightarrow> s\n 5. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 6. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 7. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 8. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(rename_tac m n)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>s0 c1 s1 c2 s2 m n.\n       \\<lbrakk>s0 -c1\\<rightarrow> s1; s1 -c2\\<rightarrow> s2;\n        s0 -c1-m\\<rightarrow> s1; s1 -c2-n\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s0 -c1; c2-n\\<rightarrow> s2\n 2. \\<And>b s c1 t c2.\n       \\<lbrakk>b s; s -c1\\<rightarrow> t;\n        \\<exists>n. s -c1-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 3. \\<And>b s c2 t c1.\n       \\<lbrakk>\\<not> b s; s -c2\\<rightarrow> t;\n        \\<exists>n. s -c2-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 4. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<exists>n. s -WHILE b DO c-n\\<rightarrow> s\n 5. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 6. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 7. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 8. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(rule_tac x = \"max m n\" in exI)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>s0 c1 s1 c2 s2 m n.\n       \\<lbrakk>s0 -c1\\<rightarrow> s1; s1 -c2\\<rightarrow> s2;\n        s0 -c1-m\\<rightarrow> s1; s1 -c2-n\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> s0 -c1; c2-max m n\\<rightarrow> s2\n 2. \\<And>b s c1 t c2.\n       \\<lbrakk>b s; s -c1\\<rightarrow> t;\n        \\<exists>n. s -c1-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 3. \\<And>b s c2 t c1.\n       \\<lbrakk>\\<not> b s; s -c2\\<rightarrow> t;\n        \\<exists>n. s -c2-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 4. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<exists>n. s -WHILE b DO c-n\\<rightarrow> s\n 5. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 6. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 7. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 8. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(fastforce intro:exec.intros exec_mono simp add:max_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>b s c1 t c2.\n       \\<lbrakk>b s; s -c1\\<rightarrow> t;\n        \\<exists>n. s -c1-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 2. \\<And>b s c2 t c1.\n       \\<lbrakk>\\<not> b s; s -c2\\<rightarrow> t;\n        \\<exists>n. s -c2-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 3. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<exists>n. s -WHILE b DO c-n\\<rightarrow> s\n 4. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 5. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 6. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 7. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply fastforce"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>b s c2 t c1.\n       \\<lbrakk>\\<not> b s; s -c2\\<rightarrow> t;\n        \\<exists>n. s -c2-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -IF b THEN c1 ELSE c2-n\\<rightarrow>\n                            t\n 2. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<exists>n. s -WHILE b DO c-n\\<rightarrow> s\n 3. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 4. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 5. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 6. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply fastforce"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<exists>n. s -WHILE b DO c-n\\<rightarrow> s\n 2. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 3. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 4. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 5. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(blast intro:execn.intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; \\<exists>n. s -c-n\\<rightarrow> t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<exists>n. t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 2. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 3. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 4. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply clarify"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b s c t u n na.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; t -WHILE b DO c\\<rightarrow> u;\n        s -c-n\\<rightarrow> t; t -WHILE b DO c-na\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 2. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 3. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 4. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(rename_tac m n)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b s c t u m n.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; t -WHILE b DO c\\<rightarrow> u;\n        s -c-m\\<rightarrow> t; t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -WHILE b DO c-n\\<rightarrow> u\n 2. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 3. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 4. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(rule_tac x = \"max m n\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b s c t u m n.\n       \\<lbrakk>b s; s -c\\<rightarrow> t; t -WHILE b DO c\\<rightarrow> u;\n        s -c-m\\<rightarrow> t; t -WHILE b DO c-n\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> s -WHILE b DO c-max m n\\<rightarrow> u\n 2. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 3. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 4. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(fastforce elim:execn.WhileTrue exec_mono simp add:max_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>s -body\\<rightarrow> t;\n        \\<exists>n. s -body-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -CALL-n\\<rightarrow> t\n 2. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 3. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<exists>n. f s -c-n\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. s -LOCAL f; c; g-n\\<rightarrow> g s t\n 2. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. s -c-n\\<rightarrow> t \\<Longrightarrow> s -c\\<rightarrow> t", "apply(erule exE, erule execn.induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n t f s na. t \\<in> f s \\<Longrightarrow> s -Do f\\<rightarrow> t\n 2. \\<And>n s0 c1 na s1 c2 s2.\n       \\<lbrakk>s0 -c1-na\\<rightarrow> s1; s0 -c1\\<rightarrow> s1;\n        s1 -c2-na\\<rightarrow> s2; s1 -c2\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> s0 -c1; c2\\<rightarrow> s2\n 3. \\<And>n b s c1 na t c2.\n       \\<lbrakk>b s; s -c1-na\\<rightarrow> t; s -c1\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -IF b THEN c1 ELSE c2\\<rightarrow> t\n 4. \\<And>n b s c2 na t c1.\n       \\<lbrakk>\\<not> b s; s -c2-na\\<rightarrow> t;\n        s -c2\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -IF b THEN c1 ELSE c2\\<rightarrow> t\n 5. \\<And>n b s c na.\n       \\<not> b s \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> s\n 6. \\<And>n b s c na t u.\n       \\<lbrakk>b s; s -c-na\\<rightarrow> t; s -c\\<rightarrow> t;\n        t -WHILE b DO c-na\\<rightarrow> u;\n        t -WHILE b DO c\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u\n 7. \\<And>n s na t.\n       \\<lbrakk>s -body-na\\<rightarrow> t; s -body\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -CALL\\<rightarrow> t\n 8. \\<And>n f s c na t g.\n       \\<lbrakk>f s -c-na\\<rightarrow> t; f s -c\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -LOCAL f; c; g\\<rightarrow> g s t", "apply blast"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n s0 c1 na s1 c2 s2.\n       \\<lbrakk>s0 -c1-na\\<rightarrow> s1; s0 -c1\\<rightarrow> s1;\n        s1 -c2-na\\<rightarrow> s2; s1 -c2\\<rightarrow> s2\\<rbrakk>\n       \\<Longrightarrow> s0 -c1; c2\\<rightarrow> s2\n 2. \\<And>n b s c1 na t c2.\n       \\<lbrakk>b s; s -c1-na\\<rightarrow> t; s -c1\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -IF b THEN c1 ELSE c2\\<rightarrow> t\n 3. \\<And>n b s c2 na t c1.\n       \\<lbrakk>\\<not> b s; s -c2-na\\<rightarrow> t;\n        s -c2\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -IF b THEN c1 ELSE c2\\<rightarrow> t\n 4. \\<And>n b s c na.\n       \\<not> b s \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> s\n 5. \\<And>n b s c na t u.\n       \\<lbrakk>b s; s -c-na\\<rightarrow> t; s -c\\<rightarrow> t;\n        t -WHILE b DO c-na\\<rightarrow> u;\n        t -WHILE b DO c\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u\n 6. \\<And>n s na t.\n       \\<lbrakk>s -body-na\\<rightarrow> t; s -body\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -CALL\\<rightarrow> t\n 7. \\<And>n f s c na t g.\n       \\<lbrakk>f s -c-na\\<rightarrow> t; f s -c\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -LOCAL f; c; g\\<rightarrow> g s t", "apply blast"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n b s c1 na t c2.\n       \\<lbrakk>b s; s -c1-na\\<rightarrow> t; s -c1\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -IF b THEN c1 ELSE c2\\<rightarrow> t\n 2. \\<And>n b s c2 na t c1.\n       \\<lbrakk>\\<not> b s; s -c2-na\\<rightarrow> t;\n        s -c2\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -IF b THEN c1 ELSE c2\\<rightarrow> t\n 3. \\<And>n b s c na.\n       \\<not> b s \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> s\n 4. \\<And>n b s c na t u.\n       \\<lbrakk>b s; s -c-na\\<rightarrow> t; s -c\\<rightarrow> t;\n        t -WHILE b DO c-na\\<rightarrow> u;\n        t -WHILE b DO c\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u\n 5. \\<And>n s na t.\n       \\<lbrakk>s -body-na\\<rightarrow> t; s -body\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -CALL\\<rightarrow> t\n 6. \\<And>n f s c na t g.\n       \\<lbrakk>f s -c-na\\<rightarrow> t; f s -c\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -LOCAL f; c; g\\<rightarrow> g s t", "apply fastforce"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n b s c2 na t c1.\n       \\<lbrakk>\\<not> b s; s -c2-na\\<rightarrow> t;\n        s -c2\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -IF b THEN c1 ELSE c2\\<rightarrow> t\n 2. \\<And>n b s c na.\n       \\<not> b s \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> s\n 3. \\<And>n b s c na t u.\n       \\<lbrakk>b s; s -c-na\\<rightarrow> t; s -c\\<rightarrow> t;\n        t -WHILE b DO c-na\\<rightarrow> u;\n        t -WHILE b DO c\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u\n 4. \\<And>n s na t.\n       \\<lbrakk>s -body-na\\<rightarrow> t; s -body\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -CALL\\<rightarrow> t\n 5. \\<And>n f s c na t g.\n       \\<lbrakk>f s -c-na\\<rightarrow> t; f s -c\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -LOCAL f; c; g\\<rightarrow> g s t", "apply fastforce"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n b s c na.\n       \\<not> b s \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> s\n 2. \\<And>n b s c na t u.\n       \\<lbrakk>b s; s -c-na\\<rightarrow> t; s -c\\<rightarrow> t;\n        t -WHILE b DO c-na\\<rightarrow> u;\n        t -WHILE b DO c\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u\n 3. \\<And>n s na t.\n       \\<lbrakk>s -body-na\\<rightarrow> t; s -body\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -CALL\\<rightarrow> t\n 4. \\<And>n f s c na t g.\n       \\<lbrakk>f s -c-na\\<rightarrow> t; f s -c\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -LOCAL f; c; g\\<rightarrow> g s t", "apply(erule exec.WhileFalse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n b s c na t u.\n       \\<lbrakk>b s; s -c-na\\<rightarrow> t; s -c\\<rightarrow> t;\n        t -WHILE b DO c-na\\<rightarrow> u;\n        t -WHILE b DO c\\<rightarrow> u\\<rbrakk>\n       \\<Longrightarrow> s -WHILE b DO c\\<rightarrow> u\n 2. \\<And>n s na t.\n       \\<lbrakk>s -body-na\\<rightarrow> t; s -body\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -CALL\\<rightarrow> t\n 3. \\<And>n f s c na t g.\n       \\<lbrakk>f s -c-na\\<rightarrow> t; f s -c\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -LOCAL f; c; g\\<rightarrow> g s t", "apply(blast intro: exec.intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s na t.\n       \\<lbrakk>s -body-na\\<rightarrow> t; s -body\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -CALL\\<rightarrow> t\n 2. \\<And>n f s c na t g.\n       \\<lbrakk>f s -c-na\\<rightarrow> t; f s -c\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -LOCAL f; c; g\\<rightarrow> g s t", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f s c na t g.\n       \\<lbrakk>f s -c-na\\<rightarrow> t; f s -c\\<rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> s -LOCAL f; c; g\\<rightarrow> g s t", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma while_lemma[rule_format]:\n\"s -w-n\\<rightarrow> t \\<Longrightarrow> \\<forall>b c. w = WHILE b DO c \\<and> P s \\<and>\n                    (\\<forall>s s'. P s \\<and> b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow> P s') \\<longrightarrow> P t \\<and> \\<not>b t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s -w-n\\<rightarrow> t \\<Longrightarrow>\n    \\<forall>b c.\n       w = WHILE b DO c \\<and>\n       P s \\<and>\n       (\\<forall>s s'.\n           P s \\<and> b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n           P s') \\<longrightarrow>\n       P t \\<and> \\<not> b t", "apply(erule execn.induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>t f s n.\n       t \\<in> f s \\<Longrightarrow>\n       \\<forall>b c.\n          Do f = WHILE b DO c \\<and>\n          P s \\<and>\n          (\\<forall>s s'.\n              P s \\<and> b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n              P s') \\<longrightarrow>\n          P t \\<and> \\<not> b t\n 2. \\<And>s0 c1 n s1 c2 s2.\n       \\<lbrakk>s0 -c1-n\\<rightarrow> s1;\n        \\<forall>b c.\n           c1 = WHILE b DO c \\<and>\n           P s0 \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P s1 \\<and> \\<not> b s1;\n        s1 -c2-n\\<rightarrow> s2;\n        \\<forall>b c.\n           c2 = WHILE b DO c \\<and>\n           P s1 \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P s2 \\<and> \\<not> b s2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b c.\n                            (c1; c2) = WHILE b DO c \\<and>\n                            P s0 \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -c-n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P s2 \\<and> \\<not> b s2\n 3. \\<And>b s c1 n t c2.\n       \\<lbrakk>b s; s -c1-n\\<rightarrow> t;\n        \\<forall>b c.\n           c1 = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ba c.\n                            IF b THEN c1 ELSE c2 = WHILE ba DO c \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                ba s \\<and> s -c-n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P t \\<and> \\<not> ba t\n 4. \\<And>b s c2 n t c1.\n       \\<lbrakk>\\<not> b s; s -c2-n\\<rightarrow> t;\n        \\<forall>b c.\n           c2 = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ba c.\n                            IF b THEN c1 ELSE c2 = WHILE ba DO c \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                ba s \\<and> s -c-n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P t \\<and> \\<not> ba t\n 5. \\<And>b s c n.\n       \\<not> b s \\<Longrightarrow>\n       \\<forall>ba ca.\n          WHILE b DO c = WHILE ba DO ca \\<and>\n          P s \\<and>\n          (\\<forall>s s'.\n              P s \\<and>\n              ba s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n              P s') \\<longrightarrow>\n          P s \\<and> \\<not> ba s\n 6. \\<And>b s c n t u.\n       \\<lbrakk>b s; s -c-n\\<rightarrow> t;\n        \\<forall>b ca.\n           c = WHILE b DO ca \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE b DO c-n\\<rightarrow> u;\n        \\<forall>ba ca.\n           WHILE b DO c = WHILE ba DO ca \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               ba s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> ba u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ba ca.\n                            WHILE b DO c = WHILE ba DO ca \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                ba s \\<and> s -ca-n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P u \\<and> \\<not> ba u\n 7. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>b c.\n           body = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b c.\n                            CALL = WHILE b DO c \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -c-Suc n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P t \\<and> \\<not> b t\n 8. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>b ca.\n           c = WHILE b DO ca \\<and>\n           P (f s) \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b ca.\n                            LOCAL f; c; g = WHILE b DO ca \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -ca-n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P (g s t) \\<and> \\<not> b (g s t)", "apply clarify+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b s c n t u ba ca.\n       \\<lbrakk>ba s; s -ca-n\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca-n\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P u \\<and> \\<not> ba u\n 2. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>b c.\n           body = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b c.\n                            CALL = WHILE b DO c \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -c-Suc n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P t \\<and> \\<not> b t\n 3. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>b ca.\n           c = WHILE b DO ca \\<and>\n           P (f s) \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b ca.\n                            LOCAL f; c; g = WHILE b DO ca \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -ca-n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P (g s t) \\<and> \\<not> b (g s t)", "defer"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s n t.\n       \\<lbrakk>s -body-n\\<rightarrow> t;\n        \\<forall>b c.\n           body = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b c.\n                            CALL = WHILE b DO c \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -c-Suc n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P t \\<and> \\<not> b t\n 2. \\<And>f s c n t g.\n       \\<lbrakk>f s -c-n\\<rightarrow> t;\n        \\<forall>b ca.\n           c = WHILE b DO ca \\<and>\n           P (f s) \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b ca.\n                            LOCAL f; c; g = WHILE b DO ca \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -ca-n\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P (g s t) \\<and> \\<not> b (g s t)\n 3. \\<And>b s c n t u ba ca.\n       \\<lbrakk>ba s; s -ca-n\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca-n\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P u \\<and> \\<not> ba u", "apply clarify+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s c n t u ba ca.\n       \\<lbrakk>ba s; s -ca-n\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca-n\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P u \\<and> \\<not> ba u", "apply(subgoal_tac \"P t\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s c n t u ba ca.\n       \\<lbrakk>ba s; s -ca-n\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca-n\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n           P s';\n        P t\\<rbrakk>\n       \\<Longrightarrow> P u \\<and> \\<not> ba u\n 2. \\<And>b s c n t u ba ca.\n       \\<lbrakk>ba s; s -ca-n\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca-n\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P t", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s c n t u ba ca.\n       \\<lbrakk>ba s; s -ca-n\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca-n\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               b s \\<and> s -c-n\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca-n\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P t", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma while_rule:\n \"\\<lbrakk>s -WHILE b DO c-n\\<rightarrow> t; P s; \\<And>s s'. \\<lbrakk>P s; b s; s -c-n\\<rightarrow> s' \\<rbrakk> \\<Longrightarrow> P s'\\<rbrakk>\n  \\<Longrightarrow> P t \\<and> \\<not>b t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s -WHILE b DO c-n\\<rightarrow> t; P s;\n     \\<And>s s'.\n        \\<lbrakk>P s; b s; s -c-n\\<rightarrow> s'\\<rbrakk>\n        \\<Longrightarrow> P s'\\<rbrakk>\n    \\<Longrightarrow> P t \\<and> \\<not> b t", "apply(drule while_lemma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P s;\n     \\<And>s s'.\n        \\<lbrakk>P s; b s; s -c-n\\<rightarrow> s'\\<rbrakk>\n        \\<Longrightarrow> P s'\\<rbrakk>\n    \\<Longrightarrow> WHILE b DO c = WHILE ?b DO ?c \\<and>\n                      ?P s \\<and>\n                      (\\<forall>s s'.\n                          ?P s \\<and>\n                          ?b s \\<and> s -?c-n\\<rightarrow>\n                          s' \\<longrightarrow>\n                          ?P s')\n 2. \\<lbrakk>P s;\n     \\<And>s s'.\n        \\<lbrakk>P s; b s; s -c-n\\<rightarrow> s'\\<rbrakk>\n        \\<Longrightarrow> P s';\n     ?P t \\<and> \\<not> ?b t\\<rbrakk>\n    \\<Longrightarrow> P t \\<and> \\<not> b t", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P s;\n     \\<And>s s'.\n        \\<lbrakk>P s; b s; s -c-n\\<rightarrow> s'\\<rbrakk>\n        \\<Longrightarrow> P s';\n     ?P t \\<and> \\<not> ?b t\\<rbrakk>\n    \\<Longrightarrow> P t \\<and> \\<not> b t\n 2. \\<lbrakk>P s;\n     \\<And>s s'.\n        \\<lbrakk>P s; b s; s -c-n\\<rightarrow> s'\\<rbrakk>\n        \\<Longrightarrow> P s'\\<rbrakk>\n    \\<Longrightarrow> WHILE b DO c = WHILE ?b DO ?c \\<and>\n                      ?P s \\<and>\n                      (\\<forall>s s'.\n                          ?P s \\<and>\n                          ?b s \\<and> s -?c-n\\<rightarrow>\n                          s' \\<longrightarrow>\n                          ?P s')", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P s;\n     \\<And>s s'.\n        \\<lbrakk>P s; b s; s -c-n\\<rightarrow> s'\\<rbrakk>\n        \\<Longrightarrow> P s'\\<rbrakk>\n    \\<Longrightarrow> WHILE b DO c = WHILE b DO ?c \\<and>\n                      P s \\<and>\n                      (\\<forall>s s'.\n                          P s \\<and>\n                          b s \\<and> s -?c-n\\<rightarrow>\n                          s' \\<longrightarrow>\n                          P s')", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}