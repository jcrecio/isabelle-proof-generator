{"file_name": "/home/qj213/afp-2021-10-22/thys/Abstract-Hoare-Logics/While/Lang.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Abstract-Hoare-Logics", "problem_names": ["lemma exec_Do_iff[iff]: \"(s -Do f\\<rightarrow> t) = (t \\<in> f s)\"", "lemma [iff]: \"(s -c;d\\<rightarrow> u) = (\\<exists>t. s -c\\<rightarrow> t \\<and> t -d\\<rightarrow> u)\"", "lemma [iff]: \"(s -IF b THEN c ELSE d\\<rightarrow> t) =\n              (s -if b s then c else d\\<rightarrow> t)\"", "lemma [iff]: \"(s -LOCAL f; c; g\\<rightarrow> u) = (\\<exists>t. f s -c\\<rightarrow> t \\<and> u = g s t)\"", "lemma unfold_while:\n \"(s -WHILE b DO c\\<rightarrow> u) =\n  (s -IF b THEN c;WHILE b DO c ELSE Do(\\<lambda>s. {s})\\<rightarrow> u)\"", "lemma while_lemma[rule_format]:\n\"s -w\\<rightarrow> t \\<Longrightarrow> \\<forall>b c. w = WHILE b DO c \\<and> P s \\<and>\n                    (\\<forall>s s'. P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow> P s') \\<longrightarrow> P t \\<and> \\<not>b t\"", "lemma while_rule:\n \"\\<lbrakk>s -WHILE b DO c\\<rightarrow> t; P s; \\<forall>s s'. P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow> P s'\\<rbrakk>\n  \\<Longrightarrow> P t \\<and> \\<not>b t\""], "translations": [["", "lemma exec_Do_iff[iff]: \"(s -Do f\\<rightarrow> t) = (t \\<in> f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -Do f\\<rightarrow> t) = (t \\<in> f s)", "by(auto elim: exec.cases intro:exec.intros)"], ["", "lemma [iff]: \"(s -c;d\\<rightarrow> u) = (\\<exists>t. s -c\\<rightarrow> t \\<and> t -d\\<rightarrow> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -c; d\\<rightarrow> u) =\n    (\\<exists>t. s -c\\<rightarrow> t \\<and> t -d\\<rightarrow> u)", "by(best elim: exec.cases intro:exec.intros)"], ["", "lemma [iff]: \"(s -IF b THEN c ELSE d\\<rightarrow> t) =\n              (s -if b s then c else d\\<rightarrow> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -IF b THEN c ELSE d\\<rightarrow> t) =\n    (s -if b s then c else d\\<rightarrow> t)", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>b s; s -IF b THEN c ELSE d\\<rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> s -c\\<rightarrow> t\n 2. \\<lbrakk>b s; s -c\\<rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> s -IF b THEN c ELSE d\\<rightarrow> t\n 3. \\<lbrakk>\\<not> b s; s -IF b THEN c ELSE d\\<rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> s -d\\<rightarrow> t\n 4. \\<lbrakk>\\<not> b s; s -d\\<rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> s -IF b THEN c ELSE d\\<rightarrow> t", "apply(blast elim: exec.cases intro:exec.intros)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"(s -LOCAL f; c; g\\<rightarrow> u) = (\\<exists>t. f s -c\\<rightarrow> t \\<and> u = g s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -LOCAL f; c; g\\<rightarrow> u) =\n    (\\<exists>t. f s -c\\<rightarrow> t \\<and> u = g s t)", "by(fastforce elim: exec.cases intro:exec.intros)"], ["", "lemma unfold_while:\n \"(s -WHILE b DO c\\<rightarrow> u) =\n  (s -IF b THEN c;WHILE b DO c ELSE Do(\\<lambda>s. {s})\\<rightarrow> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s -WHILE b DO c\\<rightarrow> u) =\n    (s -IF b THEN c; WHILE b DO c ELSE Do (\\<lambda>s. {s})\\<rightarrow> u)", "by(auto elim: exec.cases intro:exec.intros split:if_split_asm)"], ["", "lemma while_lemma[rule_format]:\n\"s -w\\<rightarrow> t \\<Longrightarrow> \\<forall>b c. w = WHILE b DO c \\<and> P s \\<and>\n                    (\\<forall>s s'. P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow> P s') \\<longrightarrow> P t \\<and> \\<not>b t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s -w\\<rightarrow> t \\<Longrightarrow>\n    \\<forall>b c.\n       w = WHILE b DO c \\<and>\n       P s \\<and>\n       (\\<forall>s s'.\n           P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n           P s') \\<longrightarrow>\n       P t \\<and> \\<not> b t", "apply(erule exec.induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>t f s.\n       t \\<in> f s \\<Longrightarrow>\n       \\<forall>b c.\n          Do f = WHILE b DO c \\<and>\n          P s \\<and>\n          (\\<forall>s s'.\n              P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n              P s') \\<longrightarrow>\n          P t \\<and> \\<not> b t\n 2. \\<And>s0 c1 s1 c2 s2.\n       \\<lbrakk>s0 -c1\\<rightarrow> s1;\n        \\<forall>b c.\n           c1 = WHILE b DO c \\<and>\n           P s0 \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P s1 \\<and> \\<not> b s1;\n        s1 -c2\\<rightarrow> s2;\n        \\<forall>b c.\n           c2 = WHILE b DO c \\<and>\n           P s1 \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P s2 \\<and> \\<not> b s2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b c.\n                            (c1; c2) = WHILE b DO c \\<and>\n                            P s0 \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -c\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P s2 \\<and> \\<not> b s2\n 3. \\<And>b s c1 t c2.\n       \\<lbrakk>b s; s -c1\\<rightarrow> t;\n        \\<forall>b c.\n           c1 = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ba c.\n                            IF b THEN c1 ELSE c2 = WHILE ba DO c \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                ba s \\<and> s -c\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P t \\<and> \\<not> ba t\n 4. \\<And>b s c2 t c1.\n       \\<lbrakk>\\<not> b s; s -c2\\<rightarrow> t;\n        \\<forall>b c.\n           c2 = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ba c.\n                            IF b THEN c1 ELSE c2 = WHILE ba DO c \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                ba s \\<and> s -c\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P t \\<and> \\<not> ba t\n 5. \\<And>b s c.\n       \\<not> b s \\<Longrightarrow>\n       \\<forall>ba ca.\n          WHILE b DO c = WHILE ba DO ca \\<and>\n          P s \\<and>\n          (\\<forall>s s'.\n              P s \\<and> ba s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n              P s') \\<longrightarrow>\n          P s \\<and> \\<not> ba s\n 6. \\<And>b s c t u.\n       \\<lbrakk>b s; s -c\\<rightarrow> t;\n        \\<forall>b ca.\n           c = WHILE b DO ca \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE b DO c\\<rightarrow> u;\n        \\<forall>ba ca.\n           WHILE b DO c = WHILE ba DO ca \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and>\n               ba s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> ba u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ba ca.\n                            WHILE b DO c = WHILE ba DO ca \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                ba s \\<and> s -ca\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P u \\<and> \\<not> ba u\n 7. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<forall>b ca.\n           c = WHILE b DO ca \\<and>\n           P (f s) \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b ca.\n                            LOCAL f; c; g = WHILE b DO ca \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -ca\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P (g s t) \\<and> \\<not> b (g s t)", "apply clarify+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s c t u ba ca.\n       \\<lbrakk>ba s; s -ca\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P u \\<and> \\<not> ba u\n 2. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<forall>b ca.\n           c = WHILE b DO ca \\<and>\n           P (f s) \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b ca.\n                            LOCAL f; c; g = WHILE b DO ca \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -ca\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P (g s t) \\<and> \\<not> b (g s t)", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f s c t g.\n       \\<lbrakk>f s -c\\<rightarrow> t;\n        \\<forall>b ca.\n           c = WHILE b DO ca \\<and>\n           P (f s) \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b ca.\n                            LOCAL f; c; g = WHILE b DO ca \\<and>\n                            P s \\<and>\n                            (\\<forall>s s'.\n                                P s \\<and>\n                                b s \\<and> s -ca\\<rightarrow>\n                                s' \\<longrightarrow>\n                                P s') \\<longrightarrow>\n                            P (g s t) \\<and> \\<not> b (g s t)\n 2. \\<And>b s c t u ba ca.\n       \\<lbrakk>ba s; s -ca\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P u \\<and> \\<not> ba u", "apply clarify+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s c t u ba ca.\n       \\<lbrakk>ba s; s -ca\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P u \\<and> \\<not> ba u", "apply(subgoal_tac \"P t\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s c t u ba ca.\n       \\<lbrakk>ba s; s -ca\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n           P s';\n        P t\\<rbrakk>\n       \\<Longrightarrow> P u \\<and> \\<not> ba u\n 2. \\<And>b s c t u ba ca.\n       \\<lbrakk>ba s; s -ca\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P t", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s c t u ba ca.\n       \\<lbrakk>ba s; s -ca\\<rightarrow> t;\n        \\<forall>b c.\n           ca = WHILE b DO c \\<and>\n           P s \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P t \\<and> \\<not> b t;\n        t -WHILE ba DO ca\\<rightarrow> u;\n        \\<forall>b c.\n           WHILE ba DO ca = WHILE b DO c \\<and>\n           P t \\<and>\n           (\\<forall>s s'.\n               P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n               P s') \\<longrightarrow>\n           P u \\<and> \\<not> b u;\n        P s;\n        \\<forall>s s'.\n           P s \\<and> ba s \\<and> s -ca\\<rightarrow> s' \\<longrightarrow>\n           P s'\\<rbrakk>\n       \\<Longrightarrow> P t", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma while_rule:\n \"\\<lbrakk>s -WHILE b DO c\\<rightarrow> t; P s; \\<forall>s s'. P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow> P s'\\<rbrakk>\n  \\<Longrightarrow> P t \\<and> \\<not>b t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s -WHILE b DO c\\<rightarrow> t; P s;\n     \\<forall>s s'.\n        P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n        P s'\\<rbrakk>\n    \\<Longrightarrow> P t \\<and> \\<not> b t", "apply(drule while_lemma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P s;\n     \\<forall>s s'.\n        P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n        P s'\\<rbrakk>\n    \\<Longrightarrow> WHILE b DO c = WHILE ?b DO ?c \\<and>\n                      ?P s \\<and>\n                      (\\<forall>s s'.\n                          ?P s \\<and>\n                          ?b s \\<and> s -?c\\<rightarrow>\n                          s' \\<longrightarrow>\n                          ?P s')\n 2. \\<lbrakk>P s;\n     \\<forall>s s'.\n        P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow> P s';\n     ?P t \\<and> \\<not> ?b t\\<rbrakk>\n    \\<Longrightarrow> P t \\<and> \\<not> b t", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P s;\n     \\<forall>s s'.\n        P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow> P s';\n     ?P t \\<and> \\<not> ?b t\\<rbrakk>\n    \\<Longrightarrow> P t \\<and> \\<not> b t\n 2. \\<lbrakk>P s;\n     \\<forall>s s'.\n        P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n        P s'\\<rbrakk>\n    \\<Longrightarrow> WHILE b DO c = WHILE ?b DO ?c \\<and>\n                      ?P s \\<and>\n                      (\\<forall>s s'.\n                          ?P s \\<and>\n                          ?b s \\<and> s -?c\\<rightarrow>\n                          s' \\<longrightarrow>\n                          ?P s')", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P s;\n     \\<forall>s s'.\n        P s \\<and> b s \\<and> s -c\\<rightarrow> s' \\<longrightarrow>\n        P s'\\<rbrakk>\n    \\<Longrightarrow> WHILE b DO c = WHILE b DO ?c \\<and>\n                      P s \\<and>\n                      (\\<forall>s s'.\n                          P s \\<and>\n                          b s \\<and> s -?c\\<rightarrow> s' \\<longrightarrow>\n                          P s')", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}