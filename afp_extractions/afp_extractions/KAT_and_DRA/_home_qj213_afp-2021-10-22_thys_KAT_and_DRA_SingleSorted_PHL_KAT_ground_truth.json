{"file_name": "/home/qj213/afp-2021-10-22/thys/KAT_and_DRA/SingleSorted/PHL_KAT.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/KAT_and_DRA", "problem_names": ["lemma at_phl_cond: \nassumes \"\\<alpha> u \\<cdot> \\<tau> v \\<cdot> x \\<le> x \\<cdot> z\" and \"\\<alpha> u \\<cdot> \\<tau> w \\<cdot> y \\<le> y \\<cdot> z\" \nshows \"\\<alpha> u \\<cdot> (\\<tau> v \\<cdot> x + \\<tau> w \\<cdot> y) \\<le> (\\<tau> v \\<cdot> x + \\<tau> w \\<cdot> y) \\<cdot> z\"", "lemma ht_at_phl_cond: \nassumes \"\\<lbrace>\\<alpha> u \\<cdot> \\<tau> v\\<rbrace> x \\<lbrace>z\\<rbrace>\" and \"\\<lbrace>\\<alpha> u \\<cdot> \\<tau> w\\<rbrace> y \\<lbrace>z\\<rbrace>\" \nshows \"\\<lbrace>\\<alpha> u\\<rbrace> (\\<tau> v \\<cdot> x + \\<tau> w \\<cdot> y) \\<lbrace>z\\<rbrace>\"", "lemma  ht_at_phl_export1: \nassumes \"\\<lbrace>\\<alpha> x \\<cdot> \\<tau> y\\<rbrace> z \\<lbrace>w\\<rbrace>\"\nshows \"\\<lbrace>\\<alpha> x\\<rbrace> \\<tau> y \\<cdot> z \\<lbrace>w\\<rbrace>\"", "lemma ht_at_phl_export2: \nassumes \"\\<lbrace>x\\<rbrace> y \\<lbrace>\\<alpha> z\\<rbrace>\"\nshows \"\\<lbrace>x\\<rbrace> y \\<cdot> \\<tau> w \\<lbrace>\\<alpha> z \\<cdot> \\<tau> w\\<rbrace>\"", "lemma at_phl_while:  \nassumes \"\\<alpha> p \\<cdot> \\<tau> s \\<cdot> x \\<le> x \\<cdot> \\<alpha> p\"\nshows \"\\<alpha> p \\<cdot> (it (\\<tau> s \\<cdot> x) \\<cdot> \\<tau> w)  \\<le> it (\\<tau> s \\<cdot> x) \\<cdot> \\<tau> w \\<cdot> (\\<alpha> p \\<cdot> \\<tau> w)\"", "lemma ht_at_phl_while:  \nassumes \"\\<lbrace>\\<alpha> p \\<cdot> \\<tau> s\\<rbrace> x \\<lbrace>\\<alpha> p\\<rbrace>\"\nshows \"\\<lbrace>\\<alpha> p\\<rbrace> it (\\<tau> s \\<cdot> x) \\<cdot> \\<tau> w \\<lbrace>\\<alpha> p \\<cdot> \\<tau> w\\<rbrace>\"", "lemma phl_n_cond: \n  \"\\<lbrace>n v \\<cdot> n w\\<rbrace> x \\<lbrace>z\\<rbrace> \\<Longrightarrow> \\<lbrace>n v \\<cdot> t w\\<rbrace> y \\<lbrace>z\\<rbrace> \\<Longrightarrow> \\<lbrace>n v\\<rbrace> n w \\<cdot> x + t w \\<cdot> y \\<lbrace>z\\<rbrace>\"", "lemma phl_test_cond: \n  assumes \"test p\" and \"test b\"\n  and \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>q\\<rbrace>\" and \"\\<lbrace>p \\<cdot> !b\\<rbrace> y \\<lbrace>q\\<rbrace>\" \n  shows \"\\<lbrace>p\\<rbrace> b \\<cdot> x + !b \\<cdot> y \\<lbrace>q\\<rbrace>\"", "lemma phl_cond_syntax: \n  assumes \"test p\" and \"test b\"\n  and \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>q\\<rbrace>\" and \"\\<lbrace>p \\<cdot> !b\\<rbrace> y \\<lbrace>q\\<rbrace>\" \n  shows \"\\<lbrace>p\\<rbrace> if b then x else y fi \\<lbrace>q\\<rbrace>\"", "lemma phl_cond_syntax_iff: \n  assumes \"test p\" and \"test b\"\n  shows \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>q\\<rbrace> \\<and> \\<lbrace>p \\<cdot> !b\\<rbrace> y \\<lbrace>q\\<rbrace> \\<longleftrightarrow> \\<lbrace>p\\<rbrace> if b then x else y fi \\<lbrace>q\\<rbrace>\"", "lemma  phl_n_while: \n  assumes \"\\<lbrace>n x \\<cdot>  n y\\<rbrace> z \\<lbrace>n x\\<rbrace>\"\n  shows \"\\<lbrace>n x\\<rbrace> (n y \\<cdot> z)\\<^sup>\\<dagger> \\<cdot> t y \\<lbrace>n x \\<cdot> t y\\<rbrace>\"", "lemma  phl_n_while: \n  assumes \"\\<lbrace>n x \\<cdot>  n y\\<rbrace> z \\<lbrace>n x\\<rbrace>\"\n  shows \"\\<lbrace>n x\\<rbrace> (n y \\<cdot> z)\\<^sup>\\<star> \\<cdot> t y \\<lbrace>n x \\<cdot> t y\\<rbrace>\"", "lemma phl_test_while: \n  assumes \"test p\" and \"test b\" \n  and \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>p\\<rbrace>\"\n  shows \"\\<lbrace>p\\<rbrace> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b \\<lbrace>p \\<cdot> !b\\<rbrace>\"", "lemma phl_while_syntax: \n  assumes \"test p\" and \"test b\" and \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>p\\<rbrace>\"\n  shows \"\\<lbrace>p\\<rbrace> while b do x od \\<lbrace>p \\<cdot> !b\\<rbrace>\"", "lemma (in kat) \"test p \\<Longrightarrow> p \\<cdot> x\\<^sup>\\<star> \\<le> x\\<^sup>\\<star> \\<cdot> p \\<Longrightarrow> p \\<cdot> x \\<le> x \\<cdot> p\"", "lemma (in kat) \"test p \\<Longrightarrow> test b \\<Longrightarrow> p \\<cdot> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b \\<le> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b \\<cdot> p \\<cdot> !b \\<Longrightarrow> p \\<cdot> b \\<cdot> x \\<le> x \\<cdot> p\"", "lemma (in kat) \"test p \\<Longrightarrow> test q \\<Longrightarrow>  p \\<cdot> x \\<cdot> y \\<le> x \\<cdot> y \\<cdot> q \\<Longrightarrow>(\\<exists>r. test r \\<and> p \\<cdot> x \\<le> x \\<cdot> r \\<and> r \\<cdot> y  \\<le> y \\<cdot> q)\"", "lemma (in kat) \"test p \\<Longrightarrow> test q \\<Longrightarrow>  p \\<cdot> x \\<cdot> y \\<cdot> !q = 0 \\<Longrightarrow>(\\<exists>r. test r \\<and> p \\<cdot> x \\<cdot> !r = 0 \\<and> r \\<cdot> y \\<cdot> !q = 0)\"", "lemma (in near_dioid_one) tt_skip: \"\\<lparr>p\\<rparr> 1 \\<lparr>p\\<rparr>\"", "lemma (in near_dioid) tt_cons1: \"(\\<exists>q'. \\<lparr>p\\<rparr> x \\<lparr>q'\\<rparr> \\<and> q'\\<le> q) \\<longleftrightarrow> \\<lparr>p\\<rparr> x \\<lparr>q\\<rparr>\"", "lemma (in near_dioid) tt_cons2:  \"(\\<exists>p'. \\<lparr>p'\\<rparr> x \\<lparr>q\\<rparr> \\<and> p \\<le> p') \\<longleftrightarrow> \\<lparr>p\\<rparr> x \\<lparr>q\\<rparr>\"", "lemma (in near_dioid) tt_seq: \"(\\<exists>r. \\<lparr>p\\<rparr> x \\<lparr>r\\<rparr> \\<and> \\<lparr>r\\<rparr> y \\<lparr>q\\<rparr>) \\<longleftrightarrow> \\<lparr>p\\<rparr> x \\<cdot> y \\<lparr>q\\<rparr>\"", "lemma (in dioid) tt_cond: \"\\<lparr>p \\<cdot> v\\<rparr> x \\<lparr>q\\<rparr> \\<and> \\<lparr>p \\<cdot> w\\<rparr> y \\<lparr>q\\<rparr> \\<longleftrightarrow> \\<lparr>p\\<rparr> (v \\<cdot> x + w \\<cdot> y)\\<lparr>q\\<rparr>\"", "lemma (in kleene_algebra) tt_while: \"w \\<le> 1 \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr> x \\<lparr>p\\<rparr> \\<Longrightarrow> \\<lparr>p\\<rparr> (v \\<cdot> x)\\<^sup>\\<star> \\<cdot> w \\<lparr>p\\<rparr>\"", "lemma (in kat) tt_while: \"test v \\<Longrightarrow>  \\<lparr>p\\<rparr> (v \\<cdot> x)\\<^sup>\\<star> \\<cdot> !v \\<lparr>p\\<rparr> \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr> x \\<lparr>p\\<rparr>\"", "lemma (in kat) tt_while: \"test v \\<Longrightarrow>  \\<lparr>p\\<rparr> (v \\<cdot> x)\\<^sup>\\<star>  \\<lparr>p\\<rparr> \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr> x \\<lparr>p\\<rparr>\"", "lemma (in kat) \"test y \\<Longrightarrow> (\\<exists> z. test z \\<and> z \\<cdot> x \\<cdot> !y = 0)\""], "translations": [["", "lemma at_phl_cond: \nassumes \"\\<alpha> u \\<cdot> \\<tau> v \\<cdot> x \\<le> x \\<cdot> z\" and \"\\<alpha> u \\<cdot> \\<tau> w \\<cdot> y \\<le> y \\<cdot> z\" \nshows \"\\<alpha> u \\<cdot> (\\<tau> v \\<cdot> x + \\<tau> w \\<cdot> y) \\<le> (\\<tau> v \\<cdot> x + \\<tau> w \\<cdot> y) \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<alpha>\n              u\\<rbrace>\\<tau> v \\<cdot> x +\n                        \\<tau> w \\<cdot> y\\<lbrace>z\\<rbrace>", "using assms as_left_supdistl at_pres phl_cond"], ["proof (prove)\nusing this:\n  \\<lbrace>\\<alpha> u \\<cdot> \\<tau> v\\<rbrace>x\\<lbrace>z\\<rbrace>\n  \\<lbrace>\\<alpha> u \\<cdot> \\<tau> w\\<rbrace>y\\<lbrace>z\\<rbrace>\n  \\<alpha> ?x \\<cdot> (?y + ?z)\n  \\<le> \\<alpha> ?x \\<cdot> ?y + \\<alpha> ?x \\<cdot> ?z\n  \\<alpha> ?x \\<cdot> \\<tau> ?y\n  \\<le> \\<tau> ?y \\<cdot> \\<alpha> ?x \\<cdot> \\<tau> ?y\n  \\<lbrakk>?u \\<cdot> ?v \\<le> ?v \\<cdot> ?u \\<cdot> ?v;\n   ?u \\<cdot> ?w \\<le> ?w \\<cdot> ?u \\<cdot> ?w;\n   \\<And>x y. ?u \\<cdot> (x + y) \\<le> ?u \\<cdot> x + ?u \\<cdot> y;\n   \\<lbrace>?u \\<cdot> ?v\\<rbrace>?x\\<lbrace>?z\\<rbrace>;\n   \\<lbrace>?u \\<cdot> ?w\\<rbrace>?y\\<lbrace>?z\\<rbrace>\\<rbrakk>\n  \\<Longrightarrow> \\<lbrace>?u\\<rbrace>?v \\<cdot> ?x +\n  ?w \\<cdot> ?y\\<lbrace>?z\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>\\<alpha>\n              u\\<rbrace>\\<tau> v \\<cdot> x +\n                        \\<tau> w \\<cdot> y\\<lbrace>z\\<rbrace>", "by blast"], ["", "lemma ht_at_phl_cond: \nassumes \"\\<lbrace>\\<alpha> u \\<cdot> \\<tau> v\\<rbrace> x \\<lbrace>z\\<rbrace>\" and \"\\<lbrace>\\<alpha> u \\<cdot> \\<tau> w\\<rbrace> y \\<lbrace>z\\<rbrace>\" \nshows \"\\<lbrace>\\<alpha> u\\<rbrace> (\\<tau> v \\<cdot> x + \\<tau> w \\<cdot> y) \\<lbrace>z\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<alpha>\n              u\\<rbrace>\\<tau> v \\<cdot> x +\n                        \\<tau> w \\<cdot> y\\<lbrace>z\\<rbrace>", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrace>\\<alpha> u \\<cdot> \\<tau> v\\<rbrace>x\\<lbrace>z\\<rbrace>\n  \\<lbrace>\\<alpha> u \\<cdot> \\<tau> w\\<rbrace>y\\<lbrace>z\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>\\<alpha>\n              u\\<rbrace>\\<tau> v \\<cdot> x +\n                        \\<tau> w \\<cdot> y\\<lbrace>z\\<rbrace>", "by (fact at_phl_cond)"], ["", "lemma  ht_at_phl_export1: \nassumes \"\\<lbrace>\\<alpha> x \\<cdot> \\<tau> y\\<rbrace> z \\<lbrace>w\\<rbrace>\"\nshows \"\\<lbrace>\\<alpha> x\\<rbrace> \\<tau> y \\<cdot> z \\<lbrace>w\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<alpha> x\\<rbrace>\\<tau> y \\<cdot> z\\<lbrace>w\\<rbrace>", "by (simp add: assms at_pres ht_phl_export1)"], ["", "lemma ht_at_phl_export2: \nassumes \"\\<lbrace>x\\<rbrace> y \\<lbrace>\\<alpha> z\\<rbrace>\"\nshows \"\\<lbrace>x\\<rbrace> y \\<cdot> \\<tau> w \\<lbrace>\\<alpha> z \\<cdot> \\<tau> w\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>x\\<rbrace>y \\<cdot>\n                       \\<tau> w\\<lbrace>\\<alpha> z \\<cdot> \\<tau> w\\<rbrace>", "using assms at_pres ht_phl_export2"], ["proof (prove)\nusing this:\n  \\<lbrace>x\\<rbrace>y\\<lbrace>\\<alpha> z\\<rbrace>\n  \\<alpha> ?x \\<cdot> \\<tau> ?y\n  \\<le> \\<tau> ?y \\<cdot> \\<alpha> ?x \\<cdot> \\<tau> ?y\n  \\<lbrakk>?z \\<cdot> ?w \\<le> ?w \\<cdot> ?z \\<cdot> ?w;\n   \\<lbrace>?x\\<rbrace>?y\\<lbrace>?z\\<rbrace>\\<rbrakk>\n  \\<Longrightarrow> \\<lbrace>?x\\<rbrace>?y \\<cdot>\n  ?w\\<lbrace>?z \\<cdot> ?w\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>x\\<rbrace>y \\<cdot>\n                       \\<tau> w\\<lbrace>\\<alpha> z \\<cdot> \\<tau> w\\<rbrace>", "by auto"], ["", "end"], ["", "class at_it_pre_dioid = at_pre_dioid + it_pre_dioid\nbegin"], ["", "lemma at_phl_while:  \nassumes \"\\<alpha> p \\<cdot> \\<tau> s \\<cdot> x \\<le> x \\<cdot> \\<alpha> p\"\nshows \"\\<alpha> p \\<cdot> (it (\\<tau> s \\<cdot> x) \\<cdot> \\<tau> w)  \\<le> it (\\<tau> s \\<cdot> x) \\<cdot> \\<tau> w \\<cdot> (\\<alpha> p \\<cdot> \\<tau> w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<alpha>\n              p\\<rbrace>it (\\<tau> s \\<cdot> x) \\<cdot>\n                        \\<tau>\n                         w\\<lbrace>\\<alpha> p \\<cdot> \\<tau> w\\<rbrace>", "by (simp add: assms at_pres it_simr phl_while)"], ["", "lemma ht_at_phl_while:  \nassumes \"\\<lbrace>\\<alpha> p \\<cdot> \\<tau> s\\<rbrace> x \\<lbrace>\\<alpha> p\\<rbrace>\"\nshows \"\\<lbrace>\\<alpha> p\\<rbrace> it (\\<tau> s \\<cdot> x) \\<cdot> \\<tau> w \\<lbrace>\\<alpha> p \\<cdot> \\<tau> w\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<alpha>\n              p\\<rbrace>it (\\<tau> s \\<cdot> x) \\<cdot>\n                        \\<tau>\n                         w\\<lbrace>\\<alpha> p \\<cdot> \\<tau> w\\<rbrace>", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrace>\\<alpha> p \\<cdot> \\<tau> s\\<rbrace>x\\<lbrace>\\<alpha> p\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>\\<alpha>\n              p\\<rbrace>it (\\<tau> s \\<cdot> x) \\<cdot>\n                        \\<tau>\n                         w\\<lbrace>\\<alpha> p \\<cdot> \\<tau> w\\<rbrace>", "by (fact at_phl_while)"], ["", "end"], ["", "text \\<open>The following statements show that pre-Conway algebras, Kleene algebras with tests\nand demonic refinement algebras form pre-dioids with test and assertions. This automatically\ngenerates propositional Hoare logics for these structures.\\<close>"], ["", "sublocale test_pre_dioid_zerol < phl: at_pre_dioid where alpha = t and tau = t"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.at_pre_dioid (+) (\\<cdot>) (1::'a) (\\<le>) (<) t t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. t x \\<cdot> t y \\<le> t y \\<cdot> t x \\<cdot> t y\n 2. \\<And>x y z. t x \\<cdot> (y + z) \\<le> t x \\<cdot> y + t x \\<cdot> z", "show \"\\<And>x y. t x \\<cdot> t y \\<le> t y \\<cdot> t x \\<cdot> t y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. t x \\<cdot> t y \\<le> t y \\<cdot> t x \\<cdot> t y", "by (simp add: n_mult_comm mult_assoc)"], ["proof (state)\nthis:\n  t ?x1 \\<cdot> t ?y1 \\<le> t ?y1 \\<cdot> t ?x1 \\<cdot> t ?y1\n\ngoal (1 subgoal):\n 1. \\<And>x y z. t x \\<cdot> (y + z) \\<le> t x \\<cdot> y + t x \\<cdot> z", "show \"\\<And>x y z. t x \\<cdot> (y + z) \\<le> t x \\<cdot> y + t x \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z. t x \\<cdot> (y + z) \\<le> t x \\<cdot> y + t x \\<cdot> z", "by (simp add: n_left_distrib)"], ["proof (state)\nthis:\n  t ?x1 \\<cdot> (?y1 + ?z1) \\<le> t ?x1 \\<cdot> ?y1 + t ?x1 \\<cdot> ?z1\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale test_pre_conway < phl: at_it_pre_dioid where alpha = t and tau = t and it = dagger"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.at_it_pre_dioid (+) (\\<cdot>) (1::'a) (\\<le>) (<) dagger t t", ".."], ["", "sublocale kat_zerol < phl: at_it_pre_dioid where alpha = t and tau = t and it = star"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.at_it_pre_dioid (+) (\\<cdot>) (1::'a) (\\<le>) (<) star t t", ".."], ["", "context test_pre_dioid_zerol begin"], ["", "abbreviation if_then_else :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" (\"if _ then _ else _ fi\" [64,64,64] 63) where\n  \"if p then x else y fi \\<equiv> (p \\<cdot> x + !p \\<cdot> y)\""], ["", "lemma phl_n_cond: \n  \"\\<lbrace>n v \\<cdot> n w\\<rbrace> x \\<lbrace>z\\<rbrace> \\<Longrightarrow> \\<lbrace>n v \\<cdot> t w\\<rbrace> y \\<lbrace>z\\<rbrace> \\<Longrightarrow> \\<lbrace>n v\\<rbrace> n w \\<cdot> x + t w \\<cdot> y \\<lbrace>z\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>!v \\<cdot> !w\\<rbrace>x\\<lbrace>z\\<rbrace>;\n     \\<lbrace>!v \\<cdot> t w\\<rbrace>y\\<lbrace>z\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>!v\\<rbrace>!w \\<cdot> x +\n    t w \\<cdot> y\\<lbrace>z\\<rbrace>", "by (metis phl.ht_at_phl_cond t_n_closed)"], ["", "lemma phl_test_cond: \n  assumes \"test p\" and \"test b\"\n  and \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>q\\<rbrace>\" and \"\\<lbrace>p \\<cdot> !b\\<rbrace> y \\<lbrace>q\\<rbrace>\" \n  shows \"\\<lbrace>p\\<rbrace> b \\<cdot> x + !b \\<cdot> y \\<lbrace>q\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>", "by (metis assms local.test_double_comp_var phl_n_cond)"], ["", "lemma phl_cond_syntax: \n  assumes \"test p\" and \"test b\"\n  and \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>q\\<rbrace>\" and \"\\<lbrace>p \\<cdot> !b\\<rbrace> y \\<lbrace>q\\<rbrace>\" \n  shows \"\\<lbrace>p\\<rbrace> if b then x else y fi \\<lbrace>q\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>", "using assms"], ["proof (prove)\nusing this:\n  test p\n  test b\n  \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace>\n  \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>", "by (fact phl_test_cond)"], ["", "lemma phl_cond_syntax_iff: \n  assumes \"test p\" and \"test b\"\n  shows \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>q\\<rbrace> \\<and> \\<lbrace>p \\<cdot> !b\\<rbrace> y \\<lbrace>q\\<rbrace> \\<longleftrightarrow> \\<lbrace>p\\<rbrace> if b then x else y fi \\<lbrace>q\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n     \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>) =\n    \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>\n 2. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "assume a: \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>q\\<rbrace> \\<and> \\<lbrace>p \\<cdot> !b\\<rbrace> y \\<lbrace>q\\<rbrace>\""], ["proof (state)\nthis:\n  \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n  \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>\n\ngoal (2 subgoals):\n 1. \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>\n 2. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "show \"\\<lbrace>p\\<rbrace> if b then x else y fi \\<lbrace>q\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>", "using a assms(1) assms(2) phl_test_cond"], ["proof (prove)\nusing this:\n  \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n  \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>\n  test p\n  test b\n  \\<lbrakk>test ?p; test ?b;\n   \\<lbrace>?p \\<cdot> ?b\\<rbrace>?x\\<lbrace>?q\\<rbrace>;\n   \\<lbrace>?p \\<cdot> !?b\\<rbrace>?y\\<lbrace>?q\\<rbrace>\\<rbrakk>\n  \\<Longrightarrow> \\<lbrace>?p\\<rbrace>if ?b then ?x else ?y fi\\<lbrace>?q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>", "by auto"], ["proof (state)\nthis:\n  \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "assume a: \"\\<lbrace>p\\<rbrace> if b then x else y fi \\<lbrace>q\\<rbrace>\""], ["proof (state)\nthis:\n  \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"p \\<cdot> b \\<cdot> x \\<le> b \\<cdot> p \\<cdot> (b \\<cdot> x + !b \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<cdot> b \\<cdot> x \\<le> b \\<cdot> p \\<cdot> (if b then x else y fi)", "by (metis assms(1) assms(2) local.mult.assoc local.subdistl local.test_preserve)"], ["proof (state)\nthis:\n  p \\<cdot> b \\<cdot> x \\<le> b \\<cdot> p \\<cdot> (if b then x else y fi)\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "also"], ["proof (state)\nthis:\n  p \\<cdot> b \\<cdot> x \\<le> b \\<cdot> p \\<cdot> (if b then x else y fi)\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"... \\<le> b \\<cdot> (b \\<cdot> x + !b \\<cdot> y) \\<cdot> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<cdot> p \\<cdot> (if b then x else y fi)\n    \\<le> b \\<cdot> (if b then x else y fi) \\<cdot> q", "using a local.mult_isol mult_assoc"], ["proof (prove)\nusing this:\n  \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<cdot> ?x \\<le> ?z \\<cdot> ?y\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. b \\<cdot> p \\<cdot> (if b then x else y fi)\n    \\<le> b \\<cdot> (if b then x else y fi) \\<cdot> q", "by auto"], ["proof (state)\nthis:\n  b \\<cdot> p \\<cdot> (if b then x else y fi)\n  \\<le> b \\<cdot> (if b then x else y fi) \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "also"], ["proof (state)\nthis:\n  b \\<cdot> p \\<cdot> (if b then x else y fi)\n  \\<le> b \\<cdot> (if b then x else y fi) \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"...  = (b \\<cdot> b \\<cdot> x + b \\<cdot> !b \\<cdot> y) \\<cdot> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<cdot> (if b then x else y fi) \\<cdot> q =\n    (b \\<cdot> b \\<cdot> x + b \\<cdot> !b \\<cdot> y) \\<cdot> q", "using assms(2) local.n_left_distrib_var mult_assoc"], ["proof (prove)\nusing this:\n  test b\n  test ?p \\<Longrightarrow>\n  ?p \\<cdot> (?x + ?y) = ?p \\<cdot> ?x + ?p \\<cdot> ?y\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. b \\<cdot> (if b then x else y fi) \\<cdot> q =\n    (b \\<cdot> b \\<cdot> x + b \\<cdot> !b \\<cdot> y) \\<cdot> q", "by presburger"], ["proof (state)\nthis:\n  b \\<cdot> (if b then x else y fi) \\<cdot> q =\n  (b \\<cdot> b \\<cdot> x + b \\<cdot> !b \\<cdot> y) \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "also"], ["proof (state)\nthis:\n  b \\<cdot> (if b then x else y fi) \\<cdot> q =\n  (b \\<cdot> b \\<cdot> x + b \\<cdot> !b \\<cdot> y) \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"... = b \\<cdot> x \\<cdot> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<cdot> b \\<cdot> x + b \\<cdot> !b \\<cdot> y) \\<cdot> q =\n    b \\<cdot> x \\<cdot> q", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  (b \\<cdot> b \\<cdot> x + b \\<cdot> !b \\<cdot> y) \\<cdot> q =\n  b \\<cdot> x \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "finally"], ["proof (chain)\npicking this:\n  p \\<cdot> b \\<cdot> x \\<le> b \\<cdot> x \\<cdot> q", "have b: \"p \\<cdot> b \\<cdot> x \\<le> x \\<cdot> q\""], ["proof (prove)\nusing this:\n  p \\<cdot> b \\<cdot> x \\<le> b \\<cdot> x \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace>", "by (metis assms(2) local.order_trans local.test_restrictl mult_assoc)"], ["proof (state)\nthis:\n  \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"p \\<cdot> !b \\<cdot> y = !b \\<cdot> p \\<cdot> !b \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<cdot> !b \\<cdot> y = !b \\<cdot> p \\<cdot> !b \\<cdot> y", "by (simp add: assms(1) assms(2) local.test_preserve)"], ["proof (state)\nthis:\n  p \\<cdot> !b \\<cdot> y = !b \\<cdot> p \\<cdot> !b \\<cdot> y\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "also"], ["proof (state)\nthis:\n  p \\<cdot> !b \\<cdot> y = !b \\<cdot> p \\<cdot> !b \\<cdot> y\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"... \\<le> !b \\<cdot> p \\<cdot> (b \\<cdot> x + !b \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. !b \\<cdot> p \\<cdot> !b \\<cdot> y\n    \\<le> !b \\<cdot> p \\<cdot> (if b then x else y fi)", "by (simp add: local.mult_isol mult_assoc)"], ["proof (state)\nthis:\n  !b \\<cdot> p \\<cdot> !b \\<cdot> y\n  \\<le> !b \\<cdot> p \\<cdot> (if b then x else y fi)\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "also"], ["proof (state)\nthis:\n  !b \\<cdot> p \\<cdot> !b \\<cdot> y\n  \\<le> !b \\<cdot> p \\<cdot> (if b then x else y fi)\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"... \\<le> !b \\<cdot> (b \\<cdot> x + !b \\<cdot> y) \\<cdot> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. !b \\<cdot> p \\<cdot> (if b then x else y fi)\n    \\<le> !b \\<cdot> (if b then x else y fi) \\<cdot> q", "using a local.mult_isol mult_assoc"], ["proof (prove)\nusing this:\n  \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace>\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<cdot> ?x \\<le> ?z \\<cdot> ?y\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. !b \\<cdot> p \\<cdot> (if b then x else y fi)\n    \\<le> !b \\<cdot> (if b then x else y fi) \\<cdot> q", "by auto"], ["proof (state)\nthis:\n  !b \\<cdot> p \\<cdot> (if b then x else y fi)\n  \\<le> !b \\<cdot> (if b then x else y fi) \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "also"], ["proof (state)\nthis:\n  !b \\<cdot> p \\<cdot> (if b then x else y fi)\n  \\<le> !b \\<cdot> (if b then x else y fi) \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"... = (!b \\<cdot> b \\<cdot> x + !b \\<cdot> !b \\<cdot> y) \\<cdot> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. !b \\<cdot> (if b then x else y fi) \\<cdot> q =\n    (!b \\<cdot> b \\<cdot> x + !b \\<cdot> !b \\<cdot> y) \\<cdot> q", "using local.n_left_distrib mult_assoc"], ["proof (prove)\nusing this:\n  !?x \\<cdot> (?y + ?z) = !?x \\<cdot> ?y + !?x \\<cdot> ?z\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. !b \\<cdot> (if b then x else y fi) \\<cdot> q =\n    (!b \\<cdot> b \\<cdot> x + !b \\<cdot> !b \\<cdot> y) \\<cdot> q", "by presburger"], ["proof (state)\nthis:\n  !b \\<cdot> (if b then x else y fi) \\<cdot> q =\n  (!b \\<cdot> b \\<cdot> x + !b \\<cdot> !b \\<cdot> y) \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "also"], ["proof (state)\nthis:\n  !b \\<cdot> (if b then x else y fi) \\<cdot> q =\n  (!b \\<cdot> b \\<cdot> x + !b \\<cdot> !b \\<cdot> y) \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "have \"... = !b \\<cdot> y \\<cdot> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (!b \\<cdot> b \\<cdot> x + !b \\<cdot> !b \\<cdot> y) \\<cdot> q =\n    !b \\<cdot> y \\<cdot> q", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  (!b \\<cdot> b \\<cdot> x + !b \\<cdot> !b \\<cdot> y) \\<cdot> q =\n  !b \\<cdot> y \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "finally"], ["proof (chain)\npicking this:\n  p \\<cdot> !b \\<cdot> y \\<le> !b \\<cdot> y \\<cdot> q", "have c: \"p \\<cdot> !b \\<cdot> y \\<le> y \\<cdot> q\""], ["proof (prove)\nusing this:\n  p \\<cdot> !b \\<cdot> y \\<le> !b \\<cdot> y \\<cdot> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "by (metis local.dual_order.trans local.n_restrictl mult_assoc)"], ["proof (state)\nthis:\n  \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>if b then x else y fi\\<lbrace>q\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "show \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>q\\<rbrace> \\<and> \\<lbrace>p \\<cdot> !b\\<rbrace> y \\<lbrace>q\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "using b c"], ["proof (prove)\nusing this:\n  \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace>\n  \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n    \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>", "by auto"], ["proof (state)\nthis:\n  \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>q\\<rbrace> \\<and>\n  \\<lbrace>p \\<cdot> !b\\<rbrace>y\\<lbrace>q\\<rbrace>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context test_pre_conway\nbegin"], ["", "lemma  phl_n_while: \n  assumes \"\\<lbrace>n x \\<cdot>  n y\\<rbrace> z \\<lbrace>n x\\<rbrace>\"\n  shows \"\\<lbrace>n x\\<rbrace> (n y \\<cdot> z)\\<^sup>\\<dagger> \\<cdot> t y \\<lbrace>n x \\<cdot> t y\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>!x\\<rbrace>(!y \\<cdot> z)\\<^sup>\\<dagger> \\<cdot>\n                        t y\\<lbrace>!x \\<cdot> t y\\<rbrace>", "by (metis assms phl.ht_at_phl_while t_n_closed)"], ["", "end"], ["", "context kat_zerol\nbegin"], ["", "abbreviation while :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" (\"while _ do _ od\" [64,64] 63) where\n  \"while b do x od \\<equiv> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b\""], ["", "lemma  phl_n_while: \n  assumes \"\\<lbrace>n x \\<cdot>  n y\\<rbrace> z \\<lbrace>n x\\<rbrace>\"\n  shows \"\\<lbrace>n x\\<rbrace> (n y \\<cdot> z)\\<^sup>\\<star> \\<cdot> t y \\<lbrace>n x \\<cdot> t y\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>!x\\<rbrace>(!y \\<cdot> z)\\<^sup>\\<star> \\<cdot>\n                        t y\\<lbrace>!x \\<cdot> t y\\<rbrace>", "by (metis assms phl.ht_at_phl_while t_n_closed)"], ["", "lemma phl_test_while: \n  assumes \"test p\" and \"test b\" \n  and \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>p\\<rbrace>\"\n  shows \"\\<lbrace>p\\<rbrace> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b \\<lbrace>p \\<cdot> !b\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>while b do x od\\<lbrace>p \\<cdot> !b\\<rbrace>", "by (metis assms phl_n_while test_double_comp_var)"], ["", "lemma phl_while_syntax: \n  assumes \"test p\" and \"test b\" and \"\\<lbrace>p \\<cdot> b\\<rbrace> x \\<lbrace>p\\<rbrace>\"\n  shows \"\\<lbrace>p\\<rbrace> while b do x od \\<lbrace>p \\<cdot> !b\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace>while b do x od\\<lbrace>p \\<cdot> !b\\<rbrace>", "by (metis assms phl_test_while)"], ["", "end"], ["", "lemma (in kat) \"test p \\<Longrightarrow> p \\<cdot> x\\<^sup>\\<star> \\<le> x\\<^sup>\\<star> \\<cdot> p \\<Longrightarrow> p \\<cdot> x \\<le> x \\<cdot> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test p;\n     \\<lbrace>p\\<rbrace>x\\<^sup>\\<star>\\<lbrace>p\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<rbrace>x\\<lbrace>p\\<rbrace>", "oops"], ["", "lemma (in kat) \"test p \\<Longrightarrow> test b \\<Longrightarrow> p \\<cdot> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b \\<le> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b \\<cdot> p \\<cdot> !b \\<Longrightarrow> p \\<cdot> b \\<cdot> x \\<le> x \\<cdot> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test p; test b;\n     p \\<cdot> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b\n     \\<le> (b \\<cdot> x)\\<^sup>\\<star> \\<cdot> !b \\<cdot> p \\<cdot>\n           !b\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p \\<cdot> b\\<rbrace>x\\<lbrace>p\\<rbrace>", "oops"], ["", "lemma (in kat) \"test p \\<Longrightarrow> test q \\<Longrightarrow>  p \\<cdot> x \\<cdot> y \\<le> x \\<cdot> y \\<cdot> q \\<Longrightarrow>(\\<exists>r. test r \\<and> p \\<cdot> x \\<le> x \\<cdot> r \\<and> r \\<cdot> y  \\<le> y \\<cdot> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test p; test q;\n     p \\<cdot> x \\<cdot> y \\<le> x \\<cdot> y \\<cdot> q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         test r \\<and>\n                         \\<lbrace>p\\<rbrace>x\\<lbrace>r\\<rbrace> \\<and>\n                         \\<lbrace>r\\<rbrace>y\\<lbrace>q\\<rbrace>", "(* nitpick *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test p; test q;\n     p \\<cdot> x \\<cdot> y \\<le> x \\<cdot> y \\<cdot> q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         test r \\<and>\n                         \\<lbrace>p\\<rbrace>x\\<lbrace>r\\<rbrace> \\<and>\n                         \\<lbrace>r\\<rbrace>y\\<lbrace>q\\<rbrace>", "oops"], ["", "lemma (in kat) \"test p \\<Longrightarrow> test q \\<Longrightarrow>  p \\<cdot> x \\<cdot> y \\<cdot> !q = 0 \\<Longrightarrow>(\\<exists>r. test r \\<and> p \\<cdot> x \\<cdot> !r = 0 \\<and> r \\<cdot> y \\<cdot> !q = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test p; test q;\n     p \\<cdot> x \\<cdot> y \\<cdot> !q = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         test r \\<and>\n                         p \\<cdot> x \\<cdot> !r = (0::'a) \\<and>\n                         r \\<cdot> y \\<cdot> !q = (0::'a)", "(* nitpick *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test p; test q;\n     p \\<cdot> x \\<cdot> y \\<cdot> !q = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         test r \\<and>\n                         p \\<cdot> x \\<cdot> !r = (0::'a) \\<and>\n                         r \\<cdot> y \\<cdot> !q = (0::'a)", "oops"], ["", "text \\<open>The following facts should be moved. They show that the rules of Hoare logic based on Tarlecki triples are invertible.\\<close>"], ["", "abbreviation (in near_dioid) tt :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> bool\" (\"\\<lparr>_\\<rparr>_\\<lparr>_\\<rparr>\") where\n  \"\\<lparr>x\\<rparr> y \\<lparr>z\\<rparr> \\<equiv> x \\<cdot> y \\<le> z\""], ["", "lemma (in near_dioid_one) tt_skip: \"\\<lparr>p\\<rparr> 1 \\<lparr>p\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>p\\<rparr>1::'a\\<lparr>p\\<rparr>", "by simp"], ["", "lemma (in near_dioid) tt_cons1: \"(\\<exists>q'. \\<lparr>p\\<rparr> x \\<lparr>q'\\<rparr> \\<and> q'\\<le> q) \\<longleftrightarrow> \\<lparr>p\\<rparr> x \\<lparr>q\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>q'. \\<lparr>p\\<rparr>x\\<lparr>q'\\<rparr> \\<and> q' \\<le> q) =\n    \\<lparr>p\\<rparr>x\\<lparr>q\\<rparr>", "using local.order_trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. (\\<exists>q'. \\<lparr>p\\<rparr>x\\<lparr>q'\\<rparr> \\<and> q' \\<le> q) =\n    \\<lparr>p\\<rparr>x\\<lparr>q\\<rparr>", "by blast"], ["", "lemma (in near_dioid) tt_cons2:  \"(\\<exists>p'. \\<lparr>p'\\<rparr> x \\<lparr>q\\<rparr> \\<and> p \\<le> p') \\<longleftrightarrow> \\<lparr>p\\<rparr> x \\<lparr>q\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>p'. \\<lparr>p'\\<rparr>x\\<lparr>q\\<rparr> \\<and> p \\<le> p') =\n    \\<lparr>p\\<rparr>x\\<lparr>q\\<rparr>", "using local.dual_order.trans local.mult_isor"], ["proof (prove)\nusing this:\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  ?x \\<le> ?y \\<Longrightarrow>\n  \\<lparr>?x\\<rparr>?z\\<lparr>?y \\<cdot> ?z\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<exists>p'. \\<lparr>p'\\<rparr>x\\<lparr>q\\<rparr> \\<and> p \\<le> p') =\n    \\<lparr>p\\<rparr>x\\<lparr>q\\<rparr>", "by blast"], ["", "lemma (in near_dioid) tt_seq: \"(\\<exists>r. \\<lparr>p\\<rparr> x \\<lparr>r\\<rparr> \\<and> \\<lparr>r\\<rparr> y \\<lparr>q\\<rparr>) \\<longleftrightarrow> \\<lparr>p\\<rparr> x \\<cdot> y \\<lparr>q\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r.\n        \\<lparr>p\\<rparr>x\\<lparr>r\\<rparr> \\<and>\n        \\<lparr>r\\<rparr>y\\<lparr>q\\<rparr>) =\n    \\<lparr>p\\<rparr>x \\<cdot> y\\<lparr>q\\<rparr>", "by (metis local.tt_cons2 mult_assoc)"], ["", "lemma (in dioid) tt_cond: \"\\<lparr>p \\<cdot> v\\<rparr> x \\<lparr>q\\<rparr> \\<and> \\<lparr>p \\<cdot> w\\<rparr> y \\<lparr>q\\<rparr> \\<longleftrightarrow> \\<lparr>p\\<rparr> (v \\<cdot> x + w \\<cdot> y)\\<lparr>q\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lparr>p \\<cdot> v\\<rparr>x\\<lparr>q\\<rparr> \\<and>\n     \\<lparr>p \\<cdot> w\\<rparr>y\\<lparr>q\\<rparr>) =\n    \\<lparr>p\\<rparr>v \\<cdot> x + w \\<cdot> y\\<lparr>q\\<rparr>", "by (simp add: local.distrib_left mult_assoc)"], ["", "lemma (in kleene_algebra) tt_while: \"w \\<le> 1 \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr> x \\<lparr>p\\<rparr> \\<Longrightarrow> \\<lparr>p\\<rparr> (v \\<cdot> x)\\<^sup>\\<star> \\<cdot> w \\<lparr>p\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le> (1::'a);\n     \\<lparr>p \\<cdot> v\\<rparr>x\\<lparr>p\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> \\<lparr>p\\<rparr>(v \\<cdot> x)\\<^sup>\\<star> \\<cdot>\n w\\<lparr>p\\<rparr>", "by (metis local.star_inductr_var_equiv local.star_subid local.tt_seq local.tt_skip mult_assoc)"], ["", "text \\<open>The converse implication can be refuted. The situation is similar to the ht case.\\<close>"], ["", "lemma (in kat) tt_while: \"test v \\<Longrightarrow>  \\<lparr>p\\<rparr> (v \\<cdot> x)\\<^sup>\\<star> \\<cdot> !v \\<lparr>p\\<rparr> \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr> x \\<lparr>p\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test v;\n     \\<lparr>p\\<rparr>(v \\<cdot> x)\\<^sup>\\<star> \\<cdot>\n                      !v\\<lparr>p\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr>x\\<lparr>p\\<rparr>", "(* nitpick *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test v;\n     \\<lparr>p\\<rparr>(v \\<cdot> x)\\<^sup>\\<star> \\<cdot>\n                      !v\\<lparr>p\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr>x\\<lparr>p\\<rparr>", "oops"], ["", "lemma (in kat) tt_while: \"test v \\<Longrightarrow>  \\<lparr>p\\<rparr> (v \\<cdot> x)\\<^sup>\\<star>  \\<lparr>p\\<rparr> \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr> x \\<lparr>p\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test v;\n     \\<lparr>p\\<rparr>(v \\<cdot> x)\\<^sup>\\<star>\\<lparr>p\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr>x\\<lparr>p\\<rparr>", "using local.star_inductr_var_equiv mult_assoc"], ["proof (prove)\nusing this:\n  \\<lparr>?y\\<rparr>?x\\<lparr>?y\\<rparr> =\n  \\<lparr>?y\\<rparr>?x\\<^sup>\\<star>\\<lparr>?y\\<rparr>\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>test v;\n     \\<lparr>p\\<rparr>(v \\<cdot> x)\\<^sup>\\<star>\\<lparr>p\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> \\<lparr>p \\<cdot> v\\<rparr>x\\<lparr>p\\<rparr>", "by auto"], ["", "text \\<open>Perhaps this holds with possibly infinite loops in DRA...\\<close>"], ["", "text \\<open>wlp in KAT\\<close>"], ["", "lemma (in kat) \"test y \\<Longrightarrow> (\\<exists> z. test z \\<and> z \\<cdot> x \\<cdot> !y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test y \\<Longrightarrow>\n    \\<exists>z. test z \\<and> z \\<cdot> x \\<cdot> !y = (0::'a)", "by (metis local.annil local.test_zero_var)"], ["", "end"]]}