{"file_name": "/home/qj213/afp-2021-10-22/thys/KAT_and_DRA/TwoSorted/KAT2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/KAT_and_DRA", "problem_names": ["lemma test_eq [kat_hom]: \"p = q \\<longleftrightarrow> `p = q`\"", "lemma test_iso: \"p \\<le> q \\<Longrightarrow> `p \\<le> q`\"", "lemma test_meet_comm: \"`p \\<cdot> q = q \\<cdot> p`\"", "lemmas test_one_top[simp] = test_iso[OF top_greatest, simplified]", "lemma [simp]: \"`-p + p = 1`\"", "lemma [simp]: \"`p + (-p) = 1`\"", "lemma [simp]: \"`(-p) \\<cdot> p = 0`\"", "lemma [simp]: \"`p \\<cdot> (-p) = 0`\"", "lemma test_eq [kat_hom]: \"p = q \\<longleftrightarrow> `p = q`\"", "lemma test_iso: \"p \\<le> q \\<Longrightarrow> `p \\<le> q`\"", "lemma test_meet_comm: \"`p \\<cdot> q = q \\<cdot> p`\"", "lemmas test_one_top[simp] = test_iso[OF top_greatest, simplified]", "lemma test_star [simp]: \"`p\\<^sup>\\<star> = 1`\"", "lemmas [kat_hom] = test_star[symmetric]", "lemma [simp]: \"`!p + p = 1`\"", "lemma [simp]: \"`p + !p = 1`\"", "lemma [simp]: \"`!p \\<cdot> p = 0`\"", "lemma [simp]: \"`p \\<cdot> !p = 0`\"", "lemma hoare_triple_def_var: \"`p\\<cdot>c \\<le> c\\<cdot>q \\<longleftrightarrow> p\\<cdot>c\\<cdot>!q = 0`\"", "lemmas [intro!] = star_sim2[rule_format]", "lemma hoare_weakening: \"p \\<le> p' \\<Longrightarrow> q' \\<le> q \\<Longrightarrow> `\\<lbrace>p'\\<rbrace> c \\<lbrace>q'\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> c \\<lbrace>q\\<rbrace>`\"", "lemma hoare_star: \"`\\<lbrace>p\\<rbrace> c \\<lbrace>p\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> c\\<^sup>\\<star> \\<lbrace>p\\<rbrace>`\"", "lemmas [vcg] = hoare_weakening[OF order_refl _ hoare_star]", "lemma hoare_test [vcg]: \"`p \\<cdot> t \\<le> q` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> t \\<lbrace>q\\<rbrace>`\"", "lemma hoare_mult [vcg]: \"`\\<lbrace>p\\<rbrace> x \\<lbrace>r\\<rbrace>` \\<Longrightarrow> `\\<lbrace>r\\<rbrace> y \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> x\\<cdot>y \\<lbrace>q\\<rbrace>`\"", "lemma [simp]: \"`!p \\<cdot> !p = !p`\"", "lemma hoare_plus [vcg]: \"`\\<lbrace>p\\<rbrace> x \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> y \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> x + y \\<lbrace>q\\<rbrace>`\"", "lemma hoare_while: \"`\\<lbrace>p \\<cdot> t\\<rbrace> c \\<lbrace>p\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> While t Do c End \\<lbrace>!t \\<cdot> p\\<rbrace>`\"", "lemma [vcg]: \"`\\<lbrace>p \\<cdot> t\\<rbrace> c \\<lbrace>p\\<rbrace>` \\<Longrightarrow> `!t \\<cdot> p \\<le> q` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> While t Do c End \\<lbrace>q\\<rbrace>`\"", "lemma hoare_if [vcg]: \"`\\<lbrace>p \\<cdot> t\\<rbrace> c1 \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p \\<cdot> !t\\<rbrace> c2 \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> If t Then c1 Else c2 \\<lbrace>q\\<rbrace>`\""], "translations": [["", "lemma test_eq [kat_hom]: \"p = q \\<longleftrightarrow> `p = q`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p = q) = (\\<iota> p = \\<iota> q)", "by (metis eq_iff test_iso_eq)"], ["", "ML_val \\<open>map (fn thm => thm RS @{thm sym}) (KATHomRules.get @{context})\\<close>"], ["", "lemma test_iso: \"p \\<le> q \\<Longrightarrow> `p \\<le> q`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> q \\<Longrightarrow> \\<iota> p \\<le> \\<iota> q", "by (simp add: test_iso_eq)"], ["", "(* Import lemmas and modify them to fit KAT syntax *)"], ["", "lemma test_meet_comm: \"`p \\<cdot> q = q \\<cdot> p`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> \\<iota> q = \\<iota> q \\<cdot> \\<iota> p", "by kat_hom (fact inf_commute)"], ["", "lemmas test_one_top[simp] = test_iso[OF top_greatest, simplified]"], ["", "lemma [simp]: \"`-p + p = 1`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (\\<iota> p) + \\<iota> p = (1::'b)", "by kat_hom (metis compl_sup_top)"], ["", "lemma [simp]: \"`p + (-p) = 1`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p + - (\\<iota> p) = (1::'b)", "by kat_hom (metis sup_compl_top)"], ["", "lemma [simp]: \"`(-p) \\<cdot> p = 0`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (\\<iota> p) \\<cdot> \\<iota> p = (0::'b)", "by (metis inf.commute inf_compl_bot test_bot test_inf test_not)"], ["", "lemma [simp]: \"`p \\<cdot> (-p) = 0`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> - (\\<iota> p) = (0::'b)", "by (metis inf_compl_bot test_bot test_inf test_not)"], ["", "end"], ["", "locale kat = \n  fixes test :: \"'a::boolean_algebra \\<Rightarrow> 'b::kleene_algebra\"\n  and not :: \"'b::kleene_algebra \\<Rightarrow> 'b::kleene_algebra\" (\"!\")\n  assumes is_dioid_tests: \"dioid_tests test not\""], ["", "sublocale kat \\<subseteq> dioid_tests"], ["proof (prove)\ngoal (1 subgoal):\n 1. dioid_tests test !", "using is_dioid_tests"], ["proof (prove)\nusing this:\n  dioid_tests test !\n\ngoal (1 subgoal):\n 1. dioid_tests test !", "."], ["", "context kat\nbegin"], ["", "notation test (\"\\<iota>\")"], ["", "lemma test_eq [kat_hom]: \"p = q \\<longleftrightarrow> `p = q`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p = q) = (\\<iota> p = \\<iota> q)", "by (metis eq_iff test_iso_eq)"], ["", "ML_val \\<open>map (fn thm => thm RS @{thm sym}) (KATHomRules.get @{context})\\<close>"], ["", "lemma test_iso: \"p \\<le> q \\<Longrightarrow> `p \\<le> q`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> q \\<Longrightarrow> \\<iota> p \\<le> \\<iota> q", "by (simp add: test_iso_eq)"], ["", "(* Import lemmas and modify them to fit KAT syntax *)"], ["", "lemma test_meet_comm: \"`p \\<cdot> q = q \\<cdot> p`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> \\<iota> q = \\<iota> q \\<cdot> \\<iota> p", "by kat_hom (fact inf_commute)"], ["", "lemmas test_one_top[simp] = test_iso[OF top_greatest, simplified]"], ["", "lemma test_star [simp]: \"`p\\<^sup>\\<star> = 1`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p\\<^sup>\\<star> = (1::'b)", "by (metis star_subid test_iso test_top top_greatest)"], ["", "lemmas [kat_hom] = test_star[symmetric]"], ["", "lemma [simp]: \"`!p + p = 1`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ! (\\<iota> p) + \\<iota> p = (1::'b)", "by kat_hom (metis compl_sup_top)"], ["", "lemma [simp]: \"`p + !p = 1`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p + ! (\\<iota> p) = (1::'b)", "by kat_hom (metis sup_compl_top)"], ["", "lemma [simp]: \"`!p \\<cdot> p = 0`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ! (\\<iota> p) \\<cdot> \\<iota> p = (0::'b)", "by (metis inf.commute inf_compl_bot test_bot test_inf test_not)"], ["", "lemma [simp]: \"`p \\<cdot> !p = 0`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> ! (\\<iota> p) = (0::'b)", "by (metis inf_compl_bot test_bot test_inf test_not)"], ["", "definition hoare_triple :: \"'b \\<Rightarrow> 'b \\<Rightarrow> 'b \\<Rightarrow> bool\" (\"\\<lbrace>_\\<rbrace> _ \\<lbrace>_\\<rbrace>\") where\n  \"\\<lbrace>p\\<rbrace> c \\<lbrace>q\\<rbrace> \\<equiv> p\\<cdot>c \\<le> c\\<cdot>q\""], ["", "declare hoare_triple_def[iff]"], ["", "lemma hoare_triple_def_var: \"`p\\<cdot>c \\<le> c\\<cdot>q \\<longleftrightarrow> p\\<cdot>c\\<cdot>!q = 0`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q) =\n    (\\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b))", "apply (intro iffI antisym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) \\<le> (0::'b)\n 2. \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q \\<Longrightarrow>\n    (0::'b) \\<le> \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q)\n 3. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q", "apply (rule order_trans[of _ \"`c \\<cdot> q \\<cdot> !q`\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q)\n    \\<le> c \\<cdot> \\<iota> q \\<cdot> ! (\\<iota> q)\n 2. \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q \\<Longrightarrow>\n    c \\<cdot> \\<iota> q \\<cdot> ! (\\<iota> q) \\<le> (0::'b)\n 3. \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q \\<Longrightarrow>\n    (0::'b) \\<le> \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q)\n 4. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q", "apply (rule mult_isor[rule_format])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q\n 2. \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q \\<Longrightarrow>\n    c \\<cdot> \\<iota> q \\<cdot> ! (\\<iota> q) \\<le> (0::'b)\n 3. \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q \\<Longrightarrow>\n    (0::'b) \\<le> \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q)\n 4. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q", "apply (simp add: mult.assoc)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> (c \\<cdot> ! (\\<iota> q)) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q", "apply (simp add: mult.assoc[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<le> c \\<cdot> \\<iota> q", "apply (rule order_trans[of _ \"`p\\<cdot>c\\<cdot>(!q + q)`\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c\n    \\<le> \\<iota> p \\<cdot> c \\<cdot> (! (\\<iota> q) + \\<iota> q)\n 2. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<cdot> (! (\\<iota> q) + \\<iota> q)\n    \\<le> c \\<cdot> \\<iota> q", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<cdot> (! (\\<iota> q) + \\<iota> q)\n    \\<le> c \\<cdot> \\<iota> q", "apply (simp only: distrib_left add_zerol)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<cdot> \\<iota> q \\<le> c \\<cdot> \\<iota> q", "apply (rule order_trans[of _ \"`1 \\<cdot> c \\<cdot> q`\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> c \\<cdot> \\<iota> q\n    \\<le> (1::'b) \\<cdot> c \\<cdot> \\<iota> q\n 2. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    (1::'b) \\<cdot> c \\<cdot> \\<iota> q \\<le> c \\<cdot> \\<iota> q", "apply (simp only: mult.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<iota> p \\<cdot> (c \\<cdot> ! (\\<iota> q)) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<cdot> (c \\<cdot> \\<iota> q)\n    \\<le> (1::'b) \\<cdot> (c \\<cdot> \\<iota> q)\n 2. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    (1::'b) \\<cdot> c \\<cdot> \\<iota> q \\<le> c \\<cdot> \\<iota> q", "apply (rule mult_isor[rule_format])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<iota> p \\<cdot> (c \\<cdot> ! (\\<iota> q)) = (0::'b) \\<Longrightarrow>\n    \\<iota> p \\<le> (1::'b)\n 2. \\<iota> p \\<cdot> c \\<cdot> ! (\\<iota> q) = (0::'b) \\<Longrightarrow>\n    (1::'b) \\<cdot> c \\<cdot> \\<iota> q \\<le> c \\<cdot> \\<iota> q", "by simp_all"], ["", "lemmas [intro!] = star_sim2[rule_format]"], ["", "lemma hoare_weakening: \"p \\<le> p' \\<Longrightarrow> q' \\<le> q \\<Longrightarrow> `\\<lbrace>p'\\<rbrace> c \\<lbrace>q'\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> c \\<lbrace>q\\<rbrace>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<le> p'; q' \\<le> q;\n     \\<lbrace>\\<iota> p'\\<rbrace> c \\<lbrace>\\<iota> q'\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> c \\<lbrace>\\<iota> q\\<rbrace>", "by auto (metis mult_isol mult_isor order_trans test_iso)"], ["", "lemma hoare_star: \"`\\<lbrace>p\\<rbrace> c \\<lbrace>p\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> c\\<^sup>\\<star> \\<lbrace>p\\<rbrace>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<iota>\n              p\\<rbrace> c \\<lbrace>\\<iota> p\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>\\<iota> p\\<rbrace> c\\<^sup>\\<star> \\<lbrace>\\<iota> p\\<rbrace>", "by auto"], ["", "lemmas [vcg] = hoare_weakening[OF order_refl _ hoare_star]"], ["", "lemma hoare_test [vcg]: \"`p \\<cdot> t \\<le> q` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> t \\<lbrace>q\\<rbrace>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> \\<iota> t \\<le> \\<iota> q \\<Longrightarrow>\n    \\<lbrace>\\<iota> p\\<rbrace> \\<iota> t \\<lbrace>\\<iota> q\\<rbrace>", "by auto (metis inf_le2 le_inf_iff test_inf test_iso_eq)"], ["", "lemma hoare_mult [vcg]: \"`\\<lbrace>p\\<rbrace> x \\<lbrace>r\\<rbrace>` \\<Longrightarrow> `\\<lbrace>r\\<rbrace> y \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> x\\<cdot>y \\<lbrace>q\\<rbrace>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> r\\<rbrace>;\n     \\<lbrace>\\<iota> r\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> x \\<cdot>\n     y \\<lbrace>\\<iota> q\\<rbrace>", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> p \\<cdot> x \\<le> x \\<cdot> \\<iota> r;\n     \\<iota> r \\<cdot> y \\<le> y \\<cdot> \\<iota> q\\<rbrakk>\n    \\<Longrightarrow> \\<iota> p \\<cdot> (x \\<cdot> y)\n                      \\<le> x \\<cdot> y \\<cdot> \\<iota> q", "assume [simp]: \"`p \\<cdot> x \\<le> x \\<cdot> r`\" and [simp]: \"`r \\<cdot> y \\<le> y \\<cdot> q`\""], ["proof (state)\nthis:\n  \\<iota> p \\<cdot> x \\<le> x \\<cdot> \\<iota> r\n  \\<iota> r \\<cdot> y \\<le> y \\<cdot> \\<iota> q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> p \\<cdot> x \\<le> x \\<cdot> \\<iota> r;\n     \\<iota> r \\<cdot> y \\<le> y \\<cdot> \\<iota> q\\<rbrakk>\n    \\<Longrightarrow> \\<iota> p \\<cdot> (x \\<cdot> y)\n                      \\<le> x \\<cdot> y \\<cdot> \\<iota> q", "have \"`p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> r \\<cdot> y`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> \\<iota> r \\<cdot> y", "by (auto simp add: mult.assoc[symmetric] intro!: mult_isor[rule_format])"], ["proof (state)\nthis:\n  \\<iota> p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> \\<iota> r \\<cdot> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> p \\<cdot> x \\<le> x \\<cdot> \\<iota> r;\n     \\<iota> r \\<cdot> y \\<le> y \\<cdot> \\<iota> q\\<rbrakk>\n    \\<Longrightarrow> \\<iota> p \\<cdot> (x \\<cdot> y)\n                      \\<le> x \\<cdot> y \\<cdot> \\<iota> q", "also"], ["proof (state)\nthis:\n  \\<iota> p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> \\<iota> r \\<cdot> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> p \\<cdot> x \\<le> x \\<cdot> \\<iota> r;\n     \\<iota> r \\<cdot> y \\<le> y \\<cdot> \\<iota> q\\<rbrakk>\n    \\<Longrightarrow> \\<iota> p \\<cdot> (x \\<cdot> y)\n                      \\<le> x \\<cdot> y \\<cdot> \\<iota> q", "have \"`... \\<le> x \\<cdot> y \\<cdot> q`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> \\<iota> r \\<cdot> y \\<le> x \\<cdot> y \\<cdot> \\<iota> q", "by (auto simp add: mult.assoc intro!: mult_isol[rule_format])"], ["proof (state)\nthis:\n  x \\<cdot> \\<iota> r \\<cdot> y \\<le> x \\<cdot> y \\<cdot> \\<iota> q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota> p \\<cdot> x \\<le> x \\<cdot> \\<iota> r;\n     \\<iota> r \\<cdot> y \\<le> y \\<cdot> \\<iota> q\\<rbrakk>\n    \\<Longrightarrow> \\<iota> p \\<cdot> (x \\<cdot> y)\n                      \\<le> x \\<cdot> y \\<cdot> \\<iota> q", "finally"], ["proof (chain)\npicking this:\n  \\<iota> p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> y \\<cdot> \\<iota> q", "show \"`p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> y \\<cdot> q`\""], ["proof (prove)\nusing this:\n  \\<iota> p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> y \\<cdot> \\<iota> q\n\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> y \\<cdot> \\<iota> q", "."], ["proof (state)\nthis:\n  \\<iota> p \\<cdot> (x \\<cdot> y) \\<le> x \\<cdot> y \\<cdot> \\<iota> q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma [simp]: \"`!p \\<cdot> !p = !p`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ! (\\<iota> p) \\<cdot> ! (\\<iota> p) = ! (\\<iota> p)", "by (metis inf.idem test_inf test_not)"], ["", "lemma hoare_plus [vcg]: \"`\\<lbrace>p\\<rbrace> x \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> y \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> x + y \\<lbrace>q\\<rbrace>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> q\\<rbrace>;\n     \\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> x + y \\<lbrace>\\<iota> q\\<rbrace>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> q\\<rbrace>;\n     \\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> x + y \\<lbrace>\\<iota> q\\<rbrace>", "assume a1: \"\\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> q\\<rbrace>\""], ["proof (state)\nthis:\n  \\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> q\\<rbrace>;\n     \\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> x + y \\<lbrace>\\<iota> q\\<rbrace>", "assume \"\\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\""], ["proof (state)\nthis:\n  \\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> q\\<rbrace>;\n     \\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> x + y \\<lbrace>\\<iota> q\\<rbrace>", "hence \"\\<iota> p \\<cdot> (x + y) \\<le> x \\<cdot> \\<iota> q + y \\<cdot> \\<iota> q\""], ["proof (prove)\nusing this:\n  \\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> (x + y)\n    \\<le> x \\<cdot> \\<iota> q + y \\<cdot> \\<iota> q", "using a1"], ["proof (prove)\nusing this:\n  \\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\n  \\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> q\\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<iota> p \\<cdot> (x + y)\n    \\<le> x \\<cdot> \\<iota> q + y \\<cdot> \\<iota> q", "by (metis (no_types) distrib_left hoare_triple_def join.sup.mono)"], ["proof (state)\nthis:\n  \\<iota> p \\<cdot> (x + y) \\<le> x \\<cdot> \\<iota> q + y \\<cdot> \\<iota> q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p\\<rbrace> x \\<lbrace>\\<iota> q\\<rbrace>;\n     \\<lbrace>\\<iota> p\\<rbrace> y \\<lbrace>\\<iota> q\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> x + y \\<lbrace>\\<iota> q\\<rbrace>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<iota> p \\<cdot> (x + y) \\<le> x \\<cdot> \\<iota> q + y \\<cdot> \\<iota> q\n\ngoal (1 subgoal):\n 1. \\<lbrace>\\<iota> p\\<rbrace> x + y \\<lbrace>\\<iota> q\\<rbrace>", "by force"], ["proof (state)\nthis:\n  \\<lbrace>\\<iota> p\\<rbrace> x + y \\<lbrace>\\<iota> q\\<rbrace>\n\ngoal:\nNo subgoals!", "qed"], ["", "definition While :: \"'b \\<Rightarrow> 'b \\<Rightarrow> 'b\" (\"While _ Do _ End\" [50,50] 51) where\n  \"While t Do c End = (t\\<cdot>c)\\<^sup>\\<star>\\<cdot>!t\""], ["", "lemma hoare_while: \"`\\<lbrace>p \\<cdot> t\\<rbrace> c \\<lbrace>p\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> While t Do c End \\<lbrace>!t \\<cdot> p\\<rbrace>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<iota> p \\<cdot>\n             \\<iota>\n              t\\<rbrace> c \\<lbrace>\\<iota> p\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>\\<iota>\n              p\\<rbrace> While \\<iota>\n                                t Do c End \\<lbrace>! (\\<iota> t) \\<cdot>\n              \\<iota> p\\<rbrace>", "unfolding While_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<iota> p \\<cdot>\n             \\<iota>\n              t\\<rbrace> c \\<lbrace>\\<iota> p\\<rbrace> \\<Longrightarrow>\n    \\<lbrace>\\<iota>\n              p\\<rbrace> (\\<iota> t \\<cdot> c)\\<^sup>\\<star> \\<cdot>\n                         ! (\\<iota>\n                             t) \\<lbrace>! (\\<iota> t) \\<cdot>\n   \\<iota> p\\<rbrace>", "by vcg (metis inf_commute order_refl)"], ["", "lemma [vcg]: \"`\\<lbrace>p \\<cdot> t\\<rbrace> c \\<lbrace>p\\<rbrace>` \\<Longrightarrow> `!t \\<cdot> p \\<le> q` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> While t Do c End \\<lbrace>q\\<rbrace>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p \\<cdot>\n                      \\<iota> t\\<rbrace> c \\<lbrace>\\<iota> p\\<rbrace>;\n     ! (\\<iota> t) \\<cdot> \\<iota> p \\<le> \\<iota> q\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> While \\<iota>\n            t Do c End \\<lbrace>\\<iota> q\\<rbrace>", "by (metis hoare_weakening hoare_while order_refl test_inf test_iso_eq test_not)"], ["", "definition If :: \"'b \\<Rightarrow> 'b \\<Rightarrow> 'b \\<Rightarrow> 'b\" (\"If _ Then _ Else _\" [50,50,50] 51) where\n  \"If p Then c1 Else c2 \\<equiv> p\\<cdot>c1 + !p\\<cdot>c2\""], ["", "lemma hoare_if [vcg]: \"`\\<lbrace>p \\<cdot> t\\<rbrace> c1 \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p \\<cdot> !t\\<rbrace> c2 \\<lbrace>q\\<rbrace>` \\<Longrightarrow> `\\<lbrace>p\\<rbrace> If t Then c1 Else c2 \\<lbrace>q\\<rbrace>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p \\<cdot>\n                      \\<iota> t\\<rbrace> c1 \\<lbrace>\\<iota> q\\<rbrace>;\n     \\<lbrace>\\<iota> p \\<cdot>\n              ! (\\<iota> t)\\<rbrace> c2 \\<lbrace>\\<iota> q\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> If \\<iota>\n         t Then c1 Else c2 \\<lbrace>\\<iota> q\\<rbrace>", "unfolding If_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>\\<iota> p \\<cdot>\n                      \\<iota> t\\<rbrace> c1 \\<lbrace>\\<iota> q\\<rbrace>;\n     \\<lbrace>\\<iota> p \\<cdot>\n              ! (\\<iota> t)\\<rbrace> c2 \\<lbrace>\\<iota> q\\<rbrace>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>\\<iota>\n                                p\\<rbrace> \\<iota> t \\<cdot> c1 +\n     ! (\\<iota> t) \\<cdot> c2 \\<lbrace>\\<iota> q\\<rbrace>", "by vcg assumption"], ["", "end"], ["", "end"]]}