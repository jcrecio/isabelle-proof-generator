{"file_name": "/home/qj213/afp-2021-10-22/thys/BTree/Imperative_Loops.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/BTree", "problem_names": ["lemma heap_WHILET_rule:\n  assumes\n    \"wf R\"\n    \"P \\<Longrightarrow>\\<^sub>A I s\"\n    \"\\<And>s. <I s * true> bi s <\\<lambda>r. I s * \\<up>(r \\<longleftrightarrow> b s)>\\<^sub>t\"\n    \"\\<And>s. b s \\<Longrightarrow> <I s * true> f s <\\<lambda>s'. I s' * \\<up>((s', s) \\<in> R)>\\<^sub>t\"\n    \"\\<And>s. \\<not> b s \\<Longrightarrow> I s \\<Longrightarrow>\\<^sub>A Q s\"\n  shows \"<P * true> heap_WHILET bi f s <Q>\\<^sub>t\"", "lemma heap_WHILET_rule':\n  assumes\n    \"wf R\"\n    \"P \\<Longrightarrow>\\<^sub>A I s si * F\"\n    \"\\<And>si s. <I s si * F> bi si <\\<lambda>r. I s si * F * \\<up>(r \\<longleftrightarrow> b s)>\\<^sub>t\"\n    \"\\<And>si s. b s \\<Longrightarrow> <I s si * F> f si <\\<lambda>si'. \\<exists>\\<^sub>As'. I s' si' * F * \\<up>((s', s) \\<in> R)>\\<^sub>t\"\n    \"\\<And>si s. \\<not> b s \\<Longrightarrow> I s si * F \\<Longrightarrow>\\<^sub>A Q s si\"\n  shows \"<P> heap_WHILET bi f si <\\<lambda>si. \\<exists>\\<^sub>As. Q s si>\\<^sub>t\""], "translations": [["", "lemma heap_WHILET_rule:\n  assumes\n    \"wf R\"\n    \"P \\<Longrightarrow>\\<^sub>A I s\"\n    \"\\<And>s. <I s * true> bi s <\\<lambda>r. I s * \\<up>(r \\<longleftrightarrow> b s)>\\<^sub>t\"\n    \"\\<And>s. b s \\<Longrightarrow> <I s * true> f s <\\<lambda>s'. I s' * \\<up>((s', s) \\<in> R)>\\<^sub>t\"\n    \"\\<And>s. \\<not> b s \\<Longrightarrow> I s \\<Longrightarrow>\\<^sub>A Q s\"\n  shows \"<P * true> heap_WHILET bi f s <Q>\\<^sub>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <P * true> heap_WHILET bi f s <Q>\\<^sub>t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <P * true> heap_WHILET bi f s <Q>\\<^sub>t", "have \"<I s * true> heap_WHILET bi f s <\\<lambda>s'. I s' * \\<up>(\\<not> b s')>\\<^sub>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "using assms(1)"], ["proof (prove)\nusing this:\n  wf R\n\ngoal (1 subgoal):\n 1. <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "proof (induction arbitrary:)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           (y, x) \\<in> R \\<Longrightarrow>\n           <I y *\n            true> heap_WHILET bi f\n                   y <\\<lambda>r.\n                         I r *\n                         \\<up> (\\<not> b r)>\\<^sub>t) \\<Longrightarrow>\n       <I x *\n        true> heap_WHILET bi f\n               x <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "case (less s)"], ["proof (state)\nthis:\n  (?y, s) \\<in> R \\<Longrightarrow>\n  <I ?y *\n   true> heap_WHILET bi f ?y <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           (y, x) \\<in> R \\<Longrightarrow>\n           <I y *\n            true> heap_WHILET bi f\n                   y <\\<lambda>r.\n                         I r *\n                         \\<up> (\\<not> b r)>\\<^sub>t) \\<Longrightarrow>\n       <I x *\n        true> heap_WHILET bi f\n               x <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "proof (cases \"b s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b s \\<Longrightarrow>\n    <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t\n 2. \\<not> b s \\<Longrightarrow>\n    <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "case True"], ["proof (state)\nthis:\n  b s\n\ngoal (2 subgoals):\n 1. b s \\<Longrightarrow>\n    <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t\n 2. \\<not> b s \\<Longrightarrow>\n    <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "then"], ["proof (chain)\npicking this:\n  b s", "show ?thesis"], ["proof (prove)\nusing this:\n  b s\n\ngoal (1 subgoal):\n 1. <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "by (subst heap_WHILET_unfold) (sep_auto heap: assms(3,4) less)"], ["proof (state)\nthis:\n  <I s *\n   true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t\n\ngoal (1 subgoal):\n 1. \\<not> b s \\<Longrightarrow>\n    <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b s \\<Longrightarrow>\n    <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "case False"], ["proof (state)\nthis:\n  \\<not> b s\n\ngoal (1 subgoal):\n 1. \\<not> b s \\<Longrightarrow>\n    <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "then"], ["proof (chain)\npicking this:\n  \\<not> b s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b s\n\ngoal (1 subgoal):\n 1. <I s *\n     true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "by (subst heap_WHILET_unfold) (sep_auto heap: assms(3))"], ["proof (state)\nthis:\n  <I s *\n   true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <I s *\n   true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <I s *\n   true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t\n\ngoal (1 subgoal):\n 1. <P * true> heap_WHILET bi f s <Q>\\<^sub>t", "then"], ["proof (chain)\npicking this:\n  <I s *\n   true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t", "show ?thesis"], ["proof (prove)\nusing this:\n  <I s *\n   true> heap_WHILET bi f s <\\<lambda>r. I r * \\<up> (\\<not> b r)>\\<^sub>t\n\ngoal (1 subgoal):\n 1. <P * true> heap_WHILET bi f s <Q>\\<^sub>t", "apply (rule cons_rule[rotated 2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. P * true \\<Longrightarrow>\\<^sub>A I s * true\n 2. \\<And>x.\n       I x * \\<up> (\\<not> b x) * true \\<Longrightarrow>\\<^sub>A Q x * true", "apply (intro ent_star_mono assms(2) ent_refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       I x * \\<up> (\\<not> b x) * true \\<Longrightarrow>\\<^sub>A Q x * true", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<not> b x \\<Longrightarrow>\n       I x * true \\<Longrightarrow>\\<^sub>A Q x * true", "apply (intro ent_star_mono assms(5) ent_refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> b x \\<Longrightarrow> \\<not> b x", "."], ["proof (state)\nthis:\n  <P * true> heap_WHILET bi f s <Q>\\<^sub>t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma heap_WHILET_rule':\n  assumes\n    \"wf R\"\n    \"P \\<Longrightarrow>\\<^sub>A I s si * F\"\n    \"\\<And>si s. <I s si * F> bi si <\\<lambda>r. I s si * F * \\<up>(r \\<longleftrightarrow> b s)>\\<^sub>t\"\n    \"\\<And>si s. b s \\<Longrightarrow> <I s si * F> f si <\\<lambda>si'. \\<exists>\\<^sub>As'. I s' si' * F * \\<up>((s', s) \\<in> R)>\\<^sub>t\"\n    \"\\<And>si s. \\<not> b s \\<Longrightarrow> I s si * F \\<Longrightarrow>\\<^sub>A Q s si\"\n  shows \"<P> heap_WHILET bi f si <\\<lambda>si. \\<exists>\\<^sub>As. Q s si>\\<^sub>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <P> heap_WHILET bi f si <\\<lambda>r. \\<exists>\\<^sub>As. Q s r>\\<^sub>t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <P> heap_WHILET bi f si <\\<lambda>r. \\<exists>\\<^sub>As. Q s r>\\<^sub>t", "have \"<I s si * F> heap_WHILET bi f si <\\<lambda>si'. \\<exists>\\<^sub>As'. I s' si' * F * \\<up>(\\<not> b s')>\\<^sub>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "using assms(1)"], ["proof (prove)\nusing this:\n  wf R\n\ngoal (1 subgoal):\n 1. <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "proof (induction arbitrary: si)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x si.\n       (\\<And>y si.\n           (y, x) \\<in> R \\<Longrightarrow>\n           <I y si *\n            F> heap_WHILET bi f\n                si <\\<lambda>r.\n                       \\<exists>\\<^sub>As'.\n                          I s' r * F *\n                          \\<up> (\\<not> b s')>\\<^sub>t) \\<Longrightarrow>\n       <I x si *\n        F> heap_WHILET bi f\n            si <\\<lambda>r.\n                   \\<exists>\\<^sub>As'.\n                      I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "case (less s)"], ["proof (state)\nthis:\n  (?y, s) \\<in> R \\<Longrightarrow>\n  <I ?y ?si *\n   F> heap_WHILET bi f\n       ?si <\\<lambda>r.\n               \\<exists>\\<^sub>As'.\n                  I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t\n\ngoal (1 subgoal):\n 1. \\<And>x si.\n       (\\<And>y si.\n           (y, x) \\<in> R \\<Longrightarrow>\n           <I y si *\n            F> heap_WHILET bi f\n                si <\\<lambda>r.\n                       \\<exists>\\<^sub>As'.\n                          I s' r * F *\n                          \\<up> (\\<not> b s')>\\<^sub>t) \\<Longrightarrow>\n       <I x si *\n        F> heap_WHILET bi f\n            si <\\<lambda>r.\n                   \\<exists>\\<^sub>As'.\n                      I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "proof (cases \"b s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b s \\<Longrightarrow>\n    <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t\n 2. \\<not> b s \\<Longrightarrow>\n    <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "case True"], ["proof (state)\nthis:\n  b s\n\ngoal (2 subgoals):\n 1. b s \\<Longrightarrow>\n    <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t\n 2. \\<not> b s \\<Longrightarrow>\n    <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "then"], ["proof (chain)\npicking this:\n  b s", "show ?thesis"], ["proof (prove)\nusing this:\n  b s\n\ngoal (1 subgoal):\n 1. <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "apply (subst heap_WHILET_unfold)"], ["proof (prove)\ngoal (1 subgoal):\n 1. b s \\<Longrightarrow>\n    <I s si *\n     F> bi si \\<bind>\n        (\\<lambda>bv.\n            if bv then f si \\<bind> heap_WHILET bi f\n            else return\n                  si) <\\<lambda>r.\n                          \\<exists>\\<^sub>As'.\n                             I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "apply (sep_auto heap: assms(3,4) less)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  <I s si *\n   F> heap_WHILET bi f\n       si <\\<lambda>r.\n              \\<exists>\\<^sub>As'. I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t\n\ngoal (1 subgoal):\n 1. \\<not> b s \\<Longrightarrow>\n    <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b s \\<Longrightarrow>\n    <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "case False"], ["proof (state)\nthis:\n  \\<not> b s\n\ngoal (1 subgoal):\n 1. \\<not> b s \\<Longrightarrow>\n    <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "then"], ["proof (chain)\npicking this:\n  \\<not> b s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b s\n\ngoal (1 subgoal):\n 1. <I s si *\n     F> heap_WHILET bi f\n         si <\\<lambda>r.\n                \\<exists>\\<^sub>As'.\n                   I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "by (subst heap_WHILET_unfold) (sep_auto heap: assms(3))"], ["proof (state)\nthis:\n  <I s si *\n   F> heap_WHILET bi f\n       si <\\<lambda>r.\n              \\<exists>\\<^sub>As'. I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <I s si *\n   F> heap_WHILET bi f\n       si <\\<lambda>r.\n              \\<exists>\\<^sub>As'. I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <I s si *\n   F> heap_WHILET bi f\n       si <\\<lambda>r.\n              \\<exists>\\<^sub>As'. I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t\n\ngoal (1 subgoal):\n 1. <P> heap_WHILET bi f si <\\<lambda>r. \\<exists>\\<^sub>As. Q s r>\\<^sub>t", "then"], ["proof (chain)\npicking this:\n  <I s si *\n   F> heap_WHILET bi f\n       si <\\<lambda>r.\n              \\<exists>\\<^sub>As'. I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t", "show ?thesis"], ["proof (prove)\nusing this:\n  <I s si *\n   F> heap_WHILET bi f\n       si <\\<lambda>r.\n              \\<exists>\\<^sub>As'. I s' r * F * \\<up> (\\<not> b s')>\\<^sub>t\n\ngoal (1 subgoal):\n 1. <P> heap_WHILET bi f si <\\<lambda>r. \\<exists>\\<^sub>As. Q s r>\\<^sub>t", "apply (rule cons_rule[rotated 2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. P \\<Longrightarrow>\\<^sub>A I s si * F\n 2. \\<And>x.\n       (\\<exists>\\<^sub>As'. I s' x * F * \\<up> (\\<not> b s')) *\n       true \\<Longrightarrow>\\<^sub>A\n       (\\<exists>\\<^sub>As. Q s x) * true", "apply (intro ent_star_mono assms(2) ent_refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<exists>\\<^sub>As'. I s' x * F * \\<up> (\\<not> b s')) *\n       true \\<Longrightarrow>\\<^sub>A\n       (\\<exists>\\<^sub>As. Q s x) * true", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<^sub>As'.\n          I s' x * F * true * \\<up> (\\<not> b s') \\<Longrightarrow>\\<^sub>A\n       \\<exists>\\<^sub>As. Q s x * true", "apply (sep_auto )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s'.\n       \\<not> b s' \\<Longrightarrow>\n       I s' x * F * true \\<Longrightarrow>\\<^sub>A Q (?s9 x s') x * true", "apply (erule ent_frame_fwd[OF assms(5)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x s'.\n       I s' x * F * true \\<Longrightarrow>\\<^sub>A\n       I s' (?si11 x s') * F * ?F10 x s'\n 2. \\<And>x s'.\n       Q s' (?si11 x s') * ?F10 x s' \\<Longrightarrow>\\<^sub>A\n       Q (?s9 x s') x * true", "apply frame_inference"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s'.\n       Q s' x * true \\<Longrightarrow>\\<^sub>A Q (?s9 x s') x * true", "by sep_auto"], ["proof (state)\nthis:\n  <P> heap_WHILET bi f si <\\<lambda>r. \\<exists>\\<^sub>As. Q s r>\\<^sub>t\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Added by NM, just a technicality since this rule fits our use case better *)"], ["", "text \"I derived my own version,\nsimply because it was a better fit to my use case.\""], ["", "corollary heap_WHILET_rule'':\n  assumes\n    \"wf R\"\n    \"P \\<Longrightarrow>\\<^sub>A I s\"\n    \"\\<And>s. <I s * true> bi s <\\<lambda>r. I s * \\<up>(r \\<longleftrightarrow> b s)>\\<^sub>t\"\n    \"\\<And>s. b s \\<Longrightarrow> <I s * true> f s <\\<lambda>s'. I s' * \\<up>((s', s) \\<in> R)>\\<^sub>t\"\n    \"\\<And>s. \\<not> b s \\<Longrightarrow> I s \\<Longrightarrow>\\<^sub>A Q s\"\n  shows \"<P> heap_WHILET bi f s <Q>\\<^sub>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <P> heap_WHILET bi f s <Q>\\<^sub>t", "supply R = heap_WHILET_rule'[of R P \"\\<lambda>s si. \\<up>(s = si) * I s\" s _ true bi b f \"\\<lambda>s si.\\<up>(s = si) * Q s * true\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. <P> heap_WHILET bi f s <Q>\\<^sub>t", "thm R"], ["proof (prove)\ngoal (1 subgoal):\n 1. <P> heap_WHILET bi f s <Q>\\<^sub>t", "using assms ent_true_drop"], ["proof (prove)\nusing this:\n  wf R\n  P \\<Longrightarrow>\\<^sub>A I s\n  <I ?s * true> bi ?s <\\<lambda>r. I ?s * \\<up> (r = b ?s)>\\<^sub>t\n  b ?s \\<Longrightarrow>\n  <I ?s * true> f ?s <\\<lambda>r. I r * \\<up> ((r, ?s) \\<in> R)>\\<^sub>t\n  \\<not> b ?s \\<Longrightarrow> I ?s \\<Longrightarrow>\\<^sub>A Q ?s\n  ?P \\<Longrightarrow>\\<^sub>A ?Q * true \\<Longrightarrow>\n  ?P * ?R \\<Longrightarrow>\\<^sub>A ?Q * true\n  ?P \\<Longrightarrow>\\<^sub>A ?Q \\<Longrightarrow>\n  ?P \\<Longrightarrow>\\<^sub>A ?Q * true\n\ngoal (1 subgoal):\n 1. <P> heap_WHILET bi f s <Q>\\<^sub>t", "apply(sep_auto heap: R assms)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*\nexplicit proof:\n\nproof -\n  have \"<I s * true> heap_WHILET bi f s <\\<lambda>s'. I s' * \\<up>(\\<not> b s')>\\<^sub>t\"\n    using assms(1)\n  proof (induction arbitrary:)\n    case (less s)\n    show ?case\n    proof (cases \"b s\")\n      case True\n      then show ?thesis\n        by (subst heap_WHILET_unfold) (sep_auto heap: assms(3,4) less)\n    next\n      case False\n      then show ?thesis\n        by (subst heap_WHILET_unfold) (sep_auto heap: assms(3))\n    qed\n  qed\n  then show ?thesis\n    apply (rule cons_rule[rotated 2])\n     apply (intro ent_true_drop assms(2) ent_refl)\n    apply clarsimp\n    apply(intro ent_star_mono assms(5) ent_refl)\n    .\nqed\n*)"], ["", "end"]]}