{"file_name": "/home/qj213/afp-2021-10-22/thys/BTree/Basic_Assn.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/BTree", "problem_names": ["lemma list_assn_cong[fundef_cong]:\n  \"\\<lbrakk> xs=xs'; ys=ys'; \\<And>x y. \\<lbrakk> x\\<in>set xs; y\\<in>set ys \\<rbrakk> \\<Longrightarrow> A x y = A' x y \\<rbrakk> \\<Longrightarrow> list_assn A xs ys = list_assn A' xs' ys'\"", "lemma list_assn_app_one: \"list_assn P (l1@[x]) (l1'@[y]) = list_assn P l1 l1' * P x y\"", "lemma list_assn_len: \"h \\<Turnstile> list_assn A xs ys \\<Longrightarrow> length xs = length ys\"", "lemma list_assn_append_Cons_left: \"list_assn A (xs@x#ys) zs = (\\<exists>\\<^sub>A zs1 z zs2. list_assn A xs zs1 * A x z * list_assn A ys zs2 * \\<up>(zs1@z#zs2 = zs))\"", "lemma list_assn_aux_append_Cons: \n  shows \"length xs = length zsl \\<Longrightarrow> list_assn A (xs@x#ys) (zsl@z#zsr) = (list_assn A xs zsl * A x z * list_assn A ys zsr) \"", "lemma prod_assn_cong[fundef_cong]:\n  \"\\<lbrakk> p=p'; pi=pi'; A (fst p) (fst pi) = A' (fst p) (fst pi); B (snd p) (snd pi) = B' (snd p) (snd pi) \\<rbrakk> \n    \\<Longrightarrow> (A\\<times>\\<^sub>aB) p pi = (A'\\<times>\\<^sub>aB') p' pi'\""], "translations": [["", "lemma list_assn_cong[fundef_cong]:\n  \"\\<lbrakk> xs=xs'; ys=ys'; \\<And>x y. \\<lbrakk> x\\<in>set xs; y\\<in>set ys \\<rbrakk> \\<Longrightarrow> A x y = A' x y \\<rbrakk> \\<Longrightarrow> list_assn A xs ys = list_assn A' xs' ys'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = xs'; ys = ys';\n     \\<And>x y.\n        \\<lbrakk>x \\<in> set xs; y \\<in> set ys\\<rbrakk>\n        \\<Longrightarrow> A x y = A' x y\\<rbrakk>\n    \\<Longrightarrow> list_assn A xs ys = list_assn A' xs' ys'", "by (induction xs ys arbitrary: xs' ys' rule: list_assn.induct) auto"], ["", "lemma list_assn_app_one: \"list_assn P (l1@[x]) (l1'@[y]) = list_assn P l1 l1' * P x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_assn P (l1 @ [x]) (l1' @ [y]) = list_assn P l1 l1' * P x y", "by simp"], ["", "(* ------------------ ADDED by NM in course of btree_imp -------- *)"], ["", "lemma list_assn_len: \"h \\<Turnstile> list_assn A xs ys \\<Longrightarrow> length xs = length ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<Turnstile> list_assn A xs ys \\<Longrightarrow> length xs = length ys", "using list_assn_aux_ineq_len"], ["proof (prove)\nusing this:\n  length ?l \\<noteq> length ?li \\<Longrightarrow>\n  list_assn ?A ?l ?li = false\n\ngoal (1 subgoal):\n 1. h \\<Turnstile> list_assn A xs ys \\<Longrightarrow> length xs = length ys", "by fastforce"], ["", "lemma list_assn_append_Cons_left: \"list_assn A (xs@x#ys) zs = (\\<exists>\\<^sub>A zs1 z zs2. list_assn A xs zs1 * A x z * list_assn A ys zs2 * \\<up>(zs1@z#zs2 = zs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_assn A (xs @ x # ys) zs =\n    (\\<exists>\\<^sub>Azs1 z zs2.\n        list_assn A xs zs1 * A x z * list_assn A ys zs2 *\n        \\<up> (zs1 @ z # zs2 = zs))", "by (sep_auto simp add: list_assn_aux_cons_conv list_assn_aux_append_conv1 intro!: ent_iffI)"], ["", "lemma list_assn_aux_append_Cons: \n  shows \"length xs = length zsl \\<Longrightarrow> list_assn A (xs@x#ys) (zsl@z#zsr) = (list_assn A xs zsl * A x z * list_assn A ys zsr) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. length xs = length zsl \\<Longrightarrow>\n    list_assn A (xs @ x # ys) (zsl @ z # zsr) =\n    list_assn A xs zsl * A x z * list_assn A ys zsr", "by (sep_auto simp add: mult.assoc)"], ["", "(* -------------------------------------------- *)"], ["", "subsection \\<open>Prod-Assn\\<close>"], ["", "lemma prod_assn_cong[fundef_cong]:\n  \"\\<lbrakk> p=p'; pi=pi'; A (fst p) (fst pi) = A' (fst p) (fst pi); B (snd p) (snd pi) = B' (snd p) (snd pi) \\<rbrakk> \n    \\<Longrightarrow> (A\\<times>\\<^sub>aB) p pi = (A'\\<times>\\<^sub>aB') p' pi'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p = p'; pi = pi'; A (fst p) (fst pi) = A' (fst p) (fst pi);\n     B (snd p) (snd pi) = B' (snd p) (snd pi)\\<rbrakk>\n    \\<Longrightarrow> (A \\<times>\\<^sub>a B) p pi =\n                      (A' \\<times>\\<^sub>a B') p' pi'", "apply (cases p; cases pi)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>p = p'; pi = pi'; A (fst p) (fst pi) = A' (fst p) (fst pi);\n        B (snd p) (snd pi) = B' (snd p) (snd pi); p = (a, b);\n        pi = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> (A \\<times>\\<^sub>a B) p pi =\n                         (A' \\<times>\\<^sub>a B') p' pi'", "by auto"], ["", "end"]]}