{"file_name": "/home/qj213/afp-2021-10-22/thys/Diophantine_Eqns_Lin_Hom/Linear_Diophantine_Equations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Diophantine_Eqns_Lin_Hom", "problem_names": ["lemma lcm_div_le:\n  fixes a :: nat\n  shows \"lcm a b div b \\<le> a\"", "lemma lcm_div_le':\n  fixes a :: nat\n  shows \"lcm a b div a \\<le> b\"", "lemma lcm_div_gt_0:\n  fixes a :: nat\n  assumes \"a > 0\" and \"b > 0\"\n  shows \"lcm a b div a > 0\"", "lemma sum_list_list_update_Suc:\n  assumes \"i < length u\"\n  shows \"sum_list (u[i := Suc (u ! i)]) = Suc (sum_list u)\"", "lemma lessThan_conv:\n  assumes \"card A = n\" and \"\\<forall>x\\<in>A. x < n\"\n  shows \"A = {..<n}\"", "lemma list_mod_cases:\n  assumes \"length xs = n\" and \"n > 0\"\n  shows \"(\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs. \\<exists>j<length xs. i \\<noteq> j \\<and> (xs ! i) mod n = (xs ! j) mod n)\"", "lemma in_Solutions_iff:\n  \"(x, y) \\<in> Solutions \\<longleftrightarrow> length x = m \\<and> length y = n \\<and> a \\<bullet> x = b \\<bullet> y\"", "lemma Ej_take_subset:\n  \"Ej j (take k x) \\<subseteq> Ej j x\"", "lemma Di_take_subset:\n  \"Di i (take l y) \\<subseteq> Di i y\"", "lemma Di'_drop_subset:\n  \"Di' i (drop l y) \\<subseteq> Di' i y\"", "lemma finite_Ej:\n  \"finite (Ej j x)\"", "lemma finite_Di:\n  \"finite (Di i y)\"", "lemma finite_Di':\n  \"finite (Di' i y)\"", "lemma Min_Ej_le:\n  assumes \"j < n\"\n    and \"e \\<in> Ej j x\"\n    and \"length x \\<le> m\"\n  shows \"Min (Ej j x) \\<le> Max (set a)\" (is \"?m \\<le> _\")", "lemma Min_Di_le:\n  assumes \"i < m\"\n    and \"e \\<in> Di i y\"\n    and \"length y \\<le> n\"\n  shows \"Min (Di i y) \\<le> Max (set b)\" (is \"?m \\<le> _\")", "lemma Min_Di'_le:\n  assumes \"i < m\"\n    and \"e \\<in> Di' i y\"\n    and \"length y \\<le> n\"\n  shows \"Min (Di' i y) \\<le> Max (set b)\" (is \"?m \\<le> _\")", "lemma max_y_le_take:\n  assumes \"length x \\<le> m\"\n  shows \"max_y x j \\<le> max_y (take k x) j\"", "lemma max_x_le_take:\n  assumes \"length y \\<le> n\"\n  shows \"max_x y i \\<le> max_x (take l y) i\"", "lemma max_x'_le_drop:\n  assumes \"length y \\<le> n\"\n  shows \"max_x' y i \\<le> max_x' (drop l y) i\"", "lemma Solutions_sym: \"(x, y) \\<in> Solutions a b \\<longleftrightarrow> (y, x) \\<in> Solutions b a\"", "lemma Minimal_Solutions_imp_Solutions: \"(x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow> (x, y) \\<in> Solutions a b\"", "lemma Minimal_SolutionsI:\n  assumes \"(x, y) \\<in> Solutions a b\"\n    and \"nonzero x\"\n    and \"\\<not> (\\<exists>(u, v) \\<in> Solutions a b. nonzero u \\<and> u @ v <\\<^sub>v x @ y)\"\n  shows \"(x, y) \\<in> Minimal_Solutions a b\"", "lemma minimize_nonzero_solution:\n  assumes \"(x, y) \\<in> Solutions a b\" and \"nonzero x\"\n  obtains u and v where \"u @ v \\<le>\\<^sub>v x @ y\" and \"(u, v) \\<in> Minimal_Solutions a b\"", "lemma Minimal_SolutionsI':\n  assumes \"(x, y) \\<in> Solutions a b\"\n    and \"nonzero x\"\n    and \"\\<not> (\\<exists>(u, v) \\<in> Minimal_Solutions a b. u @ v <\\<^sub>v x @ y)\"\n  shows \"(x, y) \\<in> Minimal_Solutions a b\"", "lemma Minimal_Solutions_length:\n  \"(x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow> length x = length a \\<and> length y = length b\"", "lemma Minimal_Solutions_gt0:\n  \"(x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow> zeroes (length x) <\\<^sub>v x\"", "lemma Minimal_Solutions_sym:\n  assumes \"0 \\<notin> set a\" and \"0 \\<notin> set b\"\n  shows \"(xs, ys) \\<in> Minimal_Solutions a b \\<longrightarrow> (ys, xs) \\<in> Minimal_Solutions b a\"", "lemma nonzero_Solutions_iff:\n  assumes \"(x, y) \\<in> Solutions\"\n  shows \"nonzero x \\<longleftrightarrow> nonzero y\"", "lemma Minimal_Solutions_min:\n  assumes \"(x, y) \\<in> Minimal_Solutions\"\n    and \"u @ v <\\<^sub>v x @ y\"\n    and \"a \\<bullet> u = b \\<bullet> v\"\n    and [simp]: \"length u = m\"\n    and non0: \"nonzero (u @ v)\"\n  shows False", "lemma Solutions_snd_not_0:\n  assumes \"(x, y) \\<in> Solutions\"\n    and \"nonzero x\"\n  shows \"nonzero y\"", "lemma huets_us_simps [simp]:\n  \"\\<^bold>u y 0 = inc y 0 (zeroes (length y))\"\n  \"\\<^bold>u y (Suc i) = inc y 0 (\\<^bold>u y i)\"", "lemma length_inc [simp]: \"length (inc y i u) = length u\"", "lemma length_us [simp]:\n  \"length (\\<^bold>u y i) = length y\"", "lemma inc_le:\n  assumes \"length u = length y\" and \"i < length y\" and \"u \\<le>\\<^sub>v y\"\n  shows \"inc y i u \\<le>\\<^sub>v y\"", "lemma us_le:\n  assumes \"length y > 0\"\n  shows \"\\<^bold>u y i \\<le>\\<^sub>v y\"", "lemma sum_list_inc_le:\n  \"u \\<le>\\<^sub>v y \\<Longrightarrow> sum_list (inc y i u) \\<le> sum_list y\"", "lemma sum_list_inc_gt0:\n  assumes \"sum_list u > 0\" and \"length y = length u\"\n  shows \"sum_list (inc y i u) > 0\"", "lemma sum_list_inc_gt0':\n  assumes \"length u = length y\" and \"i < length y\" and \"y ! i > 0\" and \"j \\<le> i\"\n  shows \"sum_list (inc y j u) > 0\"", "lemma sum_list_us_gt0:\n  assumes \"sum_list y \\<noteq> 0\"\n  shows \"0 < sum_list (\\<^bold>u y i)\"", "lemma sum_list_inc_le':\n  assumes \"length u = length y\"\n  shows \"sum_list (inc y i u) \\<le> sum_list u + 1\"", "lemma sum_list_us_le:\n  \"sum_list (\\<^bold>u y i) \\<le> i + 1\"", "lemma sum_list_us_bounded:\n  assumes \"i < k\"\n  shows \"sum_list (\\<^bold>u y i) \\<le> k\"", "lemma sum_list_inc_eq_sum_list_Suc:\n  assumes \"length u = length y\" and \"i < length y\"\n    and \"\\<exists>j\\<ge>i. j < length y \\<and> u ! j < y ! j\"\n  shows \"sum_list (inc y i u) = Suc (sum_list u)\"", "lemma sum_list_us_eq:\n  assumes \"i < sum_list y\"\n  shows \"sum_list (\\<^bold>u y i) = i + 1\"", "lemma inc_ge: \"length u = length y \\<Longrightarrow> u \\<le>\\<^sub>v inc y i u\"", "lemma us_le_mono:\n  assumes \"i < j\"\n  shows \"\\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\"", "lemma us_mono:\n  assumes \"i < j\" and \"j < sum_list y\"\n  shows \"\\<^bold>u y i <\\<^sub>v \\<^bold>u y j\"", "lemma max_coeff_bound_right:\n  assumes \"(xs, ys) \\<in> Minimal_Solutions\"\n  shows \"\\<forall>x \\<in> set xs. x \\<le> maxne0 ys b\" (is \"\\<forall>x\\<in>set xs. x \\<le> ?m\")", "lemma max_coeff_bound:\n  assumes \"(xs, ys) \\<in> Minimal_Solutions\"\n  shows \"(\\<forall>x \\<in> set xs. x \\<le> maxne0 ys b) \\<and> (\\<forall>y \\<in> set ys. y \\<le> maxne0 xs a)\"", "lemma max_coeff_bound':\n  assumes \"(x, y) \\<in> Minimal_Solutions\"\n  shows \"\\<forall>i<length x. x ! i \\<le> Max (set b)\" and \"\\<forall>j<length y. y ! j \\<le> Max (set a)\"", "lemma Minimal_Solutions_alt_def:\n  \"Minimal_Solutions = {(x, y)\\<in>Solutions.\n    (x, y) \\<noteq> (zeroes m, zeroes n) \\<and>\n    x \\<le>\\<^sub>v replicate m (Max (set b)) \\<and>\n    y \\<le>\\<^sub>v replicate n (Max (set a)) \\<and>\n    \\<not> (\\<exists>(u, v)\\<in>Solutions. nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\"", "lemma dij_neq_0:\n  assumes \"i < m\"\n    and \"j < n\"\n  shows \"dij i j \\<noteq> 0\"", "lemma eij_neq_0:\n  assumes \"i < m\"\n    and \"j < n\"\n  shows \"eij i j \\<noteq> 0\"", "lemma Special_Solutions_in_Solutions:\n  \"x \\<in> Special_Solutions \\<Longrightarrow> x \\<in> Solutions\"", "lemma Special_Solutions_in_Minimal_Solutions:\n  assumes \"(x, y) \\<in> Special_Solutions\"\n  shows \"(x, y) \\<in> Minimal_Solutions\"", "lemma non_special_solution_non_minimal:\n  assumes \"(x, y) \\<in> Solutions - Special_Solutions\"\n    and ij: \"i < m\" \"j < n\"\n    and \"x ! i \\<ge> dij i j\" and \"y ! j \\<ge> eij i j\"\n  shows \"(x, y) \\<notin> Minimal_Solutions\"", "lemma boundr:\n  assumes min: \"(x, y) \\<in> Minimal_Solutions\"\n    and \"(x, y) \\<notin> Special_Solutions\"\n  shows \"boundr x y\"", "lemma boundl:\n  assumes min: \"(x, y) \\<in> Minimal_Solutions\"\n    and \"(x, y) \\<notin> Special_Solutions\"\n  shows \"boundl x y\"", "lemma Solution_imp_cond_D:\n  assumes \"(x, y) \\<in> Solutions\"\n  shows \"cond_D x y\"", "lemma Solution_imp_subdprodl:\n  assumes \"(x, y) \\<in> Solutions\"\n  shows \"subdprodl x y\"", "theorem conds:\n  assumes min: \"(x, y) \\<in> Minimal_Solutions\"\n  shows cond_A: \"cond_A x y\"\n    and cond_B: \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x\"\n    and \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\"\n    and cond_D: \"cond_D x y\"\n    and subdprodr: \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\"\n    and subdprodl: \"subdprodl x y\"", "lemma le_imp_Ej_subset:\n  assumes \"u \\<le>\\<^sub>v x\"\n  shows \"Ej j u \\<subseteq> Ej j x\"", "lemma le_imp_max_y_ge:\n  assumes \"u \\<le>\\<^sub>v x\"\n    and \"length x \\<le> m\"\n  shows \"max_y u j \\<ge> max_y x j\"", "lemma le_imp_Di_subset:\n  assumes \"v \\<le>\\<^sub>v y\"\n  shows \"Di i v \\<subseteq> Di i y\"", "lemma le_imp_max_x_ge:\n  assumes \"v \\<le>\\<^sub>v y\"\n    and \"length y \\<le> n\"\n  shows \"max_x v i \\<ge> max_x y i\""], "translations": [["", "lemma lcm_div_le:\n  fixes a :: nat\n  shows \"lcm a b div b \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcm a b div b \\<le> a", "by (metis div_by_0 div_le_dividend div_le_mono div_mult_self_is_m lcm_nat_def neq0_conv)"], ["", "(*TODO: move*)"], ["", "lemma lcm_div_le':\n  fixes a :: nat\n  shows \"lcm a b div a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcm a b div a \\<le> b", "by (metis lcm.commute lcm_div_le)"], ["", "(*TODO: move*)"], ["", "lemma lcm_div_gt_0:\n  fixes a :: nat\n  assumes \"a > 0\" and \"b > 0\"\n  shows \"lcm a b div a > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < lcm a b div a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < lcm a b div a", "have \"lcm a b = (a * b) div (gcd a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcm a b = a * b div gcd a b", "using lcm_nat_def"], ["proof (prove)\nusing this:\n  lcm ?x ?y = ?x * ?y div gcd ?x ?y\n\ngoal (1 subgoal):\n 1. lcm a b = a * b div gcd a b", "by blast"], ["proof (state)\nthis:\n  lcm a b = a * b div gcd a b\n\ngoal (1 subgoal):\n 1. 0 < lcm a b div a", "moreover"], ["proof (state)\nthis:\n  lcm a b = a * b div gcd a b\n\ngoal (1 subgoal):\n 1. 0 < lcm a b div a", "have \"\\<dots> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a * b div gcd a b", "using  assms"], ["proof (prove)\nusing this:\n  0 < a\n  0 < b\n\ngoal (1 subgoal):\n 1. 0 < a * b div gcd a b", "by (metis assms calculation lcm_pos_nat)"], ["proof (state)\nthis:\n  0 < a * b div gcd a b\n\ngoal (1 subgoal):\n 1. 0 < lcm a b div a", "ultimately"], ["proof (chain)\npicking this:\n  lcm a b = a * b div gcd a b\n  0 < a * b div gcd a b", "show ?thesis"], ["proof (prove)\nusing this:\n  lcm a b = a * b div gcd a b\n  0 < a * b div gcd a b\n\ngoal (1 subgoal):\n 1. 0 < lcm a b div a", "using assms"], ["proof (prove)\nusing this:\n  lcm a b = a * b div gcd a b\n  0 < a * b div gcd a b\n  0 < a\n  0 < b\n\ngoal (1 subgoal):\n 1. 0 < lcm a b div a", "by (metis div_by_0 div_mult2_eq div_positive gcd_le2_nat nat_mult_div_cancel_disj neq0_conv\n              semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  0 < lcm a b div a\n\ngoal:\nNo subgoals!", "qed"], ["", "(*TODO: move*)"], ["", "lemma sum_list_list_update_Suc:\n  assumes \"i < length u\"\n  shows \"sum_list (u[i := Suc (u ! i)]) = Suc (sum_list u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (u[i := Suc (u ! i)]) = Suc (sum_list u)", "using assms"], ["proof (prove)\nusing this:\n  i < length u\n\ngoal (1 subgoal):\n 1. sum_list (u[i := Suc (u ! i)]) = Suc (sum_list u)", "proof (induct u arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < length [] \\<Longrightarrow>\n       sum_list ([][i := Suc ([] ! i)]) = Suc (sum_list [])\n 2. \\<And>a u i.\n       \\<lbrakk>\\<And>i.\n                   i < length u \\<Longrightarrow>\n                   sum_list (u[i := Suc (u ! i)]) = Suc (sum_list u);\n        i < length (a # u)\\<rbrakk>\n       \\<Longrightarrow> sum_list ((a # u)[i := Suc ((a # u) ! i)]) =\n                         Suc (sum_list (a # u))", "case (Cons x xs)"], ["proof (state)\nthis:\n  ?i < length xs \\<Longrightarrow>\n  sum_list (xs[?i := Suc (xs ! ?i)]) = Suc (sum_list xs)\n  i < length (x # xs)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < length [] \\<Longrightarrow>\n       sum_list ([][i := Suc ([] ! i)]) = Suc (sum_list [])\n 2. \\<And>a u i.\n       \\<lbrakk>\\<And>i.\n                   i < length u \\<Longrightarrow>\n                   sum_list (u[i := Suc (u ! i)]) = Suc (sum_list u);\n        i < length (a # u)\\<rbrakk>\n       \\<Longrightarrow> sum_list ((a # u)[i := Suc ((a # u) ! i)]) =\n                         Suc (sum_list (a # u))", "then"], ["proof (chain)\npicking this:\n  ?i < length xs \\<Longrightarrow>\n  sum_list (xs[?i := Suc (xs ! ?i)]) = Suc (sum_list xs)\n  i < length (x # xs)", "show ?case"], ["proof (prove)\nusing this:\n  ?i < length xs \\<Longrightarrow>\n  sum_list (xs[?i := Suc (xs ! ?i)]) = Suc (sum_list xs)\n  i < length (x # xs)\n\ngoal (1 subgoal):\n 1. sum_list ((x # xs)[i := Suc ((x # xs) ! i)]) = Suc (sum_list (x # xs))", "by (simp_all split: nat.splits)"], ["proof (state)\nthis:\n  sum_list ((x # xs)[i := Suc ((x # xs) ! i)]) = Suc (sum_list (x # xs))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length [] \\<Longrightarrow>\n       sum_list ([][i := Suc ([] ! i)]) = Suc (sum_list [])", "qed (simp)"], ["", "(*TODO: move*)"], ["", "lemma lessThan_conv:\n  assumes \"card A = n\" and \"\\<forall>x\\<in>A. x < n\"\n  shows \"A = {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = {..<n}", "using assms"], ["proof (prove)\nusing this:\n  card A = n\n  \\<forall>x\\<in>A. x < n\n\ngoal (1 subgoal):\n 1. A = {..<n}", "by (simp add: card_subset_eq subsetI)"], ["", "text \\<open>\n  Given a non-empty list \\<open>xs\\<close> of \\<open>n\\<close> natural numbers,\n  either there is a value in \\<open>xs\\<close> that is \\<open>0\\<close> modulo \\<open>n\\<close>,\n  or there are two values whose moduli coincide.\n\\<close>"], ["", "lemma list_mod_cases:\n  assumes \"length xs = n\" and \"n > 0\"\n  shows \"(\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs. \\<exists>j<length xs. i \\<noteq> j \\<and> (xs ! i) mod n = (xs ! j) mod n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "let ?f = \"\\<lambda>x. x mod n\" and ?X = \"set xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "have *: \"\\<forall>x \\<in> ?f ` ?X. x < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>x. x mod n) ` set xs. x < n", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>x. x mod n) ` set xs. x < n", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>x. x mod n) ` set xs. x < n\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "consider (eq) \"card (?f ` ?X) = card ?X\" | (less) \"card (?f ` ?X) < card ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>card ((\\<lambda>x. x mod n) ` set xs) =\n             card (set xs) \\<Longrightarrow>\n             thesis;\n     card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using antisym_conv2 and card_image_le"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> (\\<not> ?x < ?y) = (?x = ?y)\n  finite ?A \\<Longrightarrow> card (?f ` ?A) \\<le> card ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>card ((\\<lambda>x. x mod n) ` set xs) =\n             card (set xs) \\<Longrightarrow>\n             thesis;\n     card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>card ((\\<lambda>x. x mod n) ` set xs) =\n           card (set xs) \\<Longrightarrow>\n           ?thesis;\n   card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>card ((\\<lambda>x. x mod n) ` set xs) =\n           card (set xs) \\<Longrightarrow>\n           ?thesis;\n   card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>card ((\\<lambda>x. x mod n) ` set xs) =\n           card (set xs) \\<Longrightarrow>\n           ?thesis;\n   card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. card ((\\<lambda>x. x mod n) ` set xs) = card (set xs) \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n 2. card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "case eq"], ["proof (state)\nthis:\n  card ((\\<lambda>x. x mod n) ` set xs) = card (set xs)\n\ngoal (2 subgoals):\n 1. card ((\\<lambda>x. x mod n) ` set xs) = card (set xs) \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n 2. card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "proof (cases \"distinct xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n 2. \\<not> distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "assume \"distinct xs\""], ["proof (state)\nthis:\n  distinct xs\n\ngoal (2 subgoals):\n 1. distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n 2. \\<not> distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "with eq"], ["proof (chain)\npicking this:\n  card ((\\<lambda>x. x mod n) ` set xs) = card (set xs)\n  distinct xs", "have \"card (?f ` ?X) = n\""], ["proof (prove)\nusing this:\n  card ((\\<lambda>x. x mod n) ` set xs) = card (set xs)\n  distinct xs\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>x. x mod n) ` set xs) = n", "using \\<open>distinct xs\\<close>"], ["proof (prove)\nusing this:\n  card ((\\<lambda>x. x mod n) ` set xs) = card (set xs)\n  distinct xs\n  distinct xs\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>x. x mod n) ` set xs) = n", "by (simp add: assms card_distinct distinct_card)"], ["proof (state)\nthis:\n  card ((\\<lambda>x. x mod n) ` set xs) = n\n\ngoal (2 subgoals):\n 1. distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n 2. \\<not> distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "from lessThan_conv [OF this *] and \\<open>n > 0\\<close>"], ["proof (chain)\npicking this:\n  (\\<lambda>x. x mod n) ` set xs = {..<n}\n  0 < n", "have \"\\<exists>x\\<in>set xs. x mod n = 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x mod n) ` set xs = {..<n}\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>set xs. x mod n = 0", "by (metis imageE lessThan_iff)"], ["proof (state)\nthis:\n  \\<exists>x\\<in>set xs. x mod n = 0\n\ngoal (2 subgoals):\n 1. distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n 2. \\<not> distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>set xs. x mod n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>set xs. x mod n = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", ".."], ["proof (state)\nthis:\n  (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n  (\\<exists>i<length xs.\n      \\<exists>j<length xs. i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "assume \"\\<not> distinct xs\""], ["proof (state)\nthis:\n  \\<not> distinct xs\n\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "then"], ["proof (chain)\npicking this:\n  \\<not> distinct xs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> distinct xs\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "by (auto) (metis distinct_conv_nth)"], ["proof (state)\nthis:\n  (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n  (\\<exists>i<length xs.\n      \\<exists>j<length xs. i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n  (\\<exists>i<length xs.\n      \\<exists>j<length xs. i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "case less"], ["proof (state)\nthis:\n  card ((\\<lambda>x. x mod n) ` set xs) < card (set xs)\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>x. x mod n) ` set xs) < card (set xs) \\<Longrightarrow>\n    (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "from pigeonhole [OF this]"], ["proof (chain)\npicking this:\n  \\<not> inj_on (\\<lambda>x. x mod n) (set xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> inj_on (\\<lambda>x. x mod n) (set xs)\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n    (\\<exists>i<length xs.\n        \\<exists>j<length xs.\n           i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)", "by (auto simp: inj_on_def iff: in_set_conv_nth)"], ["proof (state)\nthis:\n  (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n  (\\<exists>i<length xs.\n      \\<exists>j<length xs. i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x\\<in>set xs. x mod n = 0) \\<or>\n  (\\<exists>i<length xs.\n      \\<exists>j<length xs. i \\<noteq> j \\<and> xs ! i mod n = xs ! j mod n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Homogeneous linear Diophantine equations:\n  \\<open>a\\<^sub>1x\\<^sub>1 + \\<cdots> + a\\<^sub>mx\\<^sub>m = b\\<^sub>1y\\<^sub>1 + \\<cdots> + b\\<^sub>ny\\<^sub>n\\<close>\n\\<close>"], ["", "locale hlde_ops =\n  fixes a b :: \"nat list\"\nbegin"], ["", "abbreviation \"m \\<equiv> length a\""], ["", "abbreviation \"n \\<equiv> length b\"\n\n\\<comment> \\<open>The set of all solutions.\\<close>"], ["", "definition Solutions :: \"(nat list \\<times> nat list) set\"\n  where\n    \"Solutions = {(x, y). a \\<bullet> x = b \\<bullet> y \\<and> length x = m \\<and> length y = n}\""], ["", "lemma in_Solutions_iff:\n  \"(x, y) \\<in> Solutions \\<longleftrightarrow> length x = m \\<and> length y = n \\<and> a \\<bullet> x = b \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> Solutions) =\n    (length x = m \\<and> length y = n \\<and> a \\<bullet> x = b \\<bullet> y)", "by (auto simp: Solutions_def)\n\n\\<comment> \\<open>The set of pointwise minimal solutions.\\<close>"], ["", "definition Minimal_Solutions :: \"(nat list \\<times> nat list) set\"\n  where\n    \"Minimal_Solutions = {(x, y) \\<in> Solutions. nonzero x \\<and>\n      \\<not> (\\<exists>(u, v) \\<in> Solutions. nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\""], ["", "definition dij :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\n  where\n    \"dij i j = lcm (a ! i) (b ! j) div (a ! i)\""], ["", "definition eij :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\n  where\n    \"eij i j = lcm (a ! i) (b ! j) div (b ! j)\""], ["", "definition sij :: \"nat \\<Rightarrow> nat \\<Rightarrow> (nat list \\<times> nat list)\"\n  where\n    \"sij i j = ((zeroes m)[i := dij i j], (zeroes n)[j := eij i j])\""], ["", "subsection \\<open>Further Constraints on Minimal Solutions\\<close>"], ["", "definition Ej :: \"nat \\<Rightarrow> nat list \\<Rightarrow> nat set\"\n  where\n    \"Ej j x = { eij i j - 1 | i. i < length x \\<and> x ! i \\<ge> dij i j }\""], ["", "definition Di :: \"nat \\<Rightarrow> nat list \\<Rightarrow> nat set\"\n  where\n    \"Di i y = { dij i j - 1 | j. j < length y \\<and> y ! j \\<ge> eij i j }\""], ["", "definition Di' :: \"nat \\<Rightarrow> nat list \\<Rightarrow> nat set\"\n  where\n    \"Di' i y = { dij i (j + length b - length y) - 1 | j. j < length y \\<and> y ! j \\<ge> eij i (j + length b - length y) }\""], ["", "lemma Ej_take_subset:\n  \"Ej j (take k x) \\<subseteq> Ej j x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ej j (take k x) \\<subseteq> Ej j x", "by (auto simp: Ej_def)"], ["", "lemma Di_take_subset:\n  \"Di i (take l y) \\<subseteq> Di i y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Di i (take l y) \\<subseteq> Di i y", "by (auto simp: Di_def)"], ["", "lemma Di'_drop_subset:\n  \"Di' i (drop l y) \\<subseteq> Di' i y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Di' i (drop l y) \\<subseteq> Di' i y", "by (auto simp: Di'_def) (metis add.assoc add.commute less_diff_conv)"], ["", "lemma finite_Ej:\n  \"finite (Ej j x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Ej j x)", "by (rule finite_subset [of _ \"(\\<lambda>i. eij i j - 1) ` {0 ..< length x}\"]) (auto simp: Ej_def)"], ["", "lemma finite_Di:\n  \"finite (Di i y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Di i y)", "by (rule finite_subset [of _ \"(\\<lambda>j. dij i j - 1) ` {0 ..< length y}\"]) (auto simp: Di_def)"], ["", "lemma finite_Di':\n  \"finite (Di' i y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Di' i y)", "by (rule finite_subset [of _ \"(\\<lambda>j. dij i (j + length b - length y) - 1) ` {0 ..< length y}\"])\n    (auto simp: Di'_def)"], ["", "definition max_y :: \"nat list \\<Rightarrow> nat \\<Rightarrow> nat\"\n  where\n    \"max_y x j = (if j < n \\<and> Ej j x \\<noteq> {} then Min (Ej j x) else Max (set a))\""], ["", "definition max_x :: \"nat list \\<Rightarrow> nat \\<Rightarrow> nat\"\n  where\n    \"max_x y i = (if i < m \\<and> Di i y \\<noteq> {} then Min (Di i y) else Max (set b))\""], ["", "definition max_x' :: \"nat list \\<Rightarrow> nat \\<Rightarrow> nat\"\n  where\n    \"max_x' y i = (if i < m \\<and> Di' i y \\<noteq> {} then Min (Di' i y) else Max (set b))\""], ["", "lemma Min_Ej_le:\n  assumes \"j < n\"\n    and \"e \\<in> Ej j x\"\n    and \"length x \\<le> m\"\n  shows \"Min (Ej j x) \\<le> Max (set a)\" (is \"?m \\<le> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<le> Max (set a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<le> Max (set a)", "have \"?m \\<in> Ej j x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<in> Ej j x", "using assms and finite_Ej and Min_in"], ["proof (prove)\nusing this:\n  j < n\n  e \\<in> Ej j x\n  length x \\<le> m\n  finite (Ej ?j ?x)\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<in> Ej j x", "by blast"], ["proof (state)\nthis:\n  Min (Ej j x) \\<in> Ej j x\n\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<le> Max (set a)", "then"], ["proof (chain)\npicking this:\n  Min (Ej j x) \\<in> Ej j x", "obtain i where\n    i: \"?m = eij i j - 1\" \"i < length x\" \"x ! i \\<ge> dij i j\""], ["proof (prove)\nusing this:\n  Min (Ej j x) \\<in> Ej j x\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>Min (Ej j x) = eij i j - 1; i < length x;\n         dij i j \\<le> x ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Ej_def)"], ["proof (state)\nthis:\n  Min (Ej j x) = eij i j - 1\n  i < length x\n  dij i j \\<le> x ! i\n\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<le> Max (set a)", "have \"lcm (a ! i) (b ! j) div b ! j \\<le> a ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcm (a ! i) (b ! j) div b ! j \\<le> a ! i", "by (rule lcm_div_le)"], ["proof (state)\nthis:\n  lcm (a ! i) (b ! j) div b ! j \\<le> a ! i\n\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<le> Max (set a)", "then"], ["proof (chain)\npicking this:\n  lcm (a ! i) (b ! j) div b ! j \\<le> a ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  lcm (a ! i) (b ! j) div b ! j \\<le> a ! i\n\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<le> Max (set a)", "using i and assms"], ["proof (prove)\nusing this:\n  lcm (a ! i) (b ! j) div b ! j \\<le> a ! i\n  Min (Ej j x) = eij i j - 1\n  i < length x\n  dij i j \\<le> x ! i\n  j < n\n  e \\<in> Ej j x\n  length x \\<le> m\n\ngoal (1 subgoal):\n 1. Min (Ej j x) \\<le> Max (set a)", "by (auto simp: eij_def)\n      (meson List.finite_set Max_ge diff_le_self le_trans less_le_trans nth_mem)"], ["proof (state)\nthis:\n  Min (Ej j x) \\<le> Max (set a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Min_Di_le:\n  assumes \"i < m\"\n    and \"e \\<in> Di i y\"\n    and \"length y \\<le> n\"\n  shows \"Min (Di i y) \\<le> Max (set b)\" (is \"?m \\<le> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (Di i y) \\<le> Max (set b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Min (Di i y) \\<le> Max (set b)", "have \"?m \\<in> Di i y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (Di i y) \\<in> Di i y", "using assms and finite_Di and Min_in"], ["proof (prove)\nusing this:\n  i < m\n  e \\<in> Di i y\n  length y \\<le> n\n  finite (Di ?i ?y)\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. Min (Di i y) \\<in> Di i y", "by blast"], ["proof (state)\nthis:\n  Min (Di i y) \\<in> Di i y\n\ngoal (1 subgoal):\n 1. Min (Di i y) \\<le> Max (set b)", "then"], ["proof (chain)\npicking this:\n  Min (Di i y) \\<in> Di i y", "obtain j where\n    j: \"?m = dij i j - 1\" \"j < length y\" \"y ! j \\<ge> eij i j\""], ["proof (prove)\nusing this:\n  Min (Di i y) \\<in> Di i y\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>Min (Di i y) = dij i j - 1; j < length y;\n         eij i j \\<le> y ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Di_def)"], ["proof (state)\nthis:\n  Min (Di i y) = dij i j - 1\n  j < length y\n  eij i j \\<le> y ! j\n\ngoal (1 subgoal):\n 1. Min (Di i y) \\<le> Max (set b)", "have \"lcm (a ! i) (b ! j) div a ! i \\<le> b ! j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcm (a ! i) (b ! j) div a ! i \\<le> b ! j", "by (rule lcm_div_le')"], ["proof (state)\nthis:\n  lcm (a ! i) (b ! j) div a ! i \\<le> b ! j\n\ngoal (1 subgoal):\n 1. Min (Di i y) \\<le> Max (set b)", "then"], ["proof (chain)\npicking this:\n  lcm (a ! i) (b ! j) div a ! i \\<le> b ! j", "show ?thesis"], ["proof (prove)\nusing this:\n  lcm (a ! i) (b ! j) div a ! i \\<le> b ! j\n\ngoal (1 subgoal):\n 1. Min (Di i y) \\<le> Max (set b)", "using j and assms"], ["proof (prove)\nusing this:\n  lcm (a ! i) (b ! j) div a ! i \\<le> b ! j\n  Min (Di i y) = dij i j - 1\n  j < length y\n  eij i j \\<le> y ! j\n  i < m\n  e \\<in> Di i y\n  length y \\<le> n\n\ngoal (1 subgoal):\n 1. Min (Di i y) \\<le> Max (set b)", "by (auto simp: dij_def)\n      (meson List.finite_set Max_ge diff_le_self le_trans less_le_trans nth_mem)"], ["proof (state)\nthis:\n  Min (Di i y) \\<le> Max (set b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Min_Di'_le:\n  assumes \"i < m\"\n    and \"e \\<in> Di' i y\"\n    and \"length y \\<le> n\"\n  shows \"Min (Di' i y) \\<le> Max (set b)\" (is \"?m \\<le> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "have \"?m \\<in> Di' i y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<in> Di' i y", "using assms and finite_Di' and Min_in"], ["proof (prove)\nusing this:\n  i < m\n  e \\<in> Di' i y\n  length y \\<le> n\n  finite (Di' ?i ?y)\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<in> Di' i y", "by blast"], ["proof (state)\nthis:\n  Min (Di' i y) \\<in> Di' i y\n\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "then"], ["proof (chain)\npicking this:\n  Min (Di' i y) \\<in> Di' i y", "obtain j where\n    j: \"?m = dij i (j + length b - length y) - 1\" \"j < length y\" \"y ! j \\<ge> eij i (j + length b - length y)\""], ["proof (prove)\nusing this:\n  Min (Di' i y) \\<in> Di' i y\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>Min (Di' i y) = dij i (j + n - length y) - 1; j < length y;\n         eij i (j + n - length y) \\<le> y ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Di'_def)"], ["proof (state)\nthis:\n  Min (Di' i y) = dij i (j + n - length y) - 1\n  j < length y\n  eij i (j + n - length y) \\<le> y ! j\n\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "then"], ["proof (chain)\npicking this:\n  Min (Di' i y) = dij i (j + n - length y) - 1\n  j < length y\n  eij i (j + n - length y) \\<le> y ! j", "have \"j + length b - length y < length b\""], ["proof (prove)\nusing this:\n  Min (Di' i y) = dij i (j + n - length y) - 1\n  j < length y\n  eij i (j + n - length y) \\<le> y ! j\n\ngoal (1 subgoal):\n 1. j + n - length y < n", "using assms"], ["proof (prove)\nusing this:\n  Min (Di' i y) = dij i (j + n - length y) - 1\n  j < length y\n  eij i (j + n - length y) \\<le> y ! j\n  i < m\n  e \\<in> Di' i y\n  length y \\<le> n\n\ngoal (1 subgoal):\n 1. j + n - length y < n", "by auto"], ["proof (state)\nthis:\n  j + n - length y < n\n\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "moreover"], ["proof (state)\nthis:\n  j + n - length y < n\n\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "have \"lcm (a ! i) (b ! (j + length b - length y)) div a ! i \\<le> b ! (j + length b - length y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcm (a ! i) (b ! (j + n - length y)) div a ! i\n    \\<le> b ! (j + n - length y)", "by (rule lcm_div_le')"], ["proof (state)\nthis:\n  lcm (a ! i) (b ! (j + n - length y)) div a ! i\n  \\<le> b ! (j + n - length y)\n\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "ultimately"], ["proof (chain)\npicking this:\n  j + n - length y < n\n  lcm (a ! i) (b ! (j + n - length y)) div a ! i\n  \\<le> b ! (j + n - length y)", "show ?thesis"], ["proof (prove)\nusing this:\n  j + n - length y < n\n  lcm (a ! i) (b ! (j + n - length y)) div a ! i\n  \\<le> b ! (j + n - length y)\n\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "using j and assms"], ["proof (prove)\nusing this:\n  j + n - length y < n\n  lcm (a ! i) (b ! (j + n - length y)) div a ! i\n  \\<le> b ! (j + n - length y)\n  Min (Di' i y) = dij i (j + n - length y) - 1\n  j < length y\n  eij i (j + n - length y) \\<le> y ! j\n  i < m\n  e \\<in> Di' i y\n  length y \\<le> n\n\ngoal (1 subgoal):\n 1. Min (Di' i y) \\<le> Max (set b)", "by (auto simp: dij_def)\n      (meson List.finite_set Max_ge diff_le_self le_trans less_le_trans nth_mem)"], ["proof (state)\nthis:\n  Min (Di' i y) \\<le> Max (set b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma max_y_le_take:\n  assumes \"length x \\<le> m\"\n  shows \"max_y x j \\<le> max_y (take k x) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_y x j \\<le> max_y (take k x) j", "using assms and Min_Ej_le and Ej_take_subset and Min.subset_imp [OF _ _ finite_Ej]"], ["proof (prove)\nusing this:\n  length x \\<le> m\n  \\<lbrakk>?j < n; ?e \\<in> Ej ?j ?x; length ?x \\<le> m\\<rbrakk>\n  \\<Longrightarrow> Min (Ej ?j ?x) \\<le> Max (set a)\n  Ej ?j (take ?k ?x) \\<subseteq> Ej ?j ?x\n  \\<lbrakk>?A \\<subseteq> Ej ?j1 ?x1; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min (Ej ?j1 ?x1) \\<le> Min ?A\n\ngoal (1 subgoal):\n 1. max_y x j \\<le> max_y (take k x) j", "by (auto simp: max_y_def) blast"], ["", "lemma max_x_le_take:\n  assumes \"length y \\<le> n\"\n  shows \"max_x y i \\<le> max_x (take l y) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_x y i \\<le> max_x (take l y) i", "using assms and Min_Di_le and Di_take_subset and Min.subset_imp [OF _ _ finite_Di]"], ["proof (prove)\nusing this:\n  length y \\<le> n\n  \\<lbrakk>?i < m; ?e \\<in> Di ?i ?y; length ?y \\<le> n\\<rbrakk>\n  \\<Longrightarrow> Min (Di ?i ?y) \\<le> Max (set b)\n  Di ?i (take ?l ?y) \\<subseteq> Di ?i ?y\n  \\<lbrakk>?A \\<subseteq> Di ?i1 ?y1; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min (Di ?i1 ?y1) \\<le> Min ?A\n\ngoal (1 subgoal):\n 1. max_x y i \\<le> max_x (take l y) i", "by (auto simp: max_x_def) blast"], ["", "lemma max_x'_le_drop:\n  assumes \"length y \\<le> n\"\n  shows \"max_x' y i \\<le> max_x' (drop l y) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_x' y i \\<le> max_x' (drop l y) i", "using assms and Min_Di'_le and Di'_drop_subset and Min.subset_imp [OF _ _ finite_Di']"], ["proof (prove)\nusing this:\n  length y \\<le> n\n  \\<lbrakk>?i < m; ?e \\<in> Di' ?i ?y; length ?y \\<le> n\\<rbrakk>\n  \\<Longrightarrow> Min (Di' ?i ?y) \\<le> Max (set b)\n  Di' ?i (drop ?l ?y) \\<subseteq> Di' ?i ?y\n  \\<lbrakk>?A \\<subseteq> Di' ?i1 ?y1; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min (Di' ?i1 ?y1) \\<le> Min ?A\n\ngoal (1 subgoal):\n 1. max_x' y i \\<le> max_x' (drop l y) i", "by (auto simp: max_x'_def) blast"], ["", "end"], ["", "abbreviation \"Solutions \\<equiv> hlde_ops.Solutions\""], ["", "abbreviation \"Minimal_Solutions \\<equiv> hlde_ops.Minimal_Solutions\""], ["", "abbreviation \"dij \\<equiv> hlde_ops.dij\""], ["", "abbreviation \"eij \\<equiv> hlde_ops.eij\""], ["", "abbreviation \"sij \\<equiv> hlde_ops.sij\""], ["", "declare hlde_ops.dij_def [code]"], ["", "declare hlde_ops.eij_def [code]"], ["", "declare hlde_ops.sij_def [code]"], ["", "lemma Solutions_sym: \"(x, y) \\<in> Solutions a b \\<longleftrightarrow> (y, x) \\<in> Solutions b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> Solutions a b) = ((y, x) \\<in> Solutions b a)", "by (auto simp: hlde_ops.in_Solutions_iff)"], ["", "lemma Minimal_Solutions_imp_Solutions: \"(x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow> (x, y) \\<in> Solutions a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow>\n    (x, y) \\<in> Solutions a b", "by (auto simp: hlde_ops.Minimal_Solutions_def)"], ["", "lemma Minimal_SolutionsI:\n  assumes \"(x, y) \\<in> Solutions a b\"\n    and \"nonzero x\"\n    and \"\\<not> (\\<exists>(u, v) \\<in> Solutions a b. nonzero u \\<and> u @ v <\\<^sub>v x @ y)\"\n  shows \"(x, y) \\<in> Minimal_Solutions a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Minimal_Solutions a b", "using assms"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Solutions a b\n  nonzero x\n  \\<not> (\\<exists>(u, v)\\<in>Solutions a b.\n             nonzero u \\<and> u @ v <\\<^sub>v x @ y)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Minimal_Solutions a b", "by (auto simp: hlde_ops.Minimal_Solutions_def)"], ["", "lemma minimize_nonzero_solution:\n  assumes \"(x, y) \\<in> Solutions a b\" and \"nonzero x\"\n  obtains u and v where \"u @ v \\<le>\\<^sub>v x @ y\" and \"(u, v) \\<in> Minimal_Solutions a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Solutions a b\n  nonzero x\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct \"x @ y\" arbitrary: x y thesis rule: wf_induct [OF wf_less])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y thesis.\n       \\<lbrakk>\\<forall>ya.\n                   (ya, x @ y)\n                   \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                   (\\<forall>x xa.\n                       ya = x @ xa \\<longrightarrow>\n                       (\\<forall>xb.\n                           (\\<forall>xc xd.\n                               xc @ xd\n                               \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                               (xc, xd)\n                               \\<in> Minimal_Solutions a b \\<longrightarrow>\n                               xb) \\<longrightarrow>\n                           (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                           nonzero x \\<longrightarrow> xb));\n        \\<And>u v.\n           \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n            (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (x, y) \\<in> Solutions a b; nonzero x\\<rbrakk>\n       \\<Longrightarrow> thesis", "case 1"], ["proof (state)\nthis:\n  \\<forall>y.\n     (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n     (\\<forall>x xa.\n         y = x @ xa \\<longrightarrow>\n         (\\<forall>xb.\n             (\\<forall>xc xd.\n                 xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                 (xc, xd) \\<in> Minimal_Solutions a b \\<longrightarrow>\n                 xb) \\<longrightarrow>\n             (x, xa) \\<in> Solutions a b \\<longrightarrow>\n             nonzero x \\<longrightarrow> xb))\n  \\<lbrakk>?u @ ?v \\<le>\\<^sub>v x @ y;\n   (?u, ?v) \\<in> Minimal_Solutions a b\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (x, y) \\<in> Solutions a b\n  nonzero x\n\ngoal (1 subgoal):\n 1. \\<And>x y thesis.\n       \\<lbrakk>\\<forall>ya.\n                   (ya, x @ y)\n                   \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                   (\\<forall>x xa.\n                       ya = x @ xa \\<longrightarrow>\n                       (\\<forall>xb.\n                           (\\<forall>xc xd.\n                               xc @ xd\n                               \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                               (xc, xd)\n                               \\<in> Minimal_Solutions a b \\<longrightarrow>\n                               xb) \\<longrightarrow>\n                           (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                           nonzero x \\<longrightarrow> xb));\n        \\<And>u v.\n           \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n            (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (x, y) \\<in> Solutions a b; nonzero x\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>y.\n     (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n     (\\<forall>x xa.\n         y = x @ xa \\<longrightarrow>\n         (\\<forall>xb.\n             (\\<forall>xc xd.\n                 xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                 (xc, xd) \\<in> Minimal_Solutions a b \\<longrightarrow>\n                 xb) \\<longrightarrow>\n             (x, xa) \\<in> Solutions a b \\<longrightarrow>\n             nonzero x \\<longrightarrow> xb))\n  \\<lbrakk>?u @ ?v \\<le>\\<^sub>v x @ y;\n   (?u, ?v) \\<in> Minimal_Solutions a b\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (x, y) \\<in> Solutions a b\n  nonzero x", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n     (\\<forall>x xa.\n         y = x @ xa \\<longrightarrow>\n         (\\<forall>xb.\n             (\\<forall>xc xd.\n                 xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                 (xc, xd) \\<in> Minimal_Solutions a b \\<longrightarrow>\n                 xb) \\<longrightarrow>\n             (x, xa) \\<in> Solutions a b \\<longrightarrow>\n             nonzero x \\<longrightarrow> xb))\n  \\<lbrakk>?u @ ?v \\<le>\\<^sub>v x @ y;\n   (?u, ?v) \\<in> Minimal_Solutions a b\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (x, y) \\<in> Solutions a b\n  nonzero x\n\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"(x, y) \\<in> Minimal_Solutions a b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<in> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<notin> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  (x, y) \\<notin> Minimal_Solutions a b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<in> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<notin> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<notin> Minimal_Solutions a b", "obtain u and v where \"nonzero u\" and \"(u, v) \\<in> Solutions a b\" and uv: \"u @ v <\\<^sub>v x @ y\""], ["proof (prove)\nusing this:\n  (x, y) \\<notin> Minimal_Solutions a b\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>nonzero u; (u, v) \\<in> Solutions a b;\n         u @ v <\\<^sub>v x @ y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1(3,4)"], ["proof (prove)\nusing this:\n  (x, y) \\<notin> Minimal_Solutions a b\n  (x, y) \\<in> Solutions a b\n  nonzero x\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>nonzero u; (u, v) \\<in> Solutions a b;\n         u @ v <\\<^sub>v x @ y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: hlde_ops.Minimal_Solutions_def)"], ["proof (state)\nthis:\n  nonzero u\n  (u, v) \\<in> Solutions a b\n  u @ v <\\<^sub>v x @ y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<in> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<notin> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis", "with 1(1) [rule_format, of \"u @ v\" u v]"], ["proof (chain)\npicking this:\n  \\<lbrakk>(u @ v, x @ y) \\<in> {(x, y). x <\\<^sub>v y}; u @ v = u @ v;\n   \\<And>x xa.\n      \\<lbrakk>x @ xa \\<le>\\<^sub>v u @ v;\n       (x, xa) \\<in> Minimal_Solutions a b\\<rbrakk>\n      \\<Longrightarrow> ?xb;\n   (u, v) \\<in> Solutions a b; nonzero u\\<rbrakk>\n  \\<Longrightarrow> ?xb\n  nonzero u\n  (u, v) \\<in> Solutions a b\n  u @ v <\\<^sub>v x @ y", "obtain u' and v' where uv': \"u' @ v' \\<le>\\<^sub>v u @ v\"\n      and \"(u', v') \\<in> Minimal_Solutions a b\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(u @ v, x @ y) \\<in> {(x, y). x <\\<^sub>v y}; u @ v = u @ v;\n   \\<And>x xa.\n      \\<lbrakk>x @ xa \\<le>\\<^sub>v u @ v;\n       (x, xa) \\<in> Minimal_Solutions a b\\<rbrakk>\n      \\<Longrightarrow> ?xb;\n   (u, v) \\<in> Solutions a b; nonzero u\\<rbrakk>\n  \\<Longrightarrow> ?xb\n  nonzero u\n  (u, v) \\<in> Solutions a b\n  u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. (\\<And>u' v'.\n        \\<lbrakk>u' @ v' \\<le>\\<^sub>v u @ v;\n         (u', v') \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u' @ v' \\<le>\\<^sub>v u @ v\n  (u', v') \\<in> Minimal_Solutions a b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<in> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<notin> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  u' @ v' \\<le>\\<^sub>v u @ v\n  (u', v') \\<in> Minimal_Solutions a b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<in> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<notin> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"u' @ v' \\<le>\\<^sub>v x @ y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' @ v' \\<le>\\<^sub>v x @ y", "using uv and uv'"], ["proof (prove)\nusing this:\n  u @ v <\\<^sub>v x @ y\n  u' @ v' \\<le>\\<^sub>v u @ v\n\ngoal (1 subgoal):\n 1. u' @ v' \\<le>\\<^sub>v x @ y", "by auto"], ["proof (state)\nthis:\n  u' @ v' \\<le>\\<^sub>v x @ y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<in> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<notin> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  u' @ v' \\<le>\\<^sub>v u @ v\n  (u', v') \\<in> Minimal_Solutions a b\n  u' @ v' \\<le>\\<^sub>v x @ y", "show ?thesis"], ["proof (prove)\nusing this:\n  u' @ v' \\<le>\\<^sub>v u @ v\n  (u', v') \\<in> Minimal_Solutions a b\n  u' @ v' \\<le>\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. thesis", "by (intro 1(2))"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>y.\n                (y, x @ y) \\<in> {(x, y). x <\\<^sub>v y} \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = x @ xa \\<longrightarrow>\n                    (\\<forall>xb.\n                        (\\<forall>xc xd.\n                            xc @ xd \\<le>\\<^sub>v x @ xa \\<longrightarrow>\n                            (xc, xd)\n                            \\<in> Minimal_Solutions a b \\<longrightarrow>\n                            xb) \\<longrightarrow>\n                        (x, xa) \\<in> Solutions a b \\<longrightarrow>\n                        nonzero x \\<longrightarrow> xb));\n     \\<And>u v.\n        \\<lbrakk>u @ v \\<le>\\<^sub>v x @ y;\n         (u, v) \\<in> Minimal_Solutions a b\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     (x, y) \\<in> Solutions a b; nonzero x;\n     (x, y) \\<in> Minimal_Solutions a b\\<rbrakk>\n    \\<Longrightarrow> thesis", "qed blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Minimal_SolutionsI':\n  assumes \"(x, y) \\<in> Solutions a b\"\n    and \"nonzero x\"\n    and \"\\<not> (\\<exists>(u, v) \\<in> Minimal_Solutions a b. u @ v <\\<^sub>v x @ y)\"\n  shows \"(x, y) \\<in> Minimal_Solutions a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Minimal_Solutions a b", "proof (rule Minimal_SolutionsI [OF assms(1,2)])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>(u, v)\\<in>Solutions a b.\n               nonzero u \\<and> u @ v <\\<^sub>v x @ y)", "show \"\\<not> (\\<exists>(u, v) \\<in> Solutions a b. nonzero u \\<and> u @ v <\\<^sub>v x @ y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>(u, v)\\<in>Solutions a b.\n               nonzero u \\<and> u @ v <\\<^sub>v x @ y)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Solutions a b.\n       nonzero u \\<and> u @ v <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "assume \"\\<exists>(u, v) \\<in> Solutions a b. nonzero u \\<and> u @ v <\\<^sub>v x @ y\""], ["proof (state)\nthis:\n  \\<exists>(u, v)\\<in>Solutions a b. nonzero u \\<and> u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Solutions a b.\n       nonzero u \\<and> u @ v <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>(u, v)\\<in>Solutions a b. nonzero u \\<and> u @ v <\\<^sub>v x @ y", "obtain u and v where \"(u, v) \\<in> Solutions a b\" and \"nonzero u\"\n      and uv: \"u @ v <\\<^sub>v x @ y\""], ["proof (prove)\nusing this:\n  \\<exists>(u, v)\\<in>Solutions a b. nonzero u \\<and> u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(u, v) \\<in> Solutions a b; nonzero u;\n         u @ v <\\<^sub>v x @ y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (u, v) \\<in> Solutions a b\n  nonzero u\n  u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Solutions a b.\n       nonzero u \\<and> u @ v <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (u, v) \\<in> Solutions a b\n  nonzero u\n  u @ v <\\<^sub>v x @ y", "obtain u' and v' where \"(u', v') \\<in> Minimal_Solutions a b\"\n      and uv': \"u' @ v' \\<le>\\<^sub>v u @ v\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> Solutions a b\n  nonzero u\n  u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. (\\<And>u' v'.\n        \\<lbrakk>(u', v') \\<in> Minimal_Solutions a b;\n         u' @ v' \\<le>\\<^sub>v u @ v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: minimize_nonzero_solution)"], ["proof (state)\nthis:\n  (u', v') \\<in> Minimal_Solutions a b\n  u' @ v' \\<le>\\<^sub>v u @ v\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Solutions a b.\n       nonzero u \\<and> u @ v <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  (u', v') \\<in> Minimal_Solutions a b\n  u' @ v' \\<le>\\<^sub>v u @ v\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Solutions a b.\n       nonzero u \\<and> u @ v <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "have \"u' @ v' <\\<^sub>v x @ y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' @ v' <\\<^sub>v x @ y", "using uv and uv'"], ["proof (prove)\nusing this:\n  u @ v <\\<^sub>v x @ y\n  u' @ v' \\<le>\\<^sub>v u @ v\n\ngoal (1 subgoal):\n 1. u' @ v' <\\<^sub>v x @ y", "by auto"], ["proof (state)\nthis:\n  u' @ v' <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Solutions a b.\n       nonzero u \\<and> u @ v <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  (u', v') \\<in> Minimal_Solutions a b\n  u' @ v' \\<le>\\<^sub>v u @ v\n  u' @ v' <\\<^sub>v x @ y", "show False"], ["proof (prove)\nusing this:\n  (u', v') \\<in> Minimal_Solutions a b\n  u' @ v' \\<le>\\<^sub>v u @ v\n  u' @ v' <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (u', v') \\<in> Minimal_Solutions a b\n  u' @ v' \\<le>\\<^sub>v u @ v\n  u' @ v' <\\<^sub>v x @ y\n  (x, y) \\<in> Solutions a b\n  nonzero x\n  \\<not> (\\<exists>(u, v)\\<in>Minimal_Solutions a b. u @ v <\\<^sub>v x @ y)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>(u, v)\\<in>Solutions a b.\n             nonzero u \\<and> u @ v <\\<^sub>v x @ y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Minimal_Solutions_length:\n  \"(x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow> length x = length a \\<and> length y = length b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow>\n    length x = length a \\<and> length y = length b", "by (auto simp: hlde_ops.Minimal_Solutions_def hlde_ops.in_Solutions_iff)"], ["", "lemma Minimal_Solutions_gt0:\n  \"(x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow> zeroes (length x) <\\<^sub>v x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow>\n    zeroes (length x) <\\<^sub>v x", "using zero_less"], ["proof (prove)\nusing this:\n  nonzero ?x \\<Longrightarrow> zeroes (length ?x) <\\<^sub>v ?x\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Minimal_Solutions a b \\<Longrightarrow>\n    zeroes (length x) <\\<^sub>v x", "by (auto simp: hlde_ops.Minimal_Solutions_def)"], ["", "lemma Minimal_Solutions_sym:\n  assumes \"0 \\<notin> set a\" and \"0 \\<notin> set b\"\n  shows \"(xs, ys) \\<in> Minimal_Solutions a b \\<longrightarrow> (ys, xs) \\<in> Minimal_Solutions b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs, ys) \\<in> Minimal_Solutions a b \\<longrightarrow>\n    (ys, xs) \\<in> Minimal_Solutions b a", "using assms"], ["proof (prove)\nusing this:\n  0 \\<notin> set a\n  0 \\<notin> set b\n\ngoal (1 subgoal):\n 1. (xs, ys) \\<in> Minimal_Solutions a b \\<longrightarrow>\n    (ys, xs) \\<in> Minimal_Solutions b a", "by (auto simp: hlde_ops.Minimal_Solutions_def hlde_ops.Solutions_def\n           dest: dotprod_eq_nonzero_iff dest!: less_append_swap [of _ _ ys xs])"], ["", "locale hlde = hlde_ops +\n  assumes no0: \"0 \\<notin> set a\" \"0 \\<notin> set b\"\nbegin"], ["", "lemma nonzero_Solutions_iff:\n  assumes \"(x, y) \\<in> Solutions\"\n  shows \"nonzero x \\<longleftrightarrow> nonzero y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonzero x = nonzero y", "using assms and no0"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Solutions\n  0 \\<notin> set a\n  0 \\<notin> set b\n\ngoal (1 subgoal):\n 1. nonzero x = nonzero y", "by (auto simp: in_Solutions_iff dest: dotprod_eq_nonzero_iff)"], ["", "lemma Minimal_Solutions_min:\n  assumes \"(x, y) \\<in> Minimal_Solutions\"\n    and \"u @ v <\\<^sub>v x @ y\"\n    and \"a \\<bullet> u = b \\<bullet> v\"\n    and [simp]: \"length u = m\"\n    and non0: \"nonzero (u @ v)\"\n  shows False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have [simp]: \"length v = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length v = n", "using assms"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  u @ v <\\<^sub>v x @ y\n  a \\<bullet> u = b \\<bullet> v\n  length u = m\n  nonzero (u @ v)\n\ngoal (1 subgoal):\n 1. length v = n", "by (force dest: less_appendD Minimal_Solutions_length)"], ["proof (state)\nthis:\n  length v = n\n\ngoal (1 subgoal):\n 1. False", "have \"(u, v) \\<in> Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) \\<in> local.Solutions", "using \\<open>a \\<bullet> u = b \\<bullet> v\\<close>"], ["proof (prove)\nusing this:\n  a \\<bullet> u = b \\<bullet> v\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> local.Solutions", "by (simp add: in_Solutions_iff)"], ["proof (state)\nthis:\n  (u, v) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. False", "moreover"], ["proof (state)\nthis:\n  (u, v) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. False", "from nonzero_Solutions_iff [OF this]"], ["proof (chain)\npicking this:\n  nonzero u = nonzero v", "have \"nonzero u\""], ["proof (prove)\nusing this:\n  nonzero u = nonzero v\n\ngoal (1 subgoal):\n 1. nonzero u", "using non0"], ["proof (prove)\nusing this:\n  nonzero u = nonzero v\n  nonzero (u @ v)\n\ngoal (1 subgoal):\n 1. nonzero u", "by auto"], ["proof (state)\nthis:\n  nonzero u\n\ngoal (1 subgoal):\n 1. False", "ultimately"], ["proof (chain)\npicking this:\n  (u, v) \\<in> local.Solutions\n  nonzero u", "show False"], ["proof (prove)\nusing this:\n  (u, v) \\<in> local.Solutions\n  nonzero u\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (u, v) \\<in> local.Solutions\n  nonzero u\n  (x, y) \\<in> local.Minimal_Solutions\n  u @ v <\\<^sub>v x @ y\n  a \\<bullet> u = b \\<bullet> v\n  length u = m\n  nonzero (u @ v)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: hlde_ops.Minimal_Solutions_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Solutions_snd_not_0:\n  assumes \"(x, y) \\<in> Solutions\"\n    and \"nonzero x\"\n  shows \"nonzero y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonzero y", "using assms"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Solutions\n  nonzero x\n\ngoal (1 subgoal):\n 1. nonzero y", "by (metis nonzero_Solutions_iff)"], ["", "end"], ["", "subsection \\<open>Pointwise Restricting Solutions\\<close>"], ["", "text \\<open>\n  Constructing the list of \\<open>u\\<close> vectors from Huet's proof @{cite \"Huet1978\"}, satisfying\n  \\<^item> \\<open>\\<forall>i<length u. u ! i \\<le> y ! i\\<close> and\n  \\<^item> \\<open>0 < sum_list u \\<le> a\\<^sub>k\\<close>.\n\\<close>"], ["", "text \\<open>\n  Given \\<open>y\\<close>, increment a \"previous\" \\<open>u\\<close> vector at first position\n  starting from \\<open>i\\<close> where \\<open>u\\<close> is strictly smaller than \\<open>y\\<close>. If this\n  is not possible, return \\<open>u\\<close> unchanged.\n\\<close>"], ["", "function inc :: \"nat list \\<Rightarrow> nat \\<Rightarrow> nat list \\<Rightarrow> nat list\"\n  where\n    \"inc y i u =\n      (if i < length y then\n        if u ! i < y ! i then u[i := u ! i + 1]\n        else inc y (Suc i) u\n      else u)\""], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P x.\n       (\\<And>y i u. x = (y, i, u) \\<Longrightarrow> P) \\<Longrightarrow> P\n 2. \\<And>y i u ya ia ua.\n       (y, i, u) = (ya, ia, ua) \\<Longrightarrow>\n       (if i < length y\n        then if u ! i < y ! i then u[i := u ! i + 1]\n             else inc_sumC (y, Suc i, u)\n        else u) =\n       (if ia < length ya\n        then if ua ! ia < ya ! ia then ua[ia := ua ! ia + 1]\n             else inc_sumC (ya, Suc ia, ua)\n        else ua)", "by (pat_completeness) auto"], ["", "termination inc"], ["proof (prove)\ngoal (1 subgoal):\n 1. All inc_dom", "by (relation \"measure (\\<lambda>(y, i, u). max (length y) (length u) - i)\") auto"], ["", "(*inc.simps may cause simplification to loop*)"], ["", "declare inc.simps [simp del]"], ["", "text \\<open>\n  Starting from the 0-vector produce \\<open>u\\<close>s by iteratively\n  incrementing with respect to \\<open>y\\<close>.\n\\<close>"], ["", "definition huets_us :: \"nat list \\<Rightarrow> nat \\<Rightarrow> nat list\" (\"\\<^bold>u\" 1000)\n  where\n    \"\\<^bold>u y i = ((inc y 0) ^^ Suc i) (zeroes (length y))\""], ["", "lemma huets_us_simps [simp]:\n  \"\\<^bold>u y 0 = inc y 0 (zeroes (length y))\"\n  \"\\<^bold>u y (Suc i) = inc y 0 (\\<^bold>u y i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>u y 0 = inc y 0 (zeroes (length y)) &&&\n    \\<^bold>u y (Suc i) = inc y 0 (\\<^bold>u y i)", "by (auto simp: huets_us_def)"], ["", "lemma length_inc [simp]: \"length (inc y i u) = length u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (inc y i u) = length u", "by (induct y i u rule: inc.induct) (simp add: inc.simps)"], ["", "lemma length_us [simp]:\n  \"length (\\<^bold>u y i) = length y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (\\<^bold>u y i) = length y", "by (induct i) (simp_all)"], ["", "text \\<open>\n  \\<open>inc\\<close> produces vectors that are pointwise smaller than \\<open>y\\<close>\n\\<close>"], ["", "lemma inc_le:\n  assumes \"length u = length y\" and \"i < length y\" and \"u \\<le>\\<^sub>v y\"\n  shows \"inc y i u \\<le>\\<^sub>v y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inc y i u \\<le>\\<^sub>v y", "using assms"], ["proof (prove)\nusing this:\n  length u = length y\n  i < length y\n  u \\<le>\\<^sub>v y\n\ngoal (1 subgoal):\n 1. inc y i u \\<le>\\<^sub>v y", "by (induct y i u rule: inc.induct)\n    (auto simp: inc.simps nth_list_update less_eq_def)"], ["", "lemma us_le:\n  assumes \"length y > 0\"\n  shows \"\\<^bold>u y i \\<le>\\<^sub>v y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>u y i \\<le>\\<^sub>v y", "using assms"], ["proof (prove)\nusing this:\n  0 < length y\n\ngoal (1 subgoal):\n 1. \\<^bold>u y i \\<le>\\<^sub>v y", "by (induct i) (auto simp: inc_le le_length)"], ["", "lemma sum_list_inc_le:\n  \"u \\<le>\\<^sub>v y \\<Longrightarrow> sum_list (inc y i u) \\<le> sum_list y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v y \\<Longrightarrow>\n    sum_list (inc y i u) \\<le> sum_list y", "by (induct y i u rule: inc.induct)\n    (auto simp: inc.simps intro: le_sum_list_mono)"], ["", "lemma sum_list_inc_gt0:\n  assumes \"sum_list u > 0\" and \"length y = length u\"\n  shows \"sum_list (inc y i u) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sum_list (inc y i u)", "using assms"], ["proof (prove)\nusing this:\n  0 < sum_list u\n  length y = length u\n\ngoal (1 subgoal):\n 1. 0 < sum_list (inc y i u)", "proof (induct y i u rule: inc.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y i u.\n       \\<lbrakk>\\<lbrakk>i < length y; \\<not> u ! i < y ! i; 0 < sum_list u;\n                 length y = length u\\<rbrakk>\n                \\<Longrightarrow> 0 < sum_list (inc y (Suc i) u);\n        0 < sum_list u; length y = length u\\<rbrakk>\n       \\<Longrightarrow> 0 < sum_list (inc y i u)", "case (1 y i u)"], ["proof (state)\nthis:\n  \\<lbrakk>i < length y; \\<not> u ! i < y ! i; 0 < sum_list u;\n   length y = length u\\<rbrakk>\n  \\<Longrightarrow> 0 < sum_list (inc y (Suc i) u)\n  0 < sum_list u\n  length y = length u\n\ngoal (1 subgoal):\n 1. \\<And>y i u.\n       \\<lbrakk>\\<lbrakk>i < length y; \\<not> u ! i < y ! i; 0 < sum_list u;\n                 length y = length u\\<rbrakk>\n                \\<Longrightarrow> 0 < sum_list (inc y (Suc i) u);\n        0 < sum_list u; length y = length u\\<rbrakk>\n       \\<Longrightarrow> 0 < sum_list (inc y i u)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i < length y; \\<not> u ! i < y ! i; 0 < sum_list u;\n   length y = length u\\<rbrakk>\n  \\<Longrightarrow> 0 < sum_list (inc y (Suc i) u)\n  0 < sum_list u\n  length y = length u", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i < length y; \\<not> u ! i < y ! i; 0 < sum_list u;\n   length y = length u\\<rbrakk>\n  \\<Longrightarrow> 0 < sum_list (inc y (Suc i) u)\n  0 < sum_list u\n  length y = length u\n\ngoal (1 subgoal):\n 1. 0 < sum_list (inc y i u)", "by (auto simp add: inc.simps)\n      (meson Suc_neq_Zero gr_zeroI set_update_memI sum_list_eq_0_iff)"], ["proof (state)\nthis:\n  0 < sum_list (inc y i u)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_list_inc_gt0':\n  assumes \"length u = length y\" and \"i < length y\" and \"y ! i > 0\" and \"j \\<le> i\"\n  shows \"sum_list (inc y j u) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sum_list (inc y j u)", "using assms"], ["proof (prove)\nusing this:\n  length u = length y\n  i < length y\n  0 < y ! i\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. 0 < sum_list (inc y j u)", "proof (induct y j u rule: inc.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y ia u.\n       \\<lbrakk>\\<lbrakk>ia < length y; \\<not> u ! ia < y ! ia;\n                 length u = length y; i < length y; 0 < y ! i;\n                 Suc ia \\<le> i\\<rbrakk>\n                \\<Longrightarrow> 0 < sum_list (inc y (Suc ia) u);\n        length u = length y; i < length y; 0 < y ! i; ia \\<le> i\\<rbrakk>\n       \\<Longrightarrow> 0 < sum_list (inc y ia u)", "case (1 y i u)"], ["proof (state)\nthis:\n  \\<lbrakk>i < length y; \\<not> u ! i < y ! i; length u = length y;\n   i < length y; 0 < y ! i; Suc i \\<le> i\\<rbrakk>\n  \\<Longrightarrow> 0 < sum_list (inc y (Suc i) u)\n  length u = length y\n  i < length y\n  0 < y ! i\n  i \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>y ia u.\n       \\<lbrakk>\\<lbrakk>ia < length y; \\<not> u ! ia < y ! ia;\n                 length u = length y; i < length y; 0 < y ! i;\n                 Suc ia \\<le> i\\<rbrakk>\n                \\<Longrightarrow> 0 < sum_list (inc y (Suc ia) u);\n        length u = length y; i < length y; 0 < y ! i; ia \\<le> i\\<rbrakk>\n       \\<Longrightarrow> 0 < sum_list (inc y ia u)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i < length y; \\<not> u ! i < y ! i; length u = length y;\n   i < length y; 0 < y ! i; Suc i \\<le> i\\<rbrakk>\n  \\<Longrightarrow> 0 < sum_list (inc y (Suc i) u)\n  length u = length y\n  i < length y\n  0 < y ! i\n  i \\<le> i", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i < length y; \\<not> u ! i < y ! i; length u = length y;\n   i < length y; 0 < y ! i; Suc i \\<le> i\\<rbrakk>\n  \\<Longrightarrow> 0 < sum_list (inc y (Suc i) u)\n  length u = length y\n  i < length y\n  0 < y ! i\n  i \\<le> i\n\ngoal (1 subgoal):\n 1. 0 < sum_list (inc y i u)", "by (auto simp: inc.simps [of y i] sum_list_update)\n      (metis elem_le_sum_list le_antisym le_zero_eq neq0_conv not_less_eq_eq sum_list_inc_gt0)"], ["proof (state)\nthis:\n  0 < sum_list (inc y i u)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_list_us_gt0:\n  assumes \"sum_list y \\<noteq> 0\"\n  shows \"0 < sum_list (\\<^bold>u y i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sum_list (\\<^bold>u y i)", "using assms"], ["proof (prove)\nusing this:\n  sum_list y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < sum_list (\\<^bold>u y i)", "by (induct i) (auto simp: in_set_conv_nth sum_list_inc_gt0' sum_list_inc_gt0)"], ["", "lemma sum_list_inc_le':\n  assumes \"length u = length y\"\n  shows \"sum_list (inc y i u) \\<le> sum_list u + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (inc y i u) \\<le> sum_list u + 1", "using assms"], ["proof (prove)\nusing this:\n  length u = length y\n\ngoal (1 subgoal):\n 1. sum_list (inc y i u) \\<le> sum_list u + 1", "by (induct y i u rule: inc.induct) (auto simp: inc.simps sum_list_update)"], ["", "lemma sum_list_us_le:\n  \"sum_list (\\<^bold>u y i) \\<le> i + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y i) \\<le> i + 1", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. sum_list (\\<^bold>u y 0) \\<le> 0 + 1\n 2. \\<And>i.\n       sum_list (\\<^bold>u y i) \\<le> i + 1 \\<Longrightarrow>\n       sum_list (\\<^bold>u y (Suc i)) \\<le> Suc i + 1", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. sum_list (\\<^bold>u y 0) \\<le> 0 + 1\n 2. \\<And>i.\n       sum_list (\\<^bold>u y i) \\<le> i + 1 \\<Longrightarrow>\n       sum_list (\\<^bold>u y (Suc i)) \\<le> Suc i + 1", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y 0) \\<le> 0 + 1", "by (auto simp: sum_list_update)\n      (metis Suc_eq_plus1 in_set_replicate length_replicate sum_list_eq_0_iff sum_list_inc_le')"], ["proof (state)\nthis:\n  sum_list (\\<^bold>u y 0) \\<le> 0 + 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       sum_list (\\<^bold>u y i) \\<le> i + 1 \\<Longrightarrow>\n       sum_list (\\<^bold>u y (Suc i)) \\<le> Suc i + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       sum_list (\\<^bold>u y i) \\<le> i + 1 \\<Longrightarrow>\n       sum_list (\\<^bold>u y (Suc i)) \\<le> Suc i + 1", "case (Suc i)"], ["proof (state)\nthis:\n  sum_list (\\<^bold>u y i) \\<le> i + 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       sum_list (\\<^bold>u y i) \\<le> i + 1 \\<Longrightarrow>\n       sum_list (\\<^bold>u y (Suc i)) \\<le> Suc i + 1", "then"], ["proof (chain)\npicking this:\n  sum_list (\\<^bold>u y i) \\<le> i + 1", "show ?case"], ["proof (prove)\nusing this:\n  sum_list (\\<^bold>u y i) \\<le> i + 1\n\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y (Suc i)) \\<le> Suc i + 1", "by auto (metis Suc_le_mono add.commute le_trans length_us plus_1_eq_Suc sum_list_inc_le')"], ["proof (state)\nthis:\n  sum_list (\\<^bold>u y (Suc i)) \\<le> Suc i + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_list_us_bounded:\n  assumes \"i < k\"\n  shows \"sum_list (\\<^bold>u y i) \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y i) \\<le> k", "using assms and sum_list_us_le [of y i]"], ["proof (prove)\nusing this:\n  i < k\n  sum_list (\\<^bold>u y i) \\<le> i + 1\n\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y i) \\<le> k", "by force"], ["", "lemma sum_list_inc_eq_sum_list_Suc:\n  assumes \"length u = length y\" and \"i < length y\"\n    and \"\\<exists>j\\<ge>i. j < length y \\<and> u ! j < y ! j\"\n  shows \"sum_list (inc y i u) = Suc (sum_list u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (inc y i u) = Suc (sum_list u)", "using assms"], ["proof (prove)\nusing this:\n  length u = length y\n  i < length y\n  \\<exists>j\\<ge>i. j < length y \\<and> u ! j < y ! j\n\ngoal (1 subgoal):\n 1. sum_list (inc y i u) = Suc (sum_list u)", "by (induct y i u rule: inc.induct)\n    (metis  inc.simps Suc_eq_plus1 Suc_leI antisym_conv2 leD sum_list_list_update_Suc)"], ["", "lemma sum_list_us_eq:\n  assumes \"i < sum_list y\"\n  shows \"sum_list (\\<^bold>u y i) = i + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y i) = i + 1", "using assms"], ["proof (prove)\nusing this:\n  i < sum_list y\n\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y i) = i + 1", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < sum_list y \\<Longrightarrow> sum_list (\\<^bold>u y 0) = 0 + 1\n 2. \\<And>i.\n       \\<lbrakk>i < sum_list y \\<Longrightarrow>\n                sum_list (\\<^bold>u y i) = i + 1;\n        Suc i < sum_list y\\<rbrakk>\n       \\<Longrightarrow> sum_list (\\<^bold>u y (Suc i)) = Suc i + 1", "case (Suc i)"], ["proof (state)\nthis:\n  i < sum_list y \\<Longrightarrow> sum_list (\\<^bold>u y i) = i + 1\n  Suc i < sum_list y\n\ngoal (2 subgoals):\n 1. 0 < sum_list y \\<Longrightarrow> sum_list (\\<^bold>u y 0) = 0 + 1\n 2. \\<And>i.\n       \\<lbrakk>i < sum_list y \\<Longrightarrow>\n                sum_list (\\<^bold>u y i) = i + 1;\n        Suc i < sum_list y\\<rbrakk>\n       \\<Longrightarrow> sum_list (\\<^bold>u y (Suc i)) = Suc i + 1", "then"], ["proof (chain)\npicking this:\n  i < sum_list y \\<Longrightarrow> sum_list (\\<^bold>u y i) = i + 1\n  Suc i < sum_list y", "show ?case"], ["proof (prove)\nusing this:\n  i < sum_list y \\<Longrightarrow> sum_list (\\<^bold>u y i) = i + 1\n  Suc i < sum_list y\n\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y (Suc i)) = Suc i + 1", "by (auto)\n      (metis (no_types, lifting) Suc_eq_plus1 gr_implies_not0 length_pos_if_in_set\n       length_us less_Suc_eq_le less_imp_le_nat antisym_conv2 not_less_eq_eq\n       sum_list_eq_0_iff sum_list_inc_eq_sum_list_Suc sum_list_less_diff_Ex us_le)"], ["proof (state)\nthis:\n  sum_list (\\<^bold>u y (Suc i)) = Suc i + 1\n\ngoal (1 subgoal):\n 1. 0 < sum_list y \\<Longrightarrow> sum_list (\\<^bold>u y 0) = 0 + 1", "qed (metis Suc_eq_plus1 Suc_leI antisym_conv gr_implies_not0 sum_list_us_gt0 sum_list_us_le)"], ["", "lemma inc_ge: \"length u = length y \\<Longrightarrow> u \\<le>\\<^sub>v inc y i u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length u = length y \\<Longrightarrow> u \\<le>\\<^sub>v inc y i u", "by (induct y i u rule: inc.induct) (auto simp: inc.simps nth_list_update less_eq_def)"], ["", "lemma us_le_mono:\n  assumes \"i < j\"\n  shows \"\\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j", "using assms"], ["proof (prove)\nusing this:\n  i < j\n\ngoal (1 subgoal):\n 1. \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j", "proof (induct \"j - i\" arbitrary: j i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j i.\n       \\<lbrakk>0 = j - i; i < j\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\n 2. \\<And>x j i.\n       \\<lbrakk>\\<And>j i.\n                   \\<lbrakk>x = j - i; i < j\\<rbrakk>\n                   \\<Longrightarrow> \\<^bold>u y i\n                                     \\<le>\\<^sub>v \\<^bold>u y j;\n        Suc x = j - i; i < j\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n = ?j - ?i; ?i < ?j\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>u y ?i \\<le>\\<^sub>v \\<^bold>u y ?j\n  Suc n = j - i\n  i < j\n\ngoal (2 subgoals):\n 1. \\<And>j i.\n       \\<lbrakk>0 = j - i; i < j\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\n 2. \\<And>x j i.\n       \\<lbrakk>\\<And>j i.\n                   \\<lbrakk>x = j - i; i < j\\<rbrakk>\n                   \\<Longrightarrow> \\<^bold>u y i\n                                     \\<le>\\<^sub>v \\<^bold>u y j;\n        Suc x = j - i; i < j\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>n = ?j - ?i; ?i < ?j\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>u y ?i \\<le>\\<^sub>v \\<^bold>u y ?j\n  Suc n = j - i\n  i < j", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = ?j - ?i; ?i < ?j\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>u y ?i \\<le>\\<^sub>v \\<^bold>u y ?j\n  Suc n = j - i\n  i < j\n\ngoal (1 subgoal):\n 1. \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j", "by (simp add: Suc.prems inc_ge order.strict_implies_order order_vec.lift_Suc_mono_le)"], ["proof (state)\nthis:\n  \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\n\ngoal (1 subgoal):\n 1. \\<And>j i.\n       \\<lbrakk>0 = j - i; i < j\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j", "qed simp"], ["", "lemma us_mono:\n  assumes \"i < j\" and \"j < sum_list y\"\n  shows \"\\<^bold>u y i <\\<^sub>v \\<^bold>u y j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>u y i <\\<^sub>v \\<^bold>u y j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bold>u y i <\\<^sub>v \\<^bold>u y j", "let ?u = \"\\<^bold>u y i\" and ?v = \"\\<^bold>u y j\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bold>u y i <\\<^sub>v \\<^bold>u y j", "have \"?u \\<le>\\<^sub>v ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j", "using us_le_mono [OF \\<open>i < j\\<close>]"], ["proof (prove)\nusing this:\n  \\<^bold>u ?y i \\<le>\\<^sub>v \\<^bold>u ?y j\n\ngoal (1 subgoal):\n 1. \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j", "by simp"], ["proof (state)\nthis:\n  \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\n\ngoal (1 subgoal):\n 1. \\<^bold>u y i <\\<^sub>v \\<^bold>u y j", "moreover"], ["proof (state)\nthis:\n  \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\n\ngoal (1 subgoal):\n 1. \\<^bold>u y i <\\<^sub>v \\<^bold>u y j", "have \"sum_list ?u < sum_list ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y i) < sum_list (\\<^bold>u y j)", "using assms"], ["proof (prove)\nusing this:\n  i < j\n  j < sum_list y\n\ngoal (1 subgoal):\n 1. sum_list (\\<^bold>u y i) < sum_list (\\<^bold>u y j)", "by (auto simp: sum_list_us_eq)"], ["proof (state)\nthis:\n  sum_list (\\<^bold>u y i) < sum_list (\\<^bold>u y j)\n\ngoal (1 subgoal):\n 1. \\<^bold>u y i <\\<^sub>v \\<^bold>u y j", "ultimately"], ["proof (chain)\npicking this:\n  \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\n  sum_list (\\<^bold>u y i) < sum_list (\\<^bold>u y j)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<^bold>u y i \\<le>\\<^sub>v \\<^bold>u y j\n  sum_list (\\<^bold>u y i) < sum_list (\\<^bold>u y j)\n\ngoal (1 subgoal):\n 1. \\<^bold>u y i <\\<^sub>v \\<^bold>u y j", "by (intro le_sum_list_less) (auto simp: less_eq_def)"], ["proof (state)\nthis:\n  \\<^bold>u y i <\\<^sub>v \\<^bold>u y j\n\ngoal:\nNo subgoals!", "qed"], ["", "context hlde\nbegin"], ["", "lemma max_coeff_bound_right:\n  assumes \"(xs, ys) \\<in> Minimal_Solutions\"\n  shows \"\\<forall>x \\<in> set xs. x \\<le> maxne0 ys b\" (is \"\\<forall>x\\<in>set xs. x \\<le> ?m\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. x \\<le> maxne0 ys b", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b)", "obtain k\n    where k_def: \"k < length xs \\<and> \\<not> (xs ! k \\<le> ?m)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k < length xs \\<and>\n        \\<not> xs ! k \\<le> maxne0 ys b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis in_set_conv_nth)"], ["proof (state)\nthis:\n  k < length xs \\<and> \\<not> xs ! k \\<le> maxne0 ys b\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have sol: \"(xs, ys) \\<in> Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs, ys) \\<in> local.Solutions", "using assms Minimal_Solutions_def"], ["proof (prove)\nusing this:\n  (xs, ys) \\<in> local.Minimal_Solutions\n  local.Minimal_Solutions =\n  {(x, y).\n   (x, y) \\<in> local.Solutions \\<and>\n   nonzero x \\<and>\n   \\<not> (\\<exists>(u, v)\\<in>local.Solutions.\n              nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\n\ngoal (1 subgoal):\n 1. (xs, ys) \\<in> local.Solutions", "by auto"], ["proof (state)\nthis:\n  (xs, ys) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (xs, ys) \\<in> local.Solutions", "have len: \"m = length xs\""], ["proof (prove)\nusing this:\n  (xs, ys) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. m = length xs", "by (simp add: in_Solutions_iff)"], ["proof (state)\nthis:\n  m = length xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have max_suml: \"?m * sum_list ys \\<ge> b \\<bullet> ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> ys \\<le> maxne0 ys b * sum_list ys", "using maxne0_times_sum_list_gt_dotprod sol"], ["proof (prove)\nusing this:\n  length ?b = length ?ys \\<Longrightarrow>\n  ?b \\<bullet> ?ys \\<le> maxne0 ?ys ?b * sum_list ?ys\n  (xs, ys) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. b \\<bullet> ys \\<le> maxne0 ys b * sum_list ys", "by (auto simp: in_Solutions_iff)"], ["proof (state)\nthis:\n  b \\<bullet> ys \\<le> maxne0 ys b * sum_list ys\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  b \\<bullet> ys \\<le> maxne0 ys b * sum_list ys", "have is_sol: \"b \\<bullet> ys = a \\<bullet> xs\""], ["proof (prove)\nusing this:\n  b \\<bullet> ys \\<le> maxne0 ys b * sum_list ys\n\ngoal (1 subgoal):\n 1. b \\<bullet> ys = a \\<bullet> xs", "using sol"], ["proof (prove)\nusing this:\n  b \\<bullet> ys \\<le> maxne0 ys b * sum_list ys\n  (xs, ys) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. b \\<bullet> ys = a \\<bullet> xs", "by (auto simp: in_Solutions_iff)"], ["proof (state)\nthis:\n  b \\<bullet> ys = a \\<bullet> xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  b \\<bullet> ys = a \\<bullet> xs", "have a_ge_ak: \"a \\<bullet> xs \\<ge> a ! k * xs ! k\""], ["proof (prove)\nusing this:\n  b \\<bullet> ys = a \\<bullet> xs\n\ngoal (1 subgoal):\n 1. a ! k * xs ! k \\<le> a \\<bullet> xs", "using dotprod_pointwise_le k_def len"], ["proof (prove)\nusing this:\n  b \\<bullet> ys = a \\<bullet> xs\n  \\<lbrakk>length ?as = length ?xs; ?i < length ?as\\<rbrakk>\n  \\<Longrightarrow> ?as ! ?i * ?xs ! ?i \\<le> ?as \\<bullet> ?xs\n  k < length xs \\<and> \\<not> xs ! k \\<le> maxne0 ys b\n  m = length xs\n\ngoal (1 subgoal):\n 1. a ! k * xs ! k \\<le> a \\<bullet> xs", "by auto"], ["proof (state)\nthis:\n  a ! k * xs ! k \\<le> a \\<bullet> xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  a ! k * xs ! k \\<le> a \\<bullet> xs", "have ak_gt_max: \"a ! k * xs ! k > a ! k * ?m\""], ["proof (prove)\nusing this:\n  a ! k * xs ! k \\<le> a \\<bullet> xs\n\ngoal (1 subgoal):\n 1. a ! k * maxne0 ys b < a ! k * xs ! k", "using no0 in_set_conv_nth k_def len"], ["proof (prove)\nusing this:\n  a ! k * xs ! k \\<le> a \\<bullet> xs\n  0 \\<notin> set a\n  0 \\<notin> set b\n  (?x \\<in> set ?xs) = (\\<exists>i<length ?xs. ?xs ! i = ?x)\n  k < length xs \\<and> \\<not> xs ! k \\<le> maxne0 ys b\n  m = length xs\n\ngoal (1 subgoal):\n 1. a ! k * maxne0 ys b < a ! k * xs ! k", "by fastforce"], ["proof (state)\nthis:\n  a ! k * maxne0 ys b < a ! k * xs ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  a ! k * maxne0 ys b < a ! k * xs ! k", "have sl_ys_g_ak: \"sum_list ys > a ! k\""], ["proof (prove)\nusing this:\n  a ! k * maxne0 ys b < a ! k * xs ! k\n\ngoal (1 subgoal):\n 1. a ! k < sum_list ys", "by (metis a_ge_ak is_sol less_le_trans max_suml\n        mult.commute mult_le_mono1 not_le)"], ["proof (state)\nthis:\n  a ! k < sum_list ys\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "define Seq where\n    Seq_def: \"Seq = map (\\<^bold>u ys) [0 ..< a ! k]\""], ["proof (state)\nthis:\n  Seq = map (\\<^bold>u ys) [0..<a ! k]\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have ak_n0: \"a ! k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ! k \\<noteq> 0", "using \\<open>a ! k * ?m < a ! k * xs ! k\\<close>"], ["proof (prove)\nusing this:\n  a ! k * maxne0 ys b < a ! k * xs ! k\n\ngoal (1 subgoal):\n 1. a ! k \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  a ! k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"zeroes (length ys) <\\<^sub>v ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeroes (length ys) <\\<^sub>v ys", "by (intro zero_less) (metis gr_implies_not0 nonzero_iff sl_ys_g_ak sum_list_eq_0_iff)"], ["proof (state)\nthis:\n  zeroes (length ys) <\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  zeroes (length ys) <\\<^sub>v ys", "have \"length Seq > 0\""], ["proof (prove)\nusing this:\n  zeroes (length ys) <\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. 0 < length Seq", "using ak_n0 Seq_def"], ["proof (prove)\nusing this:\n  zeroes (length ys) <\\<^sub>v ys\n  a ! k \\<noteq> 0\n  Seq = map (\\<^bold>u ys) [0..<a ! k]\n\ngoal (1 subgoal):\n 1. 0 < length Seq", "by auto"], ["proof (state)\nthis:\n  0 < length Seq\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have u_in_nton: \"\\<forall>u \\<in> set Seq. length u = length ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>set Seq. length u = length ys", "by (simp add: Seq_def)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>set Seq. length u = length ys\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have prop_3: \"\\<forall>u \\<in> set Seq. u \\<le>\\<^sub>v ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys", "have \"length ys > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < length ys", "using sl_ys_g_ak"], ["proof (prove)\nusing this:\n  a ! k < sum_list ys\n\ngoal (1 subgoal):\n 1. 0 < length ys", "by auto"], ["proof (state)\nthis:\n  0 < length ys\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys", "then"], ["proof (chain)\npicking this:\n  0 < length ys", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < length ys\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys", "using us_le [of ys ] less_eq_def Seq_def"], ["proof (prove)\nusing this:\n  0 < length ys\n  0 < length ys \\<Longrightarrow> \\<^bold>u ys ?i \\<le>\\<^sub>v ys\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n  Seq = map (\\<^bold>u ys) [0..<a ! k]\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys", "by (simp)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have prop_4_1: \"\\<forall>u \\<in> set Seq. sum_list u > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>set Seq. 0 < sum_list u", "by (metis Seq_def sl_ys_g_ak gr_implies_not_zero imageE\n        set_map sum_list_us_gt0)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>set Seq. 0 < sum_list u\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have prop_4_2: \"\\<forall>u \\<in> set Seq. sum_list u \\<le> a ! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>set Seq. sum_list u \\<le> a ! k", "by (simp add: Seq_def sum_list_us_bounded)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>set Seq. sum_list u \\<le> a ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have prop_5: \"\\<exists>u. length u = length ys \\<and> u \\<le>\\<^sub>v ys \\<and> sum_list u > 0 \\<and> sum_list u \\<le> a ! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       length u = length ys \\<and>\n       u \\<le>\\<^sub>v ys \\<and>\n       0 < sum_list u \\<and> sum_list u \\<le> a ! k", "using \\<open>0 < length Seq\\<close> nth_mem prop_3 prop_4_1 prop_4_2 u_in_nton"], ["proof (prove)\nusing this:\n  0 < length Seq\n  ?n < length ?xs \\<Longrightarrow> ?xs ! ?n \\<in> set ?xs\n  \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys\n  \\<forall>u\\<in>set Seq. 0 < sum_list u\n  \\<forall>u\\<in>set Seq. sum_list u \\<le> a ! k\n  \\<forall>u\\<in>set Seq. length u = length ys\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       length u = length ys \\<and>\n       u \\<le>\\<^sub>v ys \\<and>\n       0 < sum_list u \\<and> sum_list u \\<le> a ! k", "by blast"], ["proof (state)\nthis:\n  \\<exists>u.\n     length u = length ys \\<and>\n     u \\<le>\\<^sub>v ys \\<and> 0 < sum_list u \\<and> sum_list u \\<le> a ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "define Us where\n    \"Us = {u. length u = length ys \\<and> u \\<le>\\<^sub>v ys \\<and> sum_list u > 0 \\<and> sum_list u \\<le> a ! k}\""], ["proof (state)\nthis:\n  Us =\n  {u. length u = length ys \\<and>\n      u \\<le>\\<^sub>v ys \\<and>\n      0 < sum_list u \\<and> sum_list u \\<le> a ! k}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"\\<exists>u \\<in> Us. b \\<bullet> u mod a ! k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>Us. b \\<bullet> u mod a ! k = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>u\\<in>Us.\n               b \\<bullet> u mod a ! k = 0) \\<Longrightarrow>\n    False", "assume neg_th: \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>u\\<in>Us. b \\<bullet> u mod a ! k = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>u\\<in>Us.\n               b \\<bullet> u mod a ! k = 0) \\<Longrightarrow>\n    False", "define Seq_p where\n      \"Seq_p = map (dotprod b) Seq\""], ["proof (state)\nthis:\n  Seq_p = map ((\\<bullet>) b) Seq\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>u\\<in>Us.\n               b \\<bullet> u mod a ! k = 0) \\<Longrightarrow>\n    False", "have \"length Seq = a ! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length Seq = a ! k", "by (simp add: Seq_def)"], ["proof (state)\nthis:\n  length Seq = a ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>u\\<in>Us.\n               b \\<bullet> u mod a ! k = 0) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  length Seq = a ! k", "consider (eq_0)  \"(\\<exists>x\\<in>set Seq_p. x mod (a ! k) = 0)\" |\n      (not_0) \"(\\<exists>i<length Seq_p. \\<exists>j<length Seq_p. i \\<noteq> j \\<and>\n               (Seq_p ! i) mod (a!k) = (Seq_p ! j) mod (a!k))\""], ["proof (prove)\nusing this:\n  length Seq = a ! k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x\\<in>set Seq_p. x mod a ! k = 0 \\<Longrightarrow>\n             thesis;\n     \\<exists>i<length Seq_p.\n        \\<exists>j<length Seq_p.\n           i \\<noteq> j \\<and>\n           Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using list_mod_cases[of Seq_p] Seq_p_def ak_n0"], ["proof (prove)\nusing this:\n  length Seq = a ! k\n  \\<lbrakk>length Seq_p = ?n; 0 < ?n\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>x\\<in>set Seq_p. x mod ?n = 0) \\<or>\n                    (\\<exists>i<length Seq_p.\n                        \\<exists>j<length Seq_p.\n                           i \\<noteq> j \\<and>\n                           Seq_p ! i mod ?n = Seq_p ! j mod ?n)\n  Seq_p = map ((\\<bullet>) b) Seq\n  a ! k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x\\<in>set Seq_p. x mod a ! k = 0 \\<Longrightarrow>\n             thesis;\n     \\<exists>i<length Seq_p.\n        \\<exists>j<length Seq_p.\n           i \\<noteq> j \\<and>\n           Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto force"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>x\\<in>set Seq_p. x mod a ! k = 0 \\<Longrightarrow>\n           ?thesis;\n   \\<exists>i<length Seq_p.\n      \\<exists>j<length Seq_p.\n         i \\<noteq> j \\<and>\n         Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>u\\<in>Us.\n               b \\<bullet> u mod a ! k = 0) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<exists>x\\<in>set Seq_p. x mod a ! k = 0 \\<Longrightarrow>\n           ?thesis;\n   \\<exists>i<length Seq_p.\n      \\<exists>j<length Seq_p.\n         i \\<noteq> j \\<and>\n         Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>x\\<in>set Seq_p. x mod a ! k = 0 \\<Longrightarrow>\n           ?thesis;\n   \\<exists>i<length Seq_p.\n      \\<exists>j<length Seq_p.\n         i \\<noteq> j \\<and>\n         Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. False", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>set Seq_p. x mod a ! k = 0 \\<Longrightarrow> False\n 2. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "case eq_0"], ["proof (state)\nthis:\n  \\<exists>x\\<in>set Seq_p. x mod a ! k = 0\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>set Seq_p. x mod a ! k = 0 \\<Longrightarrow> False\n 2. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "have \"\\<exists>u \\<in> set Seq. b \\<bullet> u mod a ! k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>set Seq. b \\<bullet> u mod a ! k = 0", "using Seq_p_def eq_0"], ["proof (prove)\nusing this:\n  Seq_p = map ((\\<bullet>) b) Seq\n  \\<exists>x\\<in>set Seq_p. x mod a ! k = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>set Seq. b \\<bullet> u mod a ! k = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>u\\<in>set Seq. b \\<bullet> u mod a ! k = 0\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>set Seq_p. x mod a ! k = 0 \\<Longrightarrow> False\n 2. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>u\\<in>set Seq. b \\<bullet> u mod a ! k = 0", "show False"], ["proof (prove)\nusing this:\n  \\<exists>u\\<in>set Seq. b \\<bullet> u mod a ! k = 0\n\ngoal (1 subgoal):\n 1. False", "by (metis (mono_tags, lifting) Us_def mem_Collect_eq\n            neg_th prop_3 prop_4_1 prop_4_2 u_in_nton)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "case not_0"], ["proof (state)\nthis:\n  \\<exists>i<length Seq_p.\n     \\<exists>j<length Seq_p.\n        i \\<noteq> j \\<and> Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\n\ngoal (1 subgoal):\n 1. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "obtain i and j where\n        i_j: \"i<length Seq_p\" \"j<length Seq_p\" \" i \\<noteq> j\"\n        \" Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n         Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using not_0"], ["proof (prove)\nusing this:\n  \\<exists>i<length Seq_p.\n     \\<exists>j<length Seq_p.\n        i \\<noteq> j \\<and> Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n         Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i < length Seq_p\n  j < length Seq_p\n  i \\<noteq> j\n  Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\n\ngoal (1 subgoal):\n 1. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "define v where\n        v_def: \"v = Seq!i\""], ["proof (state)\nthis:\n  v = Seq ! i\n\ngoal (1 subgoal):\n 1. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "define w where\n        w_def: \"w = Seq!j\""], ["proof (state)\nthis:\n  w = Seq ! j\n\ngoal (1 subgoal):\n 1. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "have mod_eq: \"b \\<bullet> v mod a!k = b \\<bullet> w mod a!k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> v mod a ! k = b \\<bullet> w mod a ! k", "using Seq_p_def i_j w_def v_def i_j"], ["proof (prove)\nusing this:\n  Seq_p = map ((\\<bullet>) b) Seq\n  i < length Seq_p\n  j < length Seq_p\n  i \\<noteq> j\n  Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\n  w = Seq ! j\n  v = Seq ! i\n  i < length Seq_p\n  j < length Seq_p\n  i \\<noteq> j\n  Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\n\ngoal (1 subgoal):\n 1. b \\<bullet> v mod a ! k = b \\<bullet> w mod a ! k", "by auto"], ["proof (state)\nthis:\n  b \\<bullet> v mod a ! k = b \\<bullet> w mod a ! k\n\ngoal (1 subgoal):\n 1. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "have \"v <\\<^sub>v w \\<or> w <\\<^sub>v v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v <\\<^sub>v w \\<or> w <\\<^sub>v v", "using \\<open>i \\<noteq> j\\<close> and i_j"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  i < length Seq_p\n  j < length Seq_p\n  i \\<noteq> j\n  Seq_p ! i mod a ! k = Seq_p ! j mod a ! k\n\ngoal (1 subgoal):\n 1. v <\\<^sub>v w \\<or> w <\\<^sub>v v", "proof (cases \"i < j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<noteq> j; i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n     Seq_p ! i mod a ! k = Seq_p ! j mod a ! k; i < j\\<rbrakk>\n    \\<Longrightarrow> v <\\<^sub>v w \\<or> w <\\<^sub>v v\n 2. \\<lbrakk>i \\<noteq> j; i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n     Seq_p ! i mod a ! k = Seq_p ! j mod a ! k; \\<not> i < j\\<rbrakk>\n    \\<Longrightarrow> v <\\<^sub>v w \\<or> w <\\<^sub>v v", "case True"], ["proof (state)\nthis:\n  i < j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<noteq> j; i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n     Seq_p ! i mod a ! k = Seq_p ! j mod a ! k; i < j\\<rbrakk>\n    \\<Longrightarrow> v <\\<^sub>v w \\<or> w <\\<^sub>v v\n 2. \\<lbrakk>i \\<noteq> j; i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n     Seq_p ! i mod a ! k = Seq_p ! j mod a ! k; \\<not> i < j\\<rbrakk>\n    \\<Longrightarrow> v <\\<^sub>v w \\<or> w <\\<^sub>v v", "then"], ["proof (chain)\npicking this:\n  i < j", "show ?thesis"], ["proof (prove)\nusing this:\n  i < j\n\ngoal (1 subgoal):\n 1. v <\\<^sub>v w \\<or> w <\\<^sub>v v", "using Seq_p_def sl_ys_g_ak i_j(2) local.Seq_def us_mono v_def w_def"], ["proof (prove)\nusing this:\n  i < j\n  Seq_p = map ((\\<bullet>) b) Seq\n  a ! k < sum_list ys\n  j < length Seq_p\n  Seq = map (\\<^bold>u ys) [0..<a ! k]\n  \\<lbrakk>?i < ?j; ?j < sum_list ?y\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>u ?y ?i <\\<^sub>v \\<^bold>u ?y ?j\n  v = Seq ! i\n  w = Seq ! j\n\ngoal (1 subgoal):\n 1. v <\\<^sub>v w \\<or> w <\\<^sub>v v", "by auto"], ["proof (state)\nthis:\n  v <\\<^sub>v w \\<or> w <\\<^sub>v v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> j; i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n     Seq_p ! i mod a ! k = Seq_p ! j mod a ! k; \\<not> i < j\\<rbrakk>\n    \\<Longrightarrow> v <\\<^sub>v w \\<or> w <\\<^sub>v v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> j; i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n     Seq_p ! i mod a ! k = Seq_p ! j mod a ! k; \\<not> i < j\\<rbrakk>\n    \\<Longrightarrow> v <\\<^sub>v w \\<or> w <\\<^sub>v v", "case False"], ["proof (state)\nthis:\n  \\<not> i < j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> j; i < length Seq_p; j < length Seq_p; i \\<noteq> j;\n     Seq_p ! i mod a ! k = Seq_p ! j mod a ! k; \\<not> i < j\\<rbrakk>\n    \\<Longrightarrow> v <\\<^sub>v w \\<or> w <\\<^sub>v v", "then"], ["proof (chain)\npicking this:\n  \\<not> i < j", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i < j\n\ngoal (1 subgoal):\n 1. v <\\<^sub>v w \\<or> w <\\<^sub>v v", "using Seq_p_def sl_ys_g_ak \\<open>i \\<noteq> j\\<close> i_j(1) local.Seq_def us_mono v_def w_def"], ["proof (prove)\nusing this:\n  \\<not> i < j\n  Seq_p = map ((\\<bullet>) b) Seq\n  a ! k < sum_list ys\n  i \\<noteq> j\n  i < length Seq_p\n  Seq = map (\\<^bold>u ys) [0..<a ! k]\n  \\<lbrakk>?i < ?j; ?j < sum_list ?y\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>u ?y ?i <\\<^sub>v \\<^bold>u ?y ?j\n  v = Seq ! i\n  w = Seq ! j\n\ngoal (1 subgoal):\n 1. v <\\<^sub>v w \\<or> w <\\<^sub>v v", "by auto"], ["proof (state)\nthis:\n  v <\\<^sub>v w \\<or> w <\\<^sub>v v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v <\\<^sub>v w \\<or> w <\\<^sub>v v\n\ngoal (1 subgoal):\n 1. \\<exists>i<length Seq_p.\n       \\<exists>j<length Seq_p.\n          i \\<noteq> j \\<and>\n          Seq_p ! i mod a ! k = Seq_p ! j mod a ! k \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  v <\\<^sub>v w \\<or> w <\\<^sub>v v", "show False"], ["proof (prove)\nusing this:\n  v <\\<^sub>v w \\<or> w <\\<^sub>v v\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. v <\\<^sub>v w \\<Longrightarrow> False\n 2. w <\\<^sub>v v \\<Longrightarrow> False", "assume ass: \"v <\\<^sub>v w\""], ["proof (state)\nthis:\n  v <\\<^sub>v w\n\ngoal (2 subgoals):\n 1. v <\\<^sub>v w \\<Longrightarrow> False\n 2. w <\\<^sub>v v \\<Longrightarrow> False", "define u where\n          u_def: \"u = w -\\<^sub>v v\""], ["proof (state)\nthis:\n  u = w -\\<^sub>v v\n\ngoal (2 subgoals):\n 1. v <\\<^sub>v w \\<Longrightarrow> False\n 2. w <\\<^sub>v v \\<Longrightarrow> False", "have \"w \\<le>\\<^sub>v ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le>\\<^sub>v ys", "using Seq_p_def w_def i_j(2) prop_3"], ["proof (prove)\nusing this:\n  Seq_p = map ((\\<bullet>) b) Seq\n  w = Seq ! j\n  j < length Seq_p\n  \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. w \\<le>\\<^sub>v ys", "by force"], ["proof (state)\nthis:\n  w \\<le>\\<^sub>v ys\n\ngoal (2 subgoals):\n 1. v <\\<^sub>v w \\<Longrightarrow> False\n 2. w <\\<^sub>v v \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  w \\<le>\\<^sub>v ys", "have prop_3: \"less_eq u ys\""], ["proof (prove)\nusing this:\n  w \\<le>\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v ys", "using vdiff_le ass less_eq_def order_vec.less_imp_le u_def"], ["proof (prove)\nusing this:\n  w \\<le>\\<^sub>v ys\n  \\<lbrakk>?v \\<le>\\<^sub>v ?w; length ?v = length ?x\\<rbrakk>\n  \\<Longrightarrow> ?v -\\<^sub>v ?x \\<le>\\<^sub>v ?w\n  v <\\<^sub>v w\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n  ?x <\\<^sub>v ?y \\<Longrightarrow> ?x \\<le>\\<^sub>v ?y\n  u = w -\\<^sub>v v\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v ys", "by auto"], ["proof (state)\nthis:\n  u \\<le>\\<^sub>v ys\n\ngoal (2 subgoals):\n 1. v <\\<^sub>v w \\<Longrightarrow> False\n 2. w <\\<^sub>v v \\<Longrightarrow> False", "have prop_4_1: \"sum_list u > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sum_list u", "using le_sum_list_mono [of v w] ass u_def sum_list_vdiff_distr [of v w]"], ["proof (prove)\nusing this:\n  v \\<le>\\<^sub>v w \\<Longrightarrow> sum_list v \\<le> sum_list w\n  v <\\<^sub>v w\n  u = w -\\<^sub>v v\n  v \\<le>\\<^sub>v w \\<Longrightarrow>\n  sum_list (w -\\<^sub>v v) = sum_list w - sum_list v\n\ngoal (1 subgoal):\n 1. 0 < sum_list u", "by (simp add: less_vec_sum_list_less)"], ["proof (state)\nthis:\n  0 < sum_list u\n\ngoal (2 subgoals):\n 1. v <\\<^sub>v w \\<Longrightarrow> False\n 2. w <\\<^sub>v v \\<Longrightarrow> False", "have prop_4_2: \"sum_list u \\<le> a ! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list u \\<le> a ! k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_list u \\<le> a ! k", "have \"u \\<le>\\<^sub>v w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v w", "using u_def"], ["proof (prove)\nusing this:\n  u = w -\\<^sub>v v\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v w", "using ass less_eq_def order_vec.less_imp_le vdiff_le"], ["proof (prove)\nusing this:\n  u = w -\\<^sub>v v\n  v <\\<^sub>v w\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n  ?x <\\<^sub>v ?y \\<Longrightarrow> ?x \\<le>\\<^sub>v ?y\n  \\<lbrakk>?v \\<le>\\<^sub>v ?w; length ?v = length ?x\\<rbrakk>\n  \\<Longrightarrow> ?v -\\<^sub>v ?x \\<le>\\<^sub>v ?w\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v w", "by auto"], ["proof (state)\nthis:\n  u \\<le>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. sum_list u \\<le> a ! k", "then"], ["proof (chain)\npicking this:\n  u \\<le>\\<^sub>v w", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. sum_list u \\<le> a ! k", "by (metis Seq_p_def i_j(2) length_map le_sum_list_mono\n                less_le_trans not_le nth_mem prop_4_2 w_def)"], ["proof (state)\nthis:\n  sum_list u \\<le> a ! k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum_list u \\<le> a ! k\n\ngoal (2 subgoals):\n 1. v <\\<^sub>v w \\<Longrightarrow> False\n 2. w <\\<^sub>v v \\<Longrightarrow> False", "have \"b \\<bullet> u mod a ! k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> u mod a ! k = 0", "by (metis (mono_tags, lifting) in_Solutions_iff \\<open>w \\<le>\\<^sub>v ys\\<close> u_def ass no0(2)\n              less_eq_def mem_Collect_eq mod_eq mods_with_vec_2 prod.simps(2) sol)"], ["proof (state)\nthis:\n  b \\<bullet> u mod a ! k = 0\n\ngoal (2 subgoals):\n 1. v <\\<^sub>v w \\<Longrightarrow> False\n 2. w <\\<^sub>v v \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b \\<bullet> u mod a ! k = 0", "show False"], ["proof (prove)\nusing this:\n  b \\<bullet> u mod a ! k = 0\n\ngoal (1 subgoal):\n 1. False", "using neg_th"], ["proof (prove)\nusing this:\n  b \\<bullet> u mod a ! k = 0\n  \\<not> (\\<exists>u\\<in>Us. b \\<bullet> u mod a ! k = 0)\n\ngoal (1 subgoal):\n 1. False", "by (metis (mono_tags, lifting) Us_def less_eq_def mem_Collect_eq\n              prop_3 prop_4_1 prop_4_2)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "assume ass: \"w <\\<^sub>v v\""], ["proof (state)\nthis:\n  w <\\<^sub>v v\n\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "define u where\n          u_def: \"u = v -\\<^sub>v w\""], ["proof (state)\nthis:\n  u = v -\\<^sub>v w\n\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "have \"v \\<le>\\<^sub>v ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<le>\\<^sub>v ys", "using Seq_p_def v_def i_j(1) prop_3"], ["proof (prove)\nusing this:\n  Seq_p = map ((\\<bullet>) b) Seq\n  v = Seq ! i\n  i < length Seq_p\n  \\<forall>u\\<in>set Seq. u \\<le>\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. v \\<le>\\<^sub>v ys", "by force"], ["proof (state)\nthis:\n  v \\<le>\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<le>\\<^sub>v ys", "have prop_3: \"u \\<le>\\<^sub>v ys\""], ["proof (prove)\nusing this:\n  v \\<le>\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v ys", "using vdiff_le ass less_eq_def order_vec.less_imp_le u_def"], ["proof (prove)\nusing this:\n  v \\<le>\\<^sub>v ys\n  \\<lbrakk>?v \\<le>\\<^sub>v ?w; length ?v = length ?x\\<rbrakk>\n  \\<Longrightarrow> ?v -\\<^sub>v ?x \\<le>\\<^sub>v ?w\n  w <\\<^sub>v v\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n  ?x <\\<^sub>v ?y \\<Longrightarrow> ?x \\<le>\\<^sub>v ?y\n  u = v -\\<^sub>v w\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v ys", "by auto"], ["proof (state)\nthis:\n  u \\<le>\\<^sub>v ys\n\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "have prop_4_1: \"sum_list u > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sum_list u", "using le_sum_list_mono [of w v] sum_list_vdiff_distr [of w v]\n            \\<open>u \\<equiv> v -\\<^sub>v w\\<close> ass less_vec_sum_list_less"], ["proof (prove)\nusing this:\n  w \\<le>\\<^sub>v v \\<Longrightarrow> sum_list w \\<le> sum_list v\n  w \\<le>\\<^sub>v v \\<Longrightarrow>\n  sum_list (v -\\<^sub>v w) = sum_list v - sum_list w\n  u \\<equiv> v -\\<^sub>v w\n  w <\\<^sub>v v\n  ?v <\\<^sub>v ?w \\<Longrightarrow> sum_list ?v < sum_list ?w\n\ngoal (1 subgoal):\n 1. 0 < sum_list u", "by auto"], ["proof (state)\nthis:\n  0 < sum_list u\n\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "have prop_4_2: \"sum_list u \\<le> a!k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list u \\<le> a ! k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_list u \\<le> a ! k", "have \"u \\<le>\\<^sub>v v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v v", "using u_def"], ["proof (prove)\nusing this:\n  u = v -\\<^sub>v w\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v v", "using ass less_eq_def order_vec.less_imp_le vdiff_le"], ["proof (prove)\nusing this:\n  u = v -\\<^sub>v w\n  w <\\<^sub>v v\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n  ?x <\\<^sub>v ?y \\<Longrightarrow> ?x \\<le>\\<^sub>v ?y\n  \\<lbrakk>?v \\<le>\\<^sub>v ?w; length ?v = length ?x\\<rbrakk>\n  \\<Longrightarrow> ?v -\\<^sub>v ?x \\<le>\\<^sub>v ?w\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>v v", "by auto"], ["proof (state)\nthis:\n  u \\<le>\\<^sub>v v\n\ngoal (1 subgoal):\n 1. sum_list u \\<le> a ! k", "then"], ["proof (chain)\npicking this:\n  u \\<le>\\<^sub>v v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>v v\n\ngoal (1 subgoal):\n 1. sum_list u \\<le> a ! k", "by (metis Seq_p_def i_j(1) le_neq_implies_less length_map less_imp_le_nat\n                less_le_trans nth_mem prop_4_2 le_sum_list_mono v_def)"], ["proof (state)\nthis:\n  sum_list u \\<le> a ! k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum_list u \\<le> a ! k\n\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "have \"b \\<bullet> u mod a ! k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> u mod a ! k = 0", "by (metis (mono_tags, lifting) in_Solutions_iff \\<open>v \\<le>\\<^sub>v ys\\<close> u_def ass no0(2)\n              less_eq_def mem_Collect_eq mod_eq mods_with_vec_2 prod.simps(2) sol)"], ["proof (state)\nthis:\n  b \\<bullet> u mod a ! k = 0\n\ngoal (1 subgoal):\n 1. w <\\<^sub>v v \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b \\<bullet> u mod a ! k = 0", "show False"], ["proof (prove)\nusing this:\n  b \\<bullet> u mod a ! k = 0\n\ngoal (1 subgoal):\n 1. False", "by (metis (mono_tags, lifting) neg_th Us_def less_eq_def mem_Collect_eq prop_3 prop_4_1 prop_4_2)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>u\\<in>Us. b \\<bullet> u mod a ! k = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>u\\<in>Us. b \\<bullet> u mod a ! k = 0", "obtain u where\n    u3_4: \"u \\<le>\\<^sub>v ys\" \"sum_list u > 0\" \"sum_list u \\<le> a ! k\" \" b \\<bullet> u mod (a ! k) = 0\"\n    \"length u = length ys\""], ["proof (prove)\nusing this:\n  \\<exists>u\\<in>Us. b \\<bullet> u mod a ! k = 0\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<le>\\<^sub>v ys; 0 < sum_list u; sum_list u \\<le> a ! k;\n         b \\<bullet> u mod a ! k = 0; length u = length ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Us_def"], ["proof (prove)\nusing this:\n  \\<exists>u\\<in>{u. length u = length ys \\<and>\n                     u \\<le>\\<^sub>v ys \\<and>\n                     0 < sum_list u \\<and> sum_list u \\<le> a ! k}.\n     b \\<bullet> u mod a ! k = 0\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<le>\\<^sub>v ys; 0 < sum_list u; sum_list u \\<le> a ! k;\n         b \\<bullet> u mod a ! k = 0; length u = length ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<le>\\<^sub>v ys\n  0 < sum_list u\n  sum_list u \\<le> a ! k\n  b \\<bullet> u mod a ! k = 0\n  length u = length ys\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have u_b_len: \"length u = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length u = n", "using  less_eq_def u3_4 in_Solutions_iff sol"], ["proof (prove)\nusing this:\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n  u \\<le>\\<^sub>v ys\n  0 < sum_list u\n  sum_list u \\<le> a ! k\n  b \\<bullet> u mod a ! k = 0\n  length u = length ys\n  ((?x, ?y) \\<in> local.Solutions) =\n  (length ?x = m \\<and>\n   length ?y = n \\<and> a \\<bullet> ?x = b \\<bullet> ?y)\n  (xs, ys) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. length u = n", "by simp"], ["proof (state)\nthis:\n  length u = n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"b \\<bullet> u \\<le> maxne0 u b * sum_list u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> u \\<le> maxne0 u b * sum_list u", "by (simp add: maxne0_times_sum_list_gt_dotprod u_b_len)"], ["proof (state)\nthis:\n  b \\<bullet> u \\<le> maxne0 u b * sum_list u\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  b \\<bullet> u \\<le> maxne0 u b * sum_list u\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"... \\<le> ?m * a ! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxne0 u b * sum_list u \\<le> maxne0 ys b * a ! k", "by (intro mult_le_mono) (simp_all add: u3_4 maxne0_mono)"], ["proof (state)\nthis:\n  maxne0 u b * sum_list u \\<le> maxne0 ys b * a ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  maxne0 u b * sum_list u \\<le> maxne0 ys b * a ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"... < a ! k * xs ! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxne0 ys b * a ! k < a ! k * xs ! k", "using ak_gt_max"], ["proof (prove)\nusing this:\n  a ! k * maxne0 ys b < a ! k * xs ! k\n\ngoal (1 subgoal):\n 1. maxne0 ys b * a ! k < a ! k * xs ! k", "by auto"], ["proof (state)\nthis:\n  maxne0 ys b * a ! k < a ! k * xs ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  maxne0 ys b * a ! k < a ! k * xs ! k", "obtain zk where\n    zk: \"b \\<bullet> u = zk * a ! k\""], ["proof (prove)\nusing this:\n  maxne0 ys b * a ! k < a ! k * xs ! k\n\ngoal (1 subgoal):\n 1. (\\<And>zk.\n        b \\<bullet> u = zk * a ! k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using u3_4(4)"], ["proof (prove)\nusing this:\n  maxne0 ys b * a ! k < a ! k * xs ! k\n  b \\<bullet> u mod a ! k = 0\n\ngoal (1 subgoal):\n 1. (\\<And>zk.\n        b \\<bullet> u = zk * a ! k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b \\<bullet> u = zk * a ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"length xs > k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < length xs", "by (simp add: k_def)"], ["proof (state)\nthis:\n  k < length xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"zk \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zk \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zk \\<noteq> 0", "have \"\\<exists>e \\<in> set u. e \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e\\<in>set u. e \\<noteq> 0", "using u3_4"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>v ys\n  0 < sum_list u\n  sum_list u \\<le> a ! k\n  b \\<bullet> u mod a ! k = 0\n  length u = length ys\n\ngoal (1 subgoal):\n 1. \\<exists>e\\<in>set u. e \\<noteq> 0", "by (metis neq0_conv sum_list_eq_0_iff)"], ["proof (state)\nthis:\n  \\<exists>e\\<in>set u. e \\<noteq> 0\n\ngoal (1 subgoal):\n 1. zk \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  \\<exists>e\\<in>set u. e \\<noteq> 0", "have \"b \\<bullet> u > 0\""], ["proof (prove)\nusing this:\n  \\<exists>e\\<in>set u. e \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < b \\<bullet> u", "using assms no0 u3_4"], ["proof (prove)\nusing this:\n  \\<exists>e\\<in>set u. e \\<noteq> 0\n  (xs, ys) \\<in> local.Minimal_Solutions\n  0 \\<notin> set a\n  0 \\<notin> set b\n  u \\<le>\\<^sub>v ys\n  0 < sum_list u\n  sum_list u \\<le> a ! k\n  b \\<bullet> u mod a ! k = 0\n  length u = length ys\n\ngoal (1 subgoal):\n 1. 0 < b \\<bullet> u", "unfolding dotprod_gt0_iff[OF u_b_len [symmetric]]"], ["proof (prove)\nusing this:\n  \\<exists>e\\<in>set u. e \\<noteq> 0\n  (xs, ys) \\<in> local.Minimal_Solutions\n  0 \\<notin> set a\n  0 \\<notin> set b\n  u \\<le>\\<^sub>v ys\n  0 < sum_list u\n  sum_list u \\<le> a ! k\n  b \\<bullet> u mod a ! k = 0\n  length u = length ys\n\ngoal (1 subgoal):\n 1. \\<exists>i<length u. 0 < b ! i \\<and> 0 < u ! i", "by (fastforce simp add: in_set_conv_nth u_b_len)"], ["proof (state)\nthis:\n  0 < b \\<bullet> u\n\ngoal (1 subgoal):\n 1. zk \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  0 < b \\<bullet> u", "have \"a ! k > 0\""], ["proof (prove)\nusing this:\n  0 < b \\<bullet> u\n\ngoal (1 subgoal):\n 1. 0 < a ! k", "using \\<open>a ! k \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  0 < b \\<bullet> u\n  a ! k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < a ! k", "by blast"], ["proof (state)\nthis:\n  0 < a ! k\n\ngoal (1 subgoal):\n 1. zk \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  0 < a ! k", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < a ! k\n\ngoal (1 subgoal):\n 1. zk \\<noteq> 0", "using \\<open>0 < b \\<bullet> u\\<close> zk"], ["proof (prove)\nusing this:\n  0 < a ! k\n  0 < b \\<bullet> u\n  b \\<bullet> u = zk * a ! k\n\ngoal (1 subgoal):\n 1. zk \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  zk \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  zk \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "define z where\n    z_def: \"z = (zeroes (length xs))[k := zk]\""], ["proof (state)\nthis:\n  z = (zeroes (length xs))[k := zk]\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  z = (zeroes (length xs))[k := zk]", "have zk_zk: \"z ! k = zk\""], ["proof (prove)\nusing this:\n  z = (zeroes (length xs))[k := zk]\n\ngoal (1 subgoal):\n 1. z ! k = zk", "by (auto simp add: \\<open>k < length xs\\<close>)"], ["proof (state)\nthis:\n  z ! k = zk\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"length z = length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length z = length xs", "using assms z_def \\<open>k < length xs\\<close>"], ["proof (prove)\nusing this:\n  (xs, ys) \\<in> local.Minimal_Solutions\n  z = (zeroes (length xs))[k := zk]\n  k < length xs\n\ngoal (1 subgoal):\n 1. length z = length xs", "by auto"], ["proof (state)\nthis:\n  length z = length xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  length z = length xs", "have bu_eq_akzk: \"b \\<bullet> u = a ! k * z ! k\""], ["proof (prove)\nusing this:\n  length z = length xs\n\ngoal (1 subgoal):\n 1. b \\<bullet> u = a ! k * z ! k", "by (simp add: \\<open>b \\<bullet> u = zk * a ! k\\<close> zk_zk)"], ["proof (state)\nthis:\n  b \\<bullet> u = a ! k * z ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  b \\<bullet> u = a ! k * z ! k", "have \"z!k < xs!k\""], ["proof (prove)\nusing this:\n  b \\<bullet> u = a ! k * z ! k\n\ngoal (1 subgoal):\n 1. z ! k < xs ! k", "using ak_gt_max  calculation"], ["proof (prove)\nusing this:\n  b \\<bullet> u = a ! k * z ! k\n  a ! k * maxne0 ys b < a ! k * xs ! k\n  b \\<bullet> u \\<le> maxne0 ys b * a ! k\n\ngoal (1 subgoal):\n 1. z ! k < xs ! k", "by auto"], ["proof (state)\nthis:\n  z ! k < xs ! k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  z ! k < xs ! k", "have z_less_xs: \"z <\\<^sub>v xs\""], ["proof (prove)\nusing this:\n  z ! k < xs ! k\n\ngoal (1 subgoal):\n 1. z <\\<^sub>v xs", "by (auto simp add: z_def) (metis \\<open>k < length xs\\<close> le0 le_list_update less_def\n        less_imp_le order_vec.dual_order.antisym nat_neq_iff z_def zk_zk)"], ["proof (state)\nthis:\n  z <\\<^sub>v xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  z <\\<^sub>v xs", "have \"z @ u <\\<^sub>v xs @ ys\""], ["proof (prove)\nusing this:\n  z <\\<^sub>v xs\n\ngoal (1 subgoal):\n 1. z @ u <\\<^sub>v xs @ ys", "by (intro less_append) (auto simp add: u3_4(1) z_less_xs)"], ["proof (state)\nthis:\n  z @ u <\\<^sub>v xs @ ys\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  z @ u <\\<^sub>v xs @ ys\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"(z, u) \\<in> Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z, u) \\<in> local.Solutions", "by (auto simp add: bu_eq_akzk in_Solutions_iff z_def u_b_len \\<open>k < length xs\\<close> len)"], ["proof (state)\nthis:\n  (z, u) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  (z, u) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "have \"nonzero z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonzero z", "using \\<open>length z = length xs\\<close> and \\<open>zk \\<noteq> 0\\<close> and k_def and zk_zk"], ["proof (prove)\nusing this:\n  length z = length xs\n  zk \\<noteq> 0\n  k < length xs \\<and> \\<not> xs ! k \\<le> maxne0 ys b\n  z ! k = zk\n\ngoal (1 subgoal):\n 1. nonzero z", "by (auto simp: nonzero_iff)"], ["proof (state)\nthis:\n  nonzero z\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  b \\<bullet> u \\<le> maxne0 ys b * a ! k\n  z @ u <\\<^sub>v xs @ ys\n  (z, u) \\<in> local.Solutions\n  nonzero z", "show False"], ["proof (prove)\nusing this:\n  b \\<bullet> u \\<le> maxne0 ys b * a ! k\n  z @ u <\\<^sub>v xs @ ys\n  (z, u) \\<in> local.Solutions\n  nonzero z\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  b \\<bullet> u \\<le> maxne0 ys b * a ! k\n  z @ u <\\<^sub>v xs @ ys\n  (z, u) \\<in> local.Solutions\n  nonzero z\n  (xs, ys) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: Minimal_Solutions_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Proof of Lemma 1 of Huet's paper.\\<close>"], ["", "lemma max_coeff_bound:\n  assumes \"(xs, ys) \\<in> Minimal_Solutions\"\n  shows \"(\\<forall>x \\<in> set xs. x \\<le> maxne0 ys b) \\<and> (\\<forall>y \\<in> set ys. y \\<le> maxne0 xs a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<and>\n    (\\<forall>y\\<in>set ys. y \\<le> maxne0 xs a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<and>\n    (\\<forall>y\\<in>set ys. y \\<le> maxne0 xs a)", "interpret ba: hlde b a"], ["proof (prove)\ngoal (1 subgoal):\n 1. hlde b a", "by (standard) (auto simp: no0)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<and>\n    (\\<forall>y\\<in>set ys. y \\<le> maxne0 xs a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<and>\n    (\\<forall>y\\<in>set ys. y \\<le> maxne0 xs a)", "using assms and Minimal_Solutions_sym [OF no0, of xs ys]"], ["proof (prove)\nusing this:\n  (xs, ys) \\<in> local.Minimal_Solutions\n  (xs, ys) \\<in> local.Minimal_Solutions \\<longrightarrow>\n  (ys, xs) \\<in> ba.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<and>\n    (\\<forall>y\\<in>set ys. y \\<le> maxne0 xs a)", "by (auto simp: max_coeff_bound_right ba.max_coeff_bound_right)"], ["proof (state)\nthis:\n  (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b) \\<and>\n  (\\<forall>y\\<in>set ys. y \\<le> maxne0 xs a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma max_coeff_bound':\n  assumes \"(x, y) \\<in> Minimal_Solutions\"\n  shows \"\\<forall>i<length x. x ! i \\<le> Max (set b)\" and \"\\<forall>j<length y. y ! j \\<le> Max (set a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<length x. x ! i \\<le> Max (set b) &&&\n    \\<forall>j<length y. y ! j \\<le> Max (set a)", "using max_coeff_bound [OF assms] and maxne0_le_Max"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>set x. x \\<le> maxne0 y b) \\<and>\n  (\\<forall>y\\<in>set y. y \\<le> maxne0 x a)\n  maxne0 ?x ?a \\<le> Max (set ?a)\n\ngoal (1 subgoal):\n 1. \\<forall>i<length x. x ! i \\<le> Max (set b) &&&\n    \\<forall>j<length y. y ! j \\<le> Max (set a)", "by auto (metis le_eq_less_or_eq less_le_trans nth_mem)+"], ["", "lemma Minimal_Solutions_alt_def:\n  \"Minimal_Solutions = {(x, y)\\<in>Solutions.\n    (x, y) \\<noteq> (zeroes m, zeroes n) \\<and>\n    x \\<le>\\<^sub>v replicate m (Max (set b)) \\<and>\n    y \\<le>\\<^sub>v replicate n (Max (set a)) \\<and>\n    \\<not> (\\<exists>(u, v)\\<in>Solutions. nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.Minimal_Solutions =\n    {(x, y).\n     (x, y) \\<in> local.Solutions \\<and>\n     (x, y) \\<noteq> (zeroes m, zeroes n) \\<and>\n     x \\<le>\\<^sub>v replicate m (Max (set b)) \\<and>\n     y \\<le>\\<^sub>v replicate n (Max (set a)) \\<and>\n     \\<not> (\\<exists>(u, v)\\<in>local.Solutions.\n                nonzero u \\<and> u @ v <\\<^sub>v x @ y)}", "by (auto simp: not_nonzero_iff Minimal_Solutions_imp_Solutions less_eq_def Minimal_Solutions_length max_coeff_bound'\n    intro!: Minimal_SolutionsI' dest: Minimal_Solutions_gt0)\n    (auto simp: Minimal_Solutions_def nonzero_Solutions_iff not_nonzero_iff)"], ["", "subsection \\<open>Special Solutions\\<close>"], ["", "definition Special_Solutions :: \"(nat list \\<times> nat list) set\"\n  where\n    \"Special_Solutions = {sij i j | i j. i < m \\<and> j < n}\""], ["", "lemma dij_neq_0:\n  assumes \"i < m\"\n    and \"j < n\"\n  shows \"dij i j \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dij i j \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.dij i j \\<noteq> 0", "have \"a ! i > 0\" and \"b ! j > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a ! i &&& 0 < b ! j", "using assms and no0"], ["proof (prove)\nusing this:\n  i < m\n  j < n\n  0 \\<notin> set a\n  0 \\<notin> set b\n\ngoal (1 subgoal):\n 1. 0 < a ! i &&& 0 < b ! j", "by (simp_all add: in_set_conv_nth)"], ["proof (state)\nthis:\n  0 < a ! i\n  0 < b ! j\n\ngoal (1 subgoal):\n 1. local.dij i j \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  0 < a ! i\n  0 < b ! j", "have \"dij i j > 0\""], ["proof (prove)\nusing this:\n  0 < a ! i\n  0 < b ! j\n\ngoal (1 subgoal):\n 1. 0 < local.dij i j", "using lcm_div_gt_0 [of \"a ! i\" \"b ! j\"]"], ["proof (prove)\nusing this:\n  0 < a ! i\n  0 < b ! j\n  \\<lbrakk>0 < a ! i; 0 < b ! j\\<rbrakk>\n  \\<Longrightarrow> 0 < lcm (a ! i) (b ! j) div a ! i\n\ngoal (1 subgoal):\n 1. 0 < local.dij i j", "by (simp add: dij_def)"], ["proof (state)\nthis:\n  0 < local.dij i j\n\ngoal (1 subgoal):\n 1. local.dij i j \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  0 < local.dij i j", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < local.dij i j\n\ngoal (1 subgoal):\n 1. local.dij i j \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  local.dij i j \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eij_neq_0:\n  assumes \"i < m\"\n    and \"j < n\"\n  shows \"eij i j \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.eij i j \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.eij i j \\<noteq> 0", "have \"a ! i > 0\" and \"b ! j > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a ! i &&& 0 < b ! j", "using assms and no0"], ["proof (prove)\nusing this:\n  i < m\n  j < n\n  0 \\<notin> set a\n  0 \\<notin> set b\n\ngoal (1 subgoal):\n 1. 0 < a ! i &&& 0 < b ! j", "by (simp_all add: in_set_conv_nth)"], ["proof (state)\nthis:\n  0 < a ! i\n  0 < b ! j\n\ngoal (1 subgoal):\n 1. local.eij i j \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  0 < a ! i\n  0 < b ! j", "have \"eij i j > 0\""], ["proof (prove)\nusing this:\n  0 < a ! i\n  0 < b ! j\n\ngoal (1 subgoal):\n 1. 0 < local.eij i j", "using lcm_div_gt_0[of \"b ! j\"  \"a ! i\"]"], ["proof (prove)\nusing this:\n  0 < a ! i\n  0 < b ! j\n  \\<lbrakk>0 < b ! j; 0 < a ! i\\<rbrakk>\n  \\<Longrightarrow> 0 < lcm (b ! j) (a ! i) div b ! j\n\ngoal (1 subgoal):\n 1. 0 < local.eij i j", "by (simp add: eij_def lcm.commute)"], ["proof (state)\nthis:\n  0 < local.eij i j\n\ngoal (1 subgoal):\n 1. local.eij i j \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  0 < local.eij i j", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < local.eij i j\n\ngoal (1 subgoal):\n 1. local.eij i j \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  local.eij i j \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Special_Solutions_in_Solutions:\n  \"x \\<in> Special_Solutions \\<Longrightarrow> x \\<in> Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> Special_Solutions \\<Longrightarrow> x \\<in> local.Solutions", "by (auto simp: in_Solutions_iff Special_Solutions_def sij_def dij_def eij_def)"], ["", "lemma Special_Solutions_in_Minimal_Solutions:\n  assumes \"(x, y) \\<in> Special_Solutions\"\n  shows \"(x, y) \\<in> Minimal_Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions", "proof (intro Minimal_SolutionsI')"], ["proof (state)\ngoal (3 subgoals):\n 1. (x, y) \\<in> local.Solutions\n 2. nonzero x\n 3. \\<not> (\\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n               <\\<^sub>v x @ y)", "show \"(x, y) \\<in> Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Solutions", "by (fact Special_Solutions_in_Solutions [OF assms])"], ["proof (state)\nthis:\n  (x, y) \\<in> local.Solutions\n\ngoal (2 subgoals):\n 1. nonzero x\n 2. \\<not> (\\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n               <\\<^sub>v x @ y)", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> local.Solutions", "have [simp]: \"length x = m\" \"length y = n\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. length x = m &&& length y = n", "by (auto simp: in_Solutions_iff)"], ["proof (state)\nthis:\n  length x = m\n  length y = n\n\ngoal (2 subgoals):\n 1. nonzero x\n 2. \\<not> (\\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n               <\\<^sub>v x @ y)", "show \"nonzero x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonzero x", "using assms and dij_neq_0"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Special_Solutions\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> local.dij ?i ?j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. nonzero x", "by (auto simp: Special_Solutions_def sij_def nonzero_iff)\n     (metis length_replicate set_update_memI)"], ["proof (state)\nthis:\n  nonzero x\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n               <\\<^sub>v x @ y)", "show \"\\<not> (\\<exists>(u, v)\\<in>Minimal_Solutions. u @ v <\\<^sub>v x @ y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n               <\\<^sub>v x @ y)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n       <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "assume \"\\<exists>(u, v)\\<in>Minimal_Solutions. u @ v <\\<^sub>v x @ y\""], ["proof (state)\nthis:\n  \\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n       <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v <\\<^sub>v x @ y", "obtain u and v where uv: \"(u, v) \\<in> Minimal_Solutions\" and \"u @ v <\\<^sub>v x @ y\"\n      and [simp]: \"length u = m\" \"length v = n\"\n      and \"nonzero u\""], ["proof (prove)\nusing this:\n  \\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(u, v) \\<in> local.Minimal_Solutions;\n         u @ v <\\<^sub>v x @ y; length u = m; length v = n;\n         nonzero u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Minimal_Solutions_def in_Solutions_iff)"], ["proof (state)\nthis:\n  (u, v) \\<in> local.Minimal_Solutions\n  u @ v <\\<^sub>v x @ y\n  length u = m\n  length v = n\n  nonzero u\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n       <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (u, v) \\<in> local.Minimal_Solutions\n  u @ v <\\<^sub>v x @ y\n  length u = m\n  length v = n\n  nonzero u", "consider \"u <\\<^sub>v x\" and \"v \\<le>\\<^sub>v y\" | \"v <\\<^sub>v y\" and \"u \\<le>\\<^sub>v x\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> local.Minimal_Solutions\n  u @ v <\\<^sub>v x @ y\n  length u = m\n  length v = n\n  nonzero u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto elim: less_append_cases)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n       <\\<^sub>v x @ y \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. False", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  u <\\<^sub>v x\n  v \\<le>\\<^sub>v y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u <\\<^sub>v x\n  v \\<le>\\<^sub>v y", "obtain i and j where ij: \"i < m\" \"j < n\"\n        and less_dij: \"u ! i < dij i j\"\n        and \"u \\<le>\\<^sub>v (zeroes m)[i := dij i j]\"\n        and \"v \\<le>\\<^sub>v (zeroes n)[j := eij i j]\""], ["proof (prove)\nusing this:\n  u <\\<^sub>v x\n  v \\<le>\\<^sub>v y\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < m; j < n; u ! i < local.dij i j;\n         u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j];\n         v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  u <\\<^sub>v x\n  v \\<le>\\<^sub>v y\n  (x, y) \\<in> Special_Solutions\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < m; j < n; u ! i < local.dij i j;\n         u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j];\n         v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Special_Solutions_def sij_def unit_less)"], ["proof (state)\nthis:\n  i < m\n  j < n\n  u ! i < local.dij i j\n  u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j]\n  v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i < m\n  j < n\n  u ! i < local.dij i j\n  u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j]\n  v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]", "have u: \"u = (zeroes m)[i := u ! i]\" and v: \"v = (zeroes n)[j := v ! j]\""], ["proof (prove)\nusing this:\n  i < m\n  j < n\n  u ! i < local.dij i j\n  u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j]\n  v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]\n\ngoal (1 subgoal):\n 1. u = (zeroes m)[i := u ! i] &&& v = (zeroes n)[j := v ! j]", "by (auto simp: less_eq_def list_eq_iff_nth_eq)\n          (metis le_zero_eq length_list_update length_replicate rep_upd_unit)+"], ["proof (state)\nthis:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]", "have \"u ! i > 0\""], ["proof (prove)\nusing this:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]\n\ngoal (1 subgoal):\n 1. 0 < u ! i", "using \\<open>nonzero u\\<close> and ij"], ["proof (prove)\nusing this:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]\n  nonzero u\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. 0 < u ! i", "by (metis gr_implies_not0 neq0_conv unit_less zero_less)"], ["proof (state)\nthis:\n  0 < u ! i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "define c where \"c = a ! i * u ! i\""], ["proof (state)\nthis:\n  c = a ! i * u ! i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  c = a ! i * u ! i", "have ac: \"a ! i dvd c\""], ["proof (prove)\nusing this:\n  c = a ! i * u ! i\n\ngoal (1 subgoal):\n 1. a ! i dvd c", "by simp"], ["proof (state)\nthis:\n  a ! i dvd c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"a \\<bullet> u = b \\<bullet> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<bullet> u = b \\<bullet> v", "using uv"], ["proof (prove)\nusing this:\n  (u, v) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. a \\<bullet> u = b \\<bullet> v", "by (auto simp: Minimal_Solutions_def in_Solutions_iff)"], ["proof (state)\nthis:\n  a \\<bullet> u = b \\<bullet> v\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a \\<bullet> u = b \\<bullet> v", "have \"c = b ! j * v ! j\""], ["proof (prove)\nusing this:\n  a \\<bullet> u = b \\<bullet> v\n\ngoal (1 subgoal):\n 1. c = b ! j * v ! j", "using ij"], ["proof (prove)\nusing this:\n  a \\<bullet> u = b \\<bullet> v\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. c = b ! j * v ! j", "unfolding c_def"], ["proof (prove)\nusing this:\n  a \\<bullet> u = b \\<bullet> v\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. a ! i * u ! i = b ! j * v ! j", "by (subst (asm) u, subst (asm)v, subst u, subst v) auto"], ["proof (state)\nthis:\n  c = b ! j * v ! j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  c = b ! j * v ! j", "have bc: \"b ! j dvd c\""], ["proof (prove)\nusing this:\n  c = b ! j * v ! j\n\ngoal (1 subgoal):\n 1. b ! j dvd c", "by simp"], ["proof (state)\nthis:\n  b ! j dvd c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"a ! i * u ! i < a ! i * dij i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ! i * u ! i < a ! i * local.dij i j", "using less_dij and no0 and ij"], ["proof (prove)\nusing this:\n  u ! i < local.dij i j\n  0 \\<notin> set a\n  0 \\<notin> set b\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. a ! i * u ! i < a ! i * local.dij i j", "by (auto simp: in_set_conv_nth)"], ["proof (state)\nthis:\n  a ! i * u ! i < a ! i * local.dij i j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a ! i * u ! i < a ! i * local.dij i j", "have \"c < lcm (a ! i) (b ! j)\""], ["proof (prove)\nusing this:\n  a ! i * u ! i < a ! i * local.dij i j\n\ngoal (1 subgoal):\n 1. c < lcm (a ! i) (b ! j)", "by (auto simp: dij_def c_def)"], ["proof (state)\nthis:\n  c < lcm (a ! i) (b ! j)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  c < lcm (a ! i) (b ! j)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"lcm (a ! i) (b ! j) dvd c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcm (a ! i) (b ! j) dvd c", "by (simp add: ac bc)"], ["proof (state)\nthis:\n  lcm (a ! i) (b ! j) dvd c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  lcm (a ! i) (b ! j) dvd c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"c > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c", "using \\<open>u ! i > 0\\<close> and no0 and ij"], ["proof (prove)\nusing this:\n  0 < u ! i\n  0 \\<notin> set a\n  0 \\<notin> set b\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. 0 < c", "by (auto simp: c_def in_set_conv_nth)"], ["proof (state)\nthis:\n  0 < c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u <\\<^sub>v x; v \\<le>\\<^sub>v y\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  c < lcm (a ! i) (b ! j)\n  lcm (a ! i) (b ! j) dvd c\n  0 < c", "show False"], ["proof (prove)\nusing this:\n  c < lcm (a ! i) (b ! j)\n  lcm (a ! i) (b ! j) dvd c\n  0 < c\n\ngoal (1 subgoal):\n 1. False", "using ac and bc"], ["proof (prove)\nusing this:\n  c < lcm (a ! i) (b ! j)\n  lcm (a ! i) (b ! j) dvd c\n  0 < c\n  a ! i dvd c\n  b ! j dvd c\n\ngoal (1 subgoal):\n 1. False", "by (auto dest: nat_dvd_not_less)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "case 2"], ["proof (state)\nthis:\n  v <\\<^sub>v y\n  u \\<le>\\<^sub>v x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v <\\<^sub>v y\n  u \\<le>\\<^sub>v x", "obtain i and j where ij: \"i < m\" \"j < n\"\n        and less_dij: \"v ! j < eij i j\"\n        and \"u \\<le>\\<^sub>v (zeroes m)[i := dij i j]\"\n        and \"v \\<le>\\<^sub>v (zeroes n)[j := eij i j]\""], ["proof (prove)\nusing this:\n  v <\\<^sub>v y\n  u \\<le>\\<^sub>v x\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < m; j < n; v ! j < local.eij i j;\n         u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j];\n         v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  v <\\<^sub>v y\n  u \\<le>\\<^sub>v x\n  (x, y) \\<in> Special_Solutions\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < m; j < n; v ! j < local.eij i j;\n         u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j];\n         v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Special_Solutions_def sij_def unit_less)"], ["proof (state)\nthis:\n  i < m\n  j < n\n  v ! j < local.eij i j\n  u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j]\n  v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i < m\n  j < n\n  v ! j < local.eij i j\n  u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j]\n  v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]", "have u: \"u = (zeroes m)[i := u ! i]\" and v: \"v = (zeroes n)[j := v ! j]\""], ["proof (prove)\nusing this:\n  i < m\n  j < n\n  v ! j < local.eij i j\n  u \\<le>\\<^sub>v (zeroes m)[i := local.dij i j]\n  v \\<le>\\<^sub>v (zeroes n)[j := local.eij i j]\n\ngoal (1 subgoal):\n 1. u = (zeroes m)[i := u ! i] &&& v = (zeroes n)[j := v ! j]", "by (auto simp: less_eq_def list_eq_iff_nth_eq)\n          (metis le_zero_eq length_list_update length_replicate rep_upd_unit)+"], ["proof (state)\nthis:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"nonzero v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonzero v", "using \\<open>nonzero u\\<close> and \\<open>(u, v) \\<in> Minimal_Solutions\\<close>\n          and Minimal_Solutions_imp_Solutions Solutions_snd_not_0"], ["proof (prove)\nusing this:\n  nonzero u\n  (u, v) \\<in> local.Minimal_Solutions\n  (?x, ?y)\n  \\<in> Linear_Diophantine_Equations.Minimal_Solutions ?a\n         ?b \\<Longrightarrow>\n  (?x, ?y) \\<in> Linear_Diophantine_Equations.Solutions ?a ?b\n  \\<lbrakk>(?x, ?y) \\<in> local.Solutions; nonzero ?x\\<rbrakk>\n  \\<Longrightarrow> nonzero ?y\n\ngoal (1 subgoal):\n 1. nonzero v", "by blast"], ["proof (state)\nthis:\n  nonzero v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]\n  nonzero v", "have \"v ! j > 0\""], ["proof (prove)\nusing this:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]\n  nonzero v\n\ngoal (1 subgoal):\n 1. 0 < v ! j", "using ij"], ["proof (prove)\nusing this:\n  u = (zeroes m)[i := u ! i]\n  v = (zeroes n)[j := v ! j]\n  nonzero v\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. 0 < v ! j", "by (metis gr_implies_not0 neq0_conv unit_less zero_less)"], ["proof (state)\nthis:\n  0 < v ! j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "define c where \"c = b ! j * v ! j\""], ["proof (state)\nthis:\n  c = b ! j * v ! j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  c = b ! j * v ! j", "have bc: \"b ! j dvd c\""], ["proof (prove)\nusing this:\n  c = b ! j * v ! j\n\ngoal (1 subgoal):\n 1. b ! j dvd c", "by simp"], ["proof (state)\nthis:\n  b ! j dvd c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"a \\<bullet> u = b \\<bullet> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<bullet> u = b \\<bullet> v", "using uv"], ["proof (prove)\nusing this:\n  (u, v) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. a \\<bullet> u = b \\<bullet> v", "by (auto simp: Minimal_Solutions_def in_Solutions_iff)"], ["proof (state)\nthis:\n  a \\<bullet> u = b \\<bullet> v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a \\<bullet> u = b \\<bullet> v", "have \"c = a ! i * u ! i\""], ["proof (prove)\nusing this:\n  a \\<bullet> u = b \\<bullet> v\n\ngoal (1 subgoal):\n 1. c = a ! i * u ! i", "using ij"], ["proof (prove)\nusing this:\n  a \\<bullet> u = b \\<bullet> v\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. c = a ! i * u ! i", "unfolding c_def"], ["proof (prove)\nusing this:\n  a \\<bullet> u = b \\<bullet> v\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. b ! j * v ! j = a ! i * u ! i", "by (subst (asm) u, subst (asm)v, subst u, subst v) auto"], ["proof (state)\nthis:\n  c = a ! i * u ! i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  c = a ! i * u ! i", "have ac: \"a ! i dvd c\""], ["proof (prove)\nusing this:\n  c = a ! i * u ! i\n\ngoal (1 subgoal):\n 1. a ! i dvd c", "by simp"], ["proof (state)\nthis:\n  a ! i dvd c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"b ! j * v ! j < b ! j * eij i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b ! j * v ! j < b ! j * local.eij i j", "using less_dij and no0 and ij"], ["proof (prove)\nusing this:\n  v ! j < local.eij i j\n  0 \\<notin> set a\n  0 \\<notin> set b\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. b ! j * v ! j < b ! j * local.eij i j", "by (auto simp: in_set_conv_nth)"], ["proof (state)\nthis:\n  b ! j * v ! j < b ! j * local.eij i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b ! j * v ! j < b ! j * local.eij i j", "have \"c < lcm (a ! i) (b ! j)\""], ["proof (prove)\nusing this:\n  b ! j * v ! j < b ! j * local.eij i j\n\ngoal (1 subgoal):\n 1. c < lcm (a ! i) (b ! j)", "by (auto simp: eij_def c_def)"], ["proof (state)\nthis:\n  c < lcm (a ! i) (b ! j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  c < lcm (a ! i) (b ! j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"lcm (a ! i) (b ! j) dvd c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcm (a ! i) (b ! j) dvd c", "by (simp add: ac bc)"], ["proof (state)\nthis:\n  lcm (a ! i) (b ! j) dvd c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  lcm (a ! i) (b ! j) dvd c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "have \"c > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c", "using \\<open>v ! j > 0\\<close> and no0 and ij"], ["proof (prove)\nusing this:\n  0 < v ! j\n  0 \\<notin> set a\n  0 \\<notin> set b\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. 0 < c", "by (auto simp: c_def in_set_conv_nth)"], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v <\\<^sub>v y; u \\<le>\\<^sub>v x\\<rbrakk>\n    \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  c < lcm (a ! i) (b ! j)\n  lcm (a ! i) (b ! j) dvd c\n  0 < c", "show False"], ["proof (prove)\nusing this:\n  c < lcm (a ! i) (b ! j)\n  lcm (a ! i) (b ! j) dvd c\n  0 < c\n\ngoal (1 subgoal):\n 1. False", "using ac and bc"], ["proof (prove)\nusing this:\n  c < lcm (a ! i) (b ! j)\n  lcm (a ! i) (b ! j) dvd c\n  0 < c\n  a ! i dvd c\n  b ! j dvd c\n\ngoal (1 subgoal):\n 1. False", "by (auto dest: nat_dvd_not_less)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>(u, v)\\<in>local.Minimal_Solutions. u @ v\n             <\\<^sub>v x @ y)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*Lemma 2 of Huet*)"], ["", "lemma non_special_solution_non_minimal:\n  assumes \"(x, y) \\<in> Solutions - Special_Solutions\"\n    and ij: \"i < m\" \"j < n\"\n    and \"x ! i \\<ge> dij i j\" and \"y ! j \\<ge> eij i j\"\n  shows \"(x, y) \\<notin> Minimal_Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<notin> local.Minimal_Solutions", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions \\<Longrightarrow> False", "assume min: \"(x, y) \\<in> Minimal_Solutions\""], ["proof (state)\nthis:\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions \\<Longrightarrow> False", "have \"sij i j \\<in> Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.sij i j \\<in> local.Solutions", "using ij"], ["proof (prove)\nusing this:\n  i < m\n  j < n\n\ngoal (1 subgoal):\n 1. local.sij i j \\<in> local.Solutions", "by (intro Special_Solutions_in_Solutions) (auto simp: Special_Solutions_def)"], ["proof (state)\nthis:\n  local.sij i j \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  local.sij i j \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions \\<Longrightarrow> False", "have \"(case sij i j of (u, v) \\<Rightarrow> u @ v) <\\<^sub>v x @ y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case local.sij i j of (u, v) \\<Rightarrow> u @ v) <\\<^sub>v x @ y", "using assms and min"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Solutions - Special_Solutions\n  i < m\n  j < n\n  local.dij i j \\<le> x ! i\n  local.eij i j \\<le> y ! j\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. (case local.sij i j of (u, v) \\<Rightarrow> u @ v) <\\<^sub>v x @ y", "apply (cases \"sij i j\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>(x, y) \\<in> local.Solutions - Special_Solutions; i < m;\n        j < n; local.dij i j \\<le> x ! i; local.eij i j \\<le> y ! j;\n        (x, y) \\<in> local.Minimal_Solutions;\n        local.sij i j = (a, b)\\<rbrakk>\n       \\<Longrightarrow> (case local.sij i j of (u, v) \\<Rightarrow> u @ v)\n                         <\\<^sub>v x @ y", "apply (auto simp: sij_def Special_Solutions_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < m; j < n; local.dij i j \\<le> x ! i;\n     local.eij i j \\<le> y ! j; (x, y) \\<in> local.Minimal_Solutions;\n     (x, y) \\<in> local.Solutions;\n     \\<forall>i<m.\n        \\<forall>j.\n           y = (zeroes n)[j := local.eij i j] \\<longrightarrow>\n           x = (zeroes m)[i := local.dij i j] \\<longrightarrow>\n           \\<not> j < n\\<rbrakk>\n    \\<Longrightarrow> (zeroes m)[i := local.dij i j] @ (zeroes n)\n                      [j := local.eij i j]\n                      <\\<^sub>v x @ y", "by (metis List_Vector.le0 Minimal_Solutions_length le_append le_list_update less_append order_vec.dual_order.strict_iff_order same_append_eq)"], ["proof (state)\nthis:\n  (case local.sij i j of (u, v) \\<Rightarrow> u @ v) <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (case local.sij i j of (u, v) \\<Rightarrow> u @ v) <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions \\<Longrightarrow> False", "have \"(case sij i j of (u, v) \\<Rightarrow> nonzero u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. case local.sij i j of (u, v) \\<Rightarrow> nonzero u", "apply (auto simp: sij_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nonzero ((zeroes m)[i := local.dij i j])", "by (metis dij_neq_0 ij length_replicate nonzero_iff set_update_memI)"], ["proof (state)\nthis:\n  case local.sij i j of (u, v) \\<Rightarrow> nonzero u\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Minimal_Solutions \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (x, y) \\<in> local.Minimal_Solutions\n  local.sij i j \\<in> local.Solutions\n  (case local.sij i j of (u, v) \\<Rightarrow> u @ v) <\\<^sub>v x @ y\n  case local.sij i j of (u, v) \\<Rightarrow> nonzero u", "show False"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  local.sij i j \\<in> local.Solutions\n  (case local.sij i j of (u, v) \\<Rightarrow> u @ v) <\\<^sub>v x @ y\n  case local.sij i j of (u, v) \\<Rightarrow> nonzero u\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: Minimal_Solutions_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Huet's conditions\\<close>"], ["", "(*A*)"], ["", "definition \"cond_A xs ys \\<longleftrightarrow> (\\<forall>x\\<in>set xs. x \\<le> maxne0 ys b)\""], ["", "(*B*)"], ["", "definition \"cond_B x \\<longleftrightarrow>\n  (\\<forall>k\\<le>m. take k a \\<bullet> take k x \\<le> b \\<bullet> map (max_y (take k x)) [0 ..< n])\""], ["", "(*C*)"], ["", "definition \"boundr x y \\<longleftrightarrow> (\\<forall>j<n. y ! j \\<le> max_y x j)\""], ["", "(*D*)"], ["", "definition \"cond_D x y \\<longleftrightarrow> (\\<forall>l\\<le>n. take l b \\<bullet> take l y \\<le> a \\<bullet> x)\""], ["", "subsection \\<open>New conditions: facilitating generation of candidates from right to left\\<close>"], ["", "(*condition on right sub-dotproduct*)"], ["", "definition \"subdprodr y \\<longleftrightarrow>\n  (\\<forall>l\\<le>n. take l b \\<bullet> take l y \\<le> a \\<bullet> map (max_x (take l y)) [0 ..< m])\""], ["", "(*condition on left sub-dotproduct*)"], ["", "definition \"subdprodl x y \\<longleftrightarrow> (\\<forall>k\\<le>m. take k a \\<bullet> take k x \\<le> b \\<bullet> y)\""], ["", "(*bound on elements of left vector*)"], ["", "definition \"boundl x y \\<longleftrightarrow> (\\<forall>i<m. x ! i \\<le> max_x y i)\""], ["", "lemma boundr:\n  assumes min: \"(x, y) \\<in> Minimal_Solutions\"\n    and \"(x, y) \\<notin> Special_Solutions\"\n  shows \"boundr x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. boundr x y", "proof (unfold boundr_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> y ! j \\<le> max_y x j", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> y ! j \\<le> max_y x j", "assume ass: \"j < n\""], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> y ! j \\<le> max_y x j", "have ln: \"m = length x \\<and> n = length y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = length x \\<and> n = length y", "using assms Minimal_Solutions_def in_Solutions_iff min"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  local.Minimal_Solutions =\n  {(x, y).\n   (x, y) \\<in> local.Solutions \\<and>\n   nonzero x \\<and>\n   \\<not> (\\<exists>(u, v)\\<in>local.Solutions.\n              nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\n  ((?x, ?y) \\<in> local.Solutions) =\n  (length ?x = m \\<and>\n   length ?y = n \\<and> a \\<bullet> ?x = b \\<bullet> ?y)\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. m = length x \\<and> n = length y", "by auto"], ["proof (state)\nthis:\n  m = length x \\<and> n = length y\n\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> y ! j \\<le> max_y x j", "have is_sol: \"(x, y) \\<in> Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Solutions", "using assms Minimal_Solutions_def min"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  local.Minimal_Solutions =\n  {(x, y).\n   (x, y) \\<in> local.Solutions \\<and>\n   nonzero x \\<and>\n   \\<not> (\\<exists>(u, v)\\<in>local.Solutions.\n              nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Solutions", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> y ! j \\<le> max_y x j", "have j_less_l: \"j < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < n", "using assms ass le_less_trans"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  j < n\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. j < n", "by linarith"], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> y ! j \\<le> max_y x j", "consider (notemp) \"Ej j x \\<noteq> {}\"  | (empty) \" Ej j x = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ej j x \\<noteq> {} \\<Longrightarrow> thesis;\n     Ej j x = {} \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>Ej j x \\<noteq> {} \\<Longrightarrow> ?thesis;\n   Ej j x = {} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>j. j < n \\<Longrightarrow> y ! j \\<le> max_y x j", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Ej j x \\<noteq> {} \\<Longrightarrow> ?thesis;\n   Ej j x = {} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"y ! j \\<le> max_y x j\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Ej j x \\<noteq> {} \\<Longrightarrow> ?thesis;\n   Ej j x = {} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. y ! j \\<le> max_y x j", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. Ej j x \\<noteq> {} \\<Longrightarrow> y ! j \\<le> max_y x j\n 2. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "case notemp"], ["proof (state)\nthis:\n  Ej j x \\<noteq> {}\n\ngoal (2 subgoals):\n 1. Ej j x \\<noteq> {} \\<Longrightarrow> y ! j \\<le> max_y x j\n 2. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "have max_y_def: \"max_y x j =  Min (Ej j x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_y x j = Min (Ej j x)", "using j_less_l max_y_def notemp"], ["proof (prove)\nusing this:\n  j < n\n  max_y ?x ?j =\n  (if ?j < n \\<and> Ej ?j ?x \\<noteq> {} then Min (Ej ?j ?x)\n   else Max (set a))\n  Ej j x \\<noteq> {}\n\ngoal (1 subgoal):\n 1. max_y x j = Min (Ej j x)", "by auto"], ["proof (state)\nthis:\n  max_y x j = Min (Ej j x)\n\ngoal (2 subgoals):\n 1. Ej j x \\<noteq> {} \\<Longrightarrow> y ! j \\<le> max_y x j\n 2. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "have fin_e: \"finite (Ej j x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Ej j x)", "using finite_Ej [of j x]"], ["proof (prove)\nusing this:\n  finite (Ej j x)\n\ngoal (1 subgoal):\n 1. finite (Ej j x)", "by auto"], ["proof (state)\nthis:\n  finite (Ej j x)\n\ngoal (2 subgoals):\n 1. Ej j x \\<noteq> {} \\<Longrightarrow> y ! j \\<le> max_y x j\n 2. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "have e_def': \"\\<forall>e \\<in> Ej j x. (\\<exists>i<length x. x ! i \\<ge> dij i j \\<and> eij i j - 1 = e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>Ej j x.\n       \\<exists>i<length x.\n          local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = e", "using Ej_def [of j x]"], ["proof (prove)\nusing this:\n  Ej j x =\n  {local.eij i j - 1 |i. i < length x \\<and> local.dij i j \\<le> x ! i}\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>Ej j x.\n       \\<exists>i<length x.\n          local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = e", "by auto"], ["proof (state)\nthis:\n  \\<forall>e\\<in>Ej j x.\n     \\<exists>i<length x.\n        local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = e\n\ngoal (2 subgoals):\n 1. Ej j x \\<noteq> {} \\<Longrightarrow> y ! j \\<le> max_y x j\n 2. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "then"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>Ej j x.\n     \\<exists>i<length x.\n        local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = e", "have \"\\<exists>i<length x. x ! i \\<ge> dij i j \\<and> eij i j - 1 = Min (Ej j x)\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>Ej j x.\n     \\<exists>i<length x.\n        local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = e\n\ngoal (1 subgoal):\n 1. \\<exists>i<length x.\n       local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = Min (Ej j x)", "using notemp Min_in e_def' fin_e"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>Ej j x.\n     \\<exists>i<length x.\n        local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = e\n  Ej j x \\<noteq> {}\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min ?A \\<in> ?A\n  \\<forall>e\\<in>Ej j x.\n     \\<exists>i<length x.\n        local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = e\n  finite (Ej j x)\n\ngoal (1 subgoal):\n 1. \\<exists>i<length x.\n       local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = Min (Ej j x)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i<length x.\n     local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = Min (Ej j x)\n\ngoal (2 subgoals):\n 1. Ej j x \\<noteq> {} \\<Longrightarrow> y ! j \\<le> max_y x j\n 2. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "then"], ["proof (chain)\npicking this:\n  \\<exists>i<length x.\n     local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = Min (Ej j x)", "obtain i where\n      i: \"i < length x\" \"x ! i \\<ge> dij i j\" \"eij i j - 1 = Min (Ej j x)\""], ["proof (prove)\nusing this:\n  \\<exists>i<length x.\n     local.dij i j \\<le> x ! i \\<and> local.eij i j - 1 = Min (Ej j x)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < length x; local.dij i j \\<le> x ! i;\n         local.eij i j - 1 = Min (Ej j x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i < length x\n  local.dij i j \\<le> x ! i\n  local.eij i j - 1 = Min (Ej j x)\n\ngoal (2 subgoals):\n 1. Ej j x \\<noteq> {} \\<Longrightarrow> y ! j \\<le> max_y x j\n 2. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. y ! j \\<le> max_y x j", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> y ! j \\<le> max_y x j \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> y ! j \\<le> max_y x j\n\ngoal (1 subgoal):\n 1. \\<not> y ! j \\<le> max_y x j \\<Longrightarrow> False", "with non_special_solution_non_minimal [of x y i j]\n        and i and ln and assms and is_sol and j_less_l"], ["proof (chain)\npicking this:\n  \\<lbrakk>(x, y) \\<in> local.Solutions - Special_Solutions; i < m; j < n;\n   local.dij i j \\<le> x ! i; local.eij i j \\<le> y ! j\\<rbrakk>\n  \\<Longrightarrow> (x, y) \\<notin> local.Minimal_Solutions\n  i < length x\n  local.dij i j \\<le> x ! i\n  local.eij i j - 1 = Min (Ej j x)\n  m = length x \\<and> n = length y\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  (x, y) \\<in> local.Solutions\n  j < n\n  \\<not> y ! j \\<le> max_y x j", "have \"case sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(x, y) \\<in> local.Solutions - Special_Solutions; i < m; j < n;\n   local.dij i j \\<le> x ! i; local.eij i j \\<le> y ! j\\<rbrakk>\n  \\<Longrightarrow> (x, y) \\<notin> local.Minimal_Solutions\n  i < length x\n  local.dij i j \\<le> x ! i\n  local.eij i j - 1 = Min (Ej j x)\n  m = length x \\<and> n = length y\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  (x, y) \\<in> local.Solutions\n  j < n\n  \\<not> y ! j \\<le> max_y x j\n\ngoal (1 subgoal):\n 1. case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y", "by (force simp: max_y_def)"], ["proof (state)\nthis:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<not> y ! j \\<le> max_y x j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y", "have cs:\"case sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y\""], ["proof (prove)\nusing this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y", "using assms"], ["proof (prove)\nusing this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n\ngoal (1 subgoal):\n 1. case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y", "by(auto simp: Special_Solutions_def) (metis append_eq_append_conv\n            i(1) j_less_l length_list_update length_replicate sij_def\n            order_vec.le_neq_trans ln prod.sel(1))"], ["proof (state)\nthis:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<not> y ! j \\<le> max_y x j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y", "obtain u v where\n        u_v: \"sij i j = (u, v)\" \"u @ v <\\<^sub>v x @ y\""], ["proof (prove)\nusing this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>local.sij i j = (u, v); u @ v <\\<^sub>v x @ y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  local.sij i j = (u, v)\n  u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<not> y ! j \\<le> max_y x j \\<Longrightarrow> False", "have dij_gt0: \"dij i j > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < local.dij i j", "using assms(1) assms(2) dij_neq_0 i(1) j_less_l ln"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> local.dij ?i ?j \\<noteq> 0\n  i < length x\n  j < n\n  m = length x \\<and> n = length y\n\ngoal (1 subgoal):\n 1. 0 < local.dij i j", "by auto"], ["proof (state)\nthis:\n  0 < local.dij i j\n\ngoal (1 subgoal):\n 1. \\<not> y ! j \\<le> max_y x j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 < local.dij i j", "have not_0_u: \"nonzero u\""], ["proof (prove)\nusing this:\n  0 < local.dij i j\n\ngoal (1 subgoal):\n 1. nonzero u", "proof (unfold nonzero_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < local.dij i j \\<Longrightarrow> \\<exists>x\\<in>set u. x \\<noteq> 0", "have \"i < length (zeroes m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length (zeroes m)", "by (simp add: i(1) ln)"], ["proof (state)\nthis:\n  i < length (zeroes m)\n\ngoal (1 subgoal):\n 1. 0 < local.dij i j \\<Longrightarrow> \\<exists>x\\<in>set u. x \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  i < length (zeroes m)", "show \"\\<exists>i\\<in>set u. i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  i < length (zeroes m)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>set u. i \\<noteq> 0", "by (metis (no_types) Pair_inject dij_gt0 set_update_memI sij_def u_v(1) neq0_conv)"], ["proof (state)\nthis:\n  \\<exists>i\\<in>set u. i \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nonzero u\n\ngoal (1 subgoal):\n 1. \\<not> y ! j \\<le> max_y x j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  nonzero u", "have \"sij i j \\<in> Solutions\""], ["proof (prove)\nusing this:\n  nonzero u\n\ngoal (1 subgoal):\n 1. local.sij i j \\<in> local.Solutions", "by (metis (mono_tags, lifting) Special_Solutions_def i(1)\n            Special_Solutions_in_Solutions j_less_l ln mem_Collect_eq u_v(1))"], ["proof (state)\nthis:\n  local.sij i j \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. \\<not> y ! j \\<le> max_y x j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  local.sij i j \\<in> local.Solutions", "show False"], ["proof (prove)\nusing this:\n  local.sij i j \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. False", "using assms cs u_v not_0_u Minimal_Solutions_def min"], ["proof (prove)\nusing this:\n  local.sij i j \\<in> local.Solutions\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y\n  local.sij i j = (u, v)\n  u @ v <\\<^sub>v x @ y\n  nonzero u\n  local.Minimal_Solutions =\n  {(x, y).\n   (x, y) \\<in> local.Solutions \\<and>\n   nonzero x \\<and>\n   \\<not> (\\<exists>(u, v)\\<in>local.Solutions.\n              nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y ! j \\<le> max_y x j\n\ngoal (1 subgoal):\n 1. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "case empty"], ["proof (state)\nthis:\n  Ej j x = {}\n\ngoal (1 subgoal):\n 1. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "have \"\\<forall>y\\<in>set y. y \\<le> Max (set a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set y. y \\<le> Max (set a)", "using assms and max_coeff_bound and maxne0_le_Max"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  (?xs, ?ys) \\<in> local.Minimal_Solutions \\<Longrightarrow>\n  (\\<forall>x\\<in>set ?xs. x \\<le> maxne0 ?ys b) \\<and>\n  (\\<forall>y\\<in>set ?ys. y \\<le> maxne0 ?xs a)\n  maxne0 ?x ?a \\<le> Max (set ?a)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set y. y \\<le> Max (set a)", "using le_trans"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  (?xs, ?ys) \\<in> local.Minimal_Solutions \\<Longrightarrow>\n  (\\<forall>x\\<in>set ?xs. x \\<le> maxne0 ?ys b) \\<and>\n  (\\<forall>y\\<in>set ?ys. y \\<le> maxne0 ?xs a)\n  maxne0 ?x ?a \\<le> Max (set ?a)\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set y. y \\<le> Max (set a)", "by blast"], ["proof (state)\nthis:\n  \\<forall>y\\<in>set y. y \\<le> Max (set a)\n\ngoal (1 subgoal):\n 1. Ej j x = {} \\<Longrightarrow> y ! j \\<le> max_y x j", "then"], ["proof (chain)\npicking this:\n  \\<forall>y\\<in>set y. y \\<le> Max (set a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>set y. y \\<le> Max (set a)\n\ngoal (1 subgoal):\n 1. y ! j \\<le> max_y x j", "using empty j_less_l ln max_y_def"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>set y. y \\<le> Max (set a)\n  Ej j x = {}\n  j < n\n  m = length x \\<and> n = length y\n  max_y ?x ?j =\n  (if ?j < n \\<and> Ej ?j ?x \\<noteq> {} then Min (Ej ?j ?x)\n   else Max (set a))\n\ngoal (1 subgoal):\n 1. y ! j \\<le> max_y x j", "by auto"], ["proof (state)\nthis:\n  y ! j \\<le> max_y x j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y ! j \\<le> max_y x j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma boundl:\n  assumes min: \"(x, y) \\<in> Minimal_Solutions\"\n    and \"(x, y) \\<notin> Special_Solutions\"\n  shows \"boundl x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. boundl x y", "proof (unfold boundl_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> x ! i \\<le> max_x y i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> x ! i \\<le> max_x y i", "assume ass: \"i < m\""], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> x ! i \\<le> max_x y i", "have ln: \"n = length y \\<and> m = length x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = length y \\<and> m = length x", "using assms Minimal_Solutions_def in_Solutions_iff min"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  local.Minimal_Solutions =\n  {(x, y).\n   (x, y) \\<in> local.Solutions \\<and>\n   nonzero x \\<and>\n   \\<not> (\\<exists>(u, v)\\<in>local.Solutions.\n              nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\n  ((?x, ?y) \\<in> local.Solutions) =\n  (length ?x = m \\<and>\n   length ?y = n \\<and> a \\<bullet> ?x = b \\<bullet> ?y)\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. n = length y \\<and> m = length x", "by auto"], ["proof (state)\nthis:\n  n = length y \\<and> m = length x\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> x ! i \\<le> max_x y i", "have is_sol: \"(x, y) \\<in> Solutions\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Solutions", "using assms Minimal_Solutions_def min"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  local.Minimal_Solutions =\n  {(x, y).\n   (x, y) \\<in> local.Solutions \\<and>\n   nonzero x \\<and>\n   \\<not> (\\<exists>(u, v)\\<in>local.Solutions.\n              nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> local.Solutions", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> x ! i \\<le> max_x y i", "have i_less_l: \"i < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < m", "using assms ass le_less_trans"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  i < m\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. i < m", "by linarith"], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> x ! i \\<le> max_x y i", "consider (notemp) \"Di i y \\<noteq> {}\"  | (empty) \" Di i y = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Di i y \\<noteq> {} \\<Longrightarrow> thesis;\n     Di i y = {} \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>Di i y \\<noteq> {} \\<Longrightarrow> ?thesis;\n   Di i y = {} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>i. i < m \\<Longrightarrow> x ! i \\<le> max_x y i", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Di i y \\<noteq> {} \\<Longrightarrow> ?thesis;\n   Di i y = {} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"x ! i \\<le> max_x y i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Di i y \\<noteq> {} \\<Longrightarrow> ?thesis;\n   Di i y = {} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x ! i \\<le> max_x y i", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. Di i y \\<noteq> {} \\<Longrightarrow> x ! i \\<le> max_x y i\n 2. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "case notemp"], ["proof (state)\nthis:\n  Di i y \\<noteq> {}\n\ngoal (2 subgoals):\n 1. Di i y \\<noteq> {} \\<Longrightarrow> x ! i \\<le> max_x y i\n 2. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "have max_x_def: \"max_x y i =  Min (Di i y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_x y i = Min (Di i y)", "using i_less_l max_x_def notemp"], ["proof (prove)\nusing this:\n  i < m\n  max_x ?y ?i =\n  (if ?i < m \\<and> Di ?i ?y \\<noteq> {} then Min (Di ?i ?y)\n   else Max (set b))\n  Di i y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. max_x y i = Min (Di i y)", "by auto"], ["proof (state)\nthis:\n  max_x y i = Min (Di i y)\n\ngoal (2 subgoals):\n 1. Di i y \\<noteq> {} \\<Longrightarrow> x ! i \\<le> max_x y i\n 2. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "have fin_e: \"finite (Di i y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Di i y)", "using finite_Di [of i y]"], ["proof (prove)\nusing this:\n  finite (Di i y)\n\ngoal (1 subgoal):\n 1. finite (Di i y)", "by auto"], ["proof (state)\nthis:\n  finite (Di i y)\n\ngoal (2 subgoals):\n 1. Di i y \\<noteq> {} \\<Longrightarrow> x ! i \\<le> max_x y i\n 2. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "have e_def': \"\\<forall>e \\<in> Di i y. (\\<exists>j<length y. y ! j \\<ge> eij i j \\<and> dij i j - 1 = e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>Di i y.\n       \\<exists>j<length y.\n          local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = e", "using Di_def [of i y]"], ["proof (prove)\nusing this:\n  Di i y =\n  {local.dij i j - 1 |j. j < length y \\<and> local.eij i j \\<le> y ! j}\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>Di i y.\n       \\<exists>j<length y.\n          local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = e", "by auto"], ["proof (state)\nthis:\n  \\<forall>e\\<in>Di i y.\n     \\<exists>j<length y.\n        local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = e\n\ngoal (2 subgoals):\n 1. Di i y \\<noteq> {} \\<Longrightarrow> x ! i \\<le> max_x y i\n 2. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "then"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>Di i y.\n     \\<exists>j<length y.\n        local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = e", "have \"\\<exists>j<length y. y ! j \\<ge> eij i j \\<and> dij i j - 1 = Min (Di i y)\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>Di i y.\n     \\<exists>j<length y.\n        local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = e\n\ngoal (1 subgoal):\n 1. \\<exists>j<length y.\n       local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = Min (Di i y)", "using notemp Min_in e_def' fin_e"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>Di i y.\n     \\<exists>j<length y.\n        local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = e\n  Di i y \\<noteq> {}\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min ?A \\<in> ?A\n  \\<forall>e\\<in>Di i y.\n     \\<exists>j<length y.\n        local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = e\n  finite (Di i y)\n\ngoal (1 subgoal):\n 1. \\<exists>j<length y.\n       local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = Min (Di i y)", "by blast"], ["proof (state)\nthis:\n  \\<exists>j<length y.\n     local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = Min (Di i y)\n\ngoal (2 subgoals):\n 1. Di i y \\<noteq> {} \\<Longrightarrow> x ! i \\<le> max_x y i\n 2. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "then"], ["proof (chain)\npicking this:\n  \\<exists>j<length y.\n     local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = Min (Di i y)", "obtain j where\n      j: \"j < length y\" \"y ! j \\<ge> eij i j\" \"dij i j - 1 = Min (Di i y)\""], ["proof (prove)\nusing this:\n  \\<exists>j<length y.\n     local.eij i j \\<le> y ! j \\<and> local.dij i j - 1 = Min (Di i y)\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j < length y; local.eij i j \\<le> y ! j;\n         local.dij i j - 1 = Min (Di i y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j < length y\n  local.eij i j \\<le> y ! j\n  local.dij i j - 1 = Min (Di i y)\n\ngoal (2 subgoals):\n 1. Di i y \\<noteq> {} \\<Longrightarrow> x ! i \\<le> max_x y i\n 2. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x ! i \\<le> max_x y i", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x ! i \\<le> max_x y i \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> x ! i \\<le> max_x y i\n\ngoal (1 subgoal):\n 1. \\<not> x ! i \\<le> max_x y i \\<Longrightarrow> False", "with non_special_solution_non_minimal [of x y i j]\n        and j and ln and assms and is_sol and i_less_l"], ["proof (chain)\npicking this:\n  \\<lbrakk>(x, y) \\<in> local.Solutions - Special_Solutions; i < m; j < n;\n   local.dij i j \\<le> x ! i; local.eij i j \\<le> y ! j\\<rbrakk>\n  \\<Longrightarrow> (x, y) \\<notin> local.Minimal_Solutions\n  j < length y\n  local.eij i j \\<le> y ! j\n  local.dij i j - 1 = Min (Di i y)\n  n = length y \\<and> m = length x\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  (x, y) \\<in> local.Solutions\n  i < m\n  \\<not> x ! i \\<le> max_x y i", "have \"case sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(x, y) \\<in> local.Solutions - Special_Solutions; i < m; j < n;\n   local.dij i j \\<le> x ! i; local.eij i j \\<le> y ! j\\<rbrakk>\n  \\<Longrightarrow> (x, y) \\<notin> local.Minimal_Solutions\n  j < length y\n  local.eij i j \\<le> y ! j\n  local.dij i j - 1 = Min (Di i y)\n  n = length y \\<and> m = length x\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  (x, y) \\<in> local.Solutions\n  i < m\n  \\<not> x ! i \\<le> max_x y i\n\ngoal (1 subgoal):\n 1. case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y", "by (force simp: max_x_def)"], ["proof (state)\nthis:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<not> x ! i \\<le> max_x y i \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y", "have cs: \"case sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y\""], ["proof (prove)\nusing this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y", "using assms"], ["proof (prove)\nusing this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v \\<le>\\<^sub>v x @ y\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n\ngoal (1 subgoal):\n 1. case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y", "by(auto simp: Special_Solutions_def) (metis append_eq_append_conv\n            j(1) i_less_l length_list_update length_replicate sij_def\n            order_vec.le_neq_trans ln prod.sel(1))"], ["proof (state)\nthis:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<not> x ! i \\<le> max_x y i \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y", "obtain u v where\n        u_v: \"sij i j = (u, v)\" \"u @ v <\\<^sub>v x @ y\""], ["proof (prove)\nusing this:\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>local.sij i j = (u, v); u @ v <\\<^sub>v x @ y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  local.sij i j = (u, v)\n  u @ v <\\<^sub>v x @ y\n\ngoal (1 subgoal):\n 1. \\<not> x ! i \\<le> max_x y i \\<Longrightarrow> False", "have dij_gt0: \"dij i j > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < local.dij i j", "using assms(1) assms(2) dij_neq_0 j(1) i_less_l ln"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> local.dij ?i ?j \\<noteq> 0\n  j < length y\n  i < m\n  n = length y \\<and> m = length x\n\ngoal (1 subgoal):\n 1. 0 < local.dij i j", "by auto"], ["proof (state)\nthis:\n  0 < local.dij i j\n\ngoal (1 subgoal):\n 1. \\<not> x ! i \\<le> max_x y i \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 < local.dij i j", "have not_0_u: \"nonzero u\""], ["proof (prove)\nusing this:\n  0 < local.dij i j\n\ngoal (1 subgoal):\n 1. nonzero u", "proof (unfold nonzero_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < local.dij i j \\<Longrightarrow> \\<exists>x\\<in>set u. x \\<noteq> 0", "have \"i < length (zeroes m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length (zeroes m)", "using ass"], ["proof (prove)\nusing this:\n  i < m\n\ngoal (1 subgoal):\n 1. i < length (zeroes m)", "by simp"], ["proof (state)\nthis:\n  i < length (zeroes m)\n\ngoal (1 subgoal):\n 1. 0 < local.dij i j \\<Longrightarrow> \\<exists>x\\<in>set u. x \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  i < length (zeroes m)", "show \"\\<exists>i\\<in>set u. i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  i < length (zeroes m)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>set u. i \\<noteq> 0", "by (metis (no_types) Pair_inject dij_gt0 set_update_memI sij_def u_v(1) neq0_conv)"], ["proof (state)\nthis:\n  \\<exists>i\\<in>set u. i \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nonzero u\n\ngoal (1 subgoal):\n 1. \\<not> x ! i \\<le> max_x y i \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  nonzero u", "have \"sij i j \\<in> Solutions\""], ["proof (prove)\nusing this:\n  nonzero u\n\ngoal (1 subgoal):\n 1. local.sij i j \\<in> local.Solutions", "by (metis (mono_tags, lifting) Special_Solutions_def j(1)\n            Special_Solutions_in_Solutions i_less_l ln mem_Collect_eq u_v(1))"], ["proof (state)\nthis:\n  local.sij i j \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. \\<not> x ! i \\<le> max_x y i \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  local.sij i j \\<in> local.Solutions", "show False"], ["proof (prove)\nusing this:\n  local.sij i j \\<in> local.Solutions\n\ngoal (1 subgoal):\n 1. False", "using assms cs u_v not_0_u Minimal_Solutions_def min"], ["proof (prove)\nusing this:\n  local.sij i j \\<in> local.Solutions\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  case local.sij i j of (u, v) \\<Rightarrow> u @ v <\\<^sub>v x @ y\n  local.sij i j = (u, v)\n  u @ v <\\<^sub>v x @ y\n  nonzero u\n  local.Minimal_Solutions =\n  {(x, y).\n   (x, y) \\<in> local.Solutions \\<and>\n   nonzero x \\<and>\n   \\<not> (\\<exists>(u, v)\\<in>local.Solutions.\n              nonzero u \\<and> u @ v <\\<^sub>v x @ y)}\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ! i \\<le> max_x y i\n\ngoal (1 subgoal):\n 1. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "case empty"], ["proof (state)\nthis:\n  Di i y = {}\n\ngoal (1 subgoal):\n 1. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "have \"\\<forall>x\\<in>set x. x \\<le> Max (set b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set x. x \\<le> Max (set b)", "using assms and max_coeff_bound and maxne0_le_Max"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  (?xs, ?ys) \\<in> local.Minimal_Solutions \\<Longrightarrow>\n  (\\<forall>x\\<in>set ?xs. x \\<le> maxne0 ?ys b) \\<and>\n  (\\<forall>y\\<in>set ?ys. y \\<le> maxne0 ?xs a)\n  maxne0 ?x ?a \\<le> Max (set ?a)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set x. x \\<le> Max (set b)", "using le_trans"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  (x, y) \\<notin> Special_Solutions\n  (?xs, ?ys) \\<in> local.Minimal_Solutions \\<Longrightarrow>\n  (\\<forall>x\\<in>set ?xs. x \\<le> maxne0 ?ys b) \\<and>\n  (\\<forall>y\\<in>set ?ys. y \\<le> maxne0 ?xs a)\n  maxne0 ?x ?a \\<le> Max (set ?a)\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set x. x \\<le> Max (set b)", "by blast"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set x. x \\<le> Max (set b)\n\ngoal (1 subgoal):\n 1. Di i y = {} \\<Longrightarrow> x ! i \\<le> max_x y i", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>set x. x \\<le> Max (set b)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set x. x \\<le> Max (set b)\n\ngoal (1 subgoal):\n 1. x ! i \\<le> max_x y i", "using empty i_less_l ln max_x_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set x. x \\<le> Max (set b)\n  Di i y = {}\n  i < m\n  n = length y \\<and> m = length x\n  max_x ?y ?i =\n  (if ?i < m \\<and> Di ?i ?y \\<noteq> {} then Min (Di ?i ?y)\n   else Max (set b))\n\ngoal (1 subgoal):\n 1. x ! i \\<le> max_x y i", "by auto"], ["proof (state)\nthis:\n  x ! i \\<le> max_x y i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ! i \\<le> max_x y i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Solution_imp_cond_D:\n  assumes \"(x, y) \\<in> Solutions\"\n  shows \"cond_D x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cond_D x y", "using assms and dotprod_le_take"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Solutions\n  \\<lbrakk>length ?a = length ?b; ?k \\<le> length ?a\\<rbrakk>\n  \\<Longrightarrow> take ?k ?a \\<bullet> take ?k ?b \\<le> ?a \\<bullet> ?b\n\ngoal (1 subgoal):\n 1. cond_D x y", "by (auto simp: cond_D_def in_Solutions_iff)"], ["", "lemma Solution_imp_subdprodl:\n  assumes \"(x, y) \\<in> Solutions\"\n  shows \"subdprodl x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subdprodl x y", "using assms and dotprod_le_take"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Solutions\n  \\<lbrakk>length ?a = length ?b; ?k \\<le> length ?a\\<rbrakk>\n  \\<Longrightarrow> take ?k ?a \\<bullet> take ?k ?b \\<le> ?a \\<bullet> ?b\n\ngoal (1 subgoal):\n 1. subdprodl x y", "by (auto simp: subdprodl_def in_Solutions_iff) metis"], ["", "theorem conds:\n  assumes min: \"(x, y) \\<in> Minimal_Solutions\"\n  shows cond_A: \"cond_A x y\"\n    and cond_B: \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x\"\n    and \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\"\n    and cond_D: \"cond_D x y\"\n    and subdprodr: \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\"\n    and subdprodl: \"subdprodl x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cond_A x y &&&\n     ((x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x) &&&\n     ((x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y)) &&&\n    cond_D x y &&&\n    ((x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y) &&&\n    subdprodl x y", "proof -"], ["proof (state)\ngoal (6 subgoals):\n 1. cond_A x y\n 2. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x\n 3. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\n 4. cond_D x y\n 5. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\n 6. subdprodl x y", "have sol: \"a \\<bullet> x = b \\<bullet> y\" and ln: \"m = length x \\<and> n = length y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<bullet> x = b \\<bullet> y &&& m = length x \\<and> n = length y", "using min"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. a \\<bullet> x = b \\<bullet> y &&& m = length x \\<and> n = length y", "by (auto simp: Minimal_Solutions_def in_Solutions_iff)"], ["proof (state)\nthis:\n  a \\<bullet> x = b \\<bullet> y\n  m = length x \\<and> n = length y\n\ngoal (6 subgoals):\n 1. cond_A x y\n 2. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x\n 3. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\n 4. cond_D x y\n 5. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\n 6. subdprodl x y", "then"], ["proof (chain)\npicking this:\n  a \\<bullet> x = b \\<bullet> y\n  m = length x \\<and> n = length y", "have \"\\<forall>i<m. x ! i \\<le> maxne0 y b\""], ["proof (prove)\nusing this:\n  a \\<bullet> x = b \\<bullet> y\n  m = length x \\<and> n = length y\n\ngoal (1 subgoal):\n 1. \\<forall>i<m. x ! i \\<le> maxne0 y b", "by (metis min max_coeff_bound_right nth_mem)"], ["proof (state)\nthis:\n  \\<forall>i<m. x ! i \\<le> maxne0 y b\n\ngoal (6 subgoals):\n 1. cond_A x y\n 2. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x\n 3. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\n 4. cond_D x y\n 5. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\n 6. subdprodl x y", "then"], ["proof (chain)\npicking this:\n  \\<forall>i<m. x ! i \\<le> maxne0 y b", "show \"cond_A x y\""], ["proof (prove)\nusing this:\n  \\<forall>i<m. x ! i \\<le> maxne0 y b\n\ngoal (1 subgoal):\n 1. cond_A x y", "using min and le_less_trans"], ["proof (prove)\nusing this:\n  \\<forall>i<m. x ! i \\<le> maxne0 y b\n  (x, y) \\<in> local.Minimal_Solutions\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. cond_A x y", "by (auto simp: cond_A_def max_coeff_bound)"], ["proof (state)\nthis:\n  cond_A x y\n\ngoal (5 subgoals):\n 1. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x\n 2. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\n 3. cond_D x y\n 4. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\n 5. subdprodl x y", "show \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x", "proof (unfold cond_B_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "assume non_spec: \"(x, y) \\<notin> Special_Solutions\" and k: \"k \\<le> m\""], ["proof (state)\nthis:\n  (x, y) \\<notin> Special_Solutions\n  k \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "from k"], ["proof (chain)\npicking this:\n  k \\<le> m", "have \"take k a \\<bullet> take k x \\<le> a \\<bullet> x\""], ["proof (prove)\nusing this:\n  k \\<le> m\n\ngoal (1 subgoal):\n 1. take k a \\<bullet> take k x \\<le> a \\<bullet> x", "using dotprod_le_take ln"], ["proof (prove)\nusing this:\n  k \\<le> m\n  \\<lbrakk>length ?a = length ?b; ?k \\<le> length ?a\\<rbrakk>\n  \\<Longrightarrow> take ?k ?a \\<bullet> take ?k ?b \\<le> ?a \\<bullet> ?b\n  m = length x \\<and> n = length y\n\ngoal (1 subgoal):\n 1. take k a \\<bullet> take k x \\<le> a \\<bullet> x", "by blast"], ["proof (state)\nthis:\n  take k a \\<bullet> take k x \\<le> a \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "also"], ["proof (state)\nthis:\n  take k a \\<bullet> take k x \\<le> a \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "have \"... = b \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<bullet> x = b \\<bullet> y", "by fact"], ["proof (state)\nthis:\n  a \\<bullet> x = b \\<bullet> y\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "also"], ["proof (state)\nthis:\n  a \\<bullet> x = b \\<bullet> y\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "have map_b_dot_p: \"... \\<le> b \\<bullet> map (max_y x) [0..<n]\" (is \"_ \\<le> _ b \\<bullet> ?nt\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> y \\<le> b \\<bullet> map (max_y x) [0..<n]", "using non_spec and less_eq_def and ln and boundr and min"], ["proof (prove)\nusing this:\n  (x, y) \\<notin> Special_Solutions\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n  m = length x \\<and> n = length y\n  \\<lbrakk>(?x, ?y) \\<in> local.Minimal_Solutions;\n   (?x, ?y) \\<notin> Special_Solutions\\<rbrakk>\n  \\<Longrightarrow> boundr ?x ?y\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. b \\<bullet> y \\<le> b \\<bullet> map (max_y x) [0..<n]", "by (fastforce intro!: dotprod_le_right simp: boundr_def)"], ["proof (state)\nthis:\n  b \\<bullet> y \\<le> b \\<bullet> map (max_y x) [0..<n]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "also"], ["proof (state)\nthis:\n  b \\<bullet> y \\<le> b \\<bullet> map (max_y x) [0..<n]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "have \"... \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]\" (is \"_ \\<le> _ \\<bullet> ?t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> map (max_y x) [0..<n]\n    \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<bullet> map (max_y x) [0..<n]\n    \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "have \"\\<forall>j<n. ?nt!j \\<le> ?t!j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j<n.\n       map (max_y x) [0..<n] ! j \\<le> map (max_y (take k x)) [0..<n] ! j", "using min and ln and max_y_le_take and k"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  m = length x \\<and> n = length y\n  length ?x \\<le> m \\<Longrightarrow>\n  max_y ?x ?j \\<le> max_y (take ?k ?x) ?j\n  k \\<le> m\n\ngoal (1 subgoal):\n 1. \\<forall>j<n.\n       map (max_y x) [0..<n] ! j \\<le> map (max_y (take k x)) [0..<n] ! j", "by auto"], ["proof (state)\nthis:\n  \\<forall>j<n.\n     map (max_y x) [0..<n] ! j \\<le> map (max_y (take k x)) [0..<n] ! j\n\ngoal (1 subgoal):\n 1. b \\<bullet> map (max_y x) [0..<n]\n    \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "then"], ["proof (chain)\npicking this:\n  \\<forall>j<n.\n     map (max_y x) [0..<n] ! j \\<le> map (max_y (take k x)) [0..<n] ! j", "have \"?nt \\<le>\\<^sub>v ?t\""], ["proof (prove)\nusing this:\n  \\<forall>j<n.\n     map (max_y x) [0..<n] ! j \\<le> map (max_y (take k x)) [0..<n] ! j\n\ngoal (1 subgoal):\n 1. map (max_y x) [0..<n] \\<le>\\<^sub>v map (max_y (take k x)) [0..<n]", "using less_eq_def"], ["proof (prove)\nusing this:\n  \\<forall>j<n.\n     map (max_y x) [0..<n] ! j \\<le> map (max_y (take k x)) [0..<n] ! j\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n\ngoal (1 subgoal):\n 1. map (max_y x) [0..<n] \\<le>\\<^sub>v map (max_y (take k x)) [0..<n]", "by auto"], ["proof (state)\nthis:\n  map (max_y x) [0..<n] \\<le>\\<^sub>v map (max_y (take k x)) [0..<n]\n\ngoal (1 subgoal):\n 1. b \\<bullet> map (max_y x) [0..<n]\n    \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "then"], ["proof (chain)\npicking this:\n  map (max_y x) [0..<n] \\<le>\\<^sub>v map (max_y (take k x)) [0..<n]", "show ?thesis"], ["proof (prove)\nusing this:\n  map (max_y x) [0..<n] \\<le>\\<^sub>v map (max_y (take k x)) [0..<n]\n\ngoal (1 subgoal):\n 1. b \\<bullet> map (max_y x) [0..<n]\n    \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "by (simp add:  dotprod_le_right)"], ["proof (state)\nthis:\n  b \\<bullet> map (max_y x) [0..<n]\n  \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<bullet> map (max_y x) [0..<n]\n  \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; k \\<le> m\\<rbrakk>\n       \\<Longrightarrow> take k a \\<bullet> take k x\n                         \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "finally"], ["proof (chain)\npicking this:\n  take k a \\<bullet> take k x\n  \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "show \"take k a \\<bullet> take k x \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]\""], ["proof (prove)\nusing this:\n  take k a \\<bullet> take k x\n  \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]\n\ngoal (1 subgoal):\n 1. take k a \\<bullet> take k x\n    \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]", "by (auto simp: cond_B_def)"], ["proof (state)\nthis:\n  take k a \\<bullet> take k x\n  \\<le> b \\<bullet> map (max_y (take k x)) [0..<n]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, y) \\<notin> Special_Solutions \\<Longrightarrow> cond_B x\n\ngoal (4 subgoals):\n 1. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\n 2. cond_D x y\n 3. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\n 4. subdprodl x y", "show \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y", "proof (unfold subdprodr_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "assume non_spec: \"(x, y) \\<notin> Special_Solutions\" and l: \"l \\<le> n\""], ["proof (state)\nthis:\n  (x, y) \\<notin> Special_Solutions\n  l \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "from l"], ["proof (chain)\npicking this:\n  l \\<le> n", "have \"take l b \\<bullet> take l y \\<le> b \\<bullet> y\""], ["proof (prove)\nusing this:\n  l \\<le> n\n\ngoal (1 subgoal):\n 1. take l b \\<bullet> take l y \\<le> b \\<bullet> y", "using dotprod_le_take ln"], ["proof (prove)\nusing this:\n  l \\<le> n\n  \\<lbrakk>length ?a = length ?b; ?k \\<le> length ?a\\<rbrakk>\n  \\<Longrightarrow> take ?k ?a \\<bullet> take ?k ?b \\<le> ?a \\<bullet> ?b\n  m = length x \\<and> n = length y\n\ngoal (1 subgoal):\n 1. take l b \\<bullet> take l y \\<le> b \\<bullet> y", "by blast"], ["proof (state)\nthis:\n  take l b \\<bullet> take l y \\<le> b \\<bullet> y\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "also"], ["proof (state)\nthis:\n  take l b \\<bullet> take l y \\<le> b \\<bullet> y\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "have \"... = a \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<bullet> y = a \\<bullet> x", "by (simp add: sol)"], ["proof (state)\nthis:\n  b \\<bullet> y = a \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "also"], ["proof (state)\nthis:\n  b \\<bullet> y = a \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "have map_b_dot_p: \"... \\<le> a \\<bullet> map (max_x y) [0..<m]\" (is \"_ \\<le> _ a \\<bullet> ?nt\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<bullet> x \\<le> a \\<bullet> map (max_x y) [0..<m]", "using non_spec and less_eq_def and ln and boundl and min"], ["proof (prove)\nusing this:\n  (x, y) \\<notin> Special_Solutions\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n  m = length x \\<and> n = length y\n  \\<lbrakk>(?x, ?y) \\<in> local.Minimal_Solutions;\n   (?x, ?y) \\<notin> Special_Solutions\\<rbrakk>\n  \\<Longrightarrow> boundl ?x ?y\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. a \\<bullet> x \\<le> a \\<bullet> map (max_x y) [0..<m]", "by (fastforce intro!: dotprod_le_right simp: boundl_def)"], ["proof (state)\nthis:\n  a \\<bullet> x \\<le> a \\<bullet> map (max_x y) [0..<m]\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "also"], ["proof (state)\nthis:\n  a \\<bullet> x \\<le> a \\<bullet> map (max_x y) [0..<m]\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "have \"... \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]\" (is \"_ \\<le> _ \\<bullet> ?t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<bullet> map (max_x y) [0..<m]\n    \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<bullet> map (max_x y) [0..<m]\n    \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "have \"\\<forall>i<m. ?nt ! i \\<le> ?t ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<m.\n       map (max_x y) [0..<m] ! i \\<le> map (max_x (take l y)) [0..<m] ! i", "using min and ln and max_x_le_take and l"], ["proof (prove)\nusing this:\n  (x, y) \\<in> local.Minimal_Solutions\n  m = length x \\<and> n = length y\n  length ?y \\<le> n \\<Longrightarrow>\n  max_x ?y ?i \\<le> max_x (take ?l ?y) ?i\n  l \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>i<m.\n       map (max_x y) [0..<m] ! i \\<le> map (max_x (take l y)) [0..<m] ! i", "by auto"], ["proof (state)\nthis:\n  \\<forall>i<m.\n     map (max_x y) [0..<m] ! i \\<le> map (max_x (take l y)) [0..<m] ! i\n\ngoal (1 subgoal):\n 1. a \\<bullet> map (max_x y) [0..<m]\n    \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "then"], ["proof (chain)\npicking this:\n  \\<forall>i<m.\n     map (max_x y) [0..<m] ! i \\<le> map (max_x (take l y)) [0..<m] ! i", "have \"?nt \\<le>\\<^sub>v ?t\""], ["proof (prove)\nusing this:\n  \\<forall>i<m.\n     map (max_x y) [0..<m] ! i \\<le> map (max_x (take l y)) [0..<m] ! i\n\ngoal (1 subgoal):\n 1. map (max_x y) [0..<m] \\<le>\\<^sub>v map (max_x (take l y)) [0..<m]", "using less_eq_def"], ["proof (prove)\nusing this:\n  \\<forall>i<m.\n     map (max_x y) [0..<m] ! i \\<le> map (max_x (take l y)) [0..<m] ! i\n  (?xs \\<le>\\<^sub>v ?ys) =\n  (length ?xs = length ?ys \\<and>\n   (\\<forall>i<length ?xs. ?xs ! i \\<le> ?ys ! i))\n\ngoal (1 subgoal):\n 1. map (max_x y) [0..<m] \\<le>\\<^sub>v map (max_x (take l y)) [0..<m]", "by auto"], ["proof (state)\nthis:\n  map (max_x y) [0..<m] \\<le>\\<^sub>v map (max_x (take l y)) [0..<m]\n\ngoal (1 subgoal):\n 1. a \\<bullet> map (max_x y) [0..<m]\n    \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "then"], ["proof (chain)\npicking this:\n  map (max_x y) [0..<m] \\<le>\\<^sub>v map (max_x (take l y)) [0..<m]", "show ?thesis"], ["proof (prove)\nusing this:\n  map (max_x y) [0..<m] \\<le>\\<^sub>v map (max_x (take l y)) [0..<m]\n\ngoal (1 subgoal):\n 1. a \\<bullet> map (max_x y) [0..<m]\n    \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "by (simp add:  dotprod_le_right)"], ["proof (state)\nthis:\n  a \\<bullet> map (max_x y) [0..<m]\n  \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<bullet> map (max_x y) [0..<m]\n  \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>(x, y) \\<notin> Special_Solutions; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> take l b \\<bullet> take l y\n                         \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "finally"], ["proof (chain)\npicking this:\n  take l b \\<bullet> take l y\n  \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "show \"take l b \\<bullet> take l y \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]\""], ["proof (prove)\nusing this:\n  take l b \\<bullet> take l y\n  \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]\n\ngoal (1 subgoal):\n 1. take l b \\<bullet> take l y\n    \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]", "by (auto simp: cond_B_def)"], ["proof (state)\nthis:\n  take l b \\<bullet> take l y\n  \\<le> a \\<bullet> map (max_x (take l y)) [0..<m]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, y) \\<notin> Special_Solutions \\<Longrightarrow> subdprodr y\n\ngoal (3 subgoals):\n 1. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\n 2. cond_D x y\n 3. subdprodl x y", "show \"(x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y", "using boundr [of x y] and min"], ["proof (prove)\nusing this:\n  \\<lbrakk>(x, y) \\<in> local.Minimal_Solutions;\n   (x, y) \\<notin> Special_Solutions\\<rbrakk>\n  \\<Longrightarrow> boundr x y\n  (x, y) \\<in> local.Minimal_Solutions\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y", "by blast"], ["proof (state)\nthis:\n  (x, y) \\<notin> Special_Solutions \\<Longrightarrow> boundr x y\n\ngoal (2 subgoals):\n 1. cond_D x y\n 2. subdprodl x y", "show \"cond_D x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cond_D x y", "using ln and dotprod_le_take and sol"], ["proof (prove)\nusing this:\n  m = length x \\<and> n = length y\n  \\<lbrakk>length ?a = length ?b; ?k \\<le> length ?a\\<rbrakk>\n  \\<Longrightarrow> take ?k ?a \\<bullet> take ?k ?b \\<le> ?a \\<bullet> ?b\n  a \\<bullet> x = b \\<bullet> y\n\ngoal (1 subgoal):\n 1. cond_D x y", "by (auto simp: cond_D_def)"], ["proof (state)\nthis:\n  cond_D x y\n\ngoal (1 subgoal):\n 1. subdprodl x y", "show \"subdprodl x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subdprodl x y", "using ln and dotprod_le_take and sol"], ["proof (prove)\nusing this:\n  m = length x \\<and> n = length y\n  \\<lbrakk>length ?a = length ?b; ?k \\<le> length ?a\\<rbrakk>\n  \\<Longrightarrow> take ?k ?a \\<bullet> take ?k ?b \\<le> ?a \\<bullet> ?b\n  a \\<bullet> x = b \\<bullet> y\n\ngoal (1 subgoal):\n 1. subdprodl x y", "by (force simp: subdprodl_def)"], ["proof (state)\nthis:\n  subdprodl x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma le_imp_Ej_subset:\n  assumes \"u \\<le>\\<^sub>v x\"\n  shows \"Ej j u \\<subseteq> Ej j x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ej j u \\<subseteq> Ej j x", "using assms and le_trans"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>v x\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n\ngoal (1 subgoal):\n 1. Ej j u \\<subseteq> Ej j x", "by (force simp: Ej_def less_eq_def dij_def eij_def)"], ["", "lemma le_imp_max_y_ge:\n  assumes \"u \\<le>\\<^sub>v x\"\n    and \"length x \\<le> m\"\n  shows \"max_y u j \\<ge> max_y x j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_y x j \\<le> max_y u j", "using assms and le_imp_Ej_subset and Min_Ej_le [of j, OF _ _ assms(2)]"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>v x\n  length x \\<le> m\n  ?u \\<le>\\<^sub>v ?x \\<Longrightarrow> Ej ?j ?u \\<subseteq> Ej ?j ?x\n  \\<lbrakk>j < n; ?e \\<in> Ej j x\\<rbrakk>\n  \\<Longrightarrow> Min (Ej j x) \\<le> Max (set a)\n\ngoal (1 subgoal):\n 1. max_y x j \\<le> max_y u j", "by (metis Min.subset_imp Min_in emptyE finite_Ej max_y_def order_refl subsetCE)"], ["", "lemma le_imp_Di_subset:\n  assumes \"v \\<le>\\<^sub>v y\"\n  shows \"Di i v \\<subseteq> Di i y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Di i v \\<subseteq> Di i y", "using assms and le_trans"], ["proof (prove)\nusing this:\n  v \\<le>\\<^sub>v y\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n\ngoal (1 subgoal):\n 1. Di i v \\<subseteq> Di i y", "by (force simp: Di_def less_eq_def dij_def eij_def)"], ["", "lemma le_imp_max_x_ge:\n  assumes \"v \\<le>\\<^sub>v y\"\n    and \"length y \\<le> n\"\n  shows \"max_x v i \\<ge> max_x y i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_x y i \\<le> max_x v i", "using assms and le_imp_Di_subset and Min_Di_le [of i, OF _ _ assms(2)]"], ["proof (prove)\nusing this:\n  v \\<le>\\<^sub>v y\n  length y \\<le> n\n  ?v \\<le>\\<^sub>v ?y \\<Longrightarrow> Di ?i ?v \\<subseteq> Di ?i ?y\n  \\<lbrakk>i < m; ?e \\<in> Di i y\\<rbrakk>\n  \\<Longrightarrow> Min (Di i y) \\<le> Max (set b)\n\ngoal (1 subgoal):\n 1. max_x y i \\<le> max_x v i", "by (metis Min.subset_imp Min_in emptyE finite_Di max_x_def order_refl subsetCE)"], ["", "end"], ["", "end"]]}