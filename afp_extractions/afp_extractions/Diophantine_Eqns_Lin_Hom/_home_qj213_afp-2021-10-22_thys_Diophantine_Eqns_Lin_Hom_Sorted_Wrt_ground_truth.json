{"file_name": "/home/qj213/afp-2021-10-22/thys/Diophantine_Eqns_Lin_Hom/Sorted_Wrt.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Diophantine_Eqns_Lin_Hom", "problem_names": ["lemma sorted_wrt_filter:\n  \"sorted_wrt P xs \\<Longrightarrow> sorted_wrt P (filter Q xs)\"", "lemma sorted_wrt_map_mono:\n  assumes \"sorted_wrt Q xs\"\n    and \"\\<And>x y. Q x y \\<Longrightarrow> P (f x) (f y)\"\n  shows \"sorted_wrt P (map f xs)\"", "lemma sorted_wrt_concat_map_map:\n  assumes \"sorted_wrt Q xs\"\n    and \"sorted_wrt Q ys\"\n    and \"\\<And>a x y. Q x y \\<Longrightarrow> P (f x a) (f y a)\"\n    and \"\\<And>x y u v. x \\<in> set xs \\<Longrightarrow> y \\<in> set xs \\<Longrightarrow> Q u v \\<Longrightarrow> P (f x u) (f y v)\"\n  shows \"sorted_wrt P [f x y . y \\<leftarrow> ys, x \\<leftarrow> xs]\"", "lemma sorted_wrt_concat_map:\n  assumes \"sorted_wrt P (map h xs)\"\n    and \"\\<And>x. x \\<in> set xs \\<Longrightarrow> sorted_wrt P (map h (f x))\"\n    and \"\\<And>x y u v. P (h x) (h y) \\<Longrightarrow> x \\<in> set xs \\<Longrightarrow> y \\<in> set xs \\<Longrightarrow> u \\<in> set (f x) \\<Longrightarrow> v \\<in> set (f y) \\<Longrightarrow> P (h u) (h v)\"\n  shows \"sorted_wrt P (concat (map (map h \\<circ> f) xs))\"", "lemma sorted_wrt_map_distr:\n  assumes \"sorted_wrt (\\<lambda>x y. P x y) (map f xs)\"\n  shows \"sorted_wrt (\\<lambda>x y. P (f x) (f y)) xs\"", "lemma sorted_wrt_tl:\n  \"xs \\<noteq> [] \\<Longrightarrow> sorted_wrt P xs \\<Longrightarrow> sorted_wrt P (tl xs)\""], "translations": [["", "lemma sorted_wrt_filter:\n  \"sorted_wrt P xs \\<Longrightarrow> sorted_wrt P (filter Q xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt P xs \\<Longrightarrow> sorted_wrt P (filter Q xs)", "by (induct xs) (auto)"], ["", "lemma sorted_wrt_map_mono:\n  assumes \"sorted_wrt Q xs\"\n    and \"\\<And>x y. Q x y \\<Longrightarrow> P (f x) (f y)\"\n  shows \"sorted_wrt P (map f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt P (map f xs)", "using assms"], ["proof (prove)\nusing this:\n  sorted_wrt Q xs\n  Q ?x ?y \\<Longrightarrow> P (f ?x) (f ?y)\n\ngoal (1 subgoal):\n 1. sorted_wrt P (map f xs)", "by (induct xs) (auto)"], ["", "lemma sorted_wrt_concat_map_map:\n  assumes \"sorted_wrt Q xs\"\n    and \"sorted_wrt Q ys\"\n    and \"\\<And>a x y. Q x y \\<Longrightarrow> P (f x a) (f y a)\"\n    and \"\\<And>x y u v. x \\<in> set xs \\<Longrightarrow> y \\<in> set xs \\<Longrightarrow> Q u v \\<Longrightarrow> P (f x u) (f y v)\"\n  shows \"sorted_wrt P [f x y . y \\<leftarrow> ys, x \\<leftarrow> xs]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt P (concat (map (\\<lambda>y. map (\\<lambda>x. f x y) xs) ys))", "using assms"], ["proof (prove)\nusing this:\n  sorted_wrt Q xs\n  sorted_wrt Q ys\n  Q ?x ?y \\<Longrightarrow> P (f ?x ?a) (f ?y ?a)\n  \\<lbrakk>?x \\<in> set xs; ?y \\<in> set xs; Q ?u ?v\\<rbrakk>\n  \\<Longrightarrow> P (f ?x ?u) (f ?y ?v)\n\ngoal (1 subgoal):\n 1. sorted_wrt P (concat (map (\\<lambda>y. map (\\<lambda>x. f x y) xs) ys))", "by (induct ys)\n    (auto simp: sorted_wrt_append intro: sorted_wrt_map_mono [of Q])"], ["", "lemma sorted_wrt_concat_map:\n  assumes \"sorted_wrt P (map h xs)\"\n    and \"\\<And>x. x \\<in> set xs \\<Longrightarrow> sorted_wrt P (map h (f x))\"\n    and \"\\<And>x y u v. P (h x) (h y) \\<Longrightarrow> x \\<in> set xs \\<Longrightarrow> y \\<in> set xs \\<Longrightarrow> u \\<in> set (f x) \\<Longrightarrow> v \\<in> set (f y) \\<Longrightarrow> P (h u) (h v)\"\n  shows \"sorted_wrt P (concat (map (map h \\<circ> f) xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt P (concat (map (map h \\<circ> f) xs))", "using assms"], ["proof (prove)\nusing this:\n  sorted_wrt P (map h xs)\n  ?x \\<in> set xs \\<Longrightarrow> sorted_wrt P (map h (f ?x))\n  \\<lbrakk>P (h ?x) (h ?y); ?x \\<in> set xs; ?y \\<in> set xs;\n   ?u \\<in> set (f ?x); ?v \\<in> set (f ?y)\\<rbrakk>\n  \\<Longrightarrow> P (h ?u) (h ?v)\n\ngoal (1 subgoal):\n 1. sorted_wrt P (concat (map (map h \\<circ> f) xs))", "by (induct xs) (auto simp: sorted_wrt_append)"], ["", "lemma sorted_wrt_map_distr:\n  assumes \"sorted_wrt (\\<lambda>x y. P x y) (map f xs)\"\n  shows \"sorted_wrt (\\<lambda>x y. P (f x) (f y)) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt (\\<lambda>x y. P (f x) (f y)) xs", "using assms"], ["proof (prove)\nusing this:\n  sorted_wrt P (map f xs)\n\ngoal (1 subgoal):\n 1. sorted_wrt (\\<lambda>x y. P (f x) (f y)) xs", "by (induct xs) (auto)"], ["", "lemma sorted_wrt_tl:\n  \"xs \\<noteq> [] \\<Longrightarrow> sorted_wrt P xs \\<Longrightarrow> sorted_wrt P (tl xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; sorted_wrt P xs\\<rbrakk>\n    \\<Longrightarrow> sorted_wrt P (tl xs)", "by (cases xs) (auto)"], ["", "end"]]}