{"file_name": "/home/qj213/afp-2021-10-22/thys/Diophantine_Eqns_Lin_Hom/Minimize_Wrt.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Diophantine_Eqns_Lin_Hom", "problem_names": ["lemma minimize_wrt_subset: \"set (minimize_wrt P xs) \\<subseteq> set xs\"", "lemmas minimize_wrtD = minimize_wrt_subset [THEN subsetD]", "lemma sorted_wrt_minimize_wrt:\n  \"sorted_wrt P (minimize_wrt P xs)\"", "lemma sorted_wrt_imp_sorted_wrt_minimize_wrt:\n  \"sorted_wrt Q xs \\<Longrightarrow> sorted_wrt Q (minimize_wrt P xs)\"", "lemma in_minimize_wrt_False:\n  assumes \"\\<And>x y. Q x y \\<Longrightarrow> \\<not> Q y x\"\n    and \"sorted_wrt Q xs\"\n    and \"x \\<in> set (minimize_wrt P xs)\"\n    and \"\\<not> P y x\" and \"Q y x\" and \"y \\<in> set xs\" and \"y \\<noteq> x\"\n  shows False", "lemma in_minimize_wrtI:\n  assumes \"x \\<in> set xs\"\n    and \"\\<forall>y\\<in>set xs. P y x\"\n  shows \"x \\<in> set (minimize_wrt P xs)\"", "lemma minimize_wrt_eq:\n  assumes \"distinct xs\" and \"\\<And>x y. x \\<in> set xs \\<Longrightarrow> y \\<in> set xs \\<Longrightarrow> P x y \\<longleftrightarrow> Q x y \\<or> x = y\"\n  shows \"minimize_wrt P xs = minimize_wrt Q xs\"", "lemma minimize_wrt_ni:\n  assumes \"x \\<in> set xs\"\n    and \"x \\<notin> set (minimize_wrt Q xs)\"\n  shows \"\\<exists>y \\<in> set xs. (\\<not> Q y x) \\<and> x \\<noteq> y\"", "lemma in_minimize_wrtD:\n  assumes \"\\<And>x y. Q x y \\<Longrightarrow> \\<not> Q y x\"\n    and \"sorted_wrt Q xs\"\n    and \"x \\<in> set (minimize_wrt P xs)\"\n    and \"\\<And>x y. \\<not> P x y \\<Longrightarrow> Q x y\"\n    and \"\\<And>x. P x x\"\n  shows \"x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x)\"", "lemma in_minimize_wrt_iff:\n  assumes \"\\<And>x y. Q x y \\<Longrightarrow> \\<not> Q y x\"\n    and \"sorted_wrt Q xs\"\n    and \"\\<And>x y. \\<not> P x y \\<Longrightarrow> Q x y\"\n    and \"\\<And>x. P x x\"\n  shows \"x \\<in> set (minimize_wrt P xs) \\<longleftrightarrow> x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x)\"", "lemma set_minimize_wrt:\n  assumes \"\\<And>x y. Q x y \\<Longrightarrow> \\<not> Q y x\"\n    and \"sorted_wrt Q xs\"\n    and \"\\<And>x y. \\<not> P x y \\<Longrightarrow> Q x y\"\n    and \"\\<And>x. P x x\"\n  shows \"set (minimize_wrt P xs) = {x \\<in> set xs. \\<forall>y\\<in>set xs. P y x}\"", "lemma minimize_wrt_append:\n  assumes \"\\<forall>x\\<in>set xs. \\<forall>y\\<in>set (xs @ ys). P y x\"\n  shows \"minimize_wrt P (xs @ ys) = xs @ filter (\\<lambda>y. \\<forall>x\\<in>set xs. P x y) (minimize_wrt P ys)\""], "translations": [["", "lemma minimize_wrt_subset: \"set (minimize_wrt P xs) \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (minimize_wrt P xs) \\<subseteq> set xs", "by (induct xs) auto"], ["", "lemmas minimize_wrtD = minimize_wrt_subset [THEN subsetD]"], ["", "lemma sorted_wrt_minimize_wrt:\n  \"sorted_wrt P (minimize_wrt P xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt P (minimize_wrt P xs)", "by (induct xs) (auto simp: sorted_wrt_filter)"], ["", "lemma sorted_wrt_imp_sorted_wrt_minimize_wrt:\n  \"sorted_wrt Q xs \\<Longrightarrow> sorted_wrt Q (minimize_wrt P xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt Q xs \\<Longrightarrow> sorted_wrt Q (minimize_wrt P xs)", "by (induct xs) (auto simp: sorted_wrt_filter dest: minimize_wrtD)"], ["", "lemma in_minimize_wrt_False:\n  assumes \"\\<And>x y. Q x y \\<Longrightarrow> \\<not> Q y x\"\n    and \"sorted_wrt Q xs\"\n    and \"x \\<in> set (minimize_wrt P xs)\"\n    and \"\\<not> P y x\" and \"Q y x\" and \"y \\<in> set xs\" and \"y \\<noteq> x\"\n  shows False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  Q ?x ?y \\<Longrightarrow> \\<not> Q ?y ?x\n  sorted_wrt Q xs\n  x \\<in> set (minimize_wrt P xs)\n  \\<not> P y x\n  Q y x\n  y \\<in> set xs\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. False", "by (induct xs) (auto dest: minimize_wrtD)"], ["", "lemma in_minimize_wrtI:\n  assumes \"x \\<in> set xs\"\n    and \"\\<forall>y\\<in>set xs. P y x\"\n  shows \"x \\<in> set (minimize_wrt P xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set (minimize_wrt P xs)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> set xs\n  \\<forall>y\\<in>set xs. P y x\n\ngoal (1 subgoal):\n 1. x \\<in> set (minimize_wrt P xs)", "by (induct xs) auto"], ["", "lemma minimize_wrt_eq:\n  assumes \"distinct xs\" and \"\\<And>x y. x \\<in> set xs \\<Longrightarrow> y \\<in> set xs \\<Longrightarrow> P x y \\<longleftrightarrow> Q x y \\<or> x = y\"\n  shows \"minimize_wrt P xs = minimize_wrt Q xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minimize_wrt P xs = minimize_wrt Q xs", "using assms"], ["proof (prove)\nusing this:\n  distinct xs\n  \\<lbrakk>?x \\<in> set xs; ?y \\<in> set xs\\<rbrakk>\n  \\<Longrightarrow> P ?x ?y = (Q ?x ?y \\<or> ?x = ?y)\n\ngoal (1 subgoal):\n 1. minimize_wrt P xs = minimize_wrt Q xs", "by (induct xs) (auto, metis contra_subsetD filter_cong minimize_wrt_subset)"], ["", "lemma minimize_wrt_ni:\n  assumes \"x \\<in> set xs\"\n    and \"x \\<notin> set (minimize_wrt Q xs)\"\n  shows \"\\<exists>y \\<in> set xs. (\\<not> Q y x) \\<and> x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>set xs. \\<not> Q y x \\<and> x \\<noteq> y", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> set xs\n  x \\<notin> set (minimize_wrt Q xs)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>set xs. \\<not> Q y x \\<and> x \\<noteq> y", "by (induct xs) (auto)"], ["", "lemma in_minimize_wrtD:\n  assumes \"\\<And>x y. Q x y \\<Longrightarrow> \\<not> Q y x\"\n    and \"sorted_wrt Q xs\"\n    and \"x \\<in> set (minimize_wrt P xs)\"\n    and \"\\<And>x y. \\<not> P x y \\<Longrightarrow> Q x y\"\n    and \"\\<And>x. P x x\"\n  shows \"x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x)", "using in_minimize_wrt_False [OF assms(1-3)] and minimize_wrt_subset [of P xs] and assms(3-5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y. Q x y \\<Longrightarrow> Q x y; \\<not> P ?y x; Q ?y x;\n   ?y \\<in> set xs; ?y \\<noteq> x\\<rbrakk>\n  \\<Longrightarrow> False\n  set (minimize_wrt P xs) \\<subseteq> set xs\n  x \\<in> set (minimize_wrt P xs)\n  \\<not> P ?x ?y \\<Longrightarrow> Q ?x ?y\n  P ?x ?x\n\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x)", "by blast"], ["", "lemma in_minimize_wrt_iff:\n  assumes \"\\<And>x y. Q x y \\<Longrightarrow> \\<not> Q y x\"\n    and \"sorted_wrt Q xs\"\n    and \"\\<And>x y. \\<not> P x y \\<Longrightarrow> Q x y\"\n    and \"\\<And>x. P x x\"\n  shows \"x \\<in> set (minimize_wrt P xs) \\<longleftrightarrow> x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (minimize_wrt P xs)) =\n    (x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x))", "using assms and in_minimize_wrtD [of Q xs x P, OF assms(1,2) _ assms(3,4)]"], ["proof (prove)\nusing this:\n  Q ?x ?y \\<Longrightarrow> \\<not> Q ?y ?x\n  sorted_wrt Q xs\n  \\<not> P ?x ?y \\<Longrightarrow> Q ?x ?y\n  P ?x ?x\n  \\<lbrakk>\\<And>x y. Q x y \\<Longrightarrow> Q x y;\n   x \\<in> set (minimize_wrt P xs);\n   \\<And>x y. \\<not> P x y \\<Longrightarrow> \\<not> P x y\\<rbrakk>\n  \\<Longrightarrow> x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x)\n\ngoal (1 subgoal):\n 1. (x \\<in> set (minimize_wrt P xs)) =\n    (x \\<in> set xs \\<and> (\\<forall>y\\<in>set xs. P y x))", "by (blast intro: in_minimize_wrtI)"], ["", "lemma set_minimize_wrt:\n  assumes \"\\<And>x y. Q x y \\<Longrightarrow> \\<not> Q y x\"\n    and \"sorted_wrt Q xs\"\n    and \"\\<And>x y. \\<not> P x y \\<Longrightarrow> Q x y\"\n    and \"\\<And>x. P x x\"\n  shows \"set (minimize_wrt P xs) = {x \\<in> set xs. \\<forall>y\\<in>set xs. P y x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (minimize_wrt P xs) = {x \\<in> set xs. \\<forall>y\\<in>set xs. P y x}", "by (auto simp: in_minimize_wrt_iff [OF assms])"], ["", "lemma minimize_wrt_append:\n  assumes \"\\<forall>x\\<in>set xs. \\<forall>y\\<in>set (xs @ ys). P y x\"\n  shows \"minimize_wrt P (xs @ ys) = xs @ filter (\\<lambda>y. \\<forall>x\\<in>set xs. P x y) (minimize_wrt P ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minimize_wrt P (xs @ ys) =\n    xs @\n    filter (\\<lambda>y. \\<forall>x\\<in>set xs. P x y) (minimize_wrt P ys)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set xs. \\<forall>y\\<in>set (xs @ ys). P y x\n\ngoal (1 subgoal):\n 1. minimize_wrt P (xs @ ys) =\n    xs @\n    filter (\\<lambda>y. \\<forall>x\\<in>set xs. P x y) (minimize_wrt P ys)", "by (induct xs) (auto intro: filter_cong)"], ["", "end"]]}