{"file_name": "/home/qj213/afp-2021-10-22/thys/KBPs/Kripke.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/KBPs", "problem_names": ["lemma kripkeI[intro]:\n  assumes \"\\<And>a. relations M a \\<subseteq> worlds M \\<times> worlds M\"\n  shows \"kripke M\"", "lemma kripke_rels_worlds[dest]:\n  assumes \"(w, w') \\<in> relations M a\"\n  assumes M: \"kripke M\"\n  shows \"w \\<in> worlds M \\<and> w' \\<in> worlds M\"", "lemma kripke_tc_rels_worlds[dest]:\n  assumes R: \"(w, w') \\<in> (\\<Union>a \\<in> as. relations M a)\\<^sup>+\"\n  assumes M: \"kripke M\"\n  shows \"w \\<in> worlds M \\<and> w' \\<in> worlds M\"", "lemma kripke_rels_trc_worlds:\n  assumes R: \"(w, w') \\<in> (\\<Union>a. relations M a)\\<^sup>*\"\n  assumes w: \"w \\<in> worlds M\"\n  assumes M: \"kripke M\"\n  assumes W: \"W = worlds M\"\n  shows \"w' \\<in> W\"", "lemma mkKripke_kripke[intro, simp]:\n  \"kripke (mkKripke ws rels val)\"", "lemma mkKripke_simps[simp]:\n  \"worlds (mkKripke ws rels val) = ws\"\n  \"relations (mkKripke ws rels val) = (\\<lambda>a. rels a \\<inter> ws \\<times> ws)\"\n  \"valuation (mkKripke ws rels val) = val\"", "lemma S5nI[intro]: \"\\<lbrakk> \\<And>a. equiv (worlds M) (relations M a) \\<rbrakk> \\<Longrightarrow> S5n M\"", "lemma S5nD[dest]: \"S5n M \\<Longrightarrow> equiv (worlds M) (relations M a)\"", "lemma S5n_kripke[intro]: \"S5n M \\<Longrightarrow> kripke M\"", "lemma S5n_rels_closed:\n  \"S5n M \\<Longrightarrow> relations M a `` (relations M a `` X) \\<subseteq> relations M a `` X\"", "lemma S5n_rels_eq:\n  assumes S5n: \"S5n M\"\n      and ww': \"(w, w') \\<in> relations M a\"\n  shows \"relations M a `` {w} = relations M a `` {w'}\"", "lemma tc_equiv:\n  assumes E: \"\\<And>i. i \\<in> is \\<Longrightarrow> equiv A (f i)\"\n      and is_nempty: \"is \\<noteq> {}\"\n  shows \"equiv A ((\\<Union>i\\<in>is. f i)\\<^sup>+)\"", "lemma S5n_tc_rels_eq:\n  assumes S5n: \"S5n M\"\n      and ww': \"(w, w') \\<in> (\\<Union>a \\<in> as. relations M a)\\<^sup>+\"\n  shows \"(\\<Union>a \\<in> as. relations M a)\\<^sup>+ `` {w} = (\\<Union>a \\<in> as. relations M a)\\<^sup>+ `` {w'}\"", "lemma S5n_knowledge_generalisation:\n  \"\\<lbrakk> S5n M; \\<forall>w \\<in> worlds M. M, w \\<Turnstile> \\<phi> \\<rbrakk> \\<Longrightarrow> M, w \\<Turnstile> Kknows a \\<phi>\"", "lemma S5n_knowledge:\n  \"\\<lbrakk> S5n M; w \\<in> worlds M; M, w \\<Turnstile> Kknows a \\<phi> \\<rbrakk> \\<Longrightarrow> M, w \\<Turnstile> \\<phi>\"", "lemma S5n_positive_introspection:\n  \"\\<lbrakk> S5n M; w \\<in> worlds M; M, w \\<Turnstile> Kknows a \\<phi> \\<rbrakk> \\<Longrightarrow> M, w \\<Turnstile> Kknows a (Kknows a \\<phi>)\"", "lemma S5n_negative_introspection:\n  \"\\<lbrakk> S5n M; w \\<in> worlds M; M, w \\<Turnstile> Knot (Kknows a \\<phi>) \\<rbrakk>\n     \\<Longrightarrow> M, w \\<Turnstile> Kknows a (Knot (Kknows a \\<phi>))\"", "lemma S5n_common_knowledge_fixed_point:\n  assumes S5n: \"S5n M\"\n  assumes w: \"w \\<in> worlds M\"\n  assumes a: \"a \\<in> set as\"\n  shows \"M, w \\<Turnstile> Kcknows as \\<phi>\n     \\<longleftrightarrow> M, w \\<Turnstile> Kand (Kknows a \\<phi>) (Kknows a (Kcknows as \\<phi>))\"", "lemma S5n_common_knowledge_induct:\n  assumes S5n: \"S5n M\"\n  assumes w: \"w \\<in> worlds M\"\n  assumes E: \"\\<forall>a \\<in> set as. \\<forall>w \\<in> worlds M.\n                 M, w \\<Turnstile> \\<phi> \\<longrightarrow> M, w \\<Turnstile> \\<^bold>K\\<^sub>a (Kand \\<phi> \\<psi>)\"\n  assumes p: \"M, w \\<Turnstile> \\<phi>\"\n  shows \"M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\"", "lemma S5n_common_knowledge_fixed_point_simpler:\n  assumes S5n: \"S5n M\"\n      and w: \"w \\<in> worlds M\"\n      and a: \"a \\<in> set as\"\n  shows \"M, w \\<Turnstile> Kcknows as \\<phi> \\<longleftrightarrow> M, w \\<Turnstile> Kknows a (Kcknows as \\<phi>)\"", "lemma gen_model_worldsD[dest]:\n  \"w' \\<in> worlds (gen_model M w) \\<Longrightarrow> w' \\<in> worlds M\"", "lemma gen_model_world_refl:\n  \"w \\<in> worlds M \\<Longrightarrow> w \\<in> worlds (gen_model M w)\"", "lemma gen_model_rels_worlds[dest]:\n  assumes \"(w', w'') \\<in> relations (gen_model M w) a\"\n  shows \"w' \\<in> worlds (gen_model M w) \\<and> w'' \\<in> worlds (gen_model M w)\"", "lemma gen_model_rels_tc_worlds[dest]:\n  assumes \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations (gen_model M w) a)\\<^sup>+\"\n  shows \"w'' \\<in> worlds (gen_model M w)\"", "lemma gen_model_rels[dest]:\n  assumes \"(w', w'') \\<in> relations (gen_model M w) a\"\n  shows \"(w', w'') \\<in> relations M a\"", "lemma gen_model_worlds:\n  \"worlds (gen_model M w) = worlds M \\<inter> (\\<Union>a. relations M a)\\<^sup>* `` {w}\"", "lemma gen_model_tc_rels[dest]:\n  assumes M: \"kripke M\"\n      and R: \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations (gen_model M w) a)\\<^sup>+\"\n  shows \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations M a)\\<^sup>+\"", "lemma gen_model_rels_rev[dest]:\n  assumes M: \"kripke M\"\n      and \"w' \\<in> worlds (gen_model M w)\"\n      and \"(w', w'') \\<in> relations M a\"\n  shows \"(w', w'') \\<in> relations (gen_model M w) a\"", "lemma gen_model_tc_rels_rev[dest]:\n  assumes M: \"kripke M\"\n      and R: \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations M a)\\<^sup>+\"\n      and W: \"w' \\<in> worlds (gen_model M w)\"\n  shows \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations (gen_model M w) a)\\<^sup>+\"", "lemma gen_model_kripke:\n  shows \"kripke (gen_model M w)\"", "lemma gen_model_semantic_equivalence:\n  assumes M: \"kripke M\"\n  assumes w': \"w' \\<in> worlds (gen_model M w)\"\n  shows \"M, w' \\<Turnstile> \\<phi> \\<longleftrightarrow> (gen_model M w), w' \\<Turnstile> \\<phi>\"", "lemma gen_model_S5n:\n  assumes S5n: \"S5n M\"\n  shows \"S5n (gen_model M w)\"", "lemma gen_model_eq:\n  assumes M: \"kripke M\"\n      and M': \"kripke M'\"\n      and \"gen_model M w = gen_model M' w\"\n      and \"w' \\<in> worlds (gen_model M' w)\"\n  shows \"M, w' \\<Turnstile> \\<phi> \\<longleftrightarrow> M', w' \\<Turnstile> \\<phi>\"", "lemma gen_model_subset_aux:\n  assumes R: \"\\<And>a. relations M a \\<inter> T \\<times> T = relations M' a \\<inter> T \\<times> T\"\n      and T: \"(\\<Union>a. relations M a)\\<^sup>* `` {t} \\<subseteq> T\"\n  shows \"(\\<Union>x. relations M x)\\<^sup>* `` {t} \\<subseteq> (\\<Union>x. relations M' x)\\<^sup>* `` {t}\"", "lemma gen_model_subset:\n  assumes M: \"kripke M\"\n      and M': \"kripke M'\"\n      and R: \"\\<And>a. relations M a \\<inter> T \\<times> T = relations M' a \\<inter> T \\<times> T\"\n      and tMT: \"(\\<Union>a. relations M a)\\<^sup>* `` {t} \\<subseteq> T\"\n      and tM'T: \"(\\<Union>a. relations M' a)\\<^sup>* `` {t} \\<subseteq> T\"\n      and tM: \"t \\<in> worlds M\"\n      and tM': \"t \\<in> worlds M'\"\n      and V: \"valuation M = valuation M'\"\n  shows \"gen_model M t = gen_model M' t\"", "lemma sim_rangeI[intro]:\n  \"\\<lbrakk> worlds M' = f ` worlds M; (\\<And>a. relations M' a \\<subseteq> worlds M' \\<times> worlds M') \\<rbrakk>\n     \\<Longrightarrow> sim_range M M' f\"", "lemma sim_valI[intro]:\n  \"(\\<And>u. u \\<in> worlds M \\<Longrightarrow> valuation M u = valuation M' (f u))\n   \\<Longrightarrow> sim_val M M' f\"", "lemma sim_fI[intro]:\n  \"(\\<And>a u v. (u, v) \\<in> relations M a \\<Longrightarrow> (f u, f v) \\<in> relations M' a)\n   \\<Longrightarrow> sim_f M M' f\"", "lemma sim_fD:\n  \"\\<lbrakk> (u, v) \\<in> relations M a; sim M M' f \\<rbrakk>\n     \\<Longrightarrow> (f u, f v) \\<in> relations M' a\"", "lemma sim_rI[intro]:\n  \"(\\<And>a u v'.\n    \\<lbrakk>u \\<in> worlds M; (f u, v') \\<in> relations M' a\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v'))\n  \\<Longrightarrow> sim_r M M' f\"", "lemma sim_rD:\n  \"\\<lbrakk> (f u, v') \\<in> relations M' a; sim M M' f; u \\<in> worlds M \\<rbrakk>\n     \\<Longrightarrow> (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v')\"", "lemma simI[intro]:\n  \"\\<lbrakk> sim_range M M' f; sim_val M M' f; sim_f M M' f; sim_r M M' f \\<rbrakk>\n     \\<Longrightarrow> sim M M' f\"", "lemma sim_id: \"kripke M \\<Longrightarrow> sim M M id\"", "lemma sim_f_tc:\n  assumes s: \"sim M M' f\"\n  assumes uv': \"(u, v) \\<in> (\\<Union>a\\<in>as. relations M a)\\<^sup>+\"\n  shows \"(f u, f v) \\<in> (\\<Union>a\\<in>as. relations M' a)\\<^sup>+\"", "lemma sim_r_tc:\n  assumes M: \"kripke M\"\n  assumes s: \"sim M M' f\"\n  assumes u: \"u \\<in> worlds M\"\n  assumes fuv': \"(f u, v') \\<in> (\\<Union>a\\<in>as. relations M' a)\\<^sup>+\"\n  obtains v where \"f v = v'\" and \"(u, v) \\<in> (\\<Union>a\\<in>as. relations M a)\\<^sup>+\"", "lemma sim_f_trc:\n  assumes uv': \"(u, v) \\<in> (\\<Union>a. relations M a)\\<^sup>*\"\n      and s: \"sim M M' f\"\n  shows \"(f u, f v) \\<in> (\\<Union>a. relations M' a)\\<^sup>*\"", "lemma sim_r_trc:\n  assumes s: \"sim M M' f\"\n      and fuv': \"(f u, v') \\<in> (\\<Union>a. relations M' a)\\<^sup>*\"\n      and M: \"kripke M\"\n      and u: \"u \\<in> worlds M\"\n  obtains v\n    where \"f v = v'\"\n      and \"(u, v) \\<in> (\\<Union>a. relations M a)\\<^sup>*\"", "lemma sim_trc_commute:\n  assumes M: \"kripke M\"\n      and s: \"sim M M' f\"\n      and t: \"t \\<in> worlds M\"\n  shows \"f ` ((\\<Union>a. relations M a)\\<^sup>* `` {t})\n       = (\\<Union>a. relations M' a)\\<^sup>* `` {f t}\" (is \"?lhs = ?rhs\")", "lemma sim_kripke: \"\\<lbrakk> sim M M' f; kripke M \\<rbrakk> \\<Longrightarrow> kripke M'\"", "lemma sim_S5n:\n  assumes S5n: \"S5n M\"\n      and sim: \"sim M M' f\"\n  shows \"S5n M'\"", "lemma sim_semantic_equivalence:\n  assumes M: \"kripke M\"\n  assumes s: \"sim M M' f\"\n  assumes u: \"u \\<in> worlds M\"\n  shows \"M, u \\<Turnstile> \\<phi> \\<longleftrightarrow> M', f u \\<Turnstile> \\<phi>\""], "translations": [["", "lemma kripkeI[intro]:\n  assumes \"\\<And>a. relations M a \\<subseteq> worlds M \\<times> worlds M\"\n  shows \"kripke M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kripke M", "using assms"], ["proof (prove)\nusing this:\n  relations M ?a \\<subseteq> worlds M \\<times> worlds M\n\ngoal (1 subgoal):\n 1. kripke M", "unfolding kripke_def"], ["proof (prove)\nusing this:\n  relations M ?a \\<subseteq> worlds M \\<times> worlds M\n\ngoal (1 subgoal):\n 1. \\<forall>a. relations M a \\<subseteq> worlds M \\<times> worlds M", "by simp"], ["", "lemma kripke_rels_worlds[dest]:\n  assumes \"(w, w') \\<in> relations M a\"\n  assumes M: \"kripke M\"\n  shows \"w \\<in> worlds M \\<and> w' \\<in> worlds M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> worlds M \\<and> w' \\<in> worlds M", "using assms"], ["proof (prove)\nusing this:\n  (w, w') \\<in> relations M a\n  kripke M\n\ngoal (1 subgoal):\n 1. w \\<in> worlds M \\<and> w' \\<in> worlds M", "unfolding kripke_def"], ["proof (prove)\nusing this:\n  (w, w') \\<in> relations M a\n  \\<forall>a. relations M a \\<subseteq> worlds M \\<times> worlds M\n\ngoal (1 subgoal):\n 1. w \\<in> worlds M \\<and> w' \\<in> worlds M", "by auto"], ["", "lemma kripke_tc_rels_worlds[dest]:\n  assumes R: \"(w, w') \\<in> (\\<Union>a \\<in> as. relations M a)\\<^sup>+\"\n  assumes M: \"kripke M\"\n  shows \"w \\<in> worlds M \\<and> w' \\<in> worlds M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> worlds M \\<and> w' \\<in> worlds M", "using assms"], ["proof (prove)\nusing this:\n  (w, w') \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  kripke M\n\ngoal (1 subgoal):\n 1. w \\<in> worlds M \\<and> w' \\<in> worlds M", "by (induct rule: trancl_induct) auto"], ["", "lemma kripke_rels_trc_worlds:\n  assumes R: \"(w, w') \\<in> (\\<Union>a. relations M a)\\<^sup>*\"\n  assumes w: \"w \\<in> worlds M\"\n  assumes M: \"kripke M\"\n  assumes W: \"W = worlds M\"\n  shows \"w' \\<in> W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w' \\<in> W", "using assms"], ["proof (prove)\nusing this:\n  (w, w') \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  w \\<in> worlds M\n  kripke M\n  W = worlds M\n\ngoal (1 subgoal):\n 1. w' \\<in> W", "by (induct rule: rtrancl_induct) auto"], ["", "lemma mkKripke_kripke[intro, simp]:\n  \"kripke (mkKripke ws rels val)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kripke (mkKripke ws rels val)", "unfolding kripke_def mkKripke_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a.\n       relations\n        \\<lparr>worlds = ws, relations = \\<lambda>a. Restr (rels a) ws,\n           valuation = val\\<rparr>\n        a\n       \\<subseteq> worlds\n                    \\<lparr>worlds = ws,\n                       relations = \\<lambda>a. Restr (rels a) ws,\n                       valuation = val\\<rparr> \\<times>\n                   worlds\n                    \\<lparr>worlds = ws,\n                       relations = \\<lambda>a. Restr (rels a) ws,\n                       valuation = val\\<rparr>", "by clarsimp"], ["", "lemma mkKripke_simps[simp]:\n  \"worlds (mkKripke ws rels val) = ws\"\n  \"relations (mkKripke ws rels val) = (\\<lambda>a. rels a \\<inter> ws \\<times> ws)\"\n  \"valuation (mkKripke ws rels val) = val\""], ["proof (prove)\ngoal (1 subgoal):\n 1. worlds (mkKripke ws rels val) = ws &&&\n    relations (mkKripke ws rels val) = (\\<lambda>a. Restr (rels a) ws) &&&\n    valuation (mkKripke ws rels val) = val", "unfolding mkKripke_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. worlds\n     \\<lparr>worlds = ws, relations = \\<lambda>a. Restr (rels a) ws,\n        valuation = val\\<rparr> =\n    ws &&&\n    relations\n     \\<lparr>worlds = ws, relations = \\<lambda>a. Restr (rels a) ws,\n        valuation = val\\<rparr> =\n    (\\<lambda>a. Restr (rels a) ws) &&&\n    valuation\n     \\<lparr>worlds = ws, relations = \\<lambda>a. Restr (rels a) ws,\n        valuation = val\\<rparr> =\n    val", "by simp_all"], ["", "(*>*)"], ["", "text \\<open>\n\nThe standard semantics for knowledge is given by taking the\naccessibility relations to be equivalence relations, yielding the\nS$5_n$ structures, so-called due to their axiomatisation.\n\n\\<close>"], ["", "definition S5n :: \"('a, 'p, 'w) KripkeStructure \\<Rightarrow> bool\" where\n  \"S5n M \\<equiv> \\<forall>a. equiv (worlds M) (relations M a)\""], ["", "(*<*)"], ["", "lemma S5nI[intro]: \"\\<lbrakk> \\<And>a. equiv (worlds M) (relations M a) \\<rbrakk> \\<Longrightarrow> S5n M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. equiv (worlds M) (relations M a)) \\<Longrightarrow> S5n M", "by (simp add: S5n_def)"], ["", "lemma S5nD[dest]: \"S5n M \\<Longrightarrow> equiv (worlds M) (relations M a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S5n M \\<Longrightarrow> equiv (worlds M) (relations M a)", "by (simp add: S5n_def)"], ["", "lemma S5n_kripke[intro]: \"S5n M \\<Longrightarrow> kripke M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S5n M \\<Longrightarrow> kripke M", "by (rule kripkeI, erule equivE[OF S5nD], auto simp add: refl_on_def)"], ["", "lemma S5n_rels_closed:\n  \"S5n M \\<Longrightarrow> relations M a `` (relations M a `` X) \\<subseteq> relations M a `` X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S5n M \\<Longrightarrow>\n    relations M a `` relations M a `` X \\<subseteq> relations M a `` X", "apply (drule S5nD[where a=a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv (worlds M) (relations M a) \\<Longrightarrow>\n    relations M a `` relations M a `` X \\<subseteq> relations M a `` X", "apply (erule equivE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>refl_on (worlds M) (relations M a); sym (relations M a);\n     trans (relations M a)\\<rbrakk>\n    \\<Longrightarrow> relations M a `` relations M a `` X\n                      \\<subseteq> relations M a `` X", "apply (auto dest: refl_onD symD transD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>\n\nIntuitively an agent considers two worlds to be equivalent if it\ncannot distinguish between them.\n\n\\<close>"], ["", "subsection\\<open>Satisfaction\\<close>"], ["", "text\\<open>\n\nA formula $\\phi$ is satisfied at a world $w$ in Kripke structure $M$\nin the following way:\\<close>"], ["", "fun models :: \"('a, 'p, 'w) KripkeStructure \\<Rightarrow> 'w \\<Rightarrow> ('a, 'p) Kform\n           \\<Rightarrow> bool\" (\"(_, _ \\<Turnstile> _)\" [80,0,80] 80) where\n  \"M, w \\<Turnstile> (Kprop p) = valuation M w p\"\n| \"M, w \\<Turnstile> (Knot \\<phi>) = (\\<not> M, w \\<Turnstile> \\<phi>)\"\n| \"M, w \\<Turnstile> (Kand \\<phi> \\<psi>) = (M, w \\<Turnstile> \\<phi> \\<and> M, w \\<Turnstile> \\<psi>)\"\n| \"M, w \\<Turnstile> (\\<^bold>K\\<^sub>a \\<phi>) = (\\<forall>w' \\<in> relations M a `` {w}. M, w' \\<Turnstile> \\<phi>)\"\n| \"M, w \\<Turnstile> (\\<^bold>C\\<^bsub>as\\<^esub> \\<phi>) = (\\<forall>w' \\<in> (\\<Union>a \\<in> set as. relations M a)\\<^sup>+ `` {w}. M, w' \\<Turnstile> \\<phi>)\""], ["", "text\\<open>\n\nThe first three clauses are standard.\n\nThe clause for @{term \"Kknows a \\<phi>\"} expresses the idea that an agent\nknows @{term \"\\<phi>\"} at world @{term \"w\"} in structure @{term \"M\"} iff\n@{term \"\\<phi>\"} is true at all worlds it considers possible.\n\nThe clause for @{term \"Kcknows as \\<phi>\"} captures what it means for the\nset of agents @{term \"as\"} to commonly know @{term \"\\<phi>\"}; roughly,\neveryone knows @{term \"\\<phi>\"} and knows that everyone knows it, and so\nforth. Note that the transitive closure and the reflexive-transitive\nclosure generate the same relation due to the reflexivity of the\nagents' accessibility relations; we use the former as it has a more\npleasant induction principle.\n\n\\<close>"], ["", "(*<*)"], ["", "lemma S5n_rels_eq:\n  assumes S5n: \"S5n M\"\n      and ww': \"(w, w') \\<in> relations M a\"\n  shows \"relations M a `` {w} = relations M a `` {w'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relations M a `` {w} = relations M a `` {w'}", "using S5nD[OF S5n] ww'"], ["proof (prove)\nusing this:\n  equiv (worlds M) (relations M ?a)\n  (w, w') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. relations M a `` {w} = relations M a `` {w'}", "by - (rule equiv_class_eq, blast+)"], ["", "text\\<open>\n\nA key property of the semantics for common knowledge is that it forms\nan equivalence class itself.\n\n\\<close>"], ["", "lemma tc_equiv:\n  assumes E: \"\\<And>i. i \\<in> is \\<Longrightarrow> equiv A (f i)\"\n      and is_nempty: \"is \\<noteq> {}\"\n  shows \"equiv A ((\\<Union>i\\<in>is. f i)\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv A ((\\<Union> (f ` is))\\<^sup>+)", "proof(rule equivI)"], ["proof (state)\ngoal (3 subgoals):\n 1. refl_on A ((\\<Union> (f ` is))\\<^sup>+)\n 2. sym ((\\<Union> (f ` is))\\<^sup>+)\n 3. trans ((\\<Union> (f ` is))\\<^sup>+)", "from E is_nempty"], ["proof (chain)\npicking this:\n  ?i \\<in> is \\<Longrightarrow> equiv A (f ?i)\n  is \\<noteq> {}", "show \"refl_on A ((\\<Union>i\\<in>is. f i)\\<^sup>+)\""], ["proof (prove)\nusing this:\n  ?i \\<in> is \\<Longrightarrow> equiv A (f ?i)\n  is \\<noteq> {}\n\ngoal (1 subgoal):\n 1. refl_on A ((\\<Union> (f ` is))\\<^sup>+)", "unfolding equiv_def"], ["proof (prove)\nusing this:\n  ?i \\<in> is \\<Longrightarrow>\n  refl_on A (f ?i) \\<and> sym (f ?i) \\<and> trans (f ?i)\n  is \\<noteq> {}\n\ngoal (1 subgoal):\n 1. refl_on A ((\\<Union> (f ` is))\\<^sup>+)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>i.\n                i \\<in> is \\<Longrightarrow>\n                refl_on A (f i) \\<and> sym (f i) \\<and> trans (f i);\n     is \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> refl_on A ((\\<Union> (f ` is))\\<^sup>+)", "apply (rule refl_onI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>i.\n                i \\<in> is \\<Longrightarrow>\n                refl_on A (f i) \\<and> sym (f i) \\<and> trans (f i);\n     is \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<Union> (f ` is))\\<^sup>+ \\<subseteq> A \\<times> A\n 2. \\<And>x.\n       \\<lbrakk>\\<And>i.\n                   i \\<in> is \\<Longrightarrow>\n                   refl_on A (f i) \\<and> sym (f i) \\<and> trans (f i);\n        is \\<noteq> {}; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (x, x) \\<in> (\\<Union> (f ` is))\\<^sup>+", "apply (rule trancl_Int_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>i.\n                i \\<in> is \\<Longrightarrow>\n                refl_on A (f i) \\<and> sym (f i) \\<and> trans (f i);\n     is \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (f ` is) \\<subseteq> A \\<times> A\n 2. \\<lbrakk>\\<And>i.\n                i \\<in> is \\<Longrightarrow>\n                refl_on A (f i) \\<and> sym (f i) \\<and> trans (f i);\n     is \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Restr ((\\<Union> (f ` is))\\<^sup>+) A O\n                      \\<Union> (f ` is)\n                      \\<subseteq> A \\<times> A\n 3. \\<And>x.\n       \\<lbrakk>\\<And>i.\n                   i \\<in> is \\<Longrightarrow>\n                   refl_on A (f i) \\<and> sym (f i) \\<and> trans (f i);\n        is \\<noteq> {}; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (x, x) \\<in> (\\<Union> (f ` is))\\<^sup>+", "apply (auto dest: refl_onD refl_onD1 refl_onD2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  refl_on A ((\\<Union> (f ` is))\\<^sup>+)\n\ngoal (2 subgoals):\n 1. sym ((\\<Union> (f ` is))\\<^sup>+)\n 2. trans ((\\<Union> (f ` is))\\<^sup>+)", "from E"], ["proof (chain)\npicking this:\n  ?i \\<in> is \\<Longrightarrow> equiv A (f ?i)", "show \"sym ((\\<Union>i\\<in>is. f i)\\<^sup>+)\""], ["proof (prove)\nusing this:\n  ?i \\<in> is \\<Longrightarrow> equiv A (f ?i)\n\ngoal (1 subgoal):\n 1. sym ((\\<Union> (f ` is))\\<^sup>+)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> is \\<Longrightarrow> equiv A (f i)) \\<Longrightarrow>\n    sym ((\\<Union> (f ` is))\\<^sup>+)", "apply (rule sym_trancl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> is \\<Longrightarrow> equiv A (f i)) \\<Longrightarrow>\n    sym (\\<Union> (f ` is))", "unfolding equiv_def sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> is \\<Longrightarrow>\n        refl_on A (f i) \\<and>\n        (\\<forall>x y.\n            (x, y) \\<in> f i \\<longrightarrow> (y, x) \\<in> f i) \\<and>\n        trans (f i)) \\<Longrightarrow>\n    \\<forall>x y.\n       (x, y) \\<in> \\<Union> (f ` is) \\<longrightarrow>\n       (y, x) \\<in> \\<Union> (f ` is)", "by blast"], ["proof (state)\nthis:\n  sym ((\\<Union> (f ` is))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. trans ((\\<Union> (f ` is))\\<^sup>+)", "show \"trans  ((\\<Union>i\\<in>is. f i)\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans ((\\<Union> (f ` is))\\<^sup>+)", "by (rule trans_trancl)"], ["proof (state)\nthis:\n  trans ((\\<Union> (f ` is))\\<^sup>+)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S5n_tc_rels_eq:\n  assumes S5n: \"S5n M\"\n      and ww': \"(w, w') \\<in> (\\<Union>a \\<in> as. relations M a)\\<^sup>+\"\n  shows \"(\\<Union>a \\<in> as. relations M a)\\<^sup>+ `` {w} = (\\<Union>a \\<in> as. relations M a)\\<^sup>+ `` {w'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union> (relations M ` as))\\<^sup>+ `` {w} =\n    (\\<Union> (relations M ` as))\\<^sup>+ `` {w'}", "apply (cases \"as = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. as = {} \\<Longrightarrow>\n    (\\<Union> (relations M ` as))\\<^sup>+ `` {w} =\n    (\\<Union> (relations M ` as))\\<^sup>+ `` {w'}\n 2. as \\<noteq> {} \\<Longrightarrow>\n    (\\<Union> (relations M ` as))\\<^sup>+ `` {w} =\n    (\\<Union> (relations M ` as))\\<^sup>+ `` {w'}", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. as \\<noteq> {} \\<Longrightarrow>\n    (\\<Union> (relations M ` as))\\<^sup>+ `` {w} =\n    (\\<Union> (relations M ` as))\\<^sup>+ `` {w'}", "apply (rule equiv_class_eq[OF _ ww'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. as \\<noteq> {} \\<Longrightarrow>\n    equiv ?A16 ((\\<Union> (relations M ` as))\\<^sup>+)", "apply (erule tc_equiv[OF S5nD[OF S5n]])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>We can show that the standard S5 properties hold of this semantics:\\<close>"], ["", "lemma S5n_knowledge_generalisation:\n  \"\\<lbrakk> S5n M; \\<forall>w \\<in> worlds M. M, w \\<Turnstile> \\<phi> \\<rbrakk> \\<Longrightarrow> M, w \\<Turnstile> Kknows a \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S5n M;\n     \\<forall>w\\<in>worlds M. M, w \\<Turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>", "unfolding S5n_def equiv_def refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a.\n                (relations M a \\<subseteq> worlds M \\<times> worlds M \\<and>\n                 (\\<forall>x\\<in>worlds M.\n                     (x, x) \\<in> relations M a)) \\<and>\n                sym (relations M a) \\<and> trans (relations M a);\n     \\<forall>w\\<in>worlds M. M, w \\<Turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>", "by auto"], ["", "lemma S5n_knowledge:\n  \"\\<lbrakk> S5n M; w \\<in> worlds M; M, w \\<Turnstile> Kknows a \\<phi> \\<rbrakk> \\<Longrightarrow> M, w \\<Turnstile> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S5n M; w \\<in> worlds M;\n     M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>\\<rbrakk>\n    \\<Longrightarrow> M, w \\<Turnstile> \\<phi>", "unfolding S5n_def equiv_def refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a.\n                (relations M a \\<subseteq> worlds M \\<times> worlds M \\<and>\n                 (\\<forall>x\\<in>worlds M.\n                     (x, x) \\<in> relations M a)) \\<and>\n                sym (relations M a) \\<and> trans (relations M a);\n     w \\<in> worlds M; M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>\\<rbrakk>\n    \\<Longrightarrow> M, w \\<Turnstile> \\<phi>", "by auto"], ["", "lemma S5n_positive_introspection:\n  \"\\<lbrakk> S5n M; w \\<in> worlds M; M, w \\<Turnstile> Kknows a \\<phi> \\<rbrakk> \\<Longrightarrow> M, w \\<Turnstile> Kknows a (Kknows a \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S5n M; w \\<in> worlds M;\n     M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>\\<rbrakk>\n    \\<Longrightarrow> M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>K\\<^sub>a \\<phi>", "unfolding S5n_def equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a.\n                refl_on (worlds M) (relations M a) \\<and>\n                sym (relations M a) \\<and> trans (relations M a);\n     w \\<in> worlds M; M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>\\<rbrakk>\n    \\<Longrightarrow> M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>K\\<^sub>a \\<phi>", "by simp (blast dest: transD)"], ["", "lemma S5n_negative_introspection:\n  \"\\<lbrakk> S5n M; w \\<in> worlds M; M, w \\<Turnstile> Knot (Kknows a \\<phi>) \\<rbrakk>\n     \\<Longrightarrow> M, w \\<Turnstile> Kknows a (Knot (Kknows a \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S5n M; w \\<in> worlds M;\n     M, w \\<Turnstile> Knot \\<^bold>K\\<^sub>a \\<phi>\\<rbrakk>\n    \\<Longrightarrow> M, w \\<Turnstile> \\<^bold>K\\<^sub>a Knot\n                     \\<^bold>K\\<^sub>a \\<phi>", "unfolding S5n_def equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a.\n                refl_on (worlds M) (relations M a) \\<and>\n                sym (relations M a) \\<and> trans (relations M a);\n     w \\<in> worlds M;\n     M, w \\<Turnstile> Knot \\<^bold>K\\<^sub>a \\<phi>\\<rbrakk>\n    \\<Longrightarrow> M, w \\<Turnstile> \\<^bold>K\\<^sub>a Knot\n                     \\<^bold>K\\<^sub>a \\<phi>", "by simp (blast dest: symD transD)"], ["", "(*>*)"], ["", "text\\<open>\n\nThe relation between knowledge and common knowledge can be understood\nas follows, following \\citet[\\S2.4]{FHMV:1995}. Firstly, that $\\phi$\nis common knowledge to a set of agents $as$ can be seen as asserting\nthat everyone in $as$ knows $\\phi$ and moreover knows that it is\ncommon knowledge amongst $as$.\n\n\\<close>"], ["", "lemma S5n_common_knowledge_fixed_point:\n  assumes S5n: \"S5n M\"\n  assumes w: \"w \\<in> worlds M\"\n  assumes a: \"a \\<in> set as\"\n  shows \"M, w \\<Turnstile> Kcknows as \\<phi>\n     \\<longleftrightarrow> M, w \\<Turnstile> Kand (Kknows a \\<phi>) (Kknows a (Kcknows as \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> =\n    M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> =\n    M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n 2. M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "assume CK: \"M, w \\<Turnstile> Kcknows as \\<phi>\""], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (2 subgoals):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n 2. M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "from S5n a w CK"], ["proof (chain)\npicking this:\n  S5n M\n  a \\<in> set as\n  w \\<in> worlds M\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "have \"M, w \\<Turnstile> Kknows a \\<phi>\"\n   and \"M, w \\<Turnstile> Kknows a (Kcknows as \\<phi>)\""], ["proof (prove)\nusing this:\n  S5n M\n  a \\<in> set as\n  w \\<in> worlds M\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi> &&&\n    M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "by (auto intro: trancl_into_trancl2)"], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (2 subgoals):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n 2. M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "then"], ["proof (chain)\npicking this:\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "show \"M, w \\<Turnstile> Kand (Kknows a \\<phi>) (Kknows a (Kcknows as \\<phi>))\""], ["proof (prove)\nusing this:\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<phi>\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "by simp"], ["proof (state)\nthis:\n  M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                     \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "assume \"M, w \\<Turnstile> Kand (Kknows a \\<phi>) (Kknows a (Kcknows as \\<phi>))\""], ["proof (state)\nthis:\n  M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                     \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "hence \"M, w \\<Turnstile> (Kknows a (Kcknows as \\<phi>))\""], ["proof (prove)\nusing this:\n  M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                     \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "by simp"], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> Kand \\<^bold>K\\<^sub>a \\<phi>\n                       \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "with S5n w"], ["proof (chain)\npicking this:\n  S5n M\n  w \\<in> worlds M\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "show \"M, w \\<Turnstile> (Kcknows as \\<phi>)\""], ["proof (prove)\nusing this:\n  S5n M\n  w \\<in> worlds M\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "by (rule S5n_knowledge)"], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text\\<open>\n\nSecondly we can provide an induction schema for the introduction of\ncommon knowledge: from everyone in $as$ knows that $\\phi$ implies\n$\\phi \\land \\psi$, and that $\\phi$ is satisfied at world $w$, infer\nthat $\\psi$ is common knowledge amongst $as$ at $w$.\n\n\\<close>"], ["", "lemma S5n_common_knowledge_induct:\n  assumes S5n: \"S5n M\"\n  assumes w: \"w \\<in> worlds M\"\n  assumes E: \"\\<forall>a \\<in> set as. \\<forall>w \\<in> worlds M.\n                 M, w \\<Turnstile> \\<phi> \\<longrightarrow> M, w \\<Turnstile> \\<^bold>K\\<^sub>a (Kand \\<phi> \\<psi>)\"\n  assumes p: \"M, w \\<Turnstile> \\<phi>\"\n  shows \"M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "fix w'"], ["proof (state)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "assume ww': \"(w, w') \\<in> (\\<Union>x\\<in>set as. relations M x)\\<^sup>+\""], ["proof (state)\nthis:\n  (w, w') \\<in> (\\<Union> (relations M ` set as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "from ww' S5n E p w"], ["proof (chain)\npicking this:\n  (w, w') \\<in> (\\<Union> (relations M ` set as))\\<^sup>+\n  S5n M\n  \\<forall>a\\<in>set as.\n     \\<forall>w\\<in>worlds M.\n        M, w \\<Turnstile> \\<phi> \\<longrightarrow>\n        M, w \\<Turnstile> \\<^bold>K\\<^sub>a Kand \\<phi> \\<psi>\n  M, w \\<Turnstile> \\<phi>\n  w \\<in> worlds M", "have \"M, w' \\<Turnstile> Kand \\<phi> \\<psi>\""], ["proof (prove)\nusing this:\n  (w, w') \\<in> (\\<Union> (relations M ` set as))\\<^sup>+\n  S5n M\n  \\<forall>a\\<in>set as.\n     \\<forall>w\\<in>worlds M.\n        M, w \\<Turnstile> \\<phi> \\<longrightarrow>\n        M, w \\<Turnstile> \\<^bold>K\\<^sub>a Kand \\<phi> \\<psi>\n  M, w \\<Turnstile> \\<phi>\n  w \\<in> worlds M\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> Kand \\<phi> \\<psi>", "by ( induct rule: trancl_induct\n         , simp_all, blast+)"], ["proof (state)\nthis:\n  M, w' \\<Turnstile> Kand \\<phi> \\<psi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "}"], ["proof (state)\nthis:\n  (w, ?w'2)\n  \\<in> (\\<Union> (relations M ` set as))\\<^sup>+ \\<Longrightarrow>\n  M, ?w'2 \\<Turnstile> Kand \\<phi> \\<psi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (w, ?w'2)\n  \\<in> (\\<Union> (relations M ` set as))\\<^sup>+ \\<Longrightarrow>\n  M, ?w'2 \\<Turnstile> Kand \\<phi> \\<psi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "by simp"], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* We actually use a simpler variant. *)"], ["", "lemma S5n_common_knowledge_fixed_point_simpler:\n  assumes S5n: \"S5n M\"\n      and w: \"w \\<in> worlds M\"\n      and a: \"a \\<in> set as\"\n  shows \"M, w \\<Turnstile> Kcknows as \\<phi> \\<longleftrightarrow> M, w \\<Turnstile> Kknows a (Kcknows as \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> =\n    M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n 2. M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "assume CK: \"M, w \\<Turnstile> Kcknows as \\<phi>\""], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (2 subgoals):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n 2. M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "from S5n a w CK"], ["proof (chain)\npicking this:\n  S5n M\n  a \\<in> set as\n  w \\<in> worlds M\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "show \"M, w \\<Turnstile> Kknows a (Kcknows as \\<phi>)\""], ["proof (prove)\nusing this:\n  S5n M\n  a \\<in> set as\n  w \\<in> worlds M\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "by (auto intro: trancl_into_trancl2)"], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "assume \"M, w \\<Turnstile> Kknows a (Kcknows as \\<phi>)\""], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi> \\<Longrightarrow>\n    M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "with S5n w"], ["proof (chain)\npicking this:\n  S5n M\n  w \\<in> worlds M\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "show \"M, w \\<Turnstile> (Kcknows as \\<phi>)\""], ["proof (prove)\nusing this:\n  S5n M\n  w \\<in> worlds M\n  M, w \\<Turnstile> \\<^bold>K\\<^sub>a \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>", "by (rule S5n_knowledge)"], ["proof (state)\nthis:\n  M, w \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)\n\n(* **************************************** *)"], ["", "subsection \\<open>Generated models\\<close>"], ["", "text\\<open>\n\n\\label{sec:generated_models}\n\nThe rest of this section introduces the technical machinery we use to\nrelate Kripke structures.\n\nIntuitively the truth of a formula at a world depends only on the\nworlds that are reachable from it in zero or more steps, using any of\nthe accessibility relations at each step. Traditionally this result is\ncalled the \\emph{generated model property}\n\\citep[\\S3.4]{Chellas:1980}.\n\nGiven the model generated by @{term \"w\"} in @{term \"M\"}:\n\n\\<close>"], ["", "definition\n  gen_model :: \"('a, 'p, 'w) KripkeStructure \\<Rightarrow> 'w \\<Rightarrow> ('a, 'p, 'w) KripkeStructure\"\nwhere\n  \"gen_model M w \\<equiv>\n    let ws' = worlds M \\<inter> (\\<Union>a. relations M a)\\<^sup>* `` {w}\n     in \\<lparr> worlds = ws',\n          relations = \\<lambda>a. relations M a \\<inter> (ws' \\<times> ws'),\n          valuation = valuation M \\<rparr>\""], ["", "(*<*)"], ["", "lemma gen_model_worldsD[dest]:\n  \"w' \\<in> worlds (gen_model M w) \\<Longrightarrow> w' \\<in> worlds M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w' \\<in> worlds (gen_model M w) \\<Longrightarrow> w' \\<in> worlds M", "unfolding gen_model_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. w' \\<in> worlds\n              (let ws' =\n                     worlds M \\<inter>\n                     (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n               in \\<lparr>worlds = ws',\n                     relations = \\<lambda>a. Restr (relations M a) ws',\n                     valuation = valuation M\\<rparr>) \\<Longrightarrow>\n    w' \\<in> worlds M", "by simp"], ["", "lemma gen_model_world_refl:\n  \"w \\<in> worlds M \\<Longrightarrow> w \\<in> worlds (gen_model M w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> worlds M \\<Longrightarrow> w \\<in> worlds (gen_model M w)", "unfolding gen_model_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> worlds M \\<Longrightarrow>\n    w \\<in> worlds\n             (let ws' =\n                    worlds M \\<inter>\n                    (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n              in \\<lparr>worlds = ws',\n                    relations = \\<lambda>a. Restr (relations M a) ws',\n                    valuation = valuation M\\<rparr>)", "by simp"], ["", "lemma gen_model_rels_worlds[dest]:\n  assumes \"(w', w'') \\<in> relations (gen_model M w) a\"\n  shows \"w' \\<in> worlds (gen_model M w) \\<and> w'' \\<in> worlds (gen_model M w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w' \\<in> worlds (gen_model M w) \\<and> w'' \\<in> worlds (gen_model M w)", "using assms"], ["proof (prove)\nusing this:\n  (w', w'') \\<in> relations (gen_model M w) a\n\ngoal (1 subgoal):\n 1. w' \\<in> worlds (gen_model M w) \\<and> w'' \\<in> worlds (gen_model M w)", "unfolding gen_model_def"], ["proof (prove)\nusing this:\n  (w', w'')\n  \\<in> relations\n         (let ws' =\n                worlds M \\<inter>\n                (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n          in \\<lparr>worlds = ws',\n                relations = \\<lambda>a. Restr (relations M a) ws',\n                valuation = valuation M\\<rparr>)\n         a\n\ngoal (1 subgoal):\n 1. w' \\<in> worlds\n              (let ws' =\n                     worlds M \\<inter>\n                     (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n               in \\<lparr>worlds = ws',\n                     relations = \\<lambda>a. Restr (relations M a) ws',\n                     valuation = valuation M\\<rparr>) \\<and>\n    w''\n    \\<in> worlds\n           (let ws' =\n                  worlds M \\<inter>\n                  (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n            in \\<lparr>worlds = ws',\n                  relations = \\<lambda>a. Restr (relations M a) ws',\n                  valuation = valuation M\\<rparr>)", "by simp"], ["", "lemma gen_model_rels_tc_worlds[dest]:\n  assumes \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations (gen_model M w) a)\\<^sup>+\"\n  shows \"w'' \\<in> worlds (gen_model M w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w'' \\<in> worlds (gen_model M w)", "using assms"], ["proof (prove)\nusing this:\n  (w', w'') \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. w'' \\<in> worlds (gen_model M w)", "by (induct rule: trancl_induct) auto"], ["", "lemma gen_model_rels[dest]:\n  assumes \"(w', w'') \\<in> relations (gen_model M w) a\"\n  shows \"(w', w'') \\<in> relations M a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w', w'') \\<in> relations M a", "using assms"], ["proof (prove)\nusing this:\n  (w', w'') \\<in> relations (gen_model M w) a\n\ngoal (1 subgoal):\n 1. (w', w'') \\<in> relations M a", "unfolding gen_model_def"], ["proof (prove)\nusing this:\n  (w', w'')\n  \\<in> relations\n         (let ws' =\n                worlds M \\<inter>\n                (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n          in \\<lparr>worlds = ws',\n                relations = \\<lambda>a. Restr (relations M a) ws',\n                valuation = valuation M\\<rparr>)\n         a\n\ngoal (1 subgoal):\n 1. (w', w'') \\<in> relations M a", "by simp"], ["", "lemma gen_model_worlds:\n  \"worlds (gen_model M w) = worlds M \\<inter> (\\<Union>a. relations M a)\\<^sup>* `` {w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. worlds (gen_model M w) =\n    worlds M \\<inter> (\\<Union> (range (relations M)))\\<^sup>* `` {w}", "unfolding gen_model_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. worlds\n     (let ws' =\n            worlds M \\<inter>\n            (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n      in \\<lparr>worlds = ws',\n            relations = \\<lambda>a. Restr (relations M a) ws',\n            valuation = valuation M\\<rparr>) =\n    worlds M \\<inter> (\\<Union> (range (relations M)))\\<^sup>* `` {w}", "by simp"], ["", "lemma gen_model_tc_rels[dest]:\n  assumes M: \"kripke M\"\n      and R: \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations (gen_model M w) a)\\<^sup>+\"\n  shows \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations M a)\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w', w'') \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "using R"], ["proof (prove)\nusing this:\n  (w', w'') \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. (w', w'') \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "proof(induct rule: trancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       (w', y)\n       \\<in> \\<Union> (relations (gen_model M w) ` as) \\<Longrightarrow>\n       (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(w', y)\n                \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as);\n        (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (w', z) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "case (base y)"], ["proof (state)\nthis:\n  (w', y) \\<in> \\<Union> (relations (gen_model M w) ` as)\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       (w', y)\n       \\<in> \\<Union> (relations (gen_model M w) ` as) \\<Longrightarrow>\n       (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(w', y)\n                \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as);\n        (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (w', z) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "with M"], ["proof (chain)\npicking this:\n  kripke M\n  (w', y) \\<in> \\<Union> (relations (gen_model M w) ` as)", "show ?case"], ["proof (prove)\nusing this:\n  kripke M\n  (w', y) \\<in> \\<Union> (relations (gen_model M w) ` as)\n\ngoal (1 subgoal):\n 1. (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(w', y)\n                \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as);\n        (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (w', z) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(w', y)\n                \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as);\n        (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (w', z) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "case (step y z)"], ["proof (state)\nthis:\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as)\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(w', y)\n                \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as);\n        (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (w', z) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "with M"], ["proof (chain)\npicking this:\n  kripke M\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as)\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "have \"y \\<in> worlds (gen_model M w)\"\n          and \"z \\<in> worlds (gen_model M w)\""], ["proof (prove)\nusing this:\n  kripke M\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as)\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. y \\<in> worlds (gen_model M w) &&& z \\<in> worlds (gen_model M w)", "by auto"], ["proof (state)\nthis:\n  y \\<in> worlds (gen_model M w)\n  z \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(w', y)\n                \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as);\n        (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (w', z) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "with M step"], ["proof (chain)\npicking this:\n  kripke M\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as)\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  y \\<in> worlds (gen_model M w)\n  z \\<in> worlds (gen_model M w)", "show ?case"], ["proof (prove)\nusing this:\n  kripke M\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations (gen_model M w) ` as)\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  y \\<in> worlds (gen_model M w)\n  z \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. (w', z) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "by (auto intro: trancl_into_trancl)"], ["proof (state)\nthis:\n  (w', z) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_model_rels_rev[dest]:\n  assumes M: \"kripke M\"\n      and \"w' \\<in> worlds (gen_model M w)\"\n      and \"(w', w'') \\<in> relations M a\"\n  shows \"(w', w'') \\<in> relations (gen_model M w) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w', w'') \\<in> relations (gen_model M w) a", "using assms"], ["proof (prove)\nusing this:\n  kripke M\n  w' \\<in> worlds (gen_model M w)\n  (w', w'') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (w', w'') \\<in> relations (gen_model M w) a", "unfolding gen_model_def"], ["proof (prove)\nusing this:\n  kripke M\n  w' \\<in> worlds\n            (let ws' =\n                   worlds M \\<inter>\n                   (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n             in \\<lparr>worlds = ws',\n                   relations = \\<lambda>a. Restr (relations M a) ws',\n                   valuation = valuation M\\<rparr>)\n  (w', w'') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (w', w'')\n    \\<in> relations\n           (let ws' =\n                  worlds M \\<inter>\n                  (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n            in \\<lparr>worlds = ws',\n                  relations = \\<lambda>a. Restr (relations M a) ws',\n                  valuation = valuation M\\<rparr>)\n           a", "by (auto intro: rtrancl_into_rtrancl)"], ["", "lemma gen_model_tc_rels_rev[dest]:\n  assumes M: \"kripke M\"\n      and R: \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations M a)\\<^sup>+\"\n      and W: \"w' \\<in> worlds (gen_model M w)\"\n  shows \"(w', w'') \\<in> (\\<Union>a \\<in> as. relations (gen_model M w) a)\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w', w'') \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+", "using R W"], ["proof (prove)\nusing this:\n  (w', w'') \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  w' \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. (w', w'') \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+", "proof(induct rule: trancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(w', y) \\<in> \\<Union> (relations M ` as);\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> (w', y)\n                         \\<in> (\\<Union>\n                                 (relations (gen_model M w) ` as))\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M ` as);\n        w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n        (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> (w', z)\n                         \\<in> (\\<Union>\n                                 (relations (gen_model M w) ` as))\\<^sup>+", "case (base y)"], ["proof (state)\nthis:\n  (w', y) \\<in> \\<Union> (relations M ` as)\n  w' \\<in> worlds (gen_model M w)\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(w', y) \\<in> \\<Union> (relations M ` as);\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> (w', y)\n                         \\<in> (\\<Union>\n                                 (relations (gen_model M w) ` as))\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M ` as);\n        w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n        (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> (w', z)\n                         \\<in> (\\<Union>\n                                 (relations (gen_model M w) ` as))\\<^sup>+", "with M"], ["proof (chain)\npicking this:\n  kripke M\n  (w', y) \\<in> \\<Union> (relations M ` as)\n  w' \\<in> worlds (gen_model M w)", "show ?case"], ["proof (prove)\nusing this:\n  kripke M\n  (w', y) \\<in> \\<Union> (relations M ` as)\n  w' \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M ` as);\n        w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n        (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> (w', z)\n                         \\<in> (\\<Union>\n                                 (relations (gen_model M w) ` as))\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M ` as);\n        w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n        (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> (w', z)\n                         \\<in> (\\<Union>\n                                 (relations (gen_model M w) ` as))\\<^sup>+", "case (step y z)"], ["proof (state)\nthis:\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations M ` as)\n  w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  w' \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M ` as);\n        w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n        (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> (w', z)\n                         \\<in> (\\<Union>\n                                 (relations (gen_model M w) ` as))\\<^sup>+", "with M"], ["proof (chain)\npicking this:\n  kripke M\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations M ` as)\n  w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  w' \\<in> worlds (gen_model M w)", "have \"y \\<in> worlds (gen_model M w)\"\n          and \"z \\<in> worlds (gen_model M w)\""], ["proof (prove)\nusing this:\n  kripke M\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations M ` as)\n  w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  w' \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. y \\<in> worlds (gen_model M w) &&& z \\<in> worlds (gen_model M w)", "by auto"], ["proof (state)\nthis:\n  y \\<in> worlds (gen_model M w)\n  z \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M ` as);\n        w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n        (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> (w', z)\n                         \\<in> (\\<Union>\n                                 (relations (gen_model M w) ` as))\\<^sup>+", "with M step"], ["proof (chain)\npicking this:\n  kripke M\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations M ` as)\n  w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  w' \\<in> worlds (gen_model M w)\n  y \\<in> worlds (gen_model M w)\n  z \\<in> worlds (gen_model M w)", "show ?case"], ["proof (prove)\nusing this:\n  kripke M\n  (w', y) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  (y, z) \\<in> \\<Union> (relations M ` as)\n  w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  (w', y) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n  w' \\<in> worlds (gen_model M w)\n  y \\<in> worlds (gen_model M w)\n  z \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. (w', z) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+", "by (auto intro: trancl_into_trancl)"], ["proof (state)\nthis:\n  (w', z) \\<in> (\\<Union> (relations (gen_model M w) ` as))\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_model_kripke:\n  shows \"kripke (gen_model M w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kripke (gen_model M w)", "unfolding gen_model_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. kripke\n     (let ws' =\n            worlds M \\<inter>\n            (\\<Union> (range (relations M)))\\<^sup>* `` {w}\n      in \\<lparr>worlds = ws',\n            relations = \\<lambda>a. Restr (relations M a) ws',\n            valuation = valuation M\\<rparr>)", "by auto"], ["", "(*>*)"], ["", "text\\<open>\n\nwhere we take the image of @{term \"w\"} under the reflexive transitive\nclosure of the agents' relations, we can show that the satisfaction of\na formula @{term \"\\<phi>\"} at a world @{term \"w'\"} is preserved, provided\n@{term \"w'\"} is relevant to the world @{term \"w\"} that the sub-model\nis based upon:\n\n\\<close>"], ["", "lemma gen_model_semantic_equivalence:\n  assumes M: \"kripke M\"\n  assumes w': \"w' \\<in> worlds (gen_model M w)\"\n  shows \"M, w' \\<Turnstile> \\<phi> \\<longleftrightarrow> (gen_model M w), w' \\<Turnstile> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "fix w w'"], ["proof (state)\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "assume \"w' \\<in> worlds (gen_model M w)\""], ["proof (state)\nthis:\n  w' \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "hence \"M, w' \\<Turnstile> \\<phi> \\<longleftrightarrow> (gen_model M w), w' \\<Turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  w' \\<in> worlds (gen_model M w)\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "proof(induct \\<phi> arbitrary: w')"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x w'.\n       w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n       M, w' \\<Turnstile> Kprop x = gen_model M w, w' \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Knot \\<phi> =\n                         gen_model M w, w' \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi>1 =\n                   gen_model M w, w' \\<Turnstile> \\<phi>1;\n        \\<And>w'.\n           w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n           M, w' \\<Turnstile> \\<phi>2 =\n           gen_model M w, w' \\<Turnstile> \\<phi>2;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         gen_model M w, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi> =\n                         gen_model M\n                          w, w' \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi>\n 5. \\<And>x1a \\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         gen_model M\n                          w, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "case (Kknows a f w')"], ["proof (state)\nthis:\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n\ngoal (5 subgoals):\n 1. \\<And>x w'.\n       w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n       M, w' \\<Turnstile> Kprop x = gen_model M w, w' \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Knot \\<phi> =\n                         gen_model M w, w' \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi>1 =\n                   gen_model M w, w' \\<Turnstile> \\<phi>1;\n        \\<And>w'.\n           w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n           M, w' \\<Turnstile> \\<phi>2 =\n           gen_model M w, w' \\<Turnstile> \\<phi>2;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         gen_model M w, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi> =\n                         gen_model M\n                          w, w' \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi>\n 5. \\<And>x1a \\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         gen_model M\n                          w, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f =\n    gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f \\<Longrightarrow>\n    gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n 2. gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "assume lhs: \"M, w' \\<Turnstile> Kknows a f\""], ["proof (state)\nthis:\n  M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n\ngoal (2 subgoals):\n 1. M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f \\<Longrightarrow>\n    gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n 2. gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "with Kknows"], ["proof (chain)\npicking this:\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n  M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "show \"gen_model M w, w' \\<Turnstile> Kknows a f\""], ["proof (prove)\nusing this:\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n  M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n\ngoal (1 subgoal):\n 1. gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "by auto"], ["proof (state)\nthis:\n  gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n\ngoal (1 subgoal):\n 1. gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "assume rhs: \"gen_model M w, w' \\<Turnstile> Kknows a f\""], ["proof (state)\nthis:\n  gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n\ngoal (1 subgoal):\n 1. gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "with M Kknows"], ["proof (chain)\npicking this:\n  kripke M\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n  gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "show \"M, w' \\<Turnstile> Kknows a f\""], ["proof (prove)\nusing this:\n  kripke M\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n  gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f", "by (simp, blast)"], ["proof (state)\nthis:\n  M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M, w' \\<Turnstile> \\<^bold>K\\<^sub>a f =\n  gen_model M w, w' \\<Turnstile> \\<^bold>K\\<^sub>a f\n\ngoal (4 subgoals):\n 1. \\<And>x w'.\n       w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n       M, w' \\<Turnstile> Kprop x = gen_model M w, w' \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Knot \\<phi> =\n                         gen_model M w, w' \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi>1 =\n                   gen_model M w, w' \\<Turnstile> \\<phi>1;\n        \\<And>w'.\n           w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n           M, w' \\<Turnstile> \\<phi>2 =\n           gen_model M w, w' \\<Turnstile> \\<phi>2;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         gen_model M w, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         gen_model M\n                          w, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x w'.\n       w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n       M, w' \\<Turnstile> Kprop x = gen_model M w, w' \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Knot \\<phi> =\n                         gen_model M w, w' \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi>1 =\n                   gen_model M w, w' \\<Turnstile> \\<phi>1;\n        \\<And>w'.\n           w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n           M, w' \\<Turnstile> \\<phi>2 =\n           gen_model M w, w' \\<Turnstile> \\<phi>2;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         gen_model M w, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         gen_model M\n                          w, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "case (Kcknows as f w')"], ["proof (state)\nthis:\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n\ngoal (4 subgoals):\n 1. \\<And>x w'.\n       w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n       M, w' \\<Turnstile> Kprop x = gen_model M w, w' \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Knot \\<phi> =\n                         gen_model M w, w' \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi>1 =\n                   gen_model M w, w' \\<Turnstile> \\<phi>1;\n        \\<And>w'.\n           w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n           M, w' \\<Turnstile> \\<phi>2 =\n           gen_model M w, w' \\<Turnstile> \\<phi>2;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         gen_model M w, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         gen_model M\n                          w, w' \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f =\n    gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f \\<Longrightarrow>\n    gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n 2. gen_model M\n     w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "assume lhs: \"M, w' \\<Turnstile> Kcknows as f\""], ["proof (state)\nthis:\n  M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n\ngoal (2 subgoals):\n 1. M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f \\<Longrightarrow>\n    gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n 2. gen_model M\n     w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "with M Kcknows"], ["proof (chain)\npicking this:\n  kripke M\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n  M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "show \"gen_model M w, w' \\<Turnstile> Kcknows as f\""], ["proof (prove)\nusing this:\n  kripke M\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n  M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n\ngoal (1 subgoal):\n 1. gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "by (simp, blast)"], ["proof (state)\nthis:\n  gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n\ngoal (1 subgoal):\n 1. gen_model M\n     w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. gen_model M\n     w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "assume rhs: \"gen_model M w, w' \\<Turnstile> Kcknows as f\""], ["proof (state)\nthis:\n  gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n\ngoal (1 subgoal):\n 1. gen_model M\n     w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f \\<Longrightarrow>\n    M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "with M Kcknows"], ["proof (chain)\npicking this:\n  kripke M\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n  gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "show \"M, w' \\<Turnstile> Kcknows as f\""], ["proof (prove)\nusing this:\n  kripke M\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> f = gen_model M w, ?w' \\<Turnstile> f\n  w' \\<in> worlds (gen_model M w)\n  gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f", "by (simp, blast)"], ["proof (state)\nthis:\n  M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f =\n  gen_model M w, w' \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> f\n\ngoal (3 subgoals):\n 1. \\<And>x w'.\n       w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n       M, w' \\<Turnstile> Kprop x = gen_model M w, w' \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi> =\n                   gen_model M w, w' \\<Turnstile> \\<phi>;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Knot \\<phi> =\n                         gen_model M w, w' \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 w'.\n       \\<lbrakk>\\<And>w'.\n                   w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n                   M, w' \\<Turnstile> \\<phi>1 =\n                   gen_model M w, w' \\<Turnstile> \\<phi>1;\n        \\<And>w'.\n           w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n           M, w' \\<Turnstile> \\<phi>2 =\n           gen_model M w, w' \\<Turnstile> \\<phi>2;\n        w' \\<in> worlds (gen_model M w)\\<rbrakk>\n       \\<Longrightarrow> M, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         gen_model M w, w' \\<Turnstile> Kand \\<phi>1 \\<phi>2", "qed (simp_all add: gen_model_def)"], ["proof (state)\nthis:\n  M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "}"], ["proof (state)\nthis:\n  ?w'a2 \\<in> worlds (gen_model M ?wa2) \\<Longrightarrow>\n  M, ?w'a2 \\<Turnstile> \\<phi> = gen_model M ?wa2, ?w'a2 \\<Turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "with w'"], ["proof (chain)\npicking this:\n  w' \\<in> worlds (gen_model M w)\n  ?w'a2 \\<in> worlds (gen_model M ?wa2) \\<Longrightarrow>\n  M, ?w'a2 \\<Turnstile> \\<phi> = gen_model M ?wa2, ?w'a2 \\<Turnstile> \\<phi>", "show ?thesis"], ["proof (prove)\nusing this:\n  w' \\<in> worlds (gen_model M w)\n  ?w'a2 \\<in> worlds (gen_model M ?wa2) \\<Longrightarrow>\n  M, ?w'a2 \\<Turnstile> \\<phi> = gen_model M ?wa2, ?w'a2 \\<Turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>", "by simp"], ["proof (state)\nthis:\n  M, w' \\<Turnstile> \\<phi> = gen_model M w, w' \\<Turnstile> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text\\<open>\n\nThis is shown by a straightforward structural induction over the\nformula @{term \"\\<phi>\"}.\n\n\\<close>"], ["", "(*<*)"], ["", "lemma gen_model_S5n:\n  assumes S5n: \"S5n M\"\n  shows \"S5n (gen_model M w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S5n (gen_model M w)", "proof(intro S5nI equivI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a. refl_on (worlds (gen_model M w)) (relations (gen_model M w) a)\n 2. \\<And>a. sym (relations (gen_model M w) a)\n 3. \\<And>a. trans (relations (gen_model M w) a)", "show \"\\<And>n. refl_on (worlds (gen_model M w)) (relations (gen_model M w) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. refl_on (worlds (gen_model M w)) (relations (gen_model M w) n)", "apply (rule equivE[OF S5nD[OF S5n]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>refl_on (worlds M) (relations M (?a1 n));\n        sym (relations M (?a1 n)); trans (relations M (?a1 n))\\<rbrakk>\n       \\<Longrightarrow> refl_on (worlds (gen_model M w))\n                          (relations (gen_model M w) n)", "by - (rule refl_onI, auto simp add: refl_on_def gen_model_def)"], ["proof (state)\nthis:\n  refl_on (worlds (gen_model M w)) (relations (gen_model M w) ?n)\n\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations (gen_model M w) a)\n 2. \\<And>a. trans (relations (gen_model M w) a)", "show \"\\<And>n. sym (relations (gen_model M w) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. sym (relations (gen_model M w) n)", "apply (rule equivE[OF S5nD[OF S5n]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>refl_on (worlds M) (relations M (?a1 n));\n        sym (relations M (?a1 n)); trans (relations M (?a1 n))\\<rbrakk>\n       \\<Longrightarrow> sym (relations (gen_model M w) n)", "by (unfold gen_model_def sym_def, auto)"], ["proof (state)\nthis:\n  sym (relations (gen_model M w) ?n)\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations (gen_model M w) a)", "show \"\\<And>n. trans (relations (gen_model M w) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. trans (relations (gen_model M w) n)", "apply (rule equivE[OF S5nD[OF S5n]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>refl_on (worlds M) (relations M (?a1 n));\n        sym (relations M (?a1 n)); trans (relations M (?a1 n))\\<rbrakk>\n       \\<Longrightarrow> trans (relations (gen_model M w) n)", "by - (rule transI, simp add: gen_model_def, unfold trans_def, blast)"], ["proof (state)\nthis:\n  trans (relations (gen_model M w) ?n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n\nIf two models generate the same sub-model for a world, they satisfy\nthe same formulas at that world.\n\n\\<close>"], ["", "lemma gen_model_eq:\n  assumes M: \"kripke M\"\n      and M': \"kripke M'\"\n      and \"gen_model M w = gen_model M' w\"\n      and \"w' \\<in> worlds (gen_model M' w)\"\n  shows \"M, w' \\<Turnstile> \\<phi> \\<longleftrightarrow> M', w' \\<Turnstile> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = M', w' \\<Turnstile> \\<phi>", "using assms gen_model_semantic_equivalence[OF M, where w=w]\n              gen_model_semantic_equivalence[OF M', where w=w]"], ["proof (prove)\nusing this:\n  kripke M\n  kripke M'\n  gen_model M w = gen_model M' w\n  w' \\<in> worlds (gen_model M' w)\n  ?w' \\<in> worlds (gen_model M w) \\<Longrightarrow>\n  M, ?w' \\<Turnstile> ?\\<phi> = gen_model M w, ?w' \\<Turnstile> ?\\<phi>\n  ?w' \\<in> worlds (gen_model M' w) \\<Longrightarrow>\n  M', ?w' \\<Turnstile> ?\\<phi> = gen_model M' w, ?w' \\<Turnstile> ?\\<phi>\n\ngoal (1 subgoal):\n 1. M, w' \\<Turnstile> \\<phi> = M', w' \\<Turnstile> \\<phi>", "by auto"], ["", "text \\<open>\n\nOur final lemma in this section is technical: it allows us to move\nbetween two Kripke structures that have the same relevant worlds.\n\n\\<close>"], ["", "lemma gen_model_subset_aux:\n  assumes R: \"\\<And>a. relations M a \\<inter> T \\<times> T = relations M' a \\<inter> T \\<times> T\"\n      and T: \"(\\<Union>a. relations M a)\\<^sup>* `` {t} \\<subseteq> T\"\n  shows \"(\\<Union>x. relations M x)\\<^sup>* `` {t} \\<subseteq> (\\<Union>x. relations M' x)\\<^sup>* `` {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "assume \"(t, x) \\<in> (\\<Union>x. relations M x)\\<^sup>*\""], ["proof (state)\nthis:\n  (t, x) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "hence \"(t, x) \\<in> (\\<Union>x. relations M' x)\\<^sup>*\""], ["proof (prove)\nusing this:\n  (t, x) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (t, x) \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "proof(induct rule: rtrancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (t, t) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n 2. \\<And>y z.\n       \\<lbrakk>(t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M));\n        (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (t, z)\n                         \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "case (step y z)"], ["proof (state)\nthis:\n  (t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  (y, z) \\<in> \\<Union> (range (relations M))\n  (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n\ngoal (2 subgoals):\n 1. (t, t) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n 2. \\<And>y z.\n       \\<lbrakk>(t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M));\n        (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (t, z)\n                         \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "with R T"], ["proof (chain)\npicking this:\n  Restr (relations M ?a) T = Restr (relations M' ?a) T\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n  (t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  (y, z) \\<in> \\<Union> (range (relations M))\n  (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "have \"(y, z) \\<in> (\\<Union>a. relations M' a)\""], ["proof (prove)\nusing this:\n  Restr (relations M ?a) T = Restr (relations M' ?a) T\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n  (t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  (y, z) \\<in> \\<Union> (range (relations M))\n  (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (y, z) \\<in> \\<Union> (range (relations M'))", "by auto (blast dest: rtrancl_trans)"], ["proof (state)\nthis:\n  (y, z) \\<in> \\<Union> (range (relations M'))\n\ngoal (2 subgoals):\n 1. (t, t) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n 2. \\<And>y z.\n       \\<lbrakk>(t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M));\n        (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (t, z)\n                         \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "with step"], ["proof (chain)\npicking this:\n  (t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  (y, z) \\<in> \\<Union> (range (relations M))\n  (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n  (y, z) \\<in> \\<Union> (range (relations M'))", "show ?case"], ["proof (prove)\nusing this:\n  (t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  (y, z) \\<in> \\<Union> (range (relations M))\n  (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n  (y, z) \\<in> \\<Union> (range (relations M'))\n\ngoal (1 subgoal):\n 1. (t, z) \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "by (blast intro: rtrancl_trans)"], ["proof (state)\nthis:\n  (t, z) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (t, t) \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "qed simp"], ["proof (state)\nthis:\n  (t, x) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "}"], ["proof (state)\nthis:\n  (t, ?x2) \\<in> (\\<Union> (range (relations M)))\\<^sup>* \\<Longrightarrow>\n  (t, ?x2) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "thus ?thesis"], ["proof (prove)\nusing this:\n  (t, ?x2) \\<in> (\\<Union> (range (relations M)))\\<^sup>* \\<Longrightarrow>\n  (t, ?x2) \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "by blast"], ["proof (state)\nthis:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n  \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_model_subset:\n  assumes M: \"kripke M\"\n      and M': \"kripke M'\"\n      and R: \"\\<And>a. relations M a \\<inter> T \\<times> T = relations M' a \\<inter> T \\<times> T\"\n      and tMT: \"(\\<Union>a. relations M a)\\<^sup>* `` {t} \\<subseteq> T\"\n      and tM'T: \"(\\<Union>a. relations M' a)\\<^sup>* `` {t} \\<subseteq> T\"\n      and tM: \"t \\<in> worlds M\"\n      and tM': \"t \\<in> worlds M'\"\n      and V: \"valuation M = valuation M'\"\n  shows \"gen_model M t = gen_model M' t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen_model M t = gen_model M' t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. gen_model M t = gen_model M' t", "from tMT tM'T gen_model_subset_aux[OF R] gen_model_subset_aux[OF R[symmetric]]"], ["proof (chain)\npicking this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> T\n  (\\<Union> (range (relations M)))\\<^sup>* `` {?t}\n  \\<subseteq> T \\<Longrightarrow>\n  (\\<Union> (range (relations M)))\\<^sup>* `` {?t}\n  \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {?t}\n  (\\<Union> (range (relations M')))\\<^sup>* `` {?t}\n  \\<subseteq> T \\<Longrightarrow>\n  (\\<Union> (range (relations M')))\\<^sup>* `` {?t}\n  \\<subseteq> (\\<Union> (range (relations M)))\\<^sup>* `` {?t}", "have F: \"(\\<Union>a. relations M a)\\<^sup>* `` {t} = (\\<Union>a. relations M' a)\\<^sup>* `` {t}\""], ["proof (prove)\nusing this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> T\n  (\\<Union> (range (relations M)))\\<^sup>* `` {?t}\n  \\<subseteq> T \\<Longrightarrow>\n  (\\<Union> (range (relations M)))\\<^sup>* `` {?t}\n  \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {?t}\n  (\\<Union> (range (relations M')))\\<^sup>* `` {?t}\n  \\<subseteq> T \\<Longrightarrow>\n  (\\<Union> (range (relations M')))\\<^sup>* `` {?t}\n  \\<subseteq> (\\<Union> (range (relations M)))\\<^sup>* `` {?t}\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n    (\\<Union> (range (relations M')))\\<^sup>* `` {t}", "by - (rule, simp_all)"], ["proof (state)\nthis:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n\ngoal (1 subgoal):\n 1. gen_model M t = gen_model M' t", "from M tMT tM"], ["proof (chain)\npicking this:\n  kripke M\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n  t \\<in> worlds M", "have G: \"(\\<Union>a. relations M a)\\<^sup>* `` {t} \\<subseteq> worlds M\""], ["proof (prove)\nusing this:\n  kripke M\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n  t \\<in> worlds M\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> worlds M", "by (auto dest: kripke_rels_trc_worlds)"], ["proof (state)\nthis:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> worlds M\n\ngoal (1 subgoal):\n 1. gen_model M t = gen_model M' t", "from M' tM'T tM'"], ["proof (chain)\npicking this:\n  kripke M'\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> T\n  t \\<in> worlds M'", "have H: \"(\\<Union>a. relations M' a)\\<^sup>* `` {t} \\<subseteq> worlds M'\""], ["proof (prove)\nusing this:\n  kripke M'\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> T\n  t \\<in> worlds M'\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> worlds M'", "by (auto dest: kripke_rels_trc_worlds)"], ["proof (state)\nthis:\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> worlds M'\n\ngoal (1 subgoal):\n 1. gen_model M t = gen_model M' t", "from F G H"], ["proof (chain)\npicking this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> worlds M\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> worlds M'", "have WORLDS: \"worlds (gen_model M t) = worlds (gen_model M' t)\""], ["proof (prove)\nusing this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> worlds M\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> worlds M'\n\ngoal (1 subgoal):\n 1. worlds (gen_model M t) = worlds (gen_model M' t)", "unfolding gen_model_def"], ["proof (prove)\nusing this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> worlds M\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> worlds M'\n\ngoal (1 subgoal):\n 1. worlds\n     (let ws' =\n            worlds M \\<inter>\n            (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n      in \\<lparr>worlds = ws',\n            relations = \\<lambda>a. Restr (relations M a) ws',\n            valuation = valuation M\\<rparr>) =\n    worlds\n     (let ws' =\n            worlds M' \\<inter>\n            (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n      in \\<lparr>worlds = ws',\n            relations = \\<lambda>a. Restr (relations M' a) ws',\n            valuation = valuation M'\\<rparr>)", "by (auto iff: Int_absorb1)"], ["proof (state)\nthis:\n  worlds (gen_model M t) = worlds (gen_model M' t)\n\ngoal (1 subgoal):\n 1. gen_model M t = gen_model M' t", "have RELATIONS: \"\\<And>a. relations (gen_model M t) a = relations (gen_model M' t) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. relations (gen_model M t) a = relations (gen_model M' t) a", "proof (simp add: Int_absorb1 G H gen_model_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "fix a x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "assume XY: \"(x, y) \\<in> relations M a \\<inter> (\\<Union>x. relations M x)\\<^sup>* `` {t} \\<times> (\\<Union>x. relations M x)\\<^sup>* `` {t}\""], ["proof (state)\nthis:\n  (x, y)\n  \\<in> Restr (relations M a)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "from XY tMT"], ["proof (chain)\npicking this:\n  (x, y)\n  \\<in> Restr (relations M a)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T", "have \"(x, y) \\<in> relations M a \\<inter> T \\<times> T\""], ["proof (prove)\nusing this:\n  (x, y)\n  \\<in> Restr (relations M a)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Restr (relations M a) T", "by blast"], ["proof (state)\nthis:\n  (x, y) \\<in> Restr (relations M a) T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "with R"], ["proof (chain)\npicking this:\n  Restr (relations M ?a) T = Restr (relations M' ?a) T\n  (x, y) \\<in> Restr (relations M a) T", "have \"(x, y) \\<in> relations M' a \\<inter> T \\<times> T\""], ["proof (prove)\nusing this:\n  Restr (relations M ?a) T = Restr (relations M' ?a) T\n  (x, y) \\<in> Restr (relations M a) T\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Restr (relations M' a) T", "by blast"], ["proof (state)\nthis:\n  (x, y) \\<in> Restr (relations M' a) T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "with F XY tM'T"], ["proof (chain)\npicking this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n  (x, y)\n  \\<in> Restr (relations M a)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> T\n  (x, y) \\<in> Restr (relations M' a) T", "have \"(x, y) \\<in> relations M' a \\<inter> (\\<Union>x. relations M' x)\\<^sup>* `` {t} \\<times> (\\<Union>x. relations M' x)\\<^sup>* `` {t}\""], ["proof (prove)\nusing this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n  (x, y)\n  \\<in> Restr (relations M a)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> T\n  (x, y) \\<in> Restr (relations M' a) T\n\ngoal (1 subgoal):\n 1. (x, y)\n    \\<in> Restr (relations M' a)\n           ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "by blast"], ["proof (state)\nthis:\n  (x, y)\n  \\<in> Restr (relations M' a)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "}"], ["proof (state)\nthis:\n  (?x2, ?y2)\n  \\<in> Restr (relations M ?aa2)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) \\<Longrightarrow>\n  (?x2, ?y2)\n  \\<in> Restr (relations M' ?aa2)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "moreover"], ["proof (state)\nthis:\n  (?x2, ?y2)\n  \\<in> Restr (relations M ?aa2)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) \\<Longrightarrow>\n  (?x2, ?y2)\n  \\<in> Restr (relations M' ?aa2)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "{"], ["proof (state)\nthis:\n  (?x2, ?y2)\n  \\<in> Restr (relations M ?aa2)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) \\<Longrightarrow>\n  (?x2, ?y2)\n  \\<in> Restr (relations M' ?aa2)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "fix a x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "assume XY: \"(x, y) \\<in> relations M' a \\<inter> (\\<Union>x. relations M' x)\\<^sup>* `` {t} \\<times> (\\<Union>x. relations M' x)\\<^sup>* `` {t}\""], ["proof (state)\nthis:\n  (x, y)\n  \\<in> Restr (relations M' a)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "from XY tM'T"], ["proof (chain)\npicking this:\n  (x, y)\n  \\<in> Restr (relations M' a)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> T", "have \"(x, y) \\<in> relations M' a \\<inter> T \\<times> T\""], ["proof (prove)\nusing this:\n  (x, y)\n  \\<in> Restr (relations M' a)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Restr (relations M' a) T", "by blast"], ["proof (state)\nthis:\n  (x, y) \\<in> Restr (relations M' a) T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "with R"], ["proof (chain)\npicking this:\n  Restr (relations M ?a) T = Restr (relations M' ?a) T\n  (x, y) \\<in> Restr (relations M' a) T", "have \"(x, y) \\<in> relations M a \\<inter> T \\<times> T\""], ["proof (prove)\nusing this:\n  Restr (relations M ?a) T = Restr (relations M' ?a) T\n  (x, y) \\<in> Restr (relations M' a) T\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Restr (relations M a) T", "by blast"], ["proof (state)\nthis:\n  (x, y) \\<in> Restr (relations M a) T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "with F XY tMT"], ["proof (chain)\npicking this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n  (x, y)\n  \\<in> Restr (relations M' a)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n  (x, y) \\<in> Restr (relations M a) T", "have \"(x, y) \\<in> relations M a \\<inter> (\\<Union>x. relations M x)\\<^sup>* `` {t} \\<times> (\\<Union>x. relations M x)\\<^sup>* `` {t}\""], ["proof (prove)\nusing this:\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n  (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n  (x, y)\n  \\<in> Restr (relations M' a)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n  (\\<Union> (range (relations M)))\\<^sup>* `` {t} \\<subseteq> T\n  (x, y) \\<in> Restr (relations M a) T\n\ngoal (1 subgoal):\n 1. (x, y)\n    \\<in> Restr (relations M a)\n           ((\\<Union> (range (relations M)))\\<^sup>* `` {t})", "by blast"], ["proof (state)\nthis:\n  (x, y)\n  \\<in> Restr (relations M a)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "}"], ["proof (state)\nthis:\n  (?x2, ?y2)\n  \\<in> Restr (relations M' ?aa2)\n         ((\\<Union> (range (relations M')))\\<^sup>* ``\n          {t}) \\<Longrightarrow>\n  (?x2, ?y2)\n  \\<in> Restr (relations M ?aa2)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Restr (relations M a)\n        ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n       Restr (relations M' a)\n        ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "ultimately"], ["proof (chain)\npicking this:\n  (?x2, ?y2)\n  \\<in> Restr (relations M ?aa2)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) \\<Longrightarrow>\n  (?x2, ?y2)\n  \\<in> Restr (relations M' ?aa2)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n  (?x2, ?y2)\n  \\<in> Restr (relations M' ?aa2)\n         ((\\<Union> (range (relations M')))\\<^sup>* ``\n          {t}) \\<Longrightarrow>\n  (?x2, ?y2)\n  \\<in> Restr (relations M ?aa2)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})", "show \"Restr (relations M a) ((\\<Union>x. relations M x)\\<^sup>* `` {t}) =\n      Restr (relations M' a) ((\\<Union>x. relations M' x)\\<^sup>* `` {t})\""], ["proof (prove)\nusing this:\n  (?x2, ?y2)\n  \\<in> Restr (relations M ?aa2)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) \\<Longrightarrow>\n  (?x2, ?y2)\n  \\<in> Restr (relations M' ?aa2)\n         ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n  (?x2, ?y2)\n  \\<in> Restr (relations M' ?aa2)\n         ((\\<Union> (range (relations M')))\\<^sup>* ``\n          {t}) \\<Longrightarrow>\n  (?x2, ?y2)\n  \\<in> Restr (relations M ?aa2)\n         ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n\ngoal (1 subgoal):\n 1. Restr (relations M a)\n     ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n    Restr (relations M' a)\n     ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x y aa.\n                (x, y)\n                \\<in> Restr (relations M aa)\n                       ((\\<Union> (range (relations M)))\\<^sup>* ``\n                        {t}) \\<Longrightarrow>\n                (x, y)\n                \\<in> Restr (relations M' aa)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t});\n     \\<And>x y aa.\n        (x, y)\n        \\<in> Restr (relations M' aa)\n               ((\\<Union> (range (relations M')))\\<^sup>* ``\n                {t}) \\<Longrightarrow>\n        (x, y)\n        \\<in> Restr (relations M aa)\n               ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\\<rbrakk>\n    \\<Longrightarrow> Restr (relations M a)\n                       ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n                      Restr (relations M' a)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t})", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x y aa.\n                (x, y)\n                \\<in> Restr (relations M aa)\n                       ((\\<Union> (range (relations M)))\\<^sup>* ``\n                        {t}) \\<Longrightarrow>\n                (x, y)\n                \\<in> Restr (relations M' aa)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t});\n     \\<And>x y aa.\n        (x, y)\n        \\<in> Restr (relations M' aa)\n               ((\\<Union> (range (relations M')))\\<^sup>* ``\n                {t}) \\<Longrightarrow>\n        (x, y)\n        \\<in> Restr (relations M aa)\n               ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\\<rbrakk>\n    \\<Longrightarrow> Restr (relations M a)\n                       ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\n                      \\<subseteq> Restr (relations M' a)\n                                   ((\\<Union>\n(range (relations M')))\\<^sup>* ``\n                                    {t})\n 2. \\<lbrakk>\\<And>x y aa.\n                (x, y)\n                \\<in> Restr (relations M aa)\n                       ((\\<Union> (range (relations M)))\\<^sup>* ``\n                        {t}) \\<Longrightarrow>\n                (x, y)\n                \\<in> Restr (relations M' aa)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t});\n     \\<And>x y aa.\n        (x, y)\n        \\<in> Restr (relations M' aa)\n               ((\\<Union> (range (relations M')))\\<^sup>* ``\n                {t}) \\<Longrightarrow>\n        (x, y)\n        \\<in> Restr (relations M aa)\n               ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\\<rbrakk>\n    \\<Longrightarrow> Restr (relations M' a)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n                      \\<subseteq> Restr (relations M a)\n                                   ((\\<Union>\n(range (relations M)))\\<^sup>* ``\n                                    {t})", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x y aa.\n                   (x, y)\n                   \\<in> Restr (relations M aa)\n                          ((\\<Union> (range (relations M)))\\<^sup>* ``\n                           {t}) \\<Longrightarrow>\n                   (x, y)\n                   \\<in> Restr (relations M' aa)\n                          ((\\<Union> (range (relations M')))\\<^sup>* ``\n                           {t});\n        \\<And>x y aa.\n           (x, y)\n           \\<in> Restr (relations M' aa)\n                  ((\\<Union> (range (relations M')))\\<^sup>* ``\n                   {t}) \\<Longrightarrow>\n           (x, y)\n           \\<in> Restr (relations M aa)\n                  ((\\<Union> (range (relations M)))\\<^sup>* `` {t});\n        x \\<in> Restr (relations M a)\n                 ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Restr (relations M' a)\n                                  ((\\<Union>\n                                     (range (relations M')))\\<^sup>* ``\n                                   {t})\n 2. \\<lbrakk>\\<And>x y aa.\n                (x, y)\n                \\<in> Restr (relations M aa)\n                       ((\\<Union> (range (relations M)))\\<^sup>* ``\n                        {t}) \\<Longrightarrow>\n                (x, y)\n                \\<in> Restr (relations M' aa)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t});\n     \\<And>x y aa.\n        (x, y)\n        \\<in> Restr (relations M' aa)\n               ((\\<Union> (range (relations M')))\\<^sup>* ``\n                {t}) \\<Longrightarrow>\n        (x, y)\n        \\<in> Restr (relations M aa)\n               ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\\<rbrakk>\n    \\<Longrightarrow> Restr (relations M' a)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n                      \\<subseteq> Restr (relations M a)\n                                   ((\\<Union>\n(range (relations M)))\\<^sup>* ``\n                                    {t})", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x y aa.\n                (x, y)\n                \\<in> Restr (relations M aa)\n                       ((\\<Union> (range (relations M)))\\<^sup>* ``\n                        {t}) \\<Longrightarrow>\n                (x, y)\n                \\<in> Restr (relations M' aa)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t});\n     \\<And>x y aa.\n        (x, y)\n        \\<in> Restr (relations M' aa)\n               ((\\<Union> (range (relations M')))\\<^sup>* ``\n                {t}) \\<Longrightarrow>\n        (x, y)\n        \\<in> Restr (relations M aa)\n               ((\\<Union> (range (relations M)))\\<^sup>* `` {t})\\<rbrakk>\n    \\<Longrightarrow> Restr (relations M' a)\n                       ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n                      \\<subseteq> Restr (relations M a)\n                                   ((\\<Union>\n(range (relations M)))\\<^sup>* ``\n                                    {t})", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x y aa.\n                   (x, y)\n                   \\<in> Restr (relations M aa)\n                          ((\\<Union> (range (relations M)))\\<^sup>* ``\n                           {t}) \\<Longrightarrow>\n                   (x, y)\n                   \\<in> Restr (relations M' aa)\n                          ((\\<Union> (range (relations M')))\\<^sup>* ``\n                           {t});\n        \\<And>x y aa.\n           (x, y)\n           \\<in> Restr (relations M' aa)\n                  ((\\<Union> (range (relations M')))\\<^sup>* ``\n                   {t}) \\<Longrightarrow>\n           (x, y)\n           \\<in> Restr (relations M aa)\n                  ((\\<Union> (range (relations M)))\\<^sup>* `` {t});\n        x \\<in> Restr (relations M' a)\n                 ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Restr (relations M a)\n                                  ((\\<Union>\n                                     (range (relations M)))\\<^sup>* ``\n                                   {t})", "apply (case_tac x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x aa b.\n       \\<lbrakk>\\<And>x y aa.\n                   (x, y)\n                   \\<in> Restr (relations M aa)\n                          ((\\<Union> (range (relations M)))\\<^sup>* ``\n                           {t}) \\<Longrightarrow>\n                   (x, y)\n                   \\<in> Restr (relations M' aa)\n                          ((\\<Union> (range (relations M')))\\<^sup>* ``\n                           {t});\n        \\<And>x y aa.\n           (x, y)\n           \\<in> Restr (relations M' aa)\n                  ((\\<Union> (range (relations M')))\\<^sup>* ``\n                   {t}) \\<Longrightarrow>\n           (x, y)\n           \\<in> Restr (relations M aa)\n                  ((\\<Union> (range (relations M)))\\<^sup>* `` {t});\n        x \\<in> Restr (relations M' a)\n                 ((\\<Union> (range (relations M')))\\<^sup>* `` {t});\n        x = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Restr (relations M a)\n                                  ((\\<Union>\n                                     (range (relations M)))\\<^sup>* ``\n                                   {t})", "apply (simp (no_asm_use))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x aa b.\n       \\<lbrakk>\\<And>x y aa.\n                   (x, y) \\<in> relations M aa \\<and>\n                   (t, x)\n                   \\<in> (\\<Union> (range (relations M)))\\<^sup>* \\<and>\n                   (t, y)\n                   \\<in> (\\<Union>\n                           (range (relations M)))\\<^sup>* \\<Longrightarrow>\n                   (x, y) \\<in> relations M' aa \\<and>\n                   (t, x)\n                   \\<in> (\\<Union> (range (relations M')))\\<^sup>* \\<and>\n                   (t, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        \\<And>x y aa.\n           (x, y) \\<in> relations M' aa \\<and>\n           (t, x) \\<in> (\\<Union> (range (relations M')))\\<^sup>* \\<and>\n           (t, y)\n           \\<in> (\\<Union> (range (relations M')))\\<^sup>* \\<Longrightarrow>\n           (x, y) \\<in> relations M aa \\<and>\n           (t, x) \\<in> (\\<Union> (range (relations M)))\\<^sup>* \\<and>\n           (t, y) \\<in> (\\<Union> (range (relations M)))\\<^sup>*;\n        x \\<in> relations M' a \\<and>\n        x \\<in> (\\<Union> (range (relations M')))\\<^sup>* `` {t} \\<times>\n                (\\<Union> (range (relations M')))\\<^sup>* `` {t};\n        x = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> relations M a \\<and>\n                         x \\<in> (\\<Union> (range (relations M)))\\<^sup>* ``\n                                 {t} \\<times>\n                                 (\\<Union> (range (relations M)))\\<^sup>* ``\n                                 {t}", "apply (metis Image_singleton_iff mem_Sigma_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Restr (relations M a) ((\\<Union> (range (relations M)))\\<^sup>* `` {t}) =\n  Restr (relations M' a) ((\\<Union> (range (relations M')))\\<^sup>* `` {t})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  relations (gen_model M t) ?a = relations (gen_model M' t) ?a\n\ngoal (1 subgoal):\n 1. gen_model M t = gen_model M' t", "from WORLDS RELATIONS V"], ["proof (chain)\npicking this:\n  worlds (gen_model M t) = worlds (gen_model M' t)\n  relations (gen_model M t) ?a = relations (gen_model M' t) ?a\n  valuation M = valuation M'", "show ?thesis"], ["proof (prove)\nusing this:\n  worlds (gen_model M t) = worlds (gen_model M' t)\n  relations (gen_model M t) ?a = relations (gen_model M' t) ?a\n  valuation M = valuation M'\n\ngoal (1 subgoal):\n 1. gen_model M t = gen_model M' t", "unfolding gen_model_def"], ["proof (prove)\nusing this:\n  worlds\n   (let ws' =\n          worlds M \\<inter> (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    in \\<lparr>worlds = ws',\n          relations = \\<lambda>a. Restr (relations M a) ws',\n          valuation = valuation M\\<rparr>) =\n  worlds\n   (let ws' =\n          worlds M' \\<inter>\n          (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n    in \\<lparr>worlds = ws',\n          relations = \\<lambda>a. Restr (relations M' a) ws',\n          valuation = valuation M'\\<rparr>)\n  relations\n   (let ws' =\n          worlds M \\<inter> (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    in \\<lparr>worlds = ws',\n          relations = \\<lambda>a. Restr (relations M a) ws',\n          valuation = valuation M\\<rparr>)\n   ?a =\n  relations\n   (let ws' =\n          worlds M' \\<inter>\n          (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n    in \\<lparr>worlds = ws',\n          relations = \\<lambda>a. Restr (relations M' a) ws',\n          valuation = valuation M'\\<rparr>)\n   ?a\n  valuation M = valuation M'\n\ngoal (1 subgoal):\n 1. (let ws' =\n           worlds M \\<inter> (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n     in \\<lparr>worlds = ws',\n           relations = \\<lambda>a. Restr (relations M a) ws',\n           valuation = valuation M\\<rparr>) =\n    (let ws' =\n           worlds M' \\<inter>\n           (\\<Union> (range (relations M')))\\<^sup>* `` {t}\n     in \\<lparr>worlds = ws',\n           relations = \\<lambda>a. Restr (relations M' a) ws',\n           valuation = valuation M'\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  gen_model M t = gen_model M' t\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "subsection \\<open>Simulations\\<close>"], ["", "text\\<open>\n\n\\label{sec:kripke-theory-simulations}\n\nA \\emph{simulation}, or \\emph{p-morphism}, is a mapping from the\nworlds of one Kripke structure to another that preserves the truth of\nall formulas at related worlds \\citep[\\S3.4, Ex. 3.60]{Chellas:1980}.\nSuch a function @{term \"f\"} must satisfy four properties. Firstly, the\nimage of the set of worlds of @{term \"M\"} under @{term \"f\"} should\nequal the set of worlds of @{term \"M'\"}.\n\n\\<close>"], ["", "definition\n  sim_range :: \"('a, 'p, 'w1) KripkeStructure\n              \\<Rightarrow> ('a, 'p, 'w2) KripkeStructure \\<Rightarrow> ('w1 \\<Rightarrow> 'w2) \\<Rightarrow> bool\"\nwhere\n  \"sim_range M M' f \\<equiv> worlds M' = f ` worlds M\n                    \\<and> (\\<forall>a. relations M' a \\<subseteq> worlds M' \\<times> worlds M')\""], ["", "text\\<open>The value of a proposition should be the same at corresponding\nworlds:\\<close>"], ["", "definition\n  sim_val :: \"('a, 'p, 'w1) KripkeStructure\n           \\<Rightarrow> ('a, 'p, 'w2) KripkeStructure \\<Rightarrow> ('w1 \\<Rightarrow> 'w2) \\<Rightarrow> bool\"\nwhere\n  \"sim_val M M' f \\<equiv> \\<forall>u \\<in> worlds M. valuation M u = valuation M' (f u)\""], ["", "text\\<open>\n\nIf two worlds are related in @{term \"M\"}, then the simulation\nmaps them to related worlds in @{term \"M'\"}; intuitively the\nsimulation relates enough worlds. We term this the \\emph{forward}\nproperty.\n\n\\<close>"], ["", "definition\n  sim_f :: \"('a, 'p, 'w1) KripkeStructure\n         \\<Rightarrow> ('a, 'p, 'w2) KripkeStructure \\<Rightarrow> ('w1 \\<Rightarrow> 'w2) \\<Rightarrow> bool\"\nwhere\n  \"sim_f M M' f \\<equiv>\n     \\<forall>a u v. (u, v) \\<in> relations M a \\<longrightarrow> (f u, f v) \\<in> relations M' a\""], ["", "text\\<open>\n\nConversely, if two worlds @{term \"f u\"} and @{term \"v'\"} are related\nin @{term \"M'\"}, then there is a pair of related worlds @{term \"u\"}\nand @{term \"v\"} in @{term \"M\"} where @{term \"f v = v'\"}. Intuitively\nthe simulation makes enough distinctions. We term this the\n\\emph{reverse} property.\n\n\\<close>"], ["", "definition\n  sim_r :: \"('a, 'p, 'w1) KripkeStructure\n         \\<Rightarrow> ('a, 'p, 'w2) KripkeStructure \\<Rightarrow> ('w1 \\<Rightarrow> 'w2) \\<Rightarrow> bool\"\nwhere\n  \"sim_r M M' f \\<equiv> \\<forall>a. \\<forall>u \\<in> worlds M. \\<forall>v'.\n              (f u, v') \\<in> relations M' a\n           \\<longrightarrow> (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v')\""], ["", "definition \"sim M M' f \\<equiv> sim_range M M' f \\<and> sim_val M M' f\n                       \\<and> sim_f M M' f \\<and> sim_r M M' f\""], ["", "(*<*)"], ["", "lemma sim_rangeI[intro]:\n  \"\\<lbrakk> worlds M' = f ` worlds M; (\\<And>a. relations M' a \\<subseteq> worlds M' \\<times> worlds M') \\<rbrakk>\n     \\<Longrightarrow> sim_range M M' f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>worlds M' = f ` worlds M;\n     \\<And>a.\n        relations M' a \\<subseteq> worlds M' \\<times> worlds M'\\<rbrakk>\n    \\<Longrightarrow> sim_range M M' f", "unfolding sim_range_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>worlds M' = f ` worlds M;\n     \\<And>a.\n        relations M' a \\<subseteq> worlds M' \\<times> worlds M'\\<rbrakk>\n    \\<Longrightarrow> worlds M' = f ` worlds M \\<and>\n                      (\\<forall>a.\n                          relations M' a\n                          \\<subseteq> worlds M' \\<times> worlds M')", "by simp"], ["", "lemma sim_valI[intro]:\n  \"(\\<And>u. u \\<in> worlds M \\<Longrightarrow> valuation M u = valuation M' (f u))\n   \\<Longrightarrow> sim_val M M' f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> worlds M \\<Longrightarrow>\n        valuation M u = valuation M' (f u)) \\<Longrightarrow>\n    sim_val M M' f", "unfolding sim_val_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> worlds M \\<Longrightarrow>\n        valuation M u = valuation M' (f u)) \\<Longrightarrow>\n    \\<forall>u\\<in>worlds M. valuation M u = valuation M' (f u)", "by simp"], ["", "lemma sim_fI[intro]:\n  \"(\\<And>a u v. (u, v) \\<in> relations M a \\<Longrightarrow> (f u, f v) \\<in> relations M' a)\n   \\<Longrightarrow> sim_f M M' f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a u v.\n        (u, v) \\<in> relations M a \\<Longrightarrow>\n        (f u, f v) \\<in> relations M' a) \\<Longrightarrow>\n    sim_f M M' f", "unfolding sim_f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a u v.\n        (u, v) \\<in> relations M a \\<Longrightarrow>\n        (f u, f v) \\<in> relations M' a) \\<Longrightarrow>\n    \\<forall>a u v.\n       (u, v) \\<in> relations M a \\<longrightarrow>\n       (f u, f v) \\<in> relations M' a", "by simp"], ["", "lemma sim_fD:\n  \"\\<lbrakk> (u, v) \\<in> relations M a; sim M M' f \\<rbrakk>\n     \\<Longrightarrow> (f u, f v) \\<in> relations M' a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(u, v) \\<in> relations M a; sim M M' f\\<rbrakk>\n    \\<Longrightarrow> (f u, f v) \\<in> relations M' a", "unfolding sim_def sim_f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(u, v) \\<in> relations M a;\n     sim_range M M' f \\<and>\n     sim_val M M' f \\<and>\n     (\\<forall>a u v.\n         (u, v) \\<in> relations M a \\<longrightarrow>\n         (f u, f v) \\<in> relations M' a) \\<and>\n     sim_r M M' f\\<rbrakk>\n    \\<Longrightarrow> (f u, f v) \\<in> relations M' a", "by blast"], ["", "lemma sim_rI[intro]:\n  \"(\\<And>a u v'.\n    \\<lbrakk>u \\<in> worlds M; (f u, v') \\<in> relations M' a\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v'))\n  \\<Longrightarrow> sim_r M M' f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a u v'.\n        \\<lbrakk>u \\<in> worlds M; (f u, v') \\<in> relations M' a\\<rbrakk>\n        \\<Longrightarrow> \\<exists>v.\n                             (u, v) \\<in> relations M a \\<and>\n                             f v = v') \\<Longrightarrow>\n    sim_r M M' f", "unfolding sim_r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a u v'.\n        \\<lbrakk>u \\<in> worlds M; (f u, v') \\<in> relations M' a\\<rbrakk>\n        \\<Longrightarrow> \\<exists>v.\n                             (u, v) \\<in> relations M a \\<and>\n                             f v = v') \\<Longrightarrow>\n    \\<forall>a.\n       \\<forall>u\\<in>worlds M.\n          \\<forall>v'.\n             (f u, v') \\<in> relations M' a \\<longrightarrow>\n             (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v')", "by simp"], ["", "lemma sim_rD:\n  \"\\<lbrakk> (f u, v') \\<in> relations M' a; sim M M' f; u \\<in> worlds M \\<rbrakk>\n     \\<Longrightarrow> (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(f u, v') \\<in> relations M' a; sim M M' f;\n     u \\<in> worlds M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v'", "unfolding sim_def sim_r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(f u, v') \\<in> relations M' a;\n     sim_range M M' f \\<and>\n     sim_val M M' f \\<and>\n     sim_f M M' f \\<and>\n     (\\<forall>a.\n         \\<forall>u\\<in>worlds M.\n            \\<forall>v'.\n               (f u, v') \\<in> relations M' a \\<longrightarrow>\n               (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v'));\n     u \\<in> worlds M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v'", "by blast"], ["", "lemma simI[intro]:\n  \"\\<lbrakk> sim_range M M' f; sim_val M M' f; sim_f M M' f; sim_r M M' f \\<rbrakk>\n     \\<Longrightarrow> sim M M' f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sim_range M M' f; sim_val M M' f; sim_f M M' f;\n     sim_r M M' f\\<rbrakk>\n    \\<Longrightarrow> sim M M' f", "unfolding sim_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sim_range M M' f; sim_val M M' f; sim_f M M' f;\n     sim_r M M' f\\<rbrakk>\n    \\<Longrightarrow> sim_range M M' f \\<and>\n                      sim_val M M' f \\<and> sim_f M M' f \\<and> sim_r M M' f", "by simp"], ["", "text\\<open>The identity is a simulation:\\<close>"], ["", "lemma sim_id: \"kripke M \\<Longrightarrow> sim M M id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kripke M \\<Longrightarrow> sim M M id", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. kripke M \\<Longrightarrow> sim M M id", "unfolding sim_def sim_r_def sim_f_def sim_range_def sim_val_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. kripke M \\<Longrightarrow>\n    (worlds M = id ` worlds M \\<and>\n     (\\<forall>a.\n         relations M a \\<subseteq> worlds M \\<times> worlds M)) \\<and>\n    (\\<forall>u\\<in>worlds M. valuation M u = valuation M (id u)) \\<and>\n    (\\<forall>a u v.\n        (u, v) \\<in> relations M a \\<longrightarrow>\n        (id u, id v) \\<in> relations M a) \\<and>\n    (\\<forall>a.\n        \\<forall>u\\<in>worlds M.\n           \\<forall>v'.\n              (id u, v') \\<in> relations M a \\<longrightarrow>\n              (\\<exists>v. (u, v) \\<in> relations M a \\<and> id v = v'))", "by auto"], ["", "(*>*)\n\n(*>*)"], ["", "text\\<open>\n\nDue to the common knowledge modality, we need to show the simulation\nproperties lift through the transitive closure. In particular we can\nshow that forward simulation is preserved:\n\n\\<close>"], ["", "lemma sim_f_tc:\n  assumes s: \"sim M M' f\"\n  assumes uv': \"(u, v) \\<in> (\\<Union>a\\<in>as. relations M a)\\<^sup>+\"\n  shows \"(f u, f v) \\<in> (\\<Union>a\\<in>as. relations M' a)\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f u, f v) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f u, f v) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+", "using assms"], ["proof (prove)\nusing this:\n  sim M M' f\n  (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. (f u, f v) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+", "by - ( induct rule: trancl_induct[OF uv']\n       , auto dest: sim_fD intro: trancl_into_trancl )"], ["", "(*>*)"], ["", "text\\<open>\n\nReverse simulation also:\n\n\\<close>"], ["", "lemma sim_r_tc:\n  assumes M: \"kripke M\"\n  assumes s: \"sim M M' f\"\n  assumes u: \"u \\<in> worlds M\"\n  assumes fuv': \"(f u, v') \\<in> (\\<Union>a\\<in>as. relations M' a)\\<^sup>+\"\n  obtains v where \"f v = v'\" and \"(u, v) \\<in> (\\<Union>a\\<in>as. relations M a)\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume E: \"\\<And>v. \\<lbrakk>f v = v'; (u, v) \\<in> (\\<Union>a\\<in>as. relations M a)\\<^sup>+\\<rbrakk> \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  \\<lbrakk>f ?v = v';\n   (u, ?v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from fuv'"], ["proof (chain)\npicking this:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+", "have as_nempty: \"as \\<noteq> {}\""], ["proof (prove)\nusing this:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. as \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  as \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from fuv'"], ["proof (chain)\npicking this:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+", "have \"\\<exists>v. f v = v' \\<and> (u, v) \\<in> (\\<Union>a\\<in>as. relations M a)\\<^sup>+\""], ["proof (prove)\nusing this:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "proof(induct rule: trancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       (f u, y) \\<in> \\<Union> (relations M' ` as) \\<Longrightarrow>\n       \\<exists>v.\n          f v = y \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M' ` as);\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "case (base v')"], ["proof (state)\nthis:\n  (f u, v') \\<in> \\<Union> (relations M' ` as)\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       (f u, y) \\<in> \\<Union> (relations M' ` as) \\<Longrightarrow>\n       \\<exists>v.\n          f v = y \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M' ` as);\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "with u s as_nempty"], ["proof (chain)\npicking this:\n  u \\<in> worlds M\n  sim M M' f\n  as \\<noteq> {}\n  (f u, v') \\<in> \\<Union> (relations M' ` as)", "show ?case"], ["proof (prove)\nusing this:\n  u \\<in> worlds M\n  sim M M' f\n  as \\<noteq> {}\n  (f u, v') \\<in> \\<Union> (relations M' ` as)\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "by (blast dest: sim_rD)"], ["proof (state)\nthis:\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M' ` as);\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M' ` as);\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "case (step v' w')"], ["proof (state)\nthis:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+\n  (v', w') \\<in> \\<Union> (relations M' ` as)\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M' ` as);\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "hence fuv': \"(f u, v') \\<in> (\\<Union>a\\<in>as. relations M' a)\\<^sup>+\"\n      and v'w': \"(v', w') \\<in> (\\<Union>a\\<in>as. relations M' a)\""], ["proof (prove)\nusing this:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+\n  (v', w') \\<in> \\<Union> (relations M' ` as)\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+ &&&\n    (v', w') \\<in> \\<Union> (relations M' ` as)", "by fast+"], ["proof (state)\nthis:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+\n  (v', w') \\<in> \\<Union> (relations M' ` as)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M' ` as);\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "from step"], ["proof (chain)\npicking this:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+\n  (v', w') \\<in> \\<Union> (relations M' ` as)\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "obtain v where vv': \"f v = v'\"\n               and uv: \"(u, v) \\<in> (\\<Union>a\\<in>as. relations M a)\\<^sup>+\""], ["proof (prove)\nusing this:\n  (f u, v') \\<in> (\\<Union> (relations M' ` as))\\<^sup>+\n  (v', w') \\<in> \\<Union> (relations M' ` as)\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f v = v'\n  (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M' ` as);\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "from s v'w' vv' kripke_tc_rels_worlds[OF uv M]"], ["proof (chain)\npicking this:\n  sim M M' f\n  (v', w') \\<in> \\<Union> (relations M' ` as)\n  f v = v'\n  u \\<in> worlds M \\<and> v \\<in> worlds M", "obtain w where ww': \"f w = w'\"\n               and vw: \"(v, w) \\<in> (\\<Union>a\\<in>as. relations M a)\""], ["proof (prove)\nusing this:\n  sim M M' f\n  (v', w') \\<in> \\<Union> (relations M' ` as)\n  f v = v'\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>f w = w'; (v, w) \\<in> \\<Union> (relations M ` as)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: sim_rD)"], ["proof (state)\nthis:\n  f w = w'\n  (v, w) \\<in> \\<Union> (relations M ` as)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (relations M' ` as))\\<^sup>+;\n        (y, z) \\<in> \\<Union> (relations M' ` as);\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "from uv vw ww'"], ["proof (chain)\npicking this:\n  (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  (v, w) \\<in> \\<Union> (relations M ` as)\n  f w = w'", "show ?case"], ["proof (prove)\nusing this:\n  (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n  (v, w) \\<in> \\<Union> (relations M ` as)\n  f w = w'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       f v = w' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "by (blast intro: trancl_trans)"], ["proof (state)\nthis:\n  \\<exists>v.\n     f v = w' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with E"], ["proof (chain)\npicking this:\n  \\<lbrakk>f ?v = v';\n   (u, ?v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>f ?v = v';\n   (u, ?v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (relations M ` as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sim_f_trc:\n  assumes uv': \"(u, v) \\<in> (\\<Union>a. relations M a)\\<^sup>*\"\n      and s: \"sim M M' f\"\n  shows \"(f u, f v) \\<in> (\\<Union>a. relations M' a)\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f u, f v) \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "using assms"], ["proof (prove)\nusing this:\n  (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  sim M M' f\n\ngoal (1 subgoal):\n 1. (f u, f v) \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "by - ( induct rule: rtrancl_induct[OF uv']\n       , auto dest: sim_fD intro: rtrancl_into_rtrancl )"], ["", "lemma sim_r_trc:\n  assumes s: \"sim M M' f\"\n      and fuv': \"(f u, v') \\<in> (\\<Union>a. relations M' a)\\<^sup>*\"\n      and M: \"kripke M\"\n      and u: \"u \\<in> worlds M\"\n  obtains v\n    where \"f v = v'\"\n      and \"(u, v) \\<in> (\\<Union>a. relations M a)\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume E: \"\\<And>v. \\<lbrakk>f v = v'; (u, v) \\<in> (\\<Union>a. relations M a)\\<^sup>*\\<rbrakk> \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  \\<lbrakk>f ?v = v';\n   (u, ?v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from fuv'"], ["proof (chain)\npicking this:\n  (f u, v') \\<in> (\\<Union> (range (relations M')))\\<^sup>*", "have \"\\<exists>v. f v = v' \\<and> (u, v) \\<in> (\\<Union>a. relations M a)\\<^sup>*\""], ["proof (prove)\nusing this:\n  (f u, v') \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       f v = v' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "proof(induct rule: rtrancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>v.\n       f v = f u \\<and>\n       (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n 2. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M'));\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>v.\n       f v = f u \\<and>\n       (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n 2. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M'));\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v.\n       f v = f u \\<and>\n       (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>v.\n     f v = f u \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M'));\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M'));\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "case (step v' w')"], ["proof (state)\nthis:\n  (f u, v') \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n  (v', w') \\<in> \\<Union> (range (relations M'))\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M'));\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "hence fuv': \"(f u, v') \\<in> (\\<Union>a. relations M' a)\\<^sup>*\"\n      and v'w': \"(v', w') \\<in> (\\<Union>a. relations M' a)\""], ["proof (prove)\nusing this:\n  (f u, v') \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n  (v', w') \\<in> \\<Union> (range (relations M'))\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f u, v') \\<in> (\\<Union> (range (relations M')))\\<^sup>* &&&\n    (v', w') \\<in> \\<Union> (range (relations M'))", "by fast+"], ["proof (state)\nthis:\n  (f u, v') \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n  (v', w') \\<in> \\<Union> (range (relations M'))\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M'));\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "from step"], ["proof (chain)\npicking this:\n  (f u, v') \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n  (v', w') \\<in> \\<Union> (range (relations M'))\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "obtain v where vv': \"f v = v'\"\n               and uv: \"(u, v) \\<in> (\\<Union>a. relations M a)\\<^sup>*\""], ["proof (prove)\nusing this:\n  (f u, v') \\<in> (\\<Union> (range (relations M')))\\<^sup>*\n  (v', w') \\<in> \\<Union> (range (relations M'))\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f v = v'\n  (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M'));\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "from s v'w' vv' kripke_rels_trc_worlds[OF uv u M]"], ["proof (chain)\npicking this:\n  sim M M' f\n  (v', w') \\<in> \\<Union> (range (relations M'))\n  f v = v'\n  ?W = worlds M \\<Longrightarrow> v \\<in> ?W", "obtain w where ww': \"f w = w'\"\n               and vw: \"(v, w) \\<in> (\\<Union>a. relations M a)\""], ["proof (prove)\nusing this:\n  sim M M' f\n  (v', w') \\<in> \\<Union> (range (relations M'))\n  f v = v'\n  ?W = worlds M \\<Longrightarrow> v \\<in> ?W\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>f w = w';\n         (v, w) \\<in> \\<Union> (range (relations M))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: sim_rD)"], ["proof (state)\nthis:\n  f w = w'\n  (v, w) \\<in> \\<Union> (range (relations M))\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(f u, y) \\<in> (\\<Union> (range (relations M')))\\<^sup>*;\n        (y, z) \\<in> \\<Union> (range (relations M'));\n        \\<exists>v.\n           f v = y \\<and>\n           (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            f v = z \\<and>\n                            (u, v)\n                            \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "from uv vw ww'"], ["proof (chain)\npicking this:\n  (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  (v, w) \\<in> \\<Union> (range (relations M))\n  f w = w'", "show ?case"], ["proof (prove)\nusing this:\n  (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n  (v, w) \\<in> \\<Union> (range (relations M))\n  f w = w'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       f v = w' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "by (blast intro: rtrancl_trans)"], ["proof (state)\nthis:\n  \\<exists>v.\n     f v = w' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>f v = v';\n         (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with E"], ["proof (chain)\npicking this:\n  \\<lbrakk>f ?v = v';\n   (u, ?v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>f ?v = v';\n   (u, ?v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>v.\n     f v = v' \\<and> (u, v) \\<in> (\\<Union> (range (relations M)))\\<^sup>*\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sim_trc_commute:\n  assumes M: \"kripke M\"\n      and s: \"sim M M' f\"\n      and t: \"t \\<in> worlds M\"\n  shows \"f ` ((\\<Union>a. relations M a)\\<^sup>* `` {t})\n       = (\\<Union>a. relations M' a)\\<^sup>* `` {f t}\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t} =\n    (\\<Union> (range (relations M')))\\<^sup>* `` {f t}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {f t}\n 2. (\\<Union> (range (relations M')))\\<^sup>* `` {f t}\n    \\<subseteq> f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t}", "from M s"], ["proof (chain)\npicking this:\n  kripke M\n  sim M M' f", "show \"?lhs \\<subseteq> ?rhs\""], ["proof (prove)\nusing this:\n  kripke M\n  sim M M' f\n\ngoal (1 subgoal):\n 1. f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n    \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {f t}", "by (auto intro: sim_f_trc)"], ["proof (state)\nthis:\n  f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n  \\<subseteq> (\\<Union> (range (relations M')))\\<^sup>* `` {f t}\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M')))\\<^sup>* `` {f t}\n    \\<subseteq> f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M')))\\<^sup>* `` {f t}\n    \\<subseteq> f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t}", "from M s t"], ["proof (chain)\npicking this:\n  kripke M\n  sim M M' f\n  t \\<in> worlds M", "show \"?rhs \\<subseteq> ?lhs\""], ["proof (prove)\nusing this:\n  kripke M\n  sim M M' f\n  t \\<in> worlds M\n\ngoal (1 subgoal):\n 1. (\\<Union> (range (relations M')))\\<^sup>* `` {f t}\n    \\<subseteq> f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t}", "by (auto elim: sim_r_trc)"], ["proof (state)\nthis:\n  (\\<Union> (range (relations M')))\\<^sup>* `` {f t}\n  \\<subseteq> f ` (\\<Union> (range (relations M)))\\<^sup>* `` {t}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sim_kripke: \"\\<lbrakk> sim M M' f; kripke M \\<rbrakk> \\<Longrightarrow> kripke M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sim M M' f; kripke M\\<rbrakk> \\<Longrightarrow> kripke M'", "unfolding sim_def sim_range_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(worlds M' = f ` worlds M \\<and>\n              (\\<forall>a.\n                  relations M' a\n                  \\<subseteq> worlds M' \\<times> worlds M')) \\<and>\n             sim_val M M' f \\<and> sim_f M M' f \\<and> sim_r M M' f;\n     kripke M\\<rbrakk>\n    \\<Longrightarrow> kripke M'", "by (rule kripkeI, blast)"], ["", "lemma sim_S5n:\n  assumes S5n: \"S5n M\"\n      and sim: \"sim M M' f\"\n  shows \"S5n M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S5n M'", "proof(intro S5nI equivI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a. refl_on (worlds M') (relations M' a)\n 2. \\<And>a. sym (relations M' a)\n 3. \\<And>a. trans (relations M' a)", "fix a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a. refl_on (worlds M') (relations M' a)\n 2. \\<And>a. sym (relations M' a)\n 3. \\<And>a. trans (relations M' a)", "from S5n sim"], ["proof (chain)\npicking this:\n  S5n M\n  sim M M' f", "show \"refl_on (worlds M') (relations M' a)\""], ["proof (prove)\nusing this:\n  S5n M\n  sim M M' f\n\ngoal (1 subgoal):\n 1. refl_on (worlds M') (relations M' a)", "using sim_kripke S5n_kripke"], ["proof (prove)\nusing this:\n  S5n M\n  sim M M' f\n  \\<lbrakk>sim ?M ?M' ?f; kripke ?M\\<rbrakk> \\<Longrightarrow> kripke ?M'\n  S5n ?M \\<Longrightarrow> kripke ?M\n\ngoal (1 subgoal):\n 1. refl_on (worlds M') (relations M' a)", "unfolding S5n_def equiv_def sim_def sim_f_def sim_range_def"], ["proof (prove)\nusing this:\n  \\<forall>a.\n     refl_on (worlds M) (relations M a) \\<and>\n     sym (relations M a) \\<and> trans (relations M a)\n  (worlds M' = f ` worlds M \\<and>\n   (\\<forall>a.\n       relations M' a \\<subseteq> worlds M' \\<times> worlds M')) \\<and>\n  sim_val M M' f \\<and>\n  (\\<forall>a u v.\n      (u, v) \\<in> relations M a \\<longrightarrow>\n      (f u, f v) \\<in> relations M' a) \\<and>\n  sim_r M M' f\n  \\<lbrakk>(worlds ?M' = ?f ` worlds ?M \\<and>\n            (\\<forall>a.\n                relations ?M' a\n                \\<subseteq> worlds ?M' \\<times> worlds ?M')) \\<and>\n           sim_val ?M ?M' ?f \\<and>\n           (\\<forall>a u v.\n               (u, v) \\<in> relations ?M a \\<longrightarrow>\n               (?f u, ?f v) \\<in> relations ?M' a) \\<and>\n           sim_r ?M ?M' ?f;\n   kripke ?M\\<rbrakk>\n  \\<Longrightarrow> kripke ?M'\n  \\<forall>a.\n     refl_on (worlds ?M) (relations ?M a) \\<and>\n     sym (relations ?M a) \\<and> trans (relations ?M a) \\<Longrightarrow>\n  kripke ?M\n\ngoal (1 subgoal):\n 1. refl_on (worlds M') (relations M' a)", "by - (rule refl_onI, (simp, blast dest: refl_onD)+)"], ["proof (state)\nthis:\n  refl_on (worlds M') (relations M' a)\n\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "fix u v"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "assume uv: \"(u, v) \\<in> relations M' a\""], ["proof (state)\nthis:\n  (u, v) \\<in> relations M' a\n\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "from sim uv"], ["proof (chain)\npicking this:\n  sim M M' f\n  (u, v) \\<in> relations M' a", "obtain u' where uw: \"u' \\<in> worlds M\"\n                and fu: \"u = f u'\""], ["proof (prove)\nusing this:\n  sim M M' f\n  (u, v) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        \\<lbrakk>u' \\<in> worlds M; u = f u'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sim_def sim_range_def"], ["proof (prove)\nusing this:\n  (worlds M' = f ` worlds M \\<and>\n   (\\<forall>a.\n       relations M' a \\<subseteq> worlds M' \\<times> worlds M')) \\<and>\n  sim_val M M' f \\<and> sim_f M M' f \\<and> sim_r M M' f\n  (u, v) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        \\<lbrakk>u' \\<in> worlds M; u = f u'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by bestsimp"], ["proof (state)\nthis:\n  u' \\<in> worlds M\n  u = f u'\n\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "from sim uv fu uw"], ["proof (chain)\npicking this:\n  sim M M' f\n  (u, v) \\<in> relations M' a\n  u = f u'\n  u' \\<in> worlds M", "obtain v' where u'v': \"(u', v') \\<in> relations M a\"\n                and fv: \"v = f v'\""], ["proof (prove)\nusing this:\n  sim M M' f\n  (u, v) \\<in> relations M' a\n  u = f u'\n  u' \\<in> worlds M\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>(u', v') \\<in> relations M a; v = f v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sim_def sim_r_def sim_range_def"], ["proof (prove)\nusing this:\n  (worlds M' = f ` worlds M \\<and>\n   (\\<forall>a.\n       relations M' a \\<subseteq> worlds M' \\<times> worlds M')) \\<and>\n  sim_val M M' f \\<and>\n  sim_f M M' f \\<and>\n  (\\<forall>a.\n      \\<forall>u\\<in>worlds M.\n         \\<forall>v'.\n            (f u, v') \\<in> relations M' a \\<longrightarrow>\n            (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v'))\n  (u, v) \\<in> relations M' a\n  u = f u'\n  u' \\<in> worlds M\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>(u', v') \\<in> relations M a; v = f v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  (u', v') \\<in> relations M a\n  v = f v'\n\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "from S5n u'v'"], ["proof (chain)\npicking this:\n  S5n M\n  (u', v') \\<in> relations M a", "have \"(v', u') \\<in> relations M a\""], ["proof (prove)\nusing this:\n  S5n M\n  (u', v') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (v', u') \\<in> relations M a", "unfolding S5n_def equiv_def"], ["proof (prove)\nusing this:\n  \\<forall>a.\n     refl_on (worlds M) (relations M a) \\<and>\n     sym (relations M a) \\<and> trans (relations M a)\n  (u', v') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (v', u') \\<in> relations M a", "by (blast dest: symD)"], ["proof (state)\nthis:\n  (v', u') \\<in> relations M a\n\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "with sim fu fv"], ["proof (chain)\npicking this:\n  sim M M' f\n  u = f u'\n  v = f v'\n  (v', u') \\<in> relations M a", "have \"(v, u) \\<in> relations M' a\""], ["proof (prove)\nusing this:\n  sim M M' f\n  u = f u'\n  v = f v'\n  (v', u') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (v, u) \\<in> relations M' a", "unfolding sim_def sim_f_def"], ["proof (prove)\nusing this:\n  sim_range M M' f \\<and>\n  sim_val M M' f \\<and>\n  (\\<forall>a u v.\n      (u, v) \\<in> relations M a \\<longrightarrow>\n      (f u, f v) \\<in> relations M' a) \\<and>\n  sim_r M M' f\n  u = f u'\n  v = f v'\n  (v', u') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (v, u) \\<in> relations M' a", "by simp"], ["proof (state)\nthis:\n  (v, u) \\<in> relations M' a\n\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "}"], ["proof (state)\nthis:\n  (?u2, ?v2) \\<in> relations M' a \\<Longrightarrow>\n  (?v2, ?u2) \\<in> relations M' a\n\ngoal (2 subgoals):\n 1. \\<And>a. sym (relations M' a)\n 2. \\<And>a. trans (relations M' a)", "thus \"sym (relations M' a)\""], ["proof (prove)\nusing this:\n  (?u2, ?v2) \\<in> relations M' a \\<Longrightarrow>\n  (?v2, ?u2) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. sym (relations M' a)", "by (blast intro: symI)"], ["proof (state)\nthis:\n  sym (relations M' a)\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "assume xy: \"(x, y) \\<in> relations M' a\"\n       and yz: \"(y, z) \\<in> relations M' a\""], ["proof (state)\nthis:\n  (x, y) \\<in> relations M' a\n  (y, z) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "from sim xy"], ["proof (chain)\npicking this:\n  sim M M' f\n  (x, y) \\<in> relations M' a", "obtain x' where xw: \"x' \\<in> worlds M\"\n                and fx: \"x = f x'\""], ["proof (prove)\nusing this:\n  sim M M' f\n  (x, y) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> worlds M; x = f x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sim_def sim_range_def"], ["proof (prove)\nusing this:\n  (worlds M' = f ` worlds M \\<and>\n   (\\<forall>a.\n       relations M' a \\<subseteq> worlds M' \\<times> worlds M')) \\<and>\n  sim_val M M' f \\<and> sim_f M M' f \\<and> sim_r M M' f\n  (x, y) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> worlds M; x = f x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by bestsimp"], ["proof (state)\nthis:\n  x' \\<in> worlds M\n  x = f x'\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "from sim xy fx xw"], ["proof (chain)\npicking this:\n  sim M M' f\n  (x, y) \\<in> relations M' a\n  x = f x'\n  x' \\<in> worlds M", "obtain y' where x'y': \"(x', y') \\<in> relations M a\"\n                and fy: \"y = f y'\""], ["proof (prove)\nusing this:\n  sim M M' f\n  (x, y) \\<in> relations M' a\n  x = f x'\n  x' \\<in> worlds M\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        \\<lbrakk>(x', y') \\<in> relations M a; y = f y'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sim_def sim_r_def sim_range_def"], ["proof (prove)\nusing this:\n  (worlds M' = f ` worlds M \\<and>\n   (\\<forall>a.\n       relations M' a \\<subseteq> worlds M' \\<times> worlds M')) \\<and>\n  sim_val M M' f \\<and>\n  sim_f M M' f \\<and>\n  (\\<forall>a.\n      \\<forall>u\\<in>worlds M.\n         \\<forall>v'.\n            (f u, v') \\<in> relations M' a \\<longrightarrow>\n            (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v'))\n  (x, y) \\<in> relations M' a\n  x = f x'\n  x' \\<in> worlds M\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        \\<lbrakk>(x', y') \\<in> relations M a; y = f y'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  (x', y') \\<in> relations M a\n  y = f y'\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "from S5n sim yz fy x'y'"], ["proof (chain)\npicking this:\n  S5n M\n  sim M M' f\n  (y, z) \\<in> relations M' a\n  y = f y'\n  (x', y') \\<in> relations M a", "obtain z' where y'z': \"(y', z') \\<in> relations M a\"\n                and fz: \"z = f z'\""], ["proof (prove)\nusing this:\n  S5n M\n  sim M M' f\n  (y, z) \\<in> relations M' a\n  y = f y'\n  (x', y') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (\\<And>z'.\n        \\<lbrakk>(y', z') \\<in> relations M a; z = f z'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sim_def sim_r_def sim_range_def"], ["proof (prove)\nusing this:\n  S5n M\n  (worlds M' = f ` worlds M \\<and>\n   (\\<forall>a.\n       relations M' a \\<subseteq> worlds M' \\<times> worlds M')) \\<and>\n  sim_val M M' f \\<and>\n  sim_f M M' f \\<and>\n  (\\<forall>a.\n      \\<forall>u\\<in>worlds M.\n         \\<forall>v'.\n            (f u, v') \\<in> relations M' a \\<longrightarrow>\n            (\\<exists>v. (u, v) \\<in> relations M a \\<and> f v = v'))\n  (y, z) \\<in> relations M' a\n  y = f y'\n  (x', y') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (\\<And>z'.\n        \\<lbrakk>(y', z') \\<in> relations M a; z = f z'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  (y', z') \\<in> relations M a\n  z = f z'\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "from S5n x'y' y'z'"], ["proof (chain)\npicking this:\n  S5n M\n  (x', y') \\<in> relations M a\n  (y', z') \\<in> relations M a", "have \"(x', z') \\<in> relations M a\""], ["proof (prove)\nusing this:\n  S5n M\n  (x', y') \\<in> relations M a\n  (y', z') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (x', z') \\<in> relations M a", "unfolding S5n_def equiv_def"], ["proof (prove)\nusing this:\n  \\<forall>a.\n     refl_on (worlds M) (relations M a) \\<and>\n     sym (relations M a) \\<and> trans (relations M a)\n  (x', y') \\<in> relations M a\n  (y', z') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (x', z') \\<in> relations M a", "by (blast dest: transD)"], ["proof (state)\nthis:\n  (x', z') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "with sim fx fy fz"], ["proof (chain)\npicking this:\n  sim M M' f\n  x = f x'\n  y = f y'\n  z = f z'\n  (x', z') \\<in> relations M a", "have \"(x, z) \\<in> relations M' a\""], ["proof (prove)\nusing this:\n  sim M M' f\n  x = f x'\n  y = f y'\n  z = f z'\n  (x', z') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> relations M' a", "unfolding sim_def sim_f_def"], ["proof (prove)\nusing this:\n  sim_range M M' f \\<and>\n  sim_val M M' f \\<and>\n  (\\<forall>a u v.\n      (u, v) \\<in> relations M a \\<longrightarrow>\n      (f u, f v) \\<in> relations M' a) \\<and>\n  sim_r M M' f\n  x = f x'\n  y = f y'\n  z = f z'\n  (x', z') \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> relations M' a", "by simp"], ["proof (state)\nthis:\n  (x, z) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>(?x2, ?y2) \\<in> relations M' a;\n   (?y2, ?z2) \\<in> relations M' a\\<rbrakk>\n  \\<Longrightarrow> (?x2, ?z2) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. \\<And>a. trans (relations M' a)", "thus \"trans (relations M' a)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x2, ?y2) \\<in> relations M' a;\n   (?y2, ?z2) \\<in> relations M' a\\<rbrakk>\n  \\<Longrightarrow> (?x2, ?z2) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. trans (relations M' a)", "by (blast intro: transI)"], ["proof (state)\nthis:\n  trans (relations M' a)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text\\<open>\n\nFinally we establish the key property of simulations, that they\npreserve the satisfaction of all formulas in the following way:\n\n\\<close>"], ["", "lemma sim_semantic_equivalence:\n  assumes M: \"kripke M\"\n  assumes s: \"sim M M' f\"\n  assumes u: \"u \\<in> worlds M\"\n  shows \"M, u \\<Turnstile> \\<phi> \\<longleftrightarrow> M', f u \\<Turnstile> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>", "using u"], ["proof (prove)\nusing this:\n  u \\<in> worlds M\n\ngoal (1 subgoal):\n 1. M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>", "proof(induct \\<phi> arbitrary: u)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x u.\n       u \\<in> worlds M \\<Longrightarrow>\n       M, u \\<Turnstile> Kprop x = M', f u \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Knot \\<phi> =\n                         M', f u \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi>1 = M', f u \\<Turnstile> \\<phi>1;\n        \\<And>u.\n           u \\<in> worlds M \\<Longrightarrow>\n           M, u \\<Turnstile> \\<phi>2 = M', f u \\<Turnstile> \\<phi>2;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         M', f u \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi>\n 5. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "case (Kknows a \\<psi> u)"], ["proof (state)\nthis:\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n\ngoal (5 subgoals):\n 1. \\<And>x u.\n       u \\<in> worlds M \\<Longrightarrow>\n       M, u \\<Turnstile> Kprop x = M', f u \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Knot \\<phi> =\n                         M', f u \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi>1 = M', f u \\<Turnstile> \\<phi>1;\n        \\<And>u.\n           u \\<in> worlds M \\<Longrightarrow>\n           M, u \\<Turnstile> \\<phi>2 = M', f u \\<Turnstile> \\<phi>2;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         M', f u \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi>\n 5. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "hence u: \"u \\<in> worlds M\""], ["proof (prove)\nusing this:\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n\ngoal (1 subgoal):\n 1. u \\<in> worlds M", "by fast"], ["proof (state)\nthis:\n  u \\<in> worlds M\n\ngoal (5 subgoals):\n 1. \\<And>x u.\n       u \\<in> worlds M \\<Longrightarrow>\n       M, u \\<Turnstile> Kprop x = M', f u \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Knot \\<phi> =\n                         M', f u \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi>1 = M', f u \\<Turnstile> \\<phi>1;\n        \\<And>u.\n           u \\<in> worlds M \\<Longrightarrow>\n           M, u \\<Turnstile> \\<phi>2 = M', f u \\<Turnstile> \\<phi>2;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         M', f u \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>K\\<^sub>x1a \\<phi>\n 5. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> =\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "assume lhs: \"M, u \\<Turnstile> Kknows a \\<psi>\""], ["proof (state)\nthis:\n  M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "{"], ["proof (state)\nthis:\n  M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "fix v'"], ["proof (state)\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "assume \"(f u, v') \\<in> relations M' a\""], ["proof (state)\nthis:\n  (f u, v') \\<in> relations M' a\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "with s u"], ["proof (chain)\npicking this:\n  sim M M' f\n  u \\<in> worlds M\n  (f u, v') \\<in> relations M' a", "obtain v where uv:  \"(u, v) \\<in> relations M a\"\n                          and vv': \"f v = v'\""], ["proof (prove)\nusing this:\n  sim M M' f\n  u \\<in> worlds M\n  (f u, v') \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>(u, v) \\<in> relations M a; f v = v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: sim_rD)"], ["proof (state)\nthis:\n  (u, v) \\<in> relations M a\n  f v = v'\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "from lhs uv"], ["proof (chain)\npicking this:\n  M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n  (u, v) \\<in> relations M a", "have \"M, v \\<Turnstile> \\<psi>\""], ["proof (prove)\nusing this:\n  M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n  (u, v) \\<in> relations M a\n\ngoal (1 subgoal):\n 1. M, v \\<Turnstile> \\<psi>", "by simp"], ["proof (state)\nthis:\n  M, v \\<Turnstile> \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "with kripke_rels_worlds[OF uv M] vv' Kknows"], ["proof (chain)\npicking this:\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n  f v = v'\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n  M, v \\<Turnstile> \\<psi>", "have \"M', v' \\<Turnstile> \\<psi>\""], ["proof (prove)\nusing this:\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n  f v = v'\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n  M, v \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', v' \\<Turnstile> \\<psi>", "by auto"], ["proof (state)\nthis:\n  M', v' \\<Turnstile> \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "}"], ["proof (state)\nthis:\n  (f u, ?v'2) \\<in> relations M' a \\<Longrightarrow>\n  M', ?v'2 \\<Turnstile> \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "thus \"M', f u \\<Turnstile> Kknows a \\<psi>\""], ["proof (prove)\nusing this:\n  (f u, ?v'2) \\<in> relations M' a \\<Longrightarrow>\n  M', ?v'2 \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "by simp"], ["proof (state)\nthis:\n  M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "assume rhs: \"M', f u \\<Turnstile> Kknows a \\<psi>\""], ["proof (state)\nthis:\n  M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "{"], ["proof (state)\nthis:\n  M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "assume uv: \"(u, v) \\<in> relations M a\""], ["proof (state)\nthis:\n  (u, v) \\<in> relations M a\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "with s"], ["proof (chain)\npicking this:\n  sim M M' f\n  (u, v) \\<in> relations M a", "have \"(f u, f v) \\<in> relations M' a\""], ["proof (prove)\nusing this:\n  sim M M' f\n  (u, v) \\<in> relations M a\n\ngoal (1 subgoal):\n 1. (f u, f v) \\<in> relations M' a", "by (blast dest: sim_fD)"], ["proof (state)\nthis:\n  (f u, f v) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "with rhs"], ["proof (chain)\npicking this:\n  M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n  (f u, f v) \\<in> relations M' a", "have \"M', f v \\<Turnstile> \\<psi>\""], ["proof (prove)\nusing this:\n  M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n  (f u, f v) \\<in> relations M' a\n\ngoal (1 subgoal):\n 1. M', f v \\<Turnstile> \\<psi>", "by simp"], ["proof (state)\nthis:\n  M', f v \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "with kripke_rels_worlds[OF uv M] Kknows s"], ["proof (chain)\npicking this:\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n  sim M M' f\n  M', f v \\<Turnstile> \\<psi>", "have \"M, v \\<Turnstile> \\<psi>\""], ["proof (prove)\nusing this:\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n  sim M M' f\n  M', f v \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M, v \\<Turnstile> \\<psi>", "by auto"], ["proof (state)\nthis:\n  M, v \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "}"], ["proof (state)\nthis:\n  (u, ?v2) \\<in> relations M a \\<Longrightarrow> M, ?v2 \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "thus \"M, u \\<Turnstile> Kknows a \\<psi>\""], ["proof (prove)\nusing this:\n  (u, ?v2) \\<in> relations M a \\<Longrightarrow> M, ?v2 \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>", "by simp"], ["proof (state)\nthis:\n  M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M, u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi> =\n  M', f u \\<Turnstile> \\<^bold>K\\<^sub>a \\<psi>\n\ngoal (4 subgoals):\n 1. \\<And>x u.\n       u \\<in> worlds M \\<Longrightarrow>\n       M, u \\<Turnstile> Kprop x = M', f u \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Knot \\<phi> =\n                         M', f u \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi>1 = M', f u \\<Turnstile> \\<phi>1;\n        \\<And>u.\n           u \\<in> worlds M \\<Longrightarrow>\n           M, u \\<Turnstile> \\<phi>2 = M', f u \\<Turnstile> \\<phi>2;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         M', f u \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x u.\n       u \\<in> worlds M \\<Longrightarrow>\n       M, u \\<Turnstile> Kprop x = M', f u \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Knot \\<phi> =\n                         M', f u \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi>1 = M', f u \\<Turnstile> \\<phi>1;\n        \\<And>u.\n           u \\<in> worlds M \\<Longrightarrow>\n           M, u \\<Turnstile> \\<phi>2 = M', f u \\<Turnstile> \\<phi>2;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         M', f u \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "case (Kcknows as \\<psi>)"], ["proof (state)\nthis:\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n\ngoal (4 subgoals):\n 1. \\<And>x u.\n       u \\<in> worlds M \\<Longrightarrow>\n       M, u \\<Turnstile> Kprop x = M', f u \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Knot \\<phi> =\n                         M', f u \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi>1 = M', f u \\<Turnstile> \\<phi>1;\n        \\<And>u.\n           u \\<in> worlds M \\<Longrightarrow>\n           M, u \\<Turnstile> \\<phi>2 = M', f u \\<Turnstile> \\<phi>2;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         M', f u \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "hence u: \"u \\<in> worlds M\""], ["proof (prove)\nusing this:\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n\ngoal (1 subgoal):\n 1. u \\<in> worlds M", "by fast"], ["proof (state)\nthis:\n  u \\<in> worlds M\n\ngoal (4 subgoals):\n 1. \\<And>x u.\n       u \\<in> worlds M \\<Longrightarrow>\n       M, u \\<Turnstile> Kprop x = M', f u \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Knot \\<phi> =\n                         M', f u \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi>1 = M', f u \\<Turnstile> \\<phi>1;\n        \\<And>u.\n           u \\<in> worlds M \\<Longrightarrow>\n           M, u \\<Turnstile> \\<phi>2 = M', f u \\<Turnstile> \\<phi>2;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         M', f u \\<Turnstile> Kand \\<phi>1 \\<phi>2\n 4. \\<And>x1a \\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi> =\n                         M', f u \\<Turnstile> \\<^bold>C\\<^bsub>x1a\\<^esub> \\<phi>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> =\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "assume lhs: \"M, u \\<Turnstile> Kcknows as \\<psi>\""], ["proof (state)\nthis:\n  M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "{"], ["proof (state)\nthis:\n  M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "fix v'"], ["proof (state)\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "assume \"(f u, v') \\<in> (\\<Union>x\\<in>set as. relations M' x)\\<^sup>+\""], ["proof (state)\nthis:\n  (f u, v') \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "with M s u"], ["proof (chain)\npicking this:\n  kripke M\n  sim M M' f\n  u \\<in> worlds M\n  (f u, v') \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+", "obtain v where uv:  \"(u, v) \\<in> (\\<Union>x\\<in>set as. relations M x)\\<^sup>+\"\n                and vv': \"f v = v'\""], ["proof (prove)\nusing this:\n  kripke M\n  sim M M' f\n  u \\<in> worlds M\n  (f u, v') \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>(u, v) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+;\n         f v = v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast intro: sim_r_tc)"], ["proof (state)\nthis:\n  (u, v) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+\n  f v = v'\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "from uv lhs"], ["proof (chain)\npicking this:\n  (u, v) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+\n  M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "have \"M, v \\<Turnstile> \\<psi>\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+\n  M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal (1 subgoal):\n 1. M, v \\<Turnstile> \\<psi>", "by simp"], ["proof (state)\nthis:\n  M, v \\<Turnstile> \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "with kripke_tc_rels_worlds[OF uv M] vv' Kcknows"], ["proof (chain)\npicking this:\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n  f v = v'\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n  M, v \\<Turnstile> \\<psi>", "have \"M', v' \\<Turnstile> \\<psi>\""], ["proof (prove)\nusing this:\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n  f v = v'\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n  M, v \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', v' \\<Turnstile> \\<psi>", "by auto"], ["proof (state)\nthis:\n  M', v' \\<Turnstile> \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "}"], ["proof (state)\nthis:\n  (f u, ?v'2)\n  \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+ \\<Longrightarrow>\n  M', ?v'2 \\<Turnstile> \\<psi>\n\ngoal (2 subgoals):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n 2. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "thus \"M', f u \\<Turnstile> Kcknows as \\<psi>\""], ["proof (prove)\nusing this:\n  (f u, ?v'2)\n  \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+ \\<Longrightarrow>\n  M', ?v'2 \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "by simp"], ["proof (state)\nthis:\n  M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "assume rhs: \"M', f u \\<Turnstile> Kcknows as \\<psi>\""], ["proof (state)\nthis:\n  M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "{"], ["proof (state)\nthis:\n  M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "assume uv: \"(u, v) \\<in> (\\<Union>x\\<in>set as. relations M x)\\<^sup>+\""], ["proof (state)\nthis:\n  (u, v) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "with s"], ["proof (chain)\npicking this:\n  sim M M' f\n  (u, v) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+", "have \"(f u, f v) \\<in> (\\<Union>x\\<in>set as. relations M' x)\\<^sup>+\""], ["proof (prove)\nusing this:\n  sim M M' f\n  (u, v) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. (f u, f v) \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+", "by (blast dest: sim_f_tc)"], ["proof (state)\nthis:\n  (f u, f v) \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "with rhs"], ["proof (chain)\npicking this:\n  M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n  (f u, f v) \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+", "have \"M', f v \\<Turnstile> \\<psi>\""], ["proof (prove)\nusing this:\n  M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n  (f u, f v) \\<in> (\\<Union> (relations M' ` set as))\\<^sup>+\n\ngoal (1 subgoal):\n 1. M', f v \\<Turnstile> \\<psi>", "by simp"], ["proof (state)\nthis:\n  M', f v \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "with kripke_tc_rels_worlds[OF uv M] Kcknows s"], ["proof (chain)\npicking this:\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n  sim M M' f\n  M', f v \\<Turnstile> \\<psi>", "have \"M, v \\<Turnstile> \\<psi>\""], ["proof (prove)\nusing this:\n  u \\<in> worlds M \\<and> v \\<in> worlds M\n  ?u \\<in> worlds M \\<Longrightarrow>\n  M, ?u \\<Turnstile> \\<psi> = M', f ?u \\<Turnstile> \\<psi>\n  u \\<in> worlds M\n  sim M M' f\n  M', f v \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M, v \\<Turnstile> \\<psi>", "by auto"], ["proof (state)\nthis:\n  M, v \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "}"], ["proof (state)\nthis:\n  (u, ?v2) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+ \\<Longrightarrow>\n  M, ?v2 \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> \\<Longrightarrow>\n    M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "thus \"M, u \\<Turnstile> Kcknows as \\<psi>\""], ["proof (prove)\nusing this:\n  (u, ?v2) \\<in> (\\<Union> (relations M ` set as))\\<^sup>+ \\<Longrightarrow>\n  M, ?v2 \\<Turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>", "by simp"], ["proof (state)\nthis:\n  M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M, u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi> =\n  M', f u \\<Turnstile> \\<^bold>C\\<^bsub>as\\<^esub> \\<psi>\n\ngoal (3 subgoals):\n 1. \\<And>x u.\n       u \\<in> worlds M \\<Longrightarrow>\n       M, u \\<Turnstile> Kprop x = M', f u \\<Turnstile> Kprop x\n 2. \\<And>\\<phi> u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi> = M', f u \\<Turnstile> \\<phi>;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Knot \\<phi> =\n                         M', f u \\<Turnstile> Knot \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 u.\n       \\<lbrakk>\\<And>u.\n                   u \\<in> worlds M \\<Longrightarrow>\n                   M, u \\<Turnstile> \\<phi>1 = M', f u \\<Turnstile> \\<phi>1;\n        \\<And>u.\n           u \\<in> worlds M \\<Longrightarrow>\n           M, u \\<Turnstile> \\<phi>2 = M', f u \\<Turnstile> \\<phi>2;\n        u \\<in> worlds M\\<rbrakk>\n       \\<Longrightarrow> M, u \\<Turnstile> Kand \\<phi>1 \\<phi>2 =\n                         M', f u \\<Turnstile> Kand \\<phi>1 \\<phi>2", "qed (insert s,\n     auto simp add: sim_range_def sim_def sim_val_def)"], ["", "(*>*)"], ["", "text\\<open>\n\nThe proof is by structural induction over the formula @{term \"\\<phi>\"}. The\nknowledge cases appeal to our two simulation preservation lemmas.\n\n\\citet{DBLP:journals/toplas/Sangiorgi09} surveys the history of\np-morphisms and the related concept of \\emph{bisimulation}.\n\nThis is all we need to know about Kripke structures.\n\n\\<close>"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}