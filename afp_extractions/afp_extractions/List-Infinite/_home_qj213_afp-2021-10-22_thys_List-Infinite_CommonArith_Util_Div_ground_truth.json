{"file_name": "/home/qj213/afp-2021-10-22/thys/List-Infinite/CommonArith/Util_Div.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/List-Infinite", "problem_names": ["lemma mod_less_dividend: \"\\<lbrakk> 0 < m; m \\<le> n \\<rbrakk> \\<Longrightarrow> n mod m < (n::nat)\"", "lemmas mod_le_dividend = mod_less_eq_dividend", "lemma diff_mod_le: \"(t - r) mod m \\<le> (t::nat)\"", "lemmas div_mult_cancel = minus_mod_eq_div_mult [symmetric]", "lemma mod_0_div_mult_cancel: \"(n mod (m::nat) = 0) = (n div m * m = n)\"", "lemma div_mult_le: \"(n::nat) div m * m \\<le> n\"", "lemma less_div_Suc_mult: \"0 < (m::nat) \\<Longrightarrow> n < Suc (n div m) * m\"", "lemma nat_ge2_conv: \"((2::nat) \\<le> n) = (n \\<noteq> 0 \\<and> n \\<noteq> 1)\"", "lemma Suc0_mod: \"m \\<noteq> Suc 0 \\<Longrightarrow> Suc 0 mod m = Suc 0\"", "lemma mod_Suc_conv: \"\n  ((Suc a) mod m = (Suc b) mod m) = (a mod m = b mod m)\"", "lemma mod_Suc': \"\n  0 < n \\<Longrightarrow> Suc m mod n = (if m mod n < n - Suc 0 then Suc (m mod n) else 0)\"", "lemma mod_add:\"\n  ((a + k) mod m = (b + k) mod m) =\n  ((a::nat) mod m = b mod m)\"", "lemma mod_sub_eq_mod_0_conv: \"\n  a + b \\<le> (n::nat) \\<Longrightarrow>\n  ((n - a) mod m = b mod m) = ((n - (a + b)) mod m = 0)\"", "lemma mod_sub_eq_mod_swap: \"\n  \\<lbrakk> a \\<le> (n::nat); b \\<le> n \\<rbrakk> \\<Longrightarrow>\n  ((n - a) mod m = b mod m) = ((n - b) mod m = a mod m)\"", "lemma le_mod_greater_imp_div_less: \"\n  \\<lbrakk> a \\<le> (b::nat); a mod m > b mod m \\<rbrakk> \\<Longrightarrow> a div m < b div m\"", "lemma less_mod_ge_imp_div_less: \"\\<lbrakk> a < (b::nat); a mod m \\<ge> b mod m \\<rbrakk> \\<Longrightarrow> a div m < b div m\"", "lemma mod_diff_right_eq: \"\n  (a::nat) \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m\"", "lemma mod_eq_imp_diff_mod_eq2: \"\n  \\<lbrakk> x mod m = y mod m; (t::nat) \\<le> x; t \\<le> y \\<rbrakk> \\<Longrightarrow>\n  (x - t) mod m = (y - t) mod m\"", "lemma divisor_add_diff_mod_if: \"\n  (m + b mod m - a mod m) mod (m::nat)= (\n  if a mod m \\<le> b mod m\n  then (b mod m - a mod m)\n  else (m + b mod m - a mod m))\"", "lemma mod_add_mod_if: \"\n  (a mod m + b mod m) mod (m::nat)= (\n  if a mod m + b mod m < m\n  then a mod m + b mod m\n  else a mod m + b mod m - m)\"", "lemma mod_add1_eq_if: \"\n  (a + b) mod (m::nat) = (\n  if (a mod m + b mod m < m) then a mod m + b mod m\n  else a mod m + b mod m - m)\"", "lemma mod_add_eq_mod_conv: \"0 < (m::nat) \\<Longrightarrow>\n  ((x + a) mod m = b mod m ) =\n  (x mod m = (m + b mod m - a mod m) mod m)\"", "lemma mod_diff1_eq: \"\n  (a::nat) \\<le> b \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m\"", "lemma mod_diff_self1: \"\n  0 < (n::nat) \\<Longrightarrow> (m - n) mod m = m - n\"", "lemma mod_diff_self2: \"\n  m \\<le> (n::nat) \\<Longrightarrow> (n - m) mod m = n mod m\"", "lemma mod_diff_mult_self1: \"\n  k * m \\<le> (n::nat) \\<Longrightarrow> (n - k * m) mod m = n mod m\"", "lemma mod_diff_mult_self2: \"\n  m * k \\<le> (n::nat) \\<Longrightarrow> (n - m * k) mod m = n mod m\"", "lemma div_diff_self1: \"0 < (n::nat) \\<Longrightarrow> (m - n) div m = 0\"", "lemma div_diff_self2: \"(n - m) div m = n div m - Suc 0\"", "lemma div_diff_mult_self1: \"\n  (n - k * m) div m = n div m - (k::nat)\"", "lemma div_diff_mult_self2: \"\n  (n - m * k) div m = n div m - (k::nat)\"", "lemma mod_eq_imp_diff_mod_0:\"\n  (a::nat) mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0\"\n  (is \"?P \\<Longrightarrow> ?Q\")", "lemma mod_neq_imp_diff_mod_neq0:\"\n  \\<lbrakk> (a::nat) mod m \\<noteq> b mod m; a \\<le> b \\<rbrakk> \\<Longrightarrow> 0 < (b - a) mod m\"", "lemma diff_mod_0_imp_mod_eq:\"\n  \\<lbrakk> (b - a) mod m = 0; a \\<le> b \\<rbrakk> \\<Longrightarrow> (a::nat) mod m = b mod m\"", "lemma mod_eq_diff_mod_0_conv: \"\n  a \\<le> (b::nat) \\<Longrightarrow> (a mod m = b mod m) = ((b - a) mod m = 0)\"", "lemma zmod_eq_imp_diff_mod_0:\n  \"a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0\" for a b m :: int", "lemmas int_mod_distrib = zmod_int", "lemma zdiff_mod_0_imp_mod_eq__pos:\"\n  \\<lbrakk> (b - a) mod m = 0; 0 < (m::int) \\<rbrakk> \\<Longrightarrow> a mod m = b mod m\"\n  (is \"\\<lbrakk> ?P; ?Pm \\<rbrakk> \\<Longrightarrow> ?Q\")", "lemma zmod_zminus_eq_conv_pos: \"\n  0 < (m::int) \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)\"", "lemma zmod_zminus_eq_conv: \"\n  ((a::int) mod - m = b mod - m) = (a mod m = b mod m)\"", "lemma zdiff_mod_0_imp_mod_eq:\"\n  (b - a) mod m = 0 \\<Longrightarrow> (a::int) mod m = b mod m\"", "lemma zmod_eq_diff_mod_0_conv: \"\n  ((a::int) mod m = b mod m) = ((b - a) mod m = 0)\"", "lemma \"\\<not>(\\<exists>(a::int) b m. (b - a) mod m = 0 \\<and> a mod m \\<noteq> b mod m)\"", "lemma \"\\<exists>(a::nat) b m. (b - a) mod m = 0 \\<and> a mod m \\<noteq> b mod m\"", "lemma zmult_div_leq_mono:\"\n  \\<lbrakk> (0::int) \\<le> x; a \\<le> b; 0 < d \\<rbrakk> \\<Longrightarrow> x * a div d \\<le> x * b div d\"", "lemma zmult_div_leq_mono_neg:\"\n  \\<lbrakk> x \\<le> (0::int); a \\<le> b; 0 < d \\<rbrakk> \\<Longrightarrow> x * b div d \\<le> x * a div d\"", "lemma zmult_div_pos_le:\"\n  \\<lbrakk> (0::int) \\<le> a; 0 \\<le> b; b \\<le> c \\<rbrakk> \\<Longrightarrow> a * b div c \\<le> a\"", "lemma zmult_div_neg_le:\"\n  \\<lbrakk> a \\<le> (0::int); 0 < c; c \\<le> b \\<rbrakk> \\<Longrightarrow> a * b div c \\<le> a\"", "lemma zmult_div_ge_0:\"\\<lbrakk> (0::int) \\<le> x; 0 \\<le> a; 0 < c \\<rbrakk> \\<Longrightarrow> 0 \\<le> a * x div c\"", "lemma zmult_div_abs_ge: \"\n  \\<lbrakk> (0::int) \\<le> b; b \\<le> b'; 0 \\<le> a; 0 < c\\<rbrakk> \\<Longrightarrow>\n  \\<bar>a * b div c\\<bar> \\<le> \\<bar>a * b' div c\\<bar>\"", "lemma zmult_div_plus_abs_ge: \"\n  \\<lbrakk> (0::int) \\<le> b; b \\<le> b'; 0 \\<le> a; 0 < c \\<rbrakk> \\<Longrightarrow>\n  \\<bar>a * b div c + a\\<bar> \\<le> \\<bar>a * b' div c + a\\<bar>\"", "lemma less_mod_eq_imp_add_divisor_le: \"\n  \\<lbrakk> (x::nat) < y; x mod m = y mod m \\<rbrakk> \\<Longrightarrow> x + m \\<le> y\"", "lemma less_div_imp_mult_add_divisor_le: \"\n  (x::nat) < n div m \\<Longrightarrow> x * m + m \\<le> n\"", "lemma mod_add_eq_imp_mod_0: \"\n  ((n + k) mod (m::nat) = n mod m) = (k mod m = 0)\"", "lemma between_imp_mod_between: \"\n  \\<lbrakk> b < (m::nat); m * k + a \\<le> n; n \\<le> m * k + b \\<rbrakk> \\<Longrightarrow>\n  a \\<le> n mod m \\<and> n mod m \\<le> b\"", "lemma le_less_imp_div: \"\n  \\<lbrakk> k * m \\<le> n; n < Suc k * m \\<rbrakk> \\<Longrightarrow> n div m = k\"", "lemma div_imp_le_less: \"\n  \\<lbrakk> n div m = k; 0 < m \\<rbrakk> \\<Longrightarrow> k * m \\<le> n \\<and> n < Suc k * m\"", "lemma div_le_mod_le_imp_le: \"\n  \\<lbrakk> (a::nat) div m \\<le> b div m; a mod m \\<le> b mod m \\<rbrakk> \\<Longrightarrow> a \\<le> b\"", "lemma le_mod_add_eq_imp_add_mod_le: \"\n  \\<lbrakk> a \\<le> b; (a + k) mod m = (b::nat) mod m \\<rbrakk> \\<Longrightarrow> a + k mod m \\<le> b\"", "lemma mod_0_imp_mod_mult_right_0: \"\n  n mod m = (0::nat) \\<Longrightarrow> n * k mod m = 0\"", "lemma mod_0_imp_mod_mult_left_0: \"\n  n mod m = (0::nat) \\<Longrightarrow> k * n mod m = 0\"", "lemma mod_0_imp_div_mult_left_eq: \"\n  n mod m = (0::nat) \\<Longrightarrow> k * n div m = k * (n div m)\"", "lemma mod_0_imp_div_mult_right_eq: \"\n  n mod m = (0::nat) \\<Longrightarrow> n * k div m = k * (n div m)\"", "lemma mod_0_imp_mod_factor_0_left: \"\n  n mod (m * m') = (0::nat) \\<Longrightarrow> n mod m = 0\"", "lemma mod_0_imp_mod_factor_0_right: \"\n  n mod (m * m') = (0::nat) \\<Longrightarrow> n mod m' = 0\"", "lemma mod_eq_mult_distrib: \"\n  (a::nat) mod m = b mod m \\<Longrightarrow>\n  a * k mod (m * k) = b * k mod (m * k)\"", "lemma mod_mult_eq_imp_mod_eq: \"\n  (a::nat) mod (m * k) = b mod (m * k) \\<Longrightarrow> a mod m = b mod m\"", "lemma mod_factor_imp_mod_0: \"\n  \\<lbrakk>(x::nat) mod (m * k) = y * k mod (m * k)\\<rbrakk> \\<Longrightarrow> x mod k = 0\"\n  (is \"\\<lbrakk> ?P1 \\<rbrakk> \\<Longrightarrow> ?Q\")", "lemma mod_factor_div_mod:\"\n  \\<lbrakk> (x::nat) mod (m * k) = y * k mod (m * k); 0 < k \\<rbrakk>\n  \\<Longrightarrow> x div k mod m = y mod m\"\n  (is \"\\<lbrakk> ?P1; ?P2 \\<rbrakk> \\<Longrightarrow> ?L = ?R\")", "lemma div_add1_eq_if: \"0 < m \\<Longrightarrow>\n  (a + b) div (m::nat) = a div m + b div m + (\n    if a mod m + b mod m < m then 0 else Suc 0)\"", "lemma div_Suc: \"\n  0 < n \\<Longrightarrow> Suc m div n = (if Suc (m mod n) = n then Suc (m div n) else m div n)\"", "lemma div_Suc': \"\n  0 < n \\<Longrightarrow> Suc m div n = (if m mod n < n - Suc 0 then m div n else Suc (m div n))\"", "lemma div_diff1_eq_if: \"\n  (b - a) div (m::nat) =\n  b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\"", "lemma diff_less_divisor_imp_sub_mod_eq: \"\n  \\<lbrakk> (x::nat) \\<le> y; y - x < m \\<rbrakk> \\<Longrightarrow> x = y - (y - x) mod m\"", "lemma diff_ge_divisor_imp_sub_mod_less: \"\n  \\<lbrakk> (x::nat) \\<le> y; m \\<le> y - x; 0 < m \\<rbrakk> \\<Longrightarrow> x < y - (y - x) mod m\"", "lemma le_imp_sub_mod_le: \"\n  (x::nat) \\<le> y \\<Longrightarrow> x \\<le> y - (y - x) mod m\"", "lemma mod_less_diff_mod: \"\n  \\<lbrakk> n mod m < r; r \\<le> m; r \\<le> (n::nat) \\<rbrakk> \\<Longrightarrow>\n  (n - r) mod m = m + n mod m - r\"", "lemma mod_0_imp_mod_pred: \"\n  \\<lbrakk> 0 < (n::nat); n mod m = 0 \\<rbrakk> \\<Longrightarrow>\n  (n - Suc 0) mod m = m - Suc 0\"", "lemma mod_pred: \"\n  0 < n \\<Longrightarrow>\n  (n - Suc 0) mod m = (\n    if n mod m = 0 then m - Suc 0 else n mod m - Suc 0)\"", "lemma mod_eq_imp_diff_mod_eq_divisor: \"\n  \\<lbrakk> a < b; 0 < m; a mod m = b mod m \\<rbrakk> \\<Longrightarrow>\n  Suc ((b - Suc a) mod m) = m\"", "lemma sub_diff_mod_eq: \"\n  r \\<le> t \\<Longrightarrow> (t - (t - r) mod m) mod (m::nat) = r mod m\"", "lemma sub_diff_mod_eq': \"\n  r \\<le> t \\<Longrightarrow> (k * m + t - (t - r) mod m) mod (m::nat) = r mod m\"", "lemma mod_eq_Suc_0_conv: \"Suc 0 < k \\<Longrightarrow> ((x + k - Suc 0) mod k = 0) = (x mod k = Suc 0)\"", "lemma mod_eq_divisor_minus_Suc_0_conv: \"Suc 0 < k \\<Longrightarrow> (x mod k = k - Suc 0) = (Suc x mod k = 0)\"", "lemma sub_mod_div_eq_div: \"((n::nat) - n mod m) div m = n div m\"", "lemma mod_less_imp_diff_div_conv: \"\n  \\<lbrakk> n mod m < r; r \\<le> m + n mod m\\<rbrakk> \\<Longrightarrow> (n - r) div m = n div m - Suc 0\"", "lemma div_le_conv: \"0 < m \\<Longrightarrow> n div m \\<le> k = (n \\<le> Suc k * m - Suc 0)\"", "lemma le_div_conv: \"0 < (m::nat) \\<Longrightarrow> (n \\<le> k div m) = (n * m \\<le> k)\"", "lemma less_mult_imp_div_less: \"n < k * m \\<Longrightarrow> n div m < (k::nat)\"", "lemma div_less_imp_less_mult: \"\\<lbrakk> 0 < (m::nat); n div m < k \\<rbrakk> \\<Longrightarrow> n < k * m\"", "lemma div_less_conv: \"0 < (m::nat) \\<Longrightarrow> (n div m < k) = (n < k * m)\"", "lemma div_eq_0_conv: \"(n div (m::nat) = 0) = (m = 0 \\<or> n < m)\"", "lemma div_eq_0_conv': \"0 < m \\<Longrightarrow> (n div (m::nat) = 0) = (n < m)\"", "lemma mod_0_less_div_conv: \"\n  n mod (m::nat) = 0 \\<Longrightarrow> (k * m < n) = (k < n div m)\"", "lemma add_le_divisor_imp_le_Suc_div: \"\n  \\<lbrakk> x div m \\<le> n; y \\<le> m \\<rbrakk> \\<Longrightarrow> (x + y) div m \\<le> Suc n\""], "translations": [["", "lemma mod_less_dividend: \"\\<lbrakk> 0 < m; m \\<le> n \\<rbrakk> \\<Longrightarrow> n mod m < (n::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> n\\<rbrakk> \\<Longrightarrow> n mod m < n", "by (rule less_le_trans[OF mod_less_divisor])"], ["", "(*lemma mod_le_dividend: \"n mod m \\<le> (n::nat)\"*)"], ["", "lemmas mod_le_dividend = mod_less_eq_dividend"], ["", "lemma diff_mod_le: \"(t - r) mod m \\<le> (t::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t - r) mod m \\<le> t", "by (rule le_trans[OF mod_le_dividend, OF diff_le_self])"], ["", "(*corollary div_mult_cancel: \"m div n * n = m - m mod (n::nat)\"*)"], ["", "lemmas div_mult_cancel = minus_mod_eq_div_mult [symmetric]"], ["", "lemma mod_0_div_mult_cancel: \"(n mod (m::nat) = 0) = (n div m * m = n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n mod m = 0) = (n div m * m = n)", "apply (insert eq_diff_left_iff[OF mod_le_dividend le0, of n m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - n mod m = n - 0) = (n mod m = 0) \\<Longrightarrow>\n    (n mod m = 0) = (n div m * m = n)", "apply (simp add: mult.commute minus_mod_eq_mult_div [symmetric])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_mult_le: \"(n::nat) div m * m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n div m * m \\<le> n", "by (simp add: mult.commute minus_mod_eq_mult_div [symmetric])"], ["", "lemma less_div_Suc_mult: \"0 < (m::nat) \\<Longrightarrow> n < Suc (n div m) * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> n < Suc (n div m) * m", "apply (simp add: mult.commute minus_mod_eq_mult_div [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> n < m + n - n mod m", "apply (rule less_add_diff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> n mod m < m", "by (rule mod_less_divisor)"], ["", "lemma nat_ge2_conv: \"((2::nat) \\<le> n) = (n \\<noteq> 0 \\<and> n \\<noteq> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 \\<le> n) = (n \\<noteq> 0 \\<and> n \\<noteq> 1)", "by fastforce"], ["", "lemma Suc0_mod: \"m \\<noteq> Suc 0 \\<Longrightarrow> Suc 0 mod m = Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> Suc 0 \\<Longrightarrow> Suc 0 mod m = Suc 0", "by (case_tac m, simp_all)"], ["", "corollary Suc0_mod_subst: \"\n  \\<lbrakk> m \\<noteq> Suc 0; P (Suc 0) \\<rbrakk> \\<Longrightarrow> P (Suc 0 mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<noteq> Suc 0; P (Suc 0)\\<rbrakk>\n    \\<Longrightarrow> P (Suc 0 mod m)", "by (blast intro: subst[OF Suc0_mod[symmetric]])"], ["", "corollary Suc0_mod_cong: \"\n  m \\<noteq> Suc 0 \\<Longrightarrow> f (Suc 0 mod m) = f (Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> Suc 0 \\<Longrightarrow> f (Suc 0 mod m) = f (Suc 0)", "by (blast intro: arg_cong[OF Suc0_mod])"], ["", "subsection \\<open>Additional results for addition and subtraction with \\<open>mod\\<close>\\<close>"], ["", "lemma mod_Suc_conv: \"\n  ((Suc a) mod m = (Suc b) mod m) = (a mod m = b mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc a mod m = Suc b mod m) = (a mod m = b mod m)", "by (simp add: mod_Suc)"], ["", "lemma mod_Suc': \"\n  0 < n \\<Longrightarrow> Suc m mod n = (if m mod n < n - Suc 0 then Suc (m mod n) else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    Suc m mod n = (if m mod n < n - Suc 0 then Suc (m mod n) else 0)", "apply (simp add: mod_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    (Suc (m mod n) = n \\<longrightarrow> \\<not> m mod n < n - Suc 0) \\<and>\n    (Suc (m mod n) \\<noteq> n \\<longrightarrow> m mod n < n - Suc 0)", "apply (intro conjI impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < n; Suc (m mod n) = n\\<rbrakk>\n    \\<Longrightarrow> \\<not> m mod n < n - Suc 0\n 2. \\<lbrakk>0 < n; Suc (m mod n) \\<noteq> n\\<rbrakk>\n    \\<Longrightarrow> m mod n < n - Suc 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; Suc (m mod n) \\<noteq> n\\<rbrakk>\n    \\<Longrightarrow> m mod n < n - Suc 0", "apply (insert le_neq_trans[OF mod_less_divisor[THEN Suc_leI, of n m]], simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_add:\"\n  ((a + k) mod m = (b + k) mod m) =\n  ((a::nat) mod m = b mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((a + k) mod m = (b + k) mod m) = (a mod m = b mod m)", "by (induct \"k\", simp_all add: mod_Suc_conv)"], ["", "corollary mod_sub_add: \"\n  k \\<le> (a::nat) \\<Longrightarrow>\n  ((a - k) mod m = b mod m) = (a mod m = (b + k) mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> a \\<Longrightarrow>\n    ((a - k) mod m = b mod m) = (a mod m = (b + k) mod m)", "by (simp add: mod_add[where m=m and a=\"a-k\" and b=b and k=k, symmetric])"], ["", "lemma mod_sub_eq_mod_0_conv: \"\n  a + b \\<le> (n::nat) \\<Longrightarrow>\n  ((n - a) mod m = b mod m) = ((n - (a + b)) mod m = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b \\<le> n \\<Longrightarrow>\n    ((n - a) mod m = b mod m) = ((n - (a + b)) mod m = 0)", "by (insert mod_add[of \"n-(a+b)\" b m 0], simp)"], ["", "lemma mod_sub_eq_mod_swap: \"\n  \\<lbrakk> a \\<le> (n::nat); b \\<le> n \\<rbrakk> \\<Longrightarrow>\n  ((n - a) mod m = b mod m) = ((n - b) mod m = a mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> n; b \\<le> n\\<rbrakk>\n    \\<Longrightarrow> ((n - a) mod m = b mod m) = ((n - b) mod m = a mod m)", "by (simp add: mod_sub_add add.commute)"], ["", "lemma le_mod_greater_imp_div_less: \"\n  \\<lbrakk> a \\<le> (b::nat); a mod m > b mod m \\<rbrakk> \\<Longrightarrow> a div m < b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; b mod m < a mod m\\<rbrakk>\n    \\<Longrightarrow> a div m < b div m", "apply (rule ccontr, simp add: linorder_not_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; b mod m < a mod m; b div m \\<le> a div m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule mult_le_mono1[of \"b div m\" _ m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; b mod m < a mod m;\n     b div m * m \\<le> a div m * m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule add_less_le_mono[of \"b mod m\" \"a mod m\" \"b div m * m\" \"a div m * m\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; b div m * m \\<le> a div m * m\\<rbrakk>\n    \\<Longrightarrow> b div m * m \\<le> a div m * m\n 2. \\<lbrakk>a \\<le> b; b div m * m \\<le> a div m * m;\n     b mod m + b div m * m < a mod m + a div m * m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma less_mod_ge_imp_div_less: \"\\<lbrakk> a < (b::nat); a mod m \\<ge> b mod m \\<rbrakk> \\<Longrightarrow> a div m < b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; b mod m \\<le> a mod m\\<rbrakk>\n    \\<Longrightarrow> a div m < b div m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; b mod m \\<le> a mod m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> a div m < b div m", "apply (rule mult_less_cancel1[of m, THEN iffD1, THEN conjunct2])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; b mod m \\<le> a mod m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> m * (a div m) < m * (b div m)", "apply (simp add: minus_mod_eq_mult_div [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; b mod m \\<le> a mod m; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a - a mod m < b - b mod m", "apply (rule order_less_le_trans[of _ \"b - a mod m\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a < b; b mod m \\<le> a mod m; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a - a mod m < b - a mod m\n 2. \\<lbrakk>a < b; b mod m \\<le> a mod m; 0 < m\\<rbrakk>\n    \\<Longrightarrow> b - a mod m \\<le> b - b mod m", "apply (rule diff_less_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a < b; b mod m \\<le> a mod m; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a < b\n 2. \\<lbrakk>a < b; b mod m \\<le> a mod m; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m \\<le> a\n 3. \\<lbrakk>a < b; b mod m \\<le> a mod m; 0 < m\\<rbrakk>\n    \\<Longrightarrow> b - a mod m \\<le> b - b mod m", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary less_mod_0_imp_div_less: \"\\<lbrakk> a < (b::nat); b mod m = 0 \\<rbrakk> \\<Longrightarrow> a div m < b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; b mod m = 0\\<rbrakk> \\<Longrightarrow> a div m < b div m", "by (simp add: less_mod_ge_imp_div_less)"], ["", "lemma mod_diff_right_eq: \"\n  (a::nat) \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "assume a_as:\"a \\<le> b\""], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "have \"(b - a) mod m = (b - a + a div m * m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) mod m = (b - a + a div m * m) mod m", "by simp"], ["proof (state)\nthis:\n  (b - a) mod m = (b - a + a div m * m) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b - a) mod m = (b - a + a div m * m) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "have \"\\<dots> = (b + a div m * m - a) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a + a div m * m) mod m = (b + a div m * m - a) mod m", "using a_as"], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. (b - a + a div m * m) mod m = (b + a div m * m - a) mod m", "by simp"], ["proof (state)\nthis:\n  (b - a + a div m * m) mod m = (b + a div m * m - a) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b - a + a div m * m) mod m = (b + a div m * m - a) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "have \"\\<dots> = (b + a div m * m - (a div m * m + a mod m)) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b + a div m * m - a) mod m =\n    (b + a div m * m - (a div m * m + a mod m)) mod m", "by simp"], ["proof (state)\nthis:\n  (b + a div m * m - a) mod m =\n  (b + a div m * m - (a div m * m + a mod m)) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b + a div m * m - a) mod m =\n  (b + a div m * m - (a div m * m + a mod m)) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "have \"\\<dots> = (b + a div m * m - a div m * m - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b + a div m * m - (a div m * m + a mod m)) mod m =\n    (b + a div m * m - a div m * m - a mod m) mod m", "by (simp only: diff_diff_left[symmetric])"], ["proof (state)\nthis:\n  (b + a div m * m - (a div m * m + a mod m)) mod m =\n  (b + a div m * m - a div m * m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b + a div m * m - (a div m * m + a mod m)) mod m =\n  (b + a div m * m - a div m * m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "have \"\\<dots> = (b - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b + a div m * m - a div m * m - a mod m) mod m = (b - a mod m) mod m", "by simp"], ["proof (state)\nthis:\n  (b + a div m * m - a div m * m - a mod m) mod m = (b - a mod m) mod m\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (b - a) mod m = (b - a mod m) mod m", "finally"], ["proof (chain)\npicking this:\n  (b - a) mod m = (b - a mod m) mod m", "show ?thesis"], ["proof (prove)\nusing this:\n  (b - a) mod m = (b - a mod m) mod m\n\ngoal (1 subgoal):\n 1. (b - a) mod m = (b - a mod m) mod m", "."], ["proof (state)\nthis:\n  (b - a) mod m = (b - a mod m) mod m\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary mod_eq_imp_diff_mod_eq: \"\n  \\<lbrakk> x mod m = y mod m; x \\<le> (t::nat); y \\<le> t \\<rbrakk> \\<Longrightarrow>\n  (t - x) mod m = (t - y) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod m = y mod m; x \\<le> t; y \\<le> t\\<rbrakk>\n    \\<Longrightarrow> (t - x) mod m = (t - y) mod m", "by (simp only: mod_diff_right_eq)"], ["", "lemma mod_eq_imp_diff_mod_eq2: \"\n  \\<lbrakk> x mod m = y mod m; (t::nat) \\<le> x; t \\<le> y \\<rbrakk> \\<Longrightarrow>\n  (x - t) mod m = (y - t) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod m = y mod m; t \\<le> x; t \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x - t) mod m = (y - t) mod m", "apply (case_tac \"m = 0\", simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod m = y mod m; t \\<le> x; t \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (x - t) mod m = (y - t) mod m", "apply (subst mod_mult_self2[of \"x - t\" m t, symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod m = y mod m; t \\<le> x; t \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (x - t + m * t) mod m = (y - t) mod m", "apply (subst mod_mult_self2[of \"y - t\" m t, symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod m = y mod m; t \\<le> x; t \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (x - t + m * t) mod m = (y - t + m * t) mod m", "apply (simp only: add_diff_assoc2 diff_add_assoc gr0_imp_self_le_mult2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod m = y mod m; t \\<le> x; t \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (x + (m * t - t)) mod m = (y + (m * t - t)) mod m", "apply (simp only: mod_add)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma divisor_add_diff_mod_if: \"\n  (m + b mod m - a mod m) mod (m::nat)= (\n  if a mod m \\<le> b mod m\n  then (b mod m - a mod m)\n  else (m + b mod m - a mod m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (m + b mod m - a mod m) mod m =\n    (if a mod m \\<le> b mod m then b mod m - a mod m\n     else m + b mod m - a mod m)", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    (m + b mod m - a mod m) mod m =\n    (if a mod m \\<le> b mod m then b mod m - a mod m\n     else m + b mod m - a mod m)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> (m + b mod m - a mod m) mod m = b mod m - a mod m", "apply (subst diff_add_assoc, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> (m + (b mod m - a mod m)) mod m = b mod m - a mod m", "apply (simp only: mod_add_self1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> (b mod m - a mod m) mod m = b mod m - a mod m", "apply (rule mod_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> b mod m - a mod m < m", "apply (simp add: less_imp_diff_less)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary divisor_add_diff_mod_eq1: \"\n  a mod m \\<le> b mod m \\<Longrightarrow>\n  (m + b mod m - a mod m) mod (m::nat) = b mod m - a mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (m + b mod m - a mod m) mod m = b mod m - a mod m", "by (simp add: divisor_add_diff_mod_if)"], ["", "corollary divisor_add_diff_mod_eq2: \"\n  b mod m < a mod m \\<Longrightarrow>\n  (m + b mod m - a mod m) mod (m::nat) = m + b mod m - a mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b mod m < a mod m \\<Longrightarrow>\n    (m + b mod m - a mod m) mod m = m + b mod m - a mod m", "by (simp add: divisor_add_diff_mod_if)"], ["", "lemma mod_add_mod_if: \"\n  (a mod m + b mod m) mod (m::nat)= (\n  if a mod m + b mod m < m\n  then a mod m + b mod m\n  else a mod m + b mod m - m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a mod m + b mod m) mod m =\n    (if a mod m + b mod m < m then a mod m + b mod m\n     else a mod m + b mod m - m)", "apply (case_tac \"m = 0\", simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    \\<not> a mod m + b mod m < m \\<longrightarrow>\n    (a mod m + b mod m) mod m = a mod m + b mod m - m", "apply (clarsimp simp: linorder_not_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> a mod m + b mod m\\<rbrakk>\n    \\<Longrightarrow> (a mod m + b mod m) mod m = a mod m + b mod m - m", "apply (simp add: mod_if[of \"a mod m + b mod m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> a mod m + b mod m\\<rbrakk>\n    \\<Longrightarrow> (a mod m + b mod m - m) mod m = a mod m + b mod m - m", "apply (rule mod_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> a mod m + b mod m\\<rbrakk>\n    \\<Longrightarrow> a mod m + b mod m - m < m", "apply (rule diff_less_conv[THEN iffD2], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> a mod m + b mod m\\<rbrakk>\n    \\<Longrightarrow> a mod m + b mod m < m + m", "apply (simp add: add_less_mono)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary mod_add_mod_eq1: \"\n  a mod m + b mod m < m \\<Longrightarrow>\n  (a mod m + b mod m) mod (m::nat) = a mod m + b mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m + b mod m < m \\<Longrightarrow>\n    (a mod m + b mod m) mod m = a mod m + b mod m", "by (simp add: mod_add_mod_if)"], ["", "corollary mod_add_mod_eq2: \"\n  m \\<le> a mod m + b mod m\\<Longrightarrow>\n  (a mod m + b mod m) mod (m::nat) = a mod m + b mod m - m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> a mod m + b mod m \\<Longrightarrow>\n    (a mod m + b mod m) mod m = a mod m + b mod m - m", "by (simp add: mod_add_mod_if)"], ["", "lemma mod_add1_eq_if: \"\n  (a + b) mod (m::nat) = (\n  if (a mod m + b mod m < m) then a mod m + b mod m\n  else a mod m + b mod m - m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a + b) mod m =\n    (if a mod m + b mod m < m then a mod m + b mod m\n     else a mod m + b mod m - m)", "by (simp add: mod_add_eq[symmetric, of a b] mod_add_mod_if)"], ["", "lemma mod_add_eq_mod_conv: \"0 < (m::nat) \\<Longrightarrow>\n  ((x + a) mod m = b mod m ) =\n  (x mod m = (m + b mod m - a mod m) mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    ((x + a) mod m = b mod m) = (x mod m = (m + b mod m - a mod m) mod m)", "apply (simp only: mod_add_eq[symmetric, of x a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    ((x mod m + a mod m) mod m = b mod m) =\n    (x mod m = (m + b mod m - a mod m) mod m)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; (x mod m + a mod m) mod m = b mod m\\<rbrakk>\n    \\<Longrightarrow> x mod m = (m + b mod m - a mod m) mod m\n 2. \\<lbrakk>0 < m; x mod m = (m + b mod m - a mod m) mod m\\<rbrakk>\n    \\<Longrightarrow> (x mod m + a mod m) mod m = b mod m", "apply (drule sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; b mod m = (x mod m + a mod m) mod m\\<rbrakk>\n    \\<Longrightarrow> x mod m = (m + b mod m - a mod m) mod m\n 2. \\<lbrakk>0 < m; x mod m = (m + b mod m - a mod m) mod m\\<rbrakk>\n    \\<Longrightarrow> (x mod m + a mod m) mod m = b mod m", "apply (simp add: mod_add_mod_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; x mod m = (m + b mod m - a mod m) mod m\\<rbrakk>\n    \\<Longrightarrow> (x mod m + a mod m) mod m = b mod m", "apply (simp add: mod_add_left_eq le_add_diff_inverse2[OF trans_le_add1[OF mod_le_divisor]])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_diff1_eq: \"\n  (a::nat) \\<le> b \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    (b - a) mod m = (m + b mod m - a mod m) mod m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "assume a_as:\"a \\<le> b\"\n    and m_as: \"0 < m\""], ["proof (state)\nthis:\n  a \\<le> b\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have a_mod_le_b_s: \"a mod m \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m \\<le> b", "by (rule le_trans[of _ a], simp only: mod_le_dividend, simp only: a_as)"], ["proof (state)\nthis:\n  a mod m \\<le> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have \"(b - a) mod m = (b - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) mod m = (b - a mod m) mod m", "using a_as"], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. (b - a) mod m = (b - a mod m) mod m", "by (simp only: mod_diff_right_eq)"], ["proof (state)\nthis:\n  (b - a) mod m = (b - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b - a) mod m = (b - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have \"\\<dots> = (b - a mod m + m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a mod m) mod m = (b - a mod m + m) mod m", "by simp"], ["proof (state)\nthis:\n  (b - a mod m) mod m = (b - a mod m + m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b - a mod m) mod m = (b - a mod m + m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have \"\\<dots> = (b + m - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a mod m + m) mod m = (b + m - a mod m) mod m", "using a_mod_le_b_s"], ["proof (prove)\nusing this:\n  a mod m \\<le> b\n\ngoal (1 subgoal):\n 1. (b - a mod m + m) mod m = (b + m - a mod m) mod m", "by simp"], ["proof (state)\nthis:\n  (b - a mod m + m) mod m = (b + m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b - a mod m + m) mod m = (b + m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have \"\\<dots> = (b div m * m + b mod m + m - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b + m - a mod m) mod m = (b div m * m + b mod m + m - a mod m) mod m", "by simp"], ["proof (state)\nthis:\n  (b + m - a mod m) mod m = (b div m * m + b mod m + m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b + m - a mod m) mod m = (b div m * m + b mod m + m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have \"\\<dots> = (b div m * m + (b mod m + m - a mod m)) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b div m * m + b mod m + m - a mod m) mod m =\n    (b div m * m + (b mod m + m - a mod m)) mod m", "by (simp add: diff_add_assoc[OF mod_le_divisor, OF m_as])"], ["proof (state)\nthis:\n  (b div m * m + b mod m + m - a mod m) mod m =\n  (b div m * m + (b mod m + m - a mod m)) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b div m * m + b mod m + m - a mod m) mod m =\n  (b div m * m + (b mod m + m - a mod m)) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have \"\\<dots> = ((b mod m + m - a mod m) + b div m * m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b div m * m + (b mod m + m - a mod m)) mod m =\n    (b mod m + m - a mod m + b div m * m) mod m", "by simp"], ["proof (state)\nthis:\n  (b div m * m + (b mod m + m - a mod m)) mod m =\n  (b mod m + m - a mod m + b div m * m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b div m * m + (b mod m + m - a mod m)) mod m =\n  (b mod m + m - a mod m + b div m * m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have \"\\<dots> = (b mod m + m - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b mod m + m - a mod m + b div m * m) mod m =\n    (b mod m + m - a mod m) mod m", "by simp"], ["proof (state)\nthis:\n  (b mod m + m - a mod m + b div m * m) mod m =\n  (b mod m + m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "also"], ["proof (state)\nthis:\n  (b mod m + m - a mod m + b div m * m) mod m =\n  (b mod m + m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "have \"\\<dots> = (m + b mod m - a mod m) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b mod m + m - a mod m) mod m = (m + b mod m - a mod m) mod m", "by (simp only: add.commute)"], ["proof (state)\nthis:\n  (b mod m + m - a mod m) mod m = (m + b mod m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = (m + b mod m - a mod m) mod m", "finally"], ["proof (chain)\npicking this:\n  (b - a) mod m = (m + b mod m - a mod m) mod m", "show ?thesis"], ["proof (prove)\nusing this:\n  (b - a) mod m = (m + b mod m - a mod m) mod m\n\ngoal (1 subgoal):\n 1. (b - a) mod m = (m + b mod m - a mod m) mod m", "."], ["proof (state)\nthis:\n  (b - a) mod m = (m + b mod m - a mod m) mod m\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary mod_diff1_eq_if: \"\n  (a::nat) \\<le> b \\<Longrightarrow> (b - a) mod m = (\n    if a mod m \\<le> b mod m then b mod m - a mod m\n    else m + b mod m - a mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    (b - a) mod m =\n    (if a mod m \\<le> b mod m then b mod m - a mod m\n     else m + b mod m - a mod m)", "by (simp only: mod_diff1_eq divisor_add_diff_mod_if)"], ["", "corollary mod_diff1_eq1: \"\n  \\<lbrakk> (a::nat) \\<le> b; a mod m \\<le> b mod m \\<rbrakk>\n  \\<Longrightarrow> (b - a) mod m = b mod m - a mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = b mod m - a mod m", "by (simp add: mod_diff1_eq_if)"], ["", "corollary mod_diff1_eq2: \"\n  \\<lbrakk> (a::nat) \\<le> b; b mod m < a mod m\\<rbrakk>\n  \\<Longrightarrow> (b - a) mod m = m + b mod m - a mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; b mod m < a mod m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = m + b mod m - a mod m", "by (simp add: mod_diff1_eq_if)"], ["", "subsubsection \\<open>Divisor subtraction with \\<open>div\\<close> and \\<open>mod\\<close>\\<close>"], ["", "lemma mod_diff_self1: \"\n  0 < (n::nat) \\<Longrightarrow> (m - n) mod m = m - n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> (m - n) mod m = m - n", "by (case_tac \"m = 0\", simp_all)"], ["", "lemma mod_diff_self2: \"\n  m \\<le> (n::nat) \\<Longrightarrow> (n - m) mod m = n mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> n \\<Longrightarrow> (n - m) mod m = n mod m", "by (simp add: mod_diff_right_eq)"], ["", "lemma mod_diff_mult_self1: \"\n  k * m \\<le> (n::nat) \\<Longrightarrow> (n - k * m) mod m = n mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * m \\<le> n \\<Longrightarrow> (n - k * m) mod m = n mod m", "by (simp add: mod_diff_right_eq)"], ["", "lemma mod_diff_mult_self2: \"\n  m * k \\<le> (n::nat) \\<Longrightarrow> (n - m * k) mod m = n mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m * k \\<le> n \\<Longrightarrow> (n - m * k) mod m = n mod m", "by (simp only: mult.commute[of m k] mod_diff_mult_self1)"], ["", "lemma div_diff_self1: \"0 < (n::nat) \\<Longrightarrow> (m - n) div m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> (m - n) div m = 0", "by (case_tac \"m = 0\", simp_all)"], ["", "lemma div_diff_self2: \"(n - m) div m = n div m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - m) div m = n div m - Suc 0", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (n - m) div m = n div m - Suc 0", "apply (case_tac \"n < m\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<noteq> 0; \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> (n - m) div m = n div m - Suc 0", "apply (case_tac \"n = m\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<noteq> 0; \\<not> n < m; n \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> (n - m) div m = n div m - Suc 0", "apply (simp add: div_if)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_diff_mult_self1: \"\n  (n - k * m) div m = n div m - (k::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - k * m) div m = n div m - k", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (n - k * m) div m = n div m - k", "apply (case_tac \"n < k * m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m \\<noteq> 0; n < k * m\\<rbrakk>\n    \\<Longrightarrow> (n - k * m) div m = n div m - k\n 2. \\<lbrakk>m \\<noteq> 0; \\<not> n < k * m\\<rbrakk>\n    \\<Longrightarrow> (n - k * m) div m = n div m - k", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n < k * m\\<rbrakk> \\<Longrightarrow> n div m \\<le> k\n 2. \\<lbrakk>m \\<noteq> 0; \\<not> n < k * m\\<rbrakk>\n    \\<Longrightarrow> (n - k * m) div m = n div m - k", "apply (drule div_le_mono[OF less_imp_le, of n _ m])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n div m \\<le> k * m div m\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k\n 2. \\<lbrakk>m \\<noteq> 0; \\<not> n < k * m\\<rbrakk>\n    \\<Longrightarrow> (n - k * m) div m = n div m - k", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<noteq> 0; \\<not> n < k * m\\<rbrakk>\n    \\<Longrightarrow> (n - k * m) div m = n div m - k", "apply (simp add: linorder_not_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; k * m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (n - k * m) div m = n div m - k", "apply (rule iffD1[OF mult_cancel1_gr0[where k=m]], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; k * m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m * ((n - k * m) div m) = m * (n div m - k)", "apply (subst diff_mult_distrib2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; k * m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m * ((n - k * m) div m) = m * (n div m) - m * k", "apply (simp only: minus_mod_eq_mult_div [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; k * m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> n - k * m - (n - k * m) mod m = n - n mod m - m * k", "apply (simp only: diff_commute[of _ \"k*m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; k * m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> n - (n - k * m) mod m - k * m = n - n mod m - m * k", "apply (simp only: mult.commute[of m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; k * m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> n - (n - k * m) mod m - k * m = n - n mod m - k * m", "apply (simp only: mod_diff_mult_self1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_diff_mult_self2: \"\n  (n - m * k) div m = n div m - (k::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - m * k) div m = n div m - k", "by (simp only: mult.commute div_diff_mult_self1)"], ["", "subsubsection \\<open>Modulo equality and modulo of difference\\<close>"], ["", "lemma mod_eq_imp_diff_mod_0:\"\n  (a::nat) mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0\"\n  (is \"?P \\<Longrightarrow> ?Q\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "assume as1: ?P"], ["proof (state)\nthis:\n  a mod m = b mod m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "have \"b - a = b div m * m + b mod m - (a div m * m + a mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b - a = b div m * m + b mod m - (a div m * m + a mod m)", "by simp"], ["proof (state)\nthis:\n  b - a = b div m * m + b mod m - (a div m * m + a mod m)\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "also"], ["proof (state)\nthis:\n  b - a = b div m * m + b mod m - (a div m * m + a mod m)\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "have \"\\<dots> = b div m * m + b mod m - (a mod m + a div m * m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m * m + b mod m - (a div m * m + a mod m) =\n    b div m * m + b mod m - (a mod m + a div m * m)", "by simp"], ["proof (state)\nthis:\n  b div m * m + b mod m - (a div m * m + a mod m) =\n  b div m * m + b mod m - (a mod m + a div m * m)\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "also"], ["proof (state)\nthis:\n  b div m * m + b mod m - (a div m * m + a mod m) =\n  b div m * m + b mod m - (a mod m + a div m * m)\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "have \"\\<dots> = b div m * m + b mod m - a mod m - a div m * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m * m + b mod m - (a mod m + a div m * m) =\n    b div m * m + b mod m - a mod m - a div m * m", "by simp"], ["proof (state)\nthis:\n  b div m * m + b mod m - (a mod m + a div m * m) =\n  b div m * m + b mod m - a mod m - a div m * m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "also"], ["proof (state)\nthis:\n  b div m * m + b mod m - (a mod m + a div m * m) =\n  b div m * m + b mod m - a mod m - a div m * m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "have \"\\<dots> = b div m * m + b mod m - b mod m - a div m * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m * m + b mod m - a mod m - a div m * m =\n    b div m * m + b mod m - b mod m - a div m * m", "using as1"], ["proof (prove)\nusing this:\n  a mod m = b mod m\n\ngoal (1 subgoal):\n 1. b div m * m + b mod m - a mod m - a div m * m =\n    b div m * m + b mod m - b mod m - a div m * m", "by simp"], ["proof (state)\nthis:\n  b div m * m + b mod m - a mod m - a div m * m =\n  b div m * m + b mod m - b mod m - a div m * m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "also"], ["proof (state)\nthis:\n  b div m * m + b mod m - a mod m - a div m * m =\n  b div m * m + b mod m - b mod m - a div m * m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "have \"\\<dots> = b div m * m - a div m * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m * m + b mod m - b mod m - a div m * m =\n    b div m * m - a div m * m", "by (simp only: diff_add_inverse2)"], ["proof (state)\nthis:\n  b div m * m + b mod m - b mod m - a div m * m = b div m * m - a div m * m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "also"], ["proof (state)\nthis:\n  b div m * m + b mod m - b mod m - a div m * m = b div m * m - a div m * m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "have \"\\<dots> = (b div m - a div m) * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m * m - a div m * m = (b div m - a div m) * m", "by (simp only: diff_mult_distrib)"], ["proof (state)\nthis:\n  b div m * m - a div m * m = (b div m - a div m) * m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "finally"], ["proof (chain)\npicking this:\n  b - a = (b div m - a div m) * m", "have \"b - a = (b div m - a div m) * m\""], ["proof (prove)\nusing this:\n  b - a = (b div m - a div m) * m\n\ngoal (1 subgoal):\n 1. b - a = (b div m - a div m) * m", "."], ["proof (state)\nthis:\n  b - a = (b div m - a div m) * m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "hence \"(b - a) mod m = (b div m - a div m) * m mod m\""], ["proof (prove)\nusing this:\n  b - a = (b div m - a div m) * m\n\ngoal (1 subgoal):\n 1. (b - a) mod m = (b div m - a div m) * m mod m", "by (rule arg_cong)"], ["proof (state)\nthis:\n  (b - a) mod m = (b div m - a div m) * m mod m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  (b - a) mod m = (b div m - a div m) * m mod m\n\ngoal (1 subgoal):\n 1. (b - a) mod m = 0", "by (simp only: mod_mult_self2_is_0)"], ["proof (state)\nthis:\n  (b - a) mod m = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary mod_eq_imp_diff_dvd: \"\n  (a::nat) mod m = b mod m \\<Longrightarrow> m dvd b - a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> m dvd b - a", "by (rule dvd_eq_mod_eq_0[THEN iffD2, OF mod_eq_imp_diff_mod_0])"], ["", "lemma mod_neq_imp_diff_mod_neq0:\"\n  \\<lbrakk> (a::nat) mod m \\<noteq> b mod m; a \\<le> b \\<rbrakk> \\<Longrightarrow> 0 < (b - a) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a mod m \\<noteq> b mod m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a mod m \\<noteq> b mod m; a \\<le> b; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m", "apply (drule le_imp_less_or_eq, erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a mod m \\<noteq> b mod m; m \\<noteq> 0; a < b\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m\n 2. \\<lbrakk>a mod m \\<noteq> b mod m; m \\<noteq> 0; a = b\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a mod m \\<noteq> b mod m; m \\<noteq> 0; a = b\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m\n 2. \\<lbrakk>a mod m \\<noteq> b mod m; m \\<noteq> 0; a < b\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a mod m \\<noteq> b mod m; m \\<noteq> 0; a < b\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m", "apply (drule neq_iff[THEN iffD1], erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m \\<noteq> 0; a < b; a mod m < b mod m\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m\n 2. \\<lbrakk>m \\<noteq> 0; a < b; b mod m < a mod m\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m", "apply (simp add: mod_diff1_eq1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<noteq> 0; a < b; b mod m < a mod m\\<rbrakk>\n    \\<Longrightarrow> 0 < (b - a) mod m", "apply (simp add: mod_diff1_eq2[OF less_imp_le] trans_less_add1[OF mod_less_divisor])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary mod_neq_imp_diff_not_dvd:\"\n  \\<lbrakk> (a::nat) mod m \\<noteq> b mod m; a \\<le> b \\<rbrakk> \\<Longrightarrow> \\<not> m dvd b - a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a mod m \\<noteq> b mod m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> \\<not> m dvd b - a", "by (simp add: dvd_eq_mod_eq_0 mod_neq_imp_diff_mod_neq0)"], ["", "lemma diff_mod_0_imp_mod_eq:\"\n  \\<lbrakk> (b - a) mod m = 0; a \\<le> b \\<rbrakk> \\<Longrightarrow> (a::nat) mod m = b mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "apply (rule ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; a \\<le> b; a mod m \\<noteq> b mod m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule mod_neq_imp_diff_mod_neq0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(b - a) mod m = 0; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> a \\<le> b\n 2. \\<lbrakk>(b - a) mod m = 0; a \\<le> b; 0 < (b - a) mod m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary diff_dvd_imp_mod_eq:\"\n  \\<lbrakk> m dvd b - a; a \\<le> b \\<rbrakk> \\<Longrightarrow> (a::nat) mod m = b mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m dvd b - a; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "by (rule dvd_eq_mod_eq_0[THEN iffD1, THEN diff_mod_0_imp_mod_eq])"], ["", "lemma mod_eq_diff_mod_0_conv: \"\n  a \\<le> (b::nat) \\<Longrightarrow> (a mod m = b mod m) = ((b - a) mod m = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (a mod m = b mod m) = ((b - a) mod m = 0)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; a mod m = b mod m\\<rbrakk>\n    \\<Longrightarrow> (b - a) mod m = 0\n 2. \\<lbrakk>a \\<le> b; (b - a) mod m = 0\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "apply (rule mod_eq_imp_diff_mod_0, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; (b - a) mod m = 0\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "apply (rule diff_mod_0_imp_mod_eq, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary mod_eq_diff_dvd_conv: \"\n  a \\<le> (b::nat) \\<Longrightarrow> (a mod m = b mod m) = (m dvd b - a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> (a mod m = b mod m) = (m dvd b - a)", "by (rule dvd_eq_mod_eq_0[symmetric, THEN subst], rule mod_eq_diff_mod_0_conv)"], ["", "subsection \\<open>Some additional lemmata about integer \\<open>div\\<close> and \\<open>mod\\<close>\\<close>"], ["", "lemma zmod_eq_imp_diff_mod_0:\n  \"a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0\" for a b m :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0", "by (simp add: mod_diff_cong)"], ["", "(*lemma int_mod_distrib: \"int (n mod m) = int n mod int m\"*)"], ["", "lemmas int_mod_distrib = zmod_int"], ["", "lemma zdiff_mod_0_imp_mod_eq__pos:\"\n  \\<lbrakk> (b - a) mod m = 0; 0 < (m::int) \\<rbrakk> \\<Longrightarrow> a mod m = b mod m\"\n  (is \"\\<lbrakk> ?P; ?Pm \\<rbrakk> \\<Longrightarrow> ?Q\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "assume as1: ?P\n    and as2: \"0 < m\""], ["proof (state)\nthis:\n  (b - a) mod m = 0\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "obtain r1 where a_r1:\"r1 = a mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r1. r1 = a mod m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r1 = a mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "obtain r2 where b_r2:\"r2 = b mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r2. r2 = b mod m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r2 = b mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "obtain q1 where a_q1: \"q1 = a div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q1. q1 = a div m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  q1 = a div m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "obtain q2 where b_q2: \"q2 = b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q2. q2 = b div m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  q2 = b div m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "have a_r1_q1: \"a = m * q1 + r1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = m * q1 + r1", "using a_r1 a_q1"], ["proof (prove)\nusing this:\n  r1 = a mod m\n  q1 = a div m\n\ngoal (1 subgoal):\n 1. a = m * q1 + r1", "by simp"], ["proof (state)\nthis:\n  a = m * q1 + r1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "have b_r2_q2: \"b = m * q2 + r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = m * q2 + r2", "using b_r2 b_q2"], ["proof (prove)\nusing this:\n  r2 = b mod m\n  q2 = b div m\n\ngoal (1 subgoal):\n 1. b = m * q2 + r2", "by simp"], ["proof (state)\nthis:\n  b = m * q2 + r2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "have \"b - a = m * q2 + r2 - (m * q1 + r1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b - a = m * q2 + r2 - (m * q1 + r1)", "using a_r1_q1 b_r2_q2"], ["proof (prove)\nusing this:\n  a = m * q1 + r1\n  b = m * q2 + r2\n\ngoal (1 subgoal):\n 1. b - a = m * q2 + r2 - (m * q1 + r1)", "by simp"], ["proof (state)\nthis:\n  b - a = m * q2 + r2 - (m * q1 + r1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "also"], ["proof (state)\nthis:\n  b - a = m * q2 + r2 - (m * q1 + r1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "have \"\\<dots> = m * q2 + r2 - m * q1 - r1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m * q2 + r2 - (m * q1 + r1) = m * q2 + r2 - m * q1 - r1", "by simp"], ["proof (state)\nthis:\n  m * q2 + r2 - (m * q1 + r1) = m * q2 + r2 - m * q1 - r1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "also"], ["proof (state)\nthis:\n  m * q2 + r2 - (m * q1 + r1) = m * q2 + r2 - m * q1 - r1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "have \"\\<dots> = m * q2 - m * q1 + r2 - r1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m * q2 + r2 - m * q1 - r1 = m * q2 - m * q1 + r2 - r1", "by simp"], ["proof (state)\nthis:\n  m * q2 + r2 - m * q1 - r1 = m * q2 - m * q1 + r2 - r1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "finally"], ["proof (chain)\npicking this:\n  b - a = m * q2 - m * q1 + r2 - r1", "have \"b - a = m * (q2 - q1) + (r2 - r1)\""], ["proof (prove)\nusing this:\n  b - a = m * q2 - m * q1 + r2 - r1\n\ngoal (1 subgoal):\n 1. b - a = m * (q2 - q1) + (r2 - r1)", "by (simp add: right_diff_distrib)"], ["proof (state)\nthis:\n  b - a = m * (q2 - q1) + (r2 - r1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "hence \"(b - a) mod m = (r2 - r1) mod m\""], ["proof (prove)\nusing this:\n  b - a = m * (q2 - q1) + (r2 - r1)\n\ngoal (1 subgoal):\n 1. (b - a) mod m = (r2 - r1) mod m", "by (simp add: mod_add_eq)"], ["proof (state)\nthis:\n  (b - a) mod m = (r2 - r1) mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "hence r2_r1_mod_m_0:\"(r2 - r1) mod m = 0\" (is \"?R1\")"], ["proof (prove)\nusing this:\n  (b - a) mod m = (r2 - r1) mod m\n\ngoal (1 subgoal):\n 1. (r2 - r1) mod m = 0", "by (simp only: as1)"], ["proof (state)\nthis:\n  (r2 - r1) mod m = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "have \"r1 = r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r1 = r2", "proof (rule notI[of \"r1 \\<noteq> r2\", simplified])"], ["proof (state)\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "assume as1': \"r1 \\<noteq> r2\""], ["proof (state)\nthis:\n  r1 \\<noteq> r2\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "have diff_le_s: \"\\<And>a b (m::int). \\<lbrakk> 0 \\<le> a; b < m \\<rbrakk> \\<Longrightarrow> b - a < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b m.\n       \\<lbrakk>0 \\<le> a; b < m\\<rbrakk> \\<Longrightarrow> b - a < m", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?a; ?b < ?m\\<rbrakk> \\<Longrightarrow> ?b - ?a < ?m\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "have s_r1:\"0 \\<le> r1 \\<and> r1 < m\" and s_r2:\"0 \\<le> r2 \\<and> r2 < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> r1 \\<and> r1 < m &&& 0 \\<le> r2 \\<and> r2 < m", "by (simp add: as2 a_r1 b_r2 pos_mod_conj)+"], ["proof (state)\nthis:\n  0 \\<le> r1 \\<and> r1 < m\n  0 \\<le> r2 \\<and> r2 < m\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "have mr2r1:\"-m < r2 - r1\" and r2r1m:\"r2 - r1 < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - m < r2 - r1 &&& r2 - r1 < m", "by (simp add: minus_less_iff[of m] s_r1 s_r2 diff_le_s)+"], ["proof (state)\nthis:\n  - m < r2 - r1\n  r2 - r1 < m\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "have \"0 \\<le> r2 - r1 \\<Longrightarrow> (r2 - r1) mod m = (r2 - r1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> r2 - r1 \\<Longrightarrow> (r2 - r1) mod m = r2 - r1", "using r2r1m"], ["proof (prove)\nusing this:\n  r2 - r1 < m\n\ngoal (1 subgoal):\n 1. 0 \\<le> r2 - r1 \\<Longrightarrow> (r2 - r1) mod m = r2 - r1", "by (blast intro: mod_pos_pos_trivial)"], ["proof (state)\nthis:\n  0 \\<le> r2 - r1 \\<Longrightarrow> (r2 - r1) mod m = r2 - r1\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "hence s1_pos: \"0 \\<le> r2 - r1 \\<Longrightarrow> r2 - r1 = 0\""], ["proof (prove)\nusing this:\n  0 \\<le> r2 - r1 \\<Longrightarrow> (r2 - r1) mod m = r2 - r1\n\ngoal (1 subgoal):\n 1. 0 \\<le> r2 - r1 \\<Longrightarrow> r2 - r1 = 0", "using r2_r1_mod_m_0"], ["proof (prove)\nusing this:\n  0 \\<le> r2 - r1 \\<Longrightarrow> (r2 - r1) mod m = r2 - r1\n  (r2 - r1) mod m = 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> r2 - r1 \\<Longrightarrow> r2 - r1 = 0", "by simp"], ["proof (state)\nthis:\n  0 \\<le> r2 - r1 \\<Longrightarrow> r2 - r1 = 0\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "have \"(r2-r1) mod -m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r2 - r1) mod - m = 0", "by (simp add: zmod_zminus2_eq_if[of \"r2-r1\" m, simplified] r2_r1_mod_m_0)"], ["proof (state)\nthis:\n  (r2 - r1) mod - m = 0\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (r2 - r1) mod - m = 0\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "have \"r2 - r1 \\<le> 0 \\<Longrightarrow> (r2 - r1) mod -m = r2 - r1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r2 - r1 \\<le> 0 \\<Longrightarrow> (r2 - r1) mod - m = r2 - r1", "using mr2r1"], ["proof (prove)\nusing this:\n  - m < r2 - r1\n\ngoal (1 subgoal):\n 1. r2 - r1 \\<le> 0 \\<Longrightarrow> (r2 - r1) mod - m = r2 - r1", "by (simp add: mod_neg_neg_trivial)"], ["proof (state)\nthis:\n  r2 - r1 \\<le> 0 \\<Longrightarrow> (r2 - r1) mod - m = r2 - r1\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (r2 - r1) mod - m = 0\n  r2 - r1 \\<le> 0 \\<Longrightarrow> (r2 - r1) mod - m = r2 - r1", "have s1_neg:\"r2 - r1 \\<le> 0 \\<Longrightarrow> r2 - r1 = 0\""], ["proof (prove)\nusing this:\n  (r2 - r1) mod - m = 0\n  r2 - r1 \\<le> 0 \\<Longrightarrow> (r2 - r1) mod - m = r2 - r1\n\ngoal (1 subgoal):\n 1. r2 - r1 \\<le> 0 \\<Longrightarrow> r2 - r1 = 0", "by simp"], ["proof (state)\nthis:\n  r2 - r1 \\<le> 0 \\<Longrightarrow> r2 - r1 = 0\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "have \"r2 - r1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r2 - r1 = 0", "using s1_pos s1_neg linorder_linear"], ["proof (prove)\nusing this:\n  0 \\<le> r2 - r1 \\<Longrightarrow> r2 - r1 = 0\n  r2 - r1 \\<le> 0 \\<Longrightarrow> r2 - r1 = 0\n  ?x \\<le> ?y \\<or> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. r2 - r1 = 0", "by blast"], ["proof (state)\nthis:\n  r2 - r1 = 0\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "hence \"r1 = r2\""], ["proof (prove)\nusing this:\n  r2 - r1 = 0\n\ngoal (1 subgoal):\n 1. r1 = r2", "by simp"], ["proof (state)\nthis:\n  r1 = r2\n\ngoal (1 subgoal):\n 1. r1 \\<noteq> r2 \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  r1 = r2\n\ngoal (1 subgoal):\n 1. False", "using as1'"], ["proof (prove)\nusing this:\n  r1 = r2\n  r1 \\<noteq> r2\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r1 = r2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - a) mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "thus ?thesis"], ["proof (prove)\nusing this:\n  r1 = r2\n\ngoal (1 subgoal):\n 1. a mod m = b mod m", "using a_r1 b_r2"], ["proof (prove)\nusing this:\n  r1 = r2\n  r1 = a mod m\n  r2 = b mod m\n\ngoal (1 subgoal):\n 1. a mod m = b mod m", "by blast"], ["proof (state)\nthis:\n  a mod m = b mod m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zmod_zminus_eq_conv_pos: \"\n  0 < (m::int) \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)", "apply (simp only: mod_minus_right neg_equal_iff_equal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> (- a mod m = - b mod m) = (a mod m = b mod m)", "apply (simp only: zmod_zminus1_eq_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    ((if a mod m = 0 then 0 else m - a mod m) =\n     (if b mod m = 0 then 0 else m - b mod m)) =\n    (a mod m = b mod m)", "apply (split if_split)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    (a mod m = 0 \\<longrightarrow>\n     (b mod m = 0 \\<longrightarrow> (0 = 0) = (a mod m = b mod m)) \\<and>\n     (b mod m \\<noteq> 0 \\<longrightarrow>\n      (0 = m - b mod m) = (a mod m = b mod m))) \\<and>\n    (a mod m \\<noteq> 0 \\<longrightarrow>\n     (b mod m = 0 \\<longrightarrow>\n      (m - a mod m = 0) = (a mod m = b mod m)) \\<and>\n     (b mod m \\<noteq> 0 \\<longrightarrow>\n      (m - a mod m = m - b mod m) = (a mod m = b mod m)))", "apply (safe, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>0 < m; a = m * q; m = b mod m\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>q.\n       \\<lbrakk>0 < m; b = m * q; m = a mod m\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert pos_mod_bound[of m a] pos_mod_bound[of m b], simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma zmod_zminus_eq_conv: \"\n  ((a::int) mod - m = b mod - m) = (a mod m = b mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a mod - m = b mod - m) = (a mod m = b mod m)", "apply (insert linorder_less_linear[of 0 m], elim disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 0 < m \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)\n 2. 0 = m \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)\n 3. m < 0 \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)", "apply (blast dest: zmod_zminus_eq_conv_pos)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 = m \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)\n 2. m < 0 \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. m < 0 \\<Longrightarrow> (a mod - m = b mod - m) = (a mod m = b mod m)", "apply (simp add: zmod_zminus_eq_conv_pos[of \"-m\", symmetric])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma zdiff_mod_0_imp_mod_eq:\"\n  (b - a) mod m = 0 \\<Longrightarrow> (a::int) mod m = b mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) mod m = 0 \\<Longrightarrow> a mod m = b mod m", "by (metis dvd_eq_mod_eq_0 mod_eq_dvd_iff)"], ["", "lemma zmod_eq_diff_mod_0_conv: \"\n  ((a::int) mod m = b mod m) = ((b - a) mod m = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a mod m = b mod m) = ((b - a) mod m = 0)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a mod m = b mod m \\<Longrightarrow> (b - a) mod m = 0\n 2. (b - a) mod m = 0 \\<Longrightarrow> a mod m = b mod m", "apply (rule zmod_eq_imp_diff_mod_0, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) mod m = 0 \\<Longrightarrow> a mod m = b mod m", "apply (rule zdiff_mod_0_imp_mod_eq, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma \"\\<not>(\\<exists>(a::int) b m. (b - a) mod m = 0 \\<and> a mod m \\<noteq> b mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>a b m. (b - a) mod m = 0 \\<and> a mod m \\<noteq> b mod m", "by (simp add: zmod_eq_diff_mod_0_conv)"], ["", "lemma \"\\<exists>(a::nat) b m. (b - a) mod m = 0 \\<and> a mod m \\<noteq> b mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b m. (b - a) mod m = 0 \\<and> a mod m \\<noteq> b mod m", "apply (rule_tac x=1 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b m. (b - 1) mod m = 0 \\<and> 1 mod m \\<noteq> b mod m", "apply (rule_tac x=0 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. (0 - 1) mod m = 0 \\<and> 1 mod m \\<noteq> 0 mod m", "apply (rule_tac x=2 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 - 1) mod 2 = 0 \\<and> 1 mod 2 \\<noteq> 0 mod 2", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma zmult_div_leq_mono:\"\n  \\<lbrakk> (0::int) \\<le> x; a \\<le> b; 0 < d \\<rbrakk> \\<Longrightarrow> x * a div d \\<le> x * b div d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> x; a \\<le> b; 0 < d\\<rbrakk>\n    \\<Longrightarrow> x * a div d \\<le> x * b div d", "by (metis mult_right_mono zdiv_mono1 mult.commute)"], ["", "lemma zmult_div_leq_mono_neg:\"\n  \\<lbrakk> x \\<le> (0::int); a \\<le> b; 0 < d \\<rbrakk> \\<Longrightarrow> x * b div d \\<le> x * a div d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> 0; a \\<le> b; 0 < d\\<rbrakk>\n    \\<Longrightarrow> x * b div d \\<le> x * a div d", "by (metis mult_left_mono_neg zdiv_mono1)"], ["", "lemma zmult_div_pos_le:\"\n  \\<lbrakk> (0::int) \\<le> a; 0 \\<le> b; b \\<le> c \\<rbrakk> \\<Longrightarrow> a * b div c \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (case_tac \"b = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (subgoal_tac \"b * a \\<le> c * a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     b * a \\<le> c * a\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a\n 2. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b * a \\<le> c * a", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b * a \\<le> c * a\n 2. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     b * a \\<le> c * a\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (simp only: mult_right_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     b * a \\<le> c * a\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (simp only: mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     a * b \\<le> a * c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (subgoal_tac \"a * b div c \\<le> a * c div c\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     a * b \\<le> a * c; a * b div c \\<le> a * c div c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a\n 2. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     a * b \\<le> a * c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a * c div c", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     a * b \\<le> a * c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a * c div c\n 2. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     a * b \\<le> a * c; a * b div c \\<le> a * c div c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (simp only: zdiv_mono1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b; b \\<le> c; b \\<noteq> 0;\n     a * b \\<le> a * c; a * b div c \\<le> a * c div c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma zmult_div_neg_le:\"\n  \\<lbrakk> a \\<le> (0::int); 0 < c; c \\<le> b \\<rbrakk> \\<Longrightarrow> a * b div c \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (subgoal_tac \"b * a \\<le> c * a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; b * a \\<le> c * a\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a\n 2. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b\\<rbrakk>\n    \\<Longrightarrow> b * a \\<le> c * a", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b\\<rbrakk>\n    \\<Longrightarrow> b * a \\<le> c * a\n 2. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; b * a \\<le> c * a\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (simp only: mult_right_mono_neg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; b * a \\<le> c * a\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (simp only: mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; a * b \\<le> a * c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (subgoal_tac \"a * b div c \\<le> a * c div c\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; a * b \\<le> a * c;\n     a * b div c \\<le> a * c div c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a\n 2. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; a * b \\<le> a * c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a * c div c", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; a * b \\<le> a * c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a * c div c\n 2. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; a * b \\<le> a * c;\n     a * b div c \\<le> a * c div c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply (simp only: zdiv_mono1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> 0; 0 < c; c \\<le> b; a * b \\<le> a * c;\n     a * b div c \\<le> a * c div c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma zmult_div_ge_0:\"\\<lbrakk> (0::int) \\<le> x; 0 \\<le> a; 0 < c \\<rbrakk> \\<Longrightarrow> 0 \\<le> a * x div c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> x; 0 \\<le> a; 0 < c\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> a * x div c", "by (metis pos_imp_zdiv_nonneg_iff split_mult_pos_le)"], ["", "corollary zmult_div_plus_ge_0: \"\n  \\<lbrakk> (0::int) \\<le> x; 0 \\<le> a; 0 \\<le> b; 0 < c\\<rbrakk> \\<Longrightarrow> 0 \\<le> a * x div c + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> x; 0 \\<le> a; 0 \\<le> b; 0 < c\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> a * x div c + b", "by (insert zmult_div_ge_0[of x a c], simp)"], ["", "lemma zmult_div_abs_ge: \"\n  \\<lbrakk> (0::int) \\<le> b; b \\<le> b'; 0 \\<le> a; 0 < c\\<rbrakk> \\<Longrightarrow>\n  \\<bar>a * b div c\\<bar> \\<le> \\<bar>a * b' div c\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> b; b \\<le> b'; 0 \\<le> a; 0 < c\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a * b div c\\<bar> \\<le> \\<bar>a * b' div c\\<bar>", "apply (insert zmult_div_ge_0[of b a c] zmult_div_ge_0[of \"b'\" a c], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> b; b \\<le> b'; 0 \\<le> a; 0 < c; 0 \\<le> a * b div c;\n     0 \\<le> a * b' div c\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a * b' div c", "by (metis zmult_div_leq_mono)"], ["", "lemma zmult_div_plus_abs_ge: \"\n  \\<lbrakk> (0::int) \\<le> b; b \\<le> b'; 0 \\<le> a; 0 < c \\<rbrakk> \\<Longrightarrow>\n  \\<bar>a * b div c + a\\<bar> \\<le> \\<bar>a * b' div c + a\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> b; b \\<le> b'; 0 \\<le> a; 0 < c\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a * b div c + a\\<bar>\n                      \\<le> \\<bar>a * b' div c + a\\<bar>", "apply (insert zmult_div_plus_ge_0[of b a a c] zmult_div_plus_ge_0[of \"b'\" a a c], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> b; b \\<le> b'; 0 \\<le> a; 0 < c;\n     0 \\<le> a * b div c + a; 0 \\<le> a * b' div c + a\\<rbrakk>\n    \\<Longrightarrow> a * b div c \\<le> a * b' div c", "by (metis zmult_div_leq_mono)"], ["", "subsection \\<open>Some further (in-)equality results for \\<open>div\\<close> and \\<open>mod\\<close>\\<close>"], ["", "lemma less_mod_eq_imp_add_divisor_le: \"\n  \\<lbrakk> (x::nat) < y; x mod m = y mod m \\<rbrakk> \\<Longrightarrow> x + m \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m\\<rbrakk>\n    \\<Longrightarrow> x + m \\<le> y", "apply (case_tac \"m = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < y; x mod m = y mod m; m = 0\\<rbrakk>\n    \\<Longrightarrow> x + m \\<le> y\n 2. \\<lbrakk>x < y; x mod m = y mod m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> x + m \\<le> y", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> x + m \\<le> y", "apply (rule contrapos_pp[of \"x mod m = y mod m\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < y; x mod m = y mod m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> x mod m = y mod m\n 2. \\<lbrakk>x < y; x mod m = y mod m; m \\<noteq> 0;\n     \\<not> x + m \\<le> y\\<rbrakk>\n    \\<Longrightarrow> x mod m \\<noteq> y mod m", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; m \\<noteq> 0;\n     \\<not> x + m \\<le> y\\<rbrakk>\n    \\<Longrightarrow> x mod m \\<noteq> y mod m", "apply (rule ccontr, simp only: not_not, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "assume m_greater_0: \"0 < m\""], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "assume x_less_y:\"x < y\""], ["proof (state)\nthis:\n  x < y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "hence y_x_greater_0:\"0 < y - x\""], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. 0 < y - x", "by simp"], ["proof (state)\nthis:\n  0 < y - x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"x mod m = y mod m\""], ["proof (state)\nthis:\n  x mod m = y mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "hence y_x_mod_m: \"(y - x) mod m = 0\""], ["proof (prove)\nusing this:\n  x mod m = y mod m\n\ngoal (1 subgoal):\n 1. (y - x) mod m = 0", "by (simp only: mod_eq_imp_diff_mod_0)"], ["proof (state)\nthis:\n  (y - x) mod m = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"\\<not> x + m \\<le> y\""], ["proof (state)\nthis:\n  \\<not> x + m \\<le> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "hence \"y < x + m\""], ["proof (prove)\nusing this:\n  \\<not> x + m \\<le> y\n\ngoal (1 subgoal):\n 1. y < x + m", "by simp"], ["proof (state)\nthis:\n  y < x + m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "hence \"y - x < x + m - x\""], ["proof (prove)\nusing this:\n  y < x + m\n\ngoal (1 subgoal):\n 1. y - x < x + m - x", "by (simp add: diff_add_inverse diff_less_conv m_greater_0)"], ["proof (state)\nthis:\n  y - x < x + m - x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "hence y_x_less_m: \"y - x < m\""], ["proof (prove)\nusing this:\n  y - x < x + m - x\n\ngoal (1 subgoal):\n 1. y - x < m", "by simp"], ["proof (state)\nthis:\n  y - x < m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "have \"(y - x) mod m = y - x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y - x) mod m = y - x", "using y_x_less_m"], ["proof (prove)\nusing this:\n  y - x < m\n\ngoal (1 subgoal):\n 1. (y - x) mod m = y - x", "by simp"], ["proof (state)\nthis:\n  (y - x) mod m = y - x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "hence \"y - x = 0\""], ["proof (prove)\nusing this:\n  (y - x) mod m = y - x\n\ngoal (1 subgoal):\n 1. y - x = 0", "using y_x_mod_m"], ["proof (prove)\nusing this:\n  (y - x) mod m = y - x\n  (y - x) mod m = 0\n\ngoal (1 subgoal):\n 1. y - x = 0", "by simp"], ["proof (state)\nthis:\n  y - x = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; x mod m = y mod m; \\<not> x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  y - x = 0\n\ngoal (1 subgoal):\n 1. False", "using y_x_greater_0"], ["proof (prove)\nusing this:\n  y - x = 0\n  0 < y - x\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_div_imp_mult_add_divisor_le: \"\n  (x::nat) < n div m \\<Longrightarrow> x * m + m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < n div m \\<Longrightarrow> x * m + m \\<le> n", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < n div m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (case_tac \"n < m\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < n div m; m \\<noteq> 0; \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (simp add: linorder_not_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < n div m; 0 < m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (subgoal_tac \"m \\<le> n - n mod m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < n div m; 0 < m; m \\<le> n; m \\<le> n - n mod m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n\n 2. \\<lbrakk>x < n div m; 0 < m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m \\<le> n - n mod m", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < n div m; 0 < m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m \\<le> n - n mod m\n 2. \\<lbrakk>x < n div m; 0 < m; m \\<le> n; m \\<le> n - n mod m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (drule div_le_mono[of m _ m])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < n div m; 0 < m; m div m \\<le> n div m\\<rbrakk>\n    \\<Longrightarrow> m \\<le> n - n mod m\n 2. \\<lbrakk>x < n div m; 0 < m; m \\<le> n; m \\<le> n - n mod m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (simp only: div_self)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < n div m; 0 < m; 1 \\<le> n div m\\<rbrakk>\n    \\<Longrightarrow> m \\<le> n - n mod m\n 2. \\<lbrakk>x < n div m; 0 < m; m \\<le> n; m \\<le> n - n mod m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (drule mult_le_mono2[of 1 _ m])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < n div m; 0 < m; m * 1 \\<le> m * (n div m)\\<rbrakk>\n    \\<Longrightarrow> m \\<le> n - n mod m\n 2. \\<lbrakk>x < n div m; 0 < m; m \\<le> n; m \\<le> n - n mod m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (simp only: mult_1_right minus_mod_eq_mult_div [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < n div m; 0 < m; m \\<le> n; m \\<le> n - n mod m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (drule less_imp_le_pred[of x])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> n; m \\<le> n - n mod m;\n     x \\<le> n div m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (drule mult_le_mono2[of x _ m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> n; m \\<le> n - n mod m;\n     m * x \\<le> m * (n div m - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (simp add: diff_mult_distrib2 minus_mod_eq_mult_div [symmetric] del: diff_diff_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> n; m \\<le> n - n mod m;\n     m * x \\<le> n - n mod m - m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (simp only: le_diff_conv2[of m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> n; m \\<le> n - n mod m;\n     m * x + m \\<le> n - n mod m\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (drule le_diff_imp_le[of \"m * x + m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> n; m \\<le> n - n mod m;\n     m * x + m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> x * m + m \\<le> n", "apply (simp only: mult.commute[of _ m])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_add_eq_imp_mod_0: \"\n  ((n + k) mod (m::nat) = n mod m) = (k mod m = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((n + k) mod m = n mod m) = (k mod m = 0)", "by (metis add_eq_if mod_add mod_add_self1 mod_self add.commute)"], ["", "lemma between_imp_mod_between: \"\n  \\<lbrakk> b < (m::nat); m * k + a \\<le> n; n \\<le> m * k + b \\<rbrakk> \\<Longrightarrow>\n  a \\<le> n mod m \\<and> n mod m \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b", "apply (case_tac \"m = 0\", simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b", "apply (frule gr_implies_gr0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b", "apply (subgoal_tac \"k = n div m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m;\n     k = n div m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b\n 2. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> k = n div m", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> k = n div m\n 2. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m;\n     k = n div m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b", "apply (rule sym, rule div_nat_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> m * k \\<le> n\n 2. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> n < m * Suc k\n 3. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m;\n     k = n div m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m\\<rbrakk>\n    \\<Longrightarrow> n < m * Suc k\n 2. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m;\n     k = n div m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < m; m * k + a \\<le> n; n \\<le> m * k + b; 0 < m;\n     k = n div m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < m; m * (n div m) + a \\<le> n; n \\<le> m * (n div m) + b;\n     0 < m; k = n div m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m \\<and> n mod m \\<le> b", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>b < m; m * (n div m) + a \\<le> n; n \\<le> m * (n div m) + b;\n     0 < m; k = n div m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n mod m\n 2. \\<lbrakk>b < m; m * (n div m) + a \\<le> n; n \\<le> m * (n div m) + b;\n     0 < m; k = n div m\\<rbrakk>\n    \\<Longrightarrow> n mod m \\<le> b", "apply (rule add_le_imp_le_left[where c=\"m * (n div m)\"], simp)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary between_imp_mod_le: \"\n  \\<lbrakk> b < (m::nat); m * k \\<le> n; n \\<le> m * k + b \\<rbrakk> \\<Longrightarrow> n mod m \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < m; m * k \\<le> n; n \\<le> m * k + b\\<rbrakk>\n    \\<Longrightarrow> n mod m \\<le> b", "by (insert between_imp_mod_between[of b m k 0 n], simp)"], ["", "corollary between_imp_mod_gr0: \"\n  \\<lbrakk> (m::nat) * k < n; n < m * k + m \\<rbrakk> \\<Longrightarrow> 0 < n mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m * k < n; n < m * k + m\\<rbrakk> \\<Longrightarrow> 0 < n mod m", "apply (case_tac \"m = 0\", simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m * k < n; n < m * k + m\\<rbrakk> \\<Longrightarrow> 0 < n mod m", "apply (rule Suc_le_lessD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m * k < n; n < m * k + m\\<rbrakk>\n    \\<Longrightarrow> Suc 0 \\<le> n mod m", "apply (rule between_imp_mod_between[THEN conjunct1, of \"m - Suc 0\" m k \"Suc 0\" n])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>m * k < n; n < m * k + m\\<rbrakk>\n    \\<Longrightarrow> m - Suc 0 < m\n 2. \\<lbrakk>m * k < n; n < m * k + m\\<rbrakk>\n    \\<Longrightarrow> m * k + Suc 0 \\<le> n\n 3. \\<lbrakk>m * k < n; n < m * k + m\\<rbrakk>\n    \\<Longrightarrow> n \\<le> m * k + (m - Suc 0)", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary le_less_div_conv: \"\n  0 < m \\<Longrightarrow> (k * m \\<le> n \\<and> n < Suc k * m) = (n div m = k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    (k * m \\<le> n \\<and> n < Suc k * m) = (n div m = k)", "by (auto simp add: ac_simps intro: div_nat_eqI dividend_less_times_div)"], ["", "lemma le_less_imp_div: \"\n  \\<lbrakk> k * m \\<le> n; n < Suc k * m \\<rbrakk> \\<Longrightarrow> n div m = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k * m \\<le> n; n < Suc k * m\\<rbrakk>\n    \\<Longrightarrow> n div m = k", "by (auto simp add: ac_simps intro: div_nat_eqI)"], ["", "lemma div_imp_le_less: \"\n  \\<lbrakk> n div m = k; 0 < m \\<rbrakk> \\<Longrightarrow> k * m \\<le> n \\<and> n < Suc k * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n div m = k; 0 < m\\<rbrakk>\n    \\<Longrightarrow> k * m \\<le> n \\<and> n < Suc k * m", "by (auto simp add: ac_simps intro: dividend_less_times_div)"], ["", "lemma div_le_mod_le_imp_le: \"\n  \\<lbrakk> (a::nat) div m \\<le> b div m; a mod m \\<le> b mod m \\<rbrakk> \\<Longrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a div m \\<le> b div m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> a \\<le> b", "apply (rule subst[OF mult_div_mod_eq[of m a]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a div m \\<le> b div m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> m * (a div m) + a mod m \\<le> b", "apply (rule subst[OF mult_div_mod_eq[of m b]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a div m \\<le> b div m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> m * (a div m) + a mod m \\<le> m * (b div m) + b mod m", "apply (rule add_le_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a div m \\<le> b div m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> m * (a div m) \\<le> m * (b div m)\n 2. \\<lbrakk>a div m \\<le> b div m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> a mod m \\<le> b mod m", "apply (rule mult_le_mono2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a div m \\<le> b div m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> a div m \\<le> b div m\n 2. \\<lbrakk>a div m \\<le> b div m; a mod m \\<le> b mod m\\<rbrakk>\n    \\<Longrightarrow> a mod m \\<le> b mod m", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma le_mod_add_eq_imp_add_mod_le: \"\n  \\<lbrakk> a \\<le> b; (a + k) mod m = (b::nat) mod m \\<rbrakk> \\<Longrightarrow> a + k mod m \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; (a + k) mod m = b mod m\\<rbrakk>\n    \\<Longrightarrow> a + k mod m \\<le> b", "by (metis add_le_mono2 diff_add_inverse le_add1 le_add_diff_inverse mod_diff1_eq mod_less_eq_dividend)"], ["", "corollary mult_divisor_le_mod_ge_imp_ge: \"\n  \\<lbrakk> (m::nat) * k \\<le> n; r \\<le> n mod m \\<rbrakk> \\<Longrightarrow> m * k + r \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m * k \\<le> n; r \\<le> n mod m\\<rbrakk>\n    \\<Longrightarrow> m * k + r \\<le> n", "apply (insert le_mod_add_eq_imp_add_mod_le[of \"m * k\" n \"n mod m\" m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m * k \\<le> n; r \\<le> n mod m;\n     \\<lbrakk>m * k \\<le> n; (m * k + n mod m) mod m = n mod m\\<rbrakk>\n     \\<Longrightarrow> m * k + n mod m mod m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m * k + r \\<le> n", "apply (simp add: add.commute[of \"m * k\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Additional multiplication results for \\<open>mod\\<close> and \\<open>div\\<close>\\<close>"], ["", "lemma mod_0_imp_mod_mult_right_0: \"\n  n mod m = (0::nat) \\<Longrightarrow> n * k mod m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod m = 0 \\<Longrightarrow> n * k mod m = 0", "by fastforce"], ["", "lemma mod_0_imp_mod_mult_left_0: \"\n  n mod m = (0::nat) \\<Longrightarrow> k * n mod m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod m = 0 \\<Longrightarrow> k * n mod m = 0", "by fastforce"], ["", "lemma mod_0_imp_div_mult_left_eq: \"\n  n mod m = (0::nat) \\<Longrightarrow> k * n div m = k * (n div m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod m = 0 \\<Longrightarrow> k * n div m = k * (n div m)", "by fastforce"], ["", "lemma mod_0_imp_div_mult_right_eq: \"\n  n mod m = (0::nat) \\<Longrightarrow> n * k div m = k * (n div m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod m = 0 \\<Longrightarrow> n * k div m = k * (n div m)", "by fastforce"], ["", "lemma mod_0_imp_mod_factor_0_left: \"\n  n mod (m * m') = (0::nat) \\<Longrightarrow> n mod m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod (m * m') = 0 \\<Longrightarrow> n mod m = 0", "by fastforce"], ["", "lemma mod_0_imp_mod_factor_0_right: \"\n  n mod (m * m') = (0::nat) \\<Longrightarrow> n mod m' = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod (m * m') = 0 \\<Longrightarrow> n mod m' = 0", "by fastforce"], ["", "subsection \\<open>Some factor distribution facts for \\<open>mod\\<close>\\<close>"], ["", "lemma mod_eq_mult_distrib: \"\n  (a::nat) mod m = b mod m \\<Longrightarrow>\n  a * k mod (m * k) = b * k mod (m * k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m = b mod m \\<Longrightarrow>\n    a * k mod (m * k) = b * k mod (m * k)", "by simp"], ["", "lemma mod_mult_eq_imp_mod_eq: \"\n  (a::nat) mod (m * k) = b mod (m * k) \\<Longrightarrow> a mod m = b mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod (m * k) = b mod (m * k) \\<Longrightarrow> a mod m = b mod m", "apply (simp only: mod_mult2_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m * (a div m mod k) + a mod m =\n    m * (b div m mod k) + b mod m \\<Longrightarrow>\n    a mod m = b mod m", "apply (drule_tac arg_cong[where f=\"\\<lambda>x. x mod m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (m * (a div m mod k) + a mod m) mod m =\n    (m * (b div m mod k) + b mod m) mod m \\<Longrightarrow>\n    a mod m = b mod m", "apply (simp add: add.commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary mod_eq_mod_0_imp_mod_eq: \"\n  \\<lbrakk> (a::nat) mod m' = b mod m'; m' mod m = 0 \\<rbrakk>\n  \\<Longrightarrow> a mod m = b mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a mod m' = b mod m'; m' mod m = 0\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "using mod_mod_cancel [of m m' a] mod_mod_cancel [of m m' b]"], ["proof (prove)\nusing this:\n  m dvd m' \\<Longrightarrow> a mod m' mod m = a mod m\n  m dvd m' \\<Longrightarrow> b mod m' mod m = b mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a mod m' = b mod m'; m' mod m = 0\\<rbrakk>\n    \\<Longrightarrow> a mod m = b mod m", "by auto"], ["", "lemma mod_factor_imp_mod_0: \"\n  \\<lbrakk>(x::nat) mod (m * k) = y * k mod (m * k)\\<rbrakk> \\<Longrightarrow> x mod k = 0\"\n  (is \"\\<lbrakk> ?P1 \\<rbrakk> \\<Longrightarrow> ?Q\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x mod k = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x mod k = 0", "assume as1: ?P1"], ["proof (state)\nthis:\n  x mod (m * k) = y * k mod (m * k)\n\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x mod k = 0", "have \"y * k mod (m * k) = y mod m * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * k mod (m * k) = y mod m * k", "by simp"], ["proof (state)\nthis:\n  y * k mod (m * k) = y mod m * k\n\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x mod k = 0", "hence \"x mod (m * k) = y mod m * k\""], ["proof (prove)\nusing this:\n  y * k mod (m * k) = y mod m * k\n\ngoal (1 subgoal):\n 1. x mod (m * k) = y mod m * k", "using as1"], ["proof (prove)\nusing this:\n  y * k mod (m * k) = y mod m * k\n  x mod (m * k) = y * k mod (m * k)\n\ngoal (1 subgoal):\n 1. x mod (m * k) = y mod m * k", "by simp"], ["proof (state)\nthis:\n  x mod (m * k) = y mod m * k\n\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x mod k = 0", "hence \"y mod m * k = k * (x div k mod m) + x mod k\" (is \"?l1 = ?r1\")"], ["proof (prove)\nusing this:\n  x mod (m * k) = y mod m * k\n\ngoal (1 subgoal):\n 1. y mod m * k = k * (x div k mod m) + x mod k", "by (simp only: ac_simps mod_mult2_eq)"], ["proof (state)\nthis:\n  y mod m * k = k * (x div k mod m) + x mod k\n\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x mod k = 0", "hence \"(y mod m * k) mod k = ?r1 mod k\""], ["proof (prove)\nusing this:\n  y mod m * k = k * (x div k mod m) + x mod k\n\ngoal (1 subgoal):\n 1. y mod m * k mod k = (k * (x div k mod m) + x mod k) mod k", "by simp"], ["proof (state)\nthis:\n  y mod m * k mod k = (k * (x div k mod m) + x mod k) mod k\n\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x mod k = 0", "hence \"0 = ?r1 mod k\""], ["proof (prove)\nusing this:\n  y mod m * k mod k = (k * (x div k mod m) + x mod k) mod k\n\ngoal (1 subgoal):\n 1. 0 = (k * (x div k mod m) + x mod k) mod k", "by simp"], ["proof (state)\nthis:\n  0 = (k * (x div k mod m) + x mod k) mod k\n\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x mod k = 0", "thus \"x mod k = 0\""], ["proof (prove)\nusing this:\n  0 = (k * (x div k mod m) + x mod k) mod k\n\ngoal (1 subgoal):\n 1. x mod k = 0", "by (simp add: mod_add_eq)"], ["proof (state)\nthis:\n  x mod k = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary mod_factor_div: \"\n  \\<lbrakk>(x::nat) mod (m * k) = y * k mod (m * k)\\<rbrakk> \\<Longrightarrow> x div k * k = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod (m * k) = y * k mod (m * k) \\<Longrightarrow> x div k * k = x", "by (blast intro: mod_factor_imp_mod_0[THEN mod_0_div_mult_cancel[THEN iffD1]])"], ["", "lemma mod_factor_div_mod:\"\n  \\<lbrakk> (x::nat) mod (m * k) = y * k mod (m * k); 0 < k \\<rbrakk>\n  \\<Longrightarrow> x div k mod m = y mod m\"\n  (is \"\\<lbrakk> ?P1; ?P2 \\<rbrakk> \\<Longrightarrow> ?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "assume as1: ?P1"], ["proof (state)\nthis:\n  x mod (m * k) = y * k mod (m * k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "assume as2: ?P2"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "have x_mod_k_0: \"x mod k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod k = 0", "using as1"], ["proof (prove)\nusing this:\n  x mod (m * k) = y * k mod (m * k)\n\ngoal (1 subgoal):\n 1. x mod k = 0", "by (blast intro: mod_factor_imp_mod_0)"], ["proof (state)\nthis:\n  x mod k = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "have \"?L * k + x mod k = x mod (k * m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x div k mod m * k + x mod k = x mod (k * m)", "by (simp only: mod_mult2_eq mult.commute[of _ k])"], ["proof (state)\nthis:\n  x div k mod m * k + x mod k = x mod (k * m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "hence \"?L * k = x mod (k * m)\""], ["proof (prove)\nusing this:\n  x div k mod m * k + x mod k = x mod (k * m)\n\ngoal (1 subgoal):\n 1. x div k mod m * k = x mod (k * m)", "using x_mod_k_0"], ["proof (prove)\nusing this:\n  x div k mod m * k + x mod k = x mod (k * m)\n  x mod k = 0\n\ngoal (1 subgoal):\n 1. x div k mod m * k = x mod (k * m)", "by simp"], ["proof (state)\nthis:\n  x div k mod m * k = x mod (k * m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "hence \"?L * k = y * k mod (m * k)\""], ["proof (prove)\nusing this:\n  x div k mod m * k = x mod (k * m)\n\ngoal (1 subgoal):\n 1. x div k mod m * k = y * k mod (m * k)", "using as1"], ["proof (prove)\nusing this:\n  x div k mod m * k = x mod (k * m)\n  x mod (m * k) = y * k mod (m * k)\n\ngoal (1 subgoal):\n 1. x div k mod m * k = y * k mod (m * k)", "by (simp only: ac_simps)"], ["proof (state)\nthis:\n  x div k mod m * k = y * k mod (m * k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "hence \"?L * k = y mod m * k\""], ["proof (prove)\nusing this:\n  x div k mod m * k = y * k mod (m * k)\n\ngoal (1 subgoal):\n 1. x div k mod m * k = y mod m * k", "by (simp only: mult_mod_left)"], ["proof (state)\nthis:\n  x div k mod m * k = y mod m * k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x mod (m * k) = y * k mod (m * k); 0 < k\\<rbrakk>\n    \\<Longrightarrow> x div k mod m = y mod m", "thus ?thesis"], ["proof (prove)\nusing this:\n  x div k mod m * k = y mod m * k\n\ngoal (1 subgoal):\n 1. x div k mod m = y mod m", "using as2"], ["proof (prove)\nusing this:\n  x div k mod m * k = y mod m * k\n  0 < k\n\ngoal (1 subgoal):\n 1. x div k mod m = y mod m", "by simp"], ["proof (state)\nthis:\n  x div k mod m = y mod m\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>More results about quotient \\<open>div\\<close> with addition and subtraction\\<close>"], ["", "lemma div_add1_eq_if: \"0 < m \\<Longrightarrow>\n  (a + b) div (m::nat) = a div m + b div m + (\n    if a mod m + b mod m < m then 0 else Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    (a + b) div m =\n    a div m + b div m + (if a mod m + b mod m < m then 0 else Suc 0)", "apply (simp only: div_add1_eq[of a b])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    a div m + b div m + (a mod m + b mod m) div m =\n    a div m + b div m + (if a mod m + b mod m < m then 0 else Suc 0)", "apply (rule arg_cong[of \"(a mod m + b mod m) div m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    (a mod m + b mod m) div m = (if a mod m + b mod m < m then 0 else Suc 0)", "apply (clarsimp simp: linorder_not_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> a mod m + b mod m\\<rbrakk>\n    \\<Longrightarrow> (a mod m + b mod m) div m = Suc 0", "apply (rule le_less_imp_div[of \"Suc 0\" m \"a mod m + b mod m\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> a mod m + b mod m\\<rbrakk>\n    \\<Longrightarrow> a mod m + b mod m < Suc (Suc 0) * m", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> a mod m + b mod m\\<rbrakk>\n    \\<Longrightarrow> a mod m + b mod m < m + m", "apply (simp only: add_less_mono[OF mod_less_divisor mod_less_divisor])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary div_add1_eq1: \"\n  a mod m + b mod m < (m::nat) \\<Longrightarrow>\n  (a + b) div (m::nat) = a div m + b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m + b mod m < m \\<Longrightarrow>\n    (a + b) div m = a div m + b div m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a mod m + b mod m < m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (a + b) div m = a div m + b div m", "apply (simp add: div_add1_eq_if)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary div_add1_eq1_mod_0_left: \"\n  a mod m = 0 \\<Longrightarrow> (a + b) div (m::nat) = a div m + b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m = 0 \\<Longrightarrow> (a + b) div m = a div m + b div m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a mod m = 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (a + b) div m = a div m + b div m", "apply (simp add: div_add1_eq1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary div_add1_eq1_mod_0_right: \"\n  b mod m = 0 \\<Longrightarrow> (a + b) div (m::nat) = a div m + b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b mod m = 0 \\<Longrightarrow> (a + b) div m = a div m + b div m", "by (fastforce simp: div_add1_eq1_mod_0_left)"], ["", "corollary div_add1_eq2: \"\n  \\<lbrakk> 0 < m; (m::nat) \\<le> a mod m + b mod m \\<rbrakk> \\<Longrightarrow>\n  (a + b) div (m::nat) = Suc (a div m + b div m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> a mod m + b mod m\\<rbrakk>\n    \\<Longrightarrow> (a + b) div m = Suc (a div m + b div m)", "by (simp add: div_add1_eq_if)"], ["", "lemma div_Suc: \"\n  0 < n \\<Longrightarrow> Suc m div n = (if Suc (m mod n) = n then Suc (m div n) else m div n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    Suc m div n = (if Suc (m mod n) = n then Suc (m div n) else m div n)", "apply (drule Suc_leI, drule le_imp_less_or_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 < n \\<or> Suc 0 = n \\<Longrightarrow>\n    Suc m div n = (if Suc (m mod n) = n then Suc (m div n) else m div n)", "apply (case_tac \"n = Suc 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc 0 < n \\<or> Suc 0 = n; n \\<noteq> Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc m div n =\n                      (if Suc (m mod n) = n then Suc (m div n) else m div n)", "apply (split if_split, intro conjI impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Suc 0 < n \\<or> Suc 0 = n; n \\<noteq> Suc 0;\n     Suc (m mod n) = n\\<rbrakk>\n    \\<Longrightarrow> Suc m div n = Suc (m div n)\n 2. \\<lbrakk>Suc 0 < n \\<or> Suc 0 = n; n \\<noteq> Suc 0;\n     Suc (m mod n) \\<noteq> n\\<rbrakk>\n    \\<Longrightarrow> Suc m div n = m div n", "apply (rule_tac t=\"Suc m\" and s=\"m + 1\" in subst, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Suc 0 < n \\<or> Suc 0 = n; n \\<noteq> Suc 0;\n     Suc (m mod n) = n\\<rbrakk>\n    \\<Longrightarrow> (m + 1) div n = Suc (m div n)\n 2. \\<lbrakk>Suc 0 < n \\<or> Suc 0 = n; n \\<noteq> Suc 0;\n     Suc (m mod n) \\<noteq> n\\<rbrakk>\n    \\<Longrightarrow> Suc m div n = m div n", "apply (subst div_add1_eq2, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc 0 < n; Suc (m mod n) \\<noteq> n\\<rbrakk>\n    \\<Longrightarrow> Suc m div n = m div n", "apply (insert le_neq_trans[OF mod_less_divisor[THEN Suc_leI, of n m]], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (m mod n) < n \\<Longrightarrow> Suc m div n = m div n", "apply (rule_tac t=\"Suc m\" and s=\"m + 1\" in subst, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (m mod n) < n \\<Longrightarrow> (m + 1) div n = m div n", "apply (subst div_add1_eq1, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_Suc': \"\n  0 < n \\<Longrightarrow> Suc m div n = (if m mod n < n - Suc 0 then m div n else Suc (m div n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    Suc m div n = (if m mod n < n - Suc 0 then m div n else Suc (m div n))", "apply (simp add: div_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    (Suc (m mod n) = n \\<longrightarrow> \\<not> m mod n < n - Suc 0) \\<and>\n    (Suc (m mod n) \\<noteq> n \\<longrightarrow> m mod n < n - Suc 0)", "apply (intro conjI impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < n; Suc (m mod n) = n\\<rbrakk>\n    \\<Longrightarrow> \\<not> m mod n < n - Suc 0\n 2. \\<lbrakk>0 < n; Suc (m mod n) \\<noteq> n\\<rbrakk>\n    \\<Longrightarrow> m mod n < n - Suc 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; Suc (m mod n) \\<noteq> n\\<rbrakk>\n    \\<Longrightarrow> m mod n < n - Suc 0", "apply (insert le_neq_trans[OF mod_less_divisor[THEN Suc_leI, of n m]], simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_diff1_eq_if: \"\n  (b - a) div (m::nat) =\n  b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "apply (case_tac \"b < a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m \\<noteq> 0; b < a\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<lbrakk>m \\<noteq> 0; \\<not> b < a\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "apply (frule less_imp_le[of b])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m \\<noteq> 0; b < a; b \\<le> a\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<lbrakk>m \\<noteq> 0; \\<not> b < a\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "apply (frule div_le_mono[of _ _ m])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m \\<noteq> 0; b < a; b \\<le> a; b div m \\<le> a div m\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<lbrakk>m \\<noteq> 0; \\<not> b < a\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<noteq> 0; \\<not> b < a\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "apply (simp only: linorder_not_less neq0_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "assume le_as: \"a \\<le> b\"\n    and m_as: \"0 < m\""], ["proof (state)\nthis:\n  a \\<le> b\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "have div_le:\"a div m \\<le> b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a div m \\<le> b div m", "using le_as"], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. a div m \\<le> b div m", "by (simp only: div_le_mono)"], ["proof (state)\nthis:\n  a div m \\<le> b div m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"b - a = b div m * m + b mod m - (a div m * m + a mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b - a = b div m * m + b mod m - (a div m * m + a mod m)", "by simp"], ["proof (state)\nthis:\n  b - a = b div m * m + b mod m - (a div m * m + a mod m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  b - a = b div m * m + b mod m - (a div m * m + a mod m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = b div m * m + b mod m - a div m * m - a mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m * m + b mod m - (a div m * m + a mod m) =\n    b div m * m + b mod m - a div m * m - a mod m", "by simp"], ["proof (state)\nthis:\n  b div m * m + b mod m - (a div m * m + a mod m) =\n  b div m * m + b mod m - a div m * m - a mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  b div m * m + b mod m - (a div m * m + a mod m) =\n  b div m * m + b mod m - a div m * m - a mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = b div m * m - a div m * m + b mod m - a mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m * m + b mod m - a div m * m - a mod m =\n    b div m * m - a div m * m + b mod m - a mod m", "by (simp only: diff_add_assoc2[OF mult_le_mono1[OF div_le]])"], ["proof (state)\nthis:\n  b div m * m + b mod m - a div m * m - a mod m =\n  b div m * m - a div m * m + b mod m - a mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "finally"], ["proof (chain)\npicking this:\n  b - a = b div m * m - a div m * m + b mod m - a mod m", "have b_a_s1: \"b - a = (b div m - a div m) * m + b mod m - a mod m\"\n    (is \"?b_a = ?b_a1\")"], ["proof (prove)\nusing this:\n  b - a = b div m * m - a div m * m + b mod m - a mod m\n\ngoal (1 subgoal):\n 1. b - a = (b div m - a div m) * m + b mod m - a mod m", "by (simp only: diff_mult_distrib)"], ["proof (state)\nthis:\n  b - a = (b div m - a div m) * m + b mod m - a mod m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "hence b_a_div_s: \"(b - a) div m =\n    ((b div m - a div m) * m + b mod m - a mod m) div m\""], ["proof (prove)\nusing this:\n  b - a = (b div m - a div m) * m + b mod m - a mod m\n\ngoal (1 subgoal):\n 1. (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m", "by (rule arg_cong)"], ["proof (state)\nthis:\n  (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> (b - a) div m =\n                      b div m - a div m -\n                      (if a mod m \\<le> b mod m then 0 else Suc 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "proof (cases \"a mod m \\<le> b mod m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "case True"], ["proof (state)\nthis:\n  a mod m \\<le> b mod m\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "hence as': \"a mod m \\<le> b mod m\""], ["proof (prove)\nusing this:\n  a mod m \\<le> b mod m\n\ngoal (1 subgoal):\n 1. a mod m \\<le> b mod m", "."], ["proof (state)\nthis:\n  a mod m \\<le> b mod m\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"(b - a) div m = ?b_a1 div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m", "using b_a_div_s"], ["proof (prove)\nusing this:\n  (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m", "."], ["proof (state)\nthis:\n  (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = ((b div m - a div m) * m + (b mod m - a mod m)) div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((b div m - a div m) * m + b mod m - a mod m) div m =\n    ((b div m - a div m) * m + (b mod m - a mod m)) div m", "using as'"], ["proof (prove)\nusing this:\n  a mod m \\<le> b mod m\n\ngoal (1 subgoal):\n 1. ((b div m - a div m) * m + b mod m - a mod m) div m =\n    ((b div m - a div m) * m + (b mod m - a mod m)) div m", "by simp"], ["proof (state)\nthis:\n  ((b div m - a div m) * m + b mod m - a mod m) div m =\n  ((b div m - a div m) * m + (b mod m - a mod m)) div m\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  ((b div m - a div m) * m + b mod m - a mod m) div m =\n  ((b div m - a div m) * m + (b mod m - a mod m)) div m\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = b div m - a div m + (b mod m - a mod m) div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((b div m - a div m) * m + (b mod m - a mod m)) div m =\n    b div m - a div m + (b mod m - a mod m) div m", "apply (simp only: add.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b mod m - a mod m + (b div m - a div m) * m) div m =\n    b div m - a div m + (b mod m - a mod m) div m", "by (simp only: div_mult_self1[OF less_imp_neq[OF m_as, THEN not_sym]])"], ["proof (state)\nthis:\n  ((b div m - a div m) * m + (b mod m - a mod m)) div m =\n  b div m - a div m + (b mod m - a mod m) div m\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "finally"], ["proof (chain)\npicking this:\n  (b - a) div m = b div m - a div m + (b mod m - a mod m) div m", "have b_a_div_s': \"(b - a) div m = \\<dots>\""], ["proof (prove)\nusing this:\n  (b - a) div m = b div m - a div m + (b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. (b - a) div m = b div m - a div m + (b mod m - a mod m) div m", "."], ["proof (state)\nthis:\n  (b - a) div m = b div m - a div m + (b mod m - a mod m) div m\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"(b mod m - a mod m) div m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b mod m - a mod m) div m = 0", "by (rule div_less, rule less_imp_diff_less,\n          rule mod_less_divisor, rule m_as)"], ["proof (state)\nthis:\n  (b mod m - a mod m) div m = 0\n\ngoal (2 subgoals):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (b mod m - a mod m) div m = 0\n\ngoal (1 subgoal):\n 1. (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "using b_a_div_s' as'"], ["proof (prove)\nusing this:\n  (b mod m - a mod m) div m = 0\n  (b - a) div m = b div m - a div m + (b mod m - a mod m) div m\n  a mod m \\<le> b mod m\n\ngoal (1 subgoal):\n 1. (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "by simp"], ["proof (state)\nthis:\n  (b - a) div m =\n  b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "case False"], ["proof (state)\nthis:\n  \\<not> a mod m \\<le> b mod m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "hence as1': \"\\<not> a mod m \\<le> b mod m\""], ["proof (prove)\nusing this:\n  \\<not> a mod m \\<le> b mod m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m", "."], ["proof (state)\nthis:\n  \\<not> a mod m \\<le> b mod m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "hence as': \"b mod m < a mod m\""], ["proof (prove)\nusing this:\n  \\<not> a mod m \\<le> b mod m\n\ngoal (1 subgoal):\n 1. b mod m < a mod m", "by simp"], ["proof (state)\nthis:\n  b mod m < a mod m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have a_div_less: \"a div m < b div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a div m < b div m", "using le_as as'"], ["proof (prove)\nusing this:\n  a \\<le> b\n  b mod m < a mod m\n\ngoal (1 subgoal):\n 1. a div m < b div m", "by (blast intro: le_mod_greater_imp_div_less)"], ["proof (state)\nthis:\n  a div m < b div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"b div m - a div m = b div m - a div m - (Suc 0 - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m - a div m = b div m - a div m - (Suc 0 - Suc 0)", "by simp"], ["proof (state)\nthis:\n  b div m - a div m = b div m - a div m - (Suc 0 - Suc 0)\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  b div m - a div m = b div m - a div m - (Suc 0 - Suc 0)\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = b div m - a div m + Suc 0 - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m - a div m - (Suc 0 - Suc 0) = b div m - a div m + Suc 0 - Suc 0", "by simp"], ["proof (state)\nthis:\n  b div m - a div m - (Suc 0 - Suc 0) = b div m - a div m + Suc 0 - Suc 0\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  b div m - a div m - (Suc 0 - Suc 0) = b div m - a div m + Suc 0 - Suc 0\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = b div m - a div m - Suc 0 + Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b div m - a div m + Suc 0 - Suc 0 = b div m - a div m - Suc 0 + Suc 0", "by (simp only: diff_add_assoc2\n        a_div_less[THEN zero_less_diff[THEN iffD2], THEN Suc_le_eq[THEN iffD2]])"], ["proof (state)\nthis:\n  b div m - a div m + Suc 0 - Suc 0 = b div m - a div m - Suc 0 + Suc 0\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "finally"], ["proof (chain)\npicking this:\n  b div m - a div m = b div m - a div m - Suc 0 + Suc 0", "have b_a_div_s': \"b div m - a div m = \\<dots>\""], ["proof (prove)\nusing this:\n  b div m - a div m = b div m - a div m - Suc 0 + Suc 0\n\ngoal (1 subgoal):\n 1. b div m - a div m = b div m - a div m - Suc 0 + Suc 0", "."], ["proof (state)\nthis:\n  b div m - a div m = b div m - a div m - Suc 0 + Suc 0\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"(b - a) div m = ?b_a1 div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m", "using b_a_div_s"], ["proof (prove)\nusing this:\n  (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m", "."], ["proof (state)\nthis:\n  (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  (b - a) div m = ((b div m - a div m) * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = ((b div m - a div m - Suc 0 + Suc 0) * m\n      + b mod m - a mod m ) div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((b div m - a div m) * m + b mod m - a mod m) div m =\n    ((b div m - a div m - Suc 0 + Suc 0) * m + b mod m - a mod m) div m", "using b_a_div_s'"], ["proof (prove)\nusing this:\n  b div m - a div m = b div m - a div m - Suc 0 + Suc 0\n\ngoal (1 subgoal):\n 1. ((b div m - a div m) * m + b mod m - a mod m) div m =\n    ((b div m - a div m - Suc 0 + Suc 0) * m + b mod m - a mod m) div m", "by (rule arg_cong)"], ["proof (state)\nthis:\n  ((b div m - a div m) * m + b mod m - a mod m) div m =\n  ((b div m - a div m - Suc 0 + Suc 0) * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  ((b div m - a div m) * m + b mod m - a mod m) div m =\n  ((b div m - a div m - Suc 0 + Suc 0) * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = ((b div m - a div m - Suc 0) * m\n      + Suc 0 * m + b mod m - a mod m ) div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((b div m - a div m - Suc 0 + Suc 0) * m + b mod m - a mod m) div m =\n    ((b div m - a div m - Suc 0) * m + Suc 0 * m + b mod m - a mod m) div m", "by (simp only: add_mult_distrib)"], ["proof (state)\nthis:\n  ((b div m - a div m - Suc 0 + Suc 0) * m + b mod m - a mod m) div m =\n  ((b div m - a div m - Suc 0) * m + Suc 0 * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  ((b div m - a div m - Suc 0 + Suc 0) * m + b mod m - a mod m) div m =\n  ((b div m - a div m - Suc 0) * m + Suc 0 * m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = ((b div m - a div m - Suc 0) * m\n      + m + b mod m - a mod m ) div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((b div m - a div m - Suc 0) * m + Suc 0 * m + b mod m - a mod m) div\n    m =\n    ((b div m - a div m - Suc 0) * m + m + b mod m - a mod m) div m", "by simp"], ["proof (state)\nthis:\n  ((b div m - a div m - Suc 0) * m + Suc 0 * m + b mod m - a mod m) div m =\n  ((b div m - a div m - Suc 0) * m + m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  ((b div m - a div m - Suc 0) * m + Suc 0 * m + b mod m - a mod m) div m =\n  ((b div m - a div m - Suc 0) * m + m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = ((b div m - a div m - Suc 0) * m\n      + (m + b mod m - a mod m) ) div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((b div m - a div m - Suc 0) * m + m + b mod m - a mod m) div m =\n    ((b div m - a div m - Suc 0) * m + (m + b mod m - a mod m)) div m", "by (simp only: add.assoc m_as\n        diff_add_assoc[of \"a mod m\" \"m + b mod m\"]\n        trans_le_add1[of \"a mod m\" m, OF mod_le_divisor])"], ["proof (state)\nthis:\n  ((b div m - a div m - Suc 0) * m + m + b mod m - a mod m) div m =\n  ((b div m - a div m - Suc 0) * m + (m + b mod m - a mod m)) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "also"], ["proof (state)\nthis:\n  ((b div m - a div m - Suc 0) * m + m + b mod m - a mod m) div m =\n  ((b div m - a div m - Suc 0) * m + (m + b mod m - a mod m)) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have \"\\<dots> = b div m - a div m - Suc 0\n      + (m + b mod m - a mod m) div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((b div m - a div m - Suc 0) * m + (m + b mod m - a mod m)) div m =\n    b div m - a div m - Suc 0 + (m + b mod m - a mod m) div m", "by (simp only: add.commute div_mult_self1[OF less_imp_neq[OF m_as, THEN not_sym]])"], ["proof (state)\nthis:\n  ((b div m - a div m - Suc 0) * m + (m + b mod m - a mod m)) div m =\n  b div m - a div m - Suc 0 + (m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "finally"], ["proof (chain)\npicking this:\n  (b - a) div m = b div m - a div m - Suc 0 + (m + b mod m - a mod m) div m", "have b_a_div_s': \"(b - a) div m = \\<dots>\""], ["proof (prove)\nusing this:\n  (b - a) div m = b div m - a div m - Suc 0 + (m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. (b - a) div m =\n    b div m - a div m - Suc 0 + (m + b mod m - a mod m) div m", "."], ["proof (state)\nthis:\n  (b - a) div m = b div m - a div m - Suc 0 + (m + b mod m - a mod m) div m\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "have div_0_s: \"(m + b mod m - a mod m) div m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (m + b mod m - a mod m) div m = 0", "by (rule div_less, simp only: add_diff_less m_as as')"], ["proof (state)\nthis:\n  (m + b mod m - a mod m) div m = 0\n\ngoal (1 subgoal):\n 1. \\<not> a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "by (simp add: as1' b_a_div_s' div_0_s)"], ["proof (state)\nthis:\n  (b - a) div m =\n  b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (b - a) div m =\n  b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary div_diff1_eq: \"\n  (b - a) div (m::nat) =\n  b div m - a div m - (m + a mod m - Suc (b mod m)) div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - a) div m = b div m - a div m - (m + a mod m - Suc (b mod m)) div m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    (b - a) div m = b div m - a div m - (m + a mod m - Suc (b mod m)) div m", "apply (simp only: neq0_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    (b - a) div m = b div m - a div m - (m + a mod m - Suc (b mod m)) div m", "apply (rule subst[of\n  \"if a mod m \\<le> b mod m then 0 else Suc 0\"\n  \"(m + a mod m - Suc(b mod m)) div m\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < m \\<Longrightarrow>\n    (if a mod m \\<le> b mod m then 0 else Suc 0) =\n    (m + a mod m - Suc (b mod m)) div m\n 2. 0 < m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < m \\<Longrightarrow>\n    (b - a) div m =\n    b div m - a div m - (if a mod m \\<le> b mod m then 0 else Suc 0)\n 2. 0 < m \\<Longrightarrow>\n    (if a mod m \\<le> b mod m then 0 else Suc 0) =\n    (m + a mod m - Suc (b mod m)) div m", "apply (rule div_diff1_eq_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    (if a mod m \\<le> b mod m then 0 else Suc 0) =\n    (m + a mod m - Suc (b mod m)) div m", "apply (split if_split, rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < m \\<Longrightarrow>\n    a mod m \\<le> b mod m \\<longrightarrow>\n    0 = (m + a mod m - Suc (b mod m)) div m\n 2. 0 < m \\<Longrightarrow>\n    \\<not> a mod m \\<le> b mod m \\<longrightarrow>\n    Suc 0 = (m + a mod m - Suc (b mod m)) div m", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow>\n    \\<not> a mod m \\<le> b mod m \\<longrightarrow>\n    Suc 0 = (m + a mod m - Suc (b mod m)) div m", "apply (clarsimp simp: linorder_not_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; b mod m < a mod m\\<rbrakk>\n    \\<Longrightarrow> Suc 0 = (m + a mod m - Suc (b mod m)) div m", "apply (rule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; b mod m < a mod m\\<rbrakk>\n    \\<Longrightarrow> (m + a mod m - Suc (b mod m)) div m = Suc 0", "apply (drule Suc_le_eq[of \"b mod m\", THEN iffD2])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; Suc (b mod m) \\<le> a mod m\\<rbrakk>\n    \\<Longrightarrow> (m + a mod m - Suc (b mod m)) div m = Suc 0", "apply (simp only: diff_add_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; Suc (b mod m) \\<le> a mod m\\<rbrakk>\n    \\<Longrightarrow> (m + (a mod m - Suc (b mod m))) div m = Suc 0", "apply (simp only: div_add_self1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; Suc (b mod m) \\<le> a mod m\\<rbrakk>\n    \\<Longrightarrow> (a mod m - Suc (b mod m)) div m + 1 = Suc 0", "apply (simp add: less_imp_diff_less)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary div_diff1_eq1: \"\n  a mod m \\<le> b mod m \\<Longrightarrow>\n  (b - a) div (m::nat) = b div m - a div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m \\<le> b mod m \\<Longrightarrow>\n    (b - a) div m = b div m - a div m", "by (simp add: div_diff1_eq_if)"], ["", "corollary div_diff1_eq1_mod_0: \"\n  a mod m = 0 \\<Longrightarrow>\n  (b - a) div (m::nat) = b div m - a div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod m = 0 \\<Longrightarrow> (b - a) div m = b div m - a div m", "by (simp add: div_diff1_eq1)"], ["", "corollary div_diff1_eq2: \"\n  b mod m < a mod m \\<Longrightarrow>\n  (b - a) div (m::nat) = b div m - Suc (a div m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b mod m < a mod m \\<Longrightarrow>\n    (b - a) div m = b div m - Suc (a div m)", "by (simp add: div_diff1_eq_if)"], ["", "subsection \\<open>Further results about \\<open>div\\<close> and \\<open>mod\\<close>\\<close>"], ["", "subsubsection \\<open>Some auxiliary facts about \\<open>mod\\<close>\\<close>"], ["", "lemma diff_less_divisor_imp_sub_mod_eq: \"\n  \\<lbrakk> (x::nat) \\<le> y; y - x < m \\<rbrakk> \\<Longrightarrow> x = y - (y - x) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; y - x < m\\<rbrakk>\n    \\<Longrightarrow> x = y - (y - x) mod m", "by simp"], ["", "lemma diff_ge_divisor_imp_sub_mod_less: \"\n  \\<lbrakk> (x::nat) \\<le> y; m \\<le> y - x; 0 < m \\<rbrakk> \\<Longrightarrow> x < y - (y - x) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; m \\<le> y - x; 0 < m\\<rbrakk>\n    \\<Longrightarrow> x < y - (y - x) mod m", "apply (simp only: less_diff_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; m \\<le> y - x; 0 < m\\<rbrakk>\n    \\<Longrightarrow> x + (y - x) mod m < y", "apply (simp only: le_diff_conv2 add.commute[of m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> x + (y - x) mod m < y", "apply (rule less_le_trans[of _ \"x + m\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<le> y; x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> x + (y - x) mod m < x + m\n 2. \\<lbrakk>x \\<le> y; x + m \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> x + m \\<le> y", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma le_imp_sub_mod_le: \"\n  (x::nat) \\<le> y \\<Longrightarrow> x \\<le> y - (y - x) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<le> y - (y - x) mod m", "apply (case_tac \"m = 0\", simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; 0 < m\\<rbrakk>\n    \\<Longrightarrow> x \\<le> y - (y - x) mod m", "apply (case_tac \"m \\<le> y - x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<le> y; 0 < m; m \\<le> y - x\\<rbrakk>\n    \\<Longrightarrow> x \\<le> y - (y - x) mod m\n 2. \\<lbrakk>x \\<le> y; 0 < m; \\<not> m \\<le> y - x\\<rbrakk>\n    \\<Longrightarrow> x \\<le> y - (y - x) mod m", "apply (drule diff_ge_divisor_imp_sub_mod_less[of x y m])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>0 < m; m \\<le> y - x\\<rbrakk> \\<Longrightarrow> m \\<le> y - x\n 2. \\<lbrakk>0 < m; m \\<le> y - x\\<rbrakk> \\<Longrightarrow> 0 < m\n 3. \\<lbrakk>0 < m; m \\<le> y - x; x < y - (y - x) mod m\\<rbrakk>\n    \\<Longrightarrow> x \\<le> y - (y - x) mod m\n 4. \\<lbrakk>x \\<le> y; 0 < m; \\<not> m \\<le> y - x\\<rbrakk>\n    \\<Longrightarrow> x \\<le> y - (y - x) mod m", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_less_diff_mod: \"\n  \\<lbrakk> n mod m < r; r \\<le> m; r \\<le> (n::nat) \\<rbrakk> \\<Longrightarrow>\n  (n - r) mod m = m + n mod m - r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m < r; r \\<le> m; r \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (n - r) mod m = m + n mod m - r", "apply (case_tac \"r = m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n mod m < r; r \\<le> m; r \\<le> n; r = m\\<rbrakk>\n    \\<Longrightarrow> (n - r) mod m = m + n mod m - r\n 2. \\<lbrakk>n mod m < r; r \\<le> m; r \\<le> n; r \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> (n - r) mod m = m + n mod m - r", "apply (simp add: mod_diff_self2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m < r; r \\<le> m; r \\<le> n; r \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> (n - r) mod m = m + n mod m - r", "apply (simp add: mod_diff1_eq[of r n m])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_0_imp_mod_pred: \"\n  \\<lbrakk> 0 < (n::nat); n mod m = 0 \\<rbrakk> \\<Longrightarrow>\n  (n - Suc 0) mod m = m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; n mod m = 0\\<rbrakk>\n    \\<Longrightarrow> (n - Suc 0) mod m = m - Suc 0", "apply (case_tac \"m = 0\", simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; n mod m = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (n - Suc 0) mod m = m - Suc 0", "apply (simp only: Suc_le_eq[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc 0 \\<le> n; n mod m = 0; Suc 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> (n - Suc 0) mod m = m - Suc 0", "apply (simp only: mod_diff1_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc 0 \\<le> n; n mod m = 0; Suc 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> (m + 0 - Suc 0 mod m) mod m = m - Suc 0", "apply (case_tac \"m = Suc 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Suc 0 \\<le> n; n mod m = 0; Suc 0 \\<le> m; m = Suc 0\\<rbrakk>\n    \\<Longrightarrow> (m + 0 - Suc 0 mod m) mod m = m - Suc 0\n 2. \\<lbrakk>Suc 0 \\<le> n; n mod m = 0; Suc 0 \\<le> m;\n     m \\<noteq> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (m + 0 - Suc 0 mod m) mod m = m - Suc 0", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_pred: \"\n  0 < n \\<Longrightarrow>\n  (n - Suc 0) mod m = (\n    if n mod m = 0 then m - Suc 0 else n mod m - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    (n - Suc 0) mod m = (if n mod m = 0 then m - Suc 0 else n mod m - Suc 0)", "apply (split if_split, rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow>\n    n mod m = 0 \\<longrightarrow> (n - Suc 0) mod m = m - Suc 0\n 2. 0 < n \\<Longrightarrow>\n    n mod m \\<noteq> 0 \\<longrightarrow> (n - Suc 0) mod m = n mod m - Suc 0", "apply (simp add: mod_0_imp_mod_pred)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    n mod m \\<noteq> 0 \\<longrightarrow> (n - Suc 0) mod m = n mod m - Suc 0", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; 0 < n mod m\\<rbrakk>\n    \\<Longrightarrow> (n - Suc 0) mod m = n mod m - Suc 0", "apply (case_tac \"m = Suc 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; 0 < n mod m; m \\<noteq> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (n - Suc 0) mod m = n mod m - Suc 0", "apply (frule subst[OF Suc0_mod[symmetric], where P=\"\\<lambda>x. x \\<le> n mod m\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; 0 < n mod m; m \\<noteq> Suc 0;\n     Suc 0 mod m \\<le> n mod m\\<rbrakk>\n    \\<Longrightarrow> (n - Suc 0) mod m = n mod m - Suc 0", "apply (simp only: mod_diff1_eq1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; 0 < n mod m; m \\<noteq> Suc 0;\n     Suc 0 mod m \\<le> n mod m\\<rbrakk>\n    \\<Longrightarrow> n mod m - Suc 0 mod m = n mod m - Suc 0", "apply (simp add: Suc0_mod)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary mod_pred_Suc_mod: \"\n  0 < n \\<Longrightarrow> Suc ((n - Suc 0) mod m) mod m = n mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> Suc ((n - Suc 0) mod m) mod m = n mod m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> Suc ((n - Suc 0) mod m) mod m = n mod m", "apply (simp add: mod_pred)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary diff_mod_pred: \"\n  a < b \\<Longrightarrow>\n  (b - Suc a) mod m = (\n    if a mod m = b mod m then m - Suc 0 else (b - a) mod m - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<Longrightarrow>\n    (b - Suc a) mod m =\n    (if a mod m = b mod m then m - Suc 0 else (b - a) mod m - Suc 0)", "apply (rule_tac t=\"b - Suc a\" and s=\"b - a - Suc 0\" in subst, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<Longrightarrow>\n    (b - a - Suc 0) mod m =\n    (if a mod m = b mod m then m - Suc 0 else (b - a) mod m - Suc 0)", "apply (subst mod_pred, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<Longrightarrow>\n    (if (b - a) mod m = 0 then m - Suc 0 else (b - a) mod m - Suc 0) =\n    (if a mod m = b mod m then m - Suc 0 else (b - a) mod m - Suc 0)", "apply (simp add: mod_eq_diff_mod_0_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary diff_mod_pred_Suc_mod: \"\n  a < b \\<Longrightarrow> Suc ((b - Suc a) mod m) mod m = (b - a) mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<Longrightarrow> Suc ((b - Suc a) mod m) mod m = (b - a) mod m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> Suc ((b - Suc a) mod m) mod m = (b - a) mod m", "apply (simp add: diff_mod_pred mod_eq_diff_mod_0_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_eq_imp_diff_mod_eq_divisor: \"\n  \\<lbrakk> a < b; 0 < m; a mod m = b mod m \\<rbrakk> \\<Longrightarrow>\n  Suc ((b - Suc a) mod m) = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; 0 < m; a mod m = b mod m\\<rbrakk>\n    \\<Longrightarrow> Suc ((b - Suc a) mod m) = m", "apply (drule mod_eq_imp_diff_mod_0[of a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; 0 < m; (b - a) mod m = 0\\<rbrakk>\n    \\<Longrightarrow> Suc ((b - Suc a) mod m) = m", "apply (frule iffD2[OF zero_less_diff])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; 0 < m; (b - a) mod m = 0; 0 < b - a\\<rbrakk>\n    \\<Longrightarrow> Suc ((b - Suc a) mod m) = m", "apply (drule mod_0_imp_mod_pred[of \"b-a\" m], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; 0 < m; (b - a) mod m = 0;\n     (b - a - Suc 0) mod m = m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc ((b - Suc a) mod m) = m", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sub_diff_mod_eq: \"\n  r \\<le> t \\<Longrightarrow> (t - (t - r) mod m) mod (m::nat) = r mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> t \\<Longrightarrow> (t - (t - r) mod m) mod m = r mod m", "by (metis mod_diff_right_eq diff_diff_cancel diff_le_self)"], ["", "lemma sub_diff_mod_eq': \"\n  r \\<le> t \\<Longrightarrow> (k * m + t - (t - r) mod m) mod (m::nat) = r mod m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> t \\<Longrightarrow> (k * m + t - (t - r) mod m) mod m = r mod m", "apply (simp only: diff_mod_le[of t r m, THEN add_diff_assoc, symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> t \\<Longrightarrow>\n    (k * m + (t - (t - r) mod m)) mod m = r mod m", "apply (simp add: sub_diff_mod_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_eq_Suc_0_conv: \"Suc 0 < k \\<Longrightarrow> ((x + k - Suc 0) mod k = 0) = (x mod k = Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 < k \\<Longrightarrow>\n    ((x + k - Suc 0) mod k = 0) = (x mod k = Suc 0)", "apply (simp only: mod_pred)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 < k \\<Longrightarrow>\n    ((if (x + k) mod k = 0 then k - Suc 0 else (x + k) mod k - Suc 0) = 0) =\n    (x mod k = Suc 0)", "apply (case_tac \"x mod k = Suc 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Suc 0 < k; x mod k = Suc 0\\<rbrakk>\n    \\<Longrightarrow> ((if (x + k) mod k = 0 then k - Suc 0\n                        else (x + k) mod k - Suc 0) =\n                       0) =\n                      (x mod k = Suc 0)\n 2. \\<lbrakk>Suc 0 < k; x mod k \\<noteq> Suc 0\\<rbrakk>\n    \\<Longrightarrow> ((if (x + k) mod k = 0 then k - Suc 0\n                        else (x + k) mod k - Suc 0) =\n                       0) =\n                      (x mod k = Suc 0)", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_eq_divisor_minus_Suc_0_conv: \"Suc 0 < k \\<Longrightarrow> (x mod k = k - Suc 0) = (Suc x mod k = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 < k \\<Longrightarrow> (x mod k = k - Suc 0) = (Suc x mod k = 0)", "by (simp only: mod_Suc, split if_split, fastforce)"], ["", "subsubsection \\<open>Some auxiliary facts about \\<open>div\\<close>\\<close>"], ["", "lemma sub_mod_div_eq_div: \"((n::nat) - n mod m) div m = n div m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - n mod m) div m = n div m", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (n - n mod m) div m = n div m", "apply (simp add: minus_mod_eq_mult_div)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_less_imp_diff_div_conv: \"\n  \\<lbrakk> n mod m < r; r \\<le> m + n mod m\\<rbrakk> \\<Longrightarrow> (n - r) div m = n div m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m < r; r \\<le> m + n mod m\\<rbrakk>\n    \\<Longrightarrow> (n - r) div m = n div m - Suc 0", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m < r; r \\<le> m + n mod m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n - r) div m = n div m - Suc 0", "apply (simp only: neq0_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m < r; r \\<le> m + n mod m; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (n - r) div m = n div m - Suc 0", "apply (case_tac \"n < m\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m < r; r \\<le> m + n mod m; 0 < m; \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> (n - r) div m = n div m - Suc 0", "apply (simp only: linorder_not_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m < r; r \\<le> m + n mod m; 0 < m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (n - r) div m = n div m - Suc 0", "apply (rule div_nat_eqI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n mod m < r; r \\<le> m + n mod m; 0 < m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m * (n div m - Suc 0) \\<le> n - r\n 2. \\<lbrakk>n mod m < r; r \\<le> m + n mod m; 0 < m; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> n - r < m * Suc (n div m - Suc 0)", "apply (simp_all add: algebra_simps minus_mod_eq_mult_div [symmetric])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary mod_0_le_imp_diff_div_conv: \"\n  \\<lbrakk> n mod m = 0; 0 < r; r \\<le> m \\<rbrakk> \\<Longrightarrow> (n - r) div m = n div m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m = 0; 0 < r; r \\<le> m\\<rbrakk>\n    \\<Longrightarrow> (n - r) div m = n div m - Suc 0", "by (simp add: mod_less_imp_diff_div_conv)"], ["", "corollary mod_0_less_imp_diff_Suc_div_conv: \"\n  \\<lbrakk> n mod m = 0; r < m \\<rbrakk> \\<Longrightarrow> (n - Suc r) div m = n div m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m = 0; r < m\\<rbrakk>\n    \\<Longrightarrow> (n - Suc r) div m = n div m - Suc 0", "by (drule mod_0_le_imp_diff_div_conv[where r=\"Suc r\"], simp_all)"], ["", "corollary mod_0_imp_diff_Suc_div_conv: \"\n  (n - r) mod m = 0 \\<Longrightarrow> (n - Suc r) div m = (n - r) div m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - r) mod m = 0 \\<Longrightarrow>\n    (n - Suc r) div m = (n - r) div m - Suc 0", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n - r) mod m = 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n - Suc r) div m = (n - r) div m - Suc 0", "apply (rule_tac t=\"n - Suc r\" and s=\"n - r - Suc 0\" in subst, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n - r) mod m = 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n - r - Suc 0) div m = (n - r) div m - Suc 0", "apply (rule mod_0_le_imp_diff_div_conv, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary mod_0_imp_sub_1_div_conv: \"\n  n mod m = 0 \\<Longrightarrow> (n - Suc 0) div m = n div m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod m = 0 \\<Longrightarrow> (n - Suc 0) div m = n div m - Suc 0", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m = 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n - Suc 0) div m = n div m - Suc 0", "apply (simp add: mod_0_less_imp_diff_Suc_div_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary sub_Suc_mod_div_conv: \"\n  (n - Suc (n mod m)) div m = n div m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - Suc (n mod m)) div m = n div m - Suc 0", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    (n - Suc (n mod m)) div m = n div m - Suc 0", "apply (simp add: mod_less_imp_diff_div_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_le_conv: \"0 < m \\<Longrightarrow> n div m \\<le> k = (n \\<le> Suc k * m - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> (n div m \\<le> k) = (n \\<le> Suc k * m - Suc 0)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n div m \\<le> k\\<rbrakk>\n    \\<Longrightarrow> n \\<le> Suc k * m - Suc 0\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (drule mult_le_mono1[of _ _ m])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n div m * m \\<le> k * m\\<rbrakk>\n    \\<Longrightarrow> n \\<le> Suc k * m - Suc 0\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (simp only: mult.commute[of _ m] minus_mod_eq_mult_div [symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n - n mod m \\<le> m * k\\<rbrakk>\n    \\<Longrightarrow> n \\<le> m * Suc k - Suc 0\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (drule le_diff_conv[THEN iffD1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n \\<le> m * k + n mod m\\<rbrakk>\n    \\<Longrightarrow> n \\<le> m * Suc k - Suc 0\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (rule le_trans[of _ \"m * k + n mod m\"], assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n \\<le> m * k + n mod m\\<rbrakk>\n    \\<Longrightarrow> m * k + n mod m \\<le> m * Suc k - Suc 0\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (simp add: add.commute[of m])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n \\<le> m * k + n mod m\\<rbrakk>\n    \\<Longrightarrow> m * k + n mod m \\<le> m * k + m - Suc 0\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (simp only: diff_add_assoc[OF Suc_leI])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n \\<le> m * k + n mod m\\<rbrakk>\n    \\<Longrightarrow> m * k + n mod m \\<le> m * k + (m - Suc 0)\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (rule add_le_mono[OF le_refl])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n \\<le> m * k + n mod m\\<rbrakk>\n    \\<Longrightarrow> n mod m \\<le> m - Suc 0\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (rule less_imp_le_pred)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n \\<le> m * k + n mod m\\<rbrakk>\n    \\<Longrightarrow> n mod m < m\n 2. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (rule mod_less_divisor, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; n \\<le> Suc k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (drule div_le_mono[of _ _ m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; n div m \\<le> (Suc k * m - Suc 0) div m\\<rbrakk>\n    \\<Longrightarrow> n div m \\<le> k", "apply (simp add: mod_0_imp_sub_1_div_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma le_div_conv: \"0 < (m::nat) \\<Longrightarrow> (n \\<le> k div m) = (n * m \\<le> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> (n \\<le> k div m) = (n * m \\<le> k)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n \\<le> k div m\\<rbrakk> \\<Longrightarrow> n * m \\<le> k\n 2. \\<lbrakk>0 < m; n * m \\<le> k\\<rbrakk> \\<Longrightarrow> n \\<le> k div m", "apply (drule mult_le_mono1[of _ _ m])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n * m \\<le> k div m * m\\<rbrakk>\n    \\<Longrightarrow> n * m \\<le> k\n 2. \\<lbrakk>0 < m; n * m \\<le> k\\<rbrakk> \\<Longrightarrow> n \\<le> k div m", "apply (simp add: div_mult_cancel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; n * m \\<le> k\\<rbrakk> \\<Longrightarrow> n \\<le> k div m", "apply (drule div_le_mono[of _ _ m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; n * m div m \\<le> k div m\\<rbrakk>\n    \\<Longrightarrow> n \\<le> k div m", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma less_mult_imp_div_less: \"n < k * m \\<Longrightarrow> n div m < (k::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < k * m \\<Longrightarrow> n div m < k", "apply (case_tac \"k = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n < k * m; k \\<noteq> 0\\<rbrakk> \\<Longrightarrow> n div m < k", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n < k * m; k \\<noteq> 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n div m < k", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n < k * m; 0 < k; 0 < m\\<rbrakk> \\<Longrightarrow> n div m < k", "apply (drule less_imp_le_pred[of n])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; 0 < m; n \\<le> k * m - Suc 0\\<rbrakk>\n    \\<Longrightarrow> n div m < k", "apply (drule div_le_mono[of _ _ m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; 0 < m; n div m \\<le> (k * m - Suc 0) div m\\<rbrakk>\n    \\<Longrightarrow> n div m < k", "apply (simp add: mod_0_imp_sub_1_div_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_less_imp_less_mult: \"\\<lbrakk> 0 < (m::nat); n div m < k \\<rbrakk> \\<Longrightarrow> n < k * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; n div m < k\\<rbrakk> \\<Longrightarrow> n < k * m", "apply (rule ccontr, simp only: linorder_not_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; n div m < k; k * m \\<le> n\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule div_le_mono[of _ _ m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; n div m < k; k * m div m \\<le> n div m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_less_conv: \"0 < (m::nat) \\<Longrightarrow> (n div m < k) = (n < k * m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> (n div m < k) = (n < k * m)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < m; n div m < k\\<rbrakk> \\<Longrightarrow> n < k * m\n 2. \\<lbrakk>0 < m; n < k * m\\<rbrakk> \\<Longrightarrow> n div m < k", "apply (rule div_less_imp_less_mult, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; n < k * m\\<rbrakk> \\<Longrightarrow> n div m < k", "apply (rule less_mult_imp_div_less, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_eq_0_conv: \"(n div (m::nat) = 0) = (m = 0 \\<or> n < m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n div m = 0) = (m = 0 \\<or> n < m)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. n div m = 0 \\<Longrightarrow> m = 0 \\<or> n < m\n 2. m = 0 \\<or> n < m \\<Longrightarrow> n div m = 0", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n div m = 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> m = 0 \\<or> n < m\n 2. m = 0 \\<or> n < m \\<Longrightarrow> n div m = 0", "apply (rule ccontr)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n div m = 0; m \\<noteq> 0; \\<not> (m = 0 \\<or> n < m)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. m = 0 \\<or> n < m \\<Longrightarrow> n div m = 0", "apply (simp add: linorder_not_less)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n div m = 0; 0 < m; m \\<le> n\\<rbrakk> \\<Longrightarrow> False\n 2. m = 0 \\<or> n < m \\<Longrightarrow> n div m = 0", "apply (drule div_le_mono[of _ _ m])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n div m = 0; 0 < m; m div m \\<le> n div m\\<rbrakk>\n    \\<Longrightarrow> False\n 2. m = 0 \\<or> n < m \\<Longrightarrow> n div m = 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. m = 0 \\<or> n < m \\<Longrightarrow> n div m = 0", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_eq_0_conv': \"0 < m \\<Longrightarrow> (n div (m::nat) = 0) = (n < m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> (n div m = 0) = (n < m)", "by (simp add: div_eq_0_conv)"], ["", "corollary div_gr_imp_gr_divisor: \"x < n div (m::nat) \\<Longrightarrow> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < n div m \\<Longrightarrow> m \\<le> n", "apply (drule gr_implies_gr0, drule neq0_conv[THEN iffD2])"], ["proof (prove)\ngoal (1 subgoal):\n 1. n div m \\<noteq> 0 \\<Longrightarrow> m \\<le> n", "apply (simp add: div_eq_0_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_0_less_div_conv: \"\n  n mod (m::nat) = 0 \\<Longrightarrow> (k * m < n) = (k < n div m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod m = 0 \\<Longrightarrow> (k * m < n) = (k < n div m)", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n mod m = 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k * m < n) = (k < n div m)", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_le_divisor_imp_le_Suc_div: \"\n  \\<lbrakk> x div m \\<le> n; y \\<le> m \\<rbrakk> \\<Longrightarrow> (x + y) div m \\<le> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x div m \\<le> n; y \\<le> m\\<rbrakk>\n    \\<Longrightarrow> (x + y) div m \\<le> Suc n", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x div m \\<le> n; y \\<le> m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (x + y) div m \\<le> Suc n", "apply (simp only: div_add1_eq_if[of _ x])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x div m \\<le> n; y \\<le> m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> x div m + y div m +\n                      (if x mod m + y mod m < m then 0 else Suc 0)\n                      \\<le> Suc n", "apply (drule order_le_less[of y, THEN iffD1], fastforce)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>List of definitions and lemmas\\<close>"], ["", "thm\n  minus_mod_eq_mult_div [symmetric]\n  mod_0_div_mult_cancel\n  div_mult_le\n  less_div_Suc_mult"], ["", "thm\n  Suc0_mod\n  Suc0_mod_subst\n  Suc0_mod_cong"], ["", "thm\n  mod_Suc_conv"], ["", "thm\n  mod_add\n  mod_sub_add"], ["", "thm\n  mod_sub_eq_mod_0_conv\n  mod_sub_eq_mod_swap"], ["", "thm\n  le_mod_greater_imp_div_less"], ["", "thm\n  mod_diff_right_eq\n  mod_eq_imp_diff_mod_eq"], ["", "thm\n  divisor_add_diff_mod_if\n  divisor_add_diff_mod_eq1\n  divisor_add_diff_mod_eq2"], ["", "thm\n  mod_add_eq\n  mod_add1_eq_if"], ["", "thm\n  mod_diff1_eq_if\n  mod_diff1_eq\n  mod_diff1_eq1\n  mod_diff1_eq2"], ["", "thm\n  nat_mod_distrib\n  int_mod_distrib"], ["", "thm\n  zmod_zminus_eq_conv"], ["", "thm\n  mod_eq_imp_diff_mod_0\n  zmod_eq_imp_diff_mod_0"], ["", "thm\n  mod_neq_imp_diff_mod_neq0\n  diff_mod_0_imp_mod_eq\n  zdiff_mod_0_imp_mod_eq"], ["", "thm\n  zmod_eq_diff_mod_0_conv\n  mod_eq_diff_mod_0_conv"], ["", "thm\n  less_mod_eq_imp_add_divisor_le"], ["", "thm\n  mod_add_eq_imp_mod_0"], ["", "thm\n  mod_eq_mult_distrib\n  mod_factor_imp_mod_0\n  mod_factor_div\n  mod_factor_div_mod"], ["", "thm\n  mod_diff_self1\n  mod_diff_self2\n  mod_diff_mult_self1\n  mod_diff_mult_self2"], ["", "thm\n  div_diff_self1\n  div_diff_self2\n  div_diff_mult_self1\n  div_diff_mult_self2"], ["", "thm\n  le_less_imp_div\n  div_imp_le_less"], ["", "thm\n  le_less_div_conv"], ["", "thm\n  diff_less_divisor_imp_sub_mod_eq\n  diff_ge_divisor_imp_sub_mod_less\n  le_imp_sub_mod_le"], ["", "thm\n  sub_mod_div_eq_div"], ["", "thm\n  mod_less_imp_diff_div_conv\n  mod_0_le_imp_diff_div_conv\n  mod_0_less_imp_diff_Suc_div_conv\n  mod_0_imp_sub_1_div_conv"], ["", "thm\n  sub_Suc_mod_div_conv"], ["", "thm\n  mod_less_diff_mod\n  mod_0_imp_mod_pred"], ["", "thm\n  mod_pred\n  mod_pred_Suc_mod"], ["", "thm\n  mod_eq_imp_diff_mod_eq_divisor"], ["", "thm\n  diff_mod_le\n  sub_diff_mod_eq\n  sub_diff_mod_eq'"], ["", "thm\n  div_diff1_eq_if\n  div_diff1_eq\n  div_diff1_eq1\n  div_diff1_eq2"], ["", "thm\n  div_le_conv"], ["", "end"]]}