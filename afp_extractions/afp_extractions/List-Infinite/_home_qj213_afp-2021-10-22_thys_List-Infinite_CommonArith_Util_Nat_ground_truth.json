{"file_name": "/home/qj213/afp-2021-10-22/thys/List-Infinite/CommonArith/Util_Nat.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/List-Infinite", "problem_names": ["lemma add_1_Suc_conv: \"m + 1 = Suc m\"", "lemma sub_Suc0_sub_Suc_conv: \"b - a - Suc 0 = b - Suc a\"", "lemma Suc_diff_Suc: \"m < n \\<Longrightarrow> Suc (n - Suc m) = n - m\"", "lemma nat_grSuc0_conv: \"(Suc 0 < n) = (n \\<noteq> 0 \\<and> n \\<noteq> Suc 0)\"", "lemma nat_geSucSuc0_conv: \"(Suc (Suc 0) \\<le> n) = (n \\<noteq> 0 \\<and> n \\<noteq> Suc 0)\"", "lemma nat_lessSucSuc0_conv: \"(n < Suc (Suc 0)) = (n = 0 \\<or> n = Suc 0)\"", "lemma nat_leSuc0_conv: \"(n \\<le> Suc 0) = (n = 0 \\<or> n = Suc 0)\"", "lemma mult_pred: \"(m - Suc 0) * n = m * n - n\"", "lemma mult_pred_right: \"m * (n - Suc 0) = m * n - m\"", "lemma gr_implies_gr0: \"m < (n::nat) \\<Longrightarrow> 0 < n\"", "lemma gr0_imp_self_le_mult1: \"0 < (k::nat) \\<Longrightarrow> m \\<le> m * k\"", "lemma gr0_imp_self_le_mult2: \"0 < (k::nat) \\<Longrightarrow> m \\<le> k * m\"", "lemma less_imp_Suc_mult_le: \"m < n \\<Longrightarrow> Suc m * k \\<le> n * k\"", "lemma less_imp_Suc_mult_pred_less: \"\\<lbrakk> m < n; 0 < k \\<rbrakk> \\<Longrightarrow> Suc m * k - Suc 0 < n * k\"", "lemma ord_zero_less_diff: \"(0 < (b::'a::ordered_ab_group_add) - a) = (a < b)\"", "lemma ord_zero_le_diff: \"(0 \\<le> (b::'a::ordered_ab_group_add) - a) = (a \\<le> b)\"", "lemmas diff_diff_right = Nat.diff_diff_right[rule_format]", "lemma less_add1: \"(0::nat) < j \\<Longrightarrow> i < i + j\"", "lemma less_add2: \"(0::nat) < j \\<Longrightarrow> i < j + i\"", "lemma add_lessD2: \"i + j < (k::nat) \\<Longrightarrow> j < k\"", "lemma add_le_mono2: \"i \\<le> (j::nat) \\<Longrightarrow> k + i \\<le> k + j\"", "lemma add_less_mono2: \"i < (j::nat) \\<Longrightarrow> k + i < k + j\"", "lemma diff_less_self: \"\\<lbrakk> (0::nat) < i;  0 < j \\<rbrakk> \\<Longrightarrow> i - j < i\"", "lemma\n  ge_less_neq_conv: \"((a::'a::linorder) \\<le> n) = (\\<forall>x. x < a \\<longrightarrow> n \\<noteq> x)\" and\n  le_greater_neq_conv: \"(n \\<le> (a::'a::linorder)) = (\\<forall>x. a < x \\<longrightarrow> n \\<noteq> x)\"", "lemma\n  greater_le_neq_conv: \"((a::'a::linorder) < n) = (\\<forall>x. x \\<le> a \\<longrightarrow> n \\<noteq> x)\" and\n  less_ge_neq_conv: \"(n < (a::'a::linorder)) = (\\<forall>x. a \\<le> x \\<longrightarrow> n \\<noteq> x)\"", "lemma leq_pos_imp_abs_leq: \"\\<lbrakk> 0 \\<le> (a::'a::ordered_ab_group_add_abs); a \\<le> b \\<rbrakk> \\<Longrightarrow> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\"", "lemma leq_neg_imp_abs_geq: \"\\<lbrakk> (a::'a::ordered_ab_group_add_abs) \\<le> 0; b \\<le> a \\<rbrakk> \\<Longrightarrow> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\"", "lemma abs_range: \"\\<lbrakk> 0 \\<le> (a::'a::{ordered_ab_group_add_abs,abs_if}); -a \\<le> x; x \\<le> a \\<rbrakk> \\<Longrightarrow> \\<bar>x\\<bar> \\<le> a\"", "lemma sgn_abs:\"(x::'a::linordered_idom) \\<noteq> 0 \\<Longrightarrow> \\<bar>sgn x\\<bar> = 1\"", "lemma sgn_mult_abs:\"\\<bar>x\\<bar> * \\<bar>sgn (a::'a::linordered_idom)\\<bar> = \\<bar>x * sgn a\\<bar>\"", "lemma abs_imp_sgn_abs: \"\\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> \\<bar>sgn (a::'a::linordered_idom)\\<bar> = \\<bar>sgn b\\<bar>\"", "lemma sgn_mono: \"a \\<le> b \\<Longrightarrow> sgn (a::'a::{linordered_idom,linordered_semidom}) \\<le> sgn b\"", "lemma add_diff_le: \"k \\<le> n \\<Longrightarrow> m + k - n \\<le> (m::nat)\"", "lemma less_add_diff: \"k < (n::nat) \\<Longrightarrow> m < n + m - k\"", "lemma add_diff_less: \"\\<lbrakk> k < n; 0 < m \\<rbrakk> \\<Longrightarrow> m + k - n < (m::nat)\"", "lemma add_le_imp_le_diff1: \"i + k \\<le> j \\<Longrightarrow> i \\<le> j - (k::nat)\"", "lemma add_le_imp_le_diff2: \"k + i \\<le> j \\<Longrightarrow> i \\<le> j - (k::nat)\"", "lemma diff_less_imp_less_add: \"j - (k::nat) < i \\<Longrightarrow> j < i + k\"", "lemma diff_less_conv: \"0 < i \\<Longrightarrow> (j - (k::nat) < i) = (j < i + k)\"", "lemma le_diff_swap: \"\\<lbrakk> i \\<le> (k::nat); j \\<le> k \\<rbrakk> \\<Longrightarrow> (k - j \\<le> i) = (k - i \\<le> j)\"", "lemma diff_less_imp_swap: \"\\<lbrakk> 0 < (i::nat); k - i < j \\<rbrakk> \\<Longrightarrow> (k - j < i)\"", "lemma diff_less_swap: \"\\<lbrakk> 0 < (i::nat); 0 < j \\<rbrakk> \\<Longrightarrow> (k - j < i) = (k - i < j)\"", "lemma less_diff_imp_less: \"(i::nat) < j - m \\<Longrightarrow> i < j\"", "lemma le_diff_imp_le: \"(i::nat) \\<le> j - m \\<Longrightarrow> i \\<le> j\"", "lemma less_diff_le_imp_less: \"\\<lbrakk> (i::nat) < j - m; n \\<le> m \\<rbrakk> \\<Longrightarrow> i < j - n\"", "lemma le_diff_le_imp_le: \"\\<lbrakk> (i::nat) \\<le> j - m; n \\<le> m \\<rbrakk> \\<Longrightarrow> i \\<le> j - n\"", "lemma le_imp_diff_le: \"(j::nat) \\<le> k \\<Longrightarrow> j - n \\<le> k\"", "lemma diff_add_inverse_Suc: \"n < m \\<Longrightarrow> n + (m - Suc n) = m - Suc 0\"", "lemma pred_mono: \"\\<lbrakk> m < n; 0 < m \\<rbrakk> \\<Longrightarrow> m - Suc 0 < n - Suc 0\"", "lemma Suc_less_pred_conv: \"(Suc m < n) = (m < n - Suc 0)\"", "lemma Suc_le_pred_conv: \"0 < n \\<Longrightarrow> (Suc m \\<le> n) = (m \\<le> n - Suc 0)\"", "lemma Suc_le_imp_le_pred: \"Suc m \\<le> n \\<Longrightarrow> m \\<le> n - Suc 0\"", "lemma diff_cancel_imp_eq: \"\\<lbrakk> 0 < (n::nat);  n + i - j = n \\<rbrakk> \\<Longrightarrow> i = j\"", "lemma nat_diff_left_cancel_less: \"k - m < k - (n::nat) \\<Longrightarrow> n < m\"", "lemma nat_diff_right_cancel_less: \"n - k < (m::nat) - k \\<Longrightarrow> n < m\"", "lemma nat_diff_left_cancel_le1: \"\\<lbrakk> k - m \\<le> k - (n::nat); m < k \\<rbrakk> \\<Longrightarrow> n \\<le> m\"", "lemma nat_diff_left_cancel_le2: \"\\<lbrakk> k - m \\<le> k - (n::nat); n \\<le> k \\<rbrakk> \\<Longrightarrow> n \\<le> m\"", "lemma nat_diff_right_cancel_le1: \"\\<lbrakk> m - k \\<le> n - (k::nat); k < m \\<rbrakk> \\<Longrightarrow> m \\<le> n\"", "lemma nat_diff_right_cancel_le2: \"\\<lbrakk> m - k \\<le> n - (k::nat); k \\<le> n \\<rbrakk> \\<Longrightarrow> m \\<le> n\"", "lemma nat_diff_left_cancel_eq1: \"\\<lbrakk> k - m = k - (n::nat); m < k \\<rbrakk> \\<Longrightarrow> m = n\"", "lemma nat_diff_left_cancel_eq2: \"\\<lbrakk> k - m = k - (n::nat); n < k \\<rbrakk> \\<Longrightarrow> m = n\"", "lemma nat_diff_right_cancel_eq1: \"\\<lbrakk> m - k = n - (k::nat); k < m \\<rbrakk> \\<Longrightarrow> m = n\"", "lemma nat_diff_right_cancel_eq2: \"\\<lbrakk> m - k = n - (k::nat); k < n \\<rbrakk> \\<Longrightarrow> m = n\"", "lemma eq_diff_left_iff: \"\\<lbrakk> (m::nat) \\<le> k; n \\<le> k\\<rbrakk> \\<Longrightarrow> (k - m = k - n) = (m = n)\"", "lemma eq_imp_diff_eq: \"m = (n::nat) \\<Longrightarrow> m - k = n - k\""], "translations": [["", "lemma add_1_Suc_conv: \"m + 1 = Suc m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m + 1 = Suc m", "by simp"], ["", "lemma sub_Suc0_sub_Suc_conv: \"b - a - Suc 0 = b - Suc a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b - a - Suc 0 = b - Suc a", "by simp"], ["", "lemma Suc_diff_Suc: \"m < n \\<Longrightarrow> Suc (n - Suc m) = n - m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow> Suc (n - Suc m) = n - m", "apply (rule subst[OF sub_Suc0_sub_Suc_conv])"], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow> Suc (n - m - Suc 0) = n - m", "apply (rule Suc_pred)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow> 0 < n - m", "apply (simp only: zero_less_diff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma nat_grSuc0_conv: \"(Suc 0 < n) = (n \\<noteq> 0 \\<and> n \\<noteq> Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc 0 < n) = (n \\<noteq> 0 \\<and> n \\<noteq> Suc 0)", "by fastforce"], ["", "lemma nat_geSucSuc0_conv: \"(Suc (Suc 0) \\<le> n) = (n \\<noteq> 0 \\<and> n \\<noteq> Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc (Suc 0) \\<le> n) = (n \\<noteq> 0 \\<and> n \\<noteq> Suc 0)", "by fastforce"], ["", "lemma nat_lessSucSuc0_conv: \"(n < Suc (Suc 0)) = (n = 0 \\<or> n = Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n < Suc (Suc 0)) = (n = 0 \\<or> n = Suc 0)", "by fastforce"], ["", "lemma nat_leSuc0_conv: \"(n \\<le> Suc 0) = (n = 0 \\<or> n = Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n \\<le> Suc 0) = (n = 0 \\<or> n = Suc 0)", "by fastforce"], ["", "lemma mult_pred: \"(m - Suc 0) * n = m * n - n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (m - Suc 0) * n = m * n - n", "by (simp add: diff_mult_distrib)"], ["", "lemma mult_pred_right: \"m * (n - Suc 0) = m * n - m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m * (n - Suc 0) = m * n - m", "by (simp add: diff_mult_distrib2)"], ["", "lemma gr_implies_gr0: \"m < (n::nat) \\<Longrightarrow> 0 < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow> 0 < n", "by simp"], ["", "corollary mult_cancel1_gr0: \"\n  (0::nat) < k \\<Longrightarrow> (k * m = k * n) = (m = n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> (k * m = k * n) = (m = n)", "by simp"], ["", "corollary mult_cancel2_gr0: \"\n  (0::nat) < k \\<Longrightarrow> (m * k = n * k) = (m = n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> (m * k = n * k) = (m = n)", "by simp"], ["", "corollary mult_le_cancel1_gr0: \"\n  (0::nat) < k \\<Longrightarrow> (k * m \\<le> k * n) = (m \\<le> n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> (k * m \\<le> k * n) = (m \\<le> n)", "by simp"], ["", "corollary mult_le_cancel2_gr0: \"\n  (0::nat) < k \\<Longrightarrow> (m * k \\<le> n * k) = (m \\<le> n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> (m * k \\<le> n * k) = (m \\<le> n)", "by simp"], ["", "lemma gr0_imp_self_le_mult1: \"0 < (k::nat) \\<Longrightarrow> m \\<le> m * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> m \\<le> m * k", "by (drule Suc_leI, drule mult_le_mono[OF order_refl], simp)"], ["", "lemma gr0_imp_self_le_mult2: \"0 < (k::nat) \\<Longrightarrow> m \\<le> k * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> m \\<le> k * m", "by (subst mult.commute, rule gr0_imp_self_le_mult1)"], ["", "lemma less_imp_Suc_mult_le: \"m < n \\<Longrightarrow> Suc m * k \\<le> n * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow> Suc m * k \\<le> n * k", "by (rule mult_le_mono1, simp)"], ["", "lemma less_imp_Suc_mult_pred_less: \"\\<lbrakk> m < n; 0 < k \\<rbrakk> \\<Longrightarrow> Suc m * k - Suc 0 < n * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; 0 < k\\<rbrakk>\n    \\<Longrightarrow> Suc m * k - Suc 0 < n * k", "apply (rule Suc_le_lessD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; 0 < k\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc m * k - Suc 0) \\<le> n * k", "apply (simp only: Suc_pred[OF nat_0_less_mult_iff[THEN iffD2, OF conjI, OF zero_less_Suc]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; 0 < k\\<rbrakk> \\<Longrightarrow> Suc m * k \\<le> n * k", "apply (rule less_imp_Suc_mult_le, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ord_zero_less_diff: \"(0 < (b::'a::ordered_ab_group_add) - a) = (a < b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) < b - a) = (a < b)", "by (simp add: less_diff_eq)"], ["", "lemma ord_zero_le_diff: \"(0 \\<le> (b::'a::ordered_ab_group_add) - a) = (a \\<le> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> b - a) = (a \\<le> b)", "by (simp add: le_diff_eq)"], ["", "text \\<open>\\<open>diff_diff_right\\<close> in rule format\\<close>"], ["", "lemmas diff_diff_right = Nat.diff_diff_right[rule_format]"], ["", "lemma less_add1: \"(0::nat) < j \\<Longrightarrow> i < i + j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> i < i + j", "by simp"], ["", "lemma less_add2: \"(0::nat) < j \\<Longrightarrow> i < j + i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow> i < j + i", "by simp"], ["", "lemma add_lessD2: \"i + j < (k::nat) \\<Longrightarrow> j < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i + j < k \\<Longrightarrow> j < k", "by simp"], ["", "lemma add_le_mono2: \"i \\<le> (j::nat) \\<Longrightarrow> k + i \\<le> k + j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> j \\<Longrightarrow> k + i \\<le> k + j", "by simp"], ["", "lemma add_less_mono2: \"i < (j::nat) \\<Longrightarrow> k + i < k + j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> k + i < k + j", "by simp"], ["", "lemma diff_less_self: \"\\<lbrakk> (0::nat) < i;  0 < j \\<rbrakk> \\<Longrightarrow> i - j < i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < i; 0 < j\\<rbrakk> \\<Longrightarrow> i - j < i", "by simp"], ["", "lemma\n  ge_less_neq_conv: \"((a::'a::linorder) \\<le> n) = (\\<forall>x. x < a \\<longrightarrow> n \\<noteq> x)\" and\n  le_greater_neq_conv: \"(n \\<le> (a::'a::linorder)) = (\\<forall>x. a < x \\<longrightarrow> n \\<noteq> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> n) = (\\<forall>x<a. n \\<noteq> x) &&&\n    (n \\<le> a) = (\\<forall>x>a. n \\<noteq> x)", "by (subst linorder_not_less[symmetric], blast)+"], ["", "lemma\n  greater_le_neq_conv: \"((a::'a::linorder) < n) = (\\<forall>x. x \\<le> a \\<longrightarrow> n \\<noteq> x)\" and\n  less_ge_neq_conv: \"(n < (a::'a::linorder)) = (\\<forall>x. a \\<le> x \\<longrightarrow> n \\<noteq> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a < n) = (\\<forall>x\\<le>a. n \\<noteq> x) &&&\n    (n < a) = (\\<forall>x\\<ge>a. n \\<noteq> x)", "by (subst linorder_not_le[symmetric], blast)+"], ["", "text \\<open>Lemmas for @term{abs} function\\<close>"], ["", "lemma leq_pos_imp_abs_leq: \"\\<lbrakk> 0 \\<le> (a::'a::ordered_ab_group_add_abs); a \\<le> b \\<rbrakk> \\<Longrightarrow> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> a; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "by simp"], ["", "lemma leq_neg_imp_abs_geq: \"\\<lbrakk> (a::'a::ordered_ab_group_add_abs) \\<le> 0; b \\<le> a \\<rbrakk> \\<Longrightarrow> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> (0::'a); b \\<le> a\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "by simp"], ["", "lemma abs_range: \"\\<lbrakk> 0 \\<le> (a::'a::{ordered_ab_group_add_abs,abs_if}); -a \\<le> x; x \\<le> a \\<rbrakk> \\<Longrightarrow> \\<bar>x\\<bar> \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> a; - a \\<le> x; x \\<le> a\\<rbrakk>\n    \\<Longrightarrow> \\<bar>x\\<bar> \\<le> a", "apply (clarsimp simp: abs_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> a; - a \\<le> x; x \\<le> a; x < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> - x \\<le> a", "apply (rule neg_le_iff_le[THEN iffD1], simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Lemmas for @term{sgn} function\\<close>"], ["", "lemma sgn_abs:\"(x::'a::linordered_idom) \\<noteq> 0 \\<Longrightarrow> \\<bar>sgn x\\<bar> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> (0::'a) \\<Longrightarrow> \\<bar>sgn x\\<bar> = (1::'a)", "by (case_tac \"x < 0\", simp+)"], ["", "lemma sgn_mult_abs:\"\\<bar>x\\<bar> * \\<bar>sgn (a::'a::linordered_idom)\\<bar> = \\<bar>x * sgn a\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> * \\<bar>sgn a\\<bar> = \\<bar>x * sgn a\\<bar>", "by (fastforce simp add: sgn_if abs_if)"], ["", "lemma abs_imp_sgn_abs: \"\\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> \\<bar>sgn (a::'a::linordered_idom)\\<bar> = \\<bar>sgn b\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow>\n    \\<bar>sgn a\\<bar> = \\<bar>sgn b\\<bar>", "by (fastforce simp add: abs_if)"], ["", "lemma sgn_mono: \"a \\<le> b \\<Longrightarrow> sgn (a::'a::{linordered_idom,linordered_semidom}) \\<le> sgn b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> sgn a \\<le> sgn b", "by (auto simp add: sgn_if)"], ["", "subsection \\<open>Additional facts about inequalities\\<close>"], ["", "lemma add_diff_le: \"k \\<le> n \\<Longrightarrow> m + k - n \\<le> (m::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> n \\<Longrightarrow> m + k - n \\<le> m", "by (case_tac \"m + k < n\", simp_all)"], ["", "lemma less_add_diff: \"k < (n::nat) \\<Longrightarrow> m < n + m - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> m < n + m - k", "by (rule add_less_imp_less_right[of _ k], simp)"], ["", "lemma add_diff_less: \"\\<lbrakk> k < n; 0 < m \\<rbrakk> \\<Longrightarrow> m + k - n < (m::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k < n; 0 < m\\<rbrakk> \\<Longrightarrow> m + k - n < m", "by (case_tac \"m + k < n\", simp_all)"], ["", "lemma add_le_imp_le_diff1: \"i + k \\<le> j \\<Longrightarrow> i \\<le> j - (k::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i + k \\<le> j \\<Longrightarrow> i \\<le> j - k", "by (case_tac \"k \\<le> j\", simp_all)"], ["", "lemma add_le_imp_le_diff2: \"k + i \\<le> j \\<Longrightarrow> i \\<le> j - (k::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k + i \\<le> j \\<Longrightarrow> i \\<le> j - k", "by simp"], ["", "lemma diff_less_imp_less_add: \"j - (k::nat) < i \\<Longrightarrow> j < i + k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j - k < i \\<Longrightarrow> j < i + k", "by simp"], ["", "lemma diff_less_conv: \"0 < i \\<Longrightarrow> (j - (k::nat) < i) = (j < i + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < i \\<Longrightarrow> (j - k < i) = (j < i + k)", "by (safe, simp_all)"], ["", "lemma le_diff_swap: \"\\<lbrakk> i \\<le> (k::nat); j \\<le> k \\<rbrakk> \\<Longrightarrow> (k - j \\<le> i) = (k - i \\<le> j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> k; j \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (k - j \\<le> i) = (k - i \\<le> j)", "by (safe, simp_all)"], ["", "lemma diff_less_imp_swap: \"\\<lbrakk> 0 < (i::nat); k - i < j \\<rbrakk> \\<Longrightarrow> (k - j < i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < i; k - i < j\\<rbrakk> \\<Longrightarrow> k - j < i", "by simp"], ["", "lemma diff_less_swap: \"\\<lbrakk> 0 < (i::nat); 0 < j \\<rbrakk> \\<Longrightarrow> (k - j < i) = (k - i < j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < i; 0 < j\\<rbrakk>\n    \\<Longrightarrow> (k - j < i) = (k - i < j)", "by (blast intro: diff_less_imp_swap)"], ["", "lemma less_diff_imp_less: \"(i::nat) < j - m \\<Longrightarrow> i < j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j - m \\<Longrightarrow> i < j", "by simp"], ["", "lemma le_diff_imp_le: \"(i::nat) \\<le> j - m \\<Longrightarrow> i \\<le> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> j - m \\<Longrightarrow> i \\<le> j", "by simp"], ["", "lemma less_diff_le_imp_less: \"\\<lbrakk> (i::nat) < j - m; n \\<le> m \\<rbrakk> \\<Longrightarrow> i < j - n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j - m; n \\<le> m\\<rbrakk> \\<Longrightarrow> i < j - n", "by simp"], ["", "lemma le_diff_le_imp_le: \"\\<lbrakk> (i::nat) \\<le> j - m; n \\<le> m \\<rbrakk> \\<Longrightarrow> i \\<le> j - n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> j - m; n \\<le> m\\<rbrakk>\n    \\<Longrightarrow> i \\<le> j - n", "by simp"], ["", "lemma le_imp_diff_le: \"(j::nat) \\<le> k \\<Longrightarrow> j - n \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<le> k \\<Longrightarrow> j - n \\<le> k", "by simp"], ["", "subsection \\<open>Inequalities for Suc and pred\\<close>"], ["", "corollary less_eq_le_pred: \"0 < (n::nat) \\<Longrightarrow> (m < n) = (m \\<le> n - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> (m < n) = (m \\<le> n - Suc 0)", "by (safe, simp_all)"], ["", "corollary less_imp_le_pred: \"m < n \\<Longrightarrow> m \\<le> n - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow> m \\<le> n - Suc 0", "by simp"], ["", "corollary le_pred_imp_less: \"\\<lbrakk> 0 < n; m \\<le> n - Suc 0 \\<rbrakk> \\<Longrightarrow> m < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; m \\<le> n - Suc 0\\<rbrakk> \\<Longrightarrow> m < n", "by simp"], ["", "corollary pred_less_eq_le: \"0 < m \\<Longrightarrow> (m - Suc 0 < n) = (m \\<le> n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m \\<Longrightarrow> (m - Suc 0 < n) = (m \\<le> n)", "by (safe, simp_all)"], ["", "corollary pred_less_imp_le: \"m - Suc 0 < n \\<Longrightarrow> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m - Suc 0 < n \\<Longrightarrow> m \\<le> n", "by simp"], ["", "corollary le_imp_pred_less: \"\\<lbrakk> 0 < m; m \\<le> n \\<rbrakk> \\<Longrightarrow> m - Suc 0 < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; m \\<le> n\\<rbrakk> \\<Longrightarrow> m - Suc 0 < n", "by simp"], ["", "lemma diff_add_inverse_Suc: \"n < m \\<Longrightarrow> n + (m - Suc n) = m - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < m \\<Longrightarrow> n + (m - Suc n) = m - Suc 0", "by simp"], ["", "lemma pred_mono: \"\\<lbrakk> m < n; 0 < m \\<rbrakk> \\<Longrightarrow> m - Suc 0 < n - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; 0 < m\\<rbrakk> \\<Longrightarrow> m - Suc 0 < n - Suc 0", "by simp"], ["", "corollary pred_Suc_mono: \"\\<lbrakk> m < Suc n; 0 < m \\<rbrakk> \\<Longrightarrow> m - Suc 0 < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m < Suc n; 0 < m\\<rbrakk> \\<Longrightarrow> m - Suc 0 < n", "by simp"], ["", "lemma Suc_less_pred_conv: \"(Suc m < n) = (m < n - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc m < n) = (m < n - Suc 0)", "by (safe, simp_all)"], ["", "lemma Suc_le_pred_conv: \"0 < n \\<Longrightarrow> (Suc m \\<le> n) = (m \\<le> n - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> (Suc m \\<le> n) = (m \\<le> n - Suc 0)", "by (safe, simp_all)"], ["", "lemma Suc_le_imp_le_pred: \"Suc m \\<le> n \\<Longrightarrow> m \\<le> n - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc m \\<le> n \\<Longrightarrow> m \\<le> n - Suc 0", "by simp"], ["", "subsection \\<open>Additional facts about cancellation in (in-)equalities\\<close>"], ["", "lemma diff_cancel_imp_eq: \"\\<lbrakk> 0 < (n::nat);  n + i - j = n \\<rbrakk> \\<Longrightarrow> i = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; n + i - j = n\\<rbrakk> \\<Longrightarrow> i = j", "by simp"], ["", "lemma nat_diff_left_cancel_less: \"k - m < k - (n::nat) \\<Longrightarrow> n < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k - m < k - n \\<Longrightarrow> n < m", "by simp"], ["", "lemma nat_diff_right_cancel_less: \"n - k < (m::nat) - k \\<Longrightarrow> n < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n - k < m - k \\<Longrightarrow> n < m", "by simp"], ["", "lemma nat_diff_left_cancel_le1: \"\\<lbrakk> k - m \\<le> k - (n::nat); m < k \\<rbrakk> \\<Longrightarrow> n \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k - m \\<le> k - n; m < k\\<rbrakk> \\<Longrightarrow> n \\<le> m", "by simp"], ["", "lemma nat_diff_left_cancel_le2: \"\\<lbrakk> k - m \\<le> k - (n::nat); n \\<le> k \\<rbrakk> \\<Longrightarrow> n \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k - m \\<le> k - n; n \\<le> k\\<rbrakk>\n    \\<Longrightarrow> n \\<le> m", "by simp"], ["", "lemma nat_diff_right_cancel_le1: \"\\<lbrakk> m - k \\<le> n - (k::nat); k < m \\<rbrakk> \\<Longrightarrow> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m - k \\<le> n - k; k < m\\<rbrakk> \\<Longrightarrow> m \\<le> n", "by simp"], ["", "lemma nat_diff_right_cancel_le2: \"\\<lbrakk> m - k \\<le> n - (k::nat); k \\<le> n \\<rbrakk> \\<Longrightarrow> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m - k \\<le> n - k; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m \\<le> n", "by simp"], ["", "lemma nat_diff_left_cancel_eq1: \"\\<lbrakk> k - m = k - (n::nat); m < k \\<rbrakk> \\<Longrightarrow> m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k - m = k - n; m < k\\<rbrakk> \\<Longrightarrow> m = n", "by simp"], ["", "lemma nat_diff_left_cancel_eq2: \"\\<lbrakk> k - m = k - (n::nat); n < k \\<rbrakk> \\<Longrightarrow> m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k - m = k - n; n < k\\<rbrakk> \\<Longrightarrow> m = n", "by simp"], ["", "lemma nat_diff_right_cancel_eq1: \"\\<lbrakk> m - k = n - (k::nat); k < m \\<rbrakk> \\<Longrightarrow> m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m - k = n - k; k < m\\<rbrakk> \\<Longrightarrow> m = n", "by simp"], ["", "lemma nat_diff_right_cancel_eq2: \"\\<lbrakk> m - k = n - (k::nat); k < n \\<rbrakk> \\<Longrightarrow> m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m - k = n - k; k < n\\<rbrakk> \\<Longrightarrow> m = n", "by simp"], ["", "lemma eq_diff_left_iff: \"\\<lbrakk> (m::nat) \\<le> k; n \\<le> k\\<rbrakk> \\<Longrightarrow> (k - m = k - n) = (m = n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> k; n \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (k - m = k - n) = (m = n)", "by (safe, simp_all)"], ["", "lemma eq_imp_diff_eq: \"m = (n::nat) \\<Longrightarrow> m - k = n - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = n \\<Longrightarrow> m - k = n - k", "by simp"], ["", "text \\<open>List of definitions and lemmas\\<close>"], ["", "thm\n  Nat.add_Suc_right\n  add_1_Suc_conv\n  sub_Suc0_sub_Suc_conv"], ["", "thm\n  Nat.mult_cancel1\n  Nat.mult_cancel2\n  mult_cancel1_gr0\n  mult_cancel2_gr0"], ["", "thm\n  Nat.add_lessD1\n  add_lessD2"], ["", "thm\n  Nat.zero_less_diff\n  ord_zero_less_diff\n  ord_zero_le_diff"], ["", "thm\n  le_add_diff\n  add_diff_le\n  less_add_diff\n  add_diff_less"], ["", "thm\n  Nat.le_diff_conv le_diff_conv2\n  Nat.less_diff_conv\n  diff_less_imp_less_add\n  diff_less_conv"], ["", "thm\n  le_diff_swap\n  diff_less_imp_swap\n  diff_less_swap"], ["", "thm\n  less_diff_imp_less\n  le_diff_imp_le"], ["", "thm\n  less_diff_le_imp_less\n  le_diff_le_imp_le"], ["", "thm\n  Nat.less_imp_diff_less\n  le_imp_diff_le"], ["", "thm\n  Nat.less_Suc_eq_le\n  less_eq_le_pred\n  less_imp_le_pred\n  le_pred_imp_less"], ["", "thm\n  Nat.Suc_le_eq\n  pred_less_eq_le\n  pred_less_imp_le\n  le_imp_pred_less"], ["", "thm\n  diff_cancel_imp_eq"], ["", "thm\n  diff_add_inverse_Suc"], ["", "thm\n  Nat.nat_add_left_cancel_less\n  Nat.nat_add_left_cancel_le\n  add_right_cancel\n  add_left_cancel\n  Nat.eq_diff_iff\n  Nat.less_diff_iff\n  Nat.le_diff_iff"], ["", "thm\n  nat_diff_left_cancel_less\n  nat_diff_right_cancel_less"], ["", "thm\n  nat_diff_left_cancel_le1\n  nat_diff_left_cancel_le2\n  nat_diff_right_cancel_le1\n  nat_diff_right_cancel_le2"], ["", "thm\n  nat_diff_left_cancel_eq1\n  nat_diff_left_cancel_eq2\n  nat_diff_right_cancel_eq1\n  nat_diff_right_cancel_eq2"], ["", "thm\n  Nat.eq_diff_iff\n  eq_diff_left_iff"], ["", "thm\n  add_right_cancel add_left_cancel\n  Nat.diff_le_mono\n  eq_imp_diff_eq"], ["", "end"]]}